// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CbhHaInstance extends pulumi.CustomResource {
    /**
     * Get an existing CbhHaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CbhHaInstanceState, opts?: pulumi.CustomResourceOptions): CbhHaInstance {
        return new CbhHaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/cbhHaInstance:CbhHaInstance';

    /**
     * Returns true if the given object is an instance of CbhHaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CbhHaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CbhHaInstance.__pulumiType;
    }

    /**
     * Specifies the size of the additional data disk for the CBH HA instance.
     */
    public readonly attachDiskSize!: pulumi.Output<number | undefined>;
    /**
     * Specifies whether auto renew is enabled.
     */
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    /**
     * Specifies the charging mode of the CBH HA instance.
     */
    public readonly chargingMode!: pulumi.Output<string>;
    /**
     * The data disk size of the CBH HA instance.
     */
    public /*out*/ readonly dataDiskSize!: pulumi.Output<number>;
    /**
     * Specifies the enterprise project ID to which the CBH HA instance belongs.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Specifies the product ID of the CBH server.
     */
    public readonly flavorId!: pulumi.Output<string>;
    /**
     * Specifies the floating IP address of the CBH HA instance.
     */
    public readonly floatingIp!: pulumi.Output<string>;
    /**
     * Specifies whether the IPv6 network is enabled.
     */
    public readonly ipv6Enable!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the availability zone name of the master instance.
     */
    public readonly masterAvailabilityZone!: pulumi.Output<string>;
    /**
     * The ID of the master instance.
     */
    public /*out*/ readonly masterId!: pulumi.Output<string>;
    /**
     * Specifies the private IP address of the master instance.
     */
    public readonly masterPrivateIp!: pulumi.Output<string>;
    /**
     * Specifies the name of the CBH HA instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the password for logging in to the management console.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Specifies the charging period of the CBH HA instance.
     */
    public readonly period!: pulumi.Output<number>;
    /**
     * Specifies the charging period unit of the CBH HA instance.
     */
    public readonly periodUnit!: pulumi.Output<string>;
    /**
     * Specifies the power action after the CBH HA instance is created.
     */
    public readonly powerAction!: pulumi.Output<string | undefined>;
    /**
     * The elastic IP address.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    public readonly publicIpId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the region in which to create the CBH HA instance.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the IDs of the security group.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Specifies the availability zone name of the slave instance.
     */
    public readonly slaveAvailabilityZone!: pulumi.Output<string>;
    /**
     * The ID of the slave instance.
     */
    public /*out*/ readonly slaveId!: pulumi.Output<string>;
    /**
     * Specifies the private IP address of the slave instance.
     */
    public readonly slavePrivateIp!: pulumi.Output<string>;
    /**
     * The status of the CBH HA instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the ID of a subnet.
     */
    public readonly subnetId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The current version of the CBH HA instance image.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * Specifies the ID of a VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a CbhHaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CbhHaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CbhHaInstanceArgs | CbhHaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CbhHaInstanceState | undefined;
            resourceInputs["attachDiskSize"] = state ? state.attachDiskSize : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["dataDiskSize"] = state ? state.dataDiskSize : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = state ? state.flavorId : undefined;
            resourceInputs["floatingIp"] = state ? state.floatingIp : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["masterAvailabilityZone"] = state ? state.masterAvailabilityZone : undefined;
            resourceInputs["masterId"] = state ? state.masterId : undefined;
            resourceInputs["masterPrivateIp"] = state ? state.masterPrivateIp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["powerAction"] = state ? state.powerAction : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["publicIpId"] = state ? state.publicIpId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["slaveAvailabilityZone"] = state ? state.slaveAvailabilityZone : undefined;
            resourceInputs["slaveId"] = state ? state.slaveId : undefined;
            resourceInputs["slavePrivateIp"] = state ? state.slavePrivateIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as CbhHaInstanceArgs | undefined;
            if ((!args || args.chargingMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'chargingMode'");
            }
            if ((!args || args.flavorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flavorId'");
            }
            if ((!args || args.masterAvailabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterAvailabilityZone'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.period === undefined) && !opts.urn) {
                throw new Error("Missing required property 'period'");
            }
            if ((!args || args.periodUnit === undefined) && !opts.urn) {
                throw new Error("Missing required property 'periodUnit'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.slaveAvailabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slaveAvailabilityZone'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["attachDiskSize"] = args ? args.attachDiskSize : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = args ? args.flavorId : undefined;
            resourceInputs["floatingIp"] = args ? args.floatingIp : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["masterAvailabilityZone"] = args ? args.masterAvailabilityZone : undefined;
            resourceInputs["masterPrivateIp"] = args ? args.masterPrivateIp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["powerAction"] = args ? args.powerAction : undefined;
            resourceInputs["publicIpId"] = args ? args.publicIpId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["slaveAvailabilityZone"] = args ? args.slaveAvailabilityZone : undefined;
            resourceInputs["slavePrivateIp"] = args ? args.slavePrivateIp : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["dataDiskSize"] = undefined /*out*/;
            resourceInputs["masterId"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["slaveId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CbhHaInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CbhHaInstance resources.
 */
export interface CbhHaInstanceState {
    /**
     * Specifies the size of the additional data disk for the CBH HA instance.
     */
    attachDiskSize?: pulumi.Input<number>;
    /**
     * Specifies whether auto renew is enabled.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the charging mode of the CBH HA instance.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * The data disk size of the CBH HA instance.
     */
    dataDiskSize?: pulumi.Input<number>;
    /**
     * Specifies the enterprise project ID to which the CBH HA instance belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the product ID of the CBH server.
     */
    flavorId?: pulumi.Input<string>;
    /**
     * Specifies the floating IP address of the CBH HA instance.
     */
    floatingIp?: pulumi.Input<string>;
    /**
     * Specifies whether the IPv6 network is enabled.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the availability zone name of the master instance.
     */
    masterAvailabilityZone?: pulumi.Input<string>;
    /**
     * The ID of the master instance.
     */
    masterId?: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the master instance.
     */
    masterPrivateIp?: pulumi.Input<string>;
    /**
     * Specifies the name of the CBH HA instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password for logging in to the management console.
     */
    password?: pulumi.Input<string>;
    /**
     * Specifies the charging period of the CBH HA instance.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the CBH HA instance.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the power action after the CBH HA instance is created.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * The elastic IP address.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the CBH HA instance.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the IDs of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Specifies the availability zone name of the slave instance.
     */
    slaveAvailabilityZone?: pulumi.Input<string>;
    /**
     * The ID of the slave instance.
     */
    slaveId?: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the slave instance.
     */
    slavePrivateIp?: pulumi.Input<string>;
    /**
     * The status of the CBH HA instance.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     */
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current version of the CBH HA instance image.
     */
    version?: pulumi.Input<string>;
    /**
     * Specifies the ID of a VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CbhHaInstance resource.
 */
export interface CbhHaInstanceArgs {
    /**
     * Specifies the size of the additional data disk for the CBH HA instance.
     */
    attachDiskSize?: pulumi.Input<number>;
    /**
     * Specifies whether auto renew is enabled.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the charging mode of the CBH HA instance.
     */
    chargingMode: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID to which the CBH HA instance belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the product ID of the CBH server.
     */
    flavorId: pulumi.Input<string>;
    /**
     * Specifies the floating IP address of the CBH HA instance.
     */
    floatingIp?: pulumi.Input<string>;
    /**
     * Specifies whether the IPv6 network is enabled.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the availability zone name of the master instance.
     */
    masterAvailabilityZone: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the master instance.
     */
    masterPrivateIp?: pulumi.Input<string>;
    /**
     * Specifies the name of the CBH HA instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password for logging in to the management console.
     */
    password: pulumi.Input<string>;
    /**
     * Specifies the charging period of the CBH HA instance.
     */
    period: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the CBH HA instance.
     */
    periodUnit: pulumi.Input<string>;
    /**
     * Specifies the power action after the CBH HA instance is created.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the CBH HA instance.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the IDs of the security group.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies the availability zone name of the slave instance.
     */
    slaveAvailabilityZone: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the slave instance.
     */
    slavePrivateIp?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     */
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the ID of a VPC.
     */
    vpcId: pulumi.Input<string>;
}
