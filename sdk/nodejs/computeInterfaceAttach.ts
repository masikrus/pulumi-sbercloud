// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ComputeInterfaceAttach extends pulumi.CustomResource {
    /**
     * Get an existing ComputeInterfaceAttach resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeInterfaceAttachState, opts?: pulumi.CustomResourceOptions): ComputeInterfaceAttach {
        return new ComputeInterfaceAttach(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/computeInterfaceAttach:ComputeInterfaceAttach';

    /**
     * Returns true if the given object is an instance of ComputeInterfaceAttach.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeInterfaceAttach {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeInterfaceAttach.__pulumiType;
    }

    public readonly fixedIp!: pulumi.Output<string>;
    public /*out*/ readonly fixedIpv6!: pulumi.Output<string>;
    public readonly instanceId!: pulumi.Output<string>;
    public readonly ipv6BandwidthId!: pulumi.Output<string | undefined>;
    public readonly ipv6Enable!: pulumi.Output<boolean>;
    public /*out*/ readonly mac!: pulumi.Output<string>;
    public readonly networkId!: pulumi.Output<string>;
    public readonly portId!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    public readonly sourceDestCheck!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ComputeInterfaceAttach resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeInterfaceAttachArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeInterfaceAttachArgs | ComputeInterfaceAttachState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeInterfaceAttachState | undefined;
            resourceInputs["fixedIp"] = state ? state.fixedIp : undefined;
            resourceInputs["fixedIpv6"] = state ? state.fixedIpv6 : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["ipv6BandwidthId"] = state ? state.ipv6BandwidthId : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["portId"] = state ? state.portId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["sourceDestCheck"] = state ? state.sourceDestCheck : undefined;
        } else {
            const args = argsOrState as ComputeInterfaceAttachArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["fixedIp"] = args ? args.fixedIp : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["ipv6BandwidthId"] = args ? args.ipv6BandwidthId : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["portId"] = args ? args.portId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["sourceDestCheck"] = args ? args.sourceDestCheck : undefined;
            resourceInputs["fixedIpv6"] = undefined /*out*/;
            resourceInputs["mac"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeInterfaceAttach.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ComputeInterfaceAttach resources.
 */
export interface ComputeInterfaceAttachState {
    fixedIp?: pulumi.Input<string>;
    fixedIpv6?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    ipv6BandwidthId?: pulumi.Input<string>;
    ipv6Enable?: pulumi.Input<boolean>;
    mac?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    portId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    sourceDestCheck?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ComputeInterfaceAttach resource.
 */
export interface ComputeInterfaceAttachArgs {
    fixedIp?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    ipv6BandwidthId?: pulumi.Input<string>;
    ipv6Enable?: pulumi.Input<boolean>;
    networkId?: pulumi.Input<string>;
    portId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    sourceDestCheck?: pulumi.Input<boolean>;
}
