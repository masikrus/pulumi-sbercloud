// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCceNodePool(args: GetCceNodePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetCceNodePoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getCceNodePool:getCceNodePool", {
        "clusterId": args.clusterId,
        "name": args.name,
        "nodePoolId": args.nodePoolId,
        "region": args.region,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getCceNodePool.
 */
export interface GetCceNodePoolArgs {
    clusterId: string;
    name?: string;
    nodePoolId?: string;
    region?: string;
    status?: string;
}

/**
 * A collection of values returned by getCceNodePool.
 */
export interface GetCceNodePoolResult {
    readonly availabilityZone: string;
    readonly clusterId: string;
    readonly currentNodeCount: number;
    readonly dataVolumes: outputs.GetCceNodePoolDataVolume[];
    readonly enterpriseProjectId: string;
    readonly extendParam: {[key: string]: string};
    readonly flavorId: string;
    readonly hostnameConfigs: outputs.GetCceNodePoolHostnameConfig[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly initialNodeCount: number;
    readonly keyPair: string;
    readonly labels: {[key: string]: string};
    readonly maxNodeCount: number;
    readonly maxPods: number;
    readonly minNodeCount: number;
    readonly name: string;
    readonly nodePoolId: string;
    readonly os: string;
    readonly priority: number;
    readonly region: string;
    readonly rootVolumes: outputs.GetCceNodePoolRootVolume[];
    readonly scaleDownCooldownTime: number;
    readonly scallEnable: boolean;
    readonly status: string;
    readonly subnetId: string;
    readonly tags: {[key: string]: string};
    readonly type: string;
}
export function getCceNodePoolOutput(args: GetCceNodePoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCceNodePoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getCceNodePool:getCceNodePool", {
        "clusterId": args.clusterId,
        "name": args.name,
        "nodePoolId": args.nodePoolId,
        "region": args.region,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getCceNodePool.
 */
export interface GetCceNodePoolOutputArgs {
    clusterId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nodePoolId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
