// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MapreduceJob extends pulumi.CustomResource {
    /**
     * Get an existing MapreduceJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MapreduceJobState, opts?: pulumi.CustomResourceOptions): MapreduceJob {
        return new MapreduceJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/mapreduceJob:MapreduceJob';

    /**
     * Returns true if the given object is an instance of MapreduceJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MapreduceJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MapreduceJob.__pulumiType;
    }

    public readonly clusterId!: pulumi.Output<string>;
    public /*out*/ readonly finishTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<string | undefined>;
    public readonly programParameters!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly programPath!: pulumi.Output<string | undefined>;
    public readonly region!: pulumi.Output<string>;
    public readonly serviceParameters!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly sql!: pulumi.Output<string | undefined>;
    public /*out*/ readonly startTime!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly submitTime!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a MapreduceJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MapreduceJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MapreduceJobArgs | MapreduceJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MapreduceJobState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["finishTime"] = state ? state.finishTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["programParameters"] = state ? state.programParameters : undefined;
            resourceInputs["programPath"] = state ? state.programPath : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["serviceParameters"] = state ? state.serviceParameters : undefined;
            resourceInputs["sql"] = state ? state.sql : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["submitTime"] = state ? state.submitTime : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as MapreduceJobArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["programParameters"] = args ? args.programParameters : undefined;
            resourceInputs["programPath"] = args ? args.programPath : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceParameters"] = args ? args.serviceParameters : undefined;
            resourceInputs["sql"] = args ? args.sql : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["finishTime"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["submitTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MapreduceJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MapreduceJob resources.
 */
export interface MapreduceJobState {
    clusterId?: pulumi.Input<string>;
    finishTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    programParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    programPath?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serviceParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sql?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    submitTime?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MapreduceJob resource.
 */
export interface MapreduceJobArgs {
    clusterId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    programParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    programPath?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serviceParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sql?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
