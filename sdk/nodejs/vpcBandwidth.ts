// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcBandwidth extends pulumi.CustomResource {
    /**
     * Get an existing VpcBandwidth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcBandwidthState, opts?: pulumi.CustomResourceOptions): VpcBandwidth {
        return new VpcBandwidth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/vpcBandwidth:VpcBandwidth';

    /**
     * Returns true if the given object is an instance of VpcBandwidth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcBandwidth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcBandwidth.__pulumiType;
    }

    public readonly autoRenew!: pulumi.Output<string | undefined>;
    public readonly bandwidthType!: pulumi.Output<string>;
    public readonly chargeMode!: pulumi.Output<string>;
    public readonly chargingMode!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    public readonly publicBorderGroup!: pulumi.Output<string>;
    public /*out*/ readonly publicips!: pulumi.Output<outputs.VpcBandwidthPublicip[]>;
    public readonly region!: pulumi.Output<string>;
    public /*out*/ readonly shareType!: pulumi.Output<string>;
    public readonly size!: pulumi.Output<number>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a VpcBandwidth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcBandwidthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcBandwidthArgs | VpcBandwidthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcBandwidthState | undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["bandwidthType"] = state ? state.bandwidthType : undefined;
            resourceInputs["chargeMode"] = state ? state.chargeMode : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["publicBorderGroup"] = state ? state.publicBorderGroup : undefined;
            resourceInputs["publicips"] = state ? state.publicips : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["shareType"] = state ? state.shareType : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as VpcBandwidthArgs | undefined;
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["bandwidthType"] = args ? args.bandwidthType : undefined;
            resourceInputs["chargeMode"] = args ? args.chargeMode : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["publicBorderGroup"] = args ? args.publicBorderGroup : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["publicips"] = undefined /*out*/;
            resourceInputs["shareType"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcBandwidth.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcBandwidth resources.
 */
export interface VpcBandwidthState {
    autoRenew?: pulumi.Input<string>;
    bandwidthType?: pulumi.Input<string>;
    chargeMode?: pulumi.Input<string>;
    chargingMode?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    publicBorderGroup?: pulumi.Input<string>;
    publicips?: pulumi.Input<pulumi.Input<inputs.VpcBandwidthPublicip>[]>;
    region?: pulumi.Input<string>;
    shareType?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcBandwidth resource.
 */
export interface VpcBandwidthArgs {
    autoRenew?: pulumi.Input<string>;
    bandwidthType?: pulumi.Input<string>;
    chargeMode?: pulumi.Input<string>;
    chargingMode?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    publicBorderGroup?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    size: pulumi.Input<number>;
}
