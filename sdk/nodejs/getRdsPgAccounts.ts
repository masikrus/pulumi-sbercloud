// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdsPgAccounts(args: GetRdsPgAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetRdsPgAccountsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getRdsPgAccounts:getRdsPgAccounts", {
        "instanceId": args.instanceId,
        "region": args.region,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdsPgAccounts.
 */
export interface GetRdsPgAccountsArgs {
    instanceId: string;
    region?: string;
    userName?: string;
}

/**
 * A collection of values returned by getRdsPgAccounts.
 */
export interface GetRdsPgAccountsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly region: string;
    readonly userName?: string;
    readonly users: outputs.GetRdsPgAccountsUser[];
}
export function getRdsPgAccountsOutput(args: GetRdsPgAccountsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRdsPgAccountsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getRdsPgAccounts:getRdsPgAccounts", {
        "instanceId": args.instanceId,
        "region": args.region,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdsPgAccounts.
 */
export interface GetRdsPgAccountsOutputArgs {
    instanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
