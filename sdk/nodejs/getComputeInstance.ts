// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeInstance(args?: GetComputeInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeInstanceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getComputeInstance:getComputeInstance", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "fixedIpV4": args.fixedIpV4,
        "flavorId": args.flavorId,
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceArgs {
    enterpriseProjectId?: string;
    fixedIpV4?: string;
    flavorId?: string;
    instanceId?: string;
    name?: string;
    region?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getComputeInstance.
 */
export interface GetComputeInstanceResult {
    readonly availabilityZone: string;
    readonly chargingMode: string;
    readonly enterpriseProjectId: string;
    readonly expiredTime: string;
    readonly fixedIpV4?: string;
    readonly flavorId: string;
    readonly flavorName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageId: string;
    readonly imageName: string;
    readonly instanceId?: string;
    readonly keyPair: string;
    readonly name: string;
    readonly networks: outputs.GetComputeInstanceNetwork[];
    readonly publicIp: string;
    readonly region: string;
    readonly schedulerHints: outputs.GetComputeInstanceSchedulerHint[];
    readonly securityGroupIds: string[];
    readonly securityGroups: string[];
    readonly status: string;
    readonly systemDiskId: string;
    readonly tags?: {[key: string]: string};
    readonly userData: string;
    readonly volumeAttacheds: outputs.GetComputeInstanceVolumeAttached[];
}
export function getComputeInstanceOutput(args?: GetComputeInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetComputeInstanceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getComputeInstance:getComputeInstance", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "fixedIpV4": args.fixedIpV4,
        "flavorId": args.flavorId,
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceOutputArgs {
    enterpriseProjectId?: pulumi.Input<string>;
    fixedIpV4?: pulumi.Input<string>;
    flavorId?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
