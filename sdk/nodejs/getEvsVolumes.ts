// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEvsVolumes(args?: GetEvsVolumesArgs, opts?: pulumi.InvokeOptions): Promise<GetEvsVolumesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getEvsVolumes:getEvsVolumes", {
        "availabilityZone": args.availabilityZone,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "serverId": args.serverId,
        "shareable": args.shareable,
        "status": args.status,
        "tags": args.tags,
        "volumeId": args.volumeId,
        "volumeTypeId": args.volumeTypeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEvsVolumes.
 */
export interface GetEvsVolumesArgs {
    availabilityZone?: string;
    enterpriseProjectId?: string;
    name?: string;
    region?: string;
    serverId?: string;
    shareable?: boolean;
    status?: string;
    tags?: {[key: string]: string};
    volumeId?: string;
    volumeTypeId?: string;
}

/**
 * A collection of values returned by getEvsVolumes.
 */
export interface GetEvsVolumesResult {
    readonly availabilityZone?: string;
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly region?: string;
    readonly serverId?: string;
    readonly shareable?: boolean;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly volumeId?: string;
    readonly volumeTypeId?: string;
    readonly volumes: outputs.GetEvsVolumesVolume[];
}
export function getEvsVolumesOutput(args?: GetEvsVolumesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEvsVolumesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getEvsVolumes:getEvsVolumes", {
        "availabilityZone": args.availabilityZone,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "serverId": args.serverId,
        "shareable": args.shareable,
        "status": args.status,
        "tags": args.tags,
        "volumeId": args.volumeId,
        "volumeTypeId": args.volumeTypeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEvsVolumes.
 */
export interface GetEvsVolumesOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serverId?: pulumi.Input<string>;
    shareable?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    volumeId?: pulumi.Input<string>;
    volumeTypeId?: pulumi.Input<string>;
}
