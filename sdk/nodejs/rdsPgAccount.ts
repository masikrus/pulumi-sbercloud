// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RdsPgAccount extends pulumi.CustomResource {
    /**
     * Get an existing RdsPgAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsPgAccountState, opts?: pulumi.CustomResourceOptions): RdsPgAccount {
        return new RdsPgAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/rdsPgAccount:RdsPgAccount';

    /**
     * Returns true if the given object is an instance of RdsPgAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsPgAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsPgAccount.__pulumiType;
    }

    /**
     * Indicates the permission attributes of the account.
     */
    public /*out*/ readonly attributes!: pulumi.Output<outputs.RdsPgAccountAttribute[]>;
    /**
     * Specifies the remarks of the DB account.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the RDS PostgreSQL instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * schema: Deprecated
     */
    public readonly memberofs!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the username of the DB account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the password of the DB account.
     */
    public readonly password!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a RdsPgAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RdsPgAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsPgAccountArgs | RdsPgAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsPgAccountState | undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["memberofs"] = state ? state.memberofs : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as RdsPgAccountArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["memberofs"] = args ? args.memberofs : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["attributes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RdsPgAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RdsPgAccount resources.
 */
export interface RdsPgAccountState {
    /**
     * Indicates the permission attributes of the account.
     */
    attributes?: pulumi.Input<pulumi.Input<inputs.RdsPgAccountAttribute>[]>;
    /**
     * Specifies the remarks of the DB account.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS PostgreSQL instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * schema: Deprecated
     */
    memberofs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the username of the DB account.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password of the DB account.
     */
    password?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RdsPgAccount resource.
 */
export interface RdsPgAccountArgs {
    /**
     * Specifies the remarks of the DB account.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS PostgreSQL instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * schema: Deprecated
     */
    memberofs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the username of the DB account.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password of the DB account.
     */
    password: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
