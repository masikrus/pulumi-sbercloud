// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DmsRabbitmqInstance extends pulumi.CustomResource {
    /**
     * Get an existing DmsRabbitmqInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsRabbitmqInstanceState, opts?: pulumi.CustomResourceOptions): DmsRabbitmqInstance {
        return new DmsRabbitmqInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/dmsRabbitmqInstance:DmsRabbitmqInstance';

    /**
     * Returns true if the given object is an instance of DmsRabbitmqInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsRabbitmqInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsRabbitmqInstance.__pulumiType;
    }

    public readonly accessUser!: pulumi.Output<string | undefined>;
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    /**
     * schema: Required
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availabilityZones" instead.
     */
    public readonly availableZones!: pulumi.Output<string[]>;
    public readonly brokerNum!: pulumi.Output<number>;
    public readonly chargingMode!: pulumi.Output<string>;
    public /*out*/ readonly connectAddress!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enableAcl!: pulumi.Output<boolean>;
    public /*out*/ readonly enablePublicIp!: pulumi.Output<boolean>;
    public /*out*/ readonly engine!: pulumi.Output<string>;
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    public /*out*/ readonly extendTimes!: pulumi.Output<number>;
    public readonly flavorId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly isLogicalVolume!: pulumi.Output<boolean>;
    public readonly maintainBegin!: pulumi.Output<string>;
    public readonly maintainEnd!: pulumi.Output<string>;
    public /*out*/ readonly managementConnectAddress!: pulumi.Output<string>;
    /**
     * @deprecated typo in manegement_connect_address, please use "managementConnectAddress" instead.
     */
    public /*out*/ readonly manegementConnectAddress!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkId!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    public /*out*/ readonly port!: pulumi.Output<number>;
    /**
     * @deprecated product_id has deprecated, please use "flavorId" instead.
     */
    public readonly productId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly publicIpAddress!: pulumi.Output<string>;
    public readonly publicIpId!: pulumi.Output<string | undefined>;
    public readonly region!: pulumi.Output<string>;
    public /*out*/ readonly resourceSpecCode!: pulumi.Output<string>;
    public readonly securityGroupId!: pulumi.Output<string>;
    public /*out*/ readonly specification!: pulumi.Output<string>;
    public readonly sslEnable!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly storageSpace!: pulumi.Output<number>;
    public readonly storageSpecCode!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    public /*out*/ readonly usedStorageSpace!: pulumi.Output<number>;
    public /*out*/ readonly userId!: pulumi.Output<string>;
    public /*out*/ readonly userName!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a DmsRabbitmqInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsRabbitmqInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsRabbitmqInstanceArgs | DmsRabbitmqInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsRabbitmqInstanceState | undefined;
            resourceInputs["accessUser"] = state ? state.accessUser : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["availableZones"] = state ? state.availableZones : undefined;
            resourceInputs["brokerNum"] = state ? state.brokerNum : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["connectAddress"] = state ? state.connectAddress : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableAcl"] = state ? state.enableAcl : undefined;
            resourceInputs["enablePublicIp"] = state ? state.enablePublicIp : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["extendTimes"] = state ? state.extendTimes : undefined;
            resourceInputs["flavorId"] = state ? state.flavorId : undefined;
            resourceInputs["isLogicalVolume"] = state ? state.isLogicalVolume : undefined;
            resourceInputs["maintainBegin"] = state ? state.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = state ? state.maintainEnd : undefined;
            resourceInputs["managementConnectAddress"] = state ? state.managementConnectAddress : undefined;
            resourceInputs["manegementConnectAddress"] = state ? state.manegementConnectAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["publicIpAddress"] = state ? state.publicIpAddress : undefined;
            resourceInputs["publicIpId"] = state ? state.publicIpId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceSpecCode"] = state ? state.resourceSpecCode : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["specification"] = state ? state.specification : undefined;
            resourceInputs["sslEnable"] = state ? state.sslEnable : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageSpace"] = state ? state.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = state ? state.storageSpecCode : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usedStorageSpace"] = state ? state.usedStorageSpace : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as DmsRabbitmqInstanceArgs | undefined;
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.storageSpecCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSpecCode'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accessUser"] = args ? args.accessUser : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["availableZones"] = args ? args.availableZones : undefined;
            resourceInputs["brokerNum"] = args ? args.brokerNum : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableAcl"] = args ? args.enableAcl : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = args ? args.flavorId : undefined;
            resourceInputs["maintainBegin"] = args ? args.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = args ? args.maintainEnd : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["publicIpId"] = args ? args.publicIpId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["sslEnable"] = args ? args.sslEnable : undefined;
            resourceInputs["storageSpace"] = args ? args.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = args ? args.storageSpecCode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["connectAddress"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["enablePublicIp"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["extendTimes"] = undefined /*out*/;
            resourceInputs["isLogicalVolume"] = undefined /*out*/;
            resourceInputs["managementConnectAddress"] = undefined /*out*/;
            resourceInputs["manegementConnectAddress"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["publicIpAddress"] = undefined /*out*/;
            resourceInputs["resourceSpecCode"] = undefined /*out*/;
            resourceInputs["specification"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["usedStorageSpace"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DmsRabbitmqInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DmsRabbitmqInstance resources.
 */
export interface DmsRabbitmqInstanceState {
    accessUser?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availabilityZones" instead.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    brokerNum?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    connectAddress?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableAcl?: pulumi.Input<boolean>;
    enablePublicIp?: pulumi.Input<boolean>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    extendTimes?: pulumi.Input<number>;
    flavorId?: pulumi.Input<string>;
    isLogicalVolume?: pulumi.Input<boolean>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    managementConnectAddress?: pulumi.Input<string>;
    /**
     * @deprecated typo in manegement_connect_address, please use "managementConnectAddress" instead.
     */
    manegementConnectAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    /**
     * @deprecated product_id has deprecated, please use "flavorId" instead.
     */
    productId?: pulumi.Input<string>;
    publicIpAddress?: pulumi.Input<string>;
    publicIpId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceSpecCode?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    specification?: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    storageSpace?: pulumi.Input<number>;
    storageSpecCode?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
    usedStorageSpace?: pulumi.Input<number>;
    userId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DmsRabbitmqInstance resource.
 */
export interface DmsRabbitmqInstanceArgs {
    accessUser?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availabilityZones" instead.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    brokerNum?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableAcl?: pulumi.Input<boolean>;
    engineVersion?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    flavorId?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    /**
     * @deprecated product_id has deprecated, please use "flavorId" instead.
     */
    productId?: pulumi.Input<string>;
    publicIpId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupId: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    storageSpace?: pulumi.Input<number>;
    storageSpecCode: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId: pulumi.Input<string>;
}
