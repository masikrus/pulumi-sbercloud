// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LtsStream extends pulumi.CustomResource {
    /**
     * Get an existing LtsStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LtsStreamState, opts?: pulumi.CustomResourceOptions): LtsStream {
        return new LtsStream(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/ltsStream:LtsStream';

    /**
     * Returns true if the given object is an instance of LtsStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LtsStream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LtsStream.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    public /*out*/ readonly filterCount!: pulumi.Output<number>;
    public readonly groupId!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly streamName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly ttlInDays!: pulumi.Output<number>;

    /**
     * Create a LtsStream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LtsStreamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LtsStreamArgs | LtsStreamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LtsStreamState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["filterCount"] = state ? state.filterCount : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["streamName"] = state ? state.streamName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["ttlInDays"] = state ? state.ttlInDays : undefined;
        } else {
            const args = argsOrState as LtsStreamArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.streamName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamName'");
            }
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["streamName"] = args ? args.streamName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["ttlInDays"] = args ? args.ttlInDays : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["filterCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LtsStream.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LtsStream resources.
 */
export interface LtsStreamState {
    createdAt?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    filterCount?: pulumi.Input<number>;
    groupId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    streamName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ttlInDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a LtsStream resource.
 */
export interface LtsStreamArgs {
    enterpriseProjectId?: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ttlInDays?: pulumi.Input<number>;
}
