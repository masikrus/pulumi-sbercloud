// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdsInstances(args?: GetRdsInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetRdsInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getRdsInstances:getRdsInstances", {
        "datastoreType": args.datastoreType,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "subnetId": args.subnetId,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdsInstances.
 */
export interface GetRdsInstancesArgs {
    datastoreType?: string;
    enterpriseProjectId?: string;
    name?: string;
    region?: string;
    subnetId?: string;
    type?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getRdsInstances.
 */
export interface GetRdsInstancesResult {
    readonly datastoreType?: string;
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instances: outputs.GetRdsInstancesInstance[];
    readonly name?: string;
    readonly region: string;
    readonly subnetId?: string;
    readonly type?: string;
    readonly vpcId?: string;
}
export function getRdsInstancesOutput(args?: GetRdsInstancesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRdsInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getRdsInstances:getRdsInstances", {
        "datastoreType": args.datastoreType,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "subnetId": args.subnetId,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdsInstances.
 */
export interface GetRdsInstancesOutputArgs {
    datastoreType?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
