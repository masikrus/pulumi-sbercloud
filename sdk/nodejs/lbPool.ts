// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LbPool extends pulumi.CustomResource {
    /**
     * Get an existing LbPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbPoolState, opts?: pulumi.CustomResourceOptions): LbPool {
        return new LbPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/lbPool:LbPool';

    /**
     * Returns true if the given object is an instance of LbPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LbPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LbPool.__pulumiType;
    }

    /**
     * @deprecated this field is deprecated
     */
    public readonly adminStateUp!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly lbMethod!: pulumi.Output<string>;
    public readonly listenerId!: pulumi.Output<string>;
    public readonly loadbalancerId!: pulumi.Output<string>;
    public /*out*/ readonly monitorId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly persistences!: pulumi.Output<outputs.LbPoolPersistence[] | undefined>;
    public readonly protectionReason!: pulumi.Output<string | undefined>;
    public readonly protectionStatus!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    /**
     * @deprecated tenant_id is deprecated
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a LbPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbPoolArgs | LbPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbPoolState | undefined;
            resourceInputs["adminStateUp"] = state ? state.adminStateUp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lbMethod"] = state ? state.lbMethod : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["loadbalancerId"] = state ? state.loadbalancerId : undefined;
            resourceInputs["monitorId"] = state ? state.monitorId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["persistences"] = state ? state.persistences : undefined;
            resourceInputs["protectionReason"] = state ? state.protectionReason : undefined;
            resourceInputs["protectionStatus"] = state ? state.protectionStatus : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as LbPoolArgs | undefined;
            if ((!args || args.lbMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lbMethod'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["adminStateUp"] = args ? args.adminStateUp : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["lbMethod"] = args ? args.lbMethod : undefined;
            resourceInputs["listenerId"] = args ? args.listenerId : undefined;
            resourceInputs["loadbalancerId"] = args ? args.loadbalancerId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["persistences"] = args ? args.persistences : undefined;
            resourceInputs["protectionReason"] = args ? args.protectionReason : undefined;
            resourceInputs["protectionStatus"] = args ? args.protectionStatus : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["monitorId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LbPool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LbPool resources.
 */
export interface LbPoolState {
    /**
     * @deprecated this field is deprecated
     */
    adminStateUp?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    lbMethod?: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadbalancerId?: pulumi.Input<string>;
    monitorId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistences?: pulumi.Input<pulumi.Input<inputs.LbPoolPersistence>[]>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * @deprecated tenant_id is deprecated
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LbPool resource.
 */
export interface LbPoolArgs {
    /**
     * @deprecated this field is deprecated
     */
    adminStateUp?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    lbMethod: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadbalancerId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistences?: pulumi.Input<pulumi.Input<inputs.LbPoolPersistence>[]>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * @deprecated tenant_id is deprecated
     */
    tenantId?: pulumi.Input<string>;
}
