// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcRoutes(args?: GetVpcRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcRoutesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getVpcRoutes:getVpcRoutes", {
        "destination": args.destination,
        "region": args.region,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcRoutes.
 */
export interface GetVpcRoutesArgs {
    destination?: string;
    region?: string;
    type?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getVpcRoutes.
 */
export interface GetVpcRoutesResult {
    readonly destination?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly routes: outputs.GetVpcRoutesRoute[];
    readonly type?: string;
    readonly vpcId?: string;
}
export function getVpcRoutesOutput(args?: GetVpcRoutesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcRoutesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getVpcRoutes:getVpcRoutes", {
        "destination": args.destination,
        "region": args.region,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcRoutes.
 */
export interface GetVpcRoutesOutputArgs {
    destination?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
