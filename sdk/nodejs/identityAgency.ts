// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IdentityAgency extends pulumi.CustomResource {
    /**
     * Get an existing IdentityAgency resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityAgencyState, opts?: pulumi.CustomResourceOptions): IdentityAgency {
        return new IdentityAgency(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/identityAgency:IdentityAgency';

    /**
     * Returns true if the given object is an instance of IdentityAgency.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityAgency {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityAgency.__pulumiType;
    }

    public readonly allResourcesRoles!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * schema: Required
     */
    public readonly delegatedDomainName!: pulumi.Output<string | undefined>;
    /**
     * schema: Internal
     */
    public readonly delegatedServiceName!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly domainRoles!: pulumi.Output<string[] | undefined>;
    public readonly duration!: pulumi.Output<string | undefined>;
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly projectRoles!: pulumi.Output<outputs.IdentityAgencyProjectRole[] | undefined>;

    /**
     * Create a IdentityAgency resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IdentityAgencyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityAgencyArgs | IdentityAgencyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityAgencyState | undefined;
            resourceInputs["allResourcesRoles"] = state ? state.allResourcesRoles : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["delegatedDomainName"] = state ? state.delegatedDomainName : undefined;
            resourceInputs["delegatedServiceName"] = state ? state.delegatedServiceName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainRoles"] = state ? state.domainRoles : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectRoles"] = state ? state.projectRoles : undefined;
        } else {
            const args = argsOrState as IdentityAgencyArgs | undefined;
            resourceInputs["allResourcesRoles"] = args ? args.allResourcesRoles : undefined;
            resourceInputs["delegatedDomainName"] = args ? args.delegatedDomainName : undefined;
            resourceInputs["delegatedServiceName"] = args ? args.delegatedServiceName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainRoles"] = args ? args.domainRoles : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectRoles"] = args ? args.projectRoles : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IdentityAgency.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IdentityAgency resources.
 */
export interface IdentityAgencyState {
    allResourcesRoles?: pulumi.Input<pulumi.Input<string>[]>;
    createTime?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    delegatedDomainName?: pulumi.Input<string>;
    /**
     * schema: Internal
     */
    delegatedServiceName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainRoles?: pulumi.Input<pulumi.Input<string>[]>;
    duration?: pulumi.Input<string>;
    expireTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectRoles?: pulumi.Input<pulumi.Input<inputs.IdentityAgencyProjectRole>[]>;
}

/**
 * The set of arguments for constructing a IdentityAgency resource.
 */
export interface IdentityAgencyArgs {
    allResourcesRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * schema: Required
     */
    delegatedDomainName?: pulumi.Input<string>;
    /**
     * schema: Internal
     */
    delegatedServiceName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainRoles?: pulumi.Input<pulumi.Input<string>[]>;
    duration?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectRoles?: pulumi.Input<pulumi.Input<inputs.IdentityAgencyProjectRole>[]>;
}
