// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcAddressGroup extends pulumi.CustomResource {
    /**
     * Get an existing VpcAddressGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcAddressGroupState, opts?: pulumi.CustomResourceOptions): VpcAddressGroup {
        return new VpcAddressGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/vpcAddressGroup:VpcAddressGroup';

    /**
     * Returns true if the given object is an instance of VpcAddressGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcAddressGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcAddressGroup.__pulumiType;
    }

    public readonly addresses!: pulumi.Output<string[]>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    public readonly ipExtraSets!: pulumi.Output<outputs.VpcAddressGroupIpExtraSet[]>;
    public readonly ipVersion!: pulumi.Output<number | undefined>;
    public readonly maxCapacity!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a VpcAddressGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcAddressGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcAddressGroupArgs | VpcAddressGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcAddressGroupState | undefined;
            resourceInputs["addresses"] = state ? state.addresses : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["ipExtraSets"] = state ? state.ipExtraSets : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["maxCapacity"] = state ? state.maxCapacity : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as VpcAddressGroupArgs | undefined;
            resourceInputs["addresses"] = args ? args.addresses : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["ipExtraSets"] = args ? args.ipExtraSets : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcAddressGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcAddressGroup resources.
 */
export interface VpcAddressGroupState {
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    forceDestroy?: pulumi.Input<boolean>;
    ipExtraSets?: pulumi.Input<pulumi.Input<inputs.VpcAddressGroupIpExtraSet>[]>;
    ipVersion?: pulumi.Input<number>;
    maxCapacity?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcAddressGroup resource.
 */
export interface VpcAddressGroupArgs {
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    forceDestroy?: pulumi.Input<boolean>;
    ipExtraSets?: pulumi.Input<pulumi.Input<inputs.VpcAddressGroupIpExtraSet>[]>;
    ipVersion?: pulumi.Input<number>;
    maxCapacity?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
