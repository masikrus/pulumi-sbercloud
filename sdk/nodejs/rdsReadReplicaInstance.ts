// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RdsReadReplicaInstance extends pulumi.CustomResource {
    /**
     * Get an existing RdsReadReplicaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsReadReplicaInstanceState, opts?: pulumi.CustomResourceOptions): RdsReadReplicaInstance {
        return new RdsReadReplicaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/rdsReadReplicaInstance:RdsReadReplicaInstance';

    /**
     * Returns true if the given object is an instance of RdsReadReplicaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsReadReplicaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsReadReplicaInstance.__pulumiType;
    }

    public readonly autoRenew!: pulumi.Output<string | undefined>;
    public readonly availabilityZone!: pulumi.Output<string>;
    public readonly chargingMode!: pulumi.Output<string>;
    public readonly db!: pulumi.Output<outputs.RdsReadReplicaInstanceDb>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    public readonly fixedIp!: pulumi.Output<string>;
    public readonly flavor!: pulumi.Output<string>;
    public readonly maintainBegin!: pulumi.Output<string>;
    public readonly maintainEnd!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<outputs.RdsReadReplicaInstanceParameter[]>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    public readonly primaryInstanceId!: pulumi.Output<string>;
    public /*out*/ readonly privateIps!: pulumi.Output<string[]>;
    public /*out*/ readonly publicIps!: pulumi.Output<string[]>;
    public readonly region!: pulumi.Output<string>;
    public readonly securityGroupId!: pulumi.Output<string>;
    public readonly sslEnable!: pulumi.Output<boolean>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly subnetId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    public readonly volume!: pulumi.Output<outputs.RdsReadReplicaInstanceVolume>;
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a RdsReadReplicaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RdsReadReplicaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsReadReplicaInstanceArgs | RdsReadReplicaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsReadReplicaInstanceState | undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["db"] = state ? state.db : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["fixedIp"] = state ? state.fixedIp : undefined;
            resourceInputs["flavor"] = state ? state.flavor : undefined;
            resourceInputs["maintainBegin"] = state ? state.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = state ? state.maintainEnd : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["primaryInstanceId"] = state ? state.primaryInstanceId : undefined;
            resourceInputs["privateIps"] = state ? state.privateIps : undefined;
            resourceInputs["publicIps"] = state ? state.publicIps : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["sslEnable"] = state ? state.sslEnable : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["volume"] = state ? state.volume : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as RdsReadReplicaInstanceArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if ((!args || args.flavor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flavor'");
            }
            if ((!args || args.primaryInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryInstanceId'");
            }
            if ((!args || args.volume === undefined) && !opts.urn) {
                throw new Error("Missing required property 'volume'");
            }
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["db"] = args ? args.db : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["fixedIp"] = args ? args.fixedIp : undefined;
            resourceInputs["flavor"] = args ? args.flavor : undefined;
            resourceInputs["maintainBegin"] = args ? args.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = args ? args.maintainEnd : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["primaryInstanceId"] = args ? args.primaryInstanceId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["sslEnable"] = args ? args.sslEnable : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["volume"] = args ? args.volume : undefined;
            resourceInputs["privateIps"] = undefined /*out*/;
            resourceInputs["publicIps"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subnetId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RdsReadReplicaInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RdsReadReplicaInstance resources.
 */
export interface RdsReadReplicaInstanceState {
    autoRenew?: pulumi.Input<string>;
    availabilityZone?: pulumi.Input<string>;
    chargingMode?: pulumi.Input<string>;
    db?: pulumi.Input<inputs.RdsReadReplicaInstanceDb>;
    description?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    fixedIp?: pulumi.Input<string>;
    flavor?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.RdsReadReplicaInstanceParameter>[]>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    primaryInstanceId?: pulumi.Input<string>;
    privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    publicIps?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
    volume?: pulumi.Input<inputs.RdsReadReplicaInstanceVolume>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RdsReadReplicaInstance resource.
 */
export interface RdsReadReplicaInstanceArgs {
    autoRenew?: pulumi.Input<string>;
    availabilityZone: pulumi.Input<string>;
    chargingMode?: pulumi.Input<string>;
    db?: pulumi.Input<inputs.RdsReadReplicaInstanceDb>;
    description?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    fixedIp?: pulumi.Input<string>;
    flavor: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.RdsReadReplicaInstanceParameter>[]>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    primaryInstanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    volume: pulumi.Input<inputs.RdsReadReplicaInstanceVolume>;
}
