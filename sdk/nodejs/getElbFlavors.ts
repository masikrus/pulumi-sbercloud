// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElbFlavors(args?: GetElbFlavorsArgs, opts?: pulumi.InvokeOptions): Promise<GetElbFlavorsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getElbFlavors:getElbFlavors", {
        "bandwidth": args.bandwidth,
        "cps": args.cps,
        "maxConnections": args.maxConnections,
        "name": args.name,
        "qps": args.qps,
        "region": args.region,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getElbFlavors.
 */
export interface GetElbFlavorsArgs {
    bandwidth?: number;
    cps?: number;
    maxConnections?: number;
    name?: string;
    qps?: number;
    region?: string;
    type?: string;
}

/**
 * A collection of values returned by getElbFlavors.
 */
export interface GetElbFlavorsResult {
    readonly bandwidth?: number;
    readonly cps?: number;
    readonly flavors: outputs.GetElbFlavorsFlavor[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly maxConnections?: number;
    readonly name?: string;
    readonly qps?: number;
    readonly region: string;
    readonly type?: string;
}
export function getElbFlavorsOutput(args?: GetElbFlavorsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetElbFlavorsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getElbFlavors:getElbFlavors", {
        "bandwidth": args.bandwidth,
        "cps": args.cps,
        "maxConnections": args.maxConnections,
        "name": args.name,
        "qps": args.qps,
        "region": args.region,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getElbFlavors.
 */
export interface GetElbFlavorsOutputArgs {
    bandwidth?: pulumi.Input<number>;
    cps?: pulumi.Input<number>;
    maxConnections?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    qps?: pulumi.Input<number>;
    region?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
