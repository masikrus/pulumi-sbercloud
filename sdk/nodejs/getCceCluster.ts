// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCceCluster(args?: GetCceClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetCceClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getCceCluster:getCceCluster", {
        "clusterType": args.clusterType,
        "id": args.id,
        "name": args.name,
        "region": args.region,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCceCluster.
 */
export interface GetCceClusterArgs {
    clusterType?: string;
    id?: string;
    name?: string;
    region?: string;
    status?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getCceCluster.
 */
export interface GetCceClusterResult {
    readonly authenticationMode: string;
    readonly billingMode: number;
    readonly certificateClusters: outputs.GetCceClusterCertificateCluster[];
    readonly certificateUsers: outputs.GetCceClusterCertificateUser[];
    readonly clusterType: string;
    readonly clusterVersion: string;
    readonly containerNetworkCidr: string;
    readonly containerNetworkType: string;
    readonly description: string;
    readonly endpoints: outputs.GetCceClusterEndpoint[];
    readonly eniSubnetCidr: string;
    readonly eniSubnetId: string;
    readonly enterpriseProjectId: string;
    readonly flavorId: string;
    readonly highwaySubnetId: string;
    readonly id: string;
    readonly kubeConfigRaw: string;
    readonly masters: outputs.GetCceClusterMaster[];
    readonly name: string;
    readonly region: string;
    readonly securityGroupId: string;
    readonly serviceNetworkCidr: string;
    readonly status: string;
    readonly subnetId: string;
    readonly vpcId: string;
}
export function getCceClusterOutput(args?: GetCceClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCceClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getCceCluster:getCceCluster", {
        "clusterType": args.clusterType,
        "id": args.id,
        "name": args.name,
        "region": args.region,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCceCluster.
 */
export interface GetCceClusterOutputArgs {
    clusterType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
