// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CdmCluster extends pulumi.CustomResource {
    /**
     * Get an existing CdmCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdmClusterState, opts?: pulumi.CustomResourceOptions): CdmCluster {
        return new CdmCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/cdmCluster:CdmCluster';

    /**
     * Returns true if the given object is an instance of CdmCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdmCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdmCluster.__pulumiType;
    }

    public readonly availabilityZone!: pulumi.Output<string>;
    public /*out*/ readonly created!: pulumi.Output<string>;
    public readonly emails!: pulumi.Output<string[] | undefined>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    public readonly flavorId!: pulumi.Output<string>;
    public /*out*/ readonly flavorName!: pulumi.Output<string>;
    public /*out*/ readonly instances!: pulumi.Output<outputs.CdmClusterInstance[]>;
    public readonly isAutoOff!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly phoneNums!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly publicEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly scheduleBootTime!: pulumi.Output<string>;
    public readonly scheduleOffTime!: pulumi.Output<string>;
    public readonly securityGroupId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly subnetId!: pulumi.Output<string>;
    public readonly version!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a CdmCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdmClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdmClusterArgs | CdmClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdmClusterState | undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["emails"] = state ? state.emails : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = state ? state.flavorId : undefined;
            resourceInputs["flavorName"] = state ? state.flavorName : undefined;
            resourceInputs["instances"] = state ? state.instances : undefined;
            resourceInputs["isAutoOff"] = state ? state.isAutoOff : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["phoneNums"] = state ? state.phoneNums : undefined;
            resourceInputs["publicEndpoint"] = state ? state.publicEndpoint : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["scheduleBootTime"] = state ? state.scheduleBootTime : undefined;
            resourceInputs["scheduleOffTime"] = state ? state.scheduleOffTime : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as CdmClusterArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if ((!args || args.flavorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flavorId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["emails"] = args ? args.emails : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = args ? args.flavorId : undefined;
            resourceInputs["isAutoOff"] = args ? args.isAutoOff : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["phoneNums"] = args ? args.phoneNums : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["scheduleBootTime"] = args ? args.scheduleBootTime : undefined;
            resourceInputs["scheduleOffTime"] = args ? args.scheduleOffTime : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["flavorName"] = undefined /*out*/;
            resourceInputs["instances"] = undefined /*out*/;
            resourceInputs["publicEndpoint"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdmCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CdmCluster resources.
 */
export interface CdmClusterState {
    availabilityZone?: pulumi.Input<string>;
    created?: pulumi.Input<string>;
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    enterpriseProjectId?: pulumi.Input<string>;
    flavorId?: pulumi.Input<string>;
    flavorName?: pulumi.Input<string>;
    instances?: pulumi.Input<pulumi.Input<inputs.CdmClusterInstance>[]>;
    isAutoOff?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    phoneNums?: pulumi.Input<pulumi.Input<string>[]>;
    publicEndpoint?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    scheduleBootTime?: pulumi.Input<string>;
    scheduleOffTime?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CdmCluster resource.
 */
export interface CdmClusterArgs {
    availabilityZone: pulumi.Input<string>;
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    enterpriseProjectId?: pulumi.Input<string>;
    flavorId: pulumi.Input<string>;
    isAutoOff?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    phoneNums?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
    scheduleBootTime?: pulumi.Input<string>;
    scheduleOffTime?: pulumi.Input<string>;
    securityGroupId: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
