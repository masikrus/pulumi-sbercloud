// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ElbLoadbalancer extends pulumi.CustomResource {
    /**
     * Get an existing ElbLoadbalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElbLoadbalancerState, opts?: pulumi.CustomResourceOptions): ElbLoadbalancer {
        return new ElbLoadbalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/elbLoadbalancer:ElbLoadbalancer';

    /**
     * Returns true if the given object is an instance of ElbLoadbalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElbLoadbalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElbLoadbalancer.__pulumiType;
    }

    /**
     * @deprecated Deprecated
     */
    public readonly autoPay!: pulumi.Output<string | undefined>;
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    public readonly autoscalingEnabled!: pulumi.Output<boolean>;
    public readonly availabilityZones!: pulumi.Output<string[]>;
    public readonly backendSubnets!: pulumi.Output<string[]>;
    public readonly bandwidthChargeMode!: pulumi.Output<string>;
    public readonly bandwidthId!: pulumi.Output<string>;
    public readonly bandwidthSize!: pulumi.Output<number>;
    public /*out*/ readonly chargeMode!: pulumi.Output<string>;
    public readonly chargingMode!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly crossVpcBackend!: pulumi.Output<boolean>;
    public readonly deletionProtectionEnable!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly guaranteed!: pulumi.Output<boolean>;
    public /*out*/ readonly gwFlavorId!: pulumi.Output<string>;
    public readonly iptype!: pulumi.Output<string>;
    public readonly ipv4Address!: pulumi.Output<string>;
    public /*out*/ readonly ipv4Eip!: pulumi.Output<string>;
    public readonly ipv4EipId!: pulumi.Output<string>;
    public /*out*/ readonly ipv4PortId!: pulumi.Output<string>;
    /**
     * the IPv4 subnet ID of the subnet where the load balancer resides
     */
    public readonly ipv4SubnetId!: pulumi.Output<string | undefined>;
    public readonly ipv6Address!: pulumi.Output<string>;
    public readonly ipv6BandwidthId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly ipv6Eip!: pulumi.Output<string>;
    public /*out*/ readonly ipv6EipId!: pulumi.Output<string>;
    /**
     * the ID of the subnet where the load balancer resides
     */
    public readonly ipv6NetworkId!: pulumi.Output<string | undefined>;
    public readonly l4FlavorId!: pulumi.Output<string>;
    public readonly l7FlavorId!: pulumi.Output<string>;
    public readonly loadbalancerType!: pulumi.Output<string>;
    public readonly minL7FlavorId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    public readonly protectionReason!: pulumi.Output<string | undefined>;
    public readonly protectionStatus!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly sharetype!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly wafFailureAction!: pulumi.Output<string>;

    /**
     * Create a ElbLoadbalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElbLoadbalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElbLoadbalancerArgs | ElbLoadbalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElbLoadbalancerState | undefined;
            resourceInputs["autoPay"] = state ? state.autoPay : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["autoscalingEnabled"] = state ? state.autoscalingEnabled : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["backendSubnets"] = state ? state.backendSubnets : undefined;
            resourceInputs["bandwidthChargeMode"] = state ? state.bandwidthChargeMode : undefined;
            resourceInputs["bandwidthId"] = state ? state.bandwidthId : undefined;
            resourceInputs["bandwidthSize"] = state ? state.bandwidthSize : undefined;
            resourceInputs["chargeMode"] = state ? state.chargeMode : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["crossVpcBackend"] = state ? state.crossVpcBackend : undefined;
            resourceInputs["deletionProtectionEnable"] = state ? state.deletionProtectionEnable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["guaranteed"] = state ? state.guaranteed : undefined;
            resourceInputs["gwFlavorId"] = state ? state.gwFlavorId : undefined;
            resourceInputs["iptype"] = state ? state.iptype : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4Eip"] = state ? state.ipv4Eip : undefined;
            resourceInputs["ipv4EipId"] = state ? state.ipv4EipId : undefined;
            resourceInputs["ipv4PortId"] = state ? state.ipv4PortId : undefined;
            resourceInputs["ipv4SubnetId"] = state ? state.ipv4SubnetId : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["ipv6BandwidthId"] = state ? state.ipv6BandwidthId : undefined;
            resourceInputs["ipv6Eip"] = state ? state.ipv6Eip : undefined;
            resourceInputs["ipv6EipId"] = state ? state.ipv6EipId : undefined;
            resourceInputs["ipv6NetworkId"] = state ? state.ipv6NetworkId : undefined;
            resourceInputs["l4FlavorId"] = state ? state.l4FlavorId : undefined;
            resourceInputs["l7FlavorId"] = state ? state.l7FlavorId : undefined;
            resourceInputs["loadbalancerType"] = state ? state.loadbalancerType : undefined;
            resourceInputs["minL7FlavorId"] = state ? state.minL7FlavorId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["protectionReason"] = state ? state.protectionReason : undefined;
            resourceInputs["protectionStatus"] = state ? state.protectionStatus : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["sharetype"] = state ? state.sharetype : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["wafFailureAction"] = state ? state.wafFailureAction : undefined;
        } else {
            const args = argsOrState as ElbLoadbalancerArgs | undefined;
            if ((!args || args.availabilityZones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZones'");
            }
            resourceInputs["autoPay"] = args ? args.autoPay : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["autoscalingEnabled"] = args ? args.autoscalingEnabled : undefined;
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["backendSubnets"] = args ? args.backendSubnets : undefined;
            resourceInputs["bandwidthChargeMode"] = args ? args.bandwidthChargeMode : undefined;
            resourceInputs["bandwidthId"] = args ? args.bandwidthId : undefined;
            resourceInputs["bandwidthSize"] = args ? args.bandwidthSize : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["crossVpcBackend"] = args ? args.crossVpcBackend : undefined;
            resourceInputs["deletionProtectionEnable"] = args ? args.deletionProtectionEnable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["iptype"] = args ? args.iptype : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4EipId"] = args ? args.ipv4EipId : undefined;
            resourceInputs["ipv4SubnetId"] = args ? args.ipv4SubnetId : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["ipv6BandwidthId"] = args ? args.ipv6BandwidthId : undefined;
            resourceInputs["ipv6NetworkId"] = args ? args.ipv6NetworkId : undefined;
            resourceInputs["l4FlavorId"] = args ? args.l4FlavorId : undefined;
            resourceInputs["l7FlavorId"] = args ? args.l7FlavorId : undefined;
            resourceInputs["loadbalancerType"] = args ? args.loadbalancerType : undefined;
            resourceInputs["minL7FlavorId"] = args ? args.minL7FlavorId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["protectionReason"] = args ? args.protectionReason : undefined;
            resourceInputs["protectionStatus"] = args ? args.protectionStatus : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["sharetype"] = args ? args.sharetype : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["wafFailureAction"] = args ? args.wafFailureAction : undefined;
            resourceInputs["chargeMode"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["guaranteed"] = undefined /*out*/;
            resourceInputs["gwFlavorId"] = undefined /*out*/;
            resourceInputs["ipv4Eip"] = undefined /*out*/;
            resourceInputs["ipv4PortId"] = undefined /*out*/;
            resourceInputs["ipv6Eip"] = undefined /*out*/;
            resourceInputs["ipv6EipId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElbLoadbalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElbLoadbalancer resources.
 */
export interface ElbLoadbalancerState {
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    autoscalingEnabled?: pulumi.Input<boolean>;
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    backendSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    bandwidthChargeMode?: pulumi.Input<string>;
    bandwidthId?: pulumi.Input<string>;
    bandwidthSize?: pulumi.Input<number>;
    chargeMode?: pulumi.Input<string>;
    chargingMode?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    crossVpcBackend?: pulumi.Input<boolean>;
    deletionProtectionEnable?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    forceDelete?: pulumi.Input<boolean>;
    guaranteed?: pulumi.Input<boolean>;
    gwFlavorId?: pulumi.Input<string>;
    iptype?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
    ipv4Eip?: pulumi.Input<string>;
    ipv4EipId?: pulumi.Input<string>;
    ipv4PortId?: pulumi.Input<string>;
    /**
     * the IPv4 subnet ID of the subnet where the load balancer resides
     */
    ipv4SubnetId?: pulumi.Input<string>;
    ipv6Address?: pulumi.Input<string>;
    ipv6BandwidthId?: pulumi.Input<string>;
    ipv6Eip?: pulumi.Input<string>;
    ipv6EipId?: pulumi.Input<string>;
    /**
     * the ID of the subnet where the load balancer resides
     */
    ipv6NetworkId?: pulumi.Input<string>;
    l4FlavorId?: pulumi.Input<string>;
    l7FlavorId?: pulumi.Input<string>;
    loadbalancerType?: pulumi.Input<string>;
    minL7FlavorId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    sharetype?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    updatedAt?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    wafFailureAction?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ElbLoadbalancer resource.
 */
export interface ElbLoadbalancerArgs {
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    autoscalingEnabled?: pulumi.Input<boolean>;
    availabilityZones: pulumi.Input<pulumi.Input<string>[]>;
    backendSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    bandwidthChargeMode?: pulumi.Input<string>;
    bandwidthId?: pulumi.Input<string>;
    bandwidthSize?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    crossVpcBackend?: pulumi.Input<boolean>;
    deletionProtectionEnable?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    forceDelete?: pulumi.Input<boolean>;
    iptype?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
    ipv4EipId?: pulumi.Input<string>;
    /**
     * the IPv4 subnet ID of the subnet where the load balancer resides
     */
    ipv4SubnetId?: pulumi.Input<string>;
    ipv6Address?: pulumi.Input<string>;
    ipv6BandwidthId?: pulumi.Input<string>;
    /**
     * the ID of the subnet where the load balancer resides
     */
    ipv6NetworkId?: pulumi.Input<string>;
    l4FlavorId?: pulumi.Input<string>;
    l7FlavorId?: pulumi.Input<string>;
    loadbalancerType?: pulumi.Input<string>;
    minL7FlavorId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    sharetype?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    wafFailureAction?: pulumi.Input<string>;
}
