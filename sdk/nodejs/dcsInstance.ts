// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DcsInstance extends pulumi.CustomResource {
    /**
     * Get an existing DcsInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DcsInstanceState, opts?: pulumi.CustomResourceOptions): DcsInstance {
        return new DcsInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/dcsInstance:DcsInstance';

    /**
     * Returns true if the given object is an instance of DcsInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DcsInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DcsInstance.__pulumiType;
    }

    public readonly accessUser!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly autoPay!: pulumi.Output<string | undefined>;
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    /**
     * schema: Required
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * @deprecated Deprecated, please use `availabilityZones` instead
     */
    public readonly availableZones!: pulumi.Output<string[] | undefined>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    public readonly backupAts!: pulumi.Output<number[] | undefined>;
    public readonly backupPolicy!: pulumi.Output<outputs.DcsInstanceBackupPolicy | undefined>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    public readonly backupType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly bandwidthInfos!: pulumi.Output<outputs.DcsInstanceBandwidthInfo[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    public readonly beginAt!: pulumi.Output<string | undefined>;
    public /*out*/ readonly cacheMode!: pulumi.Output<string>;
    public readonly capacity!: pulumi.Output<number>;
    public readonly chargingMode!: pulumi.Output<string>;
    public /*out*/ readonly cpuType!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly deletedNodes!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string>;
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    public readonly engine!: pulumi.Output<string>;
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, this is a non-public attribute.
     */
    public readonly enterpriseProjectName!: pulumi.Output<string>;
    /**
     * schema: Required
     */
    public readonly flavor!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, please us `engineVersion` instead.
     */
    public /*out*/ readonly internalVersion!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, please us `privateIp` instead.
     */
    public /*out*/ readonly ip!: pulumi.Output<string>;
    public /*out*/ readonly launchedAt!: pulumi.Output<string>;
    public readonly maintainBegin!: pulumi.Output<string>;
    public readonly maintainEnd!: pulumi.Output<string>;
    public /*out*/ readonly maxMemory!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly orderId!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<outputs.DcsInstanceParameter[]>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * @deprecated Please use `backupPolicy` instead
     */
    public readonly periodType!: pulumi.Output<string | undefined>;
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    public readonly port!: pulumi.Output<number>;
    public readonly privateIp!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, please use `flavor` instead
     */
    public readonly productId!: pulumi.Output<string>;
    public /*out*/ readonly productType!: pulumi.Output<string>;
    public /*out*/ readonly readonlyDomainName!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly renameCommands!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly replicaCount!: pulumi.Output<number>;
    public readonly reservedIps!: pulumi.Output<string[] | undefined>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    public readonly saveDays!: pulumi.Output<number | undefined>;
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly securityGroupName!: pulumi.Output<string>;
    public /*out*/ readonly shardingCount!: pulumi.Output<number>;
    public readonly sslEnable!: pulumi.Output<boolean>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly subnetCidr!: pulumi.Output<string>;
    public readonly subnetId!: pulumi.Output<string>;
    public /*out*/ readonly subnetName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly templateId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly transparentClientIpEnable!: pulumi.Output<boolean>;
    public /*out*/ readonly usedMemory!: pulumi.Output<number>;
    /**
     * @deprecated Deprecated
     */
    public /*out*/ readonly userId!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public /*out*/ readonly userName!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string>;
    public /*out*/ readonly vpcName!: pulumi.Output<string>;
    public readonly whitelistEnable!: pulumi.Output<boolean | undefined>;
    public readonly whitelists!: pulumi.Output<outputs.DcsInstanceWhitelist[] | undefined>;

    /**
     * Create a DcsInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DcsInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DcsInstanceArgs | DcsInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DcsInstanceState | undefined;
            resourceInputs["accessUser"] = state ? state.accessUser : undefined;
            resourceInputs["autoPay"] = state ? state.autoPay : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["availableZones"] = state ? state.availableZones : undefined;
            resourceInputs["backupAts"] = state ? state.backupAts : undefined;
            resourceInputs["backupPolicy"] = state ? state.backupPolicy : undefined;
            resourceInputs["backupType"] = state ? state.backupType : undefined;
            resourceInputs["bandwidthInfos"] = state ? state.bandwidthInfos : undefined;
            resourceInputs["beginAt"] = state ? state.beginAt : undefined;
            resourceInputs["cacheMode"] = state ? state.cacheMode : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["cpuType"] = state ? state.cpuType : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deletedNodes"] = state ? state.deletedNodes : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["enterpriseProjectName"] = state ? state.enterpriseProjectName : undefined;
            resourceInputs["flavor"] = state ? state.flavor : undefined;
            resourceInputs["internalVersion"] = state ? state.internalVersion : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["launchedAt"] = state ? state.launchedAt : undefined;
            resourceInputs["maintainBegin"] = state ? state.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = state ? state.maintainEnd : undefined;
            resourceInputs["maxMemory"] = state ? state.maxMemory : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orderId"] = state ? state.orderId : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodType"] = state ? state.periodType : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["productType"] = state ? state.productType : undefined;
            resourceInputs["readonlyDomainName"] = state ? state.readonlyDomainName : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["renameCommands"] = state ? state.renameCommands : undefined;
            resourceInputs["replicaCount"] = state ? state.replicaCount : undefined;
            resourceInputs["reservedIps"] = state ? state.reservedIps : undefined;
            resourceInputs["saveDays"] = state ? state.saveDays : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["securityGroupName"] = state ? state.securityGroupName : undefined;
            resourceInputs["shardingCount"] = state ? state.shardingCount : undefined;
            resourceInputs["sslEnable"] = state ? state.sslEnable : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetCidr"] = state ? state.subnetCidr : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["subnetName"] = state ? state.subnetName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["transparentClientIpEnable"] = state ? state.transparentClientIpEnable : undefined;
            resourceInputs["usedMemory"] = state ? state.usedMemory : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcName"] = state ? state.vpcName : undefined;
            resourceInputs["whitelistEnable"] = state ? state.whitelistEnable : undefined;
            resourceInputs["whitelists"] = state ? state.whitelists : undefined;
        } else {
            const args = argsOrState as DcsInstanceArgs | undefined;
            if ((!args || args.capacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacity'");
            }
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accessUser"] = args ? args.accessUser : undefined;
            resourceInputs["autoPay"] = args ? args.autoPay : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["availableZones"] = args ? args.availableZones : undefined;
            resourceInputs["backupAts"] = args ? args.backupAts : undefined;
            resourceInputs["backupPolicy"] = args ? args.backupPolicy : undefined;
            resourceInputs["backupType"] = args ? args.backupType : undefined;
            resourceInputs["beginAt"] = args ? args.beginAt : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["deletedNodes"] = args ? args.deletedNodes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["enterpriseProjectName"] = args ? args.enterpriseProjectName : undefined;
            resourceInputs["flavor"] = args ? args.flavor : undefined;
            resourceInputs["maintainBegin"] = args ? args.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = args ? args.maintainEnd : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodType"] = args ? args.periodType : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["privateIp"] = args ? args.privateIp : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["renameCommands"] = args ? args.renameCommands : undefined;
            resourceInputs["reservedIps"] = args ? args.reservedIps : undefined;
            resourceInputs["saveDays"] = args ? args.saveDays : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["sslEnable"] = args ? args.sslEnable : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["whitelistEnable"] = args ? args.whitelistEnable : undefined;
            resourceInputs["whitelists"] = args ? args.whitelists : undefined;
            resourceInputs["bandwidthInfos"] = undefined /*out*/;
            resourceInputs["cacheMode"] = undefined /*out*/;
            resourceInputs["cpuType"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["internalVersion"] = undefined /*out*/;
            resourceInputs["ip"] = undefined /*out*/;
            resourceInputs["launchedAt"] = undefined /*out*/;
            resourceInputs["maxMemory"] = undefined /*out*/;
            resourceInputs["orderId"] = undefined /*out*/;
            resourceInputs["productType"] = undefined /*out*/;
            resourceInputs["readonlyDomainName"] = undefined /*out*/;
            resourceInputs["replicaCount"] = undefined /*out*/;
            resourceInputs["securityGroupName"] = undefined /*out*/;
            resourceInputs["shardingCount"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subnetCidr"] = undefined /*out*/;
            resourceInputs["subnetName"] = undefined /*out*/;
            resourceInputs["transparentClientIpEnable"] = undefined /*out*/;
            resourceInputs["usedMemory"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
            resourceInputs["vpcName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DcsInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DcsInstance resources.
 */
export interface DcsInstanceState {
    accessUser?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `availabilityZones` instead
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupAts?: pulumi.Input<pulumi.Input<number>[]>;
    backupPolicy?: pulumi.Input<inputs.DcsInstanceBackupPolicy>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupType?: pulumi.Input<string>;
    bandwidthInfos?: pulumi.Input<pulumi.Input<inputs.DcsInstanceBandwidthInfo>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    beginAt?: pulumi.Input<string>;
    cacheMode?: pulumi.Input<string>;
    capacity?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    cpuType?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    deletedNodes?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, this is a non-public attribute.
     */
    enterpriseProjectName?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    flavor?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please us `engineVersion` instead.
     */
    internalVersion?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please us `privateIp` instead.
     */
    ip?: pulumi.Input<string>;
    launchedAt?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    maxMemory?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    orderId?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.DcsInstanceParameter>[]>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    /**
     * @deprecated Please use `backupPolicy` instead
     */
    periodType?: pulumi.Input<string>;
    periodUnit?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    privateIp?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please use `flavor` instead
     */
    productId?: pulumi.Input<string>;
    productType?: pulumi.Input<string>;
    readonlyDomainName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    renameCommands?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    replicaCount?: pulumi.Input<number>;
    reservedIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    saveDays?: pulumi.Input<number>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
    shardingCount?: pulumi.Input<number>;
    sslEnable?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    subnetCidr?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    subnetName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateId?: pulumi.Input<string>;
    transparentClientIpEnable?: pulumi.Input<boolean>;
    usedMemory?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    userId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    userName?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vpcName?: pulumi.Input<string>;
    whitelistEnable?: pulumi.Input<boolean>;
    whitelists?: pulumi.Input<pulumi.Input<inputs.DcsInstanceWhitelist>[]>;
}

/**
 * The set of arguments for constructing a DcsInstance resource.
 */
export interface DcsInstanceArgs {
    accessUser?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `availabilityZones` instead
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupAts?: pulumi.Input<pulumi.Input<number>[]>;
    backupPolicy?: pulumi.Input<inputs.DcsInstanceBackupPolicy>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    beginAt?: pulumi.Input<string>;
    capacity: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    deletedNodes?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, this is a non-public attribute.
     */
    enterpriseProjectName?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    flavor?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.DcsInstanceParameter>[]>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    /**
     * @deprecated Please use `backupPolicy` instead
     */
    periodType?: pulumi.Input<string>;
    periodUnit?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    privateIp?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please use `flavor` instead
     */
    productId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    renameCommands?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    reservedIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    saveDays?: pulumi.Input<number>;
    securityGroupId?: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateId?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
    whitelistEnable?: pulumi.Input<boolean>;
    whitelists?: pulumi.Input<pulumi.Input<inputs.DcsInstanceWhitelist>[]>;
}
