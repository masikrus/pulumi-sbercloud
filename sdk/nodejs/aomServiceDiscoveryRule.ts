// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AomServiceDiscoveryRule extends pulumi.CustomResource {
    /**
     * Get an existing AomServiceDiscoveryRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AomServiceDiscoveryRuleState, opts?: pulumi.CustomResourceOptions): AomServiceDiscoveryRule {
        return new AomServiceDiscoveryRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/aomServiceDiscoveryRule:AomServiceDiscoveryRule';

    /**
     * Returns true if the given object is an instance of AomServiceDiscoveryRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AomServiceDiscoveryRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AomServiceDiscoveryRule.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly detectLogEnabled!: pulumi.Output<boolean | undefined>;
    public readonly discoveryRuleEnabled!: pulumi.Output<boolean | undefined>;
    public readonly discoveryRules!: pulumi.Output<outputs.AomServiceDiscoveryRuleDiscoveryRule[]>;
    public readonly isDefaultRule!: pulumi.Output<boolean | undefined>;
    public readonly logFileSuffixes!: pulumi.Output<string[]>;
    public readonly logPathRules!: pulumi.Output<outputs.AomServiceDiscoveryRuleLogPathRule[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameRules!: pulumi.Output<outputs.AomServiceDiscoveryRuleNameRules>;
    public readonly priority!: pulumi.Output<number | undefined>;
    public readonly region!: pulumi.Output<string>;
    public /*out*/ readonly ruleId!: pulumi.Output<string>;
    public readonly serviceType!: pulumi.Output<string>;

    /**
     * Create a AomServiceDiscoveryRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AomServiceDiscoveryRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AomServiceDiscoveryRuleArgs | AomServiceDiscoveryRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AomServiceDiscoveryRuleState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["detectLogEnabled"] = state ? state.detectLogEnabled : undefined;
            resourceInputs["discoveryRuleEnabled"] = state ? state.discoveryRuleEnabled : undefined;
            resourceInputs["discoveryRules"] = state ? state.discoveryRules : undefined;
            resourceInputs["isDefaultRule"] = state ? state.isDefaultRule : undefined;
            resourceInputs["logFileSuffixes"] = state ? state.logFileSuffixes : undefined;
            resourceInputs["logPathRules"] = state ? state.logPathRules : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameRules"] = state ? state.nameRules : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["serviceType"] = state ? state.serviceType : undefined;
        } else {
            const args = argsOrState as AomServiceDiscoveryRuleArgs | undefined;
            if ((!args || args.discoveryRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'discoveryRules'");
            }
            if ((!args || args.logFileSuffixes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logFileSuffixes'");
            }
            if ((!args || args.nameRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nameRules'");
            }
            if ((!args || args.serviceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceType'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["detectLogEnabled"] = args ? args.detectLogEnabled : undefined;
            resourceInputs["discoveryRuleEnabled"] = args ? args.discoveryRuleEnabled : undefined;
            resourceInputs["discoveryRules"] = args ? args.discoveryRules : undefined;
            resourceInputs["isDefaultRule"] = args ? args.isDefaultRule : undefined;
            resourceInputs["logFileSuffixes"] = args ? args.logFileSuffixes : undefined;
            resourceInputs["logPathRules"] = args ? args.logPathRules : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameRules"] = args ? args.nameRules : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceType"] = args ? args.serviceType : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["ruleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AomServiceDiscoveryRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AomServiceDiscoveryRule resources.
 */
export interface AomServiceDiscoveryRuleState {
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    detectLogEnabled?: pulumi.Input<boolean>;
    discoveryRuleEnabled?: pulumi.Input<boolean>;
    discoveryRules?: pulumi.Input<pulumi.Input<inputs.AomServiceDiscoveryRuleDiscoveryRule>[]>;
    isDefaultRule?: pulumi.Input<boolean>;
    logFileSuffixes?: pulumi.Input<pulumi.Input<string>[]>;
    logPathRules?: pulumi.Input<pulumi.Input<inputs.AomServiceDiscoveryRuleLogPathRule>[]>;
    name?: pulumi.Input<string>;
    nameRules?: pulumi.Input<inputs.AomServiceDiscoveryRuleNameRules>;
    priority?: pulumi.Input<number>;
    region?: pulumi.Input<string>;
    ruleId?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AomServiceDiscoveryRule resource.
 */
export interface AomServiceDiscoveryRuleArgs {
    description?: pulumi.Input<string>;
    detectLogEnabled?: pulumi.Input<boolean>;
    discoveryRuleEnabled?: pulumi.Input<boolean>;
    discoveryRules: pulumi.Input<pulumi.Input<inputs.AomServiceDiscoveryRuleDiscoveryRule>[]>;
    isDefaultRule?: pulumi.Input<boolean>;
    logFileSuffixes: pulumi.Input<pulumi.Input<string>[]>;
    logPathRules?: pulumi.Input<pulumi.Input<inputs.AomServiceDiscoveryRuleLogPathRule>[]>;
    name?: pulumi.Input<string>;
    nameRules: pulumi.Input<inputs.AomServiceDiscoveryRuleNameRules>;
    priority?: pulumi.Input<number>;
    region?: pulumi.Input<string>;
    serviceType: pulumi.Input<string>;
}
