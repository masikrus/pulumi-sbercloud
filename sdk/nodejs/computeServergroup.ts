// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ComputeServergroup extends pulumi.CustomResource {
    /**
     * Get an existing ComputeServergroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeServergroupState, opts?: pulumi.CustomResourceOptions): ComputeServergroup {
        return new ComputeServergroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/computeServergroup:ComputeServergroup';

    /**
     * Returns true if the given object is an instance of ComputeServergroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeServergroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeServergroup.__pulumiType;
    }

    /**
     * schema: Internal
     */
    public /*out*/ readonly faultDomains!: pulumi.Output<string[]>;
    public readonly members!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    /**
     * schema: Required
     */
    public readonly policies!: pulumi.Output<string[] | undefined>;
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a ComputeServergroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComputeServergroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeServergroupArgs | ComputeServergroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeServergroupState | undefined;
            resourceInputs["faultDomains"] = state ? state.faultDomains : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policies"] = state ? state.policies : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as ComputeServergroupArgs | undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policies"] = args ? args.policies : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["faultDomains"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeServergroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ComputeServergroup resources.
 */
export interface ComputeServergroupState {
    /**
     * schema: Internal
     */
    faultDomains?: pulumi.Input<pulumi.Input<string>[]>;
    members?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    policies?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeServergroup resource.
 */
export interface ComputeServergroupArgs {
    members?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    policies?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
}
