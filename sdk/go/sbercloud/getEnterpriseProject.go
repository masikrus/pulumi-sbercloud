// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupEnterpriseProject(ctx *pulumi.Context, args *LookupEnterpriseProjectArgs, opts ...pulumi.InvokeOption) (*LookupEnterpriseProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEnterpriseProjectResult
	err := ctx.Invoke("sbercloud:index/getEnterpriseProject:getEnterpriseProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnterpriseProject.
type LookupEnterpriseProjectArgs struct {
	Id     *string `pulumi:"id"`
	Name   *string `pulumi:"name"`
	Status *int    `pulumi:"status"`
}

// A collection of values returned by getEnterpriseProject.
type LookupEnterpriseProjectResult struct {
	CreatedAt   string `pulumi:"createdAt"`
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Status      int    `pulumi:"status"`
	UpdatedAt   string `pulumi:"updatedAt"`
}

func LookupEnterpriseProjectOutput(ctx *pulumi.Context, args LookupEnterpriseProjectOutputArgs, opts ...pulumi.InvokeOption) LookupEnterpriseProjectResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEnterpriseProjectResultOutput, error) {
			args := v.(LookupEnterpriseProjectArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getEnterpriseProject:getEnterpriseProject", args, LookupEnterpriseProjectResultOutput{}, options).(LookupEnterpriseProjectResultOutput), nil
		}).(LookupEnterpriseProjectResultOutput)
}

// A collection of arguments for invoking getEnterpriseProject.
type LookupEnterpriseProjectOutputArgs struct {
	Id     pulumi.StringPtrInput `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Status pulumi.IntPtrInput    `pulumi:"status"`
}

func (LookupEnterpriseProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnterpriseProjectArgs)(nil)).Elem()
}

// A collection of values returned by getEnterpriseProject.
type LookupEnterpriseProjectResultOutput struct{ *pulumi.OutputState }

func (LookupEnterpriseProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnterpriseProjectResult)(nil)).Elem()
}

func (o LookupEnterpriseProjectResultOutput) ToLookupEnterpriseProjectResultOutput() LookupEnterpriseProjectResultOutput {
	return o
}

func (o LookupEnterpriseProjectResultOutput) ToLookupEnterpriseProjectResultOutputWithContext(ctx context.Context) LookupEnterpriseProjectResultOutput {
	return o
}

func (o LookupEnterpriseProjectResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseProjectResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupEnterpriseProjectResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseProjectResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupEnterpriseProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEnterpriseProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupEnterpriseProjectResultOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v LookupEnterpriseProjectResult) int { return v.Status }).(pulumi.IntOutput)
}

func (o LookupEnterpriseProjectResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseProjectResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnterpriseProjectResultOutput{})
}
