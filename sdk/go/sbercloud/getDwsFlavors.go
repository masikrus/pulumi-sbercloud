// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDwsFlavors(ctx *pulumi.Context, args *GetDwsFlavorsArgs, opts ...pulumi.InvokeOption) (*GetDwsFlavorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDwsFlavorsResult
	err := ctx.Invoke("sbercloud:index/getDwsFlavors:getDwsFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDwsFlavors.
type GetDwsFlavorsArgs struct {
	AvailabilityZone *string `pulumi:"availabilityZone"`
	DatastoreType    *string `pulumi:"datastoreType"`
	Memory           *int    `pulumi:"memory"`
	Region           *string `pulumi:"region"`
	Vcpus            *int    `pulumi:"vcpus"`
}

// A collection of values returned by getDwsFlavors.
type GetDwsFlavorsResult struct {
	AvailabilityZone *string               `pulumi:"availabilityZone"`
	DatastoreType    *string               `pulumi:"datastoreType"`
	Flavors          []GetDwsFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Memory *int   `pulumi:"memory"`
	Region string `pulumi:"region"`
	Vcpus  *int   `pulumi:"vcpus"`
}

func GetDwsFlavorsOutput(ctx *pulumi.Context, args GetDwsFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetDwsFlavorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDwsFlavorsResultOutput, error) {
			args := v.(GetDwsFlavorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getDwsFlavors:getDwsFlavors", args, GetDwsFlavorsResultOutput{}, options).(GetDwsFlavorsResultOutput), nil
		}).(GetDwsFlavorsResultOutput)
}

// A collection of arguments for invoking getDwsFlavors.
type GetDwsFlavorsOutputArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	DatastoreType    pulumi.StringPtrInput `pulumi:"datastoreType"`
	Memory           pulumi.IntPtrInput    `pulumi:"memory"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	Vcpus            pulumi.IntPtrInput    `pulumi:"vcpus"`
}

func (GetDwsFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDwsFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getDwsFlavors.
type GetDwsFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetDwsFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDwsFlavorsResult)(nil)).Elem()
}

func (o GetDwsFlavorsResultOutput) ToGetDwsFlavorsResultOutput() GetDwsFlavorsResultOutput {
	return o
}

func (o GetDwsFlavorsResultOutput) ToGetDwsFlavorsResultOutputWithContext(ctx context.Context) GetDwsFlavorsResultOutput {
	return o
}

func (o GetDwsFlavorsResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDwsFlavorsResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetDwsFlavorsResultOutput) DatastoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDwsFlavorsResult) *string { return v.DatastoreType }).(pulumi.StringPtrOutput)
}

func (o GetDwsFlavorsResultOutput) Flavors() GetDwsFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetDwsFlavorsResult) []GetDwsFlavorsFlavor { return v.Flavors }).(GetDwsFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDwsFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDwsFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDwsFlavorsResultOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDwsFlavorsResult) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o GetDwsFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDwsFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDwsFlavorsResultOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDwsFlavorsResult) *int { return v.Vcpus }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDwsFlavorsResultOutput{})
}
