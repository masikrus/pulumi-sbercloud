// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCceNodes(ctx *pulumi.Context, args *GetCceNodesArgs, opts ...pulumi.InvokeOption) (*GetCceNodesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCceNodesResult
	err := ctx.Invoke("sbercloud:index/getCceNodes:getCceNodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCceNodes.
type GetCceNodesArgs struct {
	ClusterId     string  `pulumi:"clusterId"`
	IgnoreDetails *string `pulumi:"ignoreDetails"`
	Name          *string `pulumi:"name"`
	NodeId        *string `pulumi:"nodeId"`
	Region        *string `pulumi:"region"`
	Status        *string `pulumi:"status"`
}

// A collection of values returned by getCceNodes.
type GetCceNodesResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id            string            `pulumi:"id"`
	Ids           []string          `pulumi:"ids"`
	IgnoreDetails *string           `pulumi:"ignoreDetails"`
	Name          *string           `pulumi:"name"`
	NodeId        *string           `pulumi:"nodeId"`
	Nodes         []GetCceNodesNode `pulumi:"nodes"`
	Region        string            `pulumi:"region"`
	Status        *string           `pulumi:"status"`
}

func GetCceNodesOutput(ctx *pulumi.Context, args GetCceNodesOutputArgs, opts ...pulumi.InvokeOption) GetCceNodesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCceNodesResultOutput, error) {
			args := v.(GetCceNodesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getCceNodes:getCceNodes", args, GetCceNodesResultOutput{}, options).(GetCceNodesResultOutput), nil
		}).(GetCceNodesResultOutput)
}

// A collection of arguments for invoking getCceNodes.
type GetCceNodesOutputArgs struct {
	ClusterId     pulumi.StringInput    `pulumi:"clusterId"`
	IgnoreDetails pulumi.StringPtrInput `pulumi:"ignoreDetails"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	NodeId        pulumi.StringPtrInput `pulumi:"nodeId"`
	Region        pulumi.StringPtrInput `pulumi:"region"`
	Status        pulumi.StringPtrInput `pulumi:"status"`
}

func (GetCceNodesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesArgs)(nil)).Elem()
}

// A collection of values returned by getCceNodes.
type GetCceNodesResultOutput struct{ *pulumi.OutputState }

func (GetCceNodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesResult)(nil)).Elem()
}

func (o GetCceNodesResultOutput) ToGetCceNodesResultOutput() GetCceNodesResultOutput {
	return o
}

func (o GetCceNodesResultOutput) ToGetCceNodesResultOutputWithContext(ctx context.Context) GetCceNodesResultOutput {
	return o
}

func (o GetCceNodesResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCceNodesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCceNodesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCceNodesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetCceNodesResultOutput) IgnoreDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceNodesResult) *string { return v.IgnoreDetails }).(pulumi.StringPtrOutput)
}

func (o GetCceNodesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceNodesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetCceNodesResultOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceNodesResult) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

func (o GetCceNodesResultOutput) Nodes() GetCceNodesNodeArrayOutput {
	return o.ApplyT(func(v GetCceNodesResult) []GetCceNodesNode { return v.Nodes }).(GetCceNodesNodeArrayOutput)
}

func (o GetCceNodesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetCceNodesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceNodesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCceNodesResultOutput{})
}
