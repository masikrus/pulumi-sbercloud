// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SfsFileSystem struct {
	pulumi.CustomResourceState

	AccessLevel         pulumi.StringOutput                `pulumi:"accessLevel"`
	AccessRuleStatus    pulumi.StringOutput                `pulumi:"accessRuleStatus"`
	AccessRules         SfsFileSystemAccessRuleArrayOutput `pulumi:"accessRules"`
	AccessTo            pulumi.StringPtrOutput             `pulumi:"accessTo"`
	AccessType          pulumi.StringOutput                `pulumi:"accessType"`
	AvailabilityZone    pulumi.StringOutput                `pulumi:"availabilityZone"`
	Description         pulumi.StringOutput                `pulumi:"description"`
	EnterpriseProjectId pulumi.StringOutput                `pulumi:"enterpriseProjectId"`
	ExportLocation      pulumi.StringOutput                `pulumi:"exportLocation"`
	IsPublic            pulumi.BoolPtrOutput               `pulumi:"isPublic"`
	Metadata            pulumi.StringMapOutput             `pulumi:"metadata"`
	Name                pulumi.StringOutput                `pulumi:"name"`
	Region              pulumi.StringOutput                `pulumi:"region"`
	ShareAccessId       pulumi.StringOutput                `pulumi:"shareAccessId"`
	ShareProto          pulumi.StringPtrOutput             `pulumi:"shareProto"`
	Size                pulumi.IntOutput                   `pulumi:"size"`
	Status              pulumi.StringOutput                `pulumi:"status"`
	Tags                pulumi.StringMapOutput             `pulumi:"tags"`
}

// NewSfsFileSystem registers a new resource with the given unique name, arguments, and options.
func NewSfsFileSystem(ctx *pulumi.Context,
	name string, args *SfsFileSystemArgs, opts ...pulumi.ResourceOption) (*SfsFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Size == nil {
		return nil, errors.New("invalid value for required argument 'Size'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SfsFileSystem
	err := ctx.RegisterResource("sbercloud:index/sfsFileSystem:SfsFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSfsFileSystem gets an existing SfsFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSfsFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SfsFileSystemState, opts ...pulumi.ResourceOption) (*SfsFileSystem, error) {
	var resource SfsFileSystem
	err := ctx.ReadResource("sbercloud:index/sfsFileSystem:SfsFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SfsFileSystem resources.
type sfsFileSystemState struct {
	AccessLevel         *string                   `pulumi:"accessLevel"`
	AccessRuleStatus    *string                   `pulumi:"accessRuleStatus"`
	AccessRules         []SfsFileSystemAccessRule `pulumi:"accessRules"`
	AccessTo            *string                   `pulumi:"accessTo"`
	AccessType          *string                   `pulumi:"accessType"`
	AvailabilityZone    *string                   `pulumi:"availabilityZone"`
	Description         *string                   `pulumi:"description"`
	EnterpriseProjectId *string                   `pulumi:"enterpriseProjectId"`
	ExportLocation      *string                   `pulumi:"exportLocation"`
	IsPublic            *bool                     `pulumi:"isPublic"`
	Metadata            map[string]string         `pulumi:"metadata"`
	Name                *string                   `pulumi:"name"`
	Region              *string                   `pulumi:"region"`
	ShareAccessId       *string                   `pulumi:"shareAccessId"`
	ShareProto          *string                   `pulumi:"shareProto"`
	Size                *int                      `pulumi:"size"`
	Status              *string                   `pulumi:"status"`
	Tags                map[string]string         `pulumi:"tags"`
}

type SfsFileSystemState struct {
	AccessLevel         pulumi.StringPtrInput
	AccessRuleStatus    pulumi.StringPtrInput
	AccessRules         SfsFileSystemAccessRuleArrayInput
	AccessTo            pulumi.StringPtrInput
	AccessType          pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ExportLocation      pulumi.StringPtrInput
	IsPublic            pulumi.BoolPtrInput
	Metadata            pulumi.StringMapInput
	Name                pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
	ShareAccessId       pulumi.StringPtrInput
	ShareProto          pulumi.StringPtrInput
	Size                pulumi.IntPtrInput
	Status              pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
}

func (SfsFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*sfsFileSystemState)(nil)).Elem()
}

type sfsFileSystemArgs struct {
	AccessLevel         *string           `pulumi:"accessLevel"`
	AccessTo            *string           `pulumi:"accessTo"`
	AccessType          *string           `pulumi:"accessType"`
	AvailabilityZone    *string           `pulumi:"availabilityZone"`
	Description         *string           `pulumi:"description"`
	EnterpriseProjectId *string           `pulumi:"enterpriseProjectId"`
	IsPublic            *bool             `pulumi:"isPublic"`
	Metadata            map[string]string `pulumi:"metadata"`
	Name                *string           `pulumi:"name"`
	Region              *string           `pulumi:"region"`
	ShareProto          *string           `pulumi:"shareProto"`
	Size                int               `pulumi:"size"`
	Tags                map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SfsFileSystem resource.
type SfsFileSystemArgs struct {
	AccessLevel         pulumi.StringPtrInput
	AccessTo            pulumi.StringPtrInput
	AccessType          pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	IsPublic            pulumi.BoolPtrInput
	Metadata            pulumi.StringMapInput
	Name                pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
	ShareProto          pulumi.StringPtrInput
	Size                pulumi.IntInput
	Tags                pulumi.StringMapInput
}

func (SfsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sfsFileSystemArgs)(nil)).Elem()
}

type SfsFileSystemInput interface {
	pulumi.Input

	ToSfsFileSystemOutput() SfsFileSystemOutput
	ToSfsFileSystemOutputWithContext(ctx context.Context) SfsFileSystemOutput
}

func (*SfsFileSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**SfsFileSystem)(nil)).Elem()
}

func (i *SfsFileSystem) ToSfsFileSystemOutput() SfsFileSystemOutput {
	return i.ToSfsFileSystemOutputWithContext(context.Background())
}

func (i *SfsFileSystem) ToSfsFileSystemOutputWithContext(ctx context.Context) SfsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsFileSystemOutput)
}

// SfsFileSystemArrayInput is an input type that accepts SfsFileSystemArray and SfsFileSystemArrayOutput values.
// You can construct a concrete instance of `SfsFileSystemArrayInput` via:
//
//	SfsFileSystemArray{ SfsFileSystemArgs{...} }
type SfsFileSystemArrayInput interface {
	pulumi.Input

	ToSfsFileSystemArrayOutput() SfsFileSystemArrayOutput
	ToSfsFileSystemArrayOutputWithContext(context.Context) SfsFileSystemArrayOutput
}

type SfsFileSystemArray []SfsFileSystemInput

func (SfsFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SfsFileSystem)(nil)).Elem()
}

func (i SfsFileSystemArray) ToSfsFileSystemArrayOutput() SfsFileSystemArrayOutput {
	return i.ToSfsFileSystemArrayOutputWithContext(context.Background())
}

func (i SfsFileSystemArray) ToSfsFileSystemArrayOutputWithContext(ctx context.Context) SfsFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsFileSystemArrayOutput)
}

// SfsFileSystemMapInput is an input type that accepts SfsFileSystemMap and SfsFileSystemMapOutput values.
// You can construct a concrete instance of `SfsFileSystemMapInput` via:
//
//	SfsFileSystemMap{ "key": SfsFileSystemArgs{...} }
type SfsFileSystemMapInput interface {
	pulumi.Input

	ToSfsFileSystemMapOutput() SfsFileSystemMapOutput
	ToSfsFileSystemMapOutputWithContext(context.Context) SfsFileSystemMapOutput
}

type SfsFileSystemMap map[string]SfsFileSystemInput

func (SfsFileSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SfsFileSystem)(nil)).Elem()
}

func (i SfsFileSystemMap) ToSfsFileSystemMapOutput() SfsFileSystemMapOutput {
	return i.ToSfsFileSystemMapOutputWithContext(context.Background())
}

func (i SfsFileSystemMap) ToSfsFileSystemMapOutputWithContext(ctx context.Context) SfsFileSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsFileSystemMapOutput)
}

type SfsFileSystemOutput struct{ *pulumi.OutputState }

func (SfsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SfsFileSystem)(nil)).Elem()
}

func (o SfsFileSystemOutput) ToSfsFileSystemOutput() SfsFileSystemOutput {
	return o
}

func (o SfsFileSystemOutput) ToSfsFileSystemOutputWithContext(ctx context.Context) SfsFileSystemOutput {
	return o
}

func (o SfsFileSystemOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.AccessLevel }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) AccessRuleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.AccessRuleStatus }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) AccessRules() SfsFileSystemAccessRuleArrayOutput {
	return o.ApplyT(func(v *SfsFileSystem) SfsFileSystemAccessRuleArrayOutput { return v.AccessRules }).(SfsFileSystemAccessRuleArrayOutput)
}

func (o SfsFileSystemOutput) AccessTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringPtrOutput { return v.AccessTo }).(pulumi.StringPtrOutput)
}

func (o SfsFileSystemOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.AccessType }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) ExportLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.ExportLocation }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) IsPublic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.BoolPtrOutput { return v.IsPublic }).(pulumi.BoolPtrOutput)
}

func (o SfsFileSystemOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o SfsFileSystemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) ShareAccessId() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.ShareAccessId }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) ShareProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringPtrOutput { return v.ShareProto }).(pulumi.StringPtrOutput)
}

func (o SfsFileSystemOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

func (o SfsFileSystemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SfsFileSystemOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SfsFileSystem) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type SfsFileSystemArrayOutput struct{ *pulumi.OutputState }

func (SfsFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SfsFileSystem)(nil)).Elem()
}

func (o SfsFileSystemArrayOutput) ToSfsFileSystemArrayOutput() SfsFileSystemArrayOutput {
	return o
}

func (o SfsFileSystemArrayOutput) ToSfsFileSystemArrayOutputWithContext(ctx context.Context) SfsFileSystemArrayOutput {
	return o
}

func (o SfsFileSystemArrayOutput) Index(i pulumi.IntInput) SfsFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SfsFileSystem {
		return vs[0].([]*SfsFileSystem)[vs[1].(int)]
	}).(SfsFileSystemOutput)
}

type SfsFileSystemMapOutput struct{ *pulumi.OutputState }

func (SfsFileSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SfsFileSystem)(nil)).Elem()
}

func (o SfsFileSystemMapOutput) ToSfsFileSystemMapOutput() SfsFileSystemMapOutput {
	return o
}

func (o SfsFileSystemMapOutput) ToSfsFileSystemMapOutputWithContext(ctx context.Context) SfsFileSystemMapOutput {
	return o
}

func (o SfsFileSystemMapOutput) MapIndex(k pulumi.StringInput) SfsFileSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SfsFileSystem {
		return vs[0].(map[string]*SfsFileSystem)[vs[1].(string)]
	}).(SfsFileSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SfsFileSystemInput)(nil)).Elem(), &SfsFileSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsFileSystemArrayInput)(nil)).Elem(), SfsFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsFileSystemMapInput)(nil)).Elem(), SfsFileSystemMap{})
	pulumi.RegisterOutputType(SfsFileSystemOutput{})
	pulumi.RegisterOutputType(SfsFileSystemArrayOutput{})
	pulumi.RegisterOutputType(SfsFileSystemMapOutput{})
}
