// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MapreduceJob struct {
	pulumi.CustomResourceState

	ClusterId         pulumi.StringOutput    `pulumi:"clusterId"`
	FinishTime        pulumi.StringOutput    `pulumi:"finishTime"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	Parameters        pulumi.StringPtrOutput `pulumi:"parameters"`
	ProgramParameters pulumi.StringMapOutput `pulumi:"programParameters"`
	ProgramPath       pulumi.StringPtrOutput `pulumi:"programPath"`
	Region            pulumi.StringOutput    `pulumi:"region"`
	ServiceParameters pulumi.StringMapOutput `pulumi:"serviceParameters"`
	Sql               pulumi.StringPtrOutput `pulumi:"sql"`
	StartTime         pulumi.StringOutput    `pulumi:"startTime"`
	Status            pulumi.StringOutput    `pulumi:"status"`
	SubmitTime        pulumi.StringOutput    `pulumi:"submitTime"`
	Type              pulumi.StringOutput    `pulumi:"type"`
}

// NewMapreduceJob registers a new resource with the given unique name, arguments, and options.
func NewMapreduceJob(ctx *pulumi.Context,
	name string, args *MapreduceJobArgs, opts ...pulumi.ResourceOption) (*MapreduceJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MapreduceJob
	err := ctx.RegisterResource("sbercloud:index/mapreduceJob:MapreduceJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMapreduceJob gets an existing MapreduceJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMapreduceJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MapreduceJobState, opts ...pulumi.ResourceOption) (*MapreduceJob, error) {
	var resource MapreduceJob
	err := ctx.ReadResource("sbercloud:index/mapreduceJob:MapreduceJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MapreduceJob resources.
type mapreduceJobState struct {
	ClusterId         *string           `pulumi:"clusterId"`
	FinishTime        *string           `pulumi:"finishTime"`
	Name              *string           `pulumi:"name"`
	Parameters        *string           `pulumi:"parameters"`
	ProgramParameters map[string]string `pulumi:"programParameters"`
	ProgramPath       *string           `pulumi:"programPath"`
	Region            *string           `pulumi:"region"`
	ServiceParameters map[string]string `pulumi:"serviceParameters"`
	Sql               *string           `pulumi:"sql"`
	StartTime         *string           `pulumi:"startTime"`
	Status            *string           `pulumi:"status"`
	SubmitTime        *string           `pulumi:"submitTime"`
	Type              *string           `pulumi:"type"`
}

type MapreduceJobState struct {
	ClusterId         pulumi.StringPtrInput
	FinishTime        pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	Parameters        pulumi.StringPtrInput
	ProgramParameters pulumi.StringMapInput
	ProgramPath       pulumi.StringPtrInput
	Region            pulumi.StringPtrInput
	ServiceParameters pulumi.StringMapInput
	Sql               pulumi.StringPtrInput
	StartTime         pulumi.StringPtrInput
	Status            pulumi.StringPtrInput
	SubmitTime        pulumi.StringPtrInput
	Type              pulumi.StringPtrInput
}

func (MapreduceJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*mapreduceJobState)(nil)).Elem()
}

type mapreduceJobArgs struct {
	ClusterId         string            `pulumi:"clusterId"`
	Name              *string           `pulumi:"name"`
	Parameters        *string           `pulumi:"parameters"`
	ProgramParameters map[string]string `pulumi:"programParameters"`
	ProgramPath       *string           `pulumi:"programPath"`
	Region            *string           `pulumi:"region"`
	ServiceParameters map[string]string `pulumi:"serviceParameters"`
	Sql               *string           `pulumi:"sql"`
	Type              string            `pulumi:"type"`
}

// The set of arguments for constructing a MapreduceJob resource.
type MapreduceJobArgs struct {
	ClusterId         pulumi.StringInput
	Name              pulumi.StringPtrInput
	Parameters        pulumi.StringPtrInput
	ProgramParameters pulumi.StringMapInput
	ProgramPath       pulumi.StringPtrInput
	Region            pulumi.StringPtrInput
	ServiceParameters pulumi.StringMapInput
	Sql               pulumi.StringPtrInput
	Type              pulumi.StringInput
}

func (MapreduceJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mapreduceJobArgs)(nil)).Elem()
}

type MapreduceJobInput interface {
	pulumi.Input

	ToMapreduceJobOutput() MapreduceJobOutput
	ToMapreduceJobOutputWithContext(ctx context.Context) MapreduceJobOutput
}

func (*MapreduceJob) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceJob)(nil)).Elem()
}

func (i *MapreduceJob) ToMapreduceJobOutput() MapreduceJobOutput {
	return i.ToMapreduceJobOutputWithContext(context.Background())
}

func (i *MapreduceJob) ToMapreduceJobOutputWithContext(ctx context.Context) MapreduceJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceJobOutput)
}

// MapreduceJobArrayInput is an input type that accepts MapreduceJobArray and MapreduceJobArrayOutput values.
// You can construct a concrete instance of `MapreduceJobArrayInput` via:
//
//	MapreduceJobArray{ MapreduceJobArgs{...} }
type MapreduceJobArrayInput interface {
	pulumi.Input

	ToMapreduceJobArrayOutput() MapreduceJobArrayOutput
	ToMapreduceJobArrayOutputWithContext(context.Context) MapreduceJobArrayOutput
}

type MapreduceJobArray []MapreduceJobInput

func (MapreduceJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MapreduceJob)(nil)).Elem()
}

func (i MapreduceJobArray) ToMapreduceJobArrayOutput() MapreduceJobArrayOutput {
	return i.ToMapreduceJobArrayOutputWithContext(context.Background())
}

func (i MapreduceJobArray) ToMapreduceJobArrayOutputWithContext(ctx context.Context) MapreduceJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceJobArrayOutput)
}

// MapreduceJobMapInput is an input type that accepts MapreduceJobMap and MapreduceJobMapOutput values.
// You can construct a concrete instance of `MapreduceJobMapInput` via:
//
//	MapreduceJobMap{ "key": MapreduceJobArgs{...} }
type MapreduceJobMapInput interface {
	pulumi.Input

	ToMapreduceJobMapOutput() MapreduceJobMapOutput
	ToMapreduceJobMapOutputWithContext(context.Context) MapreduceJobMapOutput
}

type MapreduceJobMap map[string]MapreduceJobInput

func (MapreduceJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MapreduceJob)(nil)).Elem()
}

func (i MapreduceJobMap) ToMapreduceJobMapOutput() MapreduceJobMapOutput {
	return i.ToMapreduceJobMapOutputWithContext(context.Background())
}

func (i MapreduceJobMap) ToMapreduceJobMapOutputWithContext(ctx context.Context) MapreduceJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceJobMapOutput)
}

type MapreduceJobOutput struct{ *pulumi.OutputState }

func (MapreduceJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceJob)(nil)).Elem()
}

func (o MapreduceJobOutput) ToMapreduceJobOutput() MapreduceJobOutput {
	return o
}

func (o MapreduceJobOutput) ToMapreduceJobOutputWithContext(ctx context.Context) MapreduceJobOutput {
	return o
}

func (o MapreduceJobOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o MapreduceJobOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.FinishTime }).(pulumi.StringOutput)
}

func (o MapreduceJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MapreduceJobOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringPtrOutput { return v.Parameters }).(pulumi.StringPtrOutput)
}

func (o MapreduceJobOutput) ProgramParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringMapOutput { return v.ProgramParameters }).(pulumi.StringMapOutput)
}

func (o MapreduceJobOutput) ProgramPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringPtrOutput { return v.ProgramPath }).(pulumi.StringPtrOutput)
}

func (o MapreduceJobOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o MapreduceJobOutput) ServiceParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringMapOutput { return v.ServiceParameters }).(pulumi.StringMapOutput)
}

func (o MapreduceJobOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringPtrOutput { return v.Sql }).(pulumi.StringPtrOutput)
}

func (o MapreduceJobOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

func (o MapreduceJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o MapreduceJobOutput) SubmitTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.SubmitTime }).(pulumi.StringOutput)
}

func (o MapreduceJobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceJob) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type MapreduceJobArrayOutput struct{ *pulumi.OutputState }

func (MapreduceJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MapreduceJob)(nil)).Elem()
}

func (o MapreduceJobArrayOutput) ToMapreduceJobArrayOutput() MapreduceJobArrayOutput {
	return o
}

func (o MapreduceJobArrayOutput) ToMapreduceJobArrayOutputWithContext(ctx context.Context) MapreduceJobArrayOutput {
	return o
}

func (o MapreduceJobArrayOutput) Index(i pulumi.IntInput) MapreduceJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MapreduceJob {
		return vs[0].([]*MapreduceJob)[vs[1].(int)]
	}).(MapreduceJobOutput)
}

type MapreduceJobMapOutput struct{ *pulumi.OutputState }

func (MapreduceJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MapreduceJob)(nil)).Elem()
}

func (o MapreduceJobMapOutput) ToMapreduceJobMapOutput() MapreduceJobMapOutput {
	return o
}

func (o MapreduceJobMapOutput) ToMapreduceJobMapOutputWithContext(ctx context.Context) MapreduceJobMapOutput {
	return o
}

func (o MapreduceJobMapOutput) MapIndex(k pulumi.StringInput) MapreduceJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MapreduceJob {
		return vs[0].(map[string]*MapreduceJob)[vs[1].(string)]
	}).(MapreduceJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceJobInput)(nil)).Elem(), &MapreduceJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceJobArrayInput)(nil)).Elem(), MapreduceJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceJobMapInput)(nil)).Elem(), MapreduceJobMap{})
	pulumi.RegisterOutputType(MapreduceJobOutput{})
	pulumi.RegisterOutputType(MapreduceJobArrayOutput{})
	pulumi.RegisterOutputType(MapreduceJobMapOutput{})
}
