// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdentityAgency struct {
	pulumi.CustomResourceState

	AllResourcesRoles pulumi.StringArrayOutput `pulumi:"allResourcesRoles"`
	CreateTime        pulumi.StringOutput      `pulumi:"createTime"`
	// schema: Required
	DelegatedDomainName pulumi.StringPtrOutput `pulumi:"delegatedDomainName"`
	// schema: Internal
	DelegatedServiceName pulumi.StringPtrOutput               `pulumi:"delegatedServiceName"`
	Description          pulumi.StringOutput                  `pulumi:"description"`
	DomainRoles          pulumi.StringArrayOutput             `pulumi:"domainRoles"`
	Duration             pulumi.StringPtrOutput               `pulumi:"duration"`
	ExpireTime           pulumi.StringOutput                  `pulumi:"expireTime"`
	Name                 pulumi.StringOutput                  `pulumi:"name"`
	ProjectRoles         IdentityAgencyProjectRoleArrayOutput `pulumi:"projectRoles"`
}

// NewIdentityAgency registers a new resource with the given unique name, arguments, and options.
func NewIdentityAgency(ctx *pulumi.Context,
	name string, args *IdentityAgencyArgs, opts ...pulumi.ResourceOption) (*IdentityAgency, error) {
	if args == nil {
		args = &IdentityAgencyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityAgency
	err := ctx.RegisterResource("sbercloud:index/identityAgency:IdentityAgency", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityAgency gets an existing IdentityAgency resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityAgency(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityAgencyState, opts ...pulumi.ResourceOption) (*IdentityAgency, error) {
	var resource IdentityAgency
	err := ctx.ReadResource("sbercloud:index/identityAgency:IdentityAgency", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityAgency resources.
type identityAgencyState struct {
	AllResourcesRoles []string `pulumi:"allResourcesRoles"`
	CreateTime        *string  `pulumi:"createTime"`
	// schema: Required
	DelegatedDomainName *string `pulumi:"delegatedDomainName"`
	// schema: Internal
	DelegatedServiceName *string                     `pulumi:"delegatedServiceName"`
	Description          *string                     `pulumi:"description"`
	DomainRoles          []string                    `pulumi:"domainRoles"`
	Duration             *string                     `pulumi:"duration"`
	ExpireTime           *string                     `pulumi:"expireTime"`
	Name                 *string                     `pulumi:"name"`
	ProjectRoles         []IdentityAgencyProjectRole `pulumi:"projectRoles"`
}

type IdentityAgencyState struct {
	AllResourcesRoles pulumi.StringArrayInput
	CreateTime        pulumi.StringPtrInput
	// schema: Required
	DelegatedDomainName pulumi.StringPtrInput
	// schema: Internal
	DelegatedServiceName pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DomainRoles          pulumi.StringArrayInput
	Duration             pulumi.StringPtrInput
	ExpireTime           pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	ProjectRoles         IdentityAgencyProjectRoleArrayInput
}

func (IdentityAgencyState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityAgencyState)(nil)).Elem()
}

type identityAgencyArgs struct {
	AllResourcesRoles []string `pulumi:"allResourcesRoles"`
	// schema: Required
	DelegatedDomainName *string `pulumi:"delegatedDomainName"`
	// schema: Internal
	DelegatedServiceName *string                     `pulumi:"delegatedServiceName"`
	Description          *string                     `pulumi:"description"`
	DomainRoles          []string                    `pulumi:"domainRoles"`
	Duration             *string                     `pulumi:"duration"`
	Name                 *string                     `pulumi:"name"`
	ProjectRoles         []IdentityAgencyProjectRole `pulumi:"projectRoles"`
}

// The set of arguments for constructing a IdentityAgency resource.
type IdentityAgencyArgs struct {
	AllResourcesRoles pulumi.StringArrayInput
	// schema: Required
	DelegatedDomainName pulumi.StringPtrInput
	// schema: Internal
	DelegatedServiceName pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DomainRoles          pulumi.StringArrayInput
	Duration             pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	ProjectRoles         IdentityAgencyProjectRoleArrayInput
}

func (IdentityAgencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityAgencyArgs)(nil)).Elem()
}

type IdentityAgencyInput interface {
	pulumi.Input

	ToIdentityAgencyOutput() IdentityAgencyOutput
	ToIdentityAgencyOutputWithContext(ctx context.Context) IdentityAgencyOutput
}

func (*IdentityAgency) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAgency)(nil)).Elem()
}

func (i *IdentityAgency) ToIdentityAgencyOutput() IdentityAgencyOutput {
	return i.ToIdentityAgencyOutputWithContext(context.Background())
}

func (i *IdentityAgency) ToIdentityAgencyOutputWithContext(ctx context.Context) IdentityAgencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAgencyOutput)
}

// IdentityAgencyArrayInput is an input type that accepts IdentityAgencyArray and IdentityAgencyArrayOutput values.
// You can construct a concrete instance of `IdentityAgencyArrayInput` via:
//
//	IdentityAgencyArray{ IdentityAgencyArgs{...} }
type IdentityAgencyArrayInput interface {
	pulumi.Input

	ToIdentityAgencyArrayOutput() IdentityAgencyArrayOutput
	ToIdentityAgencyArrayOutputWithContext(context.Context) IdentityAgencyArrayOutput
}

type IdentityAgencyArray []IdentityAgencyInput

func (IdentityAgencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityAgency)(nil)).Elem()
}

func (i IdentityAgencyArray) ToIdentityAgencyArrayOutput() IdentityAgencyArrayOutput {
	return i.ToIdentityAgencyArrayOutputWithContext(context.Background())
}

func (i IdentityAgencyArray) ToIdentityAgencyArrayOutputWithContext(ctx context.Context) IdentityAgencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAgencyArrayOutput)
}

// IdentityAgencyMapInput is an input type that accepts IdentityAgencyMap and IdentityAgencyMapOutput values.
// You can construct a concrete instance of `IdentityAgencyMapInput` via:
//
//	IdentityAgencyMap{ "key": IdentityAgencyArgs{...} }
type IdentityAgencyMapInput interface {
	pulumi.Input

	ToIdentityAgencyMapOutput() IdentityAgencyMapOutput
	ToIdentityAgencyMapOutputWithContext(context.Context) IdentityAgencyMapOutput
}

type IdentityAgencyMap map[string]IdentityAgencyInput

func (IdentityAgencyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityAgency)(nil)).Elem()
}

func (i IdentityAgencyMap) ToIdentityAgencyMapOutput() IdentityAgencyMapOutput {
	return i.ToIdentityAgencyMapOutputWithContext(context.Background())
}

func (i IdentityAgencyMap) ToIdentityAgencyMapOutputWithContext(ctx context.Context) IdentityAgencyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAgencyMapOutput)
}

type IdentityAgencyOutput struct{ *pulumi.OutputState }

func (IdentityAgencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAgency)(nil)).Elem()
}

func (o IdentityAgencyOutput) ToIdentityAgencyOutput() IdentityAgencyOutput {
	return o
}

func (o IdentityAgencyOutput) ToIdentityAgencyOutputWithContext(ctx context.Context) IdentityAgencyOutput {
	return o
}

func (o IdentityAgencyOutput) AllResourcesRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringArrayOutput { return v.AllResourcesRoles }).(pulumi.StringArrayOutput)
}

func (o IdentityAgencyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// schema: Required
func (o IdentityAgencyOutput) DelegatedDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringPtrOutput { return v.DelegatedDomainName }).(pulumi.StringPtrOutput)
}

// schema: Internal
func (o IdentityAgencyOutput) DelegatedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringPtrOutput { return v.DelegatedServiceName }).(pulumi.StringPtrOutput)
}

func (o IdentityAgencyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o IdentityAgencyOutput) DomainRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringArrayOutput { return v.DomainRoles }).(pulumi.StringArrayOutput)
}

func (o IdentityAgencyOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringPtrOutput { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o IdentityAgencyOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o IdentityAgencyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAgency) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityAgencyOutput) ProjectRoles() IdentityAgencyProjectRoleArrayOutput {
	return o.ApplyT(func(v *IdentityAgency) IdentityAgencyProjectRoleArrayOutput { return v.ProjectRoles }).(IdentityAgencyProjectRoleArrayOutput)
}

type IdentityAgencyArrayOutput struct{ *pulumi.OutputState }

func (IdentityAgencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityAgency)(nil)).Elem()
}

func (o IdentityAgencyArrayOutput) ToIdentityAgencyArrayOutput() IdentityAgencyArrayOutput {
	return o
}

func (o IdentityAgencyArrayOutput) ToIdentityAgencyArrayOutputWithContext(ctx context.Context) IdentityAgencyArrayOutput {
	return o
}

func (o IdentityAgencyArrayOutput) Index(i pulumi.IntInput) IdentityAgencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityAgency {
		return vs[0].([]*IdentityAgency)[vs[1].(int)]
	}).(IdentityAgencyOutput)
}

type IdentityAgencyMapOutput struct{ *pulumi.OutputState }

func (IdentityAgencyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityAgency)(nil)).Elem()
}

func (o IdentityAgencyMapOutput) ToIdentityAgencyMapOutput() IdentityAgencyMapOutput {
	return o
}

func (o IdentityAgencyMapOutput) ToIdentityAgencyMapOutputWithContext(ctx context.Context) IdentityAgencyMapOutput {
	return o
}

func (o IdentityAgencyMapOutput) MapIndex(k pulumi.StringInput) IdentityAgencyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityAgency {
		return vs[0].(map[string]*IdentityAgency)[vs[1].(string)]
	}).(IdentityAgencyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAgencyInput)(nil)).Elem(), &IdentityAgency{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAgencyArrayInput)(nil)).Elem(), IdentityAgencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAgencyMapInput)(nil)).Elem(), IdentityAgencyMap{})
	pulumi.RegisterOutputType(IdentityAgencyOutput{})
	pulumi.RegisterOutputType(IdentityAgencyArrayOutput{})
	pulumi.RegisterOutputType(IdentityAgencyMapOutput{})
}
