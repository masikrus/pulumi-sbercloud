// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdentityUser struct {
	pulumi.CustomResourceState

	AccessType                     pulumi.StringOutput    `pulumi:"accessType"`
	CountryCode                    pulumi.StringPtrOutput `pulumi:"countryCode"`
	CreateTime                     pulumi.StringOutput    `pulumi:"createTime"`
	Description                    pulumi.StringPtrOutput `pulumi:"description"`
	Email                          pulumi.StringPtrOutput `pulumi:"email"`
	Enabled                        pulumi.BoolPtrOutput   `pulumi:"enabled"`
	ExternalIdentityId             pulumi.StringPtrOutput `pulumi:"externalIdentityId"`
	ExternalIdentityType           pulumi.StringOutput    `pulumi:"externalIdentityType"`
	LastLogin                      pulumi.StringOutput    `pulumi:"lastLogin"`
	LoginProtectVerificationMethod pulumi.StringPtrOutput `pulumi:"loginProtectVerificationMethod"`
	Name                           pulumi.StringOutput    `pulumi:"name"`
	Password                       pulumi.StringPtrOutput `pulumi:"password"`
	PasswordStrength               pulumi.StringOutput    `pulumi:"passwordStrength"`
	Phone                          pulumi.StringPtrOutput `pulumi:"phone"`
	PwdReset                       pulumi.BoolPtrOutput   `pulumi:"pwdReset"`
}

// NewIdentityUser registers a new resource with the given unique name, arguments, and options.
func NewIdentityUser(ctx *pulumi.Context,
	name string, args *IdentityUserArgs, opts ...pulumi.ResourceOption) (*IdentityUser, error) {
	if args == nil {
		args = &IdentityUserArgs{}
	}

	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityUser
	err := ctx.RegisterResource("sbercloud:index/identityUser:IdentityUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityUser gets an existing IdentityUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityUserState, opts ...pulumi.ResourceOption) (*IdentityUser, error) {
	var resource IdentityUser
	err := ctx.ReadResource("sbercloud:index/identityUser:IdentityUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityUser resources.
type identityUserState struct {
	AccessType                     *string `pulumi:"accessType"`
	CountryCode                    *string `pulumi:"countryCode"`
	CreateTime                     *string `pulumi:"createTime"`
	Description                    *string `pulumi:"description"`
	Email                          *string `pulumi:"email"`
	Enabled                        *bool   `pulumi:"enabled"`
	ExternalIdentityId             *string `pulumi:"externalIdentityId"`
	ExternalIdentityType           *string `pulumi:"externalIdentityType"`
	LastLogin                      *string `pulumi:"lastLogin"`
	LoginProtectVerificationMethod *string `pulumi:"loginProtectVerificationMethod"`
	Name                           *string `pulumi:"name"`
	Password                       *string `pulumi:"password"`
	PasswordStrength               *string `pulumi:"passwordStrength"`
	Phone                          *string `pulumi:"phone"`
	PwdReset                       *bool   `pulumi:"pwdReset"`
}

type IdentityUserState struct {
	AccessType                     pulumi.StringPtrInput
	CountryCode                    pulumi.StringPtrInput
	CreateTime                     pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	Email                          pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	ExternalIdentityId             pulumi.StringPtrInput
	ExternalIdentityType           pulumi.StringPtrInput
	LastLogin                      pulumi.StringPtrInput
	LoginProtectVerificationMethod pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	Password                       pulumi.StringPtrInput
	PasswordStrength               pulumi.StringPtrInput
	Phone                          pulumi.StringPtrInput
	PwdReset                       pulumi.BoolPtrInput
}

func (IdentityUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUserState)(nil)).Elem()
}

type identityUserArgs struct {
	AccessType                     *string `pulumi:"accessType"`
	CountryCode                    *string `pulumi:"countryCode"`
	Description                    *string `pulumi:"description"`
	Email                          *string `pulumi:"email"`
	Enabled                        *bool   `pulumi:"enabled"`
	ExternalIdentityId             *string `pulumi:"externalIdentityId"`
	ExternalIdentityType           *string `pulumi:"externalIdentityType"`
	LoginProtectVerificationMethod *string `pulumi:"loginProtectVerificationMethod"`
	Name                           *string `pulumi:"name"`
	Password                       *string `pulumi:"password"`
	Phone                          *string `pulumi:"phone"`
	PwdReset                       *bool   `pulumi:"pwdReset"`
}

// The set of arguments for constructing a IdentityUser resource.
type IdentityUserArgs struct {
	AccessType                     pulumi.StringPtrInput
	CountryCode                    pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	Email                          pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	ExternalIdentityId             pulumi.StringPtrInput
	ExternalIdentityType           pulumi.StringPtrInput
	LoginProtectVerificationMethod pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	Password                       pulumi.StringPtrInput
	Phone                          pulumi.StringPtrInput
	PwdReset                       pulumi.BoolPtrInput
}

func (IdentityUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUserArgs)(nil)).Elem()
}

type IdentityUserInput interface {
	pulumi.Input

	ToIdentityUserOutput() IdentityUserOutput
	ToIdentityUserOutputWithContext(ctx context.Context) IdentityUserOutput
}

func (*IdentityUser) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUser)(nil)).Elem()
}

func (i *IdentityUser) ToIdentityUserOutput() IdentityUserOutput {
	return i.ToIdentityUserOutputWithContext(context.Background())
}

func (i *IdentityUser) ToIdentityUserOutputWithContext(ctx context.Context) IdentityUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserOutput)
}

// IdentityUserArrayInput is an input type that accepts IdentityUserArray and IdentityUserArrayOutput values.
// You can construct a concrete instance of `IdentityUserArrayInput` via:
//
//	IdentityUserArray{ IdentityUserArgs{...} }
type IdentityUserArrayInput interface {
	pulumi.Input

	ToIdentityUserArrayOutput() IdentityUserArrayOutput
	ToIdentityUserArrayOutputWithContext(context.Context) IdentityUserArrayOutput
}

type IdentityUserArray []IdentityUserInput

func (IdentityUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityUser)(nil)).Elem()
}

func (i IdentityUserArray) ToIdentityUserArrayOutput() IdentityUserArrayOutput {
	return i.ToIdentityUserArrayOutputWithContext(context.Background())
}

func (i IdentityUserArray) ToIdentityUserArrayOutputWithContext(ctx context.Context) IdentityUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserArrayOutput)
}

// IdentityUserMapInput is an input type that accepts IdentityUserMap and IdentityUserMapOutput values.
// You can construct a concrete instance of `IdentityUserMapInput` via:
//
//	IdentityUserMap{ "key": IdentityUserArgs{...} }
type IdentityUserMapInput interface {
	pulumi.Input

	ToIdentityUserMapOutput() IdentityUserMapOutput
	ToIdentityUserMapOutputWithContext(context.Context) IdentityUserMapOutput
}

type IdentityUserMap map[string]IdentityUserInput

func (IdentityUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityUser)(nil)).Elem()
}

func (i IdentityUserMap) ToIdentityUserMapOutput() IdentityUserMapOutput {
	return i.ToIdentityUserMapOutputWithContext(context.Background())
}

func (i IdentityUserMap) ToIdentityUserMapOutputWithContext(ctx context.Context) IdentityUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserMapOutput)
}

type IdentityUserOutput struct{ *pulumi.OutputState }

func (IdentityUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUser)(nil)).Elem()
}

func (o IdentityUserOutput) ToIdentityUserOutput() IdentityUserOutput {
	return o
}

func (o IdentityUserOutput) ToIdentityUserOutputWithContext(ctx context.Context) IdentityUserOutput {
	return o
}

func (o IdentityUserOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringOutput { return v.AccessType }).(pulumi.StringOutput)
}

func (o IdentityUserOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringPtrOutput { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o IdentityUserOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o IdentityUserOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IdentityUserOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringPtrOutput { return v.Email }).(pulumi.StringPtrOutput)
}

func (o IdentityUserOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o IdentityUserOutput) ExternalIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringPtrOutput { return v.ExternalIdentityId }).(pulumi.StringPtrOutput)
}

func (o IdentityUserOutput) ExternalIdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringOutput { return v.ExternalIdentityType }).(pulumi.StringOutput)
}

func (o IdentityUserOutput) LastLogin() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringOutput { return v.LastLogin }).(pulumi.StringOutput)
}

func (o IdentityUserOutput) LoginProtectVerificationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringPtrOutput { return v.LoginProtectVerificationMethod }).(pulumi.StringPtrOutput)
}

func (o IdentityUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o IdentityUserOutput) PasswordStrength() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringOutput { return v.PasswordStrength }).(pulumi.StringOutput)
}

func (o IdentityUserOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.StringPtrOutput { return v.Phone }).(pulumi.StringPtrOutput)
}

func (o IdentityUserOutput) PwdReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityUser) pulumi.BoolPtrOutput { return v.PwdReset }).(pulumi.BoolPtrOutput)
}

type IdentityUserArrayOutput struct{ *pulumi.OutputState }

func (IdentityUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityUser)(nil)).Elem()
}

func (o IdentityUserArrayOutput) ToIdentityUserArrayOutput() IdentityUserArrayOutput {
	return o
}

func (o IdentityUserArrayOutput) ToIdentityUserArrayOutputWithContext(ctx context.Context) IdentityUserArrayOutput {
	return o
}

func (o IdentityUserArrayOutput) Index(i pulumi.IntInput) IdentityUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityUser {
		return vs[0].([]*IdentityUser)[vs[1].(int)]
	}).(IdentityUserOutput)
}

type IdentityUserMapOutput struct{ *pulumi.OutputState }

func (IdentityUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityUser)(nil)).Elem()
}

func (o IdentityUserMapOutput) ToIdentityUserMapOutput() IdentityUserMapOutput {
	return o
}

func (o IdentityUserMapOutput) ToIdentityUserMapOutputWithContext(ctx context.Context) IdentityUserMapOutput {
	return o
}

func (o IdentityUserMapOutput) MapIndex(k pulumi.StringInput) IdentityUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityUser {
		return vs[0].(map[string]*IdentityUser)[vs[1].(string)]
	}).(IdentityUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUserInput)(nil)).Elem(), &IdentityUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUserArrayInput)(nil)).Elem(), IdentityUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUserMapInput)(nil)).Elem(), IdentityUserMap{})
	pulumi.RegisterOutputType(IdentityUserOutput{})
	pulumi.RegisterOutputType(IdentityUserArrayOutput{})
	pulumi.RegisterOutputType(IdentityUserMapOutput{})
}
