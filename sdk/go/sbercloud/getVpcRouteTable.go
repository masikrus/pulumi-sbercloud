// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVpcRouteTable(ctx *pulumi.Context, args *LookupVpcRouteTableArgs, opts ...pulumi.InvokeOption) (*LookupVpcRouteTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcRouteTableResult
	err := ctx.Invoke("sbercloud:index/getVpcRouteTable:getVpcRouteTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcRouteTable.
type LookupVpcRouteTableArgs struct {
	Id     *string `pulumi:"id"`
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	VpcId  string  `pulumi:"vpcId"`
}

// A collection of values returned by getVpcRouteTable.
type LookupVpcRouteTableResult struct {
	Default     bool                    `pulumi:"default"`
	Description string                  `pulumi:"description"`
	Id          string                  `pulumi:"id"`
	Name        string                  `pulumi:"name"`
	Region      string                  `pulumi:"region"`
	Routes      []GetVpcRouteTableRoute `pulumi:"routes"`
	Subnets     []string                `pulumi:"subnets"`
	VpcId       string                  `pulumi:"vpcId"`
}

func LookupVpcRouteTableOutput(ctx *pulumi.Context, args LookupVpcRouteTableOutputArgs, opts ...pulumi.InvokeOption) LookupVpcRouteTableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcRouteTableResultOutput, error) {
			args := v.(LookupVpcRouteTableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpcRouteTable:getVpcRouteTable", args, LookupVpcRouteTableResultOutput{}, options).(LookupVpcRouteTableResultOutput), nil
		}).(LookupVpcRouteTableResultOutput)
}

// A collection of arguments for invoking getVpcRouteTable.
type LookupVpcRouteTableOutputArgs struct {
	Id     pulumi.StringPtrInput `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Region pulumi.StringPtrInput `pulumi:"region"`
	VpcId  pulumi.StringInput    `pulumi:"vpcId"`
}

func (LookupVpcRouteTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcRouteTableArgs)(nil)).Elem()
}

// A collection of values returned by getVpcRouteTable.
type LookupVpcRouteTableResultOutput struct{ *pulumi.OutputState }

func (LookupVpcRouteTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcRouteTableResult)(nil)).Elem()
}

func (o LookupVpcRouteTableResultOutput) ToLookupVpcRouteTableResultOutput() LookupVpcRouteTableResultOutput {
	return o
}

func (o LookupVpcRouteTableResultOutput) ToLookupVpcRouteTableResultOutputWithContext(ctx context.Context) LookupVpcRouteTableResultOutput {
	return o
}

func (o LookupVpcRouteTableResultOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) bool { return v.Default }).(pulumi.BoolOutput)
}

func (o LookupVpcRouteTableResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVpcRouteTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpcRouteTableResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVpcRouteTableResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupVpcRouteTableResultOutput) Routes() GetVpcRouteTableRouteArrayOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) []GetVpcRouteTableRoute { return v.Routes }).(GetVpcRouteTableRouteArrayOutput)
}

func (o LookupVpcRouteTableResultOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o LookupVpcRouteTableResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteTableResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcRouteTableResultOutput{})
}
