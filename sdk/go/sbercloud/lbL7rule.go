// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LbL7rule struct {
	pulumi.CustomResourceState

	AdminStateUp pulumi.BoolPtrOutput   `pulumi:"adminStateUp"`
	CompareType  pulumi.StringOutput    `pulumi:"compareType"`
	Key          pulumi.StringPtrOutput `pulumi:"key"`
	L7policyId   pulumi.StringOutput    `pulumi:"l7policyId"`
	ListenerId   pulumi.StringOutput    `pulumi:"listenerId"`
	Region       pulumi.StringOutput    `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	Type     pulumi.StringOutput `pulumi:"type"`
	Value    pulumi.StringOutput `pulumi:"value"`
}

// NewLbL7rule registers a new resource with the given unique name, arguments, and options.
func NewLbL7rule(ctx *pulumi.Context,
	name string, args *LbL7ruleArgs, opts ...pulumi.ResourceOption) (*LbL7rule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompareType == nil {
		return nil, errors.New("invalid value for required argument 'CompareType'")
	}
	if args.L7policyId == nil {
		return nil, errors.New("invalid value for required argument 'L7policyId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbL7rule
	err := ctx.RegisterResource("sbercloud:index/lbL7rule:LbL7rule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbL7rule gets an existing LbL7rule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbL7rule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbL7ruleState, opts ...pulumi.ResourceOption) (*LbL7rule, error) {
	var resource LbL7rule
	err := ctx.ReadResource("sbercloud:index/lbL7rule:LbL7rule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbL7rule resources.
type lbL7ruleState struct {
	AdminStateUp *bool   `pulumi:"adminStateUp"`
	CompareType  *string `pulumi:"compareType"`
	Key          *string `pulumi:"key"`
	L7policyId   *string `pulumi:"l7policyId"`
	ListenerId   *string `pulumi:"listenerId"`
	Region       *string `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId *string `pulumi:"tenantId"`
	Type     *string `pulumi:"type"`
	Value    *string `pulumi:"value"`
}

type LbL7ruleState struct {
	AdminStateUp pulumi.BoolPtrInput
	CompareType  pulumi.StringPtrInput
	Key          pulumi.StringPtrInput
	L7policyId   pulumi.StringPtrInput
	ListenerId   pulumi.StringPtrInput
	Region       pulumi.StringPtrInput
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringPtrInput
	Type     pulumi.StringPtrInput
	Value    pulumi.StringPtrInput
}

func (LbL7ruleState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbL7ruleState)(nil)).Elem()
}

type lbL7ruleArgs struct {
	AdminStateUp *bool   `pulumi:"adminStateUp"`
	CompareType  string  `pulumi:"compareType"`
	Key          *string `pulumi:"key"`
	L7policyId   string  `pulumi:"l7policyId"`
	Region       *string `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId *string `pulumi:"tenantId"`
	Type     string  `pulumi:"type"`
	Value    string  `pulumi:"value"`
}

// The set of arguments for constructing a LbL7rule resource.
type LbL7ruleArgs struct {
	AdminStateUp pulumi.BoolPtrInput
	CompareType  pulumi.StringInput
	Key          pulumi.StringPtrInput
	L7policyId   pulumi.StringInput
	Region       pulumi.StringPtrInput
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringPtrInput
	Type     pulumi.StringInput
	Value    pulumi.StringInput
}

func (LbL7ruleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbL7ruleArgs)(nil)).Elem()
}

type LbL7ruleInput interface {
	pulumi.Input

	ToLbL7ruleOutput() LbL7ruleOutput
	ToLbL7ruleOutputWithContext(ctx context.Context) LbL7ruleOutput
}

func (*LbL7rule) ElementType() reflect.Type {
	return reflect.TypeOf((**LbL7rule)(nil)).Elem()
}

func (i *LbL7rule) ToLbL7ruleOutput() LbL7ruleOutput {
	return i.ToLbL7ruleOutputWithContext(context.Background())
}

func (i *LbL7rule) ToLbL7ruleOutputWithContext(ctx context.Context) LbL7ruleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbL7ruleOutput)
}

// LbL7ruleArrayInput is an input type that accepts LbL7ruleArray and LbL7ruleArrayOutput values.
// You can construct a concrete instance of `LbL7ruleArrayInput` via:
//
//	LbL7ruleArray{ LbL7ruleArgs{...} }
type LbL7ruleArrayInput interface {
	pulumi.Input

	ToLbL7ruleArrayOutput() LbL7ruleArrayOutput
	ToLbL7ruleArrayOutputWithContext(context.Context) LbL7ruleArrayOutput
}

type LbL7ruleArray []LbL7ruleInput

func (LbL7ruleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbL7rule)(nil)).Elem()
}

func (i LbL7ruleArray) ToLbL7ruleArrayOutput() LbL7ruleArrayOutput {
	return i.ToLbL7ruleArrayOutputWithContext(context.Background())
}

func (i LbL7ruleArray) ToLbL7ruleArrayOutputWithContext(ctx context.Context) LbL7ruleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbL7ruleArrayOutput)
}

// LbL7ruleMapInput is an input type that accepts LbL7ruleMap and LbL7ruleMapOutput values.
// You can construct a concrete instance of `LbL7ruleMapInput` via:
//
//	LbL7ruleMap{ "key": LbL7ruleArgs{...} }
type LbL7ruleMapInput interface {
	pulumi.Input

	ToLbL7ruleMapOutput() LbL7ruleMapOutput
	ToLbL7ruleMapOutputWithContext(context.Context) LbL7ruleMapOutput
}

type LbL7ruleMap map[string]LbL7ruleInput

func (LbL7ruleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbL7rule)(nil)).Elem()
}

func (i LbL7ruleMap) ToLbL7ruleMapOutput() LbL7ruleMapOutput {
	return i.ToLbL7ruleMapOutputWithContext(context.Background())
}

func (i LbL7ruleMap) ToLbL7ruleMapOutputWithContext(ctx context.Context) LbL7ruleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbL7ruleMapOutput)
}

type LbL7ruleOutput struct{ *pulumi.OutputState }

func (LbL7ruleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbL7rule)(nil)).Elem()
}

func (o LbL7ruleOutput) ToLbL7ruleOutput() LbL7ruleOutput {
	return o
}

func (o LbL7ruleOutput) ToLbL7ruleOutputWithContext(ctx context.Context) LbL7ruleOutput {
	return o
}

func (o LbL7ruleOutput) AdminStateUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.BoolPtrOutput { return v.AdminStateUp }).(pulumi.BoolPtrOutput)
}

func (o LbL7ruleOutput) CompareType() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringOutput { return v.CompareType }).(pulumi.StringOutput)
}

func (o LbL7ruleOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

func (o LbL7ruleOutput) L7policyId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringOutput { return v.L7policyId }).(pulumi.StringOutput)
}

func (o LbL7ruleOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

func (o LbL7ruleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Deprecated: tenant_id is deprecated
func (o LbL7ruleOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

func (o LbL7ruleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o LbL7ruleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7rule) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type LbL7ruleArrayOutput struct{ *pulumi.OutputState }

func (LbL7ruleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbL7rule)(nil)).Elem()
}

func (o LbL7ruleArrayOutput) ToLbL7ruleArrayOutput() LbL7ruleArrayOutput {
	return o
}

func (o LbL7ruleArrayOutput) ToLbL7ruleArrayOutputWithContext(ctx context.Context) LbL7ruleArrayOutput {
	return o
}

func (o LbL7ruleArrayOutput) Index(i pulumi.IntInput) LbL7ruleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LbL7rule {
		return vs[0].([]*LbL7rule)[vs[1].(int)]
	}).(LbL7ruleOutput)
}

type LbL7ruleMapOutput struct{ *pulumi.OutputState }

func (LbL7ruleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbL7rule)(nil)).Elem()
}

func (o LbL7ruleMapOutput) ToLbL7ruleMapOutput() LbL7ruleMapOutput {
	return o
}

func (o LbL7ruleMapOutput) ToLbL7ruleMapOutputWithContext(ctx context.Context) LbL7ruleMapOutput {
	return o
}

func (o LbL7ruleMapOutput) MapIndex(k pulumi.StringInput) LbL7ruleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LbL7rule {
		return vs[0].(map[string]*LbL7rule)[vs[1].(string)]
	}).(LbL7ruleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbL7ruleInput)(nil)).Elem(), &LbL7rule{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbL7ruleArrayInput)(nil)).Elem(), LbL7ruleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbL7ruleMapInput)(nil)).Elem(), LbL7ruleMap{})
	pulumi.RegisterOutputType(LbL7ruleOutput{})
	pulumi.RegisterOutputType(LbL7ruleArrayOutput{})
	pulumi.RegisterOutputType(LbL7ruleMapOutput{})
}
