// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AsGroup struct {
	pulumi.CustomResourceState

	AgencyName        pulumi.StringOutput      `pulumi:"agencyName"`
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// schema: Deprecated; use availabilityZones instead
	AvailableZones pulumi.StringArrayOutput `pulumi:"availableZones"`
	// The cooling duration, in seconds.
	CoolDownTime          pulumi.IntPtrOutput `pulumi:"coolDownTime"`
	CurrentInstanceNumber pulumi.IntOutput    `pulumi:"currentInstanceNumber"`
	// Whether to delete instances when they are removed from the AS group.
	DeleteInstances      pulumi.StringPtrOutput `pulumi:"deleteInstances"`
	DeletePublicip       pulumi.BoolPtrOutput   `pulumi:"deletePublicip"`
	DeleteVolume         pulumi.BoolOutput      `pulumi:"deleteVolume"`
	Description          pulumi.StringOutput    `pulumi:"description"`
	DesireInstanceNumber pulumi.IntOutput       `pulumi:"desireInstanceNumber"`
	Enable               pulumi.BoolPtrOutput   `pulumi:"enable"`
	EnterpriseProjectId  pulumi.StringOutput    `pulumi:"enterpriseProjectId"`
	ForceDelete          pulumi.BoolPtrOutput   `pulumi:"forceDelete"`
	// The health check grace period for instances, in seconds.
	HealthPeriodicAuditGracePeriod pulumi.IntOutput       `pulumi:"healthPeriodicAuditGracePeriod"`
	HealthPeriodicAuditMethod      pulumi.StringPtrOutput `pulumi:"healthPeriodicAuditMethod"`
	// The health check period for instances, in minutes.
	HealthPeriodicAuditTime pulumi.IntPtrOutput    `pulumi:"healthPeriodicAuditTime"`
	InstanceTerminatePolicy pulumi.StringPtrOutput `pulumi:"instanceTerminatePolicy"`
	// The instances id list in the as group.
	Instances pulumi.StringArrayOutput `pulumi:"instances"`
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaasListeners instead
	LbListenerId         pulumi.StringPtrOutput          `pulumi:"lbListenerId"`
	LbaasListeners       AsGroupLbaasListenerArrayOutput `pulumi:"lbaasListeners"`
	MaxInstanceNumber    pulumi.IntPtrOutput             `pulumi:"maxInstanceNumber"`
	MinInstanceNumber    pulumi.IntPtrOutput             `pulumi:"minInstanceNumber"`
	MultiAzScalingPolicy pulumi.StringOutput             `pulumi:"multiAzScalingPolicy"`
	Networks             AsGroupNetworkArrayOutput       `pulumi:"networks"`
	// schema: Deprecated; The notification mode has been canceled
	Notifications pulumi.StringArrayOutput `pulumi:"notifications"`
	Region        pulumi.StringOutput      `pulumi:"region"`
	// schema: Required
	ScalingConfigurationId pulumi.StringOutput             `pulumi:"scalingConfigurationId"`
	ScalingGroupName       pulumi.StringOutput             `pulumi:"scalingGroupName"`
	SecurityGroups         AsGroupSecurityGroupArrayOutput `pulumi:"securityGroups"`
	Status                 pulumi.StringOutput             `pulumi:"status"`
	Tags                   pulumi.StringMapOutput          `pulumi:"tags"`
	VpcId                  pulumi.StringOutput             `pulumi:"vpcId"`
}

// NewAsGroup registers a new resource with the given unique name, arguments, and options.
func NewAsGroup(ctx *pulumi.Context,
	name string, args *AsGroupArgs, opts ...pulumi.ResourceOption) (*AsGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Networks == nil {
		return nil, errors.New("invalid value for required argument 'Networks'")
	}
	if args.ScalingGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ScalingGroupName'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AsGroup
	err := ctx.RegisterResource("sbercloud:index/asGroup:AsGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAsGroup gets an existing AsGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAsGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AsGroupState, opts ...pulumi.ResourceOption) (*AsGroup, error) {
	var resource AsGroup
	err := ctx.ReadResource("sbercloud:index/asGroup:AsGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AsGroup resources.
type asGroupState struct {
	AgencyName        *string  `pulumi:"agencyName"`
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// schema: Deprecated; use availabilityZones instead
	AvailableZones []string `pulumi:"availableZones"`
	// The cooling duration, in seconds.
	CoolDownTime          *int `pulumi:"coolDownTime"`
	CurrentInstanceNumber *int `pulumi:"currentInstanceNumber"`
	// Whether to delete instances when they are removed from the AS group.
	DeleteInstances      *string `pulumi:"deleteInstances"`
	DeletePublicip       *bool   `pulumi:"deletePublicip"`
	DeleteVolume         *bool   `pulumi:"deleteVolume"`
	Description          *string `pulumi:"description"`
	DesireInstanceNumber *int    `pulumi:"desireInstanceNumber"`
	Enable               *bool   `pulumi:"enable"`
	EnterpriseProjectId  *string `pulumi:"enterpriseProjectId"`
	ForceDelete          *bool   `pulumi:"forceDelete"`
	// The health check grace period for instances, in seconds.
	HealthPeriodicAuditGracePeriod *int    `pulumi:"healthPeriodicAuditGracePeriod"`
	HealthPeriodicAuditMethod      *string `pulumi:"healthPeriodicAuditMethod"`
	// The health check period for instances, in minutes.
	HealthPeriodicAuditTime *int    `pulumi:"healthPeriodicAuditTime"`
	InstanceTerminatePolicy *string `pulumi:"instanceTerminatePolicy"`
	// The instances id list in the as group.
	Instances []string `pulumi:"instances"`
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaasListeners instead
	LbListenerId         *string                `pulumi:"lbListenerId"`
	LbaasListeners       []AsGroupLbaasListener `pulumi:"lbaasListeners"`
	MaxInstanceNumber    *int                   `pulumi:"maxInstanceNumber"`
	MinInstanceNumber    *int                   `pulumi:"minInstanceNumber"`
	MultiAzScalingPolicy *string                `pulumi:"multiAzScalingPolicy"`
	Networks             []AsGroupNetwork       `pulumi:"networks"`
	// schema: Deprecated; The notification mode has been canceled
	Notifications []string `pulumi:"notifications"`
	Region        *string  `pulumi:"region"`
	// schema: Required
	ScalingConfigurationId *string                `pulumi:"scalingConfigurationId"`
	ScalingGroupName       *string                `pulumi:"scalingGroupName"`
	SecurityGroups         []AsGroupSecurityGroup `pulumi:"securityGroups"`
	Status                 *string                `pulumi:"status"`
	Tags                   map[string]string      `pulumi:"tags"`
	VpcId                  *string                `pulumi:"vpcId"`
}

type AsGroupState struct {
	AgencyName        pulumi.StringPtrInput
	AvailabilityZones pulumi.StringArrayInput
	// schema: Deprecated; use availabilityZones instead
	AvailableZones pulumi.StringArrayInput
	// The cooling duration, in seconds.
	CoolDownTime          pulumi.IntPtrInput
	CurrentInstanceNumber pulumi.IntPtrInput
	// Whether to delete instances when they are removed from the AS group.
	DeleteInstances      pulumi.StringPtrInput
	DeletePublicip       pulumi.BoolPtrInput
	DeleteVolume         pulumi.BoolPtrInput
	Description          pulumi.StringPtrInput
	DesireInstanceNumber pulumi.IntPtrInput
	Enable               pulumi.BoolPtrInput
	EnterpriseProjectId  pulumi.StringPtrInput
	ForceDelete          pulumi.BoolPtrInput
	// The health check grace period for instances, in seconds.
	HealthPeriodicAuditGracePeriod pulumi.IntPtrInput
	HealthPeriodicAuditMethod      pulumi.StringPtrInput
	// The health check period for instances, in minutes.
	HealthPeriodicAuditTime pulumi.IntPtrInput
	InstanceTerminatePolicy pulumi.StringPtrInput
	// The instances id list in the as group.
	Instances pulumi.StringArrayInput
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaasListeners instead
	LbListenerId         pulumi.StringPtrInput
	LbaasListeners       AsGroupLbaasListenerArrayInput
	MaxInstanceNumber    pulumi.IntPtrInput
	MinInstanceNumber    pulumi.IntPtrInput
	MultiAzScalingPolicy pulumi.StringPtrInput
	Networks             AsGroupNetworkArrayInput
	// schema: Deprecated; The notification mode has been canceled
	Notifications pulumi.StringArrayInput
	Region        pulumi.StringPtrInput
	// schema: Required
	ScalingConfigurationId pulumi.StringPtrInput
	ScalingGroupName       pulumi.StringPtrInput
	SecurityGroups         AsGroupSecurityGroupArrayInput
	Status                 pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	VpcId                  pulumi.StringPtrInput
}

func (AsGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*asGroupState)(nil)).Elem()
}

type asGroupArgs struct {
	AgencyName        *string  `pulumi:"agencyName"`
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// schema: Deprecated; use availabilityZones instead
	AvailableZones []string `pulumi:"availableZones"`
	// The cooling duration, in seconds.
	CoolDownTime *int `pulumi:"coolDownTime"`
	// Whether to delete instances when they are removed from the AS group.
	DeleteInstances      *string `pulumi:"deleteInstances"`
	DeletePublicip       *bool   `pulumi:"deletePublicip"`
	DeleteVolume         *bool   `pulumi:"deleteVolume"`
	Description          *string `pulumi:"description"`
	DesireInstanceNumber *int    `pulumi:"desireInstanceNumber"`
	Enable               *bool   `pulumi:"enable"`
	EnterpriseProjectId  *string `pulumi:"enterpriseProjectId"`
	ForceDelete          *bool   `pulumi:"forceDelete"`
	// The health check grace period for instances, in seconds.
	HealthPeriodicAuditGracePeriod *int    `pulumi:"healthPeriodicAuditGracePeriod"`
	HealthPeriodicAuditMethod      *string `pulumi:"healthPeriodicAuditMethod"`
	// The health check period for instances, in minutes.
	HealthPeriodicAuditTime *int    `pulumi:"healthPeriodicAuditTime"`
	InstanceTerminatePolicy *string `pulumi:"instanceTerminatePolicy"`
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaasListeners instead
	LbListenerId         *string                `pulumi:"lbListenerId"`
	LbaasListeners       []AsGroupLbaasListener `pulumi:"lbaasListeners"`
	MaxInstanceNumber    *int                   `pulumi:"maxInstanceNumber"`
	MinInstanceNumber    *int                   `pulumi:"minInstanceNumber"`
	MultiAzScalingPolicy *string                `pulumi:"multiAzScalingPolicy"`
	Networks             []AsGroupNetwork       `pulumi:"networks"`
	// schema: Deprecated; The notification mode has been canceled
	Notifications []string `pulumi:"notifications"`
	Region        *string  `pulumi:"region"`
	// schema: Required
	ScalingConfigurationId *string                `pulumi:"scalingConfigurationId"`
	ScalingGroupName       string                 `pulumi:"scalingGroupName"`
	SecurityGroups         []AsGroupSecurityGroup `pulumi:"securityGroups"`
	Tags                   map[string]string      `pulumi:"tags"`
	VpcId                  string                 `pulumi:"vpcId"`
}

// The set of arguments for constructing a AsGroup resource.
type AsGroupArgs struct {
	AgencyName        pulumi.StringPtrInput
	AvailabilityZones pulumi.StringArrayInput
	// schema: Deprecated; use availabilityZones instead
	AvailableZones pulumi.StringArrayInput
	// The cooling duration, in seconds.
	CoolDownTime pulumi.IntPtrInput
	// Whether to delete instances when they are removed from the AS group.
	DeleteInstances      pulumi.StringPtrInput
	DeletePublicip       pulumi.BoolPtrInput
	DeleteVolume         pulumi.BoolPtrInput
	Description          pulumi.StringPtrInput
	DesireInstanceNumber pulumi.IntPtrInput
	Enable               pulumi.BoolPtrInput
	EnterpriseProjectId  pulumi.StringPtrInput
	ForceDelete          pulumi.BoolPtrInput
	// The health check grace period for instances, in seconds.
	HealthPeriodicAuditGracePeriod pulumi.IntPtrInput
	HealthPeriodicAuditMethod      pulumi.StringPtrInput
	// The health check period for instances, in minutes.
	HealthPeriodicAuditTime pulumi.IntPtrInput
	InstanceTerminatePolicy pulumi.StringPtrInput
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaasListeners instead
	LbListenerId         pulumi.StringPtrInput
	LbaasListeners       AsGroupLbaasListenerArrayInput
	MaxInstanceNumber    pulumi.IntPtrInput
	MinInstanceNumber    pulumi.IntPtrInput
	MultiAzScalingPolicy pulumi.StringPtrInput
	Networks             AsGroupNetworkArrayInput
	// schema: Deprecated; The notification mode has been canceled
	Notifications pulumi.StringArrayInput
	Region        pulumi.StringPtrInput
	// schema: Required
	ScalingConfigurationId pulumi.StringPtrInput
	ScalingGroupName       pulumi.StringInput
	SecurityGroups         AsGroupSecurityGroupArrayInput
	Tags                   pulumi.StringMapInput
	VpcId                  pulumi.StringInput
}

func (AsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*asGroupArgs)(nil)).Elem()
}

type AsGroupInput interface {
	pulumi.Input

	ToAsGroupOutput() AsGroupOutput
	ToAsGroupOutputWithContext(ctx context.Context) AsGroupOutput
}

func (*AsGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AsGroup)(nil)).Elem()
}

func (i *AsGroup) ToAsGroupOutput() AsGroupOutput {
	return i.ToAsGroupOutputWithContext(context.Background())
}

func (i *AsGroup) ToAsGroupOutputWithContext(ctx context.Context) AsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupOutput)
}

// AsGroupArrayInput is an input type that accepts AsGroupArray and AsGroupArrayOutput values.
// You can construct a concrete instance of `AsGroupArrayInput` via:
//
//	AsGroupArray{ AsGroupArgs{...} }
type AsGroupArrayInput interface {
	pulumi.Input

	ToAsGroupArrayOutput() AsGroupArrayOutput
	ToAsGroupArrayOutputWithContext(context.Context) AsGroupArrayOutput
}

type AsGroupArray []AsGroupInput

func (AsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AsGroup)(nil)).Elem()
}

func (i AsGroupArray) ToAsGroupArrayOutput() AsGroupArrayOutput {
	return i.ToAsGroupArrayOutputWithContext(context.Background())
}

func (i AsGroupArray) ToAsGroupArrayOutputWithContext(ctx context.Context) AsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupArrayOutput)
}

// AsGroupMapInput is an input type that accepts AsGroupMap and AsGroupMapOutput values.
// You can construct a concrete instance of `AsGroupMapInput` via:
//
//	AsGroupMap{ "key": AsGroupArgs{...} }
type AsGroupMapInput interface {
	pulumi.Input

	ToAsGroupMapOutput() AsGroupMapOutput
	ToAsGroupMapOutputWithContext(context.Context) AsGroupMapOutput
}

type AsGroupMap map[string]AsGroupInput

func (AsGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AsGroup)(nil)).Elem()
}

func (i AsGroupMap) ToAsGroupMapOutput() AsGroupMapOutput {
	return i.ToAsGroupMapOutputWithContext(context.Background())
}

func (i AsGroupMap) ToAsGroupMapOutputWithContext(ctx context.Context) AsGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupMapOutput)
}

type AsGroupOutput struct{ *pulumi.OutputState }

func (AsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsGroup)(nil)).Elem()
}

func (o AsGroupOutput) ToAsGroupOutput() AsGroupOutput {
	return o
}

func (o AsGroupOutput) ToAsGroupOutputWithContext(ctx context.Context) AsGroupOutput {
	return o
}

func (o AsGroupOutput) AgencyName() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.AgencyName }).(pulumi.StringOutput)
}

func (o AsGroupOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// schema: Deprecated; use availabilityZones instead
func (o AsGroupOutput) AvailableZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringArrayOutput { return v.AvailableZones }).(pulumi.StringArrayOutput)
}

// The cooling duration, in seconds.
func (o AsGroupOutput) CoolDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.IntPtrOutput { return v.CoolDownTime }).(pulumi.IntPtrOutput)
}

func (o AsGroupOutput) CurrentInstanceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.IntOutput { return v.CurrentInstanceNumber }).(pulumi.IntOutput)
}

// Whether to delete instances when they are removed from the AS group.
func (o AsGroupOutput) DeleteInstances() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringPtrOutput { return v.DeleteInstances }).(pulumi.StringPtrOutput)
}

func (o AsGroupOutput) DeletePublicip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.BoolPtrOutput { return v.DeletePublicip }).(pulumi.BoolPtrOutput)
}

func (o AsGroupOutput) DeleteVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.BoolOutput { return v.DeleteVolume }).(pulumi.BoolOutput)
}

func (o AsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o AsGroupOutput) DesireInstanceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.IntOutput { return v.DesireInstanceNumber }).(pulumi.IntOutput)
}

func (o AsGroupOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.BoolPtrOutput { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o AsGroupOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o AsGroupOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// The health check grace period for instances, in seconds.
func (o AsGroupOutput) HealthPeriodicAuditGracePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.IntOutput { return v.HealthPeriodicAuditGracePeriod }).(pulumi.IntOutput)
}

func (o AsGroupOutput) HealthPeriodicAuditMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringPtrOutput { return v.HealthPeriodicAuditMethod }).(pulumi.StringPtrOutput)
}

// The health check period for instances, in minutes.
func (o AsGroupOutput) HealthPeriodicAuditTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.IntPtrOutput { return v.HealthPeriodicAuditTime }).(pulumi.IntPtrOutput)
}

func (o AsGroupOutput) InstanceTerminatePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringPtrOutput { return v.InstanceTerminatePolicy }).(pulumi.StringPtrOutput)
}

// The instances id list in the as group.
func (o AsGroupOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringArrayOutput { return v.Instances }).(pulumi.StringArrayOutput)
}

// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
//
// Deprecated: use lbaasListeners instead
func (o AsGroupOutput) LbListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringPtrOutput { return v.LbListenerId }).(pulumi.StringPtrOutput)
}

func (o AsGroupOutput) LbaasListeners() AsGroupLbaasListenerArrayOutput {
	return o.ApplyT(func(v *AsGroup) AsGroupLbaasListenerArrayOutput { return v.LbaasListeners }).(AsGroupLbaasListenerArrayOutput)
}

func (o AsGroupOutput) MaxInstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.IntPtrOutput { return v.MaxInstanceNumber }).(pulumi.IntPtrOutput)
}

func (o AsGroupOutput) MinInstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.IntPtrOutput { return v.MinInstanceNumber }).(pulumi.IntPtrOutput)
}

func (o AsGroupOutput) MultiAzScalingPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.MultiAzScalingPolicy }).(pulumi.StringOutput)
}

func (o AsGroupOutput) Networks() AsGroupNetworkArrayOutput {
	return o.ApplyT(func(v *AsGroup) AsGroupNetworkArrayOutput { return v.Networks }).(AsGroupNetworkArrayOutput)
}

// schema: Deprecated; The notification mode has been canceled
func (o AsGroupOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringArrayOutput { return v.Notifications }).(pulumi.StringArrayOutput)
}

func (o AsGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// schema: Required
func (o AsGroupOutput) ScalingConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.ScalingConfigurationId }).(pulumi.StringOutput)
}

func (o AsGroupOutput) ScalingGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.ScalingGroupName }).(pulumi.StringOutput)
}

func (o AsGroupOutput) SecurityGroups() AsGroupSecurityGroupArrayOutput {
	return o.ApplyT(func(v *AsGroup) AsGroupSecurityGroupArrayOutput { return v.SecurityGroups }).(AsGroupSecurityGroupArrayOutput)
}

func (o AsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o AsGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AsGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AsGroup) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AsGroupArrayOutput struct{ *pulumi.OutputState }

func (AsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AsGroup)(nil)).Elem()
}

func (o AsGroupArrayOutput) ToAsGroupArrayOutput() AsGroupArrayOutput {
	return o
}

func (o AsGroupArrayOutput) ToAsGroupArrayOutputWithContext(ctx context.Context) AsGroupArrayOutput {
	return o
}

func (o AsGroupArrayOutput) Index(i pulumi.IntInput) AsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AsGroup {
		return vs[0].([]*AsGroup)[vs[1].(int)]
	}).(AsGroupOutput)
}

type AsGroupMapOutput struct{ *pulumi.OutputState }

func (AsGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AsGroup)(nil)).Elem()
}

func (o AsGroupMapOutput) ToAsGroupMapOutput() AsGroupMapOutput {
	return o
}

func (o AsGroupMapOutput) ToAsGroupMapOutputWithContext(ctx context.Context) AsGroupMapOutput {
	return o
}

func (o AsGroupMapOutput) MapIndex(k pulumi.StringInput) AsGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AsGroup {
		return vs[0].(map[string]*AsGroup)[vs[1].(string)]
	}).(AsGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupInput)(nil)).Elem(), &AsGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupArrayInput)(nil)).Elem(), AsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupMapInput)(nil)).Elem(), AsGroupMap{})
	pulumi.RegisterOutputType(AsGroupOutput{})
	pulumi.RegisterOutputType(AsGroupArrayOutput{})
	pulumi.RegisterOutputType(AsGroupMapOutput{})
}
