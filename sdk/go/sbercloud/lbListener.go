// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LbListener struct {
	pulumi.CustomResourceState

	AdminStateUp           pulumi.BoolPtrOutput     `pulumi:"adminStateUp"`
	ConnectionLimit        pulumi.IntOutput         `pulumi:"connectionLimit"`
	DefaultPoolId          pulumi.StringOutput      `pulumi:"defaultPoolId"`
	DefaultTlsContainerRef pulumi.StringPtrOutput   `pulumi:"defaultTlsContainerRef"`
	Description            pulumi.StringPtrOutput   `pulumi:"description"`
	Http2Enable            pulumi.BoolPtrOutput     `pulumi:"http2Enable"`
	LoadbalancerId         pulumi.StringOutput      `pulumi:"loadbalancerId"`
	Name                   pulumi.StringOutput      `pulumi:"name"`
	Protocol               pulumi.StringOutput      `pulumi:"protocol"`
	ProtocolPort           pulumi.IntOutput         `pulumi:"protocolPort"`
	Region                 pulumi.StringOutput      `pulumi:"region"`
	SniContainerRefs       pulumi.StringArrayOutput `pulumi:"sniContainerRefs"`
	Tags                   pulumi.StringMapOutput   `pulumi:"tags"`
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewLbListener registers a new resource with the given unique name, arguments, and options.
func NewLbListener(ctx *pulumi.Context,
	name string, args *LbListenerArgs, opts ...pulumi.ResourceOption) (*LbListener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LoadbalancerId == nil {
		return nil, errors.New("invalid value for required argument 'LoadbalancerId'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.ProtocolPort == nil {
		return nil, errors.New("invalid value for required argument 'ProtocolPort'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbListener
	err := ctx.RegisterResource("sbercloud:index/lbListener:LbListener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbListener gets an existing LbListener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbListenerState, opts ...pulumi.ResourceOption) (*LbListener, error) {
	var resource LbListener
	err := ctx.ReadResource("sbercloud:index/lbListener:LbListener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbListener resources.
type lbListenerState struct {
	AdminStateUp           *bool             `pulumi:"adminStateUp"`
	ConnectionLimit        *int              `pulumi:"connectionLimit"`
	DefaultPoolId          *string           `pulumi:"defaultPoolId"`
	DefaultTlsContainerRef *string           `pulumi:"defaultTlsContainerRef"`
	Description            *string           `pulumi:"description"`
	Http2Enable            *bool             `pulumi:"http2Enable"`
	LoadbalancerId         *string           `pulumi:"loadbalancerId"`
	Name                   *string           `pulumi:"name"`
	Protocol               *string           `pulumi:"protocol"`
	ProtocolPort           *int              `pulumi:"protocolPort"`
	Region                 *string           `pulumi:"region"`
	SniContainerRefs       []string          `pulumi:"sniContainerRefs"`
	Tags                   map[string]string `pulumi:"tags"`
	// Deprecated: tenant_id is deprecated
	TenantId *string `pulumi:"tenantId"`
}

type LbListenerState struct {
	AdminStateUp           pulumi.BoolPtrInput
	ConnectionLimit        pulumi.IntPtrInput
	DefaultPoolId          pulumi.StringPtrInput
	DefaultTlsContainerRef pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	Http2Enable            pulumi.BoolPtrInput
	LoadbalancerId         pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	Protocol               pulumi.StringPtrInput
	ProtocolPort           pulumi.IntPtrInput
	Region                 pulumi.StringPtrInput
	SniContainerRefs       pulumi.StringArrayInput
	Tags                   pulumi.StringMapInput
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringPtrInput
}

func (LbListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbListenerState)(nil)).Elem()
}

type lbListenerArgs struct {
	AdminStateUp           *bool             `pulumi:"adminStateUp"`
	ConnectionLimit        *int              `pulumi:"connectionLimit"`
	DefaultPoolId          *string           `pulumi:"defaultPoolId"`
	DefaultTlsContainerRef *string           `pulumi:"defaultTlsContainerRef"`
	Description            *string           `pulumi:"description"`
	Http2Enable            *bool             `pulumi:"http2Enable"`
	LoadbalancerId         string            `pulumi:"loadbalancerId"`
	Name                   *string           `pulumi:"name"`
	Protocol               string            `pulumi:"protocol"`
	ProtocolPort           int               `pulumi:"protocolPort"`
	Region                 *string           `pulumi:"region"`
	SniContainerRefs       []string          `pulumi:"sniContainerRefs"`
	Tags                   map[string]string `pulumi:"tags"`
	// Deprecated: tenant_id is deprecated
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a LbListener resource.
type LbListenerArgs struct {
	AdminStateUp           pulumi.BoolPtrInput
	ConnectionLimit        pulumi.IntPtrInput
	DefaultPoolId          pulumi.StringPtrInput
	DefaultTlsContainerRef pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	Http2Enable            pulumi.BoolPtrInput
	LoadbalancerId         pulumi.StringInput
	Name                   pulumi.StringPtrInput
	Protocol               pulumi.StringInput
	ProtocolPort           pulumi.IntInput
	Region                 pulumi.StringPtrInput
	SniContainerRefs       pulumi.StringArrayInput
	Tags                   pulumi.StringMapInput
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringPtrInput
}

func (LbListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbListenerArgs)(nil)).Elem()
}

type LbListenerInput interface {
	pulumi.Input

	ToLbListenerOutput() LbListenerOutput
	ToLbListenerOutputWithContext(ctx context.Context) LbListenerOutput
}

func (*LbListener) ElementType() reflect.Type {
	return reflect.TypeOf((**LbListener)(nil)).Elem()
}

func (i *LbListener) ToLbListenerOutput() LbListenerOutput {
	return i.ToLbListenerOutputWithContext(context.Background())
}

func (i *LbListener) ToLbListenerOutputWithContext(ctx context.Context) LbListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbListenerOutput)
}

// LbListenerArrayInput is an input type that accepts LbListenerArray and LbListenerArrayOutput values.
// You can construct a concrete instance of `LbListenerArrayInput` via:
//
//	LbListenerArray{ LbListenerArgs{...} }
type LbListenerArrayInput interface {
	pulumi.Input

	ToLbListenerArrayOutput() LbListenerArrayOutput
	ToLbListenerArrayOutputWithContext(context.Context) LbListenerArrayOutput
}

type LbListenerArray []LbListenerInput

func (LbListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbListener)(nil)).Elem()
}

func (i LbListenerArray) ToLbListenerArrayOutput() LbListenerArrayOutput {
	return i.ToLbListenerArrayOutputWithContext(context.Background())
}

func (i LbListenerArray) ToLbListenerArrayOutputWithContext(ctx context.Context) LbListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbListenerArrayOutput)
}

// LbListenerMapInput is an input type that accepts LbListenerMap and LbListenerMapOutput values.
// You can construct a concrete instance of `LbListenerMapInput` via:
//
//	LbListenerMap{ "key": LbListenerArgs{...} }
type LbListenerMapInput interface {
	pulumi.Input

	ToLbListenerMapOutput() LbListenerMapOutput
	ToLbListenerMapOutputWithContext(context.Context) LbListenerMapOutput
}

type LbListenerMap map[string]LbListenerInput

func (LbListenerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbListener)(nil)).Elem()
}

func (i LbListenerMap) ToLbListenerMapOutput() LbListenerMapOutput {
	return i.ToLbListenerMapOutputWithContext(context.Background())
}

func (i LbListenerMap) ToLbListenerMapOutputWithContext(ctx context.Context) LbListenerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbListenerMapOutput)
}

type LbListenerOutput struct{ *pulumi.OutputState }

func (LbListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbListener)(nil)).Elem()
}

func (o LbListenerOutput) ToLbListenerOutput() LbListenerOutput {
	return o
}

func (o LbListenerOutput) ToLbListenerOutputWithContext(ctx context.Context) LbListenerOutput {
	return o
}

func (o LbListenerOutput) AdminStateUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LbListener) pulumi.BoolPtrOutput { return v.AdminStateUp }).(pulumi.BoolPtrOutput)
}

func (o LbListenerOutput) ConnectionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *LbListener) pulumi.IntOutput { return v.ConnectionLimit }).(pulumi.IntOutput)
}

func (o LbListenerOutput) DefaultPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringOutput { return v.DefaultPoolId }).(pulumi.StringOutput)
}

func (o LbListenerOutput) DefaultTlsContainerRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringPtrOutput { return v.DefaultTlsContainerRef }).(pulumi.StringPtrOutput)
}

func (o LbListenerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LbListenerOutput) Http2Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LbListener) pulumi.BoolPtrOutput { return v.Http2Enable }).(pulumi.BoolPtrOutput)
}

func (o LbListenerOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringOutput { return v.LoadbalancerId }).(pulumi.StringOutput)
}

func (o LbListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LbListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o LbListenerOutput) ProtocolPort() pulumi.IntOutput {
	return o.ApplyT(func(v *LbListener) pulumi.IntOutput { return v.ProtocolPort }).(pulumi.IntOutput)
}

func (o LbListenerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o LbListenerOutput) SniContainerRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringArrayOutput { return v.SniContainerRefs }).(pulumi.StringArrayOutput)
}

func (o LbListenerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: tenant_id is deprecated
func (o LbListenerOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbListener) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type LbListenerArrayOutput struct{ *pulumi.OutputState }

func (LbListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbListener)(nil)).Elem()
}

func (o LbListenerArrayOutput) ToLbListenerArrayOutput() LbListenerArrayOutput {
	return o
}

func (o LbListenerArrayOutput) ToLbListenerArrayOutputWithContext(ctx context.Context) LbListenerArrayOutput {
	return o
}

func (o LbListenerArrayOutput) Index(i pulumi.IntInput) LbListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LbListener {
		return vs[0].([]*LbListener)[vs[1].(int)]
	}).(LbListenerOutput)
}

type LbListenerMapOutput struct{ *pulumi.OutputState }

func (LbListenerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbListener)(nil)).Elem()
}

func (o LbListenerMapOutput) ToLbListenerMapOutput() LbListenerMapOutput {
	return o
}

func (o LbListenerMapOutput) ToLbListenerMapOutputWithContext(ctx context.Context) LbListenerMapOutput {
	return o
}

func (o LbListenerMapOutput) MapIndex(k pulumi.StringInput) LbListenerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LbListener {
		return vs[0].(map[string]*LbListener)[vs[1].(string)]
	}).(LbListenerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbListenerInput)(nil)).Elem(), &LbListener{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbListenerArrayInput)(nil)).Elem(), LbListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbListenerMapInput)(nil)).Elem(), LbListenerMap{})
	pulumi.RegisterOutputType(LbListenerOutput{})
	pulumi.RegisterOutputType(LbListenerArrayOutput{})
	pulumi.RegisterOutputType(LbListenerMapOutput{})
}
