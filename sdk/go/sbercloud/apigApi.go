// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApigApi struct {
	pulumi.CustomResourceState

	// The ID of the authorizer to which the API request used.
	AuthorizerId pulumi.StringPtrOutput `pulumi:"authorizerId"`
	// The configurations of the backend parameters.
	BackendParams ApigApiBackendParamArrayOutput `pulumi:"backendParams"`
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription pulumi.StringPtrOutput `pulumi:"bodyDescription"`
	// The content type of the request body.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// Whether CORS is supported.
	Cors pulumi.BoolPtrOutput `pulumi:"cors"`
	// The API description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The example response for a failure request.
	FailureResponse pulumi.StringPtrOutput `pulumi:"failureResponse"`
	// The FunctionGraph backend details.
	FuncGraph ApigApiFuncGraphOutput `pulumi:"funcGraph"`
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies ApigApiFuncGraphPolicyArrayOutput `pulumi:"funcGraphPolicies"`
	// The ID of the API group to which the API belongs.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The ID of the instance to which the API belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 pulumi.BoolPtrOutput `pulumi:"isSendFgBodyBase64"`
	// The matching mode of the API.
	Matching pulumi.StringPtrOutput `pulumi:"matching"`
	// The mock backend details.
	Mock ApigApiMockOutput `pulumi:"mock"`
	// The mock policy backends.
	MockPolicies ApigApiMockPolicyArrayOutput `pulumi:"mockPolicies"`
	// The API name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region where the API is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The registered time of the API.
	RegisteredAt pulumi.StringOutput `pulumi:"registeredAt"`
	// The request method of the API.
	RequestMethod pulumi.StringOutput `pulumi:"requestMethod"`
	// The configurations of the front-end parameters.
	RequestParams ApigApiRequestParamArrayOutput `pulumi:"requestParams"`
	// The request address.
	RequestPath pulumi.StringOutput `pulumi:"requestPath"`
	// The request protocol of the API request.
	RequestProtocol pulumi.StringOutput `pulumi:"requestProtocol"`
	// The ID of the custom response that API used.
	ResponseId pulumi.StringPtrOutput `pulumi:"responseId"`
	// The security authentication mode of the API request.
	SecurityAuthentication pulumi.StringPtrOutput `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication pulumi.BoolOutput `pulumi:"simpleAuthentication"`
	// The example response for a successful request.
	SuccessResponse pulumi.StringPtrOutput `pulumi:"successResponse"`
	// The list of tags configuration.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The API type.
	Type pulumi.StringOutput `pulumi:"type"`
	// The latest update time of the API.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The web backend details.
	Web ApigApiWebOutput `pulumi:"web"`
	// The web policy backends.
	WebPolicies ApigApiWebPolicyArrayOutput `pulumi:"webPolicies"`
}

// NewApigApi registers a new resource with the given unique name, arguments, and options.
func NewApigApi(ctx *pulumi.Context,
	name string, args *ApigApiArgs, opts ...pulumi.ResourceOption) (*ApigApi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.RequestMethod == nil {
		return nil, errors.New("invalid value for required argument 'RequestMethod'")
	}
	if args.RequestPath == nil {
		return nil, errors.New("invalid value for required argument 'RequestPath'")
	}
	if args.RequestProtocol == nil {
		return nil, errors.New("invalid value for required argument 'RequestProtocol'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApi
	err := ctx.RegisterResource("sbercloud:index/apigApi:ApigApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApi gets an existing ApigApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApiState, opts ...pulumi.ResourceOption) (*ApigApi, error) {
	var resource ApigApi
	err := ctx.ReadResource("sbercloud:index/apigApi:ApigApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApi resources.
type apigApiState struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configurations of the backend parameters.
	BackendParams []ApigApiBackendParam `pulumi:"backendParams"`
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription *string `pulumi:"bodyDescription"`
	// The content type of the request body.
	ContentType *string `pulumi:"contentType"`
	// Whether CORS is supported.
	Cors *bool `pulumi:"cors"`
	// The API description.
	Description *string `pulumi:"description"`
	// The example response for a failure request.
	FailureResponse *string `pulumi:"failureResponse"`
	// The FunctionGraph backend details.
	FuncGraph *ApigApiFuncGraph `pulumi:"funcGraph"`
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies []ApigApiFuncGraphPolicy `pulumi:"funcGraphPolicies"`
	// The ID of the API group to which the API belongs.
	GroupId *string `pulumi:"groupId"`
	// The ID of the instance to which the API belongs.
	InstanceId *string `pulumi:"instanceId"`
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 *bool `pulumi:"isSendFgBodyBase64"`
	// The matching mode of the API.
	Matching *string `pulumi:"matching"`
	// The mock backend details.
	Mock *ApigApiMock `pulumi:"mock"`
	// The mock policy backends.
	MockPolicies []ApigApiMockPolicy `pulumi:"mockPolicies"`
	// The API name.
	Name *string `pulumi:"name"`
	// The region where the API is located.
	Region *string `pulumi:"region"`
	// The registered time of the API.
	RegisteredAt *string `pulumi:"registeredAt"`
	// The request method of the API.
	RequestMethod *string `pulumi:"requestMethod"`
	// The configurations of the front-end parameters.
	RequestParams []ApigApiRequestParam `pulumi:"requestParams"`
	// The request address.
	RequestPath *string `pulumi:"requestPath"`
	// The request protocol of the API request.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The ID of the custom response that API used.
	ResponseId *string `pulumi:"responseId"`
	// The security authentication mode of the API request.
	SecurityAuthentication *string `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication *bool `pulumi:"simpleAuthentication"`
	// The example response for a successful request.
	SuccessResponse *string `pulumi:"successResponse"`
	// The list of tags configuration.
	Tags []string `pulumi:"tags"`
	// The API type.
	Type *string `pulumi:"type"`
	// The latest update time of the API.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The web backend details.
	Web *ApigApiWeb `pulumi:"web"`
	// The web policy backends.
	WebPolicies []ApigApiWebPolicy `pulumi:"webPolicies"`
}

type ApigApiState struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId pulumi.StringPtrInput
	// The configurations of the backend parameters.
	BackendParams ApigApiBackendParamArrayInput
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription pulumi.StringPtrInput
	// The content type of the request body.
	ContentType pulumi.StringPtrInput
	// Whether CORS is supported.
	Cors pulumi.BoolPtrInput
	// The API description.
	Description pulumi.StringPtrInput
	// The example response for a failure request.
	FailureResponse pulumi.StringPtrInput
	// The FunctionGraph backend details.
	FuncGraph ApigApiFuncGraphPtrInput
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies ApigApiFuncGraphPolicyArrayInput
	// The ID of the API group to which the API belongs.
	GroupId pulumi.StringPtrInput
	// The ID of the instance to which the API belongs.
	InstanceId pulumi.StringPtrInput
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 pulumi.BoolPtrInput
	// The matching mode of the API.
	Matching pulumi.StringPtrInput
	// The mock backend details.
	Mock ApigApiMockPtrInput
	// The mock policy backends.
	MockPolicies ApigApiMockPolicyArrayInput
	// The API name.
	Name pulumi.StringPtrInput
	// The region where the API is located.
	Region pulumi.StringPtrInput
	// The registered time of the API.
	RegisteredAt pulumi.StringPtrInput
	// The request method of the API.
	RequestMethod pulumi.StringPtrInput
	// The configurations of the front-end parameters.
	RequestParams ApigApiRequestParamArrayInput
	// The request address.
	RequestPath pulumi.StringPtrInput
	// The request protocol of the API request.
	RequestProtocol pulumi.StringPtrInput
	// The ID of the custom response that API used.
	ResponseId pulumi.StringPtrInput
	// The security authentication mode of the API request.
	SecurityAuthentication pulumi.StringPtrInput
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication pulumi.BoolPtrInput
	// The example response for a successful request.
	SuccessResponse pulumi.StringPtrInput
	// The list of tags configuration.
	Tags pulumi.StringArrayInput
	// The API type.
	Type pulumi.StringPtrInput
	// The latest update time of the API.
	UpdatedAt pulumi.StringPtrInput
	// The web backend details.
	Web ApigApiWebPtrInput
	// The web policy backends.
	WebPolicies ApigApiWebPolicyArrayInput
}

func (ApigApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiState)(nil)).Elem()
}

type apigApiArgs struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configurations of the backend parameters.
	BackendParams []ApigApiBackendParam `pulumi:"backendParams"`
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription *string `pulumi:"bodyDescription"`
	// The content type of the request body.
	ContentType *string `pulumi:"contentType"`
	// Whether CORS is supported.
	Cors *bool `pulumi:"cors"`
	// The API description.
	Description *string `pulumi:"description"`
	// The example response for a failure request.
	FailureResponse *string `pulumi:"failureResponse"`
	// The FunctionGraph backend details.
	FuncGraph *ApigApiFuncGraph `pulumi:"funcGraph"`
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies []ApigApiFuncGraphPolicy `pulumi:"funcGraphPolicies"`
	// The ID of the API group to which the API belongs.
	GroupId string `pulumi:"groupId"`
	// The ID of the instance to which the API belongs.
	InstanceId string `pulumi:"instanceId"`
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 *bool `pulumi:"isSendFgBodyBase64"`
	// The matching mode of the API.
	Matching *string `pulumi:"matching"`
	// The mock backend details.
	Mock *ApigApiMock `pulumi:"mock"`
	// The mock policy backends.
	MockPolicies []ApigApiMockPolicy `pulumi:"mockPolicies"`
	// The API name.
	Name *string `pulumi:"name"`
	// The region where the API is located.
	Region *string `pulumi:"region"`
	// The request method of the API.
	RequestMethod string `pulumi:"requestMethod"`
	// The configurations of the front-end parameters.
	RequestParams []ApigApiRequestParam `pulumi:"requestParams"`
	// The request address.
	RequestPath string `pulumi:"requestPath"`
	// The request protocol of the API request.
	RequestProtocol string `pulumi:"requestProtocol"`
	// The ID of the custom response that API used.
	ResponseId *string `pulumi:"responseId"`
	// The security authentication mode of the API request.
	SecurityAuthentication *string `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication *bool `pulumi:"simpleAuthentication"`
	// The example response for a successful request.
	SuccessResponse *string `pulumi:"successResponse"`
	// The list of tags configuration.
	Tags []string `pulumi:"tags"`
	// The API type.
	Type string `pulumi:"type"`
	// The web backend details.
	Web *ApigApiWeb `pulumi:"web"`
	// The web policy backends.
	WebPolicies []ApigApiWebPolicy `pulumi:"webPolicies"`
}

// The set of arguments for constructing a ApigApi resource.
type ApigApiArgs struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId pulumi.StringPtrInput
	// The configurations of the backend parameters.
	BackendParams ApigApiBackendParamArrayInput
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription pulumi.StringPtrInput
	// The content type of the request body.
	ContentType pulumi.StringPtrInput
	// Whether CORS is supported.
	Cors pulumi.BoolPtrInput
	// The API description.
	Description pulumi.StringPtrInput
	// The example response for a failure request.
	FailureResponse pulumi.StringPtrInput
	// The FunctionGraph backend details.
	FuncGraph ApigApiFuncGraphPtrInput
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies ApigApiFuncGraphPolicyArrayInput
	// The ID of the API group to which the API belongs.
	GroupId pulumi.StringInput
	// The ID of the instance to which the API belongs.
	InstanceId pulumi.StringInput
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 pulumi.BoolPtrInput
	// The matching mode of the API.
	Matching pulumi.StringPtrInput
	// The mock backend details.
	Mock ApigApiMockPtrInput
	// The mock policy backends.
	MockPolicies ApigApiMockPolicyArrayInput
	// The API name.
	Name pulumi.StringPtrInput
	// The region where the API is located.
	Region pulumi.StringPtrInput
	// The request method of the API.
	RequestMethod pulumi.StringInput
	// The configurations of the front-end parameters.
	RequestParams ApigApiRequestParamArrayInput
	// The request address.
	RequestPath pulumi.StringInput
	// The request protocol of the API request.
	RequestProtocol pulumi.StringInput
	// The ID of the custom response that API used.
	ResponseId pulumi.StringPtrInput
	// The security authentication mode of the API request.
	SecurityAuthentication pulumi.StringPtrInput
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication pulumi.BoolPtrInput
	// The example response for a successful request.
	SuccessResponse pulumi.StringPtrInput
	// The list of tags configuration.
	Tags pulumi.StringArrayInput
	// The API type.
	Type pulumi.StringInput
	// The web backend details.
	Web ApigApiWebPtrInput
	// The web policy backends.
	WebPolicies ApigApiWebPolicyArrayInput
}

func (ApigApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiArgs)(nil)).Elem()
}

type ApigApiInput interface {
	pulumi.Input

	ToApigApiOutput() ApigApiOutput
	ToApigApiOutputWithContext(ctx context.Context) ApigApiOutput
}

func (*ApigApi) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApi)(nil)).Elem()
}

func (i *ApigApi) ToApigApiOutput() ApigApiOutput {
	return i.ToApigApiOutputWithContext(context.Background())
}

func (i *ApigApi) ToApigApiOutputWithContext(ctx context.Context) ApigApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiOutput)
}

// ApigApiArrayInput is an input type that accepts ApigApiArray and ApigApiArrayOutput values.
// You can construct a concrete instance of `ApigApiArrayInput` via:
//
//	ApigApiArray{ ApigApiArgs{...} }
type ApigApiArrayInput interface {
	pulumi.Input

	ToApigApiArrayOutput() ApigApiArrayOutput
	ToApigApiArrayOutputWithContext(context.Context) ApigApiArrayOutput
}

type ApigApiArray []ApigApiInput

func (ApigApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApi)(nil)).Elem()
}

func (i ApigApiArray) ToApigApiArrayOutput() ApigApiArrayOutput {
	return i.ToApigApiArrayOutputWithContext(context.Background())
}

func (i ApigApiArray) ToApigApiArrayOutputWithContext(ctx context.Context) ApigApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiArrayOutput)
}

// ApigApiMapInput is an input type that accepts ApigApiMap and ApigApiMapOutput values.
// You can construct a concrete instance of `ApigApiMapInput` via:
//
//	ApigApiMap{ "key": ApigApiArgs{...} }
type ApigApiMapInput interface {
	pulumi.Input

	ToApigApiMapOutput() ApigApiMapOutput
	ToApigApiMapOutputWithContext(context.Context) ApigApiMapOutput
}

type ApigApiMap map[string]ApigApiInput

func (ApigApiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApi)(nil)).Elem()
}

func (i ApigApiMap) ToApigApiMapOutput() ApigApiMapOutput {
	return i.ToApigApiMapOutputWithContext(context.Background())
}

func (i ApigApiMap) ToApigApiMapOutputWithContext(ctx context.Context) ApigApiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMapOutput)
}

type ApigApiOutput struct{ *pulumi.OutputState }

func (ApigApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApi)(nil)).Elem()
}

func (o ApigApiOutput) ToApigApiOutput() ApigApiOutput {
	return o
}

func (o ApigApiOutput) ToApigApiOutputWithContext(ctx context.Context) ApigApiOutput {
	return o
}

// The ID of the authorizer to which the API request used.
func (o ApigApiOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The configurations of the backend parameters.
func (o ApigApiOutput) BackendParams() ApigApiBackendParamArrayOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiBackendParamArrayOutput { return v.BackendParams }).(ApigApiBackendParamArrayOutput)
}

// The description of the API request body, which can be an example request body, media type or parameters.
func (o ApigApiOutput) BodyDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.BodyDescription }).(pulumi.StringPtrOutput)
}

// The content type of the request body.
func (o ApigApiOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

// Whether CORS is supported.
func (o ApigApiOutput) Cors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.BoolPtrOutput { return v.Cors }).(pulumi.BoolPtrOutput)
}

// The API description.
func (o ApigApiOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The example response for a failure request.
func (o ApigApiOutput) FailureResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.FailureResponse }).(pulumi.StringPtrOutput)
}

// The FunctionGraph backend details.
func (o ApigApiOutput) FuncGraph() ApigApiFuncGraphOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiFuncGraphOutput { return v.FuncGraph }).(ApigApiFuncGraphOutput)
}

// The policy backends of the FunctionGraph function.
func (o ApigApiOutput) FuncGraphPolicies() ApigApiFuncGraphPolicyArrayOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiFuncGraphPolicyArrayOutput { return v.FuncGraphPolicies }).(ApigApiFuncGraphPolicyArrayOutput)
}

// The ID of the API group to which the API belongs.
func (o ApigApiOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the instance to which the API belongs.
func (o ApigApiOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
func (o ApigApiOutput) IsSendFgBodyBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.BoolPtrOutput { return v.IsSendFgBodyBase64 }).(pulumi.BoolPtrOutput)
}

// The matching mode of the API.
func (o ApigApiOutput) Matching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.Matching }).(pulumi.StringPtrOutput)
}

// The mock backend details.
func (o ApigApiOutput) Mock() ApigApiMockOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiMockOutput { return v.Mock }).(ApigApiMockOutput)
}

// The mock policy backends.
func (o ApigApiOutput) MockPolicies() ApigApiMockPolicyArrayOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiMockPolicyArrayOutput { return v.MockPolicies }).(ApigApiMockPolicyArrayOutput)
}

// The API name.
func (o ApigApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region where the API is located.
func (o ApigApiOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The registered time of the API.
func (o ApigApiOutput) RegisteredAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.RegisteredAt }).(pulumi.StringOutput)
}

// The request method of the API.
func (o ApigApiOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.RequestMethod }).(pulumi.StringOutput)
}

// The configurations of the front-end parameters.
func (o ApigApiOutput) RequestParams() ApigApiRequestParamArrayOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiRequestParamArrayOutput { return v.RequestParams }).(ApigApiRequestParamArrayOutput)
}

// The request address.
func (o ApigApiOutput) RequestPath() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.RequestPath }).(pulumi.StringOutput)
}

// The request protocol of the API request.
func (o ApigApiOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.RequestProtocol }).(pulumi.StringOutput)
}

// The ID of the custom response that API used.
func (o ApigApiOutput) ResponseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.ResponseId }).(pulumi.StringPtrOutput)
}

// The security authentication mode of the API request.
func (o ApigApiOutput) SecurityAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.SecurityAuthentication }).(pulumi.StringPtrOutput)
}

// Whether the authentication of the application code is enabled.
func (o ApigApiOutput) SimpleAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.BoolOutput { return v.SimpleAuthentication }).(pulumi.BoolOutput)
}

// The example response for a successful request.
func (o ApigApiOutput) SuccessResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringPtrOutput { return v.SuccessResponse }).(pulumi.StringPtrOutput)
}

// The list of tags configuration.
func (o ApigApiOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The API type.
func (o ApigApiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the API.
func (o ApigApiOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApi) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The web backend details.
func (o ApigApiOutput) Web() ApigApiWebOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiWebOutput { return v.Web }).(ApigApiWebOutput)
}

// The web policy backends.
func (o ApigApiOutput) WebPolicies() ApigApiWebPolicyArrayOutput {
	return o.ApplyT(func(v *ApigApi) ApigApiWebPolicyArrayOutput { return v.WebPolicies }).(ApigApiWebPolicyArrayOutput)
}

type ApigApiArrayOutput struct{ *pulumi.OutputState }

func (ApigApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApi)(nil)).Elem()
}

func (o ApigApiArrayOutput) ToApigApiArrayOutput() ApigApiArrayOutput {
	return o
}

func (o ApigApiArrayOutput) ToApigApiArrayOutputWithContext(ctx context.Context) ApigApiArrayOutput {
	return o
}

func (o ApigApiArrayOutput) Index(i pulumi.IntInput) ApigApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApi {
		return vs[0].([]*ApigApi)[vs[1].(int)]
	}).(ApigApiOutput)
}

type ApigApiMapOutput struct{ *pulumi.OutputState }

func (ApigApiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApi)(nil)).Elem()
}

func (o ApigApiMapOutput) ToApigApiMapOutput() ApigApiMapOutput {
	return o
}

func (o ApigApiMapOutput) ToApigApiMapOutputWithContext(ctx context.Context) ApigApiMapOutput {
	return o
}

func (o ApigApiMapOutput) MapIndex(k pulumi.StringInput) ApigApiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApi {
		return vs[0].(map[string]*ApigApi)[vs[1].(string)]
	}).(ApigApiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiInput)(nil)).Elem(), &ApigApi{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiArrayInput)(nil)).Elem(), ApigApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMapInput)(nil)).Elem(), ApigApiMap{})
	pulumi.RegisterOutputType(ApigApiOutput{})
	pulumi.RegisterOutputType(ApigApiArrayOutput{})
	pulumi.RegisterOutputType(ApigApiMapOutput{})
}
