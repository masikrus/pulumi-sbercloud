// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CdmCluster struct {
	pulumi.CustomResourceState

	AvailabilityZone    pulumi.StringOutput           `pulumi:"availabilityZone"`
	Created             pulumi.StringOutput           `pulumi:"created"`
	Emails              pulumi.StringArrayOutput      `pulumi:"emails"`
	EnterpriseProjectId pulumi.StringOutput           `pulumi:"enterpriseProjectId"`
	FlavorId            pulumi.StringOutput           `pulumi:"flavorId"`
	FlavorName          pulumi.StringOutput           `pulumi:"flavorName"`
	Instances           CdmClusterInstanceArrayOutput `pulumi:"instances"`
	IsAutoOff           pulumi.BoolOutput             `pulumi:"isAutoOff"`
	Name                pulumi.StringOutput           `pulumi:"name"`
	PhoneNums           pulumi.StringArrayOutput      `pulumi:"phoneNums"`
	PublicEndpoint      pulumi.StringOutput           `pulumi:"publicEndpoint"`
	PublicIp            pulumi.StringOutput           `pulumi:"publicIp"`
	Region              pulumi.StringOutput           `pulumi:"region"`
	ScheduleBootTime    pulumi.StringOutput           `pulumi:"scheduleBootTime"`
	ScheduleOffTime     pulumi.StringOutput           `pulumi:"scheduleOffTime"`
	SecurityGroupId     pulumi.StringOutput           `pulumi:"securityGroupId"`
	Status              pulumi.StringOutput           `pulumi:"status"`
	SubnetId            pulumi.StringOutput           `pulumi:"subnetId"`
	Version             pulumi.StringOutput           `pulumi:"version"`
	VpcId               pulumi.StringOutput           `pulumi:"vpcId"`
}

// NewCdmCluster registers a new resource with the given unique name, arguments, and options.
func NewCdmCluster(ctx *pulumi.Context,
	name string, args *CdmClusterArgs, opts ...pulumi.ResourceOption) (*CdmCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CdmCluster
	err := ctx.RegisterResource("sbercloud:index/cdmCluster:CdmCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCdmCluster gets an existing CdmCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCdmCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CdmClusterState, opts ...pulumi.ResourceOption) (*CdmCluster, error) {
	var resource CdmCluster
	err := ctx.ReadResource("sbercloud:index/cdmCluster:CdmCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CdmCluster resources.
type cdmClusterState struct {
	AvailabilityZone    *string              `pulumi:"availabilityZone"`
	Created             *string              `pulumi:"created"`
	Emails              []string             `pulumi:"emails"`
	EnterpriseProjectId *string              `pulumi:"enterpriseProjectId"`
	FlavorId            *string              `pulumi:"flavorId"`
	FlavorName          *string              `pulumi:"flavorName"`
	Instances           []CdmClusterInstance `pulumi:"instances"`
	IsAutoOff           *bool                `pulumi:"isAutoOff"`
	Name                *string              `pulumi:"name"`
	PhoneNums           []string             `pulumi:"phoneNums"`
	PublicEndpoint      *string              `pulumi:"publicEndpoint"`
	PublicIp            *string              `pulumi:"publicIp"`
	Region              *string              `pulumi:"region"`
	ScheduleBootTime    *string              `pulumi:"scheduleBootTime"`
	ScheduleOffTime     *string              `pulumi:"scheduleOffTime"`
	SecurityGroupId     *string              `pulumi:"securityGroupId"`
	Status              *string              `pulumi:"status"`
	SubnetId            *string              `pulumi:"subnetId"`
	Version             *string              `pulumi:"version"`
	VpcId               *string              `pulumi:"vpcId"`
}

type CdmClusterState struct {
	AvailabilityZone    pulumi.StringPtrInput
	Created             pulumi.StringPtrInput
	Emails              pulumi.StringArrayInput
	EnterpriseProjectId pulumi.StringPtrInput
	FlavorId            pulumi.StringPtrInput
	FlavorName          pulumi.StringPtrInput
	Instances           CdmClusterInstanceArrayInput
	IsAutoOff           pulumi.BoolPtrInput
	Name                pulumi.StringPtrInput
	PhoneNums           pulumi.StringArrayInput
	PublicEndpoint      pulumi.StringPtrInput
	PublicIp            pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
	ScheduleBootTime    pulumi.StringPtrInput
	ScheduleOffTime     pulumi.StringPtrInput
	SecurityGroupId     pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	SubnetId            pulumi.StringPtrInput
	Version             pulumi.StringPtrInput
	VpcId               pulumi.StringPtrInput
}

func (CdmClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*cdmClusterState)(nil)).Elem()
}

type cdmClusterArgs struct {
	AvailabilityZone    string   `pulumi:"availabilityZone"`
	Emails              []string `pulumi:"emails"`
	EnterpriseProjectId *string  `pulumi:"enterpriseProjectId"`
	FlavorId            string   `pulumi:"flavorId"`
	IsAutoOff           *bool    `pulumi:"isAutoOff"`
	Name                *string  `pulumi:"name"`
	PhoneNums           []string `pulumi:"phoneNums"`
	Region              *string  `pulumi:"region"`
	ScheduleBootTime    *string  `pulumi:"scheduleBootTime"`
	ScheduleOffTime     *string  `pulumi:"scheduleOffTime"`
	SecurityGroupId     string   `pulumi:"securityGroupId"`
	SubnetId            string   `pulumi:"subnetId"`
	Version             *string  `pulumi:"version"`
	VpcId               string   `pulumi:"vpcId"`
}

// The set of arguments for constructing a CdmCluster resource.
type CdmClusterArgs struct {
	AvailabilityZone    pulumi.StringInput
	Emails              pulumi.StringArrayInput
	EnterpriseProjectId pulumi.StringPtrInput
	FlavorId            pulumi.StringInput
	IsAutoOff           pulumi.BoolPtrInput
	Name                pulumi.StringPtrInput
	PhoneNums           pulumi.StringArrayInput
	Region              pulumi.StringPtrInput
	ScheduleBootTime    pulumi.StringPtrInput
	ScheduleOffTime     pulumi.StringPtrInput
	SecurityGroupId     pulumi.StringInput
	SubnetId            pulumi.StringInput
	Version             pulumi.StringPtrInput
	VpcId               pulumi.StringInput
}

func (CdmClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cdmClusterArgs)(nil)).Elem()
}

type CdmClusterInput interface {
	pulumi.Input

	ToCdmClusterOutput() CdmClusterOutput
	ToCdmClusterOutputWithContext(ctx context.Context) CdmClusterOutput
}

func (*CdmCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**CdmCluster)(nil)).Elem()
}

func (i *CdmCluster) ToCdmClusterOutput() CdmClusterOutput {
	return i.ToCdmClusterOutputWithContext(context.Background())
}

func (i *CdmCluster) ToCdmClusterOutputWithContext(ctx context.Context) CdmClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdmClusterOutput)
}

// CdmClusterArrayInput is an input type that accepts CdmClusterArray and CdmClusterArrayOutput values.
// You can construct a concrete instance of `CdmClusterArrayInput` via:
//
//	CdmClusterArray{ CdmClusterArgs{...} }
type CdmClusterArrayInput interface {
	pulumi.Input

	ToCdmClusterArrayOutput() CdmClusterArrayOutput
	ToCdmClusterArrayOutputWithContext(context.Context) CdmClusterArrayOutput
}

type CdmClusterArray []CdmClusterInput

func (CdmClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CdmCluster)(nil)).Elem()
}

func (i CdmClusterArray) ToCdmClusterArrayOutput() CdmClusterArrayOutput {
	return i.ToCdmClusterArrayOutputWithContext(context.Background())
}

func (i CdmClusterArray) ToCdmClusterArrayOutputWithContext(ctx context.Context) CdmClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdmClusterArrayOutput)
}

// CdmClusterMapInput is an input type that accepts CdmClusterMap and CdmClusterMapOutput values.
// You can construct a concrete instance of `CdmClusterMapInput` via:
//
//	CdmClusterMap{ "key": CdmClusterArgs{...} }
type CdmClusterMapInput interface {
	pulumi.Input

	ToCdmClusterMapOutput() CdmClusterMapOutput
	ToCdmClusterMapOutputWithContext(context.Context) CdmClusterMapOutput
}

type CdmClusterMap map[string]CdmClusterInput

func (CdmClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CdmCluster)(nil)).Elem()
}

func (i CdmClusterMap) ToCdmClusterMapOutput() CdmClusterMapOutput {
	return i.ToCdmClusterMapOutputWithContext(context.Background())
}

func (i CdmClusterMap) ToCdmClusterMapOutputWithContext(ctx context.Context) CdmClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdmClusterMapOutput)
}

type CdmClusterOutput struct{ *pulumi.OutputState }

func (CdmClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CdmCluster)(nil)).Elem()
}

func (o CdmClusterOutput) ToCdmClusterOutput() CdmClusterOutput {
	return o
}

func (o CdmClusterOutput) ToCdmClusterOutputWithContext(ctx context.Context) CdmClusterOutput {
	return o
}

func (o CdmClusterOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringArrayOutput { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o CdmClusterOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) FlavorName() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.FlavorName }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) Instances() CdmClusterInstanceArrayOutput {
	return o.ApplyT(func(v *CdmCluster) CdmClusterInstanceArrayOutput { return v.Instances }).(CdmClusterInstanceArrayOutput)
}

func (o CdmClusterOutput) IsAutoOff() pulumi.BoolOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.BoolOutput { return v.IsAutoOff }).(pulumi.BoolOutput)
}

func (o CdmClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) PhoneNums() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringArrayOutput { return v.PhoneNums }).(pulumi.StringArrayOutput)
}

func (o CdmClusterOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.PublicEndpoint }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) ScheduleBootTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.ScheduleBootTime }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) ScheduleOffTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.ScheduleOffTime }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o CdmClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *CdmCluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type CdmClusterArrayOutput struct{ *pulumi.OutputState }

func (CdmClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CdmCluster)(nil)).Elem()
}

func (o CdmClusterArrayOutput) ToCdmClusterArrayOutput() CdmClusterArrayOutput {
	return o
}

func (o CdmClusterArrayOutput) ToCdmClusterArrayOutputWithContext(ctx context.Context) CdmClusterArrayOutput {
	return o
}

func (o CdmClusterArrayOutput) Index(i pulumi.IntInput) CdmClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CdmCluster {
		return vs[0].([]*CdmCluster)[vs[1].(int)]
	}).(CdmClusterOutput)
}

type CdmClusterMapOutput struct{ *pulumi.OutputState }

func (CdmClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CdmCluster)(nil)).Elem()
}

func (o CdmClusterMapOutput) ToCdmClusterMapOutput() CdmClusterMapOutput {
	return o
}

func (o CdmClusterMapOutput) ToCdmClusterMapOutputWithContext(ctx context.Context) CdmClusterMapOutput {
	return o
}

func (o CdmClusterMapOutput) MapIndex(k pulumi.StringInput) CdmClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CdmCluster {
		return vs[0].(map[string]*CdmCluster)[vs[1].(string)]
	}).(CdmClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CdmClusterInput)(nil)).Elem(), &CdmCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*CdmClusterArrayInput)(nil)).Elem(), CdmClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CdmClusterMapInput)(nil)).Elem(), CdmClusterMap{})
	pulumi.RegisterOutputType(CdmClusterOutput{})
	pulumi.RegisterOutputType(CdmClusterArrayOutput{})
	pulumi.RegisterOutputType(CdmClusterMapOutput{})
}
