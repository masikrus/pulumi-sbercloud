// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetEvsVolumes(ctx *pulumi.Context, args *GetEvsVolumesArgs, opts ...pulumi.InvokeOption) (*GetEvsVolumesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEvsVolumesResult
	err := ctx.Invoke("sbercloud:index/getEvsVolumes:getEvsVolumes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEvsVolumes.
type GetEvsVolumesArgs struct {
	AvailabilityZone    *string           `pulumi:"availabilityZone"`
	EnterpriseProjectId *string           `pulumi:"enterpriseProjectId"`
	Name                *string           `pulumi:"name"`
	Region              *string           `pulumi:"region"`
	ServerId            *string           `pulumi:"serverId"`
	Shareable           *bool             `pulumi:"shareable"`
	Status              *string           `pulumi:"status"`
	Tags                map[string]string `pulumi:"tags"`
	VolumeId            *string           `pulumi:"volumeId"`
	VolumeTypeId        *string           `pulumi:"volumeTypeId"`
}

// A collection of values returned by getEvsVolumes.
type GetEvsVolumesResult struct {
	AvailabilityZone    *string `pulumi:"availabilityZone"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                `pulumi:"id"`
	Name         *string               `pulumi:"name"`
	Region       *string               `pulumi:"region"`
	ServerId     *string               `pulumi:"serverId"`
	Shareable    *bool                 `pulumi:"shareable"`
	Status       *string               `pulumi:"status"`
	Tags         map[string]string     `pulumi:"tags"`
	VolumeId     *string               `pulumi:"volumeId"`
	VolumeTypeId *string               `pulumi:"volumeTypeId"`
	Volumes      []GetEvsVolumesVolume `pulumi:"volumes"`
}

func GetEvsVolumesOutput(ctx *pulumi.Context, args GetEvsVolumesOutputArgs, opts ...pulumi.InvokeOption) GetEvsVolumesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEvsVolumesResultOutput, error) {
			args := v.(GetEvsVolumesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getEvsVolumes:getEvsVolumes", args, GetEvsVolumesResultOutput{}, options).(GetEvsVolumesResultOutput), nil
		}).(GetEvsVolumesResultOutput)
}

// A collection of arguments for invoking getEvsVolumes.
type GetEvsVolumesOutputArgs struct {
	AvailabilityZone    pulumi.StringPtrInput `pulumi:"availabilityZone"`
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	ServerId            pulumi.StringPtrInput `pulumi:"serverId"`
	Shareable           pulumi.BoolPtrInput   `pulumi:"shareable"`
	Status              pulumi.StringPtrInput `pulumi:"status"`
	Tags                pulumi.StringMapInput `pulumi:"tags"`
	VolumeId            pulumi.StringPtrInput `pulumi:"volumeId"`
	VolumeTypeId        pulumi.StringPtrInput `pulumi:"volumeTypeId"`
}

func (GetEvsVolumesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvsVolumesArgs)(nil)).Elem()
}

// A collection of values returned by getEvsVolumes.
type GetEvsVolumesResultOutput struct{ *pulumi.OutputState }

func (GetEvsVolumesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvsVolumesResult)(nil)).Elem()
}

func (o GetEvsVolumesResultOutput) ToGetEvsVolumesResultOutput() GetEvsVolumesResultOutput {
	return o
}

func (o GetEvsVolumesResultOutput) ToGetEvsVolumesResultOutputWithContext(ctx context.Context) GetEvsVolumesResultOutput {
	return o
}

func (o GetEvsVolumesResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetEvsVolumesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEvsVolumesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEvsVolumesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetEvsVolumesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetEvsVolumesResultOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

func (o GetEvsVolumesResultOutput) Shareable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *bool { return v.Shareable }).(pulumi.BoolPtrOutput)
}

func (o GetEvsVolumesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetEvsVolumesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetEvsVolumesResultOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

func (o GetEvsVolumesResultOutput) VolumeTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) *string { return v.VolumeTypeId }).(pulumi.StringPtrOutput)
}

func (o GetEvsVolumesResultOutput) Volumes() GetEvsVolumesVolumeArrayOutput {
	return o.ApplyT(func(v GetEvsVolumesResult) []GetEvsVolumesVolume { return v.Volumes }).(GetEvsVolumesVolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEvsVolumesResultOutput{})
}
