// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApigApiPublishment struct {
	pulumi.CustomResourceState

	// The ID of the API to be published or already published.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The description of the current publishment.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the environment to which the current version of the API will be published or has been published.
	EnvId pulumi.StringOutput `pulumi:"envId"`
	// The name of the environment to which the current version of the API is published.
	EnvName pulumi.StringOutput `pulumi:"envName"`
	// All publish informations of the API.
	Histories ApigApiPublishmentHistoryArrayOutput `pulumi:"histories"`
	// The ID of the dedicated instance to which the API and the environment belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The publish ID of the API in current environment.
	PublishId pulumi.StringOutput `pulumi:"publishId"`
	// Time when the current version was published.
	PublishedAt pulumi.StringOutput `pulumi:"publishedAt"`
	// The region in which to publish API.
	Region pulumi.StringOutput `pulumi:"region"`
	// The version ID of the current publishment.
	VersionId pulumi.StringPtrOutput `pulumi:"versionId"`
}

// NewApigApiPublishment registers a new resource with the given unique name, arguments, and options.
func NewApigApiPublishment(ctx *pulumi.Context,
	name string, args *ApigApiPublishmentArgs, opts ...pulumi.ResourceOption) (*ApigApiPublishment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApiPublishment
	err := ctx.RegisterResource("sbercloud:index/apigApiPublishment:ApigApiPublishment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApiPublishment gets an existing ApigApiPublishment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApiPublishment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApiPublishmentState, opts ...pulumi.ResourceOption) (*ApigApiPublishment, error) {
	var resource ApigApiPublishment
	err := ctx.ReadResource("sbercloud:index/apigApiPublishment:ApigApiPublishment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApiPublishment resources.
type apigApiPublishmentState struct {
	// The ID of the API to be published or already published.
	ApiId *string `pulumi:"apiId"`
	// The description of the current publishment.
	Description *string `pulumi:"description"`
	// The ID of the environment to which the current version of the API will be published or has been published.
	EnvId *string `pulumi:"envId"`
	// The name of the environment to which the current version of the API is published.
	EnvName *string `pulumi:"envName"`
	// All publish informations of the API.
	Histories []ApigApiPublishmentHistory `pulumi:"histories"`
	// The ID of the dedicated instance to which the API and the environment belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The publish ID of the API in current environment.
	PublishId *string `pulumi:"publishId"`
	// Time when the current version was published.
	PublishedAt *string `pulumi:"publishedAt"`
	// The region in which to publish API.
	Region *string `pulumi:"region"`
	// The version ID of the current publishment.
	VersionId *string `pulumi:"versionId"`
}

type ApigApiPublishmentState struct {
	// The ID of the API to be published or already published.
	ApiId pulumi.StringPtrInput
	// The description of the current publishment.
	Description pulumi.StringPtrInput
	// The ID of the environment to which the current version of the API will be published or has been published.
	EnvId pulumi.StringPtrInput
	// The name of the environment to which the current version of the API is published.
	EnvName pulumi.StringPtrInput
	// All publish informations of the API.
	Histories ApigApiPublishmentHistoryArrayInput
	// The ID of the dedicated instance to which the API and the environment belongs.
	InstanceId pulumi.StringPtrInput
	// The publish ID of the API in current environment.
	PublishId pulumi.StringPtrInput
	// Time when the current version was published.
	PublishedAt pulumi.StringPtrInput
	// The region in which to publish API.
	Region pulumi.StringPtrInput
	// The version ID of the current publishment.
	VersionId pulumi.StringPtrInput
}

func (ApigApiPublishmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiPublishmentState)(nil)).Elem()
}

type apigApiPublishmentArgs struct {
	// The ID of the API to be published or already published.
	ApiId string `pulumi:"apiId"`
	// The description of the current publishment.
	Description *string `pulumi:"description"`
	// The ID of the environment to which the current version of the API will be published or has been published.
	EnvId string `pulumi:"envId"`
	// The ID of the dedicated instance to which the API and the environment belongs.
	InstanceId string `pulumi:"instanceId"`
	// The region in which to publish API.
	Region *string `pulumi:"region"`
	// The version ID of the current publishment.
	VersionId *string `pulumi:"versionId"`
}

// The set of arguments for constructing a ApigApiPublishment resource.
type ApigApiPublishmentArgs struct {
	// The ID of the API to be published or already published.
	ApiId pulumi.StringInput
	// The description of the current publishment.
	Description pulumi.StringPtrInput
	// The ID of the environment to which the current version of the API will be published or has been published.
	EnvId pulumi.StringInput
	// The ID of the dedicated instance to which the API and the environment belongs.
	InstanceId pulumi.StringInput
	// The region in which to publish API.
	Region pulumi.StringPtrInput
	// The version ID of the current publishment.
	VersionId pulumi.StringPtrInput
}

func (ApigApiPublishmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiPublishmentArgs)(nil)).Elem()
}

type ApigApiPublishmentInput interface {
	pulumi.Input

	ToApigApiPublishmentOutput() ApigApiPublishmentOutput
	ToApigApiPublishmentOutputWithContext(ctx context.Context) ApigApiPublishmentOutput
}

func (*ApigApiPublishment) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiPublishment)(nil)).Elem()
}

func (i *ApigApiPublishment) ToApigApiPublishmentOutput() ApigApiPublishmentOutput {
	return i.ToApigApiPublishmentOutputWithContext(context.Background())
}

func (i *ApigApiPublishment) ToApigApiPublishmentOutputWithContext(ctx context.Context) ApigApiPublishmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiPublishmentOutput)
}

// ApigApiPublishmentArrayInput is an input type that accepts ApigApiPublishmentArray and ApigApiPublishmentArrayOutput values.
// You can construct a concrete instance of `ApigApiPublishmentArrayInput` via:
//
//	ApigApiPublishmentArray{ ApigApiPublishmentArgs{...} }
type ApigApiPublishmentArrayInput interface {
	pulumi.Input

	ToApigApiPublishmentArrayOutput() ApigApiPublishmentArrayOutput
	ToApigApiPublishmentArrayOutputWithContext(context.Context) ApigApiPublishmentArrayOutput
}

type ApigApiPublishmentArray []ApigApiPublishmentInput

func (ApigApiPublishmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiPublishment)(nil)).Elem()
}

func (i ApigApiPublishmentArray) ToApigApiPublishmentArrayOutput() ApigApiPublishmentArrayOutput {
	return i.ToApigApiPublishmentArrayOutputWithContext(context.Background())
}

func (i ApigApiPublishmentArray) ToApigApiPublishmentArrayOutputWithContext(ctx context.Context) ApigApiPublishmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiPublishmentArrayOutput)
}

// ApigApiPublishmentMapInput is an input type that accepts ApigApiPublishmentMap and ApigApiPublishmentMapOutput values.
// You can construct a concrete instance of `ApigApiPublishmentMapInput` via:
//
//	ApigApiPublishmentMap{ "key": ApigApiPublishmentArgs{...} }
type ApigApiPublishmentMapInput interface {
	pulumi.Input

	ToApigApiPublishmentMapOutput() ApigApiPublishmentMapOutput
	ToApigApiPublishmentMapOutputWithContext(context.Context) ApigApiPublishmentMapOutput
}

type ApigApiPublishmentMap map[string]ApigApiPublishmentInput

func (ApigApiPublishmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiPublishment)(nil)).Elem()
}

func (i ApigApiPublishmentMap) ToApigApiPublishmentMapOutput() ApigApiPublishmentMapOutput {
	return i.ToApigApiPublishmentMapOutputWithContext(context.Background())
}

func (i ApigApiPublishmentMap) ToApigApiPublishmentMapOutputWithContext(ctx context.Context) ApigApiPublishmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiPublishmentMapOutput)
}

type ApigApiPublishmentOutput struct{ *pulumi.OutputState }

func (ApigApiPublishmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiPublishment)(nil)).Elem()
}

func (o ApigApiPublishmentOutput) ToApigApiPublishmentOutput() ApigApiPublishmentOutput {
	return o
}

func (o ApigApiPublishmentOutput) ToApigApiPublishmentOutputWithContext(ctx context.Context) ApigApiPublishmentOutput {
	return o
}

// The ID of the API to be published or already published.
func (o ApigApiPublishmentOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The description of the current publishment.
func (o ApigApiPublishmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the environment to which the current version of the API will be published or has been published.
func (o ApigApiPublishmentOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

// The name of the environment to which the current version of the API is published.
func (o ApigApiPublishmentOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringOutput { return v.EnvName }).(pulumi.StringOutput)
}

// All publish informations of the API.
func (o ApigApiPublishmentOutput) Histories() ApigApiPublishmentHistoryArrayOutput {
	return o.ApplyT(func(v *ApigApiPublishment) ApigApiPublishmentHistoryArrayOutput { return v.Histories }).(ApigApiPublishmentHistoryArrayOutput)
}

// The ID of the dedicated instance to which the API and the environment belongs.
func (o ApigApiPublishmentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The publish ID of the API in current environment.
func (o ApigApiPublishmentOutput) PublishId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringOutput { return v.PublishId }).(pulumi.StringOutput)
}

// Time when the current version was published.
func (o ApigApiPublishmentOutput) PublishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringOutput { return v.PublishedAt }).(pulumi.StringOutput)
}

// The region in which to publish API.
func (o ApigApiPublishmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The version ID of the current publishment.
func (o ApigApiPublishmentOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiPublishment) pulumi.StringPtrOutput { return v.VersionId }).(pulumi.StringPtrOutput)
}

type ApigApiPublishmentArrayOutput struct{ *pulumi.OutputState }

func (ApigApiPublishmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiPublishment)(nil)).Elem()
}

func (o ApigApiPublishmentArrayOutput) ToApigApiPublishmentArrayOutput() ApigApiPublishmentArrayOutput {
	return o
}

func (o ApigApiPublishmentArrayOutput) ToApigApiPublishmentArrayOutputWithContext(ctx context.Context) ApigApiPublishmentArrayOutput {
	return o
}

func (o ApigApiPublishmentArrayOutput) Index(i pulumi.IntInput) ApigApiPublishmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApiPublishment {
		return vs[0].([]*ApigApiPublishment)[vs[1].(int)]
	}).(ApigApiPublishmentOutput)
}

type ApigApiPublishmentMapOutput struct{ *pulumi.OutputState }

func (ApigApiPublishmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiPublishment)(nil)).Elem()
}

func (o ApigApiPublishmentMapOutput) ToApigApiPublishmentMapOutput() ApigApiPublishmentMapOutput {
	return o
}

func (o ApigApiPublishmentMapOutput) ToApigApiPublishmentMapOutputWithContext(ctx context.Context) ApigApiPublishmentMapOutput {
	return o
}

func (o ApigApiPublishmentMapOutput) MapIndex(k pulumi.StringInput) ApigApiPublishmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApiPublishment {
		return vs[0].(map[string]*ApigApiPublishment)[vs[1].(string)]
	}).(ApigApiPublishmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiPublishmentInput)(nil)).Elem(), &ApigApiPublishment{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiPublishmentArrayInput)(nil)).Elem(), ApigApiPublishmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiPublishmentMapInput)(nil)).Elem(), ApigApiPublishmentMap{})
	pulumi.RegisterOutputType(ApigApiPublishmentOutput{})
	pulumi.RegisterOutputType(ApigApiPublishmentArrayOutput{})
	pulumi.RegisterOutputType(ApigApiPublishmentMapOutput{})
}
