// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetComputeServergroups(ctx *pulumi.Context, args *GetComputeServergroupsArgs, opts ...pulumi.InvokeOption) (*GetComputeServergroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetComputeServergroupsResult
	err := ctx.Invoke("sbercloud:index/getComputeServergroups:getComputeServergroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeServergroups.
type GetComputeServergroupsArgs struct {
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
}

// A collection of values returned by getComputeServergroups.
type GetComputeServergroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string                              `pulumi:"id"`
	Name         *string                             `pulumi:"name"`
	Region       *string                             `pulumi:"region"`
	Servergroups []GetComputeServergroupsServergroup `pulumi:"servergroups"`
}

func GetComputeServergroupsOutput(ctx *pulumi.Context, args GetComputeServergroupsOutputArgs, opts ...pulumi.InvokeOption) GetComputeServergroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComputeServergroupsResultOutput, error) {
			args := v.(GetComputeServergroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getComputeServergroups:getComputeServergroups", args, GetComputeServergroupsResultOutput{}, options).(GetComputeServergroupsResultOutput), nil
		}).(GetComputeServergroupsResultOutput)
}

// A collection of arguments for invoking getComputeServergroups.
type GetComputeServergroupsOutputArgs struct {
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetComputeServergroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeServergroupsArgs)(nil)).Elem()
}

// A collection of values returned by getComputeServergroups.
type GetComputeServergroupsResultOutput struct{ *pulumi.OutputState }

func (GetComputeServergroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeServergroupsResult)(nil)).Elem()
}

func (o GetComputeServergroupsResultOutput) ToGetComputeServergroupsResultOutput() GetComputeServergroupsResultOutput {
	return o
}

func (o GetComputeServergroupsResultOutput) ToGetComputeServergroupsResultOutputWithContext(ctx context.Context) GetComputeServergroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetComputeServergroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeServergroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComputeServergroupsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeServergroupsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetComputeServergroupsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeServergroupsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetComputeServergroupsResultOutput) Servergroups() GetComputeServergroupsServergroupArrayOutput {
	return o.ApplyT(func(v GetComputeServergroupsResult) []GetComputeServergroupsServergroup { return v.Servergroups }).(GetComputeServergroupsServergroupArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComputeServergroupsResultOutput{})
}
