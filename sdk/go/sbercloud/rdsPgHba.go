// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RdsPgHba struct {
	pulumi.CustomResourceState

	// Specifies the list of host based authentications.
	HostBasedAuthentications RdsPgHbaHostBasedAuthenticationArrayOutput `pulumi:"hostBasedAuthentications"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	Region     pulumi.StringOutput `pulumi:"region"`
}

// NewRdsPgHba registers a new resource with the given unique name, arguments, and options.
func NewRdsPgHba(ctx *pulumi.Context,
	name string, args *RdsPgHbaArgs, opts ...pulumi.ResourceOption) (*RdsPgHba, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostBasedAuthentications == nil {
		return nil, errors.New("invalid value for required argument 'HostBasedAuthentications'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdsPgHba
	err := ctx.RegisterResource("sbercloud:index/rdsPgHba:RdsPgHba", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsPgHba gets an existing RdsPgHba resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsPgHba(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsPgHbaState, opts ...pulumi.ResourceOption) (*RdsPgHba, error) {
	var resource RdsPgHba
	err := ctx.ReadResource("sbercloud:index/rdsPgHba:RdsPgHba", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsPgHba resources.
type rdsPgHbaState struct {
	// Specifies the list of host based authentications.
	HostBasedAuthentications []RdsPgHbaHostBasedAuthentication `pulumi:"hostBasedAuthentications"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId *string `pulumi:"instanceId"`
	Region     *string `pulumi:"region"`
}

type RdsPgHbaState struct {
	// Specifies the list of host based authentications.
	HostBasedAuthentications RdsPgHbaHostBasedAuthenticationArrayInput
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringPtrInput
	Region     pulumi.StringPtrInput
}

func (RdsPgHbaState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsPgHbaState)(nil)).Elem()
}

type rdsPgHbaArgs struct {
	// Specifies the list of host based authentications.
	HostBasedAuthentications []RdsPgHbaHostBasedAuthentication `pulumi:"hostBasedAuthentications"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId string  `pulumi:"instanceId"`
	Region     *string `pulumi:"region"`
}

// The set of arguments for constructing a RdsPgHba resource.
type RdsPgHbaArgs struct {
	// Specifies the list of host based authentications.
	HostBasedAuthentications RdsPgHbaHostBasedAuthenticationArrayInput
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringInput
	Region     pulumi.StringPtrInput
}

func (RdsPgHbaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsPgHbaArgs)(nil)).Elem()
}

type RdsPgHbaInput interface {
	pulumi.Input

	ToRdsPgHbaOutput() RdsPgHbaOutput
	ToRdsPgHbaOutputWithContext(ctx context.Context) RdsPgHbaOutput
}

func (*RdsPgHba) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsPgHba)(nil)).Elem()
}

func (i *RdsPgHba) ToRdsPgHbaOutput() RdsPgHbaOutput {
	return i.ToRdsPgHbaOutputWithContext(context.Background())
}

func (i *RdsPgHba) ToRdsPgHbaOutputWithContext(ctx context.Context) RdsPgHbaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgHbaOutput)
}

// RdsPgHbaArrayInput is an input type that accepts RdsPgHbaArray and RdsPgHbaArrayOutput values.
// You can construct a concrete instance of `RdsPgHbaArrayInput` via:
//
//	RdsPgHbaArray{ RdsPgHbaArgs{...} }
type RdsPgHbaArrayInput interface {
	pulumi.Input

	ToRdsPgHbaArrayOutput() RdsPgHbaArrayOutput
	ToRdsPgHbaArrayOutputWithContext(context.Context) RdsPgHbaArrayOutput
}

type RdsPgHbaArray []RdsPgHbaInput

func (RdsPgHbaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsPgHba)(nil)).Elem()
}

func (i RdsPgHbaArray) ToRdsPgHbaArrayOutput() RdsPgHbaArrayOutput {
	return i.ToRdsPgHbaArrayOutputWithContext(context.Background())
}

func (i RdsPgHbaArray) ToRdsPgHbaArrayOutputWithContext(ctx context.Context) RdsPgHbaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgHbaArrayOutput)
}

// RdsPgHbaMapInput is an input type that accepts RdsPgHbaMap and RdsPgHbaMapOutput values.
// You can construct a concrete instance of `RdsPgHbaMapInput` via:
//
//	RdsPgHbaMap{ "key": RdsPgHbaArgs{...} }
type RdsPgHbaMapInput interface {
	pulumi.Input

	ToRdsPgHbaMapOutput() RdsPgHbaMapOutput
	ToRdsPgHbaMapOutputWithContext(context.Context) RdsPgHbaMapOutput
}

type RdsPgHbaMap map[string]RdsPgHbaInput

func (RdsPgHbaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsPgHba)(nil)).Elem()
}

func (i RdsPgHbaMap) ToRdsPgHbaMapOutput() RdsPgHbaMapOutput {
	return i.ToRdsPgHbaMapOutputWithContext(context.Background())
}

func (i RdsPgHbaMap) ToRdsPgHbaMapOutputWithContext(ctx context.Context) RdsPgHbaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgHbaMapOutput)
}

type RdsPgHbaOutput struct{ *pulumi.OutputState }

func (RdsPgHbaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsPgHba)(nil)).Elem()
}

func (o RdsPgHbaOutput) ToRdsPgHbaOutput() RdsPgHbaOutput {
	return o
}

func (o RdsPgHbaOutput) ToRdsPgHbaOutputWithContext(ctx context.Context) RdsPgHbaOutput {
	return o
}

// Specifies the list of host based authentications.
func (o RdsPgHbaOutput) HostBasedAuthentications() RdsPgHbaHostBasedAuthenticationArrayOutput {
	return o.ApplyT(func(v *RdsPgHba) RdsPgHbaHostBasedAuthenticationArrayOutput { return v.HostBasedAuthentications }).(RdsPgHbaHostBasedAuthenticationArrayOutput)
}

// Specifies the ID of the RDS PostgreSQL instance.
func (o RdsPgHbaOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgHba) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o RdsPgHbaOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgHba) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type RdsPgHbaArrayOutput struct{ *pulumi.OutputState }

func (RdsPgHbaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsPgHba)(nil)).Elem()
}

func (o RdsPgHbaArrayOutput) ToRdsPgHbaArrayOutput() RdsPgHbaArrayOutput {
	return o
}

func (o RdsPgHbaArrayOutput) ToRdsPgHbaArrayOutputWithContext(ctx context.Context) RdsPgHbaArrayOutput {
	return o
}

func (o RdsPgHbaArrayOutput) Index(i pulumi.IntInput) RdsPgHbaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdsPgHba {
		return vs[0].([]*RdsPgHba)[vs[1].(int)]
	}).(RdsPgHbaOutput)
}

type RdsPgHbaMapOutput struct{ *pulumi.OutputState }

func (RdsPgHbaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsPgHba)(nil)).Elem()
}

func (o RdsPgHbaMapOutput) ToRdsPgHbaMapOutput() RdsPgHbaMapOutput {
	return o
}

func (o RdsPgHbaMapOutput) ToRdsPgHbaMapOutputWithContext(ctx context.Context) RdsPgHbaMapOutput {
	return o
}

func (o RdsPgHbaMapOutput) MapIndex(k pulumi.StringInput) RdsPgHbaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdsPgHba {
		return vs[0].(map[string]*RdsPgHba)[vs[1].(string)]
	}).(RdsPgHbaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgHbaInput)(nil)).Elem(), &RdsPgHba{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgHbaArrayInput)(nil)).Elem(), RdsPgHbaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgHbaMapInput)(nil)).Elem(), RdsPgHbaMap{})
	pulumi.RegisterOutputType(RdsPgHbaOutput{})
	pulumi.RegisterOutputType(RdsPgHbaArrayOutput{})
	pulumi.RegisterOutputType(RdsPgHbaMapOutput{})
}
