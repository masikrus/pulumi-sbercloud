// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApigApplication struct {
	pulumi.CustomResourceState

	// The array of one or more application codes that the application has.
	AppCodes pulumi.StringArrayOutput `pulumi:"appCodes"`
	// The APP key.
	AppKey pulumi.StringOutput `pulumi:"appKey"`
	// The APP secret.
	AppSecret pulumi.StringOutput `pulumi:"appSecret"`
	// The application description.
	Description pulumi.StringOutput `pulumi:"description"`
	// The ID of the dedicated instance to which the application belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The application name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region where the application is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The registration time.
	RegistrationTime pulumi.StringOutput `pulumi:"registrationTime"`
	// The secret action to be done for the application.
	SecretAction pulumi.StringPtrOutput `pulumi:"secretAction"`
	// The latest update time of the application.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewApigApplication registers a new resource with the given unique name, arguments, and options.
func NewApigApplication(ctx *pulumi.Context,
	name string, args *ApigApplicationArgs, opts ...pulumi.ResourceOption) (*ApigApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"appSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApplication
	err := ctx.RegisterResource("sbercloud:index/apigApplication:ApigApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApplication gets an existing ApigApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApplicationState, opts ...pulumi.ResourceOption) (*ApigApplication, error) {
	var resource ApigApplication
	err := ctx.ReadResource("sbercloud:index/apigApplication:ApigApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApplication resources.
type apigApplicationState struct {
	// The array of one or more application codes that the application has.
	AppCodes []string `pulumi:"appCodes"`
	// The APP key.
	AppKey *string `pulumi:"appKey"`
	// The APP secret.
	AppSecret *string `pulumi:"appSecret"`
	// The application description.
	Description *string `pulumi:"description"`
	// The ID of the dedicated instance to which the application belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The application name.
	Name *string `pulumi:"name"`
	// The region where the application is located.
	Region *string `pulumi:"region"`
	// The registration time.
	RegistrationTime *string `pulumi:"registrationTime"`
	// The secret action to be done for the application.
	SecretAction *string `pulumi:"secretAction"`
	// The latest update time of the application.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type ApigApplicationState struct {
	// The array of one or more application codes that the application has.
	AppCodes pulumi.StringArrayInput
	// The APP key.
	AppKey pulumi.StringPtrInput
	// The APP secret.
	AppSecret pulumi.StringPtrInput
	// The application description.
	Description pulumi.StringPtrInput
	// The ID of the dedicated instance to which the application belongs.
	InstanceId pulumi.StringPtrInput
	// The application name.
	Name pulumi.StringPtrInput
	// The region where the application is located.
	Region pulumi.StringPtrInput
	// The registration time.
	RegistrationTime pulumi.StringPtrInput
	// The secret action to be done for the application.
	SecretAction pulumi.StringPtrInput
	// The latest update time of the application.
	UpdatedAt pulumi.StringPtrInput
}

func (ApigApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApplicationState)(nil)).Elem()
}

type apigApplicationArgs struct {
	// The array of one or more application codes that the application has.
	AppCodes []string `pulumi:"appCodes"`
	// The application description.
	Description *string `pulumi:"description"`
	// The ID of the dedicated instance to which the application belongs.
	InstanceId string `pulumi:"instanceId"`
	// The application name.
	Name *string `pulumi:"name"`
	// The region where the application is located.
	Region *string `pulumi:"region"`
	// The secret action to be done for the application.
	SecretAction *string `pulumi:"secretAction"`
}

// The set of arguments for constructing a ApigApplication resource.
type ApigApplicationArgs struct {
	// The array of one or more application codes that the application has.
	AppCodes pulumi.StringArrayInput
	// The application description.
	Description pulumi.StringPtrInput
	// The ID of the dedicated instance to which the application belongs.
	InstanceId pulumi.StringInput
	// The application name.
	Name pulumi.StringPtrInput
	// The region where the application is located.
	Region pulumi.StringPtrInput
	// The secret action to be done for the application.
	SecretAction pulumi.StringPtrInput
}

func (ApigApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApplicationArgs)(nil)).Elem()
}

type ApigApplicationInput interface {
	pulumi.Input

	ToApigApplicationOutput() ApigApplicationOutput
	ToApigApplicationOutputWithContext(ctx context.Context) ApigApplicationOutput
}

func (*ApigApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApplication)(nil)).Elem()
}

func (i *ApigApplication) ToApigApplicationOutput() ApigApplicationOutput {
	return i.ToApigApplicationOutputWithContext(context.Background())
}

func (i *ApigApplication) ToApigApplicationOutputWithContext(ctx context.Context) ApigApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationOutput)
}

// ApigApplicationArrayInput is an input type that accepts ApigApplicationArray and ApigApplicationArrayOutput values.
// You can construct a concrete instance of `ApigApplicationArrayInput` via:
//
//	ApigApplicationArray{ ApigApplicationArgs{...} }
type ApigApplicationArrayInput interface {
	pulumi.Input

	ToApigApplicationArrayOutput() ApigApplicationArrayOutput
	ToApigApplicationArrayOutputWithContext(context.Context) ApigApplicationArrayOutput
}

type ApigApplicationArray []ApigApplicationInput

func (ApigApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApplication)(nil)).Elem()
}

func (i ApigApplicationArray) ToApigApplicationArrayOutput() ApigApplicationArrayOutput {
	return i.ToApigApplicationArrayOutputWithContext(context.Background())
}

func (i ApigApplicationArray) ToApigApplicationArrayOutputWithContext(ctx context.Context) ApigApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationArrayOutput)
}

// ApigApplicationMapInput is an input type that accepts ApigApplicationMap and ApigApplicationMapOutput values.
// You can construct a concrete instance of `ApigApplicationMapInput` via:
//
//	ApigApplicationMap{ "key": ApigApplicationArgs{...} }
type ApigApplicationMapInput interface {
	pulumi.Input

	ToApigApplicationMapOutput() ApigApplicationMapOutput
	ToApigApplicationMapOutputWithContext(context.Context) ApigApplicationMapOutput
}

type ApigApplicationMap map[string]ApigApplicationInput

func (ApigApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApplication)(nil)).Elem()
}

func (i ApigApplicationMap) ToApigApplicationMapOutput() ApigApplicationMapOutput {
	return i.ToApigApplicationMapOutputWithContext(context.Background())
}

func (i ApigApplicationMap) ToApigApplicationMapOutputWithContext(ctx context.Context) ApigApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationMapOutput)
}

type ApigApplicationOutput struct{ *pulumi.OutputState }

func (ApigApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApplication)(nil)).Elem()
}

func (o ApigApplicationOutput) ToApigApplicationOutput() ApigApplicationOutput {
	return o
}

func (o ApigApplicationOutput) ToApigApplicationOutputWithContext(ctx context.Context) ApigApplicationOutput {
	return o
}

// The array of one or more application codes that the application has.
func (o ApigApplicationOutput) AppCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringArrayOutput { return v.AppCodes }).(pulumi.StringArrayOutput)
}

// The APP key.
func (o ApigApplicationOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.AppKey }).(pulumi.StringOutput)
}

// The APP secret.
func (o ApigApplicationOutput) AppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.AppSecret }).(pulumi.StringOutput)
}

// The application description.
func (o ApigApplicationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The ID of the dedicated instance to which the application belongs.
func (o ApigApplicationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The application name.
func (o ApigApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region where the application is located.
func (o ApigApplicationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The registration time.
func (o ApigApplicationOutput) RegistrationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.RegistrationTime }).(pulumi.StringOutput)
}

// The secret action to be done for the application.
func (o ApigApplicationOutput) SecretAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringPtrOutput { return v.SecretAction }).(pulumi.StringPtrOutput)
}

// The latest update time of the application.
func (o ApigApplicationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplication) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ApigApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApigApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApplication)(nil)).Elem()
}

func (o ApigApplicationArrayOutput) ToApigApplicationArrayOutput() ApigApplicationArrayOutput {
	return o
}

func (o ApigApplicationArrayOutput) ToApigApplicationArrayOutputWithContext(ctx context.Context) ApigApplicationArrayOutput {
	return o
}

func (o ApigApplicationArrayOutput) Index(i pulumi.IntInput) ApigApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApplication {
		return vs[0].([]*ApigApplication)[vs[1].(int)]
	}).(ApigApplicationOutput)
}

type ApigApplicationMapOutput struct{ *pulumi.OutputState }

func (ApigApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApplication)(nil)).Elem()
}

func (o ApigApplicationMapOutput) ToApigApplicationMapOutput() ApigApplicationMapOutput {
	return o
}

func (o ApigApplicationMapOutput) ToApigApplicationMapOutputWithContext(ctx context.Context) ApigApplicationMapOutput {
	return o
}

func (o ApigApplicationMapOutput) MapIndex(k pulumi.StringInput) ApigApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApplication {
		return vs[0].(map[string]*ApigApplication)[vs[1].(string)]
	}).(ApigApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationInput)(nil)).Elem(), &ApigApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationArrayInput)(nil)).Elem(), ApigApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationMapInput)(nil)).Elem(), ApigApplicationMap{})
	pulumi.RegisterOutputType(ApigApplicationOutput{})
	pulumi.RegisterOutputType(ApigApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApigApplicationMapOutput{})
}
