// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LbL7policy struct {
	pulumi.CustomResourceState

	Action             pulumi.StringOutput    `pulumi:"action"`
	AdminStateUp       pulumi.BoolPtrOutput   `pulumi:"adminStateUp"`
	Description        pulumi.StringPtrOutput `pulumi:"description"`
	ListenerId         pulumi.StringOutput    `pulumi:"listenerId"`
	Name               pulumi.StringOutput    `pulumi:"name"`
	Position           pulumi.IntOutput       `pulumi:"position"`
	RedirectListenerId pulumi.StringPtrOutput `pulumi:"redirectListenerId"`
	RedirectPoolId     pulumi.StringPtrOutput `pulumi:"redirectPoolId"`
	Region             pulumi.StringOutput    `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewLbL7policy registers a new resource with the given unique name, arguments, and options.
func NewLbL7policy(ctx *pulumi.Context,
	name string, args *LbL7policyArgs, opts ...pulumi.ResourceOption) (*LbL7policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.ListenerId == nil {
		return nil, errors.New("invalid value for required argument 'ListenerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbL7policy
	err := ctx.RegisterResource("sbercloud:index/lbL7policy:LbL7policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbL7policy gets an existing LbL7policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbL7policy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbL7policyState, opts ...pulumi.ResourceOption) (*LbL7policy, error) {
	var resource LbL7policy
	err := ctx.ReadResource("sbercloud:index/lbL7policy:LbL7policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbL7policy resources.
type lbL7policyState struct {
	Action             *string `pulumi:"action"`
	AdminStateUp       *bool   `pulumi:"adminStateUp"`
	Description        *string `pulumi:"description"`
	ListenerId         *string `pulumi:"listenerId"`
	Name               *string `pulumi:"name"`
	Position           *int    `pulumi:"position"`
	RedirectListenerId *string `pulumi:"redirectListenerId"`
	RedirectPoolId     *string `pulumi:"redirectPoolId"`
	Region             *string `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId *string `pulumi:"tenantId"`
}

type LbL7policyState struct {
	Action             pulumi.StringPtrInput
	AdminStateUp       pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	ListenerId         pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	Position           pulumi.IntPtrInput
	RedirectListenerId pulumi.StringPtrInput
	RedirectPoolId     pulumi.StringPtrInput
	Region             pulumi.StringPtrInput
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringPtrInput
}

func (LbL7policyState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbL7policyState)(nil)).Elem()
}

type lbL7policyArgs struct {
	Action             string  `pulumi:"action"`
	AdminStateUp       *bool   `pulumi:"adminStateUp"`
	Description        *string `pulumi:"description"`
	ListenerId         string  `pulumi:"listenerId"`
	Name               *string `pulumi:"name"`
	Position           *int    `pulumi:"position"`
	RedirectListenerId *string `pulumi:"redirectListenerId"`
	RedirectPoolId     *string `pulumi:"redirectPoolId"`
	Region             *string `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a LbL7policy resource.
type LbL7policyArgs struct {
	Action             pulumi.StringInput
	AdminStateUp       pulumi.BoolPtrInput
	Description        pulumi.StringPtrInput
	ListenerId         pulumi.StringInput
	Name               pulumi.StringPtrInput
	Position           pulumi.IntPtrInput
	RedirectListenerId pulumi.StringPtrInput
	RedirectPoolId     pulumi.StringPtrInput
	Region             pulumi.StringPtrInput
	// Deprecated: tenant_id is deprecated
	TenantId pulumi.StringPtrInput
}

func (LbL7policyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbL7policyArgs)(nil)).Elem()
}

type LbL7policyInput interface {
	pulumi.Input

	ToLbL7policyOutput() LbL7policyOutput
	ToLbL7policyOutputWithContext(ctx context.Context) LbL7policyOutput
}

func (*LbL7policy) ElementType() reflect.Type {
	return reflect.TypeOf((**LbL7policy)(nil)).Elem()
}

func (i *LbL7policy) ToLbL7policyOutput() LbL7policyOutput {
	return i.ToLbL7policyOutputWithContext(context.Background())
}

func (i *LbL7policy) ToLbL7policyOutputWithContext(ctx context.Context) LbL7policyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbL7policyOutput)
}

// LbL7policyArrayInput is an input type that accepts LbL7policyArray and LbL7policyArrayOutput values.
// You can construct a concrete instance of `LbL7policyArrayInput` via:
//
//	LbL7policyArray{ LbL7policyArgs{...} }
type LbL7policyArrayInput interface {
	pulumi.Input

	ToLbL7policyArrayOutput() LbL7policyArrayOutput
	ToLbL7policyArrayOutputWithContext(context.Context) LbL7policyArrayOutput
}

type LbL7policyArray []LbL7policyInput

func (LbL7policyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbL7policy)(nil)).Elem()
}

func (i LbL7policyArray) ToLbL7policyArrayOutput() LbL7policyArrayOutput {
	return i.ToLbL7policyArrayOutputWithContext(context.Background())
}

func (i LbL7policyArray) ToLbL7policyArrayOutputWithContext(ctx context.Context) LbL7policyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbL7policyArrayOutput)
}

// LbL7policyMapInput is an input type that accepts LbL7policyMap and LbL7policyMapOutput values.
// You can construct a concrete instance of `LbL7policyMapInput` via:
//
//	LbL7policyMap{ "key": LbL7policyArgs{...} }
type LbL7policyMapInput interface {
	pulumi.Input

	ToLbL7policyMapOutput() LbL7policyMapOutput
	ToLbL7policyMapOutputWithContext(context.Context) LbL7policyMapOutput
}

type LbL7policyMap map[string]LbL7policyInput

func (LbL7policyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbL7policy)(nil)).Elem()
}

func (i LbL7policyMap) ToLbL7policyMapOutput() LbL7policyMapOutput {
	return i.ToLbL7policyMapOutputWithContext(context.Background())
}

func (i LbL7policyMap) ToLbL7policyMapOutputWithContext(ctx context.Context) LbL7policyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbL7policyMapOutput)
}

type LbL7policyOutput struct{ *pulumi.OutputState }

func (LbL7policyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbL7policy)(nil)).Elem()
}

func (o LbL7policyOutput) ToLbL7policyOutput() LbL7policyOutput {
	return o
}

func (o LbL7policyOutput) ToLbL7policyOutputWithContext(ctx context.Context) LbL7policyOutput {
	return o
}

func (o LbL7policyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o LbL7policyOutput) AdminStateUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.BoolPtrOutput { return v.AdminStateUp }).(pulumi.BoolPtrOutput)
}

func (o LbL7policyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LbL7policyOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

func (o LbL7policyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LbL7policyOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.IntOutput { return v.Position }).(pulumi.IntOutput)
}

func (o LbL7policyOutput) RedirectListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringPtrOutput { return v.RedirectListenerId }).(pulumi.StringPtrOutput)
}

func (o LbL7policyOutput) RedirectPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringPtrOutput { return v.RedirectPoolId }).(pulumi.StringPtrOutput)
}

func (o LbL7policyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Deprecated: tenant_id is deprecated
func (o LbL7policyOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbL7policy) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type LbL7policyArrayOutput struct{ *pulumi.OutputState }

func (LbL7policyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbL7policy)(nil)).Elem()
}

func (o LbL7policyArrayOutput) ToLbL7policyArrayOutput() LbL7policyArrayOutput {
	return o
}

func (o LbL7policyArrayOutput) ToLbL7policyArrayOutputWithContext(ctx context.Context) LbL7policyArrayOutput {
	return o
}

func (o LbL7policyArrayOutput) Index(i pulumi.IntInput) LbL7policyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LbL7policy {
		return vs[0].([]*LbL7policy)[vs[1].(int)]
	}).(LbL7policyOutput)
}

type LbL7policyMapOutput struct{ *pulumi.OutputState }

func (LbL7policyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbL7policy)(nil)).Elem()
}

func (o LbL7policyMapOutput) ToLbL7policyMapOutput() LbL7policyMapOutput {
	return o
}

func (o LbL7policyMapOutput) ToLbL7policyMapOutputWithContext(ctx context.Context) LbL7policyMapOutput {
	return o
}

func (o LbL7policyMapOutput) MapIndex(k pulumi.StringInput) LbL7policyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LbL7policy {
		return vs[0].(map[string]*LbL7policy)[vs[1].(string)]
	}).(LbL7policyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbL7policyInput)(nil)).Elem(), &LbL7policy{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbL7policyArrayInput)(nil)).Elem(), LbL7policyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbL7policyMapInput)(nil)).Elem(), LbL7policyMap{})
	pulumi.RegisterOutputType(LbL7policyOutput{})
	pulumi.RegisterOutputType(LbL7policyArrayOutput{})
	pulumi.RegisterOutputType(LbL7policyMapOutput{})
}
