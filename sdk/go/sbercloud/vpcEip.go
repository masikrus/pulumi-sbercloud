// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcEip struct {
	pulumi.CustomResourceState

	Address       pulumi.StringOutput `pulumi:"address"`
	AssociateId   pulumi.StringOutput `pulumi:"associateId"`
	AssociateType pulumi.StringOutput `pulumi:"associateType"`
	// Deprecated: Deprecated
	AutoPay   pulumi.StringPtrOutput `pulumi:"autoPay"`
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// The bandwidth configuration.
	Bandwidth    VpcEipBandwidthOutput `pulumi:"bandwidth"`
	ChargingMode pulumi.StringOutput   `pulumi:"chargingMode"`
	CreatedAt    pulumi.StringOutput   `pulumi:"createdAt"`
	// The enterprise project ID to which the EIP belongs.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	InstanceId          pulumi.StringOutput `pulumi:"instanceId"`
	InstanceType        pulumi.StringOutput `pulumi:"instanceType"`
	Ipv6Address         pulumi.StringOutput `pulumi:"ipv6Address"`
	// The name of the EIP.
	Name       pulumi.StringOutput    `pulumi:"name"`
	Period     pulumi.IntPtrOutput    `pulumi:"period"`
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	PortId     pulumi.StringOutput    `pulumi:"portId"`
	PrivateIp  pulumi.StringOutput    `pulumi:"privateIp"`
	// The EIP configuration.
	Publicip VpcEipPublicipOutput `pulumi:"publicip"`
	// The region in which to create the EIP resource.
	Region    pulumi.StringOutput    `pulumi:"region"`
	Status    pulumi.StringOutput    `pulumi:"status"`
	Tags      pulumi.StringMapOutput `pulumi:"tags"`
	UpdatedAt pulumi.StringOutput    `pulumi:"updatedAt"`
}

// NewVpcEip registers a new resource with the given unique name, arguments, and options.
func NewVpcEip(ctx *pulumi.Context,
	name string, args *VpcEipArgs, opts ...pulumi.ResourceOption) (*VpcEip, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bandwidth == nil {
		return nil, errors.New("invalid value for required argument 'Bandwidth'")
	}
	if args.Publicip == nil {
		return nil, errors.New("invalid value for required argument 'Publicip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEip
	err := ctx.RegisterResource("sbercloud:index/vpcEip:VpcEip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEip gets an existing VpcEip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEipState, opts ...pulumi.ResourceOption) (*VpcEip, error) {
	var resource VpcEip
	err := ctx.ReadResource("sbercloud:index/vpcEip:VpcEip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEip resources.
type vpcEipState struct {
	Address       *string `pulumi:"address"`
	AssociateId   *string `pulumi:"associateId"`
	AssociateType *string `pulumi:"associateType"`
	// Deprecated: Deprecated
	AutoPay   *string `pulumi:"autoPay"`
	AutoRenew *string `pulumi:"autoRenew"`
	// The bandwidth configuration.
	Bandwidth    *VpcEipBandwidth `pulumi:"bandwidth"`
	ChargingMode *string          `pulumi:"chargingMode"`
	CreatedAt    *string          `pulumi:"createdAt"`
	// The enterprise project ID to which the EIP belongs.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	InstanceId          *string `pulumi:"instanceId"`
	InstanceType        *string `pulumi:"instanceType"`
	Ipv6Address         *string `pulumi:"ipv6Address"`
	// The name of the EIP.
	Name       *string `pulumi:"name"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	PortId     *string `pulumi:"portId"`
	PrivateIp  *string `pulumi:"privateIp"`
	// The EIP configuration.
	Publicip *VpcEipPublicip `pulumi:"publicip"`
	// The region in which to create the EIP resource.
	Region    *string           `pulumi:"region"`
	Status    *string           `pulumi:"status"`
	Tags      map[string]string `pulumi:"tags"`
	UpdatedAt *string           `pulumi:"updatedAt"`
}

type VpcEipState struct {
	Address       pulumi.StringPtrInput
	AssociateId   pulumi.StringPtrInput
	AssociateType pulumi.StringPtrInput
	// Deprecated: Deprecated
	AutoPay   pulumi.StringPtrInput
	AutoRenew pulumi.StringPtrInput
	// The bandwidth configuration.
	Bandwidth    VpcEipBandwidthPtrInput
	ChargingMode pulumi.StringPtrInput
	CreatedAt    pulumi.StringPtrInput
	// The enterprise project ID to which the EIP belongs.
	EnterpriseProjectId pulumi.StringPtrInput
	InstanceId          pulumi.StringPtrInput
	InstanceType        pulumi.StringPtrInput
	Ipv6Address         pulumi.StringPtrInput
	// The name of the EIP.
	Name       pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	PortId     pulumi.StringPtrInput
	PrivateIp  pulumi.StringPtrInput
	// The EIP configuration.
	Publicip VpcEipPublicipPtrInput
	// The region in which to create the EIP resource.
	Region    pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Tags      pulumi.StringMapInput
	UpdatedAt pulumi.StringPtrInput
}

func (VpcEipState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEipState)(nil)).Elem()
}

type vpcEipArgs struct {
	// Deprecated: Deprecated
	AutoPay   *string `pulumi:"autoPay"`
	AutoRenew *string `pulumi:"autoRenew"`
	// The bandwidth configuration.
	Bandwidth    VpcEipBandwidth `pulumi:"bandwidth"`
	ChargingMode *string         `pulumi:"chargingMode"`
	// The enterprise project ID to which the EIP belongs.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The name of the EIP.
	Name       *string `pulumi:"name"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	// The EIP configuration.
	Publicip VpcEipPublicip `pulumi:"publicip"`
	// The region in which to create the EIP resource.
	Region *string           `pulumi:"region"`
	Tags   map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VpcEip resource.
type VpcEipArgs struct {
	// Deprecated: Deprecated
	AutoPay   pulumi.StringPtrInput
	AutoRenew pulumi.StringPtrInput
	// The bandwidth configuration.
	Bandwidth    VpcEipBandwidthInput
	ChargingMode pulumi.StringPtrInput
	// The enterprise project ID to which the EIP belongs.
	EnterpriseProjectId pulumi.StringPtrInput
	// The name of the EIP.
	Name       pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	// The EIP configuration.
	Publicip VpcEipPublicipInput
	// The region in which to create the EIP resource.
	Region pulumi.StringPtrInput
	Tags   pulumi.StringMapInput
}

func (VpcEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEipArgs)(nil)).Elem()
}

type VpcEipInput interface {
	pulumi.Input

	ToVpcEipOutput() VpcEipOutput
	ToVpcEipOutputWithContext(ctx context.Context) VpcEipOutput
}

func (*VpcEip) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEip)(nil)).Elem()
}

func (i *VpcEip) ToVpcEipOutput() VpcEipOutput {
	return i.ToVpcEipOutputWithContext(context.Background())
}

func (i *VpcEip) ToVpcEipOutputWithContext(ctx context.Context) VpcEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipOutput)
}

// VpcEipArrayInput is an input type that accepts VpcEipArray and VpcEipArrayOutput values.
// You can construct a concrete instance of `VpcEipArrayInput` via:
//
//	VpcEipArray{ VpcEipArgs{...} }
type VpcEipArrayInput interface {
	pulumi.Input

	ToVpcEipArrayOutput() VpcEipArrayOutput
	ToVpcEipArrayOutputWithContext(context.Context) VpcEipArrayOutput
}

type VpcEipArray []VpcEipInput

func (VpcEipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEip)(nil)).Elem()
}

func (i VpcEipArray) ToVpcEipArrayOutput() VpcEipArrayOutput {
	return i.ToVpcEipArrayOutputWithContext(context.Background())
}

func (i VpcEipArray) ToVpcEipArrayOutputWithContext(ctx context.Context) VpcEipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipArrayOutput)
}

// VpcEipMapInput is an input type that accepts VpcEipMap and VpcEipMapOutput values.
// You can construct a concrete instance of `VpcEipMapInput` via:
//
//	VpcEipMap{ "key": VpcEipArgs{...} }
type VpcEipMapInput interface {
	pulumi.Input

	ToVpcEipMapOutput() VpcEipMapOutput
	ToVpcEipMapOutputWithContext(context.Context) VpcEipMapOutput
}

type VpcEipMap map[string]VpcEipInput

func (VpcEipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEip)(nil)).Elem()
}

func (i VpcEipMap) ToVpcEipMapOutput() VpcEipMapOutput {
	return i.ToVpcEipMapOutputWithContext(context.Background())
}

func (i VpcEipMap) ToVpcEipMapOutputWithContext(ctx context.Context) VpcEipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipMapOutput)
}

type VpcEipOutput struct{ *pulumi.OutputState }

func (VpcEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEip)(nil)).Elem()
}

func (o VpcEipOutput) ToVpcEipOutput() VpcEipOutput {
	return o
}

func (o VpcEipOutput) ToVpcEipOutputWithContext(ctx context.Context) VpcEipOutput {
	return o
}

func (o VpcEipOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

func (o VpcEipOutput) AssociateId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.AssociateId }).(pulumi.StringOutput)
}

func (o VpcEipOutput) AssociateType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.AssociateType }).(pulumi.StringOutput)
}

// Deprecated: Deprecated
func (o VpcEipOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

func (o VpcEipOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// The bandwidth configuration.
func (o VpcEipOutput) Bandwidth() VpcEipBandwidthOutput {
	return o.ApplyT(func(v *VpcEip) VpcEipBandwidthOutput { return v.Bandwidth }).(VpcEipBandwidthOutput)
}

func (o VpcEipOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o VpcEipOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The enterprise project ID to which the EIP belongs.
func (o VpcEipOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o VpcEipOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o VpcEipOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

func (o VpcEipOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The name of the EIP.
func (o VpcEipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VpcEipOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o VpcEipOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o VpcEipOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.PortId }).(pulumi.StringOutput)
}

func (o VpcEipOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

// The EIP configuration.
func (o VpcEipOutput) Publicip() VpcEipPublicipOutput {
	return o.ApplyT(func(v *VpcEip) VpcEipPublicipOutput { return v.Publicip }).(VpcEipPublicipOutput)
}

// The region in which to create the EIP resource.
func (o VpcEipOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o VpcEipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o VpcEipOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o VpcEipOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEip) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type VpcEipArrayOutput struct{ *pulumi.OutputState }

func (VpcEipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEip)(nil)).Elem()
}

func (o VpcEipArrayOutput) ToVpcEipArrayOutput() VpcEipArrayOutput {
	return o
}

func (o VpcEipArrayOutput) ToVpcEipArrayOutputWithContext(ctx context.Context) VpcEipArrayOutput {
	return o
}

func (o VpcEipArrayOutput) Index(i pulumi.IntInput) VpcEipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEip {
		return vs[0].([]*VpcEip)[vs[1].(int)]
	}).(VpcEipOutput)
}

type VpcEipMapOutput struct{ *pulumi.OutputState }

func (VpcEipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEip)(nil)).Elem()
}

func (o VpcEipMapOutput) ToVpcEipMapOutput() VpcEipMapOutput {
	return o
}

func (o VpcEipMapOutput) ToVpcEipMapOutputWithContext(ctx context.Context) VpcEipMapOutput {
	return o
}

func (o VpcEipMapOutput) MapIndex(k pulumi.StringInput) VpcEipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEip {
		return vs[0].(map[string]*VpcEip)[vs[1].(string)]
	}).(VpcEipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEipInput)(nil)).Elem(), &VpcEip{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEipArrayInput)(nil)).Elem(), VpcEipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEipMapInput)(nil)).Elem(), VpcEipMap{})
	pulumi.RegisterOutputType(VpcEipOutput{})
	pulumi.RegisterOutputType(VpcEipArrayOutput{})
	pulumi.RegisterOutputType(VpcEipMapOutput{})
}
