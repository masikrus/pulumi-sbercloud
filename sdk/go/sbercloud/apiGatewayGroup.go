// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiGatewayGroup struct {
	pulumi.CustomResourceState

	// The creation time of the group, in RFC3339 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The group description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether to use the debugging domain name to access the APIs within the group.
	DomainAccessEnabled pulumi.BoolOutput `pulumi:"domainAccessEnabled"`
	// The array of one or more environments of the associated group.
	Environments ApiGatewayGroupEnvironmentArrayOutput `pulumi:"environments"`
	// Whether to delete all sub-resources (for API) from this group.
	ForceDestroy pulumi.BoolOutput `pulumi:"forceDestroy"`
	// The ID of the dedicated instance to which the group belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region where the dedicated instance is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The registration time.
	RegistrationTime pulumi.StringOutput `pulumi:"registrationTime"`
	// The latest update time of the group.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The latest update time of the group, in RFC3339 format.
	UpdatedAt  pulumi.StringOutput                 `pulumi:"updatedAt"`
	UrlDomains ApiGatewayGroupUrlDomainArrayOutput `pulumi:"urlDomains"`
}

// NewApiGatewayGroup registers a new resource with the given unique name, arguments, and options.
func NewApiGatewayGroup(ctx *pulumi.Context,
	name string, args *ApiGatewayGroupArgs, opts ...pulumi.ResourceOption) (*ApiGatewayGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiGatewayGroup
	err := ctx.RegisterResource("sbercloud:index/apiGatewayGroup:ApiGatewayGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiGatewayGroup gets an existing ApiGatewayGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiGatewayGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiGatewayGroupState, opts ...pulumi.ResourceOption) (*ApiGatewayGroup, error) {
	var resource ApiGatewayGroup
	err := ctx.ReadResource("sbercloud:index/apiGatewayGroup:ApiGatewayGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiGatewayGroup resources.
type apiGatewayGroupState struct {
	// The creation time of the group, in RFC3339 format.
	CreatedAt *string `pulumi:"createdAt"`
	// The group description.
	Description *string `pulumi:"description"`
	// Specifies whether to use the debugging domain name to access the APIs within the group.
	DomainAccessEnabled *bool `pulumi:"domainAccessEnabled"`
	// The array of one or more environments of the associated group.
	Environments []ApiGatewayGroupEnvironment `pulumi:"environments"`
	// Whether to delete all sub-resources (for API) from this group.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The ID of the dedicated instance to which the group belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The group name.
	Name *string `pulumi:"name"`
	// The region where the dedicated instance is located.
	Region *string `pulumi:"region"`
	// The registration time.
	RegistrationTime *string `pulumi:"registrationTime"`
	// The latest update time of the group.
	UpdateTime *string `pulumi:"updateTime"`
	// The latest update time of the group, in RFC3339 format.
	UpdatedAt  *string                    `pulumi:"updatedAt"`
	UrlDomains []ApiGatewayGroupUrlDomain `pulumi:"urlDomains"`
}

type ApiGatewayGroupState struct {
	// The creation time of the group, in RFC3339 format.
	CreatedAt pulumi.StringPtrInput
	// The group description.
	Description pulumi.StringPtrInput
	// Specifies whether to use the debugging domain name to access the APIs within the group.
	DomainAccessEnabled pulumi.BoolPtrInput
	// The array of one or more environments of the associated group.
	Environments ApiGatewayGroupEnvironmentArrayInput
	// Whether to delete all sub-resources (for API) from this group.
	ForceDestroy pulumi.BoolPtrInput
	// The ID of the dedicated instance to which the group belongs.
	InstanceId pulumi.StringPtrInput
	// The group name.
	Name pulumi.StringPtrInput
	// The region where the dedicated instance is located.
	Region pulumi.StringPtrInput
	// The registration time.
	RegistrationTime pulumi.StringPtrInput
	// The latest update time of the group.
	UpdateTime pulumi.StringPtrInput
	// The latest update time of the group, in RFC3339 format.
	UpdatedAt  pulumi.StringPtrInput
	UrlDomains ApiGatewayGroupUrlDomainArrayInput
}

func (ApiGatewayGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGroupState)(nil)).Elem()
}

type apiGatewayGroupArgs struct {
	// The group description.
	Description *string `pulumi:"description"`
	// Specifies whether to use the debugging domain name to access the APIs within the group.
	DomainAccessEnabled *bool `pulumi:"domainAccessEnabled"`
	// The array of one or more environments of the associated group.
	Environments []ApiGatewayGroupEnvironment `pulumi:"environments"`
	// Whether to delete all sub-resources (for API) from this group.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The ID of the dedicated instance to which the group belongs.
	InstanceId string `pulumi:"instanceId"`
	// The group name.
	Name *string `pulumi:"name"`
	// The region where the dedicated instance is located.
	Region     *string                    `pulumi:"region"`
	UrlDomains []ApiGatewayGroupUrlDomain `pulumi:"urlDomains"`
}

// The set of arguments for constructing a ApiGatewayGroup resource.
type ApiGatewayGroupArgs struct {
	// The group description.
	Description pulumi.StringPtrInput
	// Specifies whether to use the debugging domain name to access the APIs within the group.
	DomainAccessEnabled pulumi.BoolPtrInput
	// The array of one or more environments of the associated group.
	Environments ApiGatewayGroupEnvironmentArrayInput
	// Whether to delete all sub-resources (for API) from this group.
	ForceDestroy pulumi.BoolPtrInput
	// The ID of the dedicated instance to which the group belongs.
	InstanceId pulumi.StringInput
	// The group name.
	Name pulumi.StringPtrInput
	// The region where the dedicated instance is located.
	Region     pulumi.StringPtrInput
	UrlDomains ApiGatewayGroupUrlDomainArrayInput
}

func (ApiGatewayGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGroupArgs)(nil)).Elem()
}

type ApiGatewayGroupInput interface {
	pulumi.Input

	ToApiGatewayGroupOutput() ApiGatewayGroupOutput
	ToApiGatewayGroupOutputWithContext(ctx context.Context) ApiGatewayGroupOutput
}

func (*ApiGatewayGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGroup)(nil)).Elem()
}

func (i *ApiGatewayGroup) ToApiGatewayGroupOutput() ApiGatewayGroupOutput {
	return i.ToApiGatewayGroupOutputWithContext(context.Background())
}

func (i *ApiGatewayGroup) ToApiGatewayGroupOutputWithContext(ctx context.Context) ApiGatewayGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupOutput)
}

// ApiGatewayGroupArrayInput is an input type that accepts ApiGatewayGroupArray and ApiGatewayGroupArrayOutput values.
// You can construct a concrete instance of `ApiGatewayGroupArrayInput` via:
//
//	ApiGatewayGroupArray{ ApiGatewayGroupArgs{...} }
type ApiGatewayGroupArrayInput interface {
	pulumi.Input

	ToApiGatewayGroupArrayOutput() ApiGatewayGroupArrayOutput
	ToApiGatewayGroupArrayOutputWithContext(context.Context) ApiGatewayGroupArrayOutput
}

type ApiGatewayGroupArray []ApiGatewayGroupInput

func (ApiGatewayGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiGatewayGroup)(nil)).Elem()
}

func (i ApiGatewayGroupArray) ToApiGatewayGroupArrayOutput() ApiGatewayGroupArrayOutput {
	return i.ToApiGatewayGroupArrayOutputWithContext(context.Background())
}

func (i ApiGatewayGroupArray) ToApiGatewayGroupArrayOutputWithContext(ctx context.Context) ApiGatewayGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupArrayOutput)
}

// ApiGatewayGroupMapInput is an input type that accepts ApiGatewayGroupMap and ApiGatewayGroupMapOutput values.
// You can construct a concrete instance of `ApiGatewayGroupMapInput` via:
//
//	ApiGatewayGroupMap{ "key": ApiGatewayGroupArgs{...} }
type ApiGatewayGroupMapInput interface {
	pulumi.Input

	ToApiGatewayGroupMapOutput() ApiGatewayGroupMapOutput
	ToApiGatewayGroupMapOutputWithContext(context.Context) ApiGatewayGroupMapOutput
}

type ApiGatewayGroupMap map[string]ApiGatewayGroupInput

func (ApiGatewayGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiGatewayGroup)(nil)).Elem()
}

func (i ApiGatewayGroupMap) ToApiGatewayGroupMapOutput() ApiGatewayGroupMapOutput {
	return i.ToApiGatewayGroupMapOutputWithContext(context.Background())
}

func (i ApiGatewayGroupMap) ToApiGatewayGroupMapOutputWithContext(ctx context.Context) ApiGatewayGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupMapOutput)
}

type ApiGatewayGroupOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGroup)(nil)).Elem()
}

func (o ApiGatewayGroupOutput) ToApiGatewayGroupOutput() ApiGatewayGroupOutput {
	return o
}

func (o ApiGatewayGroupOutput) ToApiGatewayGroupOutputWithContext(ctx context.Context) ApiGatewayGroupOutput {
	return o
}

// The creation time of the group, in RFC3339 format.
func (o ApiGatewayGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The group description.
func (o ApiGatewayGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether to use the debugging domain name to access the APIs within the group.
func (o ApiGatewayGroupOutput) DomainAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.BoolOutput { return v.DomainAccessEnabled }).(pulumi.BoolOutput)
}

// The array of one or more environments of the associated group.
func (o ApiGatewayGroupOutput) Environments() ApiGatewayGroupEnvironmentArrayOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) ApiGatewayGroupEnvironmentArrayOutput { return v.Environments }).(ApiGatewayGroupEnvironmentArrayOutput)
}

// Whether to delete all sub-resources (for API) from this group.
func (o ApiGatewayGroupOutput) ForceDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.BoolOutput { return v.ForceDestroy }).(pulumi.BoolOutput)
}

// The ID of the dedicated instance to which the group belongs.
func (o ApiGatewayGroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The group name.
func (o ApiGatewayGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region where the dedicated instance is located.
func (o ApiGatewayGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The registration time.
func (o ApiGatewayGroupOutput) RegistrationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringOutput { return v.RegistrationTime }).(pulumi.StringOutput)
}

// The latest update time of the group.
func (o ApiGatewayGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The latest update time of the group, in RFC3339 format.
func (o ApiGatewayGroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o ApiGatewayGroupOutput) UrlDomains() ApiGatewayGroupUrlDomainArrayOutput {
	return o.ApplyT(func(v *ApiGatewayGroup) ApiGatewayGroupUrlDomainArrayOutput { return v.UrlDomains }).(ApiGatewayGroupUrlDomainArrayOutput)
}

type ApiGatewayGroupArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiGatewayGroup)(nil)).Elem()
}

func (o ApiGatewayGroupArrayOutput) ToApiGatewayGroupArrayOutput() ApiGatewayGroupArrayOutput {
	return o
}

func (o ApiGatewayGroupArrayOutput) ToApiGatewayGroupArrayOutputWithContext(ctx context.Context) ApiGatewayGroupArrayOutput {
	return o
}

func (o ApiGatewayGroupArrayOutput) Index(i pulumi.IntInput) ApiGatewayGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiGatewayGroup {
		return vs[0].([]*ApiGatewayGroup)[vs[1].(int)]
	}).(ApiGatewayGroupOutput)
}

type ApiGatewayGroupMapOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiGatewayGroup)(nil)).Elem()
}

func (o ApiGatewayGroupMapOutput) ToApiGatewayGroupMapOutput() ApiGatewayGroupMapOutput {
	return o
}

func (o ApiGatewayGroupMapOutput) ToApiGatewayGroupMapOutputWithContext(ctx context.Context) ApiGatewayGroupMapOutput {
	return o
}

func (o ApiGatewayGroupMapOutput) MapIndex(k pulumi.StringInput) ApiGatewayGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiGatewayGroup {
		return vs[0].(map[string]*ApiGatewayGroup)[vs[1].(string)]
	}).(ApiGatewayGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupInput)(nil)).Elem(), &ApiGatewayGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupArrayInput)(nil)).Elem(), ApiGatewayGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupMapInput)(nil)).Elem(), ApiGatewayGroupMap{})
	pulumi.RegisterOutputType(ApiGatewayGroupOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupMapOutput{})
}
