// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRdsPgRoles(ctx *pulumi.Context, args *GetRdsPgRolesArgs, opts ...pulumi.InvokeOption) (*GetRdsPgRolesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRdsPgRolesResult
	err := ctx.Invoke("sbercloud:index/getRdsPgRoles:getRdsPgRoles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRdsPgRoles.
type GetRdsPgRolesArgs struct {
	Account    *string `pulumi:"account"`
	InstanceId string  `pulumi:"instanceId"`
	Region     *string `pulumi:"region"`
}

// A collection of values returned by getRdsPgRoles.
type GetRdsPgRolesResult struct {
	Account *string `pulumi:"account"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	InstanceId string   `pulumi:"instanceId"`
	Region     string   `pulumi:"region"`
	Roles      []string `pulumi:"roles"`
}

func GetRdsPgRolesOutput(ctx *pulumi.Context, args GetRdsPgRolesOutputArgs, opts ...pulumi.InvokeOption) GetRdsPgRolesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRdsPgRolesResultOutput, error) {
			args := v.(GetRdsPgRolesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getRdsPgRoles:getRdsPgRoles", args, GetRdsPgRolesResultOutput{}, options).(GetRdsPgRolesResultOutput), nil
		}).(GetRdsPgRolesResultOutput)
}

// A collection of arguments for invoking getRdsPgRoles.
type GetRdsPgRolesOutputArgs struct {
	Account    pulumi.StringPtrInput `pulumi:"account"`
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	Region     pulumi.StringPtrInput `pulumi:"region"`
}

func (GetRdsPgRolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgRolesArgs)(nil)).Elem()
}

// A collection of values returned by getRdsPgRoles.
type GetRdsPgRolesResultOutput struct{ *pulumi.OutputState }

func (GetRdsPgRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgRolesResult)(nil)).Elem()
}

func (o GetRdsPgRolesResultOutput) ToGetRdsPgRolesResultOutput() GetRdsPgRolesResultOutput {
	return o
}

func (o GetRdsPgRolesResultOutput) ToGetRdsPgRolesResultOutputWithContext(ctx context.Context) GetRdsPgRolesResultOutput {
	return o
}

func (o GetRdsPgRolesResultOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgRolesResult) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRdsPgRolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgRolesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsPgRolesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgRolesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetRdsPgRolesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgRolesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRdsPgRolesResultOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsPgRolesResult) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRdsPgRolesResultOutput{})
}
