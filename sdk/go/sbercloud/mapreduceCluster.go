// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MapreduceCluster struct {
	pulumi.CustomResourceState

	AnalysisCoreNodes   MapreduceClusterAnalysisCoreNodesPtrOutput    `pulumi:"analysisCoreNodes"`
	AnalysisTaskNodes   MapreduceClusterAnalysisTaskNodesPtrOutput    `pulumi:"analysisTaskNodes"`
	AvailabilityZone    pulumi.StringOutput                           `pulumi:"availabilityZone"`
	BootstrapScripts    MapreduceClusterBootstrapScriptArrayOutput    `pulumi:"bootstrapScripts"`
	ChargingMode        pulumi.StringOutput                           `pulumi:"chargingMode"`
	ChargingStartTime   pulumi.StringOutput                           `pulumi:"chargingStartTime"`
	ComponentConfigs    MapreduceClusterComponentConfigArrayOutput    `pulumi:"componentConfigs"`
	ComponentLists      pulumi.StringArrayOutput                      `pulumi:"componentLists"`
	CreateTime          pulumi.StringOutput                           `pulumi:"createTime"`
	CustomNodes         MapreduceClusterCustomNodeArrayOutput         `pulumi:"customNodes"`
	EipId               pulumi.StringOutput                           `pulumi:"eipId"`
	EnterpriseProjectId pulumi.StringOutput                           `pulumi:"enterpriseProjectId"`
	ExternalDatasources MapreduceClusterExternalDatasourceArrayOutput `pulumi:"externalDatasources"`
	LogCollection       pulumi.BoolPtrOutput                          `pulumi:"logCollection"`
	ManagerAdminPass    pulumi.StringOutput                           `pulumi:"managerAdminPass"`
	MasterNodeIp        pulumi.StringOutput                           `pulumi:"masterNodeIp"`
	MasterNodes         MapreduceClusterMasterNodesOutput             `pulumi:"masterNodes"`
	Name                pulumi.StringOutput                           `pulumi:"name"`
	NodeAdminPass       pulumi.StringPtrOutput                        `pulumi:"nodeAdminPass"`
	NodeKeyPair         pulumi.StringPtrOutput                        `pulumi:"nodeKeyPair"`
	Period              pulumi.IntPtrOutput                           `pulumi:"period"`
	PeriodUnit          pulumi.StringPtrOutput                        `pulumi:"periodUnit"`
	PrivateIp           pulumi.StringOutput                           `pulumi:"privateIp"`
	PublicIp            pulumi.StringOutput                           `pulumi:"publicIp"`
	Region              pulumi.StringOutput                           `pulumi:"region"`
	SafeMode            pulumi.BoolPtrOutput                          `pulumi:"safeMode"`
	SecurityGroupIds    pulumi.StringArrayOutput                      `pulumi:"securityGroupIds"`
	SmnNotify           MapreduceClusterSmnNotifyPtrOutput            `pulumi:"smnNotify"`
	Status              pulumi.StringOutput                           `pulumi:"status"`
	StreamingCoreNodes  MapreduceClusterStreamingCoreNodesPtrOutput   `pulumi:"streamingCoreNodes"`
	StreamingTaskNodes  MapreduceClusterStreamingTaskNodesPtrOutput   `pulumi:"streamingTaskNodes"`
	SubnetId            pulumi.StringOutput                           `pulumi:"subnetId"`
	Tags                pulumi.StringMapOutput                        `pulumi:"tags"`
	TemplateId          pulumi.StringPtrOutput                        `pulumi:"templateId"`
	TotalNodeNumber     pulumi.IntOutput                              `pulumi:"totalNodeNumber"`
	Type                pulumi.StringPtrOutput                        `pulumi:"type"`
	UpdateTime          pulumi.StringOutput                           `pulumi:"updateTime"`
	Version             pulumi.StringOutput                           `pulumi:"version"`
	VpcId               pulumi.StringOutput                           `pulumi:"vpcId"`
}

// NewMapreduceCluster registers a new resource with the given unique name, arguments, and options.
func NewMapreduceCluster(ctx *pulumi.Context,
	name string, args *MapreduceClusterArgs, opts ...pulumi.ResourceOption) (*MapreduceCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.ComponentLists == nil {
		return nil, errors.New("invalid value for required argument 'ComponentLists'")
	}
	if args.ManagerAdminPass == nil {
		return nil, errors.New("invalid value for required argument 'ManagerAdminPass'")
	}
	if args.MasterNodes == nil {
		return nil, errors.New("invalid value for required argument 'MasterNodes'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.ManagerAdminPass != nil {
		args.ManagerAdminPass = pulumi.ToSecret(args.ManagerAdminPass).(pulumi.StringInput)
	}
	if args.NodeAdminPass != nil {
		args.NodeAdminPass = pulumi.ToSecret(args.NodeAdminPass).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"managerAdminPass",
		"nodeAdminPass",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MapreduceCluster
	err := ctx.RegisterResource("sbercloud:index/mapreduceCluster:MapreduceCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMapreduceCluster gets an existing MapreduceCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMapreduceCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MapreduceClusterState, opts ...pulumi.ResourceOption) (*MapreduceCluster, error) {
	var resource MapreduceCluster
	err := ctx.ReadResource("sbercloud:index/mapreduceCluster:MapreduceCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MapreduceCluster resources.
type mapreduceClusterState struct {
	AnalysisCoreNodes   *MapreduceClusterAnalysisCoreNodes   `pulumi:"analysisCoreNodes"`
	AnalysisTaskNodes   *MapreduceClusterAnalysisTaskNodes   `pulumi:"analysisTaskNodes"`
	AvailabilityZone    *string                              `pulumi:"availabilityZone"`
	BootstrapScripts    []MapreduceClusterBootstrapScript    `pulumi:"bootstrapScripts"`
	ChargingMode        *string                              `pulumi:"chargingMode"`
	ChargingStartTime   *string                              `pulumi:"chargingStartTime"`
	ComponentConfigs    []MapreduceClusterComponentConfig    `pulumi:"componentConfigs"`
	ComponentLists      []string                             `pulumi:"componentLists"`
	CreateTime          *string                              `pulumi:"createTime"`
	CustomNodes         []MapreduceClusterCustomNode         `pulumi:"customNodes"`
	EipId               *string                              `pulumi:"eipId"`
	EnterpriseProjectId *string                              `pulumi:"enterpriseProjectId"`
	ExternalDatasources []MapreduceClusterExternalDatasource `pulumi:"externalDatasources"`
	LogCollection       *bool                                `pulumi:"logCollection"`
	ManagerAdminPass    *string                              `pulumi:"managerAdminPass"`
	MasterNodeIp        *string                              `pulumi:"masterNodeIp"`
	MasterNodes         *MapreduceClusterMasterNodes         `pulumi:"masterNodes"`
	Name                *string                              `pulumi:"name"`
	NodeAdminPass       *string                              `pulumi:"nodeAdminPass"`
	NodeKeyPair         *string                              `pulumi:"nodeKeyPair"`
	Period              *int                                 `pulumi:"period"`
	PeriodUnit          *string                              `pulumi:"periodUnit"`
	PrivateIp           *string                              `pulumi:"privateIp"`
	PublicIp            *string                              `pulumi:"publicIp"`
	Region              *string                              `pulumi:"region"`
	SafeMode            *bool                                `pulumi:"safeMode"`
	SecurityGroupIds    []string                             `pulumi:"securityGroupIds"`
	SmnNotify           *MapreduceClusterSmnNotify           `pulumi:"smnNotify"`
	Status              *string                              `pulumi:"status"`
	StreamingCoreNodes  *MapreduceClusterStreamingCoreNodes  `pulumi:"streamingCoreNodes"`
	StreamingTaskNodes  *MapreduceClusterStreamingTaskNodes  `pulumi:"streamingTaskNodes"`
	SubnetId            *string                              `pulumi:"subnetId"`
	Tags                map[string]string                    `pulumi:"tags"`
	TemplateId          *string                              `pulumi:"templateId"`
	TotalNodeNumber     *int                                 `pulumi:"totalNodeNumber"`
	Type                *string                              `pulumi:"type"`
	UpdateTime          *string                              `pulumi:"updateTime"`
	Version             *string                              `pulumi:"version"`
	VpcId               *string                              `pulumi:"vpcId"`
}

type MapreduceClusterState struct {
	AnalysisCoreNodes   MapreduceClusterAnalysisCoreNodesPtrInput
	AnalysisTaskNodes   MapreduceClusterAnalysisTaskNodesPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	BootstrapScripts    MapreduceClusterBootstrapScriptArrayInput
	ChargingMode        pulumi.StringPtrInput
	ChargingStartTime   pulumi.StringPtrInput
	ComponentConfigs    MapreduceClusterComponentConfigArrayInput
	ComponentLists      pulumi.StringArrayInput
	CreateTime          pulumi.StringPtrInput
	CustomNodes         MapreduceClusterCustomNodeArrayInput
	EipId               pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ExternalDatasources MapreduceClusterExternalDatasourceArrayInput
	LogCollection       pulumi.BoolPtrInput
	ManagerAdminPass    pulumi.StringPtrInput
	MasterNodeIp        pulumi.StringPtrInput
	MasterNodes         MapreduceClusterMasterNodesPtrInput
	Name                pulumi.StringPtrInput
	NodeAdminPass       pulumi.StringPtrInput
	NodeKeyPair         pulumi.StringPtrInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PrivateIp           pulumi.StringPtrInput
	PublicIp            pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
	SafeMode            pulumi.BoolPtrInput
	SecurityGroupIds    pulumi.StringArrayInput
	SmnNotify           MapreduceClusterSmnNotifyPtrInput
	Status              pulumi.StringPtrInput
	StreamingCoreNodes  MapreduceClusterStreamingCoreNodesPtrInput
	StreamingTaskNodes  MapreduceClusterStreamingTaskNodesPtrInput
	SubnetId            pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	TemplateId          pulumi.StringPtrInput
	TotalNodeNumber     pulumi.IntPtrInput
	Type                pulumi.StringPtrInput
	UpdateTime          pulumi.StringPtrInput
	Version             pulumi.StringPtrInput
	VpcId               pulumi.StringPtrInput
}

func (MapreduceClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mapreduceClusterState)(nil)).Elem()
}

type mapreduceClusterArgs struct {
	AnalysisCoreNodes   *MapreduceClusterAnalysisCoreNodes   `pulumi:"analysisCoreNodes"`
	AnalysisTaskNodes   *MapreduceClusterAnalysisTaskNodes   `pulumi:"analysisTaskNodes"`
	AvailabilityZone    string                               `pulumi:"availabilityZone"`
	BootstrapScripts    []MapreduceClusterBootstrapScript    `pulumi:"bootstrapScripts"`
	ChargingMode        *string                              `pulumi:"chargingMode"`
	ComponentConfigs    []MapreduceClusterComponentConfig    `pulumi:"componentConfigs"`
	ComponentLists      []string                             `pulumi:"componentLists"`
	CustomNodes         []MapreduceClusterCustomNode         `pulumi:"customNodes"`
	EipId               *string                              `pulumi:"eipId"`
	EnterpriseProjectId *string                              `pulumi:"enterpriseProjectId"`
	ExternalDatasources []MapreduceClusterExternalDatasource `pulumi:"externalDatasources"`
	LogCollection       *bool                                `pulumi:"logCollection"`
	ManagerAdminPass    string                               `pulumi:"managerAdminPass"`
	MasterNodes         MapreduceClusterMasterNodes          `pulumi:"masterNodes"`
	Name                *string                              `pulumi:"name"`
	NodeAdminPass       *string                              `pulumi:"nodeAdminPass"`
	NodeKeyPair         *string                              `pulumi:"nodeKeyPair"`
	Period              *int                                 `pulumi:"period"`
	PeriodUnit          *string                              `pulumi:"periodUnit"`
	PublicIp            *string                              `pulumi:"publicIp"`
	Region              *string                              `pulumi:"region"`
	SafeMode            *bool                                `pulumi:"safeMode"`
	SecurityGroupIds    []string                             `pulumi:"securityGroupIds"`
	SmnNotify           *MapreduceClusterSmnNotify           `pulumi:"smnNotify"`
	StreamingCoreNodes  *MapreduceClusterStreamingCoreNodes  `pulumi:"streamingCoreNodes"`
	StreamingTaskNodes  *MapreduceClusterStreamingTaskNodes  `pulumi:"streamingTaskNodes"`
	SubnetId            string                               `pulumi:"subnetId"`
	Tags                map[string]string                    `pulumi:"tags"`
	TemplateId          *string                              `pulumi:"templateId"`
	Type                *string                              `pulumi:"type"`
	Version             string                               `pulumi:"version"`
	VpcId               string                               `pulumi:"vpcId"`
}

// The set of arguments for constructing a MapreduceCluster resource.
type MapreduceClusterArgs struct {
	AnalysisCoreNodes   MapreduceClusterAnalysisCoreNodesPtrInput
	AnalysisTaskNodes   MapreduceClusterAnalysisTaskNodesPtrInput
	AvailabilityZone    pulumi.StringInput
	BootstrapScripts    MapreduceClusterBootstrapScriptArrayInput
	ChargingMode        pulumi.StringPtrInput
	ComponentConfigs    MapreduceClusterComponentConfigArrayInput
	ComponentLists      pulumi.StringArrayInput
	CustomNodes         MapreduceClusterCustomNodeArrayInput
	EipId               pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ExternalDatasources MapreduceClusterExternalDatasourceArrayInput
	LogCollection       pulumi.BoolPtrInput
	ManagerAdminPass    pulumi.StringInput
	MasterNodes         MapreduceClusterMasterNodesInput
	Name                pulumi.StringPtrInput
	NodeAdminPass       pulumi.StringPtrInput
	NodeKeyPair         pulumi.StringPtrInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PublicIp            pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
	SafeMode            pulumi.BoolPtrInput
	SecurityGroupIds    pulumi.StringArrayInput
	SmnNotify           MapreduceClusterSmnNotifyPtrInput
	StreamingCoreNodes  MapreduceClusterStreamingCoreNodesPtrInput
	StreamingTaskNodes  MapreduceClusterStreamingTaskNodesPtrInput
	SubnetId            pulumi.StringInput
	Tags                pulumi.StringMapInput
	TemplateId          pulumi.StringPtrInput
	Type                pulumi.StringPtrInput
	Version             pulumi.StringInput
	VpcId               pulumi.StringInput
}

func (MapreduceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mapreduceClusterArgs)(nil)).Elem()
}

type MapreduceClusterInput interface {
	pulumi.Input

	ToMapreduceClusterOutput() MapreduceClusterOutput
	ToMapreduceClusterOutputWithContext(ctx context.Context) MapreduceClusterOutput
}

func (*MapreduceCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceCluster)(nil)).Elem()
}

func (i *MapreduceCluster) ToMapreduceClusterOutput() MapreduceClusterOutput {
	return i.ToMapreduceClusterOutputWithContext(context.Background())
}

func (i *MapreduceCluster) ToMapreduceClusterOutputWithContext(ctx context.Context) MapreduceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterOutput)
}

// MapreduceClusterArrayInput is an input type that accepts MapreduceClusterArray and MapreduceClusterArrayOutput values.
// You can construct a concrete instance of `MapreduceClusterArrayInput` via:
//
//	MapreduceClusterArray{ MapreduceClusterArgs{...} }
type MapreduceClusterArrayInput interface {
	pulumi.Input

	ToMapreduceClusterArrayOutput() MapreduceClusterArrayOutput
	ToMapreduceClusterArrayOutputWithContext(context.Context) MapreduceClusterArrayOutput
}

type MapreduceClusterArray []MapreduceClusterInput

func (MapreduceClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MapreduceCluster)(nil)).Elem()
}

func (i MapreduceClusterArray) ToMapreduceClusterArrayOutput() MapreduceClusterArrayOutput {
	return i.ToMapreduceClusterArrayOutputWithContext(context.Background())
}

func (i MapreduceClusterArray) ToMapreduceClusterArrayOutputWithContext(ctx context.Context) MapreduceClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterArrayOutput)
}

// MapreduceClusterMapInput is an input type that accepts MapreduceClusterMap and MapreduceClusterMapOutput values.
// You can construct a concrete instance of `MapreduceClusterMapInput` via:
//
//	MapreduceClusterMap{ "key": MapreduceClusterArgs{...} }
type MapreduceClusterMapInput interface {
	pulumi.Input

	ToMapreduceClusterMapOutput() MapreduceClusterMapOutput
	ToMapreduceClusterMapOutputWithContext(context.Context) MapreduceClusterMapOutput
}

type MapreduceClusterMap map[string]MapreduceClusterInput

func (MapreduceClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MapreduceCluster)(nil)).Elem()
}

func (i MapreduceClusterMap) ToMapreduceClusterMapOutput() MapreduceClusterMapOutput {
	return i.ToMapreduceClusterMapOutputWithContext(context.Background())
}

func (i MapreduceClusterMap) ToMapreduceClusterMapOutputWithContext(ctx context.Context) MapreduceClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterMapOutput)
}

type MapreduceClusterOutput struct{ *pulumi.OutputState }

func (MapreduceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceCluster)(nil)).Elem()
}

func (o MapreduceClusterOutput) ToMapreduceClusterOutput() MapreduceClusterOutput {
	return o
}

func (o MapreduceClusterOutput) ToMapreduceClusterOutputWithContext(ctx context.Context) MapreduceClusterOutput {
	return o
}

func (o MapreduceClusterOutput) AnalysisCoreNodes() MapreduceClusterAnalysisCoreNodesPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterAnalysisCoreNodesPtrOutput { return v.AnalysisCoreNodes }).(MapreduceClusterAnalysisCoreNodesPtrOutput)
}

func (o MapreduceClusterOutput) AnalysisTaskNodes() MapreduceClusterAnalysisTaskNodesPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterAnalysisTaskNodesPtrOutput { return v.AnalysisTaskNodes }).(MapreduceClusterAnalysisTaskNodesPtrOutput)
}

func (o MapreduceClusterOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) BootstrapScripts() MapreduceClusterBootstrapScriptArrayOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterBootstrapScriptArrayOutput { return v.BootstrapScripts }).(MapreduceClusterBootstrapScriptArrayOutput)
}

func (o MapreduceClusterOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) ChargingStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.ChargingStartTime }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) ComponentConfigs() MapreduceClusterComponentConfigArrayOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterComponentConfigArrayOutput { return v.ComponentConfigs }).(MapreduceClusterComponentConfigArrayOutput)
}

func (o MapreduceClusterOutput) ComponentLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringArrayOutput { return v.ComponentLists }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) CustomNodes() MapreduceClusterCustomNodeArrayOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterCustomNodeArrayOutput { return v.CustomNodes }).(MapreduceClusterCustomNodeArrayOutput)
}

func (o MapreduceClusterOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.EipId }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) ExternalDatasources() MapreduceClusterExternalDatasourceArrayOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterExternalDatasourceArrayOutput { return v.ExternalDatasources }).(MapreduceClusterExternalDatasourceArrayOutput)
}

func (o MapreduceClusterOutput) LogCollection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.BoolPtrOutput { return v.LogCollection }).(pulumi.BoolPtrOutput)
}

func (o MapreduceClusterOutput) ManagerAdminPass() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.ManagerAdminPass }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) MasterNodeIp() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.MasterNodeIp }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) MasterNodes() MapreduceClusterMasterNodesOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterMasterNodesOutput { return v.MasterNodes }).(MapreduceClusterMasterNodesOutput)
}

func (o MapreduceClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) NodeAdminPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringPtrOutput { return v.NodeAdminPass }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterOutput) NodeKeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringPtrOutput { return v.NodeKeyPair }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) SafeMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.BoolPtrOutput { return v.SafeMode }).(pulumi.BoolPtrOutput)
}

func (o MapreduceClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterOutput) SmnNotify() MapreduceClusterSmnNotifyPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterSmnNotifyPtrOutput { return v.SmnNotify }).(MapreduceClusterSmnNotifyPtrOutput)
}

func (o MapreduceClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) StreamingCoreNodes() MapreduceClusterStreamingCoreNodesPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterStreamingCoreNodesPtrOutput { return v.StreamingCoreNodes }).(MapreduceClusterStreamingCoreNodesPtrOutput)
}

func (o MapreduceClusterOutput) StreamingTaskNodes() MapreduceClusterStreamingTaskNodesPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) MapreduceClusterStreamingTaskNodesPtrOutput { return v.StreamingTaskNodes }).(MapreduceClusterStreamingTaskNodesPtrOutput)
}

func (o MapreduceClusterOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o MapreduceClusterOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringPtrOutput { return v.TemplateId }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterOutput) TotalNodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.IntOutput { return v.TotalNodeNumber }).(pulumi.IntOutput)
}

func (o MapreduceClusterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o MapreduceClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *MapreduceCluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type MapreduceClusterArrayOutput struct{ *pulumi.OutputState }

func (MapreduceClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MapreduceCluster)(nil)).Elem()
}

func (o MapreduceClusterArrayOutput) ToMapreduceClusterArrayOutput() MapreduceClusterArrayOutput {
	return o
}

func (o MapreduceClusterArrayOutput) ToMapreduceClusterArrayOutputWithContext(ctx context.Context) MapreduceClusterArrayOutput {
	return o
}

func (o MapreduceClusterArrayOutput) Index(i pulumi.IntInput) MapreduceClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MapreduceCluster {
		return vs[0].([]*MapreduceCluster)[vs[1].(int)]
	}).(MapreduceClusterOutput)
}

type MapreduceClusterMapOutput struct{ *pulumi.OutputState }

func (MapreduceClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MapreduceCluster)(nil)).Elem()
}

func (o MapreduceClusterMapOutput) ToMapreduceClusterMapOutput() MapreduceClusterMapOutput {
	return o
}

func (o MapreduceClusterMapOutput) ToMapreduceClusterMapOutputWithContext(ctx context.Context) MapreduceClusterMapOutput {
	return o
}

func (o MapreduceClusterMapOutput) MapIndex(k pulumi.StringInput) MapreduceClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MapreduceCluster {
		return vs[0].(map[string]*MapreduceCluster)[vs[1].(string)]
	}).(MapreduceClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterInput)(nil)).Elem(), &MapreduceCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterArrayInput)(nil)).Elem(), MapreduceClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterMapInput)(nil)).Elem(), MapreduceClusterMap{})
	pulumi.RegisterOutputType(MapreduceClusterOutput{})
	pulumi.RegisterOutputType(MapreduceClusterArrayOutput{})
	pulumi.RegisterOutputType(MapreduceClusterMapOutput{})
}
