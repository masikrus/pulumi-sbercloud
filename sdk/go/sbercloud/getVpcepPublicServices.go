// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetVpcepPublicServices(ctx *pulumi.Context, args *GetVpcepPublicServicesArgs, opts ...pulumi.InvokeOption) (*GetVpcepPublicServicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcepPublicServicesResult
	err := ctx.Invoke("sbercloud:index/getVpcepPublicServices:getVpcepPublicServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcepPublicServices.
type GetVpcepPublicServicesArgs struct {
	Region      *string `pulumi:"region"`
	ServiceId   *string `pulumi:"serviceId"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getVpcepPublicServices.
type GetVpcepPublicServicesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string                          `pulumi:"id"`
	Region      string                          `pulumi:"region"`
	ServiceId   *string                         `pulumi:"serviceId"`
	ServiceName *string                         `pulumi:"serviceName"`
	Services    []GetVpcepPublicServicesService `pulumi:"services"`
}

func GetVpcepPublicServicesOutput(ctx *pulumi.Context, args GetVpcepPublicServicesOutputArgs, opts ...pulumi.InvokeOption) GetVpcepPublicServicesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVpcepPublicServicesResultOutput, error) {
			args := v.(GetVpcepPublicServicesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpcepPublicServices:getVpcepPublicServices", args, GetVpcepPublicServicesResultOutput{}, options).(GetVpcepPublicServicesResultOutput), nil
		}).(GetVpcepPublicServicesResultOutput)
}

// A collection of arguments for invoking getVpcepPublicServices.
type GetVpcepPublicServicesOutputArgs struct {
	Region      pulumi.StringPtrInput `pulumi:"region"`
	ServiceId   pulumi.StringPtrInput `pulumi:"serviceId"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (GetVpcepPublicServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcepPublicServicesArgs)(nil)).Elem()
}

// A collection of values returned by getVpcepPublicServices.
type GetVpcepPublicServicesResultOutput struct{ *pulumi.OutputState }

func (GetVpcepPublicServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcepPublicServicesResult)(nil)).Elem()
}

func (o GetVpcepPublicServicesResultOutput) ToGetVpcepPublicServicesResultOutput() GetVpcepPublicServicesResultOutput {
	return o
}

func (o GetVpcepPublicServicesResultOutput) ToGetVpcepPublicServicesResultOutputWithContext(ctx context.Context) GetVpcepPublicServicesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpcepPublicServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcepPublicServicesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetVpcepPublicServicesResultOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesResult) *string { return v.ServiceId }).(pulumi.StringPtrOutput)
}

func (o GetVpcepPublicServicesResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o GetVpcepPublicServicesResultOutput) Services() GetVpcepPublicServicesServiceArrayOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesResult) []GetVpcepPublicServicesService { return v.Services }).(GetVpcepPublicServicesServiceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcepPublicServicesResultOutput{})
}
