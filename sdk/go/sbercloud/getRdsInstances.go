// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRdsInstances(ctx *pulumi.Context, args *GetRdsInstancesArgs, opts ...pulumi.InvokeOption) (*GetRdsInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRdsInstancesResult
	err := ctx.Invoke("sbercloud:index/getRdsInstances:getRdsInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRdsInstances.
type GetRdsInstancesArgs struct {
	DatastoreType       *string `pulumi:"datastoreType"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	Name                *string `pulumi:"name"`
	Region              *string `pulumi:"region"`
	SubnetId            *string `pulumi:"subnetId"`
	Type                *string `pulumi:"type"`
	VpcId               *string `pulumi:"vpcId"`
}

// A collection of values returned by getRdsInstances.
type GetRdsInstancesResult struct {
	DatastoreType       *string `pulumi:"datastoreType"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string                    `pulumi:"id"`
	Instances []GetRdsInstancesInstance `pulumi:"instances"`
	Name      *string                   `pulumi:"name"`
	Region    string                    `pulumi:"region"`
	SubnetId  *string                   `pulumi:"subnetId"`
	Type      *string                   `pulumi:"type"`
	VpcId     *string                   `pulumi:"vpcId"`
}

func GetRdsInstancesOutput(ctx *pulumi.Context, args GetRdsInstancesOutputArgs, opts ...pulumi.InvokeOption) GetRdsInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRdsInstancesResultOutput, error) {
			args := v.(GetRdsInstancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getRdsInstances:getRdsInstances", args, GetRdsInstancesResultOutput{}, options).(GetRdsInstancesResultOutput), nil
		}).(GetRdsInstancesResultOutput)
}

// A collection of arguments for invoking getRdsInstances.
type GetRdsInstancesOutputArgs struct {
	DatastoreType       pulumi.StringPtrInput `pulumi:"datastoreType"`
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	SubnetId            pulumi.StringPtrInput `pulumi:"subnetId"`
	Type                pulumi.StringPtrInput `pulumi:"type"`
	VpcId               pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetRdsInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getRdsInstances.
type GetRdsInstancesResultOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesResult)(nil)).Elem()
}

func (o GetRdsInstancesResultOutput) ToGetRdsInstancesResultOutput() GetRdsInstancesResultOutput {
	return o
}

func (o GetRdsInstancesResultOutput) ToGetRdsInstancesResultOutputWithContext(ctx context.Context) GetRdsInstancesResultOutput {
	return o
}

func (o GetRdsInstancesResultOutput) DatastoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) *string { return v.DatastoreType }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRdsInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsInstancesResultOutput) Instances() GetRdsInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) []GetRdsInstancesInstance { return v.Instances }).(GetRdsInstancesInstanceArrayOutput)
}

func (o GetRdsInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRdsInstancesResultOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRdsInstancesResultOutput{})
}
