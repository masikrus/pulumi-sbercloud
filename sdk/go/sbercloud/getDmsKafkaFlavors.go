// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDmsKafkaFlavors(ctx *pulumi.Context, args *GetDmsKafkaFlavorsArgs, opts ...pulumi.InvokeOption) (*GetDmsKafkaFlavorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsKafkaFlavorsResult
	err := ctx.Invoke("sbercloud:index/getDmsKafkaFlavors:getDmsKafkaFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsKafkaFlavors.
type GetDmsKafkaFlavorsArgs struct {
	ArchType          *string  `pulumi:"archType"`
	AvailabilityZones []string `pulumi:"availabilityZones"`
	ChargingMode      *string  `pulumi:"chargingMode"`
	FlavorId          *string  `pulumi:"flavorId"`
	Region            *string  `pulumi:"region"`
	StorageSpecCode   *string  `pulumi:"storageSpecCode"`
	Type              *string  `pulumi:"type"`
}

// A collection of values returned by getDmsKafkaFlavors.
type GetDmsKafkaFlavorsResult struct {
	ArchType          *string                    `pulumi:"archType"`
	AvailabilityZones []string                   `pulumi:"availabilityZones"`
	ChargingMode      *string                    `pulumi:"chargingMode"`
	FlavorId          *string                    `pulumi:"flavorId"`
	Flavors           []GetDmsKafkaFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Region          string   `pulumi:"region"`
	StorageSpecCode *string  `pulumi:"storageSpecCode"`
	Type            *string  `pulumi:"type"`
	Versions        []string `pulumi:"versions"`
}

func GetDmsKafkaFlavorsOutput(ctx *pulumi.Context, args GetDmsKafkaFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetDmsKafkaFlavorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsKafkaFlavorsResultOutput, error) {
			args := v.(GetDmsKafkaFlavorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getDmsKafkaFlavors:getDmsKafkaFlavors", args, GetDmsKafkaFlavorsResultOutput{}, options).(GetDmsKafkaFlavorsResultOutput), nil
		}).(GetDmsKafkaFlavorsResultOutput)
}

// A collection of arguments for invoking getDmsKafkaFlavors.
type GetDmsKafkaFlavorsOutputArgs struct {
	ArchType          pulumi.StringPtrInput   `pulumi:"archType"`
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	ChargingMode      pulumi.StringPtrInput   `pulumi:"chargingMode"`
	FlavorId          pulumi.StringPtrInput   `pulumi:"flavorId"`
	Region            pulumi.StringPtrInput   `pulumi:"region"`
	StorageSpecCode   pulumi.StringPtrInput   `pulumi:"storageSpecCode"`
	Type              pulumi.StringPtrInput   `pulumi:"type"`
}

func (GetDmsKafkaFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getDmsKafkaFlavors.
type GetDmsKafkaFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsResult)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsResultOutput) ToGetDmsKafkaFlavorsResultOutput() GetDmsKafkaFlavorsResultOutput {
	return o
}

func (o GetDmsKafkaFlavorsResultOutput) ToGetDmsKafkaFlavorsResultOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsResultOutput {
	return o
}

func (o GetDmsKafkaFlavorsResultOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) FlavorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) *string { return v.FlavorId }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) Flavors() GetDmsKafkaFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) []GetDmsKafkaFlavorsFlavor { return v.Flavors }).(GetDmsKafkaFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsKafkaFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) StorageSpecCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) *string { return v.StorageSpecCode }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaFlavorsResultOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsResult) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsResultOutput{})
}
