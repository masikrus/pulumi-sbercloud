// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupLbCertificate(ctx *pulumi.Context, args *LookupLbCertificateArgs, opts ...pulumi.InvokeOption) (*LookupLbCertificateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLbCertificateResult
	err := ctx.Invoke("sbercloud:index/getLbCertificate:getLbCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLbCertificate.
type LookupLbCertificateArgs struct {
	Name   string  `pulumi:"name"`
	Region *string `pulumi:"region"`
	Type   *string `pulumi:"type"`
}

// A collection of values returned by getLbCertificate.
type LookupLbCertificateResult struct {
	Description string `pulumi:"description"`
	Domain      string `pulumi:"domain"`
	Expiration  string `pulumi:"expiration"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Name   string  `pulumi:"name"`
	Region string  `pulumi:"region"`
	Type   *string `pulumi:"type"`
}

func LookupLbCertificateOutput(ctx *pulumi.Context, args LookupLbCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupLbCertificateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLbCertificateResultOutput, error) {
			args := v.(LookupLbCertificateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getLbCertificate:getLbCertificate", args, LookupLbCertificateResultOutput{}, options).(LookupLbCertificateResultOutput), nil
		}).(LookupLbCertificateResultOutput)
}

// A collection of arguments for invoking getLbCertificate.
type LookupLbCertificateOutputArgs struct {
	Name   pulumi.StringInput    `pulumi:"name"`
	Region pulumi.StringPtrInput `pulumi:"region"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (LookupLbCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLbCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getLbCertificate.
type LookupLbCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupLbCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLbCertificateResult)(nil)).Elem()
}

func (o LookupLbCertificateResultOutput) ToLookupLbCertificateResultOutput() LookupLbCertificateResultOutput {
	return o
}

func (o LookupLbCertificateResultOutput) ToLookupLbCertificateResultOutputWithContext(ctx context.Context) LookupLbCertificateResultOutput {
	return o
}

func (o LookupLbCertificateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbCertificateResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupLbCertificateResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbCertificateResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o LookupLbCertificateResultOutput) Expiration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbCertificateResult) string { return v.Expiration }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLbCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLbCertificateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbCertificateResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupLbCertificateResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbCertificateResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupLbCertificateResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLbCertificateResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLbCertificateResultOutput{})
}
