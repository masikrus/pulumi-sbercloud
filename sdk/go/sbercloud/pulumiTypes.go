// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AomServiceDiscoveryRuleDiscoveryRule struct {
	CheckContents []string `pulumi:"checkContents"`
	CheckMode     string   `pulumi:"checkMode"`
	CheckType     string   `pulumi:"checkType"`
}

// AomServiceDiscoveryRuleDiscoveryRuleInput is an input type that accepts AomServiceDiscoveryRuleDiscoveryRuleArgs and AomServiceDiscoveryRuleDiscoveryRuleOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleDiscoveryRuleInput` via:
//
//	AomServiceDiscoveryRuleDiscoveryRuleArgs{...}
type AomServiceDiscoveryRuleDiscoveryRuleInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleDiscoveryRuleOutput() AomServiceDiscoveryRuleDiscoveryRuleOutput
	ToAomServiceDiscoveryRuleDiscoveryRuleOutputWithContext(context.Context) AomServiceDiscoveryRuleDiscoveryRuleOutput
}

type AomServiceDiscoveryRuleDiscoveryRuleArgs struct {
	CheckContents pulumi.StringArrayInput `pulumi:"checkContents"`
	CheckMode     pulumi.StringInput      `pulumi:"checkMode"`
	CheckType     pulumi.StringInput      `pulumi:"checkType"`
}

func (AomServiceDiscoveryRuleDiscoveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleDiscoveryRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleDiscoveryRuleArgs) ToAomServiceDiscoveryRuleDiscoveryRuleOutput() AomServiceDiscoveryRuleDiscoveryRuleOutput {
	return i.ToAomServiceDiscoveryRuleDiscoveryRuleOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleDiscoveryRuleArgs) ToAomServiceDiscoveryRuleDiscoveryRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleDiscoveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleDiscoveryRuleOutput)
}

// AomServiceDiscoveryRuleDiscoveryRuleArrayInput is an input type that accepts AomServiceDiscoveryRuleDiscoveryRuleArray and AomServiceDiscoveryRuleDiscoveryRuleArrayOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleDiscoveryRuleArrayInput` via:
//
//	AomServiceDiscoveryRuleDiscoveryRuleArray{ AomServiceDiscoveryRuleDiscoveryRuleArgs{...} }
type AomServiceDiscoveryRuleDiscoveryRuleArrayInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleDiscoveryRuleArrayOutput() AomServiceDiscoveryRuleDiscoveryRuleArrayOutput
	ToAomServiceDiscoveryRuleDiscoveryRuleArrayOutputWithContext(context.Context) AomServiceDiscoveryRuleDiscoveryRuleArrayOutput
}

type AomServiceDiscoveryRuleDiscoveryRuleArray []AomServiceDiscoveryRuleDiscoveryRuleInput

func (AomServiceDiscoveryRuleDiscoveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleDiscoveryRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleDiscoveryRuleArray) ToAomServiceDiscoveryRuleDiscoveryRuleArrayOutput() AomServiceDiscoveryRuleDiscoveryRuleArrayOutput {
	return i.ToAomServiceDiscoveryRuleDiscoveryRuleArrayOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleDiscoveryRuleArray) ToAomServiceDiscoveryRuleDiscoveryRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleDiscoveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleDiscoveryRuleArrayOutput)
}

type AomServiceDiscoveryRuleDiscoveryRuleOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleDiscoveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleDiscoveryRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleDiscoveryRuleOutput) ToAomServiceDiscoveryRuleDiscoveryRuleOutput() AomServiceDiscoveryRuleDiscoveryRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleDiscoveryRuleOutput) ToAomServiceDiscoveryRuleDiscoveryRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleDiscoveryRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleDiscoveryRuleOutput) CheckContents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleDiscoveryRule) []string { return v.CheckContents }).(pulumi.StringArrayOutput)
}

func (o AomServiceDiscoveryRuleDiscoveryRuleOutput) CheckMode() pulumi.StringOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleDiscoveryRule) string { return v.CheckMode }).(pulumi.StringOutput)
}

func (o AomServiceDiscoveryRuleDiscoveryRuleOutput) CheckType() pulumi.StringOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleDiscoveryRule) string { return v.CheckType }).(pulumi.StringOutput)
}

type AomServiceDiscoveryRuleDiscoveryRuleArrayOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleDiscoveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleDiscoveryRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleDiscoveryRuleArrayOutput) ToAomServiceDiscoveryRuleDiscoveryRuleArrayOutput() AomServiceDiscoveryRuleDiscoveryRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleDiscoveryRuleArrayOutput) ToAomServiceDiscoveryRuleDiscoveryRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleDiscoveryRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleDiscoveryRuleArrayOutput) Index(i pulumi.IntInput) AomServiceDiscoveryRuleDiscoveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AomServiceDiscoveryRuleDiscoveryRule {
		return vs[0].([]AomServiceDiscoveryRuleDiscoveryRule)[vs[1].(int)]
	}).(AomServiceDiscoveryRuleDiscoveryRuleOutput)
}

type AomServiceDiscoveryRuleLogPathRule struct {
	Args     []string `pulumi:"args"`
	NameType string   `pulumi:"nameType"`
	Values   []string `pulumi:"values"`
}

// AomServiceDiscoveryRuleLogPathRuleInput is an input type that accepts AomServiceDiscoveryRuleLogPathRuleArgs and AomServiceDiscoveryRuleLogPathRuleOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleLogPathRuleInput` via:
//
//	AomServiceDiscoveryRuleLogPathRuleArgs{...}
type AomServiceDiscoveryRuleLogPathRuleInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleLogPathRuleOutput() AomServiceDiscoveryRuleLogPathRuleOutput
	ToAomServiceDiscoveryRuleLogPathRuleOutputWithContext(context.Context) AomServiceDiscoveryRuleLogPathRuleOutput
}

type AomServiceDiscoveryRuleLogPathRuleArgs struct {
	Args     pulumi.StringArrayInput `pulumi:"args"`
	NameType pulumi.StringInput      `pulumi:"nameType"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (AomServiceDiscoveryRuleLogPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleLogPathRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleLogPathRuleArgs) ToAomServiceDiscoveryRuleLogPathRuleOutput() AomServiceDiscoveryRuleLogPathRuleOutput {
	return i.ToAomServiceDiscoveryRuleLogPathRuleOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleLogPathRuleArgs) ToAomServiceDiscoveryRuleLogPathRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleLogPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleLogPathRuleOutput)
}

// AomServiceDiscoveryRuleLogPathRuleArrayInput is an input type that accepts AomServiceDiscoveryRuleLogPathRuleArray and AomServiceDiscoveryRuleLogPathRuleArrayOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleLogPathRuleArrayInput` via:
//
//	AomServiceDiscoveryRuleLogPathRuleArray{ AomServiceDiscoveryRuleLogPathRuleArgs{...} }
type AomServiceDiscoveryRuleLogPathRuleArrayInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleLogPathRuleArrayOutput() AomServiceDiscoveryRuleLogPathRuleArrayOutput
	ToAomServiceDiscoveryRuleLogPathRuleArrayOutputWithContext(context.Context) AomServiceDiscoveryRuleLogPathRuleArrayOutput
}

type AomServiceDiscoveryRuleLogPathRuleArray []AomServiceDiscoveryRuleLogPathRuleInput

func (AomServiceDiscoveryRuleLogPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleLogPathRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleLogPathRuleArray) ToAomServiceDiscoveryRuleLogPathRuleArrayOutput() AomServiceDiscoveryRuleLogPathRuleArrayOutput {
	return i.ToAomServiceDiscoveryRuleLogPathRuleArrayOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleLogPathRuleArray) ToAomServiceDiscoveryRuleLogPathRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleLogPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleLogPathRuleArrayOutput)
}

type AomServiceDiscoveryRuleLogPathRuleOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleLogPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleLogPathRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleLogPathRuleOutput) ToAomServiceDiscoveryRuleLogPathRuleOutput() AomServiceDiscoveryRuleLogPathRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleLogPathRuleOutput) ToAomServiceDiscoveryRuleLogPathRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleLogPathRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleLogPathRuleOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleLogPathRule) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o AomServiceDiscoveryRuleLogPathRuleOutput) NameType() pulumi.StringOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleLogPathRule) string { return v.NameType }).(pulumi.StringOutput)
}

func (o AomServiceDiscoveryRuleLogPathRuleOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleLogPathRule) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AomServiceDiscoveryRuleLogPathRuleArrayOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleLogPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleLogPathRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleLogPathRuleArrayOutput) ToAomServiceDiscoveryRuleLogPathRuleArrayOutput() AomServiceDiscoveryRuleLogPathRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleLogPathRuleArrayOutput) ToAomServiceDiscoveryRuleLogPathRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleLogPathRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleLogPathRuleArrayOutput) Index(i pulumi.IntInput) AomServiceDiscoveryRuleLogPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AomServiceDiscoveryRuleLogPathRule {
		return vs[0].([]AomServiceDiscoveryRuleLogPathRule)[vs[1].(int)]
	}).(AomServiceDiscoveryRuleLogPathRuleOutput)
}

type AomServiceDiscoveryRuleNameRules struct {
	ApplicationNameRules []AomServiceDiscoveryRuleNameRulesApplicationNameRule `pulumi:"applicationNameRules"`
	ServiceNameRules     []AomServiceDiscoveryRuleNameRulesServiceNameRule     `pulumi:"serviceNameRules"`
}

// AomServiceDiscoveryRuleNameRulesInput is an input type that accepts AomServiceDiscoveryRuleNameRulesArgs and AomServiceDiscoveryRuleNameRulesOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleNameRulesInput` via:
//
//	AomServiceDiscoveryRuleNameRulesArgs{...}
type AomServiceDiscoveryRuleNameRulesInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleNameRulesOutput() AomServiceDiscoveryRuleNameRulesOutput
	ToAomServiceDiscoveryRuleNameRulesOutputWithContext(context.Context) AomServiceDiscoveryRuleNameRulesOutput
}

type AomServiceDiscoveryRuleNameRulesArgs struct {
	ApplicationNameRules AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayInput `pulumi:"applicationNameRules"`
	ServiceNameRules     AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayInput     `pulumi:"serviceNameRules"`
}

func (AomServiceDiscoveryRuleNameRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleNameRules)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleNameRulesArgs) ToAomServiceDiscoveryRuleNameRulesOutput() AomServiceDiscoveryRuleNameRulesOutput {
	return i.ToAomServiceDiscoveryRuleNameRulesOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleNameRulesArgs) ToAomServiceDiscoveryRuleNameRulesOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleNameRulesOutput)
}

func (i AomServiceDiscoveryRuleNameRulesArgs) ToAomServiceDiscoveryRuleNameRulesPtrOutput() AomServiceDiscoveryRuleNameRulesPtrOutput {
	return i.ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleNameRulesArgs) ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleNameRulesOutput).ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(ctx)
}

// AomServiceDiscoveryRuleNameRulesPtrInput is an input type that accepts AomServiceDiscoveryRuleNameRulesArgs, AomServiceDiscoveryRuleNameRulesPtr and AomServiceDiscoveryRuleNameRulesPtrOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleNameRulesPtrInput` via:
//
//	        AomServiceDiscoveryRuleNameRulesArgs{...}
//
//	or:
//
//	        nil
type AomServiceDiscoveryRuleNameRulesPtrInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleNameRulesPtrOutput() AomServiceDiscoveryRuleNameRulesPtrOutput
	ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(context.Context) AomServiceDiscoveryRuleNameRulesPtrOutput
}

type aomServiceDiscoveryRuleNameRulesPtrType AomServiceDiscoveryRuleNameRulesArgs

func AomServiceDiscoveryRuleNameRulesPtr(v *AomServiceDiscoveryRuleNameRulesArgs) AomServiceDiscoveryRuleNameRulesPtrInput {
	return (*aomServiceDiscoveryRuleNameRulesPtrType)(v)
}

func (*aomServiceDiscoveryRuleNameRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AomServiceDiscoveryRuleNameRules)(nil)).Elem()
}

func (i *aomServiceDiscoveryRuleNameRulesPtrType) ToAomServiceDiscoveryRuleNameRulesPtrOutput() AomServiceDiscoveryRuleNameRulesPtrOutput {
	return i.ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(context.Background())
}

func (i *aomServiceDiscoveryRuleNameRulesPtrType) ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleNameRulesPtrOutput)
}

type AomServiceDiscoveryRuleNameRulesOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleNameRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleNameRules)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleNameRulesOutput) ToAomServiceDiscoveryRuleNameRulesOutput() AomServiceDiscoveryRuleNameRulesOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesOutput) ToAomServiceDiscoveryRuleNameRulesOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesOutput) ToAomServiceDiscoveryRuleNameRulesPtrOutput() AomServiceDiscoveryRuleNameRulesPtrOutput {
	return o.ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(context.Background())
}

func (o AomServiceDiscoveryRuleNameRulesOutput) ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AomServiceDiscoveryRuleNameRules) *AomServiceDiscoveryRuleNameRules {
		return &v
	}).(AomServiceDiscoveryRuleNameRulesPtrOutput)
}

func (o AomServiceDiscoveryRuleNameRulesOutput) ApplicationNameRules() AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRules) []AomServiceDiscoveryRuleNameRulesApplicationNameRule {
		return v.ApplicationNameRules
	}).(AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput)
}

func (o AomServiceDiscoveryRuleNameRulesOutput) ServiceNameRules() AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRules) []AomServiceDiscoveryRuleNameRulesServiceNameRule {
		return v.ServiceNameRules
	}).(AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput)
}

type AomServiceDiscoveryRuleNameRulesPtrOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleNameRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AomServiceDiscoveryRuleNameRules)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleNameRulesPtrOutput) ToAomServiceDiscoveryRuleNameRulesPtrOutput() AomServiceDiscoveryRuleNameRulesPtrOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesPtrOutput) ToAomServiceDiscoveryRuleNameRulesPtrOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesPtrOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesPtrOutput) Elem() AomServiceDiscoveryRuleNameRulesOutput {
	return o.ApplyT(func(v *AomServiceDiscoveryRuleNameRules) AomServiceDiscoveryRuleNameRules {
		if v != nil {
			return *v
		}
		var ret AomServiceDiscoveryRuleNameRules
		return ret
	}).(AomServiceDiscoveryRuleNameRulesOutput)
}

func (o AomServiceDiscoveryRuleNameRulesPtrOutput) ApplicationNameRules() AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput {
	return o.ApplyT(func(v *AomServiceDiscoveryRuleNameRules) []AomServiceDiscoveryRuleNameRulesApplicationNameRule {
		if v == nil {
			return nil
		}
		return v.ApplicationNameRules
	}).(AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput)
}

func (o AomServiceDiscoveryRuleNameRulesPtrOutput) ServiceNameRules() AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput {
	return o.ApplyT(func(v *AomServiceDiscoveryRuleNameRules) []AomServiceDiscoveryRuleNameRulesServiceNameRule {
		if v == nil {
			return nil
		}
		return v.ServiceNameRules
	}).(AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput)
}

type AomServiceDiscoveryRuleNameRulesApplicationNameRule struct {
	Args     []string `pulumi:"args"`
	NameType string   `pulumi:"nameType"`
	Values   []string `pulumi:"values"`
}

// AomServiceDiscoveryRuleNameRulesApplicationNameRuleInput is an input type that accepts AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs and AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleNameRulesApplicationNameRuleInput` via:
//
//	AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs{...}
type AomServiceDiscoveryRuleNameRulesApplicationNameRuleInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput() AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput
	ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleOutputWithContext(context.Context) AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput
}

type AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs struct {
	Args     pulumi.StringArrayInput `pulumi:"args"`
	NameType pulumi.StringInput      `pulumi:"nameType"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesApplicationNameRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput() AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput {
	return i.ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput)
}

// AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayInput is an input type that accepts AomServiceDiscoveryRuleNameRulesApplicationNameRuleArray and AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayInput` via:
//
//	AomServiceDiscoveryRuleNameRulesApplicationNameRuleArray{ AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs{...} }
type AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput() AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput
	ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutputWithContext(context.Context) AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput
}

type AomServiceDiscoveryRuleNameRulesApplicationNameRuleArray []AomServiceDiscoveryRuleNameRulesApplicationNameRuleInput

func (AomServiceDiscoveryRuleNameRulesApplicationNameRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleNameRulesApplicationNameRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleNameRulesApplicationNameRuleArray) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput() AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput {
	return i.ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleNameRulesApplicationNameRuleArray) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput)
}

type AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesApplicationNameRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput() AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRulesApplicationNameRule) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput) NameType() pulumi.StringOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRulesApplicationNameRule) string { return v.NameType }).(pulumi.StringOutput)
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRulesApplicationNameRule) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleNameRulesApplicationNameRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput() AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput) ToAomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput) Index(i pulumi.IntInput) AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AomServiceDiscoveryRuleNameRulesApplicationNameRule {
		return vs[0].([]AomServiceDiscoveryRuleNameRulesApplicationNameRule)[vs[1].(int)]
	}).(AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput)
}

type AomServiceDiscoveryRuleNameRulesServiceNameRule struct {
	Args     []string `pulumi:"args"`
	NameType string   `pulumi:"nameType"`
	Values   []string `pulumi:"values"`
}

// AomServiceDiscoveryRuleNameRulesServiceNameRuleInput is an input type that accepts AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs and AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleNameRulesServiceNameRuleInput` via:
//
//	AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs{...}
type AomServiceDiscoveryRuleNameRulesServiceNameRuleInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleNameRulesServiceNameRuleOutput() AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput
	ToAomServiceDiscoveryRuleNameRulesServiceNameRuleOutputWithContext(context.Context) AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput
}

type AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs struct {
	Args     pulumi.StringArrayInput `pulumi:"args"`
	NameType pulumi.StringInput      `pulumi:"nameType"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesServiceNameRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleOutput() AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput {
	return i.ToAomServiceDiscoveryRuleNameRulesServiceNameRuleOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput)
}

// AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayInput is an input type that accepts AomServiceDiscoveryRuleNameRulesServiceNameRuleArray and AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput values.
// You can construct a concrete instance of `AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayInput` via:
//
//	AomServiceDiscoveryRuleNameRulesServiceNameRuleArray{ AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs{...} }
type AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayInput interface {
	pulumi.Input

	ToAomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput() AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput
	ToAomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutputWithContext(context.Context) AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput
}

type AomServiceDiscoveryRuleNameRulesServiceNameRuleArray []AomServiceDiscoveryRuleNameRulesServiceNameRuleInput

func (AomServiceDiscoveryRuleNameRulesServiceNameRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleNameRulesServiceNameRule)(nil)).Elem()
}

func (i AomServiceDiscoveryRuleNameRulesServiceNameRuleArray) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput() AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput {
	return i.ToAomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutputWithContext(context.Background())
}

func (i AomServiceDiscoveryRuleNameRulesServiceNameRuleArray) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput)
}

type AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesServiceNameRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleOutput() AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRulesServiceNameRule) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput) NameType() pulumi.StringOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRulesServiceNameRule) string { return v.NameType }).(pulumi.StringOutput)
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AomServiceDiscoveryRuleNameRulesServiceNameRule) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput struct{ *pulumi.OutputState }

func (AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AomServiceDiscoveryRuleNameRulesServiceNameRule)(nil)).Elem()
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput() AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput) ToAomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutputWithContext(ctx context.Context) AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput {
	return o
}

func (o AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput) Index(i pulumi.IntInput) AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AomServiceDiscoveryRuleNameRulesServiceNameRule {
		return vs[0].([]AomServiceDiscoveryRuleNameRulesServiceNameRule)[vs[1].(int)]
	}).(AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput)
}

type ApiGatewayApiBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApiGatewayApiBackendParamInput is an input type that accepts ApiGatewayApiBackendParamArgs and ApiGatewayApiBackendParamOutput values.
// You can construct a concrete instance of `ApiGatewayApiBackendParamInput` via:
//
//	ApiGatewayApiBackendParamArgs{...}
type ApiGatewayApiBackendParamInput interface {
	pulumi.Input

	ToApiGatewayApiBackendParamOutput() ApiGatewayApiBackendParamOutput
	ToApiGatewayApiBackendParamOutputWithContext(context.Context) ApiGatewayApiBackendParamOutput
}

type ApiGatewayApiBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiGatewayApiBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiBackendParamArgs) ToApiGatewayApiBackendParamOutput() ApiGatewayApiBackendParamOutput {
	return i.ToApiGatewayApiBackendParamOutputWithContext(context.Background())
}

func (i ApiGatewayApiBackendParamArgs) ToApiGatewayApiBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiBackendParamOutput)
}

// ApiGatewayApiBackendParamArrayInput is an input type that accepts ApiGatewayApiBackendParamArray and ApiGatewayApiBackendParamArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiBackendParamArrayInput` via:
//
//	ApiGatewayApiBackendParamArray{ ApiGatewayApiBackendParamArgs{...} }
type ApiGatewayApiBackendParamArrayInput interface {
	pulumi.Input

	ToApiGatewayApiBackendParamArrayOutput() ApiGatewayApiBackendParamArrayOutput
	ToApiGatewayApiBackendParamArrayOutputWithContext(context.Context) ApiGatewayApiBackendParamArrayOutput
}

type ApiGatewayApiBackendParamArray []ApiGatewayApiBackendParamInput

func (ApiGatewayApiBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiBackendParamArray) ToApiGatewayApiBackendParamArrayOutput() ApiGatewayApiBackendParamArrayOutput {
	return i.ToApiGatewayApiBackendParamArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiBackendParamArray) ToApiGatewayApiBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiBackendParamArrayOutput)
}

type ApiGatewayApiBackendParamOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiBackendParamOutput) ToApiGatewayApiBackendParamOutput() ApiGatewayApiBackendParamOutput {
	return o
}

func (o ApiGatewayApiBackendParamOutput) ToApiGatewayApiBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApiGatewayApiBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApiGatewayApiBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApiGatewayApiBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApiGatewayApiBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApiGatewayApiBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApiGatewayApiBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiGatewayApiBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiBackendParamArrayOutput) ToApiGatewayApiBackendParamArrayOutput() ApiGatewayApiBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiBackendParamArrayOutput) ToApiGatewayApiBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiBackendParamArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiBackendParam {
		return vs[0].([]ApiGatewayApiBackendParam)[vs[1].(int)]
	}).(ApiGatewayApiBackendParamOutput)
}

type ApiGatewayApiFuncGraph struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn *string `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The invocation type.
	InvocationType *string `pulumi:"invocationType"`
	// The network architecture (framework) type of the FunctionGraph function.
	NetworkType *string `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version *string `pulumi:"version"`
}

// ApiGatewayApiFuncGraphInput is an input type that accepts ApiGatewayApiFuncGraphArgs and ApiGatewayApiFuncGraphOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphInput` via:
//
//	ApiGatewayApiFuncGraphArgs{...}
type ApiGatewayApiFuncGraphInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphOutput() ApiGatewayApiFuncGraphOutput
	ToApiGatewayApiFuncGraphOutputWithContext(context.Context) ApiGatewayApiFuncGraphOutput
}

type ApiGatewayApiFuncGraphArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn pulumi.StringPtrInput `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn pulumi.StringInput `pulumi:"functionUrn"`
	// The invocation type.
	InvocationType pulumi.StringPtrInput `pulumi:"invocationType"`
	// The network architecture (framework) type of the FunctionGraph function.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApiGatewayApiFuncGraphArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraph)(nil)).Elem()
}

func (i ApiGatewayApiFuncGraphArgs) ToApiGatewayApiFuncGraphOutput() ApiGatewayApiFuncGraphOutput {
	return i.ToApiGatewayApiFuncGraphOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphArgs) ToApiGatewayApiFuncGraphOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphOutput)
}

func (i ApiGatewayApiFuncGraphArgs) ToApiGatewayApiFuncGraphPtrOutput() ApiGatewayApiFuncGraphPtrOutput {
	return i.ToApiGatewayApiFuncGraphPtrOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphArgs) ToApiGatewayApiFuncGraphPtrOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphOutput).ToApiGatewayApiFuncGraphPtrOutputWithContext(ctx)
}

// ApiGatewayApiFuncGraphPtrInput is an input type that accepts ApiGatewayApiFuncGraphArgs, ApiGatewayApiFuncGraphPtr and ApiGatewayApiFuncGraphPtrOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphPtrInput` via:
//
//	        ApiGatewayApiFuncGraphArgs{...}
//
//	or:
//
//	        nil
type ApiGatewayApiFuncGraphPtrInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphPtrOutput() ApiGatewayApiFuncGraphPtrOutput
	ToApiGatewayApiFuncGraphPtrOutputWithContext(context.Context) ApiGatewayApiFuncGraphPtrOutput
}

type apiGatewayApiFuncGraphPtrType ApiGatewayApiFuncGraphArgs

func ApiGatewayApiFuncGraphPtr(v *ApiGatewayApiFuncGraphArgs) ApiGatewayApiFuncGraphPtrInput {
	return (*apiGatewayApiFuncGraphPtrType)(v)
}

func (*apiGatewayApiFuncGraphPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiFuncGraph)(nil)).Elem()
}

func (i *apiGatewayApiFuncGraphPtrType) ToApiGatewayApiFuncGraphPtrOutput() ApiGatewayApiFuncGraphPtrOutput {
	return i.ToApiGatewayApiFuncGraphPtrOutputWithContext(context.Background())
}

func (i *apiGatewayApiFuncGraphPtrType) ToApiGatewayApiFuncGraphPtrOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphPtrOutput)
}

type ApiGatewayApiFuncGraphOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraph)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphOutput) ToApiGatewayApiFuncGraphOutput() ApiGatewayApiFuncGraphOutput {
	return o
}

func (o ApiGatewayApiFuncGraphOutput) ToApiGatewayApiFuncGraphOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphOutput {
	return o
}

func (o ApiGatewayApiFuncGraphOutput) ToApiGatewayApiFuncGraphPtrOutput() ApiGatewayApiFuncGraphPtrOutput {
	return o.ToApiGatewayApiFuncGraphPtrOutputWithContext(context.Background())
}

func (o ApiGatewayApiFuncGraphOutput) ToApiGatewayApiFuncGraphPtrOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiGatewayApiFuncGraph) *ApiGatewayApiFuncGraph {
		return &v
	}).(ApiGatewayApiFuncGraphPtrOutput)
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiFuncGraphOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The alias URN of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphOutput) FunctionAliasUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) *string { return v.FunctionAliasUrn }).(pulumi.StringPtrOutput)
}

// The URN of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) string { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The invocation type.
func (o ApiGatewayApiFuncGraphOutput) InvocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) *string { return v.InvocationType }).(pulumi.StringPtrOutput)
}

// The network architecture (framework) type of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// The request protocol of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApiGatewayApiFuncGraphOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The version of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraph) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApiGatewayApiFuncGraphPtrOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiFuncGraph)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphPtrOutput) ToApiGatewayApiFuncGraphPtrOutput() ApiGatewayApiFuncGraphPtrOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPtrOutput) ToApiGatewayApiFuncGraphPtrOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPtrOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPtrOutput) Elem() ApiGatewayApiFuncGraphOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) ApiGatewayApiFuncGraph {
		if v != nil {
			return *v
		}
		var ret ApiGatewayApiFuncGraph
		return ret
	}).(ApiGatewayApiFuncGraphOutput)
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiFuncGraphPtrOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerId
	}).(pulumi.StringPtrOutput)
}

// The alias URN of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPtrOutput) FunctionAliasUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.FunctionAliasUrn
	}).(pulumi.StringPtrOutput)
}

// The URN of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPtrOutput) FunctionUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionUrn
	}).(pulumi.StringPtrOutput)
}

// The invocation type.
func (o ApiGatewayApiFuncGraphPtrOutput) InvocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.InvocationType
	}).(pulumi.StringPtrOutput)
}

// The network architecture (framework) type of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPtrOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.NetworkType
	}).(pulumi.StringPtrOutput)
}

// The request protocol of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPtrOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.RequestProtocol
	}).(pulumi.StringPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApiGatewayApiFuncGraphPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The version of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ApiGatewayApiFuncGraphPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configaiton list of the backend parameters.
	BackendParams []ApiGatewayApiFuncGraphPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []ApiGatewayApiFuncGraphPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode *string `pulumi:"effectiveMode"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn *string `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The invocation mode of the FunctionGraph function.
	InvocationMode *string `pulumi:"invocationMode"`
	// The invocation mode of the FunctionGraph function.
	InvocationType *string `pulumi:"invocationType"`
	// The name of the backend policy.
	Name string `pulumi:"name"`
	// The network (framework) type of the FunctionGraph function.
	NetworkType *string `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version *string `pulumi:"version"`
}

// ApiGatewayApiFuncGraphPolicyInput is an input type that accepts ApiGatewayApiFuncGraphPolicyArgs and ApiGatewayApiFuncGraphPolicyOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphPolicyInput` via:
//
//	ApiGatewayApiFuncGraphPolicyArgs{...}
type ApiGatewayApiFuncGraphPolicyInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphPolicyOutput() ApiGatewayApiFuncGraphPolicyOutput
	ToApiGatewayApiFuncGraphPolicyOutputWithContext(context.Context) ApiGatewayApiFuncGraphPolicyOutput
}

type ApiGatewayApiFuncGraphPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The configaiton list of the backend parameters.
	BackendParams ApiGatewayApiFuncGraphPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions ApiGatewayApiFuncGraphPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringPtrInput `pulumi:"effectiveMode"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn pulumi.StringPtrInput `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn pulumi.StringInput `pulumi:"functionUrn"`
	// The invocation mode of the FunctionGraph function.
	InvocationMode pulumi.StringPtrInput `pulumi:"invocationMode"`
	// The invocation mode of the FunctionGraph function.
	InvocationType pulumi.StringPtrInput `pulumi:"invocationType"`
	// The name of the backend policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The network (framework) type of the FunctionGraph function.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApiGatewayApiFuncGraphPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraphPolicy)(nil)).Elem()
}

func (i ApiGatewayApiFuncGraphPolicyArgs) ToApiGatewayApiFuncGraphPolicyOutput() ApiGatewayApiFuncGraphPolicyOutput {
	return i.ToApiGatewayApiFuncGraphPolicyOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphPolicyArgs) ToApiGatewayApiFuncGraphPolicyOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphPolicyOutput)
}

// ApiGatewayApiFuncGraphPolicyArrayInput is an input type that accepts ApiGatewayApiFuncGraphPolicyArray and ApiGatewayApiFuncGraphPolicyArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphPolicyArrayInput` via:
//
//	ApiGatewayApiFuncGraphPolicyArray{ ApiGatewayApiFuncGraphPolicyArgs{...} }
type ApiGatewayApiFuncGraphPolicyArrayInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphPolicyArrayOutput() ApiGatewayApiFuncGraphPolicyArrayOutput
	ToApiGatewayApiFuncGraphPolicyArrayOutputWithContext(context.Context) ApiGatewayApiFuncGraphPolicyArrayOutput
}

type ApiGatewayApiFuncGraphPolicyArray []ApiGatewayApiFuncGraphPolicyInput

func (ApiGatewayApiFuncGraphPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiFuncGraphPolicy)(nil)).Elem()
}

func (i ApiGatewayApiFuncGraphPolicyArray) ToApiGatewayApiFuncGraphPolicyArrayOutput() ApiGatewayApiFuncGraphPolicyArrayOutput {
	return i.ToApiGatewayApiFuncGraphPolicyArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphPolicyArray) ToApiGatewayApiFuncGraphPolicyArrayOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphPolicyArrayOutput)
}

type ApiGatewayApiFuncGraphPolicyOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraphPolicy)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphPolicyOutput) ToApiGatewayApiFuncGraphPolicyOutput() ApiGatewayApiFuncGraphPolicyOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyOutput) ToApiGatewayApiFuncGraphPolicyOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiFuncGraphPolicyOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The configaiton list of the backend parameters.
func (o ApiGatewayApiFuncGraphPolicyOutput) BackendParams() ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) []ApiGatewayApiFuncGraphPolicyBackendParam {
		return v.BackendParams
	}).(ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o ApiGatewayApiFuncGraphPolicyOutput) Conditions() ApiGatewayApiFuncGraphPolicyConditionArrayOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) []ApiGatewayApiFuncGraphPolicyCondition { return v.Conditions }).(ApiGatewayApiFuncGraphPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o ApiGatewayApiFuncGraphPolicyOutput) EffectiveMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.EffectiveMode }).(pulumi.StringPtrOutput)
}

// The alias URN of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPolicyOutput) FunctionAliasUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.FunctionAliasUrn }).(pulumi.StringPtrOutput)
}

// The URN of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPolicyOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) string { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The invocation mode of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPolicyOutput) InvocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.InvocationMode }).(pulumi.StringPtrOutput)
}

// The invocation mode of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPolicyOutput) InvocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.InvocationType }).(pulumi.StringPtrOutput)
}

// The name of the backend policy.
func (o ApiGatewayApiFuncGraphPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The network (framework) type of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPolicyOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// The request protocol of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPolicyOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApiGatewayApiFuncGraphPolicyOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The version of the FunctionGraph function.
func (o ApiGatewayApiFuncGraphPolicyOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicy) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApiGatewayApiFuncGraphPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiFuncGraphPolicy)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphPolicyArrayOutput) ToApiGatewayApiFuncGraphPolicyArrayOutput() ApiGatewayApiFuncGraphPolicyArrayOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyArrayOutput) ToApiGatewayApiFuncGraphPolicyArrayOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyArrayOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiFuncGraphPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiFuncGraphPolicy {
		return vs[0].([]ApiGatewayApiFuncGraphPolicy)[vs[1].(int)]
	}).(ApiGatewayApiFuncGraphPolicyOutput)
}

type ApiGatewayApiFuncGraphPolicyBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApiGatewayApiFuncGraphPolicyBackendParamInput is an input type that accepts ApiGatewayApiFuncGraphPolicyBackendParamArgs and ApiGatewayApiFuncGraphPolicyBackendParamOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphPolicyBackendParamInput` via:
//
//	ApiGatewayApiFuncGraphPolicyBackendParamArgs{...}
type ApiGatewayApiFuncGraphPolicyBackendParamInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphPolicyBackendParamOutput() ApiGatewayApiFuncGraphPolicyBackendParamOutput
	ToApiGatewayApiFuncGraphPolicyBackendParamOutputWithContext(context.Context) ApiGatewayApiFuncGraphPolicyBackendParamOutput
}

type ApiGatewayApiFuncGraphPolicyBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiGatewayApiFuncGraphPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiFuncGraphPolicyBackendParamArgs) ToApiGatewayApiFuncGraphPolicyBackendParamOutput() ApiGatewayApiFuncGraphPolicyBackendParamOutput {
	return i.ToApiGatewayApiFuncGraphPolicyBackendParamOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphPolicyBackendParamArgs) ToApiGatewayApiFuncGraphPolicyBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphPolicyBackendParamOutput)
}

// ApiGatewayApiFuncGraphPolicyBackendParamArrayInput is an input type that accepts ApiGatewayApiFuncGraphPolicyBackendParamArray and ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphPolicyBackendParamArrayInput` via:
//
//	ApiGatewayApiFuncGraphPolicyBackendParamArray{ ApiGatewayApiFuncGraphPolicyBackendParamArgs{...} }
type ApiGatewayApiFuncGraphPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphPolicyBackendParamArrayOutput() ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput
	ToApiGatewayApiFuncGraphPolicyBackendParamArrayOutputWithContext(context.Context) ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput
}

type ApiGatewayApiFuncGraphPolicyBackendParamArray []ApiGatewayApiFuncGraphPolicyBackendParamInput

func (ApiGatewayApiFuncGraphPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiFuncGraphPolicyBackendParamArray) ToApiGatewayApiFuncGraphPolicyBackendParamArrayOutput() ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput {
	return i.ToApiGatewayApiFuncGraphPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphPolicyBackendParamArray) ToApiGatewayApiFuncGraphPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput)
}

type ApiGatewayApiFuncGraphPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) ToApiGatewayApiFuncGraphPolicyBackendParamOutput() ApiGatewayApiFuncGraphPolicyBackendParamOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) ToApiGatewayApiFuncGraphPolicyBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApiGatewayApiFuncGraphPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput) ToApiGatewayApiFuncGraphPolicyBackendParamArrayOutput() ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput) ToApiGatewayApiFuncGraphPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiFuncGraphPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiFuncGraphPolicyBackendParam {
		return vs[0].([]ApiGatewayApiFuncGraphPolicyBackendParam)[vs[1].(int)]
	}).(ApiGatewayApiFuncGraphPolicyBackendParamOutput)
}

type ApiGatewayApiFuncGraphPolicyCondition struct {
	// The cookie parameter name.
	CookieName *string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName *string `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation *string `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName *string `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName *string `pulumi:"paramName"`
	// The type of the backend policy.
	Source *string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName *string `pulumi:"sysName"`
	// The condition type.
	Type *string `pulumi:"type"`
	// The value of the backend policy.
	Value string `pulumi:"value"`
}

// ApiGatewayApiFuncGraphPolicyConditionInput is an input type that accepts ApiGatewayApiFuncGraphPolicyConditionArgs and ApiGatewayApiFuncGraphPolicyConditionOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphPolicyConditionInput` via:
//
//	ApiGatewayApiFuncGraphPolicyConditionArgs{...}
type ApiGatewayApiFuncGraphPolicyConditionInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphPolicyConditionOutput() ApiGatewayApiFuncGraphPolicyConditionOutput
	ToApiGatewayApiFuncGraphPolicyConditionOutputWithContext(context.Context) ApiGatewayApiFuncGraphPolicyConditionOutput
}

type ApiGatewayApiFuncGraphPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringPtrInput `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation pulumi.StringPtrInput `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName pulumi.StringPtrInput `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// The type of the backend policy.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringPtrInput `pulumi:"sysName"`
	// The condition type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the backend policy.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiGatewayApiFuncGraphPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (i ApiGatewayApiFuncGraphPolicyConditionArgs) ToApiGatewayApiFuncGraphPolicyConditionOutput() ApiGatewayApiFuncGraphPolicyConditionOutput {
	return i.ToApiGatewayApiFuncGraphPolicyConditionOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphPolicyConditionArgs) ToApiGatewayApiFuncGraphPolicyConditionOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphPolicyConditionOutput)
}

// ApiGatewayApiFuncGraphPolicyConditionArrayInput is an input type that accepts ApiGatewayApiFuncGraphPolicyConditionArray and ApiGatewayApiFuncGraphPolicyConditionArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiFuncGraphPolicyConditionArrayInput` via:
//
//	ApiGatewayApiFuncGraphPolicyConditionArray{ ApiGatewayApiFuncGraphPolicyConditionArgs{...} }
type ApiGatewayApiFuncGraphPolicyConditionArrayInput interface {
	pulumi.Input

	ToApiGatewayApiFuncGraphPolicyConditionArrayOutput() ApiGatewayApiFuncGraphPolicyConditionArrayOutput
	ToApiGatewayApiFuncGraphPolicyConditionArrayOutputWithContext(context.Context) ApiGatewayApiFuncGraphPolicyConditionArrayOutput
}

type ApiGatewayApiFuncGraphPolicyConditionArray []ApiGatewayApiFuncGraphPolicyConditionInput

func (ApiGatewayApiFuncGraphPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (i ApiGatewayApiFuncGraphPolicyConditionArray) ToApiGatewayApiFuncGraphPolicyConditionArrayOutput() ApiGatewayApiFuncGraphPolicyConditionArrayOutput {
	return i.ToApiGatewayApiFuncGraphPolicyConditionArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiFuncGraphPolicyConditionArray) ToApiGatewayApiFuncGraphPolicyConditionArrayOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiFuncGraphPolicyConditionArrayOutput)
}

type ApiGatewayApiFuncGraphPolicyConditionOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphPolicyConditionOutput) ToApiGatewayApiFuncGraphPolicyConditionOutput() ApiGatewayApiFuncGraphPolicyConditionOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyConditionOutput) ToApiGatewayApiFuncGraphPolicyConditionOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The frontend authentication parameter name.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.FrontendAuthorizerName }).(pulumi.StringPtrOutput)
}

// The location of a parameter generated after orchestration.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) MappedParamLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.MappedParamLocation }).(pulumi.StringPtrOutput)
}

// The name of a parameter generated after orchestration.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) MappedParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.MappedParamName }).(pulumi.StringPtrOutput)
}

// The request parameter name.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// The type of the backend policy.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The gateway built-in parameter name.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) SysName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.SysName }).(pulumi.StringPtrOutput)
}

// The condition type.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the backend policy.
func (o ApiGatewayApiFuncGraphPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiFuncGraphPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type ApiGatewayApiFuncGraphPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiFuncGraphPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (o ApiGatewayApiFuncGraphPolicyConditionArrayOutput) ToApiGatewayApiFuncGraphPolicyConditionArrayOutput() ApiGatewayApiFuncGraphPolicyConditionArrayOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyConditionArrayOutput) ToApiGatewayApiFuncGraphPolicyConditionArrayOutputWithContext(ctx context.Context) ApiGatewayApiFuncGraphPolicyConditionArrayOutput {
	return o
}

func (o ApiGatewayApiFuncGraphPolicyConditionArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiFuncGraphPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiFuncGraphPolicyCondition {
		return vs[0].([]ApiGatewayApiFuncGraphPolicyCondition)[vs[1].(int)]
	}).(ApiGatewayApiFuncGraphPolicyConditionOutput)
}

type ApiGatewayApiMock struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The response content of the mock.
	Response *string `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode *int `pulumi:"statusCode"`
}

// ApiGatewayApiMockInput is an input type that accepts ApiGatewayApiMockArgs and ApiGatewayApiMockOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockInput` via:
//
//	ApiGatewayApiMockArgs{...}
type ApiGatewayApiMockInput interface {
	pulumi.Input

	ToApiGatewayApiMockOutput() ApiGatewayApiMockOutput
	ToApiGatewayApiMockOutputWithContext(context.Context) ApiGatewayApiMockOutput
}

type ApiGatewayApiMockArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The response content of the mock.
	Response pulumi.StringPtrInput `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
}

func (ApiGatewayApiMockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMock)(nil)).Elem()
}

func (i ApiGatewayApiMockArgs) ToApiGatewayApiMockOutput() ApiGatewayApiMockOutput {
	return i.ToApiGatewayApiMockOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockArgs) ToApiGatewayApiMockOutputWithContext(ctx context.Context) ApiGatewayApiMockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockOutput)
}

func (i ApiGatewayApiMockArgs) ToApiGatewayApiMockPtrOutput() ApiGatewayApiMockPtrOutput {
	return i.ToApiGatewayApiMockPtrOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockArgs) ToApiGatewayApiMockPtrOutputWithContext(ctx context.Context) ApiGatewayApiMockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockOutput).ToApiGatewayApiMockPtrOutputWithContext(ctx)
}

// ApiGatewayApiMockPtrInput is an input type that accepts ApiGatewayApiMockArgs, ApiGatewayApiMockPtr and ApiGatewayApiMockPtrOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockPtrInput` via:
//
//	        ApiGatewayApiMockArgs{...}
//
//	or:
//
//	        nil
type ApiGatewayApiMockPtrInput interface {
	pulumi.Input

	ToApiGatewayApiMockPtrOutput() ApiGatewayApiMockPtrOutput
	ToApiGatewayApiMockPtrOutputWithContext(context.Context) ApiGatewayApiMockPtrOutput
}

type apiGatewayApiMockPtrType ApiGatewayApiMockArgs

func ApiGatewayApiMockPtr(v *ApiGatewayApiMockArgs) ApiGatewayApiMockPtrInput {
	return (*apiGatewayApiMockPtrType)(v)
}

func (*apiGatewayApiMockPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiMock)(nil)).Elem()
}

func (i *apiGatewayApiMockPtrType) ToApiGatewayApiMockPtrOutput() ApiGatewayApiMockPtrOutput {
	return i.ToApiGatewayApiMockPtrOutputWithContext(context.Background())
}

func (i *apiGatewayApiMockPtrType) ToApiGatewayApiMockPtrOutputWithContext(ctx context.Context) ApiGatewayApiMockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockPtrOutput)
}

type ApiGatewayApiMockOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMock)(nil)).Elem()
}

func (o ApiGatewayApiMockOutput) ToApiGatewayApiMockOutput() ApiGatewayApiMockOutput {
	return o
}

func (o ApiGatewayApiMockOutput) ToApiGatewayApiMockOutputWithContext(ctx context.Context) ApiGatewayApiMockOutput {
	return o
}

func (o ApiGatewayApiMockOutput) ToApiGatewayApiMockPtrOutput() ApiGatewayApiMockPtrOutput {
	return o.ToApiGatewayApiMockPtrOutputWithContext(context.Background())
}

func (o ApiGatewayApiMockOutput) ToApiGatewayApiMockPtrOutputWithContext(ctx context.Context) ApiGatewayApiMockPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiGatewayApiMock) *ApiGatewayApiMock {
		return &v
	}).(ApiGatewayApiMockPtrOutput)
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiMockOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMock) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The response content of the mock.
func (o ApiGatewayApiMockOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMock) *string { return v.Response }).(pulumi.StringPtrOutput)
}

// The custom status code of the mock response.
func (o ApiGatewayApiMockOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMock) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type ApiGatewayApiMockPtrOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiMock)(nil)).Elem()
}

func (o ApiGatewayApiMockPtrOutput) ToApiGatewayApiMockPtrOutput() ApiGatewayApiMockPtrOutput {
	return o
}

func (o ApiGatewayApiMockPtrOutput) ToApiGatewayApiMockPtrOutputWithContext(ctx context.Context) ApiGatewayApiMockPtrOutput {
	return o
}

func (o ApiGatewayApiMockPtrOutput) Elem() ApiGatewayApiMockOutput {
	return o.ApplyT(func(v *ApiGatewayApiMock) ApiGatewayApiMock {
		if v != nil {
			return *v
		}
		var ret ApiGatewayApiMock
		return ret
	}).(ApiGatewayApiMockOutput)
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiMockPtrOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiMock) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerId
	}).(pulumi.StringPtrOutput)
}

// The response content of the mock.
func (o ApiGatewayApiMockPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiMock) *string {
		if v == nil {
			return nil
		}
		return v.Response
	}).(pulumi.StringPtrOutput)
}

// The custom status code of the mock response.
func (o ApiGatewayApiMockPtrOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiMock) *int {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.IntPtrOutput)
}

type ApiGatewayApiMockPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configuration list of backend parameters.
	BackendParams []ApiGatewayApiMockPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []ApiGatewayApiMockPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode *string `pulumi:"effectiveMode"`
	// The backend policy name.
	Name string `pulumi:"name"`
	// The response content of the mock.
	Response *string `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode *int `pulumi:"statusCode"`
}

// ApiGatewayApiMockPolicyInput is an input type that accepts ApiGatewayApiMockPolicyArgs and ApiGatewayApiMockPolicyOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockPolicyInput` via:
//
//	ApiGatewayApiMockPolicyArgs{...}
type ApiGatewayApiMockPolicyInput interface {
	pulumi.Input

	ToApiGatewayApiMockPolicyOutput() ApiGatewayApiMockPolicyOutput
	ToApiGatewayApiMockPolicyOutputWithContext(context.Context) ApiGatewayApiMockPolicyOutput
}

type ApiGatewayApiMockPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The configuration list of backend parameters.
	BackendParams ApiGatewayApiMockPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions ApiGatewayApiMockPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringPtrInput `pulumi:"effectiveMode"`
	// The backend policy name.
	Name pulumi.StringInput `pulumi:"name"`
	// The response content of the mock.
	Response pulumi.StringPtrInput `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
}

func (ApiGatewayApiMockPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMockPolicy)(nil)).Elem()
}

func (i ApiGatewayApiMockPolicyArgs) ToApiGatewayApiMockPolicyOutput() ApiGatewayApiMockPolicyOutput {
	return i.ToApiGatewayApiMockPolicyOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockPolicyArgs) ToApiGatewayApiMockPolicyOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockPolicyOutput)
}

// ApiGatewayApiMockPolicyArrayInput is an input type that accepts ApiGatewayApiMockPolicyArray and ApiGatewayApiMockPolicyArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockPolicyArrayInput` via:
//
//	ApiGatewayApiMockPolicyArray{ ApiGatewayApiMockPolicyArgs{...} }
type ApiGatewayApiMockPolicyArrayInput interface {
	pulumi.Input

	ToApiGatewayApiMockPolicyArrayOutput() ApiGatewayApiMockPolicyArrayOutput
	ToApiGatewayApiMockPolicyArrayOutputWithContext(context.Context) ApiGatewayApiMockPolicyArrayOutput
}

type ApiGatewayApiMockPolicyArray []ApiGatewayApiMockPolicyInput

func (ApiGatewayApiMockPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiMockPolicy)(nil)).Elem()
}

func (i ApiGatewayApiMockPolicyArray) ToApiGatewayApiMockPolicyArrayOutput() ApiGatewayApiMockPolicyArrayOutput {
	return i.ToApiGatewayApiMockPolicyArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockPolicyArray) ToApiGatewayApiMockPolicyArrayOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockPolicyArrayOutput)
}

type ApiGatewayApiMockPolicyOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMockPolicy)(nil)).Elem()
}

func (o ApiGatewayApiMockPolicyOutput) ToApiGatewayApiMockPolicyOutput() ApiGatewayApiMockPolicyOutput {
	return o
}

func (o ApiGatewayApiMockPolicyOutput) ToApiGatewayApiMockPolicyOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiMockPolicyOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicy) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The configuration list of backend parameters.
func (o ApiGatewayApiMockPolicyOutput) BackendParams() ApiGatewayApiMockPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicy) []ApiGatewayApiMockPolicyBackendParam { return v.BackendParams }).(ApiGatewayApiMockPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o ApiGatewayApiMockPolicyOutput) Conditions() ApiGatewayApiMockPolicyConditionArrayOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicy) []ApiGatewayApiMockPolicyCondition { return v.Conditions }).(ApiGatewayApiMockPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o ApiGatewayApiMockPolicyOutput) EffectiveMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicy) *string { return v.EffectiveMode }).(pulumi.StringPtrOutput)
}

// The backend policy name.
func (o ApiGatewayApiMockPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The response content of the mock.
func (o ApiGatewayApiMockPolicyOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicy) *string { return v.Response }).(pulumi.StringPtrOutput)
}

// The custom status code of the mock response.
func (o ApiGatewayApiMockPolicyOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicy) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type ApiGatewayApiMockPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiMockPolicy)(nil)).Elem()
}

func (o ApiGatewayApiMockPolicyArrayOutput) ToApiGatewayApiMockPolicyArrayOutput() ApiGatewayApiMockPolicyArrayOutput {
	return o
}

func (o ApiGatewayApiMockPolicyArrayOutput) ToApiGatewayApiMockPolicyArrayOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyArrayOutput {
	return o
}

func (o ApiGatewayApiMockPolicyArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiMockPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiMockPolicy {
		return vs[0].([]ApiGatewayApiMockPolicy)[vs[1].(int)]
	}).(ApiGatewayApiMockPolicyOutput)
}

type ApiGatewayApiMockPolicyBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApiGatewayApiMockPolicyBackendParamInput is an input type that accepts ApiGatewayApiMockPolicyBackendParamArgs and ApiGatewayApiMockPolicyBackendParamOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockPolicyBackendParamInput` via:
//
//	ApiGatewayApiMockPolicyBackendParamArgs{...}
type ApiGatewayApiMockPolicyBackendParamInput interface {
	pulumi.Input

	ToApiGatewayApiMockPolicyBackendParamOutput() ApiGatewayApiMockPolicyBackendParamOutput
	ToApiGatewayApiMockPolicyBackendParamOutputWithContext(context.Context) ApiGatewayApiMockPolicyBackendParamOutput
}

type ApiGatewayApiMockPolicyBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiGatewayApiMockPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMockPolicyBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiMockPolicyBackendParamArgs) ToApiGatewayApiMockPolicyBackendParamOutput() ApiGatewayApiMockPolicyBackendParamOutput {
	return i.ToApiGatewayApiMockPolicyBackendParamOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockPolicyBackendParamArgs) ToApiGatewayApiMockPolicyBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockPolicyBackendParamOutput)
}

// ApiGatewayApiMockPolicyBackendParamArrayInput is an input type that accepts ApiGatewayApiMockPolicyBackendParamArray and ApiGatewayApiMockPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockPolicyBackendParamArrayInput` via:
//
//	ApiGatewayApiMockPolicyBackendParamArray{ ApiGatewayApiMockPolicyBackendParamArgs{...} }
type ApiGatewayApiMockPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToApiGatewayApiMockPolicyBackendParamArrayOutput() ApiGatewayApiMockPolicyBackendParamArrayOutput
	ToApiGatewayApiMockPolicyBackendParamArrayOutputWithContext(context.Context) ApiGatewayApiMockPolicyBackendParamArrayOutput
}

type ApiGatewayApiMockPolicyBackendParamArray []ApiGatewayApiMockPolicyBackendParamInput

func (ApiGatewayApiMockPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiMockPolicyBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiMockPolicyBackendParamArray) ToApiGatewayApiMockPolicyBackendParamArrayOutput() ApiGatewayApiMockPolicyBackendParamArrayOutput {
	return i.ToApiGatewayApiMockPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockPolicyBackendParamArray) ToApiGatewayApiMockPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockPolicyBackendParamArrayOutput)
}

type ApiGatewayApiMockPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMockPolicyBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiMockPolicyBackendParamOutput) ToApiGatewayApiMockPolicyBackendParamOutput() ApiGatewayApiMockPolicyBackendParamOutput {
	return o
}

func (o ApiGatewayApiMockPolicyBackendParamOutput) ToApiGatewayApiMockPolicyBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApiGatewayApiMockPolicyBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApiGatewayApiMockPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApiGatewayApiMockPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApiGatewayApiMockPolicyBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApiGatewayApiMockPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApiGatewayApiMockPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiGatewayApiMockPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiMockPolicyBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiMockPolicyBackendParamArrayOutput) ToApiGatewayApiMockPolicyBackendParamArrayOutput() ApiGatewayApiMockPolicyBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiMockPolicyBackendParamArrayOutput) ToApiGatewayApiMockPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiMockPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiMockPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiMockPolicyBackendParam {
		return vs[0].([]ApiGatewayApiMockPolicyBackendParam)[vs[1].(int)]
	}).(ApiGatewayApiMockPolicyBackendParamOutput)
}

type ApiGatewayApiMockPolicyCondition struct {
	// The cookie parameter name.
	CookieName *string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName *string `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation *string `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName *string `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName *string `pulumi:"paramName"`
	// The type of the backend policy.
	Source *string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName *string `pulumi:"sysName"`
	// The condition type.
	Type *string `pulumi:"type"`
	// The value of the backend policy.
	Value string `pulumi:"value"`
}

// ApiGatewayApiMockPolicyConditionInput is an input type that accepts ApiGatewayApiMockPolicyConditionArgs and ApiGatewayApiMockPolicyConditionOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockPolicyConditionInput` via:
//
//	ApiGatewayApiMockPolicyConditionArgs{...}
type ApiGatewayApiMockPolicyConditionInput interface {
	pulumi.Input

	ToApiGatewayApiMockPolicyConditionOutput() ApiGatewayApiMockPolicyConditionOutput
	ToApiGatewayApiMockPolicyConditionOutputWithContext(context.Context) ApiGatewayApiMockPolicyConditionOutput
}

type ApiGatewayApiMockPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringPtrInput `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation pulumi.StringPtrInput `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName pulumi.StringPtrInput `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// The type of the backend policy.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringPtrInput `pulumi:"sysName"`
	// The condition type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the backend policy.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiGatewayApiMockPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMockPolicyCondition)(nil)).Elem()
}

func (i ApiGatewayApiMockPolicyConditionArgs) ToApiGatewayApiMockPolicyConditionOutput() ApiGatewayApiMockPolicyConditionOutput {
	return i.ToApiGatewayApiMockPolicyConditionOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockPolicyConditionArgs) ToApiGatewayApiMockPolicyConditionOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockPolicyConditionOutput)
}

// ApiGatewayApiMockPolicyConditionArrayInput is an input type that accepts ApiGatewayApiMockPolicyConditionArray and ApiGatewayApiMockPolicyConditionArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiMockPolicyConditionArrayInput` via:
//
//	ApiGatewayApiMockPolicyConditionArray{ ApiGatewayApiMockPolicyConditionArgs{...} }
type ApiGatewayApiMockPolicyConditionArrayInput interface {
	pulumi.Input

	ToApiGatewayApiMockPolicyConditionArrayOutput() ApiGatewayApiMockPolicyConditionArrayOutput
	ToApiGatewayApiMockPolicyConditionArrayOutputWithContext(context.Context) ApiGatewayApiMockPolicyConditionArrayOutput
}

type ApiGatewayApiMockPolicyConditionArray []ApiGatewayApiMockPolicyConditionInput

func (ApiGatewayApiMockPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiMockPolicyCondition)(nil)).Elem()
}

func (i ApiGatewayApiMockPolicyConditionArray) ToApiGatewayApiMockPolicyConditionArrayOutput() ApiGatewayApiMockPolicyConditionArrayOutput {
	return i.ToApiGatewayApiMockPolicyConditionArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiMockPolicyConditionArray) ToApiGatewayApiMockPolicyConditionArrayOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMockPolicyConditionArrayOutput)
}

type ApiGatewayApiMockPolicyConditionOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiMockPolicyCondition)(nil)).Elem()
}

func (o ApiGatewayApiMockPolicyConditionOutput) ToApiGatewayApiMockPolicyConditionOutput() ApiGatewayApiMockPolicyConditionOutput {
	return o
}

func (o ApiGatewayApiMockPolicyConditionOutput) ToApiGatewayApiMockPolicyConditionOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o ApiGatewayApiMockPolicyConditionOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The frontend authentication parameter name.
func (o ApiGatewayApiMockPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.FrontendAuthorizerName }).(pulumi.StringPtrOutput)
}

// The location of a parameter generated after orchestration.
func (o ApiGatewayApiMockPolicyConditionOutput) MappedParamLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.MappedParamLocation }).(pulumi.StringPtrOutput)
}

// The name of a parameter generated after orchestration.
func (o ApiGatewayApiMockPolicyConditionOutput) MappedParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.MappedParamName }).(pulumi.StringPtrOutput)
}

// The request parameter name.
func (o ApiGatewayApiMockPolicyConditionOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// The type of the backend policy.
func (o ApiGatewayApiMockPolicyConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The gateway built-in parameter name.
func (o ApiGatewayApiMockPolicyConditionOutput) SysName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.SysName }).(pulumi.StringPtrOutput)
}

// The condition type.
func (o ApiGatewayApiMockPolicyConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the backend policy.
func (o ApiGatewayApiMockPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiMockPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type ApiGatewayApiMockPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMockPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiMockPolicyCondition)(nil)).Elem()
}

func (o ApiGatewayApiMockPolicyConditionArrayOutput) ToApiGatewayApiMockPolicyConditionArrayOutput() ApiGatewayApiMockPolicyConditionArrayOutput {
	return o
}

func (o ApiGatewayApiMockPolicyConditionArrayOutput) ToApiGatewayApiMockPolicyConditionArrayOutputWithContext(ctx context.Context) ApiGatewayApiMockPolicyConditionArrayOutput {
	return o
}

func (o ApiGatewayApiMockPolicyConditionArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiMockPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiMockPolicyCondition {
		return vs[0].([]ApiGatewayApiMockPolicyCondition)[vs[1].(int)]
	}).(ApiGatewayApiMockPolicyConditionOutput)
}

type ApiGatewayApiRequestParam struct {
	// The default value of the parameter.
	Default *string `pulumi:"default"`
	// The parameter description.
	Description *string `pulumi:"description"`
	// The enumerated value.
	Enumeration *string `pulumi:"enumeration"`
	// The parameter example.
	Example *string `pulumi:"example"`
	// Where this parameter is located.
	Location *string `pulumi:"location"`
	// The maximum value or length (string parameter) for parameter.
	Maximum *int `pulumi:"maximum"`
	// The minimum value or length (string parameter) for parameter.
	Minimum *int `pulumi:"minimum"`
	// The name of the request parameter.
	Name string `pulumi:"name"`
	// The list of orchestration rules that parameter used.
	Orchestrations []string `pulumi:"orchestrations"`
	// Whether to transparently transfer the parameter.
	Passthrough *bool `pulumi:"passthrough"`
	// Whether this parameter is required.
	Required *bool `pulumi:"required"`
	// The parameter type.
	Type *string `pulumi:"type"`
	// Whether to enable the parameter validation.
	ValidEnable *int `pulumi:"validEnable"`
}

// ApiGatewayApiRequestParamInput is an input type that accepts ApiGatewayApiRequestParamArgs and ApiGatewayApiRequestParamOutput values.
// You can construct a concrete instance of `ApiGatewayApiRequestParamInput` via:
//
//	ApiGatewayApiRequestParamArgs{...}
type ApiGatewayApiRequestParamInput interface {
	pulumi.Input

	ToApiGatewayApiRequestParamOutput() ApiGatewayApiRequestParamOutput
	ToApiGatewayApiRequestParamOutputWithContext(context.Context) ApiGatewayApiRequestParamOutput
}

type ApiGatewayApiRequestParamArgs struct {
	// The default value of the parameter.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// The parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The enumerated value.
	Enumeration pulumi.StringPtrInput `pulumi:"enumeration"`
	// The parameter example.
	Example pulumi.StringPtrInput `pulumi:"example"`
	// Where this parameter is located.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The maximum value or length (string parameter) for parameter.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// The minimum value or length (string parameter) for parameter.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// The name of the request parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of orchestration rules that parameter used.
	Orchestrations pulumi.StringArrayInput `pulumi:"orchestrations"`
	// Whether to transparently transfer the parameter.
	Passthrough pulumi.BoolPtrInput `pulumi:"passthrough"`
	// Whether this parameter is required.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// The parameter type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Whether to enable the parameter validation.
	ValidEnable pulumi.IntPtrInput `pulumi:"validEnable"`
}

func (ApiGatewayApiRequestParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiRequestParam)(nil)).Elem()
}

func (i ApiGatewayApiRequestParamArgs) ToApiGatewayApiRequestParamOutput() ApiGatewayApiRequestParamOutput {
	return i.ToApiGatewayApiRequestParamOutputWithContext(context.Background())
}

func (i ApiGatewayApiRequestParamArgs) ToApiGatewayApiRequestParamOutputWithContext(ctx context.Context) ApiGatewayApiRequestParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiRequestParamOutput)
}

// ApiGatewayApiRequestParamArrayInput is an input type that accepts ApiGatewayApiRequestParamArray and ApiGatewayApiRequestParamArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiRequestParamArrayInput` via:
//
//	ApiGatewayApiRequestParamArray{ ApiGatewayApiRequestParamArgs{...} }
type ApiGatewayApiRequestParamArrayInput interface {
	pulumi.Input

	ToApiGatewayApiRequestParamArrayOutput() ApiGatewayApiRequestParamArrayOutput
	ToApiGatewayApiRequestParamArrayOutputWithContext(context.Context) ApiGatewayApiRequestParamArrayOutput
}

type ApiGatewayApiRequestParamArray []ApiGatewayApiRequestParamInput

func (ApiGatewayApiRequestParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiRequestParam)(nil)).Elem()
}

func (i ApiGatewayApiRequestParamArray) ToApiGatewayApiRequestParamArrayOutput() ApiGatewayApiRequestParamArrayOutput {
	return i.ToApiGatewayApiRequestParamArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiRequestParamArray) ToApiGatewayApiRequestParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiRequestParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiRequestParamArrayOutput)
}

type ApiGatewayApiRequestParamOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiRequestParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiRequestParam)(nil)).Elem()
}

func (o ApiGatewayApiRequestParamOutput) ToApiGatewayApiRequestParamOutput() ApiGatewayApiRequestParamOutput {
	return o
}

func (o ApiGatewayApiRequestParamOutput) ToApiGatewayApiRequestParamOutputWithContext(ctx context.Context) ApiGatewayApiRequestParamOutput {
	return o
}

// The default value of the parameter.
func (o ApiGatewayApiRequestParamOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// The parameter description.
func (o ApiGatewayApiRequestParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The enumerated value.
func (o ApiGatewayApiRequestParamOutput) Enumeration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *string { return v.Enumeration }).(pulumi.StringPtrOutput)
}

// The parameter example.
func (o ApiGatewayApiRequestParamOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// Where this parameter is located.
func (o ApiGatewayApiRequestParamOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The maximum value or length (string parameter) for parameter.
func (o ApiGatewayApiRequestParamOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// The minimum value or length (string parameter) for parameter.
func (o ApiGatewayApiRequestParamOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// The name of the request parameter.
func (o ApiGatewayApiRequestParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) string { return v.Name }).(pulumi.StringOutput)
}

// The list of orchestration rules that parameter used.
func (o ApiGatewayApiRequestParamOutput) Orchestrations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) []string { return v.Orchestrations }).(pulumi.StringArrayOutput)
}

// Whether to transparently transfer the parameter.
func (o ApiGatewayApiRequestParamOutput) Passthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *bool { return v.Passthrough }).(pulumi.BoolPtrOutput)
}

// Whether this parameter is required.
func (o ApiGatewayApiRequestParamOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// The parameter type.
func (o ApiGatewayApiRequestParamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Whether to enable the parameter validation.
func (o ApiGatewayApiRequestParamOutput) ValidEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiRequestParam) *int { return v.ValidEnable }).(pulumi.IntPtrOutput)
}

type ApiGatewayApiRequestParamArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiRequestParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiRequestParam)(nil)).Elem()
}

func (o ApiGatewayApiRequestParamArrayOutput) ToApiGatewayApiRequestParamArrayOutput() ApiGatewayApiRequestParamArrayOutput {
	return o
}

func (o ApiGatewayApiRequestParamArrayOutput) ToApiGatewayApiRequestParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiRequestParamArrayOutput {
	return o
}

func (o ApiGatewayApiRequestParamArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiRequestParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiRequestParam {
		return vs[0].([]ApiGatewayApiRequestParam)[vs[1].(int)]
	}).(ApiGatewayApiRequestParamOutput)
}

type ApiGatewayApiWeb struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The backend service address, which consists of a domain name or IP address, and a port number.
	BackendAddress *string `pulumi:"backendAddress"`
	// The proxy host header.
	HostHeader *string `pulumi:"hostHeader"`
	// The backend request path.
	Path string `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod *string `pulumi:"requestMethod"`
	// The web protocol type of the API request.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount *int `pulumi:"retryCount"`
	// Whether to enable two-way authentication.
	SslEnable *bool `pulumi:"sslEnable"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId *string `pulumi:"vpcChannelId"`
}

// ApiGatewayApiWebInput is an input type that accepts ApiGatewayApiWebArgs and ApiGatewayApiWebOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebInput` via:
//
//	ApiGatewayApiWebArgs{...}
type ApiGatewayApiWebInput interface {
	pulumi.Input

	ToApiGatewayApiWebOutput() ApiGatewayApiWebOutput
	ToApiGatewayApiWebOutputWithContext(context.Context) ApiGatewayApiWebOutput
}

type ApiGatewayApiWebArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The backend service address, which consists of a domain name or IP address, and a port number.
	BackendAddress pulumi.StringPtrInput `pulumi:"backendAddress"`
	// The proxy host header.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// The backend request path.
	Path pulumi.StringInput `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod pulumi.StringPtrInput `pulumi:"requestMethod"`
	// The web protocol type of the API request.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// Whether to enable two-way authentication.
	SslEnable pulumi.BoolPtrInput `pulumi:"sslEnable"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId pulumi.StringPtrInput `pulumi:"vpcChannelId"`
}

func (ApiGatewayApiWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWeb)(nil)).Elem()
}

func (i ApiGatewayApiWebArgs) ToApiGatewayApiWebOutput() ApiGatewayApiWebOutput {
	return i.ToApiGatewayApiWebOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebArgs) ToApiGatewayApiWebOutputWithContext(ctx context.Context) ApiGatewayApiWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebOutput)
}

func (i ApiGatewayApiWebArgs) ToApiGatewayApiWebPtrOutput() ApiGatewayApiWebPtrOutput {
	return i.ToApiGatewayApiWebPtrOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebArgs) ToApiGatewayApiWebPtrOutputWithContext(ctx context.Context) ApiGatewayApiWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebOutput).ToApiGatewayApiWebPtrOutputWithContext(ctx)
}

// ApiGatewayApiWebPtrInput is an input type that accepts ApiGatewayApiWebArgs, ApiGatewayApiWebPtr and ApiGatewayApiWebPtrOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebPtrInput` via:
//
//	        ApiGatewayApiWebArgs{...}
//
//	or:
//
//	        nil
type ApiGatewayApiWebPtrInput interface {
	pulumi.Input

	ToApiGatewayApiWebPtrOutput() ApiGatewayApiWebPtrOutput
	ToApiGatewayApiWebPtrOutputWithContext(context.Context) ApiGatewayApiWebPtrOutput
}

type apiGatewayApiWebPtrType ApiGatewayApiWebArgs

func ApiGatewayApiWebPtr(v *ApiGatewayApiWebArgs) ApiGatewayApiWebPtrInput {
	return (*apiGatewayApiWebPtrType)(v)
}

func (*apiGatewayApiWebPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiWeb)(nil)).Elem()
}

func (i *apiGatewayApiWebPtrType) ToApiGatewayApiWebPtrOutput() ApiGatewayApiWebPtrOutput {
	return i.ToApiGatewayApiWebPtrOutputWithContext(context.Background())
}

func (i *apiGatewayApiWebPtrType) ToApiGatewayApiWebPtrOutputWithContext(ctx context.Context) ApiGatewayApiWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebPtrOutput)
}

type ApiGatewayApiWebOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWeb)(nil)).Elem()
}

func (o ApiGatewayApiWebOutput) ToApiGatewayApiWebOutput() ApiGatewayApiWebOutput {
	return o
}

func (o ApiGatewayApiWebOutput) ToApiGatewayApiWebOutputWithContext(ctx context.Context) ApiGatewayApiWebOutput {
	return o
}

func (o ApiGatewayApiWebOutput) ToApiGatewayApiWebPtrOutput() ApiGatewayApiWebPtrOutput {
	return o.ToApiGatewayApiWebPtrOutputWithContext(context.Background())
}

func (o ApiGatewayApiWebOutput) ToApiGatewayApiWebPtrOutputWithContext(ctx context.Context) ApiGatewayApiWebPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiGatewayApiWeb) *ApiGatewayApiWeb {
		return &v
	}).(ApiGatewayApiWebPtrOutput)
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiWebOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The backend service address, which consists of a domain name or IP address, and a port number.
func (o ApiGatewayApiWebOutput) BackendAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *string { return v.BackendAddress }).(pulumi.StringPtrOutput)
}

// The proxy host header.
func (o ApiGatewayApiWebOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// The backend request path.
func (o ApiGatewayApiWebOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) string { return v.Path }).(pulumi.StringOutput)
}

// The backend request method of the API.
func (o ApiGatewayApiWebOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *string { return v.RequestMethod }).(pulumi.StringPtrOutput)
}

// The web protocol type of the API request.
func (o ApiGatewayApiWebOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The number of retry attempts to request the backend service.
func (o ApiGatewayApiWebOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// Whether to enable two-way authentication.
func (o ApiGatewayApiWebOutput) SslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *bool { return v.SslEnable }).(pulumi.BoolPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApiGatewayApiWebOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The VPC channel ID.
func (o ApiGatewayApiWebOutput) VpcChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWeb) *string { return v.VpcChannelId }).(pulumi.StringPtrOutput)
}

type ApiGatewayApiWebPtrOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiWeb)(nil)).Elem()
}

func (o ApiGatewayApiWebPtrOutput) ToApiGatewayApiWebPtrOutput() ApiGatewayApiWebPtrOutput {
	return o
}

func (o ApiGatewayApiWebPtrOutput) ToApiGatewayApiWebPtrOutputWithContext(ctx context.Context) ApiGatewayApiWebPtrOutput {
	return o
}

func (o ApiGatewayApiWebPtrOutput) Elem() ApiGatewayApiWebOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) ApiGatewayApiWeb {
		if v != nil {
			return *v
		}
		var ret ApiGatewayApiWeb
		return ret
	}).(ApiGatewayApiWebOutput)
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiWebPtrOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerId
	}).(pulumi.StringPtrOutput)
}

// The backend service address, which consists of a domain name or IP address, and a port number.
func (o ApiGatewayApiWebPtrOutput) BackendAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.BackendAddress
	}).(pulumi.StringPtrOutput)
}

// The proxy host header.
func (o ApiGatewayApiWebPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// The backend request path.
func (o ApiGatewayApiWebPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The backend request method of the API.
func (o ApiGatewayApiWebPtrOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.RequestMethod
	}).(pulumi.StringPtrOutput)
}

// The web protocol type of the API request.
func (o ApiGatewayApiWebPtrOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.RequestProtocol
	}).(pulumi.StringPtrOutput)
}

// The number of retry attempts to request the backend service.
func (o ApiGatewayApiWebPtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// Whether to enable two-way authentication.
func (o ApiGatewayApiWebPtrOutput) SslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnable
	}).(pulumi.BoolPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApiGatewayApiWebPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The VPC channel ID.
func (o ApiGatewayApiWebPtrOutput) VpcChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.VpcChannelId
	}).(pulumi.StringPtrOutput)
}

type ApiGatewayApiWebPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The backend service address
	BackendAddress *string `pulumi:"backendAddress"`
	// The configuration list of the backend parameters.
	BackendParams []ApiGatewayApiWebPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []ApiGatewayApiWebPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode *string `pulumi:"effectiveMode"`
	// The proxy host header.
	HostHeader *string `pulumi:"hostHeader"`
	// The name of the web policy.
	Name string `pulumi:"name"`
	// The backend request address.
	Path string `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod string `pulumi:"requestMethod"`
	// The backend request protocol.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount *int `pulumi:"retryCount"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId *string `pulumi:"vpcChannelId"`
}

// ApiGatewayApiWebPolicyInput is an input type that accepts ApiGatewayApiWebPolicyArgs and ApiGatewayApiWebPolicyOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebPolicyInput` via:
//
//	ApiGatewayApiWebPolicyArgs{...}
type ApiGatewayApiWebPolicyInput interface {
	pulumi.Input

	ToApiGatewayApiWebPolicyOutput() ApiGatewayApiWebPolicyOutput
	ToApiGatewayApiWebPolicyOutputWithContext(context.Context) ApiGatewayApiWebPolicyOutput
}

type ApiGatewayApiWebPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The backend service address
	BackendAddress pulumi.StringPtrInput `pulumi:"backendAddress"`
	// The configuration list of the backend parameters.
	BackendParams ApiGatewayApiWebPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions ApiGatewayApiWebPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringPtrInput `pulumi:"effectiveMode"`
	// The proxy host header.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// The name of the web policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The backend request address.
	Path pulumi.StringInput `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// The backend request protocol.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId pulumi.StringPtrInput `pulumi:"vpcChannelId"`
}

func (ApiGatewayApiWebPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWebPolicy)(nil)).Elem()
}

func (i ApiGatewayApiWebPolicyArgs) ToApiGatewayApiWebPolicyOutput() ApiGatewayApiWebPolicyOutput {
	return i.ToApiGatewayApiWebPolicyOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebPolicyArgs) ToApiGatewayApiWebPolicyOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebPolicyOutput)
}

// ApiGatewayApiWebPolicyArrayInput is an input type that accepts ApiGatewayApiWebPolicyArray and ApiGatewayApiWebPolicyArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebPolicyArrayInput` via:
//
//	ApiGatewayApiWebPolicyArray{ ApiGatewayApiWebPolicyArgs{...} }
type ApiGatewayApiWebPolicyArrayInput interface {
	pulumi.Input

	ToApiGatewayApiWebPolicyArrayOutput() ApiGatewayApiWebPolicyArrayOutput
	ToApiGatewayApiWebPolicyArrayOutputWithContext(context.Context) ApiGatewayApiWebPolicyArrayOutput
}

type ApiGatewayApiWebPolicyArray []ApiGatewayApiWebPolicyInput

func (ApiGatewayApiWebPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiWebPolicy)(nil)).Elem()
}

func (i ApiGatewayApiWebPolicyArray) ToApiGatewayApiWebPolicyArrayOutput() ApiGatewayApiWebPolicyArrayOutput {
	return i.ToApiGatewayApiWebPolicyArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebPolicyArray) ToApiGatewayApiWebPolicyArrayOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebPolicyArrayOutput)
}

type ApiGatewayApiWebPolicyOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWebPolicy)(nil)).Elem()
}

func (o ApiGatewayApiWebPolicyOutput) ToApiGatewayApiWebPolicyOutput() ApiGatewayApiWebPolicyOutput {
	return o
}

func (o ApiGatewayApiWebPolicyOutput) ToApiGatewayApiWebPolicyOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o ApiGatewayApiWebPolicyOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The backend service address
func (o ApiGatewayApiWebPolicyOutput) BackendAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *string { return v.BackendAddress }).(pulumi.StringPtrOutput)
}

// The configuration list of the backend parameters.
func (o ApiGatewayApiWebPolicyOutput) BackendParams() ApiGatewayApiWebPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) []ApiGatewayApiWebPolicyBackendParam { return v.BackendParams }).(ApiGatewayApiWebPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o ApiGatewayApiWebPolicyOutput) Conditions() ApiGatewayApiWebPolicyConditionArrayOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) []ApiGatewayApiWebPolicyCondition { return v.Conditions }).(ApiGatewayApiWebPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o ApiGatewayApiWebPolicyOutput) EffectiveMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *string { return v.EffectiveMode }).(pulumi.StringPtrOutput)
}

// The proxy host header.
func (o ApiGatewayApiWebPolicyOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// The name of the web policy.
func (o ApiGatewayApiWebPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The backend request address.
func (o ApiGatewayApiWebPolicyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) string { return v.Path }).(pulumi.StringOutput)
}

// The backend request method of the API.
func (o ApiGatewayApiWebPolicyOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// The backend request protocol.
func (o ApiGatewayApiWebPolicyOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The number of retry attempts to request the backend service.
func (o ApiGatewayApiWebPolicyOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApiGatewayApiWebPolicyOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The VPC channel ID.
func (o ApiGatewayApiWebPolicyOutput) VpcChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicy) *string { return v.VpcChannelId }).(pulumi.StringPtrOutput)
}

type ApiGatewayApiWebPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiWebPolicy)(nil)).Elem()
}

func (o ApiGatewayApiWebPolicyArrayOutput) ToApiGatewayApiWebPolicyArrayOutput() ApiGatewayApiWebPolicyArrayOutput {
	return o
}

func (o ApiGatewayApiWebPolicyArrayOutput) ToApiGatewayApiWebPolicyArrayOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyArrayOutput {
	return o
}

func (o ApiGatewayApiWebPolicyArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiWebPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiWebPolicy {
		return vs[0].([]ApiGatewayApiWebPolicy)[vs[1].(int)]
	}).(ApiGatewayApiWebPolicyOutput)
}

type ApiGatewayApiWebPolicyBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApiGatewayApiWebPolicyBackendParamInput is an input type that accepts ApiGatewayApiWebPolicyBackendParamArgs and ApiGatewayApiWebPolicyBackendParamOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebPolicyBackendParamInput` via:
//
//	ApiGatewayApiWebPolicyBackendParamArgs{...}
type ApiGatewayApiWebPolicyBackendParamInput interface {
	pulumi.Input

	ToApiGatewayApiWebPolicyBackendParamOutput() ApiGatewayApiWebPolicyBackendParamOutput
	ToApiGatewayApiWebPolicyBackendParamOutputWithContext(context.Context) ApiGatewayApiWebPolicyBackendParamOutput
}

type ApiGatewayApiWebPolicyBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiGatewayApiWebPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWebPolicyBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiWebPolicyBackendParamArgs) ToApiGatewayApiWebPolicyBackendParamOutput() ApiGatewayApiWebPolicyBackendParamOutput {
	return i.ToApiGatewayApiWebPolicyBackendParamOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebPolicyBackendParamArgs) ToApiGatewayApiWebPolicyBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebPolicyBackendParamOutput)
}

// ApiGatewayApiWebPolicyBackendParamArrayInput is an input type that accepts ApiGatewayApiWebPolicyBackendParamArray and ApiGatewayApiWebPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebPolicyBackendParamArrayInput` via:
//
//	ApiGatewayApiWebPolicyBackendParamArray{ ApiGatewayApiWebPolicyBackendParamArgs{...} }
type ApiGatewayApiWebPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToApiGatewayApiWebPolicyBackendParamArrayOutput() ApiGatewayApiWebPolicyBackendParamArrayOutput
	ToApiGatewayApiWebPolicyBackendParamArrayOutputWithContext(context.Context) ApiGatewayApiWebPolicyBackendParamArrayOutput
}

type ApiGatewayApiWebPolicyBackendParamArray []ApiGatewayApiWebPolicyBackendParamInput

func (ApiGatewayApiWebPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiWebPolicyBackendParam)(nil)).Elem()
}

func (i ApiGatewayApiWebPolicyBackendParamArray) ToApiGatewayApiWebPolicyBackendParamArrayOutput() ApiGatewayApiWebPolicyBackendParamArrayOutput {
	return i.ToApiGatewayApiWebPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebPolicyBackendParamArray) ToApiGatewayApiWebPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebPolicyBackendParamArrayOutput)
}

type ApiGatewayApiWebPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWebPolicyBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiWebPolicyBackendParamOutput) ToApiGatewayApiWebPolicyBackendParamOutput() ApiGatewayApiWebPolicyBackendParamOutput {
	return o
}

func (o ApiGatewayApiWebPolicyBackendParamOutput) ToApiGatewayApiWebPolicyBackendParamOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApiGatewayApiWebPolicyBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApiGatewayApiWebPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApiGatewayApiWebPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApiGatewayApiWebPolicyBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApiGatewayApiWebPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApiGatewayApiWebPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiGatewayApiWebPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiWebPolicyBackendParam)(nil)).Elem()
}

func (o ApiGatewayApiWebPolicyBackendParamArrayOutput) ToApiGatewayApiWebPolicyBackendParamArrayOutput() ApiGatewayApiWebPolicyBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiWebPolicyBackendParamArrayOutput) ToApiGatewayApiWebPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyBackendParamArrayOutput {
	return o
}

func (o ApiGatewayApiWebPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiWebPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiWebPolicyBackendParam {
		return vs[0].([]ApiGatewayApiWebPolicyBackendParam)[vs[1].(int)]
	}).(ApiGatewayApiWebPolicyBackendParamOutput)
}

type ApiGatewayApiWebPolicyCondition struct {
	// The cookie parameter name.
	CookieName *string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName *string `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation *string `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName *string `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName *string `pulumi:"paramName"`
	// The type of the backend policy.
	Source *string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName *string `pulumi:"sysName"`
	// The condition type.
	Type *string `pulumi:"type"`
	// The value of the backend policy.
	Value string `pulumi:"value"`
}

// ApiGatewayApiWebPolicyConditionInput is an input type that accepts ApiGatewayApiWebPolicyConditionArgs and ApiGatewayApiWebPolicyConditionOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebPolicyConditionInput` via:
//
//	ApiGatewayApiWebPolicyConditionArgs{...}
type ApiGatewayApiWebPolicyConditionInput interface {
	pulumi.Input

	ToApiGatewayApiWebPolicyConditionOutput() ApiGatewayApiWebPolicyConditionOutput
	ToApiGatewayApiWebPolicyConditionOutputWithContext(context.Context) ApiGatewayApiWebPolicyConditionOutput
}

type ApiGatewayApiWebPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringPtrInput `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation pulumi.StringPtrInput `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName pulumi.StringPtrInput `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// The type of the backend policy.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringPtrInput `pulumi:"sysName"`
	// The condition type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the backend policy.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiGatewayApiWebPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWebPolicyCondition)(nil)).Elem()
}

func (i ApiGatewayApiWebPolicyConditionArgs) ToApiGatewayApiWebPolicyConditionOutput() ApiGatewayApiWebPolicyConditionOutput {
	return i.ToApiGatewayApiWebPolicyConditionOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebPolicyConditionArgs) ToApiGatewayApiWebPolicyConditionOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebPolicyConditionOutput)
}

// ApiGatewayApiWebPolicyConditionArrayInput is an input type that accepts ApiGatewayApiWebPolicyConditionArray and ApiGatewayApiWebPolicyConditionArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiWebPolicyConditionArrayInput` via:
//
//	ApiGatewayApiWebPolicyConditionArray{ ApiGatewayApiWebPolicyConditionArgs{...} }
type ApiGatewayApiWebPolicyConditionArrayInput interface {
	pulumi.Input

	ToApiGatewayApiWebPolicyConditionArrayOutput() ApiGatewayApiWebPolicyConditionArrayOutput
	ToApiGatewayApiWebPolicyConditionArrayOutputWithContext(context.Context) ApiGatewayApiWebPolicyConditionArrayOutput
}

type ApiGatewayApiWebPolicyConditionArray []ApiGatewayApiWebPolicyConditionInput

func (ApiGatewayApiWebPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiWebPolicyCondition)(nil)).Elem()
}

func (i ApiGatewayApiWebPolicyConditionArray) ToApiGatewayApiWebPolicyConditionArrayOutput() ApiGatewayApiWebPolicyConditionArrayOutput {
	return i.ToApiGatewayApiWebPolicyConditionArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiWebPolicyConditionArray) ToApiGatewayApiWebPolicyConditionArrayOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiWebPolicyConditionArrayOutput)
}

type ApiGatewayApiWebPolicyConditionOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayApiWebPolicyCondition)(nil)).Elem()
}

func (o ApiGatewayApiWebPolicyConditionOutput) ToApiGatewayApiWebPolicyConditionOutput() ApiGatewayApiWebPolicyConditionOutput {
	return o
}

func (o ApiGatewayApiWebPolicyConditionOutput) ToApiGatewayApiWebPolicyConditionOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o ApiGatewayApiWebPolicyConditionOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The frontend authentication parameter name.
func (o ApiGatewayApiWebPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.FrontendAuthorizerName }).(pulumi.StringPtrOutput)
}

// The location of a parameter generated after orchestration.
func (o ApiGatewayApiWebPolicyConditionOutput) MappedParamLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.MappedParamLocation }).(pulumi.StringPtrOutput)
}

// The name of a parameter generated after orchestration.
func (o ApiGatewayApiWebPolicyConditionOutput) MappedParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.MappedParamName }).(pulumi.StringPtrOutput)
}

// The request parameter name.
func (o ApiGatewayApiWebPolicyConditionOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// The type of the backend policy.
func (o ApiGatewayApiWebPolicyConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The gateway built-in parameter name.
func (o ApiGatewayApiWebPolicyConditionOutput) SysName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.SysName }).(pulumi.StringPtrOutput)
}

// The condition type.
func (o ApiGatewayApiWebPolicyConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the backend policy.
func (o ApiGatewayApiWebPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayApiWebPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type ApiGatewayApiWebPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiWebPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayApiWebPolicyCondition)(nil)).Elem()
}

func (o ApiGatewayApiWebPolicyConditionArrayOutput) ToApiGatewayApiWebPolicyConditionArrayOutput() ApiGatewayApiWebPolicyConditionArrayOutput {
	return o
}

func (o ApiGatewayApiWebPolicyConditionArrayOutput) ToApiGatewayApiWebPolicyConditionArrayOutputWithContext(ctx context.Context) ApiGatewayApiWebPolicyConditionArrayOutput {
	return o
}

func (o ApiGatewayApiWebPolicyConditionArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiWebPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayApiWebPolicyCondition {
		return vs[0].([]ApiGatewayApiWebPolicyCondition)[vs[1].(int)]
	}).(ApiGatewayApiWebPolicyConditionOutput)
}

type ApiGatewayGroupEnvironment struct {
	// The ID of the environment to which the variables belongs.
	EnvironmentId string `pulumi:"environmentId"`
	// The array of one or more environment variables.
	Variables []ApiGatewayGroupEnvironmentVariable `pulumi:"variables"`
}

// ApiGatewayGroupEnvironmentInput is an input type that accepts ApiGatewayGroupEnvironmentArgs and ApiGatewayGroupEnvironmentOutput values.
// You can construct a concrete instance of `ApiGatewayGroupEnvironmentInput` via:
//
//	ApiGatewayGroupEnvironmentArgs{...}
type ApiGatewayGroupEnvironmentInput interface {
	pulumi.Input

	ToApiGatewayGroupEnvironmentOutput() ApiGatewayGroupEnvironmentOutput
	ToApiGatewayGroupEnvironmentOutputWithContext(context.Context) ApiGatewayGroupEnvironmentOutput
}

type ApiGatewayGroupEnvironmentArgs struct {
	// The ID of the environment to which the variables belongs.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// The array of one or more environment variables.
	Variables ApiGatewayGroupEnvironmentVariableArrayInput `pulumi:"variables"`
}

func (ApiGatewayGroupEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayGroupEnvironment)(nil)).Elem()
}

func (i ApiGatewayGroupEnvironmentArgs) ToApiGatewayGroupEnvironmentOutput() ApiGatewayGroupEnvironmentOutput {
	return i.ToApiGatewayGroupEnvironmentOutputWithContext(context.Background())
}

func (i ApiGatewayGroupEnvironmentArgs) ToApiGatewayGroupEnvironmentOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupEnvironmentOutput)
}

// ApiGatewayGroupEnvironmentArrayInput is an input type that accepts ApiGatewayGroupEnvironmentArray and ApiGatewayGroupEnvironmentArrayOutput values.
// You can construct a concrete instance of `ApiGatewayGroupEnvironmentArrayInput` via:
//
//	ApiGatewayGroupEnvironmentArray{ ApiGatewayGroupEnvironmentArgs{...} }
type ApiGatewayGroupEnvironmentArrayInput interface {
	pulumi.Input

	ToApiGatewayGroupEnvironmentArrayOutput() ApiGatewayGroupEnvironmentArrayOutput
	ToApiGatewayGroupEnvironmentArrayOutputWithContext(context.Context) ApiGatewayGroupEnvironmentArrayOutput
}

type ApiGatewayGroupEnvironmentArray []ApiGatewayGroupEnvironmentInput

func (ApiGatewayGroupEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayGroupEnvironment)(nil)).Elem()
}

func (i ApiGatewayGroupEnvironmentArray) ToApiGatewayGroupEnvironmentArrayOutput() ApiGatewayGroupEnvironmentArrayOutput {
	return i.ToApiGatewayGroupEnvironmentArrayOutputWithContext(context.Background())
}

func (i ApiGatewayGroupEnvironmentArray) ToApiGatewayGroupEnvironmentArrayOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupEnvironmentArrayOutput)
}

type ApiGatewayGroupEnvironmentOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayGroupEnvironment)(nil)).Elem()
}

func (o ApiGatewayGroupEnvironmentOutput) ToApiGatewayGroupEnvironmentOutput() ApiGatewayGroupEnvironmentOutput {
	return o
}

func (o ApiGatewayGroupEnvironmentOutput) ToApiGatewayGroupEnvironmentOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentOutput {
	return o
}

// The ID of the environment to which the variables belongs.
func (o ApiGatewayGroupEnvironmentOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayGroupEnvironment) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The array of one or more environment variables.
func (o ApiGatewayGroupEnvironmentOutput) Variables() ApiGatewayGroupEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v ApiGatewayGroupEnvironment) []ApiGatewayGroupEnvironmentVariable { return v.Variables }).(ApiGatewayGroupEnvironmentVariableArrayOutput)
}

type ApiGatewayGroupEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayGroupEnvironment)(nil)).Elem()
}

func (o ApiGatewayGroupEnvironmentArrayOutput) ToApiGatewayGroupEnvironmentArrayOutput() ApiGatewayGroupEnvironmentArrayOutput {
	return o
}

func (o ApiGatewayGroupEnvironmentArrayOutput) ToApiGatewayGroupEnvironmentArrayOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentArrayOutput {
	return o
}

func (o ApiGatewayGroupEnvironmentArrayOutput) Index(i pulumi.IntInput) ApiGatewayGroupEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayGroupEnvironment {
		return vs[0].([]ApiGatewayGroupEnvironment)[vs[1].(int)]
	}).(ApiGatewayGroupEnvironmentOutput)
}

type ApiGatewayGroupEnvironmentVariable struct {
	// The ID of the variable that the group has.
	Id *string `pulumi:"id"`
	// The variable name.
	Name string `pulumi:"name"`
	// The variable value.
	Value string `pulumi:"value"`
	// schema: Deprecated; The ID of the variable that the group has.
	//
	// Deprecated: Use 'id' instead
	VariableId *string `pulumi:"variableId"`
}

// ApiGatewayGroupEnvironmentVariableInput is an input type that accepts ApiGatewayGroupEnvironmentVariableArgs and ApiGatewayGroupEnvironmentVariableOutput values.
// You can construct a concrete instance of `ApiGatewayGroupEnvironmentVariableInput` via:
//
//	ApiGatewayGroupEnvironmentVariableArgs{...}
type ApiGatewayGroupEnvironmentVariableInput interface {
	pulumi.Input

	ToApiGatewayGroupEnvironmentVariableOutput() ApiGatewayGroupEnvironmentVariableOutput
	ToApiGatewayGroupEnvironmentVariableOutputWithContext(context.Context) ApiGatewayGroupEnvironmentVariableOutput
}

type ApiGatewayGroupEnvironmentVariableArgs struct {
	// The ID of the variable that the group has.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The variable name.
	Name pulumi.StringInput `pulumi:"name"`
	// The variable value.
	Value pulumi.StringInput `pulumi:"value"`
	// schema: Deprecated; The ID of the variable that the group has.
	//
	// Deprecated: Use 'id' instead
	VariableId pulumi.StringPtrInput `pulumi:"variableId"`
}

func (ApiGatewayGroupEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayGroupEnvironmentVariable)(nil)).Elem()
}

func (i ApiGatewayGroupEnvironmentVariableArgs) ToApiGatewayGroupEnvironmentVariableOutput() ApiGatewayGroupEnvironmentVariableOutput {
	return i.ToApiGatewayGroupEnvironmentVariableOutputWithContext(context.Background())
}

func (i ApiGatewayGroupEnvironmentVariableArgs) ToApiGatewayGroupEnvironmentVariableOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupEnvironmentVariableOutput)
}

// ApiGatewayGroupEnvironmentVariableArrayInput is an input type that accepts ApiGatewayGroupEnvironmentVariableArray and ApiGatewayGroupEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ApiGatewayGroupEnvironmentVariableArrayInput` via:
//
//	ApiGatewayGroupEnvironmentVariableArray{ ApiGatewayGroupEnvironmentVariableArgs{...} }
type ApiGatewayGroupEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToApiGatewayGroupEnvironmentVariableArrayOutput() ApiGatewayGroupEnvironmentVariableArrayOutput
	ToApiGatewayGroupEnvironmentVariableArrayOutputWithContext(context.Context) ApiGatewayGroupEnvironmentVariableArrayOutput
}

type ApiGatewayGroupEnvironmentVariableArray []ApiGatewayGroupEnvironmentVariableInput

func (ApiGatewayGroupEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayGroupEnvironmentVariable)(nil)).Elem()
}

func (i ApiGatewayGroupEnvironmentVariableArray) ToApiGatewayGroupEnvironmentVariableArrayOutput() ApiGatewayGroupEnvironmentVariableArrayOutput {
	return i.ToApiGatewayGroupEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ApiGatewayGroupEnvironmentVariableArray) ToApiGatewayGroupEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupEnvironmentVariableArrayOutput)
}

type ApiGatewayGroupEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayGroupEnvironmentVariable)(nil)).Elem()
}

func (o ApiGatewayGroupEnvironmentVariableOutput) ToApiGatewayGroupEnvironmentVariableOutput() ApiGatewayGroupEnvironmentVariableOutput {
	return o
}

func (o ApiGatewayGroupEnvironmentVariableOutput) ToApiGatewayGroupEnvironmentVariableOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentVariableOutput {
	return o
}

// The ID of the variable that the group has.
func (o ApiGatewayGroupEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayGroupEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The variable name.
func (o ApiGatewayGroupEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayGroupEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// The variable value.
func (o ApiGatewayGroupEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayGroupEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

// schema: Deprecated; The ID of the variable that the group has.
//
// Deprecated: Use 'id' instead
func (o ApiGatewayGroupEnvironmentVariableOutput) VariableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayGroupEnvironmentVariable) *string { return v.VariableId }).(pulumi.StringPtrOutput)
}

type ApiGatewayGroupEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayGroupEnvironmentVariable)(nil)).Elem()
}

func (o ApiGatewayGroupEnvironmentVariableArrayOutput) ToApiGatewayGroupEnvironmentVariableArrayOutput() ApiGatewayGroupEnvironmentVariableArrayOutput {
	return o
}

func (o ApiGatewayGroupEnvironmentVariableArrayOutput) ToApiGatewayGroupEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApiGatewayGroupEnvironmentVariableArrayOutput {
	return o
}

func (o ApiGatewayGroupEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ApiGatewayGroupEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayGroupEnvironmentVariable {
		return vs[0].([]ApiGatewayGroupEnvironmentVariable)[vs[1].(int)]
	}).(ApiGatewayGroupEnvironmentVariableOutput)
}

type ApiGatewayGroupUrlDomain struct {
	IsHttpRedirectToHttps *bool   `pulumi:"isHttpRedirectToHttps"`
	MinSslVersion         *string `pulumi:"minSslVersion"`
	Name                  string  `pulumi:"name"`
}

// ApiGatewayGroupUrlDomainInput is an input type that accepts ApiGatewayGroupUrlDomainArgs and ApiGatewayGroupUrlDomainOutput values.
// You can construct a concrete instance of `ApiGatewayGroupUrlDomainInput` via:
//
//	ApiGatewayGroupUrlDomainArgs{...}
type ApiGatewayGroupUrlDomainInput interface {
	pulumi.Input

	ToApiGatewayGroupUrlDomainOutput() ApiGatewayGroupUrlDomainOutput
	ToApiGatewayGroupUrlDomainOutputWithContext(context.Context) ApiGatewayGroupUrlDomainOutput
}

type ApiGatewayGroupUrlDomainArgs struct {
	IsHttpRedirectToHttps pulumi.BoolPtrInput   `pulumi:"isHttpRedirectToHttps"`
	MinSslVersion         pulumi.StringPtrInput `pulumi:"minSslVersion"`
	Name                  pulumi.StringInput    `pulumi:"name"`
}

func (ApiGatewayGroupUrlDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayGroupUrlDomain)(nil)).Elem()
}

func (i ApiGatewayGroupUrlDomainArgs) ToApiGatewayGroupUrlDomainOutput() ApiGatewayGroupUrlDomainOutput {
	return i.ToApiGatewayGroupUrlDomainOutputWithContext(context.Background())
}

func (i ApiGatewayGroupUrlDomainArgs) ToApiGatewayGroupUrlDomainOutputWithContext(ctx context.Context) ApiGatewayGroupUrlDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupUrlDomainOutput)
}

// ApiGatewayGroupUrlDomainArrayInput is an input type that accepts ApiGatewayGroupUrlDomainArray and ApiGatewayGroupUrlDomainArrayOutput values.
// You can construct a concrete instance of `ApiGatewayGroupUrlDomainArrayInput` via:
//
//	ApiGatewayGroupUrlDomainArray{ ApiGatewayGroupUrlDomainArgs{...} }
type ApiGatewayGroupUrlDomainArrayInput interface {
	pulumi.Input

	ToApiGatewayGroupUrlDomainArrayOutput() ApiGatewayGroupUrlDomainArrayOutput
	ToApiGatewayGroupUrlDomainArrayOutputWithContext(context.Context) ApiGatewayGroupUrlDomainArrayOutput
}

type ApiGatewayGroupUrlDomainArray []ApiGatewayGroupUrlDomainInput

func (ApiGatewayGroupUrlDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayGroupUrlDomain)(nil)).Elem()
}

func (i ApiGatewayGroupUrlDomainArray) ToApiGatewayGroupUrlDomainArrayOutput() ApiGatewayGroupUrlDomainArrayOutput {
	return i.ToApiGatewayGroupUrlDomainArrayOutputWithContext(context.Background())
}

func (i ApiGatewayGroupUrlDomainArray) ToApiGatewayGroupUrlDomainArrayOutputWithContext(ctx context.Context) ApiGatewayGroupUrlDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGroupUrlDomainArrayOutput)
}

type ApiGatewayGroupUrlDomainOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupUrlDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiGatewayGroupUrlDomain)(nil)).Elem()
}

func (o ApiGatewayGroupUrlDomainOutput) ToApiGatewayGroupUrlDomainOutput() ApiGatewayGroupUrlDomainOutput {
	return o
}

func (o ApiGatewayGroupUrlDomainOutput) ToApiGatewayGroupUrlDomainOutputWithContext(ctx context.Context) ApiGatewayGroupUrlDomainOutput {
	return o
}

func (o ApiGatewayGroupUrlDomainOutput) IsHttpRedirectToHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiGatewayGroupUrlDomain) *bool { return v.IsHttpRedirectToHttps }).(pulumi.BoolPtrOutput)
}

func (o ApiGatewayGroupUrlDomainOutput) MinSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiGatewayGroupUrlDomain) *string { return v.MinSslVersion }).(pulumi.StringPtrOutput)
}

func (o ApiGatewayGroupUrlDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiGatewayGroupUrlDomain) string { return v.Name }).(pulumi.StringOutput)
}

type ApiGatewayGroupUrlDomainArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayGroupUrlDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiGatewayGroupUrlDomain)(nil)).Elem()
}

func (o ApiGatewayGroupUrlDomainArrayOutput) ToApiGatewayGroupUrlDomainArrayOutput() ApiGatewayGroupUrlDomainArrayOutput {
	return o
}

func (o ApiGatewayGroupUrlDomainArrayOutput) ToApiGatewayGroupUrlDomainArrayOutputWithContext(ctx context.Context) ApiGatewayGroupUrlDomainArrayOutput {
	return o
}

func (o ApiGatewayGroupUrlDomainArrayOutput) Index(i pulumi.IntInput) ApiGatewayGroupUrlDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiGatewayGroupUrlDomain {
		return vs[0].([]ApiGatewayGroupUrlDomain)[vs[1].(int)]
	}).(ApiGatewayGroupUrlDomainOutput)
}

type ApigApiBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApigApiBackendParamInput is an input type that accepts ApigApiBackendParamArgs and ApigApiBackendParamOutput values.
// You can construct a concrete instance of `ApigApiBackendParamInput` via:
//
//	ApigApiBackendParamArgs{...}
type ApigApiBackendParamInput interface {
	pulumi.Input

	ToApigApiBackendParamOutput() ApigApiBackendParamOutput
	ToApigApiBackendParamOutputWithContext(context.Context) ApigApiBackendParamOutput
}

type ApigApiBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigApiBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiBackendParam)(nil)).Elem()
}

func (i ApigApiBackendParamArgs) ToApigApiBackendParamOutput() ApigApiBackendParamOutput {
	return i.ToApigApiBackendParamOutputWithContext(context.Background())
}

func (i ApigApiBackendParamArgs) ToApigApiBackendParamOutputWithContext(ctx context.Context) ApigApiBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiBackendParamOutput)
}

// ApigApiBackendParamArrayInput is an input type that accepts ApigApiBackendParamArray and ApigApiBackendParamArrayOutput values.
// You can construct a concrete instance of `ApigApiBackendParamArrayInput` via:
//
//	ApigApiBackendParamArray{ ApigApiBackendParamArgs{...} }
type ApigApiBackendParamArrayInput interface {
	pulumi.Input

	ToApigApiBackendParamArrayOutput() ApigApiBackendParamArrayOutput
	ToApigApiBackendParamArrayOutputWithContext(context.Context) ApigApiBackendParamArrayOutput
}

type ApigApiBackendParamArray []ApigApiBackendParamInput

func (ApigApiBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiBackendParam)(nil)).Elem()
}

func (i ApigApiBackendParamArray) ToApigApiBackendParamArrayOutput() ApigApiBackendParamArrayOutput {
	return i.ToApigApiBackendParamArrayOutputWithContext(context.Background())
}

func (i ApigApiBackendParamArray) ToApigApiBackendParamArrayOutputWithContext(ctx context.Context) ApigApiBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiBackendParamArrayOutput)
}

type ApigApiBackendParamOutput struct{ *pulumi.OutputState }

func (ApigApiBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiBackendParam)(nil)).Elem()
}

func (o ApigApiBackendParamOutput) ToApigApiBackendParamOutput() ApigApiBackendParamOutput {
	return o
}

func (o ApigApiBackendParamOutput) ToApigApiBackendParamOutputWithContext(ctx context.Context) ApigApiBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApigApiBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApigApiBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApigApiBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApigApiBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApigApiBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApigApiBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApigApiBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApigApiBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiBackendParam)(nil)).Elem()
}

func (o ApigApiBackendParamArrayOutput) ToApigApiBackendParamArrayOutput() ApigApiBackendParamArrayOutput {
	return o
}

func (o ApigApiBackendParamArrayOutput) ToApigApiBackendParamArrayOutputWithContext(ctx context.Context) ApigApiBackendParamArrayOutput {
	return o
}

func (o ApigApiBackendParamArrayOutput) Index(i pulumi.IntInput) ApigApiBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiBackendParam {
		return vs[0].([]ApigApiBackendParam)[vs[1].(int)]
	}).(ApigApiBackendParamOutput)
}

type ApigApiFuncGraph struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn *string `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The invocation type.
	InvocationType *string `pulumi:"invocationType"`
	// The network architecture (framework) type of the FunctionGraph function.
	NetworkType *string `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version *string `pulumi:"version"`
}

// ApigApiFuncGraphInput is an input type that accepts ApigApiFuncGraphArgs and ApigApiFuncGraphOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphInput` via:
//
//	ApigApiFuncGraphArgs{...}
type ApigApiFuncGraphInput interface {
	pulumi.Input

	ToApigApiFuncGraphOutput() ApigApiFuncGraphOutput
	ToApigApiFuncGraphOutputWithContext(context.Context) ApigApiFuncGraphOutput
}

type ApigApiFuncGraphArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn pulumi.StringPtrInput `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn pulumi.StringInput `pulumi:"functionUrn"`
	// The invocation type.
	InvocationType pulumi.StringPtrInput `pulumi:"invocationType"`
	// The network architecture (framework) type of the FunctionGraph function.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApigApiFuncGraphArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraph)(nil)).Elem()
}

func (i ApigApiFuncGraphArgs) ToApigApiFuncGraphOutput() ApigApiFuncGraphOutput {
	return i.ToApigApiFuncGraphOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphArgs) ToApigApiFuncGraphOutputWithContext(ctx context.Context) ApigApiFuncGraphOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphOutput)
}

func (i ApigApiFuncGraphArgs) ToApigApiFuncGraphPtrOutput() ApigApiFuncGraphPtrOutput {
	return i.ToApigApiFuncGraphPtrOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphArgs) ToApigApiFuncGraphPtrOutputWithContext(ctx context.Context) ApigApiFuncGraphPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphOutput).ToApigApiFuncGraphPtrOutputWithContext(ctx)
}

// ApigApiFuncGraphPtrInput is an input type that accepts ApigApiFuncGraphArgs, ApigApiFuncGraphPtr and ApigApiFuncGraphPtrOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphPtrInput` via:
//
//	        ApigApiFuncGraphArgs{...}
//
//	or:
//
//	        nil
type ApigApiFuncGraphPtrInput interface {
	pulumi.Input

	ToApigApiFuncGraphPtrOutput() ApigApiFuncGraphPtrOutput
	ToApigApiFuncGraphPtrOutputWithContext(context.Context) ApigApiFuncGraphPtrOutput
}

type apigApiFuncGraphPtrType ApigApiFuncGraphArgs

func ApigApiFuncGraphPtr(v *ApigApiFuncGraphArgs) ApigApiFuncGraphPtrInput {
	return (*apigApiFuncGraphPtrType)(v)
}

func (*apigApiFuncGraphPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiFuncGraph)(nil)).Elem()
}

func (i *apigApiFuncGraphPtrType) ToApigApiFuncGraphPtrOutput() ApigApiFuncGraphPtrOutput {
	return i.ToApigApiFuncGraphPtrOutputWithContext(context.Background())
}

func (i *apigApiFuncGraphPtrType) ToApigApiFuncGraphPtrOutputWithContext(ctx context.Context) ApigApiFuncGraphPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphPtrOutput)
}

type ApigApiFuncGraphOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraph)(nil)).Elem()
}

func (o ApigApiFuncGraphOutput) ToApigApiFuncGraphOutput() ApigApiFuncGraphOutput {
	return o
}

func (o ApigApiFuncGraphOutput) ToApigApiFuncGraphOutputWithContext(ctx context.Context) ApigApiFuncGraphOutput {
	return o
}

func (o ApigApiFuncGraphOutput) ToApigApiFuncGraphPtrOutput() ApigApiFuncGraphPtrOutput {
	return o.ToApigApiFuncGraphPtrOutputWithContext(context.Background())
}

func (o ApigApiFuncGraphOutput) ToApigApiFuncGraphPtrOutputWithContext(ctx context.Context) ApigApiFuncGraphPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApigApiFuncGraph) *ApigApiFuncGraph {
		return &v
	}).(ApigApiFuncGraphPtrOutput)
}

// The ID of the backend custom authorization.
func (o ApigApiFuncGraphOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The alias URN of the FunctionGraph function.
func (o ApigApiFuncGraphOutput) FunctionAliasUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) *string { return v.FunctionAliasUrn }).(pulumi.StringPtrOutput)
}

// The URN of the FunctionGraph function.
func (o ApigApiFuncGraphOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) string { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The invocation type.
func (o ApigApiFuncGraphOutput) InvocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) *string { return v.InvocationType }).(pulumi.StringPtrOutput)
}

// The network architecture (framework) type of the FunctionGraph function.
func (o ApigApiFuncGraphOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// The request protocol of the FunctionGraph function.
func (o ApigApiFuncGraphOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApigApiFuncGraphOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The version of the FunctionGraph function.
func (o ApigApiFuncGraphOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraph) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApigApiFuncGraphPtrOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiFuncGraph)(nil)).Elem()
}

func (o ApigApiFuncGraphPtrOutput) ToApigApiFuncGraphPtrOutput() ApigApiFuncGraphPtrOutput {
	return o
}

func (o ApigApiFuncGraphPtrOutput) ToApigApiFuncGraphPtrOutputWithContext(ctx context.Context) ApigApiFuncGraphPtrOutput {
	return o
}

func (o ApigApiFuncGraphPtrOutput) Elem() ApigApiFuncGraphOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) ApigApiFuncGraph {
		if v != nil {
			return *v
		}
		var ret ApigApiFuncGraph
		return ret
	}).(ApigApiFuncGraphOutput)
}

// The ID of the backend custom authorization.
func (o ApigApiFuncGraphPtrOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerId
	}).(pulumi.StringPtrOutput)
}

// The alias URN of the FunctionGraph function.
func (o ApigApiFuncGraphPtrOutput) FunctionAliasUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.FunctionAliasUrn
	}).(pulumi.StringPtrOutput)
}

// The URN of the FunctionGraph function.
func (o ApigApiFuncGraphPtrOutput) FunctionUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionUrn
	}).(pulumi.StringPtrOutput)
}

// The invocation type.
func (o ApigApiFuncGraphPtrOutput) InvocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.InvocationType
	}).(pulumi.StringPtrOutput)
}

// The network architecture (framework) type of the FunctionGraph function.
func (o ApigApiFuncGraphPtrOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.NetworkType
	}).(pulumi.StringPtrOutput)
}

// The request protocol of the FunctionGraph function.
func (o ApigApiFuncGraphPtrOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.RequestProtocol
	}).(pulumi.StringPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApigApiFuncGraphPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The version of the FunctionGraph function.
func (o ApigApiFuncGraphPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiFuncGraph) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ApigApiFuncGraphPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configaiton list of the backend parameters.
	BackendParams []ApigApiFuncGraphPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []ApigApiFuncGraphPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode *string `pulumi:"effectiveMode"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn *string `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The invocation mode of the FunctionGraph function.
	InvocationMode *string `pulumi:"invocationMode"`
	// The invocation mode of the FunctionGraph function.
	InvocationType *string `pulumi:"invocationType"`
	// The name of the backend policy.
	Name string `pulumi:"name"`
	// The network (framework) type of the FunctionGraph function.
	NetworkType *string `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version *string `pulumi:"version"`
}

// ApigApiFuncGraphPolicyInput is an input type that accepts ApigApiFuncGraphPolicyArgs and ApigApiFuncGraphPolicyOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphPolicyInput` via:
//
//	ApigApiFuncGraphPolicyArgs{...}
type ApigApiFuncGraphPolicyInput interface {
	pulumi.Input

	ToApigApiFuncGraphPolicyOutput() ApigApiFuncGraphPolicyOutput
	ToApigApiFuncGraphPolicyOutputWithContext(context.Context) ApigApiFuncGraphPolicyOutput
}

type ApigApiFuncGraphPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The configaiton list of the backend parameters.
	BackendParams ApigApiFuncGraphPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions ApigApiFuncGraphPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringPtrInput `pulumi:"effectiveMode"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn pulumi.StringPtrInput `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn pulumi.StringInput `pulumi:"functionUrn"`
	// The invocation mode of the FunctionGraph function.
	InvocationMode pulumi.StringPtrInput `pulumi:"invocationMode"`
	// The invocation mode of the FunctionGraph function.
	InvocationType pulumi.StringPtrInput `pulumi:"invocationType"`
	// The name of the backend policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The network (framework) type of the FunctionGraph function.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApigApiFuncGraphPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraphPolicy)(nil)).Elem()
}

func (i ApigApiFuncGraphPolicyArgs) ToApigApiFuncGraphPolicyOutput() ApigApiFuncGraphPolicyOutput {
	return i.ToApigApiFuncGraphPolicyOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphPolicyArgs) ToApigApiFuncGraphPolicyOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphPolicyOutput)
}

// ApigApiFuncGraphPolicyArrayInput is an input type that accepts ApigApiFuncGraphPolicyArray and ApigApiFuncGraphPolicyArrayOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphPolicyArrayInput` via:
//
//	ApigApiFuncGraphPolicyArray{ ApigApiFuncGraphPolicyArgs{...} }
type ApigApiFuncGraphPolicyArrayInput interface {
	pulumi.Input

	ToApigApiFuncGraphPolicyArrayOutput() ApigApiFuncGraphPolicyArrayOutput
	ToApigApiFuncGraphPolicyArrayOutputWithContext(context.Context) ApigApiFuncGraphPolicyArrayOutput
}

type ApigApiFuncGraphPolicyArray []ApigApiFuncGraphPolicyInput

func (ApigApiFuncGraphPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiFuncGraphPolicy)(nil)).Elem()
}

func (i ApigApiFuncGraphPolicyArray) ToApigApiFuncGraphPolicyArrayOutput() ApigApiFuncGraphPolicyArrayOutput {
	return i.ToApigApiFuncGraphPolicyArrayOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphPolicyArray) ToApigApiFuncGraphPolicyArrayOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphPolicyArrayOutput)
}

type ApigApiFuncGraphPolicyOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraphPolicy)(nil)).Elem()
}

func (o ApigApiFuncGraphPolicyOutput) ToApigApiFuncGraphPolicyOutput() ApigApiFuncGraphPolicyOutput {
	return o
}

func (o ApigApiFuncGraphPolicyOutput) ToApigApiFuncGraphPolicyOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o ApigApiFuncGraphPolicyOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The configaiton list of the backend parameters.
func (o ApigApiFuncGraphPolicyOutput) BackendParams() ApigApiFuncGraphPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) []ApigApiFuncGraphPolicyBackendParam { return v.BackendParams }).(ApigApiFuncGraphPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o ApigApiFuncGraphPolicyOutput) Conditions() ApigApiFuncGraphPolicyConditionArrayOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) []ApigApiFuncGraphPolicyCondition { return v.Conditions }).(ApigApiFuncGraphPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o ApigApiFuncGraphPolicyOutput) EffectiveMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.EffectiveMode }).(pulumi.StringPtrOutput)
}

// The alias URN of the FunctionGraph function.
func (o ApigApiFuncGraphPolicyOutput) FunctionAliasUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.FunctionAliasUrn }).(pulumi.StringPtrOutput)
}

// The URN of the FunctionGraph function.
func (o ApigApiFuncGraphPolicyOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) string { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The invocation mode of the FunctionGraph function.
func (o ApigApiFuncGraphPolicyOutput) InvocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.InvocationMode }).(pulumi.StringPtrOutput)
}

// The invocation mode of the FunctionGraph function.
func (o ApigApiFuncGraphPolicyOutput) InvocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.InvocationType }).(pulumi.StringPtrOutput)
}

// The name of the backend policy.
func (o ApigApiFuncGraphPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The network (framework) type of the FunctionGraph function.
func (o ApigApiFuncGraphPolicyOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// The request protocol of the FunctionGraph function.
func (o ApigApiFuncGraphPolicyOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApigApiFuncGraphPolicyOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The version of the FunctionGraph function.
func (o ApigApiFuncGraphPolicyOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicy) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApigApiFuncGraphPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiFuncGraphPolicy)(nil)).Elem()
}

func (o ApigApiFuncGraphPolicyArrayOutput) ToApigApiFuncGraphPolicyArrayOutput() ApigApiFuncGraphPolicyArrayOutput {
	return o
}

func (o ApigApiFuncGraphPolicyArrayOutput) ToApigApiFuncGraphPolicyArrayOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyArrayOutput {
	return o
}

func (o ApigApiFuncGraphPolicyArrayOutput) Index(i pulumi.IntInput) ApigApiFuncGraphPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiFuncGraphPolicy {
		return vs[0].([]ApigApiFuncGraphPolicy)[vs[1].(int)]
	}).(ApigApiFuncGraphPolicyOutput)
}

type ApigApiFuncGraphPolicyBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApigApiFuncGraphPolicyBackendParamInput is an input type that accepts ApigApiFuncGraphPolicyBackendParamArgs and ApigApiFuncGraphPolicyBackendParamOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphPolicyBackendParamInput` via:
//
//	ApigApiFuncGraphPolicyBackendParamArgs{...}
type ApigApiFuncGraphPolicyBackendParamInput interface {
	pulumi.Input

	ToApigApiFuncGraphPolicyBackendParamOutput() ApigApiFuncGraphPolicyBackendParamOutput
	ToApigApiFuncGraphPolicyBackendParamOutputWithContext(context.Context) ApigApiFuncGraphPolicyBackendParamOutput
}

type ApigApiFuncGraphPolicyBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigApiFuncGraphPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (i ApigApiFuncGraphPolicyBackendParamArgs) ToApigApiFuncGraphPolicyBackendParamOutput() ApigApiFuncGraphPolicyBackendParamOutput {
	return i.ToApigApiFuncGraphPolicyBackendParamOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphPolicyBackendParamArgs) ToApigApiFuncGraphPolicyBackendParamOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphPolicyBackendParamOutput)
}

// ApigApiFuncGraphPolicyBackendParamArrayInput is an input type that accepts ApigApiFuncGraphPolicyBackendParamArray and ApigApiFuncGraphPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphPolicyBackendParamArrayInput` via:
//
//	ApigApiFuncGraphPolicyBackendParamArray{ ApigApiFuncGraphPolicyBackendParamArgs{...} }
type ApigApiFuncGraphPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToApigApiFuncGraphPolicyBackendParamArrayOutput() ApigApiFuncGraphPolicyBackendParamArrayOutput
	ToApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(context.Context) ApigApiFuncGraphPolicyBackendParamArrayOutput
}

type ApigApiFuncGraphPolicyBackendParamArray []ApigApiFuncGraphPolicyBackendParamInput

func (ApigApiFuncGraphPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (i ApigApiFuncGraphPolicyBackendParamArray) ToApigApiFuncGraphPolicyBackendParamArrayOutput() ApigApiFuncGraphPolicyBackendParamArrayOutput {
	return i.ToApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphPolicyBackendParamArray) ToApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphPolicyBackendParamArrayOutput)
}

type ApigApiFuncGraphPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (o ApigApiFuncGraphPolicyBackendParamOutput) ToApigApiFuncGraphPolicyBackendParamOutput() ApigApiFuncGraphPolicyBackendParamOutput {
	return o
}

func (o ApigApiFuncGraphPolicyBackendParamOutput) ToApigApiFuncGraphPolicyBackendParamOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApigApiFuncGraphPolicyBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApigApiFuncGraphPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApigApiFuncGraphPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApigApiFuncGraphPolicyBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApigApiFuncGraphPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApigApiFuncGraphPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApigApiFuncGraphPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (o ApigApiFuncGraphPolicyBackendParamArrayOutput) ToApigApiFuncGraphPolicyBackendParamArrayOutput() ApigApiFuncGraphPolicyBackendParamArrayOutput {
	return o
}

func (o ApigApiFuncGraphPolicyBackendParamArrayOutput) ToApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyBackendParamArrayOutput {
	return o
}

func (o ApigApiFuncGraphPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) ApigApiFuncGraphPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiFuncGraphPolicyBackendParam {
		return vs[0].([]ApigApiFuncGraphPolicyBackendParam)[vs[1].(int)]
	}).(ApigApiFuncGraphPolicyBackendParamOutput)
}

type ApigApiFuncGraphPolicyCondition struct {
	// The cookie parameter name.
	CookieName *string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName *string `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation *string `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName *string `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName *string `pulumi:"paramName"`
	// The type of the backend policy.
	Source *string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName *string `pulumi:"sysName"`
	// The condition type.
	Type *string `pulumi:"type"`
	// The value of the backend policy.
	Value string `pulumi:"value"`
}

// ApigApiFuncGraphPolicyConditionInput is an input type that accepts ApigApiFuncGraphPolicyConditionArgs and ApigApiFuncGraphPolicyConditionOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphPolicyConditionInput` via:
//
//	ApigApiFuncGraphPolicyConditionArgs{...}
type ApigApiFuncGraphPolicyConditionInput interface {
	pulumi.Input

	ToApigApiFuncGraphPolicyConditionOutput() ApigApiFuncGraphPolicyConditionOutput
	ToApigApiFuncGraphPolicyConditionOutputWithContext(context.Context) ApigApiFuncGraphPolicyConditionOutput
}

type ApigApiFuncGraphPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringPtrInput `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation pulumi.StringPtrInput `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName pulumi.StringPtrInput `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// The type of the backend policy.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringPtrInput `pulumi:"sysName"`
	// The condition type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the backend policy.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigApiFuncGraphPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (i ApigApiFuncGraphPolicyConditionArgs) ToApigApiFuncGraphPolicyConditionOutput() ApigApiFuncGraphPolicyConditionOutput {
	return i.ToApigApiFuncGraphPolicyConditionOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphPolicyConditionArgs) ToApigApiFuncGraphPolicyConditionOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphPolicyConditionOutput)
}

// ApigApiFuncGraphPolicyConditionArrayInput is an input type that accepts ApigApiFuncGraphPolicyConditionArray and ApigApiFuncGraphPolicyConditionArrayOutput values.
// You can construct a concrete instance of `ApigApiFuncGraphPolicyConditionArrayInput` via:
//
//	ApigApiFuncGraphPolicyConditionArray{ ApigApiFuncGraphPolicyConditionArgs{...} }
type ApigApiFuncGraphPolicyConditionArrayInput interface {
	pulumi.Input

	ToApigApiFuncGraphPolicyConditionArrayOutput() ApigApiFuncGraphPolicyConditionArrayOutput
	ToApigApiFuncGraphPolicyConditionArrayOutputWithContext(context.Context) ApigApiFuncGraphPolicyConditionArrayOutput
}

type ApigApiFuncGraphPolicyConditionArray []ApigApiFuncGraphPolicyConditionInput

func (ApigApiFuncGraphPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (i ApigApiFuncGraphPolicyConditionArray) ToApigApiFuncGraphPolicyConditionArrayOutput() ApigApiFuncGraphPolicyConditionArrayOutput {
	return i.ToApigApiFuncGraphPolicyConditionArrayOutputWithContext(context.Background())
}

func (i ApigApiFuncGraphPolicyConditionArray) ToApigApiFuncGraphPolicyConditionArrayOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiFuncGraphPolicyConditionArrayOutput)
}

type ApigApiFuncGraphPolicyConditionOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (o ApigApiFuncGraphPolicyConditionOutput) ToApigApiFuncGraphPolicyConditionOutput() ApigApiFuncGraphPolicyConditionOutput {
	return o
}

func (o ApigApiFuncGraphPolicyConditionOutput) ToApigApiFuncGraphPolicyConditionOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o ApigApiFuncGraphPolicyConditionOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The frontend authentication parameter name.
func (o ApigApiFuncGraphPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.FrontendAuthorizerName }).(pulumi.StringPtrOutput)
}

// The location of a parameter generated after orchestration.
func (o ApigApiFuncGraphPolicyConditionOutput) MappedParamLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.MappedParamLocation }).(pulumi.StringPtrOutput)
}

// The name of a parameter generated after orchestration.
func (o ApigApiFuncGraphPolicyConditionOutput) MappedParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.MappedParamName }).(pulumi.StringPtrOutput)
}

// The request parameter name.
func (o ApigApiFuncGraphPolicyConditionOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// The type of the backend policy.
func (o ApigApiFuncGraphPolicyConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The gateway built-in parameter name.
func (o ApigApiFuncGraphPolicyConditionOutput) SysName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.SysName }).(pulumi.StringPtrOutput)
}

// The condition type.
func (o ApigApiFuncGraphPolicyConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the backend policy.
func (o ApigApiFuncGraphPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiFuncGraphPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type ApigApiFuncGraphPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (ApigApiFuncGraphPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (o ApigApiFuncGraphPolicyConditionArrayOutput) ToApigApiFuncGraphPolicyConditionArrayOutput() ApigApiFuncGraphPolicyConditionArrayOutput {
	return o
}

func (o ApigApiFuncGraphPolicyConditionArrayOutput) ToApigApiFuncGraphPolicyConditionArrayOutputWithContext(ctx context.Context) ApigApiFuncGraphPolicyConditionArrayOutput {
	return o
}

func (o ApigApiFuncGraphPolicyConditionArrayOutput) Index(i pulumi.IntInput) ApigApiFuncGraphPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiFuncGraphPolicyCondition {
		return vs[0].([]ApigApiFuncGraphPolicyCondition)[vs[1].(int)]
	}).(ApigApiFuncGraphPolicyConditionOutput)
}

type ApigApiMock struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The response content of the mock.
	Response *string `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode *int `pulumi:"statusCode"`
}

// ApigApiMockInput is an input type that accepts ApigApiMockArgs and ApigApiMockOutput values.
// You can construct a concrete instance of `ApigApiMockInput` via:
//
//	ApigApiMockArgs{...}
type ApigApiMockInput interface {
	pulumi.Input

	ToApigApiMockOutput() ApigApiMockOutput
	ToApigApiMockOutputWithContext(context.Context) ApigApiMockOutput
}

type ApigApiMockArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The response content of the mock.
	Response pulumi.StringPtrInput `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
}

func (ApigApiMockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMock)(nil)).Elem()
}

func (i ApigApiMockArgs) ToApigApiMockOutput() ApigApiMockOutput {
	return i.ToApigApiMockOutputWithContext(context.Background())
}

func (i ApigApiMockArgs) ToApigApiMockOutputWithContext(ctx context.Context) ApigApiMockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockOutput)
}

func (i ApigApiMockArgs) ToApigApiMockPtrOutput() ApigApiMockPtrOutput {
	return i.ToApigApiMockPtrOutputWithContext(context.Background())
}

func (i ApigApiMockArgs) ToApigApiMockPtrOutputWithContext(ctx context.Context) ApigApiMockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockOutput).ToApigApiMockPtrOutputWithContext(ctx)
}

// ApigApiMockPtrInput is an input type that accepts ApigApiMockArgs, ApigApiMockPtr and ApigApiMockPtrOutput values.
// You can construct a concrete instance of `ApigApiMockPtrInput` via:
//
//	        ApigApiMockArgs{...}
//
//	or:
//
//	        nil
type ApigApiMockPtrInput interface {
	pulumi.Input

	ToApigApiMockPtrOutput() ApigApiMockPtrOutput
	ToApigApiMockPtrOutputWithContext(context.Context) ApigApiMockPtrOutput
}

type apigApiMockPtrType ApigApiMockArgs

func ApigApiMockPtr(v *ApigApiMockArgs) ApigApiMockPtrInput {
	return (*apigApiMockPtrType)(v)
}

func (*apigApiMockPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiMock)(nil)).Elem()
}

func (i *apigApiMockPtrType) ToApigApiMockPtrOutput() ApigApiMockPtrOutput {
	return i.ToApigApiMockPtrOutputWithContext(context.Background())
}

func (i *apigApiMockPtrType) ToApigApiMockPtrOutputWithContext(ctx context.Context) ApigApiMockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockPtrOutput)
}

type ApigApiMockOutput struct{ *pulumi.OutputState }

func (ApigApiMockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMock)(nil)).Elem()
}

func (o ApigApiMockOutput) ToApigApiMockOutput() ApigApiMockOutput {
	return o
}

func (o ApigApiMockOutput) ToApigApiMockOutputWithContext(ctx context.Context) ApigApiMockOutput {
	return o
}

func (o ApigApiMockOutput) ToApigApiMockPtrOutput() ApigApiMockPtrOutput {
	return o.ToApigApiMockPtrOutputWithContext(context.Background())
}

func (o ApigApiMockOutput) ToApigApiMockPtrOutputWithContext(ctx context.Context) ApigApiMockPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApigApiMock) *ApigApiMock {
		return &v
	}).(ApigApiMockPtrOutput)
}

// The ID of the backend custom authorization.
func (o ApigApiMockOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMock) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The response content of the mock.
func (o ApigApiMockOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMock) *string { return v.Response }).(pulumi.StringPtrOutput)
}

// The custom status code of the mock response.
func (o ApigApiMockOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiMock) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type ApigApiMockPtrOutput struct{ *pulumi.OutputState }

func (ApigApiMockPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiMock)(nil)).Elem()
}

func (o ApigApiMockPtrOutput) ToApigApiMockPtrOutput() ApigApiMockPtrOutput {
	return o
}

func (o ApigApiMockPtrOutput) ToApigApiMockPtrOutputWithContext(ctx context.Context) ApigApiMockPtrOutput {
	return o
}

func (o ApigApiMockPtrOutput) Elem() ApigApiMockOutput {
	return o.ApplyT(func(v *ApigApiMock) ApigApiMock {
		if v != nil {
			return *v
		}
		var ret ApigApiMock
		return ret
	}).(ApigApiMockOutput)
}

// The ID of the backend custom authorization.
func (o ApigApiMockPtrOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiMock) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerId
	}).(pulumi.StringPtrOutput)
}

// The response content of the mock.
func (o ApigApiMockPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiMock) *string {
		if v == nil {
			return nil
		}
		return v.Response
	}).(pulumi.StringPtrOutput)
}

// The custom status code of the mock response.
func (o ApigApiMockPtrOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigApiMock) *int {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.IntPtrOutput)
}

type ApigApiMockPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configuration list of backend parameters.
	BackendParams []ApigApiMockPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []ApigApiMockPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode *string `pulumi:"effectiveMode"`
	// The backend policy name.
	Name string `pulumi:"name"`
	// The response content of the mock.
	Response *string `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode *int `pulumi:"statusCode"`
}

// ApigApiMockPolicyInput is an input type that accepts ApigApiMockPolicyArgs and ApigApiMockPolicyOutput values.
// You can construct a concrete instance of `ApigApiMockPolicyInput` via:
//
//	ApigApiMockPolicyArgs{...}
type ApigApiMockPolicyInput interface {
	pulumi.Input

	ToApigApiMockPolicyOutput() ApigApiMockPolicyOutput
	ToApigApiMockPolicyOutputWithContext(context.Context) ApigApiMockPolicyOutput
}

type ApigApiMockPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The configuration list of backend parameters.
	BackendParams ApigApiMockPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions ApigApiMockPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringPtrInput `pulumi:"effectiveMode"`
	// The backend policy name.
	Name pulumi.StringInput `pulumi:"name"`
	// The response content of the mock.
	Response pulumi.StringPtrInput `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
}

func (ApigApiMockPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMockPolicy)(nil)).Elem()
}

func (i ApigApiMockPolicyArgs) ToApigApiMockPolicyOutput() ApigApiMockPolicyOutput {
	return i.ToApigApiMockPolicyOutputWithContext(context.Background())
}

func (i ApigApiMockPolicyArgs) ToApigApiMockPolicyOutputWithContext(ctx context.Context) ApigApiMockPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockPolicyOutput)
}

// ApigApiMockPolicyArrayInput is an input type that accepts ApigApiMockPolicyArray and ApigApiMockPolicyArrayOutput values.
// You can construct a concrete instance of `ApigApiMockPolicyArrayInput` via:
//
//	ApigApiMockPolicyArray{ ApigApiMockPolicyArgs{...} }
type ApigApiMockPolicyArrayInput interface {
	pulumi.Input

	ToApigApiMockPolicyArrayOutput() ApigApiMockPolicyArrayOutput
	ToApigApiMockPolicyArrayOutputWithContext(context.Context) ApigApiMockPolicyArrayOutput
}

type ApigApiMockPolicyArray []ApigApiMockPolicyInput

func (ApigApiMockPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiMockPolicy)(nil)).Elem()
}

func (i ApigApiMockPolicyArray) ToApigApiMockPolicyArrayOutput() ApigApiMockPolicyArrayOutput {
	return i.ToApigApiMockPolicyArrayOutputWithContext(context.Background())
}

func (i ApigApiMockPolicyArray) ToApigApiMockPolicyArrayOutputWithContext(ctx context.Context) ApigApiMockPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockPolicyArrayOutput)
}

type ApigApiMockPolicyOutput struct{ *pulumi.OutputState }

func (ApigApiMockPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMockPolicy)(nil)).Elem()
}

func (o ApigApiMockPolicyOutput) ToApigApiMockPolicyOutput() ApigApiMockPolicyOutput {
	return o
}

func (o ApigApiMockPolicyOutput) ToApigApiMockPolicyOutputWithContext(ctx context.Context) ApigApiMockPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o ApigApiMockPolicyOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicy) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The configuration list of backend parameters.
func (o ApigApiMockPolicyOutput) BackendParams() ApigApiMockPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v ApigApiMockPolicy) []ApigApiMockPolicyBackendParam { return v.BackendParams }).(ApigApiMockPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o ApigApiMockPolicyOutput) Conditions() ApigApiMockPolicyConditionArrayOutput {
	return o.ApplyT(func(v ApigApiMockPolicy) []ApigApiMockPolicyCondition { return v.Conditions }).(ApigApiMockPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o ApigApiMockPolicyOutput) EffectiveMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicy) *string { return v.EffectiveMode }).(pulumi.StringPtrOutput)
}

// The backend policy name.
func (o ApigApiMockPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiMockPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The response content of the mock.
func (o ApigApiMockPolicyOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicy) *string { return v.Response }).(pulumi.StringPtrOutput)
}

// The custom status code of the mock response.
func (o ApigApiMockPolicyOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicy) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type ApigApiMockPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApigApiMockPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiMockPolicy)(nil)).Elem()
}

func (o ApigApiMockPolicyArrayOutput) ToApigApiMockPolicyArrayOutput() ApigApiMockPolicyArrayOutput {
	return o
}

func (o ApigApiMockPolicyArrayOutput) ToApigApiMockPolicyArrayOutputWithContext(ctx context.Context) ApigApiMockPolicyArrayOutput {
	return o
}

func (o ApigApiMockPolicyArrayOutput) Index(i pulumi.IntInput) ApigApiMockPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiMockPolicy {
		return vs[0].([]ApigApiMockPolicy)[vs[1].(int)]
	}).(ApigApiMockPolicyOutput)
}

type ApigApiMockPolicyBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApigApiMockPolicyBackendParamInput is an input type that accepts ApigApiMockPolicyBackendParamArgs and ApigApiMockPolicyBackendParamOutput values.
// You can construct a concrete instance of `ApigApiMockPolicyBackendParamInput` via:
//
//	ApigApiMockPolicyBackendParamArgs{...}
type ApigApiMockPolicyBackendParamInput interface {
	pulumi.Input

	ToApigApiMockPolicyBackendParamOutput() ApigApiMockPolicyBackendParamOutput
	ToApigApiMockPolicyBackendParamOutputWithContext(context.Context) ApigApiMockPolicyBackendParamOutput
}

type ApigApiMockPolicyBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigApiMockPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (i ApigApiMockPolicyBackendParamArgs) ToApigApiMockPolicyBackendParamOutput() ApigApiMockPolicyBackendParamOutput {
	return i.ToApigApiMockPolicyBackendParamOutputWithContext(context.Background())
}

func (i ApigApiMockPolicyBackendParamArgs) ToApigApiMockPolicyBackendParamOutputWithContext(ctx context.Context) ApigApiMockPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockPolicyBackendParamOutput)
}

// ApigApiMockPolicyBackendParamArrayInput is an input type that accepts ApigApiMockPolicyBackendParamArray and ApigApiMockPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `ApigApiMockPolicyBackendParamArrayInput` via:
//
//	ApigApiMockPolicyBackendParamArray{ ApigApiMockPolicyBackendParamArgs{...} }
type ApigApiMockPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToApigApiMockPolicyBackendParamArrayOutput() ApigApiMockPolicyBackendParamArrayOutput
	ToApigApiMockPolicyBackendParamArrayOutputWithContext(context.Context) ApigApiMockPolicyBackendParamArrayOutput
}

type ApigApiMockPolicyBackendParamArray []ApigApiMockPolicyBackendParamInput

func (ApigApiMockPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (i ApigApiMockPolicyBackendParamArray) ToApigApiMockPolicyBackendParamArrayOutput() ApigApiMockPolicyBackendParamArrayOutput {
	return i.ToApigApiMockPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i ApigApiMockPolicyBackendParamArray) ToApigApiMockPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApigApiMockPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockPolicyBackendParamArrayOutput)
}

type ApigApiMockPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (ApigApiMockPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (o ApigApiMockPolicyBackendParamOutput) ToApigApiMockPolicyBackendParamOutput() ApigApiMockPolicyBackendParamOutput {
	return o
}

func (o ApigApiMockPolicyBackendParamOutput) ToApigApiMockPolicyBackendParamOutputWithContext(ctx context.Context) ApigApiMockPolicyBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApigApiMockPolicyBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApigApiMockPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiMockPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApigApiMockPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiMockPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApigApiMockPolicyBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApigApiMockPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiMockPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApigApiMockPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiMockPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApigApiMockPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApigApiMockPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (o ApigApiMockPolicyBackendParamArrayOutput) ToApigApiMockPolicyBackendParamArrayOutput() ApigApiMockPolicyBackendParamArrayOutput {
	return o
}

func (o ApigApiMockPolicyBackendParamArrayOutput) ToApigApiMockPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApigApiMockPolicyBackendParamArrayOutput {
	return o
}

func (o ApigApiMockPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) ApigApiMockPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiMockPolicyBackendParam {
		return vs[0].([]ApigApiMockPolicyBackendParam)[vs[1].(int)]
	}).(ApigApiMockPolicyBackendParamOutput)
}

type ApigApiMockPolicyCondition struct {
	// The cookie parameter name.
	CookieName *string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName *string `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation *string `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName *string `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName *string `pulumi:"paramName"`
	// The type of the backend policy.
	Source *string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName *string `pulumi:"sysName"`
	// The condition type.
	Type *string `pulumi:"type"`
	// The value of the backend policy.
	Value string `pulumi:"value"`
}

// ApigApiMockPolicyConditionInput is an input type that accepts ApigApiMockPolicyConditionArgs and ApigApiMockPolicyConditionOutput values.
// You can construct a concrete instance of `ApigApiMockPolicyConditionInput` via:
//
//	ApigApiMockPolicyConditionArgs{...}
type ApigApiMockPolicyConditionInput interface {
	pulumi.Input

	ToApigApiMockPolicyConditionOutput() ApigApiMockPolicyConditionOutput
	ToApigApiMockPolicyConditionOutputWithContext(context.Context) ApigApiMockPolicyConditionOutput
}

type ApigApiMockPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringPtrInput `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation pulumi.StringPtrInput `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName pulumi.StringPtrInput `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// The type of the backend policy.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringPtrInput `pulumi:"sysName"`
	// The condition type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the backend policy.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigApiMockPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMockPolicyCondition)(nil)).Elem()
}

func (i ApigApiMockPolicyConditionArgs) ToApigApiMockPolicyConditionOutput() ApigApiMockPolicyConditionOutput {
	return i.ToApigApiMockPolicyConditionOutputWithContext(context.Background())
}

func (i ApigApiMockPolicyConditionArgs) ToApigApiMockPolicyConditionOutputWithContext(ctx context.Context) ApigApiMockPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockPolicyConditionOutput)
}

// ApigApiMockPolicyConditionArrayInput is an input type that accepts ApigApiMockPolicyConditionArray and ApigApiMockPolicyConditionArrayOutput values.
// You can construct a concrete instance of `ApigApiMockPolicyConditionArrayInput` via:
//
//	ApigApiMockPolicyConditionArray{ ApigApiMockPolicyConditionArgs{...} }
type ApigApiMockPolicyConditionArrayInput interface {
	pulumi.Input

	ToApigApiMockPolicyConditionArrayOutput() ApigApiMockPolicyConditionArrayOutput
	ToApigApiMockPolicyConditionArrayOutputWithContext(context.Context) ApigApiMockPolicyConditionArrayOutput
}

type ApigApiMockPolicyConditionArray []ApigApiMockPolicyConditionInput

func (ApigApiMockPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiMockPolicyCondition)(nil)).Elem()
}

func (i ApigApiMockPolicyConditionArray) ToApigApiMockPolicyConditionArrayOutput() ApigApiMockPolicyConditionArrayOutput {
	return i.ToApigApiMockPolicyConditionArrayOutputWithContext(context.Background())
}

func (i ApigApiMockPolicyConditionArray) ToApigApiMockPolicyConditionArrayOutputWithContext(ctx context.Context) ApigApiMockPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiMockPolicyConditionArrayOutput)
}

type ApigApiMockPolicyConditionOutput struct{ *pulumi.OutputState }

func (ApigApiMockPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiMockPolicyCondition)(nil)).Elem()
}

func (o ApigApiMockPolicyConditionOutput) ToApigApiMockPolicyConditionOutput() ApigApiMockPolicyConditionOutput {
	return o
}

func (o ApigApiMockPolicyConditionOutput) ToApigApiMockPolicyConditionOutputWithContext(ctx context.Context) ApigApiMockPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o ApigApiMockPolicyConditionOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The frontend authentication parameter name.
func (o ApigApiMockPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.FrontendAuthorizerName }).(pulumi.StringPtrOutput)
}

// The location of a parameter generated after orchestration.
func (o ApigApiMockPolicyConditionOutput) MappedParamLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.MappedParamLocation }).(pulumi.StringPtrOutput)
}

// The name of a parameter generated after orchestration.
func (o ApigApiMockPolicyConditionOutput) MappedParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.MappedParamName }).(pulumi.StringPtrOutput)
}

// The request parameter name.
func (o ApigApiMockPolicyConditionOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// The type of the backend policy.
func (o ApigApiMockPolicyConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The gateway built-in parameter name.
func (o ApigApiMockPolicyConditionOutput) SysName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.SysName }).(pulumi.StringPtrOutput)
}

// The condition type.
func (o ApigApiMockPolicyConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the backend policy.
func (o ApigApiMockPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiMockPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type ApigApiMockPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (ApigApiMockPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiMockPolicyCondition)(nil)).Elem()
}

func (o ApigApiMockPolicyConditionArrayOutput) ToApigApiMockPolicyConditionArrayOutput() ApigApiMockPolicyConditionArrayOutput {
	return o
}

func (o ApigApiMockPolicyConditionArrayOutput) ToApigApiMockPolicyConditionArrayOutputWithContext(ctx context.Context) ApigApiMockPolicyConditionArrayOutput {
	return o
}

func (o ApigApiMockPolicyConditionArrayOutput) Index(i pulumi.IntInput) ApigApiMockPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiMockPolicyCondition {
		return vs[0].([]ApigApiMockPolicyCondition)[vs[1].(int)]
	}).(ApigApiMockPolicyConditionOutput)
}

type ApigApiPublishmentHistory struct {
	// The version description of the API publishment.
	Description *string `pulumi:"description"`
	// The version ID of the API publishment.
	VersionId *string `pulumi:"versionId"`
}

// ApigApiPublishmentHistoryInput is an input type that accepts ApigApiPublishmentHistoryArgs and ApigApiPublishmentHistoryOutput values.
// You can construct a concrete instance of `ApigApiPublishmentHistoryInput` via:
//
//	ApigApiPublishmentHistoryArgs{...}
type ApigApiPublishmentHistoryInput interface {
	pulumi.Input

	ToApigApiPublishmentHistoryOutput() ApigApiPublishmentHistoryOutput
	ToApigApiPublishmentHistoryOutputWithContext(context.Context) ApigApiPublishmentHistoryOutput
}

type ApigApiPublishmentHistoryArgs struct {
	// The version description of the API publishment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The version ID of the API publishment.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (ApigApiPublishmentHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiPublishmentHistory)(nil)).Elem()
}

func (i ApigApiPublishmentHistoryArgs) ToApigApiPublishmentHistoryOutput() ApigApiPublishmentHistoryOutput {
	return i.ToApigApiPublishmentHistoryOutputWithContext(context.Background())
}

func (i ApigApiPublishmentHistoryArgs) ToApigApiPublishmentHistoryOutputWithContext(ctx context.Context) ApigApiPublishmentHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiPublishmentHistoryOutput)
}

// ApigApiPublishmentHistoryArrayInput is an input type that accepts ApigApiPublishmentHistoryArray and ApigApiPublishmentHistoryArrayOutput values.
// You can construct a concrete instance of `ApigApiPublishmentHistoryArrayInput` via:
//
//	ApigApiPublishmentHistoryArray{ ApigApiPublishmentHistoryArgs{...} }
type ApigApiPublishmentHistoryArrayInput interface {
	pulumi.Input

	ToApigApiPublishmentHistoryArrayOutput() ApigApiPublishmentHistoryArrayOutput
	ToApigApiPublishmentHistoryArrayOutputWithContext(context.Context) ApigApiPublishmentHistoryArrayOutput
}

type ApigApiPublishmentHistoryArray []ApigApiPublishmentHistoryInput

func (ApigApiPublishmentHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiPublishmentHistory)(nil)).Elem()
}

func (i ApigApiPublishmentHistoryArray) ToApigApiPublishmentHistoryArrayOutput() ApigApiPublishmentHistoryArrayOutput {
	return i.ToApigApiPublishmentHistoryArrayOutputWithContext(context.Background())
}

func (i ApigApiPublishmentHistoryArray) ToApigApiPublishmentHistoryArrayOutputWithContext(ctx context.Context) ApigApiPublishmentHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiPublishmentHistoryArrayOutput)
}

type ApigApiPublishmentHistoryOutput struct{ *pulumi.OutputState }

func (ApigApiPublishmentHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiPublishmentHistory)(nil)).Elem()
}

func (o ApigApiPublishmentHistoryOutput) ToApigApiPublishmentHistoryOutput() ApigApiPublishmentHistoryOutput {
	return o
}

func (o ApigApiPublishmentHistoryOutput) ToApigApiPublishmentHistoryOutputWithContext(ctx context.Context) ApigApiPublishmentHistoryOutput {
	return o
}

// The version description of the API publishment.
func (o ApigApiPublishmentHistoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiPublishmentHistory) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The version ID of the API publishment.
func (o ApigApiPublishmentHistoryOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiPublishmentHistory) *string { return v.VersionId }).(pulumi.StringPtrOutput)
}

type ApigApiPublishmentHistoryArrayOutput struct{ *pulumi.OutputState }

func (ApigApiPublishmentHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiPublishmentHistory)(nil)).Elem()
}

func (o ApigApiPublishmentHistoryArrayOutput) ToApigApiPublishmentHistoryArrayOutput() ApigApiPublishmentHistoryArrayOutput {
	return o
}

func (o ApigApiPublishmentHistoryArrayOutput) ToApigApiPublishmentHistoryArrayOutputWithContext(ctx context.Context) ApigApiPublishmentHistoryArrayOutput {
	return o
}

func (o ApigApiPublishmentHistoryArrayOutput) Index(i pulumi.IntInput) ApigApiPublishmentHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiPublishmentHistory {
		return vs[0].([]ApigApiPublishmentHistory)[vs[1].(int)]
	}).(ApigApiPublishmentHistoryOutput)
}

type ApigApiRequestParam struct {
	// The default value of the parameter.
	Default *string `pulumi:"default"`
	// The parameter description.
	Description *string `pulumi:"description"`
	// The enumerated value.
	Enumeration *string `pulumi:"enumeration"`
	// The parameter example.
	Example *string `pulumi:"example"`
	// Where this parameter is located.
	Location *string `pulumi:"location"`
	// The maximum value or length (string parameter) for parameter.
	Maximum *int `pulumi:"maximum"`
	// The minimum value or length (string parameter) for parameter.
	Minimum *int `pulumi:"minimum"`
	// The name of the request parameter.
	Name string `pulumi:"name"`
	// The list of orchestration rules that parameter used.
	Orchestrations []string `pulumi:"orchestrations"`
	// Whether to transparently transfer the parameter.
	Passthrough *bool `pulumi:"passthrough"`
	// Whether this parameter is required.
	Required *bool `pulumi:"required"`
	// The parameter type.
	Type *string `pulumi:"type"`
	// Whether to enable the parameter validation.
	ValidEnable *int `pulumi:"validEnable"`
}

// ApigApiRequestParamInput is an input type that accepts ApigApiRequestParamArgs and ApigApiRequestParamOutput values.
// You can construct a concrete instance of `ApigApiRequestParamInput` via:
//
//	ApigApiRequestParamArgs{...}
type ApigApiRequestParamInput interface {
	pulumi.Input

	ToApigApiRequestParamOutput() ApigApiRequestParamOutput
	ToApigApiRequestParamOutputWithContext(context.Context) ApigApiRequestParamOutput
}

type ApigApiRequestParamArgs struct {
	// The default value of the parameter.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// The parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The enumerated value.
	Enumeration pulumi.StringPtrInput `pulumi:"enumeration"`
	// The parameter example.
	Example pulumi.StringPtrInput `pulumi:"example"`
	// Where this parameter is located.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The maximum value or length (string parameter) for parameter.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// The minimum value or length (string parameter) for parameter.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// The name of the request parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of orchestration rules that parameter used.
	Orchestrations pulumi.StringArrayInput `pulumi:"orchestrations"`
	// Whether to transparently transfer the parameter.
	Passthrough pulumi.BoolPtrInput `pulumi:"passthrough"`
	// Whether this parameter is required.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// The parameter type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Whether to enable the parameter validation.
	ValidEnable pulumi.IntPtrInput `pulumi:"validEnable"`
}

func (ApigApiRequestParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiRequestParam)(nil)).Elem()
}

func (i ApigApiRequestParamArgs) ToApigApiRequestParamOutput() ApigApiRequestParamOutput {
	return i.ToApigApiRequestParamOutputWithContext(context.Background())
}

func (i ApigApiRequestParamArgs) ToApigApiRequestParamOutputWithContext(ctx context.Context) ApigApiRequestParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiRequestParamOutput)
}

// ApigApiRequestParamArrayInput is an input type that accepts ApigApiRequestParamArray and ApigApiRequestParamArrayOutput values.
// You can construct a concrete instance of `ApigApiRequestParamArrayInput` via:
//
//	ApigApiRequestParamArray{ ApigApiRequestParamArgs{...} }
type ApigApiRequestParamArrayInput interface {
	pulumi.Input

	ToApigApiRequestParamArrayOutput() ApigApiRequestParamArrayOutput
	ToApigApiRequestParamArrayOutputWithContext(context.Context) ApigApiRequestParamArrayOutput
}

type ApigApiRequestParamArray []ApigApiRequestParamInput

func (ApigApiRequestParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiRequestParam)(nil)).Elem()
}

func (i ApigApiRequestParamArray) ToApigApiRequestParamArrayOutput() ApigApiRequestParamArrayOutput {
	return i.ToApigApiRequestParamArrayOutputWithContext(context.Background())
}

func (i ApigApiRequestParamArray) ToApigApiRequestParamArrayOutputWithContext(ctx context.Context) ApigApiRequestParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiRequestParamArrayOutput)
}

type ApigApiRequestParamOutput struct{ *pulumi.OutputState }

func (ApigApiRequestParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiRequestParam)(nil)).Elem()
}

func (o ApigApiRequestParamOutput) ToApigApiRequestParamOutput() ApigApiRequestParamOutput {
	return o
}

func (o ApigApiRequestParamOutput) ToApigApiRequestParamOutputWithContext(ctx context.Context) ApigApiRequestParamOutput {
	return o
}

// The default value of the parameter.
func (o ApigApiRequestParamOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// The parameter description.
func (o ApigApiRequestParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The enumerated value.
func (o ApigApiRequestParamOutput) Enumeration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *string { return v.Enumeration }).(pulumi.StringPtrOutput)
}

// The parameter example.
func (o ApigApiRequestParamOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// Where this parameter is located.
func (o ApigApiRequestParamOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The maximum value or length (string parameter) for parameter.
func (o ApigApiRequestParamOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// The minimum value or length (string parameter) for parameter.
func (o ApigApiRequestParamOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// The name of the request parameter.
func (o ApigApiRequestParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiRequestParam) string { return v.Name }).(pulumi.StringOutput)
}

// The list of orchestration rules that parameter used.
func (o ApigApiRequestParamOutput) Orchestrations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApigApiRequestParam) []string { return v.Orchestrations }).(pulumi.StringArrayOutput)
}

// Whether to transparently transfer the parameter.
func (o ApigApiRequestParamOutput) Passthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *bool { return v.Passthrough }).(pulumi.BoolPtrOutput)
}

// Whether this parameter is required.
func (o ApigApiRequestParamOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// The parameter type.
func (o ApigApiRequestParamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Whether to enable the parameter validation.
func (o ApigApiRequestParamOutput) ValidEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiRequestParam) *int { return v.ValidEnable }).(pulumi.IntPtrOutput)
}

type ApigApiRequestParamArrayOutput struct{ *pulumi.OutputState }

func (ApigApiRequestParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiRequestParam)(nil)).Elem()
}

func (o ApigApiRequestParamArrayOutput) ToApigApiRequestParamArrayOutput() ApigApiRequestParamArrayOutput {
	return o
}

func (o ApigApiRequestParamArrayOutput) ToApigApiRequestParamArrayOutputWithContext(ctx context.Context) ApigApiRequestParamArrayOutput {
	return o
}

func (o ApigApiRequestParamArrayOutput) Index(i pulumi.IntInput) ApigApiRequestParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiRequestParam {
		return vs[0].([]ApigApiRequestParam)[vs[1].(int)]
	}).(ApigApiRequestParamOutput)
}

type ApigApiWeb struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The backend service address, which consists of a domain name or IP address, and a port number.
	BackendAddress *string `pulumi:"backendAddress"`
	// The proxy host header.
	HostHeader *string `pulumi:"hostHeader"`
	// The backend request path.
	Path string `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod *string `pulumi:"requestMethod"`
	// The web protocol type of the API request.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount *int `pulumi:"retryCount"`
	// Whether to enable two-way authentication.
	SslEnable *bool `pulumi:"sslEnable"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId *string `pulumi:"vpcChannelId"`
}

// ApigApiWebInput is an input type that accepts ApigApiWebArgs and ApigApiWebOutput values.
// You can construct a concrete instance of `ApigApiWebInput` via:
//
//	ApigApiWebArgs{...}
type ApigApiWebInput interface {
	pulumi.Input

	ToApigApiWebOutput() ApigApiWebOutput
	ToApigApiWebOutputWithContext(context.Context) ApigApiWebOutput
}

type ApigApiWebArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The backend service address, which consists of a domain name or IP address, and a port number.
	BackendAddress pulumi.StringPtrInput `pulumi:"backendAddress"`
	// The proxy host header.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// The backend request path.
	Path pulumi.StringInput `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod pulumi.StringPtrInput `pulumi:"requestMethod"`
	// The web protocol type of the API request.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// Whether to enable two-way authentication.
	SslEnable pulumi.BoolPtrInput `pulumi:"sslEnable"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId pulumi.StringPtrInput `pulumi:"vpcChannelId"`
}

func (ApigApiWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWeb)(nil)).Elem()
}

func (i ApigApiWebArgs) ToApigApiWebOutput() ApigApiWebOutput {
	return i.ToApigApiWebOutputWithContext(context.Background())
}

func (i ApigApiWebArgs) ToApigApiWebOutputWithContext(ctx context.Context) ApigApiWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebOutput)
}

func (i ApigApiWebArgs) ToApigApiWebPtrOutput() ApigApiWebPtrOutput {
	return i.ToApigApiWebPtrOutputWithContext(context.Background())
}

func (i ApigApiWebArgs) ToApigApiWebPtrOutputWithContext(ctx context.Context) ApigApiWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebOutput).ToApigApiWebPtrOutputWithContext(ctx)
}

// ApigApiWebPtrInput is an input type that accepts ApigApiWebArgs, ApigApiWebPtr and ApigApiWebPtrOutput values.
// You can construct a concrete instance of `ApigApiWebPtrInput` via:
//
//	        ApigApiWebArgs{...}
//
//	or:
//
//	        nil
type ApigApiWebPtrInput interface {
	pulumi.Input

	ToApigApiWebPtrOutput() ApigApiWebPtrOutput
	ToApigApiWebPtrOutputWithContext(context.Context) ApigApiWebPtrOutput
}

type apigApiWebPtrType ApigApiWebArgs

func ApigApiWebPtr(v *ApigApiWebArgs) ApigApiWebPtrInput {
	return (*apigApiWebPtrType)(v)
}

func (*apigApiWebPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiWeb)(nil)).Elem()
}

func (i *apigApiWebPtrType) ToApigApiWebPtrOutput() ApigApiWebPtrOutput {
	return i.ToApigApiWebPtrOutputWithContext(context.Background())
}

func (i *apigApiWebPtrType) ToApigApiWebPtrOutputWithContext(ctx context.Context) ApigApiWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebPtrOutput)
}

type ApigApiWebOutput struct{ *pulumi.OutputState }

func (ApigApiWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWeb)(nil)).Elem()
}

func (o ApigApiWebOutput) ToApigApiWebOutput() ApigApiWebOutput {
	return o
}

func (o ApigApiWebOutput) ToApigApiWebOutputWithContext(ctx context.Context) ApigApiWebOutput {
	return o
}

func (o ApigApiWebOutput) ToApigApiWebPtrOutput() ApigApiWebPtrOutput {
	return o.ToApigApiWebPtrOutputWithContext(context.Background())
}

func (o ApigApiWebOutput) ToApigApiWebPtrOutputWithContext(ctx context.Context) ApigApiWebPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApigApiWeb) *ApigApiWeb {
		return &v
	}).(ApigApiWebPtrOutput)
}

// The ID of the backend custom authorization.
func (o ApigApiWebOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The backend service address, which consists of a domain name or IP address, and a port number.
func (o ApigApiWebOutput) BackendAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *string { return v.BackendAddress }).(pulumi.StringPtrOutput)
}

// The proxy host header.
func (o ApigApiWebOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// The backend request path.
func (o ApigApiWebOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWeb) string { return v.Path }).(pulumi.StringOutput)
}

// The backend request method of the API.
func (o ApigApiWebOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *string { return v.RequestMethod }).(pulumi.StringPtrOutput)
}

// The web protocol type of the API request.
func (o ApigApiWebOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The number of retry attempts to request the backend service.
func (o ApigApiWebOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// Whether to enable two-way authentication.
func (o ApigApiWebOutput) SslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *bool { return v.SslEnable }).(pulumi.BoolPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApigApiWebOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The VPC channel ID.
func (o ApigApiWebOutput) VpcChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWeb) *string { return v.VpcChannelId }).(pulumi.StringPtrOutput)
}

type ApigApiWebPtrOutput struct{ *pulumi.OutputState }

func (ApigApiWebPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiWeb)(nil)).Elem()
}

func (o ApigApiWebPtrOutput) ToApigApiWebPtrOutput() ApigApiWebPtrOutput {
	return o
}

func (o ApigApiWebPtrOutput) ToApigApiWebPtrOutputWithContext(ctx context.Context) ApigApiWebPtrOutput {
	return o
}

func (o ApigApiWebPtrOutput) Elem() ApigApiWebOutput {
	return o.ApplyT(func(v *ApigApiWeb) ApigApiWeb {
		if v != nil {
			return *v
		}
		var ret ApigApiWeb
		return ret
	}).(ApigApiWebOutput)
}

// The ID of the backend custom authorization.
func (o ApigApiWebPtrOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerId
	}).(pulumi.StringPtrOutput)
}

// The backend service address, which consists of a domain name or IP address, and a port number.
func (o ApigApiWebPtrOutput) BackendAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.BackendAddress
	}).(pulumi.StringPtrOutput)
}

// The proxy host header.
func (o ApigApiWebPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// The backend request path.
func (o ApigApiWebPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The backend request method of the API.
func (o ApigApiWebPtrOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.RequestMethod
	}).(pulumi.StringPtrOutput)
}

// The web protocol type of the API request.
func (o ApigApiWebPtrOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.RequestProtocol
	}).(pulumi.StringPtrOutput)
}

// The number of retry attempts to request the backend service.
func (o ApigApiWebPtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// Whether to enable two-way authentication.
func (o ApigApiWebPtrOutput) SslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnable
	}).(pulumi.BoolPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApigApiWebPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The VPC channel ID.
func (o ApigApiWebPtrOutput) VpcChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiWeb) *string {
		if v == nil {
			return nil
		}
		return v.VpcChannelId
	}).(pulumi.StringPtrOutput)
}

type ApigApiWebPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The backend service address
	BackendAddress *string `pulumi:"backendAddress"`
	// The configuration list of the backend parameters.
	BackendParams []ApigApiWebPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []ApigApiWebPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode *string `pulumi:"effectiveMode"`
	// The proxy host header.
	HostHeader *string `pulumi:"hostHeader"`
	// The name of the web policy.
	Name string `pulumi:"name"`
	// The backend request address.
	Path string `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod string `pulumi:"requestMethod"`
	// The backend request protocol.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount *int `pulumi:"retryCount"`
	// The timeout for API requests to backend service.
	Timeout *int `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId *string `pulumi:"vpcChannelId"`
}

// ApigApiWebPolicyInput is an input type that accepts ApigApiWebPolicyArgs and ApigApiWebPolicyOutput values.
// You can construct a concrete instance of `ApigApiWebPolicyInput` via:
//
//	ApigApiWebPolicyArgs{...}
type ApigApiWebPolicyInput interface {
	pulumi.Input

	ToApigApiWebPolicyOutput() ApigApiWebPolicyOutput
	ToApigApiWebPolicyOutputWithContext(context.Context) ApigApiWebPolicyOutput
}

type ApigApiWebPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput `pulumi:"authorizerId"`
	// The backend service address
	BackendAddress pulumi.StringPtrInput `pulumi:"backendAddress"`
	// The configuration list of the backend parameters.
	BackendParams ApigApiWebPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions ApigApiWebPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringPtrInput `pulumi:"effectiveMode"`
	// The proxy host header.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// The name of the web policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The backend request address.
	Path pulumi.StringInput `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// The backend request protocol.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId pulumi.StringPtrInput `pulumi:"vpcChannelId"`
}

func (ApigApiWebPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWebPolicy)(nil)).Elem()
}

func (i ApigApiWebPolicyArgs) ToApigApiWebPolicyOutput() ApigApiWebPolicyOutput {
	return i.ToApigApiWebPolicyOutputWithContext(context.Background())
}

func (i ApigApiWebPolicyArgs) ToApigApiWebPolicyOutputWithContext(ctx context.Context) ApigApiWebPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebPolicyOutput)
}

// ApigApiWebPolicyArrayInput is an input type that accepts ApigApiWebPolicyArray and ApigApiWebPolicyArrayOutput values.
// You can construct a concrete instance of `ApigApiWebPolicyArrayInput` via:
//
//	ApigApiWebPolicyArray{ ApigApiWebPolicyArgs{...} }
type ApigApiWebPolicyArrayInput interface {
	pulumi.Input

	ToApigApiWebPolicyArrayOutput() ApigApiWebPolicyArrayOutput
	ToApigApiWebPolicyArrayOutputWithContext(context.Context) ApigApiWebPolicyArrayOutput
}

type ApigApiWebPolicyArray []ApigApiWebPolicyInput

func (ApigApiWebPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiWebPolicy)(nil)).Elem()
}

func (i ApigApiWebPolicyArray) ToApigApiWebPolicyArrayOutput() ApigApiWebPolicyArrayOutput {
	return i.ToApigApiWebPolicyArrayOutputWithContext(context.Background())
}

func (i ApigApiWebPolicyArray) ToApigApiWebPolicyArrayOutputWithContext(ctx context.Context) ApigApiWebPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebPolicyArrayOutput)
}

type ApigApiWebPolicyOutput struct{ *pulumi.OutputState }

func (ApigApiWebPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWebPolicy)(nil)).Elem()
}

func (o ApigApiWebPolicyOutput) ToApigApiWebPolicyOutput() ApigApiWebPolicyOutput {
	return o
}

func (o ApigApiWebPolicyOutput) ToApigApiWebPolicyOutputWithContext(ctx context.Context) ApigApiWebPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o ApigApiWebPolicyOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The backend service address
func (o ApigApiWebPolicyOutput) BackendAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *string { return v.BackendAddress }).(pulumi.StringPtrOutput)
}

// The configuration list of the backend parameters.
func (o ApigApiWebPolicyOutput) BackendParams() ApigApiWebPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) []ApigApiWebPolicyBackendParam { return v.BackendParams }).(ApigApiWebPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o ApigApiWebPolicyOutput) Conditions() ApigApiWebPolicyConditionArrayOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) []ApigApiWebPolicyCondition { return v.Conditions }).(ApigApiWebPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o ApigApiWebPolicyOutput) EffectiveMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *string { return v.EffectiveMode }).(pulumi.StringPtrOutput)
}

// The proxy host header.
func (o ApigApiWebPolicyOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// The name of the web policy.
func (o ApigApiWebPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The backend request address.
func (o ApigApiWebPolicyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) string { return v.Path }).(pulumi.StringOutput)
}

// The backend request method of the API.
func (o ApigApiWebPolicyOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// The backend request protocol.
func (o ApigApiWebPolicyOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// The number of retry attempts to request the backend service.
func (o ApigApiWebPolicyOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// The timeout for API requests to backend service.
func (o ApigApiWebPolicyOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The VPC channel ID.
func (o ApigApiWebPolicyOutput) VpcChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicy) *string { return v.VpcChannelId }).(pulumi.StringPtrOutput)
}

type ApigApiWebPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApigApiWebPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiWebPolicy)(nil)).Elem()
}

func (o ApigApiWebPolicyArrayOutput) ToApigApiWebPolicyArrayOutput() ApigApiWebPolicyArrayOutput {
	return o
}

func (o ApigApiWebPolicyArrayOutput) ToApigApiWebPolicyArrayOutputWithContext(ctx context.Context) ApigApiWebPolicyArrayOutput {
	return o
}

func (o ApigApiWebPolicyArrayOutput) Index(i pulumi.IntInput) ApigApiWebPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiWebPolicy {
		return vs[0].([]ApigApiWebPolicy)[vs[1].(int)]
	}).(ApigApiWebPolicyOutput)
}

type ApigApiWebPolicyBackendParam struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The parameter name.
	Name            string  `pulumi:"name"`
	SystemParamType *string `pulumi:"systemParamType"`
	// The parameter type.
	Type string `pulumi:"type"`
	// The value of the parameter
	Value string `pulumi:"value"`
}

// ApigApiWebPolicyBackendParamInput is an input type that accepts ApigApiWebPolicyBackendParamArgs and ApigApiWebPolicyBackendParamOutput values.
// You can construct a concrete instance of `ApigApiWebPolicyBackendParamInput` via:
//
//	ApigApiWebPolicyBackendParamArgs{...}
type ApigApiWebPolicyBackendParamInput interface {
	pulumi.Input

	ToApigApiWebPolicyBackendParamOutput() ApigApiWebPolicyBackendParamOutput
	ToApigApiWebPolicyBackendParamOutputWithContext(context.Context) ApigApiWebPolicyBackendParamOutput
}

type ApigApiWebPolicyBackendParamArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The parameter name.
	Name            pulumi.StringInput    `pulumi:"name"`
	SystemParamType pulumi.StringPtrInput `pulumi:"systemParamType"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigApiWebPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (i ApigApiWebPolicyBackendParamArgs) ToApigApiWebPolicyBackendParamOutput() ApigApiWebPolicyBackendParamOutput {
	return i.ToApigApiWebPolicyBackendParamOutputWithContext(context.Background())
}

func (i ApigApiWebPolicyBackendParamArgs) ToApigApiWebPolicyBackendParamOutputWithContext(ctx context.Context) ApigApiWebPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebPolicyBackendParamOutput)
}

// ApigApiWebPolicyBackendParamArrayInput is an input type that accepts ApigApiWebPolicyBackendParamArray and ApigApiWebPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `ApigApiWebPolicyBackendParamArrayInput` via:
//
//	ApigApiWebPolicyBackendParamArray{ ApigApiWebPolicyBackendParamArgs{...} }
type ApigApiWebPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToApigApiWebPolicyBackendParamArrayOutput() ApigApiWebPolicyBackendParamArrayOutput
	ToApigApiWebPolicyBackendParamArrayOutputWithContext(context.Context) ApigApiWebPolicyBackendParamArrayOutput
}

type ApigApiWebPolicyBackendParamArray []ApigApiWebPolicyBackendParamInput

func (ApigApiWebPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (i ApigApiWebPolicyBackendParamArray) ToApigApiWebPolicyBackendParamArrayOutput() ApigApiWebPolicyBackendParamArrayOutput {
	return i.ToApigApiWebPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i ApigApiWebPolicyBackendParamArray) ToApigApiWebPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApigApiWebPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebPolicyBackendParamArrayOutput)
}

type ApigApiWebPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (ApigApiWebPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (o ApigApiWebPolicyBackendParamOutput) ToApigApiWebPolicyBackendParamOutput() ApigApiWebPolicyBackendParamOutput {
	return o
}

func (o ApigApiWebPolicyBackendParamOutput) ToApigApiWebPolicyBackendParamOutputWithContext(ctx context.Context) ApigApiWebPolicyBackendParamOutput {
	return o
}

// The description of the parameter.
func (o ApigApiWebPolicyBackendParamOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyBackendParam) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Where the parameter is located.
func (o ApigApiWebPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The parameter name.
func (o ApigApiWebPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApigApiWebPolicyBackendParamOutput) SystemParamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyBackendParam) *string { return v.SystemParamType }).(pulumi.StringPtrOutput)
}

// The parameter type.
func (o ApigApiWebPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter
func (o ApigApiWebPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApigApiWebPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (ApigApiWebPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (o ApigApiWebPolicyBackendParamArrayOutput) ToApigApiWebPolicyBackendParamArrayOutput() ApigApiWebPolicyBackendParamArrayOutput {
	return o
}

func (o ApigApiWebPolicyBackendParamArrayOutput) ToApigApiWebPolicyBackendParamArrayOutputWithContext(ctx context.Context) ApigApiWebPolicyBackendParamArrayOutput {
	return o
}

func (o ApigApiWebPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) ApigApiWebPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiWebPolicyBackendParam {
		return vs[0].([]ApigApiWebPolicyBackendParam)[vs[1].(int)]
	}).(ApigApiWebPolicyBackendParamOutput)
}

type ApigApiWebPolicyCondition struct {
	// The cookie parameter name.
	CookieName *string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName *string `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation *string `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName *string `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName *string `pulumi:"paramName"`
	// The type of the backend policy.
	Source *string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName *string `pulumi:"sysName"`
	// The condition type.
	Type *string `pulumi:"type"`
	// The value of the backend policy.
	Value string `pulumi:"value"`
}

// ApigApiWebPolicyConditionInput is an input type that accepts ApigApiWebPolicyConditionArgs and ApigApiWebPolicyConditionOutput values.
// You can construct a concrete instance of `ApigApiWebPolicyConditionInput` via:
//
//	ApigApiWebPolicyConditionArgs{...}
type ApigApiWebPolicyConditionInput interface {
	pulumi.Input

	ToApigApiWebPolicyConditionOutput() ApigApiWebPolicyConditionOutput
	ToApigApiWebPolicyConditionOutputWithContext(context.Context) ApigApiWebPolicyConditionOutput
}

type ApigApiWebPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringPtrInput `pulumi:"frontendAuthorizerName"`
	// The location of a parameter generated after orchestration.
	MappedParamLocation pulumi.StringPtrInput `pulumi:"mappedParamLocation"`
	// The name of a parameter generated after orchestration.
	MappedParamName pulumi.StringPtrInput `pulumi:"mappedParamName"`
	// The request parameter name.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// The type of the backend policy.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringPtrInput `pulumi:"sysName"`
	// The condition type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the backend policy.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigApiWebPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWebPolicyCondition)(nil)).Elem()
}

func (i ApigApiWebPolicyConditionArgs) ToApigApiWebPolicyConditionOutput() ApigApiWebPolicyConditionOutput {
	return i.ToApigApiWebPolicyConditionOutputWithContext(context.Background())
}

func (i ApigApiWebPolicyConditionArgs) ToApigApiWebPolicyConditionOutputWithContext(ctx context.Context) ApigApiWebPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebPolicyConditionOutput)
}

// ApigApiWebPolicyConditionArrayInput is an input type that accepts ApigApiWebPolicyConditionArray and ApigApiWebPolicyConditionArrayOutput values.
// You can construct a concrete instance of `ApigApiWebPolicyConditionArrayInput` via:
//
//	ApigApiWebPolicyConditionArray{ ApigApiWebPolicyConditionArgs{...} }
type ApigApiWebPolicyConditionArrayInput interface {
	pulumi.Input

	ToApigApiWebPolicyConditionArrayOutput() ApigApiWebPolicyConditionArrayOutput
	ToApigApiWebPolicyConditionArrayOutputWithContext(context.Context) ApigApiWebPolicyConditionArrayOutput
}

type ApigApiWebPolicyConditionArray []ApigApiWebPolicyConditionInput

func (ApigApiWebPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiWebPolicyCondition)(nil)).Elem()
}

func (i ApigApiWebPolicyConditionArray) ToApigApiWebPolicyConditionArrayOutput() ApigApiWebPolicyConditionArrayOutput {
	return i.ToApigApiWebPolicyConditionArrayOutputWithContext(context.Background())
}

func (i ApigApiWebPolicyConditionArray) ToApigApiWebPolicyConditionArrayOutputWithContext(ctx context.Context) ApigApiWebPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiWebPolicyConditionArrayOutput)
}

type ApigApiWebPolicyConditionOutput struct{ *pulumi.OutputState }

func (ApigApiWebPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApiWebPolicyCondition)(nil)).Elem()
}

func (o ApigApiWebPolicyConditionOutput) ToApigApiWebPolicyConditionOutput() ApigApiWebPolicyConditionOutput {
	return o
}

func (o ApigApiWebPolicyConditionOutput) ToApigApiWebPolicyConditionOutputWithContext(ctx context.Context) ApigApiWebPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o ApigApiWebPolicyConditionOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The frontend authentication parameter name.
func (o ApigApiWebPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.FrontendAuthorizerName }).(pulumi.StringPtrOutput)
}

// The location of a parameter generated after orchestration.
func (o ApigApiWebPolicyConditionOutput) MappedParamLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.MappedParamLocation }).(pulumi.StringPtrOutput)
}

// The name of a parameter generated after orchestration.
func (o ApigApiWebPolicyConditionOutput) MappedParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.MappedParamName }).(pulumi.StringPtrOutput)
}

// The request parameter name.
func (o ApigApiWebPolicyConditionOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// The type of the backend policy.
func (o ApigApiWebPolicyConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The gateway built-in parameter name.
func (o ApigApiWebPolicyConditionOutput) SysName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.SysName }).(pulumi.StringPtrOutput)
}

// The condition type.
func (o ApigApiWebPolicyConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the backend policy.
func (o ApigApiWebPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApiWebPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type ApigApiWebPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (ApigApiWebPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApiWebPolicyCondition)(nil)).Elem()
}

func (o ApigApiWebPolicyConditionArrayOutput) ToApigApiWebPolicyConditionArrayOutput() ApigApiWebPolicyConditionArrayOutput {
	return o
}

func (o ApigApiWebPolicyConditionArrayOutput) ToApigApiWebPolicyConditionArrayOutputWithContext(ctx context.Context) ApigApiWebPolicyConditionArrayOutput {
	return o
}

func (o ApigApiWebPolicyConditionArrayOutput) Index(i pulumi.IntInput) ApigApiWebPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApiWebPolicyCondition {
		return vs[0].([]ApigApiWebPolicyCondition)[vs[1].(int)]
	}).(ApigApiWebPolicyConditionOutput)
}

type ApigApplicationQuotaAssociateApplication struct {
	// The binding time, in RFC3339 format.
	BindTime *string `pulumi:"bindTime"`
	// The application ID bound to the application quota.
	Id string `pulumi:"id"`
}

// ApigApplicationQuotaAssociateApplicationInput is an input type that accepts ApigApplicationQuotaAssociateApplicationArgs and ApigApplicationQuotaAssociateApplicationOutput values.
// You can construct a concrete instance of `ApigApplicationQuotaAssociateApplicationInput` via:
//
//	ApigApplicationQuotaAssociateApplicationArgs{...}
type ApigApplicationQuotaAssociateApplicationInput interface {
	pulumi.Input

	ToApigApplicationQuotaAssociateApplicationOutput() ApigApplicationQuotaAssociateApplicationOutput
	ToApigApplicationQuotaAssociateApplicationOutputWithContext(context.Context) ApigApplicationQuotaAssociateApplicationOutput
}

type ApigApplicationQuotaAssociateApplicationArgs struct {
	// The binding time, in RFC3339 format.
	BindTime pulumi.StringPtrInput `pulumi:"bindTime"`
	// The application ID bound to the application quota.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ApigApplicationQuotaAssociateApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApplicationQuotaAssociateApplication)(nil)).Elem()
}

func (i ApigApplicationQuotaAssociateApplicationArgs) ToApigApplicationQuotaAssociateApplicationOutput() ApigApplicationQuotaAssociateApplicationOutput {
	return i.ToApigApplicationQuotaAssociateApplicationOutputWithContext(context.Background())
}

func (i ApigApplicationQuotaAssociateApplicationArgs) ToApigApplicationQuotaAssociateApplicationOutputWithContext(ctx context.Context) ApigApplicationQuotaAssociateApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationQuotaAssociateApplicationOutput)
}

// ApigApplicationQuotaAssociateApplicationArrayInput is an input type that accepts ApigApplicationQuotaAssociateApplicationArray and ApigApplicationQuotaAssociateApplicationArrayOutput values.
// You can construct a concrete instance of `ApigApplicationQuotaAssociateApplicationArrayInput` via:
//
//	ApigApplicationQuotaAssociateApplicationArray{ ApigApplicationQuotaAssociateApplicationArgs{...} }
type ApigApplicationQuotaAssociateApplicationArrayInput interface {
	pulumi.Input

	ToApigApplicationQuotaAssociateApplicationArrayOutput() ApigApplicationQuotaAssociateApplicationArrayOutput
	ToApigApplicationQuotaAssociateApplicationArrayOutputWithContext(context.Context) ApigApplicationQuotaAssociateApplicationArrayOutput
}

type ApigApplicationQuotaAssociateApplicationArray []ApigApplicationQuotaAssociateApplicationInput

func (ApigApplicationQuotaAssociateApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApplicationQuotaAssociateApplication)(nil)).Elem()
}

func (i ApigApplicationQuotaAssociateApplicationArray) ToApigApplicationQuotaAssociateApplicationArrayOutput() ApigApplicationQuotaAssociateApplicationArrayOutput {
	return i.ToApigApplicationQuotaAssociateApplicationArrayOutputWithContext(context.Background())
}

func (i ApigApplicationQuotaAssociateApplicationArray) ToApigApplicationQuotaAssociateApplicationArrayOutputWithContext(ctx context.Context) ApigApplicationQuotaAssociateApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationQuotaAssociateApplicationArrayOutput)
}

type ApigApplicationQuotaAssociateApplicationOutput struct{ *pulumi.OutputState }

func (ApigApplicationQuotaAssociateApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigApplicationQuotaAssociateApplication)(nil)).Elem()
}

func (o ApigApplicationQuotaAssociateApplicationOutput) ToApigApplicationQuotaAssociateApplicationOutput() ApigApplicationQuotaAssociateApplicationOutput {
	return o
}

func (o ApigApplicationQuotaAssociateApplicationOutput) ToApigApplicationQuotaAssociateApplicationOutputWithContext(ctx context.Context) ApigApplicationQuotaAssociateApplicationOutput {
	return o
}

// The binding time, in RFC3339 format.
func (o ApigApplicationQuotaAssociateApplicationOutput) BindTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigApplicationQuotaAssociateApplication) *string { return v.BindTime }).(pulumi.StringPtrOutput)
}

// The application ID bound to the application quota.
func (o ApigApplicationQuotaAssociateApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApigApplicationQuotaAssociateApplication) string { return v.Id }).(pulumi.StringOutput)
}

type ApigApplicationQuotaAssociateApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApigApplicationQuotaAssociateApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigApplicationQuotaAssociateApplication)(nil)).Elem()
}

func (o ApigApplicationQuotaAssociateApplicationArrayOutput) ToApigApplicationQuotaAssociateApplicationArrayOutput() ApigApplicationQuotaAssociateApplicationArrayOutput {
	return o
}

func (o ApigApplicationQuotaAssociateApplicationArrayOutput) ToApigApplicationQuotaAssociateApplicationArrayOutputWithContext(ctx context.Context) ApigApplicationQuotaAssociateApplicationArrayOutput {
	return o
}

func (o ApigApplicationQuotaAssociateApplicationArrayOutput) Index(i pulumi.IntInput) ApigApplicationQuotaAssociateApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigApplicationQuotaAssociateApplication {
		return vs[0].([]ApigApplicationQuotaAssociateApplication)[vs[1].(int)]
	}).(ApigApplicationQuotaAssociateApplicationOutput)
}

type ApigChannelHealthCheck struct {
	// Whether to enable two-way authentication.
	EnableClientSsl *bool `pulumi:"enableClientSsl"`
	// The response codes for determining a successful HTTP response.
	HttpCodes *string `pulumi:"httpCodes"`
	// The interval between consecutive check, in second.
	Interval int `pulumi:"interval"`
	// The request method for health check.
	Method *string `pulumi:"method"`
	// The destination path for health check.
	Path *string `pulumi:"path"`
	// The destination host port for health check.
	Port *int `pulumi:"port"`
	// The rotocol for performing health check on backend servers.
	Protocol string `pulumi:"protocol"`
	// The status of health check.
	Status *int `pulumi:"status"`
	// The unhealthy threshold, which refers to the number of consecutive failed check required for a backend server to be considered unhealthy.
	ThresholdAbnormal int `pulumi:"thresholdAbnormal"`
	// The the healthy threshold, which refers to the number of consecutive successful checks required for a backend server to be considered healthy.
	ThresholdNormal int `pulumi:"thresholdNormal"`
	// The timeout for determining whether a health check fails, in second.
	Timeout int `pulumi:"timeout"`
}

// ApigChannelHealthCheckInput is an input type that accepts ApigChannelHealthCheckArgs and ApigChannelHealthCheckOutput values.
// You can construct a concrete instance of `ApigChannelHealthCheckInput` via:
//
//	ApigChannelHealthCheckArgs{...}
type ApigChannelHealthCheckInput interface {
	pulumi.Input

	ToApigChannelHealthCheckOutput() ApigChannelHealthCheckOutput
	ToApigChannelHealthCheckOutputWithContext(context.Context) ApigChannelHealthCheckOutput
}

type ApigChannelHealthCheckArgs struct {
	// Whether to enable two-way authentication.
	EnableClientSsl pulumi.BoolPtrInput `pulumi:"enableClientSsl"`
	// The response codes for determining a successful HTTP response.
	HttpCodes pulumi.StringPtrInput `pulumi:"httpCodes"`
	// The interval between consecutive check, in second.
	Interval pulumi.IntInput `pulumi:"interval"`
	// The request method for health check.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The destination path for health check.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The destination host port for health check.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The rotocol for performing health check on backend servers.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The status of health check.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// The unhealthy threshold, which refers to the number of consecutive failed check required for a backend server to be considered unhealthy.
	ThresholdAbnormal pulumi.IntInput `pulumi:"thresholdAbnormal"`
	// The the healthy threshold, which refers to the number of consecutive successful checks required for a backend server to be considered healthy.
	ThresholdNormal pulumi.IntInput `pulumi:"thresholdNormal"`
	// The timeout for determining whether a health check fails, in second.
	Timeout pulumi.IntInput `pulumi:"timeout"`
}

func (ApigChannelHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelHealthCheck)(nil)).Elem()
}

func (i ApigChannelHealthCheckArgs) ToApigChannelHealthCheckOutput() ApigChannelHealthCheckOutput {
	return i.ToApigChannelHealthCheckOutputWithContext(context.Background())
}

func (i ApigChannelHealthCheckArgs) ToApigChannelHealthCheckOutputWithContext(ctx context.Context) ApigChannelHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelHealthCheckOutput)
}

func (i ApigChannelHealthCheckArgs) ToApigChannelHealthCheckPtrOutput() ApigChannelHealthCheckPtrOutput {
	return i.ToApigChannelHealthCheckPtrOutputWithContext(context.Background())
}

func (i ApigChannelHealthCheckArgs) ToApigChannelHealthCheckPtrOutputWithContext(ctx context.Context) ApigChannelHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelHealthCheckOutput).ToApigChannelHealthCheckPtrOutputWithContext(ctx)
}

// ApigChannelHealthCheckPtrInput is an input type that accepts ApigChannelHealthCheckArgs, ApigChannelHealthCheckPtr and ApigChannelHealthCheckPtrOutput values.
// You can construct a concrete instance of `ApigChannelHealthCheckPtrInput` via:
//
//	        ApigChannelHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ApigChannelHealthCheckPtrInput interface {
	pulumi.Input

	ToApigChannelHealthCheckPtrOutput() ApigChannelHealthCheckPtrOutput
	ToApigChannelHealthCheckPtrOutputWithContext(context.Context) ApigChannelHealthCheckPtrOutput
}

type apigChannelHealthCheckPtrType ApigChannelHealthCheckArgs

func ApigChannelHealthCheckPtr(v *ApigChannelHealthCheckArgs) ApigChannelHealthCheckPtrInput {
	return (*apigChannelHealthCheckPtrType)(v)
}

func (*apigChannelHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelHealthCheck)(nil)).Elem()
}

func (i *apigChannelHealthCheckPtrType) ToApigChannelHealthCheckPtrOutput() ApigChannelHealthCheckPtrOutput {
	return i.ToApigChannelHealthCheckPtrOutputWithContext(context.Background())
}

func (i *apigChannelHealthCheckPtrType) ToApigChannelHealthCheckPtrOutputWithContext(ctx context.Context) ApigChannelHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelHealthCheckPtrOutput)
}

type ApigChannelHealthCheckOutput struct{ *pulumi.OutputState }

func (ApigChannelHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelHealthCheck)(nil)).Elem()
}

func (o ApigChannelHealthCheckOutput) ToApigChannelHealthCheckOutput() ApigChannelHealthCheckOutput {
	return o
}

func (o ApigChannelHealthCheckOutput) ToApigChannelHealthCheckOutputWithContext(ctx context.Context) ApigChannelHealthCheckOutput {
	return o
}

func (o ApigChannelHealthCheckOutput) ToApigChannelHealthCheckPtrOutput() ApigChannelHealthCheckPtrOutput {
	return o.ToApigChannelHealthCheckPtrOutputWithContext(context.Background())
}

func (o ApigChannelHealthCheckOutput) ToApigChannelHealthCheckPtrOutputWithContext(ctx context.Context) ApigChannelHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApigChannelHealthCheck) *ApigChannelHealthCheck {
		return &v
	}).(ApigChannelHealthCheckPtrOutput)
}

// Whether to enable two-way authentication.
func (o ApigChannelHealthCheckOutput) EnableClientSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) *bool { return v.EnableClientSsl }).(pulumi.BoolPtrOutput)
}

// The response codes for determining a successful HTTP response.
func (o ApigChannelHealthCheckOutput) HttpCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) *string { return v.HttpCodes }).(pulumi.StringPtrOutput)
}

// The interval between consecutive check, in second.
func (o ApigChannelHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

// The request method for health check.
func (o ApigChannelHealthCheckOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The destination path for health check.
func (o ApigChannelHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The destination host port for health check.
func (o ApigChannelHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The rotocol for performing health check on backend servers.
func (o ApigChannelHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The status of health check.
func (o ApigChannelHealthCheckOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// The unhealthy threshold, which refers to the number of consecutive failed check required for a backend server to be considered unhealthy.
func (o ApigChannelHealthCheckOutput) ThresholdAbnormal() pulumi.IntOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) int { return v.ThresholdAbnormal }).(pulumi.IntOutput)
}

// The the healthy threshold, which refers to the number of consecutive successful checks required for a backend server to be considered healthy.
func (o ApigChannelHealthCheckOutput) ThresholdNormal() pulumi.IntOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) int { return v.ThresholdNormal }).(pulumi.IntOutput)
}

// The timeout for determining whether a health check fails, in second.
func (o ApigChannelHealthCheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v ApigChannelHealthCheck) int { return v.Timeout }).(pulumi.IntOutput)
}

type ApigChannelHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ApigChannelHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelHealthCheck)(nil)).Elem()
}

func (o ApigChannelHealthCheckPtrOutput) ToApigChannelHealthCheckPtrOutput() ApigChannelHealthCheckPtrOutput {
	return o
}

func (o ApigChannelHealthCheckPtrOutput) ToApigChannelHealthCheckPtrOutputWithContext(ctx context.Context) ApigChannelHealthCheckPtrOutput {
	return o
}

func (o ApigChannelHealthCheckPtrOutput) Elem() ApigChannelHealthCheckOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) ApigChannelHealthCheck {
		if v != nil {
			return *v
		}
		var ret ApigChannelHealthCheck
		return ret
	}).(ApigChannelHealthCheckOutput)
}

// Whether to enable two-way authentication.
func (o ApigChannelHealthCheckPtrOutput) EnableClientSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.EnableClientSsl
	}).(pulumi.BoolPtrOutput)
}

// The response codes for determining a successful HTTP response.
func (o ApigChannelHealthCheckPtrOutput) HttpCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.HttpCodes
	}).(pulumi.StringPtrOutput)
}

// The interval between consecutive check, in second.
func (o ApigChannelHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// The request method for health check.
func (o ApigChannelHealthCheckPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The destination path for health check.
func (o ApigChannelHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The destination host port for health check.
func (o ApigChannelHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The rotocol for performing health check on backend servers.
func (o ApigChannelHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The status of health check.
func (o ApigChannelHealthCheckPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// The unhealthy threshold, which refers to the number of consecutive failed check required for a backend server to be considered unhealthy.
func (o ApigChannelHealthCheckPtrOutput) ThresholdAbnormal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.ThresholdAbnormal
	}).(pulumi.IntPtrOutput)
}

// The the healthy threshold, which refers to the number of consecutive successful checks required for a backend server to be considered healthy.
func (o ApigChannelHealthCheckPtrOutput) ThresholdNormal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.ThresholdNormal
	}).(pulumi.IntPtrOutput)
}

// The timeout for determining whether a health check fails, in second.
func (o ApigChannelHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApigChannelHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ApigChannelMember struct {
	// The group name of the backend server.
	GroupName *string `pulumi:"groupName"`
	// The IP address of the backend server.
	Host *string `pulumi:"host"`
	// The ID of the backend server.
	Id *string `pulumi:"id"`
	// Whether this member is the backup member.
	IsBackup *bool `pulumi:"isBackup"`
	// The name of the backend server.
	Name *string `pulumi:"name"`
	// The port of the backend server.
	Port *int `pulumi:"port"`
	// The status of the backend server.
	Status *int `pulumi:"status"`
	// The weight of current backend server.
	Weight *int `pulumi:"weight"`
}

// ApigChannelMemberInput is an input type that accepts ApigChannelMemberArgs and ApigChannelMemberOutput values.
// You can construct a concrete instance of `ApigChannelMemberInput` via:
//
//	ApigChannelMemberArgs{...}
type ApigChannelMemberInput interface {
	pulumi.Input

	ToApigChannelMemberOutput() ApigChannelMemberOutput
	ToApigChannelMemberOutputWithContext(context.Context) ApigChannelMemberOutput
}

type ApigChannelMemberArgs struct {
	// The group name of the backend server.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The IP address of the backend server.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The ID of the backend server.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether this member is the backup member.
	IsBackup pulumi.BoolPtrInput `pulumi:"isBackup"`
	// The name of the backend server.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port of the backend server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The status of the backend server.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// The weight of current backend server.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ApigChannelMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMember)(nil)).Elem()
}

func (i ApigChannelMemberArgs) ToApigChannelMemberOutput() ApigChannelMemberOutput {
	return i.ToApigChannelMemberOutputWithContext(context.Background())
}

func (i ApigChannelMemberArgs) ToApigChannelMemberOutputWithContext(ctx context.Context) ApigChannelMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMemberOutput)
}

// ApigChannelMemberArrayInput is an input type that accepts ApigChannelMemberArray and ApigChannelMemberArrayOutput values.
// You can construct a concrete instance of `ApigChannelMemberArrayInput` via:
//
//	ApigChannelMemberArray{ ApigChannelMemberArgs{...} }
type ApigChannelMemberArrayInput interface {
	pulumi.Input

	ToApigChannelMemberArrayOutput() ApigChannelMemberArrayOutput
	ToApigChannelMemberArrayOutputWithContext(context.Context) ApigChannelMemberArrayOutput
}

type ApigChannelMemberArray []ApigChannelMemberInput

func (ApigChannelMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigChannelMember)(nil)).Elem()
}

func (i ApigChannelMemberArray) ToApigChannelMemberArrayOutput() ApigChannelMemberArrayOutput {
	return i.ToApigChannelMemberArrayOutputWithContext(context.Background())
}

func (i ApigChannelMemberArray) ToApigChannelMemberArrayOutputWithContext(ctx context.Context) ApigChannelMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMemberArrayOutput)
}

type ApigChannelMemberOutput struct{ *pulumi.OutputState }

func (ApigChannelMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMember)(nil)).Elem()
}

func (o ApigChannelMemberOutput) ToApigChannelMemberOutput() ApigChannelMemberOutput {
	return o
}

func (o ApigChannelMemberOutput) ToApigChannelMemberOutputWithContext(ctx context.Context) ApigChannelMemberOutput {
	return o
}

// The group name of the backend server.
func (o ApigChannelMemberOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The IP address of the backend server.
func (o ApigChannelMemberOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The ID of the backend server.
func (o ApigChannelMemberOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether this member is the backup member.
func (o ApigChannelMemberOutput) IsBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *bool { return v.IsBackup }).(pulumi.BoolPtrOutput)
}

// The name of the backend server.
func (o ApigChannelMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port of the backend server.
func (o ApigChannelMemberOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The status of the backend server.
func (o ApigChannelMemberOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// The weight of current backend server.
func (o ApigChannelMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigChannelMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ApigChannelMemberArrayOutput struct{ *pulumi.OutputState }

func (ApigChannelMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigChannelMember)(nil)).Elem()
}

func (o ApigChannelMemberArrayOutput) ToApigChannelMemberArrayOutput() ApigChannelMemberArrayOutput {
	return o
}

func (o ApigChannelMemberArrayOutput) ToApigChannelMemberArrayOutputWithContext(ctx context.Context) ApigChannelMemberArrayOutput {
	return o
}

func (o ApigChannelMemberArrayOutput) Index(i pulumi.IntInput) ApigChannelMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigChannelMember {
		return vs[0].([]ApigChannelMember)[vs[1].(int)]
	}).(ApigChannelMemberOutput)
}

type ApigChannelMemberGroup struct {
	// The description of the member group.
	Description *string `pulumi:"description"`
	// The microservice tags of the backend server group.
	MicroserviceLabels map[string]string `pulumi:"microserviceLabels"`
	// The microservice port of the backend server group.
	MicroservicePort *int `pulumi:"microservicePort"`
	// The microservice version of the backend server group.
	MicroserviceVersion *string `pulumi:"microserviceVersion"`
	// The name of the member group.
	Name string `pulumi:"name"`
	// The ID of the reference load balance channel.
	ReferenceVpcChannelId *string `pulumi:"referenceVpcChannelId"`
	// The weight of the current member group.
	Weight *int `pulumi:"weight"`
}

// ApigChannelMemberGroupInput is an input type that accepts ApigChannelMemberGroupArgs and ApigChannelMemberGroupOutput values.
// You can construct a concrete instance of `ApigChannelMemberGroupInput` via:
//
//	ApigChannelMemberGroupArgs{...}
type ApigChannelMemberGroupInput interface {
	pulumi.Input

	ToApigChannelMemberGroupOutput() ApigChannelMemberGroupOutput
	ToApigChannelMemberGroupOutputWithContext(context.Context) ApigChannelMemberGroupOutput
}

type ApigChannelMemberGroupArgs struct {
	// The description of the member group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The microservice tags of the backend server group.
	MicroserviceLabels pulumi.StringMapInput `pulumi:"microserviceLabels"`
	// The microservice port of the backend server group.
	MicroservicePort pulumi.IntPtrInput `pulumi:"microservicePort"`
	// The microservice version of the backend server group.
	MicroserviceVersion pulumi.StringPtrInput `pulumi:"microserviceVersion"`
	// The name of the member group.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the reference load balance channel.
	ReferenceVpcChannelId pulumi.StringPtrInput `pulumi:"referenceVpcChannelId"`
	// The weight of the current member group.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ApigChannelMemberGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMemberGroup)(nil)).Elem()
}

func (i ApigChannelMemberGroupArgs) ToApigChannelMemberGroupOutput() ApigChannelMemberGroupOutput {
	return i.ToApigChannelMemberGroupOutputWithContext(context.Background())
}

func (i ApigChannelMemberGroupArgs) ToApigChannelMemberGroupOutputWithContext(ctx context.Context) ApigChannelMemberGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMemberGroupOutput)
}

// ApigChannelMemberGroupArrayInput is an input type that accepts ApigChannelMemberGroupArray and ApigChannelMemberGroupArrayOutput values.
// You can construct a concrete instance of `ApigChannelMemberGroupArrayInput` via:
//
//	ApigChannelMemberGroupArray{ ApigChannelMemberGroupArgs{...} }
type ApigChannelMemberGroupArrayInput interface {
	pulumi.Input

	ToApigChannelMemberGroupArrayOutput() ApigChannelMemberGroupArrayOutput
	ToApigChannelMemberGroupArrayOutputWithContext(context.Context) ApigChannelMemberGroupArrayOutput
}

type ApigChannelMemberGroupArray []ApigChannelMemberGroupInput

func (ApigChannelMemberGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigChannelMemberGroup)(nil)).Elem()
}

func (i ApigChannelMemberGroupArray) ToApigChannelMemberGroupArrayOutput() ApigChannelMemberGroupArrayOutput {
	return i.ToApigChannelMemberGroupArrayOutputWithContext(context.Background())
}

func (i ApigChannelMemberGroupArray) ToApigChannelMemberGroupArrayOutputWithContext(ctx context.Context) ApigChannelMemberGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMemberGroupArrayOutput)
}

type ApigChannelMemberGroupOutput struct{ *pulumi.OutputState }

func (ApigChannelMemberGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMemberGroup)(nil)).Elem()
}

func (o ApigChannelMemberGroupOutput) ToApigChannelMemberGroupOutput() ApigChannelMemberGroupOutput {
	return o
}

func (o ApigChannelMemberGroupOutput) ToApigChannelMemberGroupOutputWithContext(ctx context.Context) ApigChannelMemberGroupOutput {
	return o
}

// The description of the member group.
func (o ApigChannelMemberGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMemberGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The microservice tags of the backend server group.
func (o ApigChannelMemberGroupOutput) MicroserviceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApigChannelMemberGroup) map[string]string { return v.MicroserviceLabels }).(pulumi.StringMapOutput)
}

// The microservice port of the backend server group.
func (o ApigChannelMemberGroupOutput) MicroservicePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigChannelMemberGroup) *int { return v.MicroservicePort }).(pulumi.IntPtrOutput)
}

// The microservice version of the backend server group.
func (o ApigChannelMemberGroupOutput) MicroserviceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMemberGroup) *string { return v.MicroserviceVersion }).(pulumi.StringPtrOutput)
}

// The name of the member group.
func (o ApigChannelMemberGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigChannelMemberGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the reference load balance channel.
func (o ApigChannelMemberGroupOutput) ReferenceVpcChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMemberGroup) *string { return v.ReferenceVpcChannelId }).(pulumi.StringPtrOutput)
}

// The weight of the current member group.
func (o ApigChannelMemberGroupOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigChannelMemberGroup) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ApigChannelMemberGroupArrayOutput struct{ *pulumi.OutputState }

func (ApigChannelMemberGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigChannelMemberGroup)(nil)).Elem()
}

func (o ApigChannelMemberGroupArrayOutput) ToApigChannelMemberGroupArrayOutput() ApigChannelMemberGroupArrayOutput {
	return o
}

func (o ApigChannelMemberGroupArrayOutput) ToApigChannelMemberGroupArrayOutputWithContext(ctx context.Context) ApigChannelMemberGroupArrayOutput {
	return o
}

func (o ApigChannelMemberGroupArrayOutput) Index(i pulumi.IntInput) ApigChannelMemberGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigChannelMemberGroup {
		return vs[0].([]ApigChannelMemberGroup)[vs[1].(int)]
	}).(ApigChannelMemberGroupOutput)
}

type ApigChannelMicroservice struct {
	// The CCE microservice details.
	CceConfig *ApigChannelMicroserviceCceConfig `pulumi:"cceConfig"`
	// schema:Internal; The CSE microservice details.
	CseConfig *ApigChannelMicroserviceCseConfig `pulumi:"cseConfig"`
}

// ApigChannelMicroserviceInput is an input type that accepts ApigChannelMicroserviceArgs and ApigChannelMicroserviceOutput values.
// You can construct a concrete instance of `ApigChannelMicroserviceInput` via:
//
//	ApigChannelMicroserviceArgs{...}
type ApigChannelMicroserviceInput interface {
	pulumi.Input

	ToApigChannelMicroserviceOutput() ApigChannelMicroserviceOutput
	ToApigChannelMicroserviceOutputWithContext(context.Context) ApigChannelMicroserviceOutput
}

type ApigChannelMicroserviceArgs struct {
	// The CCE microservice details.
	CceConfig ApigChannelMicroserviceCceConfigPtrInput `pulumi:"cceConfig"`
	// schema:Internal; The CSE microservice details.
	CseConfig ApigChannelMicroserviceCseConfigPtrInput `pulumi:"cseConfig"`
}

func (ApigChannelMicroserviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMicroservice)(nil)).Elem()
}

func (i ApigChannelMicroserviceArgs) ToApigChannelMicroserviceOutput() ApigChannelMicroserviceOutput {
	return i.ToApigChannelMicroserviceOutputWithContext(context.Background())
}

func (i ApigChannelMicroserviceArgs) ToApigChannelMicroserviceOutputWithContext(ctx context.Context) ApigChannelMicroserviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceOutput)
}

func (i ApigChannelMicroserviceArgs) ToApigChannelMicroservicePtrOutput() ApigChannelMicroservicePtrOutput {
	return i.ToApigChannelMicroservicePtrOutputWithContext(context.Background())
}

func (i ApigChannelMicroserviceArgs) ToApigChannelMicroservicePtrOutputWithContext(ctx context.Context) ApigChannelMicroservicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceOutput).ToApigChannelMicroservicePtrOutputWithContext(ctx)
}

// ApigChannelMicroservicePtrInput is an input type that accepts ApigChannelMicroserviceArgs, ApigChannelMicroservicePtr and ApigChannelMicroservicePtrOutput values.
// You can construct a concrete instance of `ApigChannelMicroservicePtrInput` via:
//
//	        ApigChannelMicroserviceArgs{...}
//
//	or:
//
//	        nil
type ApigChannelMicroservicePtrInput interface {
	pulumi.Input

	ToApigChannelMicroservicePtrOutput() ApigChannelMicroservicePtrOutput
	ToApigChannelMicroservicePtrOutputWithContext(context.Context) ApigChannelMicroservicePtrOutput
}

type apigChannelMicroservicePtrType ApigChannelMicroserviceArgs

func ApigChannelMicroservicePtr(v *ApigChannelMicroserviceArgs) ApigChannelMicroservicePtrInput {
	return (*apigChannelMicroservicePtrType)(v)
}

func (*apigChannelMicroservicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelMicroservice)(nil)).Elem()
}

func (i *apigChannelMicroservicePtrType) ToApigChannelMicroservicePtrOutput() ApigChannelMicroservicePtrOutput {
	return i.ToApigChannelMicroservicePtrOutputWithContext(context.Background())
}

func (i *apigChannelMicroservicePtrType) ToApigChannelMicroservicePtrOutputWithContext(ctx context.Context) ApigChannelMicroservicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroservicePtrOutput)
}

type ApigChannelMicroserviceOutput struct{ *pulumi.OutputState }

func (ApigChannelMicroserviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMicroservice)(nil)).Elem()
}

func (o ApigChannelMicroserviceOutput) ToApigChannelMicroserviceOutput() ApigChannelMicroserviceOutput {
	return o
}

func (o ApigChannelMicroserviceOutput) ToApigChannelMicroserviceOutputWithContext(ctx context.Context) ApigChannelMicroserviceOutput {
	return o
}

func (o ApigChannelMicroserviceOutput) ToApigChannelMicroservicePtrOutput() ApigChannelMicroservicePtrOutput {
	return o.ToApigChannelMicroservicePtrOutputWithContext(context.Background())
}

func (o ApigChannelMicroserviceOutput) ToApigChannelMicroservicePtrOutputWithContext(ctx context.Context) ApigChannelMicroservicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApigChannelMicroservice) *ApigChannelMicroservice {
		return &v
	}).(ApigChannelMicroservicePtrOutput)
}

// The CCE microservice details.
func (o ApigChannelMicroserviceOutput) CceConfig() ApigChannelMicroserviceCceConfigPtrOutput {
	return o.ApplyT(func(v ApigChannelMicroservice) *ApigChannelMicroserviceCceConfig { return v.CceConfig }).(ApigChannelMicroserviceCceConfigPtrOutput)
}

// schema:Internal; The CSE microservice details.
func (o ApigChannelMicroserviceOutput) CseConfig() ApigChannelMicroserviceCseConfigPtrOutput {
	return o.ApplyT(func(v ApigChannelMicroservice) *ApigChannelMicroserviceCseConfig { return v.CseConfig }).(ApigChannelMicroserviceCseConfigPtrOutput)
}

type ApigChannelMicroservicePtrOutput struct{ *pulumi.OutputState }

func (ApigChannelMicroservicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelMicroservice)(nil)).Elem()
}

func (o ApigChannelMicroservicePtrOutput) ToApigChannelMicroservicePtrOutput() ApigChannelMicroservicePtrOutput {
	return o
}

func (o ApigChannelMicroservicePtrOutput) ToApigChannelMicroservicePtrOutputWithContext(ctx context.Context) ApigChannelMicroservicePtrOutput {
	return o
}

func (o ApigChannelMicroservicePtrOutput) Elem() ApigChannelMicroserviceOutput {
	return o.ApplyT(func(v *ApigChannelMicroservice) ApigChannelMicroservice {
		if v != nil {
			return *v
		}
		var ret ApigChannelMicroservice
		return ret
	}).(ApigChannelMicroserviceOutput)
}

// The CCE microservice details.
func (o ApigChannelMicroservicePtrOutput) CceConfig() ApigChannelMicroserviceCceConfigPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroservice) *ApigChannelMicroserviceCceConfig {
		if v == nil {
			return nil
		}
		return v.CceConfig
	}).(ApigChannelMicroserviceCceConfigPtrOutput)
}

// schema:Internal; The CSE microservice details.
func (o ApigChannelMicroservicePtrOutput) CseConfig() ApigChannelMicroserviceCseConfigPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroservice) *ApigChannelMicroserviceCseConfig {
		if v == nil {
			return nil
		}
		return v.CseConfig
	}).(ApigChannelMicroserviceCseConfigPtrOutput)
}

type ApigChannelMicroserviceCceConfig struct {
	// The ID of the CCE cluster.
	ClusterId string `pulumi:"clusterId"`
	// The service label key.
	LabelKey *string `pulumi:"labelKey"`
	// The service label value.
	LabelValue *string `pulumi:"labelValue"`
	// The name of the CCE namespace.
	Namespace string `pulumi:"namespace"`
	// The workload name.
	WorkloadName *string `pulumi:"workloadName"`
	// The workload type.
	WorkloadType string `pulumi:"workloadType"`
}

// ApigChannelMicroserviceCceConfigInput is an input type that accepts ApigChannelMicroserviceCceConfigArgs and ApigChannelMicroserviceCceConfigOutput values.
// You can construct a concrete instance of `ApigChannelMicroserviceCceConfigInput` via:
//
//	ApigChannelMicroserviceCceConfigArgs{...}
type ApigChannelMicroserviceCceConfigInput interface {
	pulumi.Input

	ToApigChannelMicroserviceCceConfigOutput() ApigChannelMicroserviceCceConfigOutput
	ToApigChannelMicroserviceCceConfigOutputWithContext(context.Context) ApigChannelMicroserviceCceConfigOutput
}

type ApigChannelMicroserviceCceConfigArgs struct {
	// The ID of the CCE cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The service label key.
	LabelKey pulumi.StringPtrInput `pulumi:"labelKey"`
	// The service label value.
	LabelValue pulumi.StringPtrInput `pulumi:"labelValue"`
	// The name of the CCE namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The workload name.
	WorkloadName pulumi.StringPtrInput `pulumi:"workloadName"`
	// The workload type.
	WorkloadType pulumi.StringInput `pulumi:"workloadType"`
}

func (ApigChannelMicroserviceCceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMicroserviceCceConfig)(nil)).Elem()
}

func (i ApigChannelMicroserviceCceConfigArgs) ToApigChannelMicroserviceCceConfigOutput() ApigChannelMicroserviceCceConfigOutput {
	return i.ToApigChannelMicroserviceCceConfigOutputWithContext(context.Background())
}

func (i ApigChannelMicroserviceCceConfigArgs) ToApigChannelMicroserviceCceConfigOutputWithContext(ctx context.Context) ApigChannelMicroserviceCceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceCceConfigOutput)
}

func (i ApigChannelMicroserviceCceConfigArgs) ToApigChannelMicroserviceCceConfigPtrOutput() ApigChannelMicroserviceCceConfigPtrOutput {
	return i.ToApigChannelMicroserviceCceConfigPtrOutputWithContext(context.Background())
}

func (i ApigChannelMicroserviceCceConfigArgs) ToApigChannelMicroserviceCceConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceCceConfigOutput).ToApigChannelMicroserviceCceConfigPtrOutputWithContext(ctx)
}

// ApigChannelMicroserviceCceConfigPtrInput is an input type that accepts ApigChannelMicroserviceCceConfigArgs, ApigChannelMicroserviceCceConfigPtr and ApigChannelMicroserviceCceConfigPtrOutput values.
// You can construct a concrete instance of `ApigChannelMicroserviceCceConfigPtrInput` via:
//
//	        ApigChannelMicroserviceCceConfigArgs{...}
//
//	or:
//
//	        nil
type ApigChannelMicroserviceCceConfigPtrInput interface {
	pulumi.Input

	ToApigChannelMicroserviceCceConfigPtrOutput() ApigChannelMicroserviceCceConfigPtrOutput
	ToApigChannelMicroserviceCceConfigPtrOutputWithContext(context.Context) ApigChannelMicroserviceCceConfigPtrOutput
}

type apigChannelMicroserviceCceConfigPtrType ApigChannelMicroserviceCceConfigArgs

func ApigChannelMicroserviceCceConfigPtr(v *ApigChannelMicroserviceCceConfigArgs) ApigChannelMicroserviceCceConfigPtrInput {
	return (*apigChannelMicroserviceCceConfigPtrType)(v)
}

func (*apigChannelMicroserviceCceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelMicroserviceCceConfig)(nil)).Elem()
}

func (i *apigChannelMicroserviceCceConfigPtrType) ToApigChannelMicroserviceCceConfigPtrOutput() ApigChannelMicroserviceCceConfigPtrOutput {
	return i.ToApigChannelMicroserviceCceConfigPtrOutputWithContext(context.Background())
}

func (i *apigChannelMicroserviceCceConfigPtrType) ToApigChannelMicroserviceCceConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceCceConfigPtrOutput)
}

type ApigChannelMicroserviceCceConfigOutput struct{ *pulumi.OutputState }

func (ApigChannelMicroserviceCceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMicroserviceCceConfig)(nil)).Elem()
}

func (o ApigChannelMicroserviceCceConfigOutput) ToApigChannelMicroserviceCceConfigOutput() ApigChannelMicroserviceCceConfigOutput {
	return o
}

func (o ApigChannelMicroserviceCceConfigOutput) ToApigChannelMicroserviceCceConfigOutputWithContext(ctx context.Context) ApigChannelMicroserviceCceConfigOutput {
	return o
}

func (o ApigChannelMicroserviceCceConfigOutput) ToApigChannelMicroserviceCceConfigPtrOutput() ApigChannelMicroserviceCceConfigPtrOutput {
	return o.ToApigChannelMicroserviceCceConfigPtrOutputWithContext(context.Background())
}

func (o ApigChannelMicroserviceCceConfigOutput) ToApigChannelMicroserviceCceConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApigChannelMicroserviceCceConfig) *ApigChannelMicroserviceCceConfig {
		return &v
	}).(ApigChannelMicroserviceCceConfigPtrOutput)
}

// The ID of the CCE cluster.
func (o ApigChannelMicroserviceCceConfigOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCceConfig) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The service label key.
func (o ApigChannelMicroserviceCceConfigOutput) LabelKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCceConfig) *string { return v.LabelKey }).(pulumi.StringPtrOutput)
}

// The service label value.
func (o ApigChannelMicroserviceCceConfigOutput) LabelValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCceConfig) *string { return v.LabelValue }).(pulumi.StringPtrOutput)
}

// The name of the CCE namespace.
func (o ApigChannelMicroserviceCceConfigOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCceConfig) string { return v.Namespace }).(pulumi.StringOutput)
}

// The workload name.
func (o ApigChannelMicroserviceCceConfigOutput) WorkloadName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCceConfig) *string { return v.WorkloadName }).(pulumi.StringPtrOutput)
}

// The workload type.
func (o ApigChannelMicroserviceCceConfigOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCceConfig) string { return v.WorkloadType }).(pulumi.StringOutput)
}

type ApigChannelMicroserviceCceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApigChannelMicroserviceCceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelMicroserviceCceConfig)(nil)).Elem()
}

func (o ApigChannelMicroserviceCceConfigPtrOutput) ToApigChannelMicroserviceCceConfigPtrOutput() ApigChannelMicroserviceCceConfigPtrOutput {
	return o
}

func (o ApigChannelMicroserviceCceConfigPtrOutput) ToApigChannelMicroserviceCceConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCceConfigPtrOutput {
	return o
}

func (o ApigChannelMicroserviceCceConfigPtrOutput) Elem() ApigChannelMicroserviceCceConfigOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCceConfig) ApigChannelMicroserviceCceConfig {
		if v != nil {
			return *v
		}
		var ret ApigChannelMicroserviceCceConfig
		return ret
	}).(ApigChannelMicroserviceCceConfigOutput)
}

// The ID of the CCE cluster.
func (o ApigChannelMicroserviceCceConfigPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// The service label key.
func (o ApigChannelMicroserviceCceConfigPtrOutput) LabelKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCceConfig) *string {
		if v == nil {
			return nil
		}
		return v.LabelKey
	}).(pulumi.StringPtrOutput)
}

// The service label value.
func (o ApigChannelMicroserviceCceConfigPtrOutput) LabelValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCceConfig) *string {
		if v == nil {
			return nil
		}
		return v.LabelValue
	}).(pulumi.StringPtrOutput)
}

// The name of the CCE namespace.
func (o ApigChannelMicroserviceCceConfigPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The workload name.
func (o ApigChannelMicroserviceCceConfigPtrOutput) WorkloadName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCceConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadName
	}).(pulumi.StringPtrOutput)
}

// The workload type.
func (o ApigChannelMicroserviceCceConfigPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

type ApigChannelMicroserviceCseConfig struct {
	// schema:Internal; The microservice engine ID.
	EngineId string `pulumi:"engineId"`
	// schema:Internal; The microservice ID.
	ServiceId string `pulumi:"serviceId"`
}

// ApigChannelMicroserviceCseConfigInput is an input type that accepts ApigChannelMicroserviceCseConfigArgs and ApigChannelMicroserviceCseConfigOutput values.
// You can construct a concrete instance of `ApigChannelMicroserviceCseConfigInput` via:
//
//	ApigChannelMicroserviceCseConfigArgs{...}
type ApigChannelMicroserviceCseConfigInput interface {
	pulumi.Input

	ToApigChannelMicroserviceCseConfigOutput() ApigChannelMicroserviceCseConfigOutput
	ToApigChannelMicroserviceCseConfigOutputWithContext(context.Context) ApigChannelMicroserviceCseConfigOutput
}

type ApigChannelMicroserviceCseConfigArgs struct {
	// schema:Internal; The microservice engine ID.
	EngineId pulumi.StringInput `pulumi:"engineId"`
	// schema:Internal; The microservice ID.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (ApigChannelMicroserviceCseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMicroserviceCseConfig)(nil)).Elem()
}

func (i ApigChannelMicroserviceCseConfigArgs) ToApigChannelMicroserviceCseConfigOutput() ApigChannelMicroserviceCseConfigOutput {
	return i.ToApigChannelMicroserviceCseConfigOutputWithContext(context.Background())
}

func (i ApigChannelMicroserviceCseConfigArgs) ToApigChannelMicroserviceCseConfigOutputWithContext(ctx context.Context) ApigChannelMicroserviceCseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceCseConfigOutput)
}

func (i ApigChannelMicroserviceCseConfigArgs) ToApigChannelMicroserviceCseConfigPtrOutput() ApigChannelMicroserviceCseConfigPtrOutput {
	return i.ToApigChannelMicroserviceCseConfigPtrOutputWithContext(context.Background())
}

func (i ApigChannelMicroserviceCseConfigArgs) ToApigChannelMicroserviceCseConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceCseConfigOutput).ToApigChannelMicroserviceCseConfigPtrOutputWithContext(ctx)
}

// ApigChannelMicroserviceCseConfigPtrInput is an input type that accepts ApigChannelMicroserviceCseConfigArgs, ApigChannelMicroserviceCseConfigPtr and ApigChannelMicroserviceCseConfigPtrOutput values.
// You can construct a concrete instance of `ApigChannelMicroserviceCseConfigPtrInput` via:
//
//	        ApigChannelMicroserviceCseConfigArgs{...}
//
//	or:
//
//	        nil
type ApigChannelMicroserviceCseConfigPtrInput interface {
	pulumi.Input

	ToApigChannelMicroserviceCseConfigPtrOutput() ApigChannelMicroserviceCseConfigPtrOutput
	ToApigChannelMicroserviceCseConfigPtrOutputWithContext(context.Context) ApigChannelMicroserviceCseConfigPtrOutput
}

type apigChannelMicroserviceCseConfigPtrType ApigChannelMicroserviceCseConfigArgs

func ApigChannelMicroserviceCseConfigPtr(v *ApigChannelMicroserviceCseConfigArgs) ApigChannelMicroserviceCseConfigPtrInput {
	return (*apigChannelMicroserviceCseConfigPtrType)(v)
}

func (*apigChannelMicroserviceCseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelMicroserviceCseConfig)(nil)).Elem()
}

func (i *apigChannelMicroserviceCseConfigPtrType) ToApigChannelMicroserviceCseConfigPtrOutput() ApigChannelMicroserviceCseConfigPtrOutput {
	return i.ToApigChannelMicroserviceCseConfigPtrOutputWithContext(context.Background())
}

func (i *apigChannelMicroserviceCseConfigPtrType) ToApigChannelMicroserviceCseConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigChannelMicroserviceCseConfigPtrOutput)
}

type ApigChannelMicroserviceCseConfigOutput struct{ *pulumi.OutputState }

func (ApigChannelMicroserviceCseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigChannelMicroserviceCseConfig)(nil)).Elem()
}

func (o ApigChannelMicroserviceCseConfigOutput) ToApigChannelMicroserviceCseConfigOutput() ApigChannelMicroserviceCseConfigOutput {
	return o
}

func (o ApigChannelMicroserviceCseConfigOutput) ToApigChannelMicroserviceCseConfigOutputWithContext(ctx context.Context) ApigChannelMicroserviceCseConfigOutput {
	return o
}

func (o ApigChannelMicroserviceCseConfigOutput) ToApigChannelMicroserviceCseConfigPtrOutput() ApigChannelMicroserviceCseConfigPtrOutput {
	return o.ToApigChannelMicroserviceCseConfigPtrOutputWithContext(context.Background())
}

func (o ApigChannelMicroserviceCseConfigOutput) ToApigChannelMicroserviceCseConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApigChannelMicroserviceCseConfig) *ApigChannelMicroserviceCseConfig {
		return &v
	}).(ApigChannelMicroserviceCseConfigPtrOutput)
}

// schema:Internal; The microservice engine ID.
func (o ApigChannelMicroserviceCseConfigOutput) EngineId() pulumi.StringOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCseConfig) string { return v.EngineId }).(pulumi.StringOutput)
}

// schema:Internal; The microservice ID.
func (o ApigChannelMicroserviceCseConfigOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v ApigChannelMicroserviceCseConfig) string { return v.ServiceId }).(pulumi.StringOutput)
}

type ApigChannelMicroserviceCseConfigPtrOutput struct{ *pulumi.OutputState }

func (ApigChannelMicroserviceCseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigChannelMicroserviceCseConfig)(nil)).Elem()
}

func (o ApigChannelMicroserviceCseConfigPtrOutput) ToApigChannelMicroserviceCseConfigPtrOutput() ApigChannelMicroserviceCseConfigPtrOutput {
	return o
}

func (o ApigChannelMicroserviceCseConfigPtrOutput) ToApigChannelMicroserviceCseConfigPtrOutputWithContext(ctx context.Context) ApigChannelMicroserviceCseConfigPtrOutput {
	return o
}

func (o ApigChannelMicroserviceCseConfigPtrOutput) Elem() ApigChannelMicroserviceCseConfigOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCseConfig) ApigChannelMicroserviceCseConfig {
		if v != nil {
			return *v
		}
		var ret ApigChannelMicroserviceCseConfig
		return ret
	}).(ApigChannelMicroserviceCseConfigOutput)
}

// schema:Internal; The microservice engine ID.
func (o ApigChannelMicroserviceCseConfigPtrOutput) EngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EngineId
	}).(pulumi.StringPtrOutput)
}

// schema:Internal; The microservice ID.
func (o ApigChannelMicroserviceCseConfigPtrOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigChannelMicroserviceCseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceId
	}).(pulumi.StringPtrOutput)
}

type ApigCustomAuthorizerIdentity struct {
	// The parameter location.
	Location string `pulumi:"location"`
	// The name of the parameter to be verified.
	Name string `pulumi:"name"`
	// The parameter verification expression.
	Validation *string `pulumi:"validation"`
}

// ApigCustomAuthorizerIdentityInput is an input type that accepts ApigCustomAuthorizerIdentityArgs and ApigCustomAuthorizerIdentityOutput values.
// You can construct a concrete instance of `ApigCustomAuthorizerIdentityInput` via:
//
//	ApigCustomAuthorizerIdentityArgs{...}
type ApigCustomAuthorizerIdentityInput interface {
	pulumi.Input

	ToApigCustomAuthorizerIdentityOutput() ApigCustomAuthorizerIdentityOutput
	ToApigCustomAuthorizerIdentityOutputWithContext(context.Context) ApigCustomAuthorizerIdentityOutput
}

type ApigCustomAuthorizerIdentityArgs struct {
	// The parameter location.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the parameter to be verified.
	Name pulumi.StringInput `pulumi:"name"`
	// The parameter verification expression.
	Validation pulumi.StringPtrInput `pulumi:"validation"`
}

func (ApigCustomAuthorizerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigCustomAuthorizerIdentity)(nil)).Elem()
}

func (i ApigCustomAuthorizerIdentityArgs) ToApigCustomAuthorizerIdentityOutput() ApigCustomAuthorizerIdentityOutput {
	return i.ToApigCustomAuthorizerIdentityOutputWithContext(context.Background())
}

func (i ApigCustomAuthorizerIdentityArgs) ToApigCustomAuthorizerIdentityOutputWithContext(ctx context.Context) ApigCustomAuthorizerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigCustomAuthorizerIdentityOutput)
}

// ApigCustomAuthorizerIdentityArrayInput is an input type that accepts ApigCustomAuthorizerIdentityArray and ApigCustomAuthorizerIdentityArrayOutput values.
// You can construct a concrete instance of `ApigCustomAuthorizerIdentityArrayInput` via:
//
//	ApigCustomAuthorizerIdentityArray{ ApigCustomAuthorizerIdentityArgs{...} }
type ApigCustomAuthorizerIdentityArrayInput interface {
	pulumi.Input

	ToApigCustomAuthorizerIdentityArrayOutput() ApigCustomAuthorizerIdentityArrayOutput
	ToApigCustomAuthorizerIdentityArrayOutputWithContext(context.Context) ApigCustomAuthorizerIdentityArrayOutput
}

type ApigCustomAuthorizerIdentityArray []ApigCustomAuthorizerIdentityInput

func (ApigCustomAuthorizerIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigCustomAuthorizerIdentity)(nil)).Elem()
}

func (i ApigCustomAuthorizerIdentityArray) ToApigCustomAuthorizerIdentityArrayOutput() ApigCustomAuthorizerIdentityArrayOutput {
	return i.ToApigCustomAuthorizerIdentityArrayOutputWithContext(context.Background())
}

func (i ApigCustomAuthorizerIdentityArray) ToApigCustomAuthorizerIdentityArrayOutputWithContext(ctx context.Context) ApigCustomAuthorizerIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigCustomAuthorizerIdentityArrayOutput)
}

type ApigCustomAuthorizerIdentityOutput struct{ *pulumi.OutputState }

func (ApigCustomAuthorizerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigCustomAuthorizerIdentity)(nil)).Elem()
}

func (o ApigCustomAuthorizerIdentityOutput) ToApigCustomAuthorizerIdentityOutput() ApigCustomAuthorizerIdentityOutput {
	return o
}

func (o ApigCustomAuthorizerIdentityOutput) ToApigCustomAuthorizerIdentityOutputWithContext(ctx context.Context) ApigCustomAuthorizerIdentityOutput {
	return o
}

// The parameter location.
func (o ApigCustomAuthorizerIdentityOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApigCustomAuthorizerIdentity) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the parameter to be verified.
func (o ApigCustomAuthorizerIdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigCustomAuthorizerIdentity) string { return v.Name }).(pulumi.StringOutput)
}

// The parameter verification expression.
func (o ApigCustomAuthorizerIdentityOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigCustomAuthorizerIdentity) *string { return v.Validation }).(pulumi.StringPtrOutput)
}

type ApigCustomAuthorizerIdentityArrayOutput struct{ *pulumi.OutputState }

func (ApigCustomAuthorizerIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigCustomAuthorizerIdentity)(nil)).Elem()
}

func (o ApigCustomAuthorizerIdentityArrayOutput) ToApigCustomAuthorizerIdentityArrayOutput() ApigCustomAuthorizerIdentityArrayOutput {
	return o
}

func (o ApigCustomAuthorizerIdentityArrayOutput) ToApigCustomAuthorizerIdentityArrayOutputWithContext(ctx context.Context) ApigCustomAuthorizerIdentityArrayOutput {
	return o
}

func (o ApigCustomAuthorizerIdentityArrayOutput) Index(i pulumi.IntInput) ApigCustomAuthorizerIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigCustomAuthorizerIdentity {
		return vs[0].([]ApigCustomAuthorizerIdentity)[vs[1].(int)]
	}).(ApigCustomAuthorizerIdentityOutput)
}

type ApigGroupEnvironment struct {
	// The ID of the environment to which the variables belongs.
	EnvironmentId string `pulumi:"environmentId"`
	// The array of one or more environment variables.
	Variables []ApigGroupEnvironmentVariable `pulumi:"variables"`
}

// ApigGroupEnvironmentInput is an input type that accepts ApigGroupEnvironmentArgs and ApigGroupEnvironmentOutput values.
// You can construct a concrete instance of `ApigGroupEnvironmentInput` via:
//
//	ApigGroupEnvironmentArgs{...}
type ApigGroupEnvironmentInput interface {
	pulumi.Input

	ToApigGroupEnvironmentOutput() ApigGroupEnvironmentOutput
	ToApigGroupEnvironmentOutputWithContext(context.Context) ApigGroupEnvironmentOutput
}

type ApigGroupEnvironmentArgs struct {
	// The ID of the environment to which the variables belongs.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// The array of one or more environment variables.
	Variables ApigGroupEnvironmentVariableArrayInput `pulumi:"variables"`
}

func (ApigGroupEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigGroupEnvironment)(nil)).Elem()
}

func (i ApigGroupEnvironmentArgs) ToApigGroupEnvironmentOutput() ApigGroupEnvironmentOutput {
	return i.ToApigGroupEnvironmentOutputWithContext(context.Background())
}

func (i ApigGroupEnvironmentArgs) ToApigGroupEnvironmentOutputWithContext(ctx context.Context) ApigGroupEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigGroupEnvironmentOutput)
}

// ApigGroupEnvironmentArrayInput is an input type that accepts ApigGroupEnvironmentArray and ApigGroupEnvironmentArrayOutput values.
// You can construct a concrete instance of `ApigGroupEnvironmentArrayInput` via:
//
//	ApigGroupEnvironmentArray{ ApigGroupEnvironmentArgs{...} }
type ApigGroupEnvironmentArrayInput interface {
	pulumi.Input

	ToApigGroupEnvironmentArrayOutput() ApigGroupEnvironmentArrayOutput
	ToApigGroupEnvironmentArrayOutputWithContext(context.Context) ApigGroupEnvironmentArrayOutput
}

type ApigGroupEnvironmentArray []ApigGroupEnvironmentInput

func (ApigGroupEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigGroupEnvironment)(nil)).Elem()
}

func (i ApigGroupEnvironmentArray) ToApigGroupEnvironmentArrayOutput() ApigGroupEnvironmentArrayOutput {
	return i.ToApigGroupEnvironmentArrayOutputWithContext(context.Background())
}

func (i ApigGroupEnvironmentArray) ToApigGroupEnvironmentArrayOutputWithContext(ctx context.Context) ApigGroupEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigGroupEnvironmentArrayOutput)
}

type ApigGroupEnvironmentOutput struct{ *pulumi.OutputState }

func (ApigGroupEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigGroupEnvironment)(nil)).Elem()
}

func (o ApigGroupEnvironmentOutput) ToApigGroupEnvironmentOutput() ApigGroupEnvironmentOutput {
	return o
}

func (o ApigGroupEnvironmentOutput) ToApigGroupEnvironmentOutputWithContext(ctx context.Context) ApigGroupEnvironmentOutput {
	return o
}

// The ID of the environment to which the variables belongs.
func (o ApigGroupEnvironmentOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v ApigGroupEnvironment) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The array of one or more environment variables.
func (o ApigGroupEnvironmentOutput) Variables() ApigGroupEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v ApigGroupEnvironment) []ApigGroupEnvironmentVariable { return v.Variables }).(ApigGroupEnvironmentVariableArrayOutput)
}

type ApigGroupEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ApigGroupEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigGroupEnvironment)(nil)).Elem()
}

func (o ApigGroupEnvironmentArrayOutput) ToApigGroupEnvironmentArrayOutput() ApigGroupEnvironmentArrayOutput {
	return o
}

func (o ApigGroupEnvironmentArrayOutput) ToApigGroupEnvironmentArrayOutputWithContext(ctx context.Context) ApigGroupEnvironmentArrayOutput {
	return o
}

func (o ApigGroupEnvironmentArrayOutput) Index(i pulumi.IntInput) ApigGroupEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigGroupEnvironment {
		return vs[0].([]ApigGroupEnvironment)[vs[1].(int)]
	}).(ApigGroupEnvironmentOutput)
}

type ApigGroupEnvironmentVariable struct {
	// The ID of the variable that the group has.
	Id *string `pulumi:"id"`
	// The variable name.
	Name string `pulumi:"name"`
	// The variable value.
	Value string `pulumi:"value"`
	// schema: Deprecated; The ID of the variable that the group has.
	//
	// Deprecated: Use 'id' instead
	VariableId *string `pulumi:"variableId"`
}

// ApigGroupEnvironmentVariableInput is an input type that accepts ApigGroupEnvironmentVariableArgs and ApigGroupEnvironmentVariableOutput values.
// You can construct a concrete instance of `ApigGroupEnvironmentVariableInput` via:
//
//	ApigGroupEnvironmentVariableArgs{...}
type ApigGroupEnvironmentVariableInput interface {
	pulumi.Input

	ToApigGroupEnvironmentVariableOutput() ApigGroupEnvironmentVariableOutput
	ToApigGroupEnvironmentVariableOutputWithContext(context.Context) ApigGroupEnvironmentVariableOutput
}

type ApigGroupEnvironmentVariableArgs struct {
	// The ID of the variable that the group has.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The variable name.
	Name pulumi.StringInput `pulumi:"name"`
	// The variable value.
	Value pulumi.StringInput `pulumi:"value"`
	// schema: Deprecated; The ID of the variable that the group has.
	//
	// Deprecated: Use 'id' instead
	VariableId pulumi.StringPtrInput `pulumi:"variableId"`
}

func (ApigGroupEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigGroupEnvironmentVariable)(nil)).Elem()
}

func (i ApigGroupEnvironmentVariableArgs) ToApigGroupEnvironmentVariableOutput() ApigGroupEnvironmentVariableOutput {
	return i.ToApigGroupEnvironmentVariableOutputWithContext(context.Background())
}

func (i ApigGroupEnvironmentVariableArgs) ToApigGroupEnvironmentVariableOutputWithContext(ctx context.Context) ApigGroupEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigGroupEnvironmentVariableOutput)
}

// ApigGroupEnvironmentVariableArrayInput is an input type that accepts ApigGroupEnvironmentVariableArray and ApigGroupEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ApigGroupEnvironmentVariableArrayInput` via:
//
//	ApigGroupEnvironmentVariableArray{ ApigGroupEnvironmentVariableArgs{...} }
type ApigGroupEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToApigGroupEnvironmentVariableArrayOutput() ApigGroupEnvironmentVariableArrayOutput
	ToApigGroupEnvironmentVariableArrayOutputWithContext(context.Context) ApigGroupEnvironmentVariableArrayOutput
}

type ApigGroupEnvironmentVariableArray []ApigGroupEnvironmentVariableInput

func (ApigGroupEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigGroupEnvironmentVariable)(nil)).Elem()
}

func (i ApigGroupEnvironmentVariableArray) ToApigGroupEnvironmentVariableArrayOutput() ApigGroupEnvironmentVariableArrayOutput {
	return i.ToApigGroupEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ApigGroupEnvironmentVariableArray) ToApigGroupEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApigGroupEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigGroupEnvironmentVariableArrayOutput)
}

type ApigGroupEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ApigGroupEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigGroupEnvironmentVariable)(nil)).Elem()
}

func (o ApigGroupEnvironmentVariableOutput) ToApigGroupEnvironmentVariableOutput() ApigGroupEnvironmentVariableOutput {
	return o
}

func (o ApigGroupEnvironmentVariableOutput) ToApigGroupEnvironmentVariableOutputWithContext(ctx context.Context) ApigGroupEnvironmentVariableOutput {
	return o
}

// The ID of the variable that the group has.
func (o ApigGroupEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigGroupEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The variable name.
func (o ApigGroupEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigGroupEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// The variable value.
func (o ApigGroupEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigGroupEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

// schema: Deprecated; The ID of the variable that the group has.
//
// Deprecated: Use 'id' instead
func (o ApigGroupEnvironmentVariableOutput) VariableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigGroupEnvironmentVariable) *string { return v.VariableId }).(pulumi.StringPtrOutput)
}

type ApigGroupEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ApigGroupEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigGroupEnvironmentVariable)(nil)).Elem()
}

func (o ApigGroupEnvironmentVariableArrayOutput) ToApigGroupEnvironmentVariableArrayOutput() ApigGroupEnvironmentVariableArrayOutput {
	return o
}

func (o ApigGroupEnvironmentVariableArrayOutput) ToApigGroupEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApigGroupEnvironmentVariableArrayOutput {
	return o
}

func (o ApigGroupEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ApigGroupEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigGroupEnvironmentVariable {
		return vs[0].([]ApigGroupEnvironmentVariable)[vs[1].(int)]
	}).(ApigGroupEnvironmentVariableOutput)
}

type ApigGroupUrlDomain struct {
	IsHttpRedirectToHttps *bool   `pulumi:"isHttpRedirectToHttps"`
	MinSslVersion         *string `pulumi:"minSslVersion"`
	Name                  string  `pulumi:"name"`
}

// ApigGroupUrlDomainInput is an input type that accepts ApigGroupUrlDomainArgs and ApigGroupUrlDomainOutput values.
// You can construct a concrete instance of `ApigGroupUrlDomainInput` via:
//
//	ApigGroupUrlDomainArgs{...}
type ApigGroupUrlDomainInput interface {
	pulumi.Input

	ToApigGroupUrlDomainOutput() ApigGroupUrlDomainOutput
	ToApigGroupUrlDomainOutputWithContext(context.Context) ApigGroupUrlDomainOutput
}

type ApigGroupUrlDomainArgs struct {
	IsHttpRedirectToHttps pulumi.BoolPtrInput   `pulumi:"isHttpRedirectToHttps"`
	MinSslVersion         pulumi.StringPtrInput `pulumi:"minSslVersion"`
	Name                  pulumi.StringInput    `pulumi:"name"`
}

func (ApigGroupUrlDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigGroupUrlDomain)(nil)).Elem()
}

func (i ApigGroupUrlDomainArgs) ToApigGroupUrlDomainOutput() ApigGroupUrlDomainOutput {
	return i.ToApigGroupUrlDomainOutputWithContext(context.Background())
}

func (i ApigGroupUrlDomainArgs) ToApigGroupUrlDomainOutputWithContext(ctx context.Context) ApigGroupUrlDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigGroupUrlDomainOutput)
}

// ApigGroupUrlDomainArrayInput is an input type that accepts ApigGroupUrlDomainArray and ApigGroupUrlDomainArrayOutput values.
// You can construct a concrete instance of `ApigGroupUrlDomainArrayInput` via:
//
//	ApigGroupUrlDomainArray{ ApigGroupUrlDomainArgs{...} }
type ApigGroupUrlDomainArrayInput interface {
	pulumi.Input

	ToApigGroupUrlDomainArrayOutput() ApigGroupUrlDomainArrayOutput
	ToApigGroupUrlDomainArrayOutputWithContext(context.Context) ApigGroupUrlDomainArrayOutput
}

type ApigGroupUrlDomainArray []ApigGroupUrlDomainInput

func (ApigGroupUrlDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigGroupUrlDomain)(nil)).Elem()
}

func (i ApigGroupUrlDomainArray) ToApigGroupUrlDomainArrayOutput() ApigGroupUrlDomainArrayOutput {
	return i.ToApigGroupUrlDomainArrayOutputWithContext(context.Background())
}

func (i ApigGroupUrlDomainArray) ToApigGroupUrlDomainArrayOutputWithContext(ctx context.Context) ApigGroupUrlDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigGroupUrlDomainArrayOutput)
}

type ApigGroupUrlDomainOutput struct{ *pulumi.OutputState }

func (ApigGroupUrlDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigGroupUrlDomain)(nil)).Elem()
}

func (o ApigGroupUrlDomainOutput) ToApigGroupUrlDomainOutput() ApigGroupUrlDomainOutput {
	return o
}

func (o ApigGroupUrlDomainOutput) ToApigGroupUrlDomainOutputWithContext(ctx context.Context) ApigGroupUrlDomainOutput {
	return o
}

func (o ApigGroupUrlDomainOutput) IsHttpRedirectToHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApigGroupUrlDomain) *bool { return v.IsHttpRedirectToHttps }).(pulumi.BoolPtrOutput)
}

func (o ApigGroupUrlDomainOutput) MinSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigGroupUrlDomain) *string { return v.MinSslVersion }).(pulumi.StringPtrOutput)
}

func (o ApigGroupUrlDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigGroupUrlDomain) string { return v.Name }).(pulumi.StringOutput)
}

type ApigGroupUrlDomainArrayOutput struct{ *pulumi.OutputState }

func (ApigGroupUrlDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigGroupUrlDomain)(nil)).Elem()
}

func (o ApigGroupUrlDomainArrayOutput) ToApigGroupUrlDomainArrayOutput() ApigGroupUrlDomainArrayOutput {
	return o
}

func (o ApigGroupUrlDomainArrayOutput) ToApigGroupUrlDomainArrayOutputWithContext(ctx context.Context) ApigGroupUrlDomainArrayOutput {
	return o
}

func (o ApigGroupUrlDomainArrayOutput) Index(i pulumi.IntInput) ApigGroupUrlDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigGroupUrlDomain {
		return vs[0].([]ApigGroupUrlDomain)[vs[1].(int)]
	}).(ApigGroupUrlDomainOutput)
}

type ApigInstanceCustomIngressPort struct {
	// The ID of the custom ingress port.
	Id *string `pulumi:"id"`
	// Specified port of the custom ingress port.
	Port int `pulumi:"port"`
	// Specified protocol of the custom ingress port.
	Protocol string `pulumi:"protocol"`
	// The current status of the custom ingress port.
	Status *string `pulumi:"status"`
}

// ApigInstanceCustomIngressPortInput is an input type that accepts ApigInstanceCustomIngressPortArgs and ApigInstanceCustomIngressPortOutput values.
// You can construct a concrete instance of `ApigInstanceCustomIngressPortInput` via:
//
//	ApigInstanceCustomIngressPortArgs{...}
type ApigInstanceCustomIngressPortInput interface {
	pulumi.Input

	ToApigInstanceCustomIngressPortOutput() ApigInstanceCustomIngressPortOutput
	ToApigInstanceCustomIngressPortOutputWithContext(context.Context) ApigInstanceCustomIngressPortOutput
}

type ApigInstanceCustomIngressPortArgs struct {
	// The ID of the custom ingress port.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specified port of the custom ingress port.
	Port pulumi.IntInput `pulumi:"port"`
	// Specified protocol of the custom ingress port.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The current status of the custom ingress port.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ApigInstanceCustomIngressPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigInstanceCustomIngressPort)(nil)).Elem()
}

func (i ApigInstanceCustomIngressPortArgs) ToApigInstanceCustomIngressPortOutput() ApigInstanceCustomIngressPortOutput {
	return i.ToApigInstanceCustomIngressPortOutputWithContext(context.Background())
}

func (i ApigInstanceCustomIngressPortArgs) ToApigInstanceCustomIngressPortOutputWithContext(ctx context.Context) ApigInstanceCustomIngressPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigInstanceCustomIngressPortOutput)
}

// ApigInstanceCustomIngressPortArrayInput is an input type that accepts ApigInstanceCustomIngressPortArray and ApigInstanceCustomIngressPortArrayOutput values.
// You can construct a concrete instance of `ApigInstanceCustomIngressPortArrayInput` via:
//
//	ApigInstanceCustomIngressPortArray{ ApigInstanceCustomIngressPortArgs{...} }
type ApigInstanceCustomIngressPortArrayInput interface {
	pulumi.Input

	ToApigInstanceCustomIngressPortArrayOutput() ApigInstanceCustomIngressPortArrayOutput
	ToApigInstanceCustomIngressPortArrayOutputWithContext(context.Context) ApigInstanceCustomIngressPortArrayOutput
}

type ApigInstanceCustomIngressPortArray []ApigInstanceCustomIngressPortInput

func (ApigInstanceCustomIngressPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigInstanceCustomIngressPort)(nil)).Elem()
}

func (i ApigInstanceCustomIngressPortArray) ToApigInstanceCustomIngressPortArrayOutput() ApigInstanceCustomIngressPortArrayOutput {
	return i.ToApigInstanceCustomIngressPortArrayOutputWithContext(context.Background())
}

func (i ApigInstanceCustomIngressPortArray) ToApigInstanceCustomIngressPortArrayOutputWithContext(ctx context.Context) ApigInstanceCustomIngressPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigInstanceCustomIngressPortArrayOutput)
}

type ApigInstanceCustomIngressPortOutput struct{ *pulumi.OutputState }

func (ApigInstanceCustomIngressPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigInstanceCustomIngressPort)(nil)).Elem()
}

func (o ApigInstanceCustomIngressPortOutput) ToApigInstanceCustomIngressPortOutput() ApigInstanceCustomIngressPortOutput {
	return o
}

func (o ApigInstanceCustomIngressPortOutput) ToApigInstanceCustomIngressPortOutputWithContext(ctx context.Context) ApigInstanceCustomIngressPortOutput {
	return o
}

// The ID of the custom ingress port.
func (o ApigInstanceCustomIngressPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigInstanceCustomIngressPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specified port of the custom ingress port.
func (o ApigInstanceCustomIngressPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApigInstanceCustomIngressPort) int { return v.Port }).(pulumi.IntOutput)
}

// Specified protocol of the custom ingress port.
func (o ApigInstanceCustomIngressPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ApigInstanceCustomIngressPort) string { return v.Protocol }).(pulumi.StringOutput)
}

// The current status of the custom ingress port.
func (o ApigInstanceCustomIngressPortOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigInstanceCustomIngressPort) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ApigInstanceCustomIngressPortArrayOutput struct{ *pulumi.OutputState }

func (ApigInstanceCustomIngressPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigInstanceCustomIngressPort)(nil)).Elem()
}

func (o ApigInstanceCustomIngressPortArrayOutput) ToApigInstanceCustomIngressPortArrayOutput() ApigInstanceCustomIngressPortArrayOutput {
	return o
}

func (o ApigInstanceCustomIngressPortArrayOutput) ToApigInstanceCustomIngressPortArrayOutputWithContext(ctx context.Context) ApigInstanceCustomIngressPortArrayOutput {
	return o
}

func (o ApigInstanceCustomIngressPortArrayOutput) Index(i pulumi.IntInput) ApigInstanceCustomIngressPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigInstanceCustomIngressPort {
		return vs[0].([]ApigInstanceCustomIngressPort)[vs[1].(int)]
	}).(ApigInstanceCustomIngressPortOutput)
}

type ApigResponseRule struct {
	// The body template of the API custom response rule.
	Body string `pulumi:"body"`
	// The error type of the API custom response rule.
	ErrorType string `pulumi:"errorType"`
	// The configuration of the custom response headers.
	Headers []ApigResponseRuleHeader `pulumi:"headers"`
	// The HTTP status code of the API custom response rule.
	StatusCode *int `pulumi:"statusCode"`
}

// ApigResponseRuleInput is an input type that accepts ApigResponseRuleArgs and ApigResponseRuleOutput values.
// You can construct a concrete instance of `ApigResponseRuleInput` via:
//
//	ApigResponseRuleArgs{...}
type ApigResponseRuleInput interface {
	pulumi.Input

	ToApigResponseRuleOutput() ApigResponseRuleOutput
	ToApigResponseRuleOutputWithContext(context.Context) ApigResponseRuleOutput
}

type ApigResponseRuleArgs struct {
	// The body template of the API custom response rule.
	Body pulumi.StringInput `pulumi:"body"`
	// The error type of the API custom response rule.
	ErrorType pulumi.StringInput `pulumi:"errorType"`
	// The configuration of the custom response headers.
	Headers ApigResponseRuleHeaderArrayInput `pulumi:"headers"`
	// The HTTP status code of the API custom response rule.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
}

func (ApigResponseRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigResponseRule)(nil)).Elem()
}

func (i ApigResponseRuleArgs) ToApigResponseRuleOutput() ApigResponseRuleOutput {
	return i.ToApigResponseRuleOutputWithContext(context.Background())
}

func (i ApigResponseRuleArgs) ToApigResponseRuleOutputWithContext(ctx context.Context) ApigResponseRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigResponseRuleOutput)
}

// ApigResponseRuleArrayInput is an input type that accepts ApigResponseRuleArray and ApigResponseRuleArrayOutput values.
// You can construct a concrete instance of `ApigResponseRuleArrayInput` via:
//
//	ApigResponseRuleArray{ ApigResponseRuleArgs{...} }
type ApigResponseRuleArrayInput interface {
	pulumi.Input

	ToApigResponseRuleArrayOutput() ApigResponseRuleArrayOutput
	ToApigResponseRuleArrayOutputWithContext(context.Context) ApigResponseRuleArrayOutput
}

type ApigResponseRuleArray []ApigResponseRuleInput

func (ApigResponseRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigResponseRule)(nil)).Elem()
}

func (i ApigResponseRuleArray) ToApigResponseRuleArrayOutput() ApigResponseRuleArrayOutput {
	return i.ToApigResponseRuleArrayOutputWithContext(context.Background())
}

func (i ApigResponseRuleArray) ToApigResponseRuleArrayOutputWithContext(ctx context.Context) ApigResponseRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigResponseRuleArrayOutput)
}

type ApigResponseRuleOutput struct{ *pulumi.OutputState }

func (ApigResponseRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigResponseRule)(nil)).Elem()
}

func (o ApigResponseRuleOutput) ToApigResponseRuleOutput() ApigResponseRuleOutput {
	return o
}

func (o ApigResponseRuleOutput) ToApigResponseRuleOutputWithContext(ctx context.Context) ApigResponseRuleOutput {
	return o
}

// The body template of the API custom response rule.
func (o ApigResponseRuleOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v ApigResponseRule) string { return v.Body }).(pulumi.StringOutput)
}

// The error type of the API custom response rule.
func (o ApigResponseRuleOutput) ErrorType() pulumi.StringOutput {
	return o.ApplyT(func(v ApigResponseRule) string { return v.ErrorType }).(pulumi.StringOutput)
}

// The configuration of the custom response headers.
func (o ApigResponseRuleOutput) Headers() ApigResponseRuleHeaderArrayOutput {
	return o.ApplyT(func(v ApigResponseRule) []ApigResponseRuleHeader { return v.Headers }).(ApigResponseRuleHeaderArrayOutput)
}

// The HTTP status code of the API custom response rule.
func (o ApigResponseRuleOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigResponseRule) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type ApigResponseRuleArrayOutput struct{ *pulumi.OutputState }

func (ApigResponseRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigResponseRule)(nil)).Elem()
}

func (o ApigResponseRuleArrayOutput) ToApigResponseRuleArrayOutput() ApigResponseRuleArrayOutput {
	return o
}

func (o ApigResponseRuleArrayOutput) ToApigResponseRuleArrayOutputWithContext(ctx context.Context) ApigResponseRuleArrayOutput {
	return o
}

func (o ApigResponseRuleArrayOutput) Index(i pulumi.IntInput) ApigResponseRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigResponseRule {
		return vs[0].([]ApigResponseRule)[vs[1].(int)]
	}).(ApigResponseRuleOutput)
}

type ApigResponseRuleHeader struct {
	// The key name of the response header.
	Key string `pulumi:"key"`
	// The value for the specified response header key.
	Value string `pulumi:"value"`
}

// ApigResponseRuleHeaderInput is an input type that accepts ApigResponseRuleHeaderArgs and ApigResponseRuleHeaderOutput values.
// You can construct a concrete instance of `ApigResponseRuleHeaderInput` via:
//
//	ApigResponseRuleHeaderArgs{...}
type ApigResponseRuleHeaderInput interface {
	pulumi.Input

	ToApigResponseRuleHeaderOutput() ApigResponseRuleHeaderOutput
	ToApigResponseRuleHeaderOutputWithContext(context.Context) ApigResponseRuleHeaderOutput
}

type ApigResponseRuleHeaderArgs struct {
	// The key name of the response header.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the specified response header key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApigResponseRuleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigResponseRuleHeader)(nil)).Elem()
}

func (i ApigResponseRuleHeaderArgs) ToApigResponseRuleHeaderOutput() ApigResponseRuleHeaderOutput {
	return i.ToApigResponseRuleHeaderOutputWithContext(context.Background())
}

func (i ApigResponseRuleHeaderArgs) ToApigResponseRuleHeaderOutputWithContext(ctx context.Context) ApigResponseRuleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigResponseRuleHeaderOutput)
}

// ApigResponseRuleHeaderArrayInput is an input type that accepts ApigResponseRuleHeaderArray and ApigResponseRuleHeaderArrayOutput values.
// You can construct a concrete instance of `ApigResponseRuleHeaderArrayInput` via:
//
//	ApigResponseRuleHeaderArray{ ApigResponseRuleHeaderArgs{...} }
type ApigResponseRuleHeaderArrayInput interface {
	pulumi.Input

	ToApigResponseRuleHeaderArrayOutput() ApigResponseRuleHeaderArrayOutput
	ToApigResponseRuleHeaderArrayOutputWithContext(context.Context) ApigResponseRuleHeaderArrayOutput
}

type ApigResponseRuleHeaderArray []ApigResponseRuleHeaderInput

func (ApigResponseRuleHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigResponseRuleHeader)(nil)).Elem()
}

func (i ApigResponseRuleHeaderArray) ToApigResponseRuleHeaderArrayOutput() ApigResponseRuleHeaderArrayOutput {
	return i.ToApigResponseRuleHeaderArrayOutputWithContext(context.Background())
}

func (i ApigResponseRuleHeaderArray) ToApigResponseRuleHeaderArrayOutputWithContext(ctx context.Context) ApigResponseRuleHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigResponseRuleHeaderArrayOutput)
}

type ApigResponseRuleHeaderOutput struct{ *pulumi.OutputState }

func (ApigResponseRuleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigResponseRuleHeader)(nil)).Elem()
}

func (o ApigResponseRuleHeaderOutput) ToApigResponseRuleHeaderOutput() ApigResponseRuleHeaderOutput {
	return o
}

func (o ApigResponseRuleHeaderOutput) ToApigResponseRuleHeaderOutputWithContext(ctx context.Context) ApigResponseRuleHeaderOutput {
	return o
}

// The key name of the response header.
func (o ApigResponseRuleHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApigResponseRuleHeader) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the specified response header key.
func (o ApigResponseRuleHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApigResponseRuleHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ApigResponseRuleHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApigResponseRuleHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigResponseRuleHeader)(nil)).Elem()
}

func (o ApigResponseRuleHeaderArrayOutput) ToApigResponseRuleHeaderArrayOutput() ApigResponseRuleHeaderArrayOutput {
	return o
}

func (o ApigResponseRuleHeaderArrayOutput) ToApigResponseRuleHeaderArrayOutputWithContext(ctx context.Context) ApigResponseRuleHeaderArrayOutput {
	return o
}

func (o ApigResponseRuleHeaderArrayOutput) Index(i pulumi.IntInput) ApigResponseRuleHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigResponseRuleHeader {
		return vs[0].([]ApigResponseRuleHeader)[vs[1].(int)]
	}).(ApigResponseRuleHeaderOutput)
}

type ApigThrottlingPolicyAppThrottle struct {
	// The ID of the special user/application throttling policy.
	Id *string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The object ID which the special throttling policy belongs.
	ThrottlingObjectId string `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName *string `pulumi:"throttlingObjectName"`
}

// ApigThrottlingPolicyAppThrottleInput is an input type that accepts ApigThrottlingPolicyAppThrottleArgs and ApigThrottlingPolicyAppThrottleOutput values.
// You can construct a concrete instance of `ApigThrottlingPolicyAppThrottleInput` via:
//
//	ApigThrottlingPolicyAppThrottleArgs{...}
type ApigThrottlingPolicyAppThrottleInput interface {
	pulumi.Input

	ToApigThrottlingPolicyAppThrottleOutput() ApigThrottlingPolicyAppThrottleOutput
	ToApigThrottlingPolicyAppThrottleOutputWithContext(context.Context) ApigThrottlingPolicyAppThrottleOutput
}

type ApigThrottlingPolicyAppThrottleArgs struct {
	// The ID of the special user/application throttling policy.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The object ID which the special throttling policy belongs.
	ThrottlingObjectId pulumi.StringInput `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName pulumi.StringPtrInput `pulumi:"throttlingObjectName"`
}

func (ApigThrottlingPolicyAppThrottleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigThrottlingPolicyAppThrottle)(nil)).Elem()
}

func (i ApigThrottlingPolicyAppThrottleArgs) ToApigThrottlingPolicyAppThrottleOutput() ApigThrottlingPolicyAppThrottleOutput {
	return i.ToApigThrottlingPolicyAppThrottleOutputWithContext(context.Background())
}

func (i ApigThrottlingPolicyAppThrottleArgs) ToApigThrottlingPolicyAppThrottleOutputWithContext(ctx context.Context) ApigThrottlingPolicyAppThrottleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigThrottlingPolicyAppThrottleOutput)
}

// ApigThrottlingPolicyAppThrottleArrayInput is an input type that accepts ApigThrottlingPolicyAppThrottleArray and ApigThrottlingPolicyAppThrottleArrayOutput values.
// You can construct a concrete instance of `ApigThrottlingPolicyAppThrottleArrayInput` via:
//
//	ApigThrottlingPolicyAppThrottleArray{ ApigThrottlingPolicyAppThrottleArgs{...} }
type ApigThrottlingPolicyAppThrottleArrayInput interface {
	pulumi.Input

	ToApigThrottlingPolicyAppThrottleArrayOutput() ApigThrottlingPolicyAppThrottleArrayOutput
	ToApigThrottlingPolicyAppThrottleArrayOutputWithContext(context.Context) ApigThrottlingPolicyAppThrottleArrayOutput
}

type ApigThrottlingPolicyAppThrottleArray []ApigThrottlingPolicyAppThrottleInput

func (ApigThrottlingPolicyAppThrottleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigThrottlingPolicyAppThrottle)(nil)).Elem()
}

func (i ApigThrottlingPolicyAppThrottleArray) ToApigThrottlingPolicyAppThrottleArrayOutput() ApigThrottlingPolicyAppThrottleArrayOutput {
	return i.ToApigThrottlingPolicyAppThrottleArrayOutputWithContext(context.Background())
}

func (i ApigThrottlingPolicyAppThrottleArray) ToApigThrottlingPolicyAppThrottleArrayOutputWithContext(ctx context.Context) ApigThrottlingPolicyAppThrottleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigThrottlingPolicyAppThrottleArrayOutput)
}

type ApigThrottlingPolicyAppThrottleOutput struct{ *pulumi.OutputState }

func (ApigThrottlingPolicyAppThrottleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigThrottlingPolicyAppThrottle)(nil)).Elem()
}

func (o ApigThrottlingPolicyAppThrottleOutput) ToApigThrottlingPolicyAppThrottleOutput() ApigThrottlingPolicyAppThrottleOutput {
	return o
}

func (o ApigThrottlingPolicyAppThrottleOutput) ToApigThrottlingPolicyAppThrottleOutputWithContext(ctx context.Context) ApigThrottlingPolicyAppThrottleOutput {
	return o
}

// The ID of the special user/application throttling policy.
func (o ApigThrottlingPolicyAppThrottleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyAppThrottle) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o ApigThrottlingPolicyAppThrottleOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyAppThrottle) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The object ID which the special throttling policy belongs.
func (o ApigThrottlingPolicyAppThrottleOutput) ThrottlingObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyAppThrottle) string { return v.ThrottlingObjectId }).(pulumi.StringOutput)
}

// The object name which the special user/application throttling policy belongs.
func (o ApigThrottlingPolicyAppThrottleOutput) ThrottlingObjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyAppThrottle) *string { return v.ThrottlingObjectName }).(pulumi.StringPtrOutput)
}

type ApigThrottlingPolicyAppThrottleArrayOutput struct{ *pulumi.OutputState }

func (ApigThrottlingPolicyAppThrottleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigThrottlingPolicyAppThrottle)(nil)).Elem()
}

func (o ApigThrottlingPolicyAppThrottleArrayOutput) ToApigThrottlingPolicyAppThrottleArrayOutput() ApigThrottlingPolicyAppThrottleArrayOutput {
	return o
}

func (o ApigThrottlingPolicyAppThrottleArrayOutput) ToApigThrottlingPolicyAppThrottleArrayOutputWithContext(ctx context.Context) ApigThrottlingPolicyAppThrottleArrayOutput {
	return o
}

func (o ApigThrottlingPolicyAppThrottleArrayOutput) Index(i pulumi.IntInput) ApigThrottlingPolicyAppThrottleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigThrottlingPolicyAppThrottle {
		return vs[0].([]ApigThrottlingPolicyAppThrottle)[vs[1].(int)]
	}).(ApigThrottlingPolicyAppThrottleOutput)
}

type ApigThrottlingPolicyUserThrottle struct {
	// The ID of the special user/application throttling policy.
	Id *string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The object ID which the special throttling policy belongs.
	ThrottlingObjectId string `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName *string `pulumi:"throttlingObjectName"`
}

// ApigThrottlingPolicyUserThrottleInput is an input type that accepts ApigThrottlingPolicyUserThrottleArgs and ApigThrottlingPolicyUserThrottleOutput values.
// You can construct a concrete instance of `ApigThrottlingPolicyUserThrottleInput` via:
//
//	ApigThrottlingPolicyUserThrottleArgs{...}
type ApigThrottlingPolicyUserThrottleInput interface {
	pulumi.Input

	ToApigThrottlingPolicyUserThrottleOutput() ApigThrottlingPolicyUserThrottleOutput
	ToApigThrottlingPolicyUserThrottleOutputWithContext(context.Context) ApigThrottlingPolicyUserThrottleOutput
}

type ApigThrottlingPolicyUserThrottleArgs struct {
	// The ID of the special user/application throttling policy.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The object ID which the special throttling policy belongs.
	ThrottlingObjectId pulumi.StringInput `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName pulumi.StringPtrInput `pulumi:"throttlingObjectName"`
}

func (ApigThrottlingPolicyUserThrottleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigThrottlingPolicyUserThrottle)(nil)).Elem()
}

func (i ApigThrottlingPolicyUserThrottleArgs) ToApigThrottlingPolicyUserThrottleOutput() ApigThrottlingPolicyUserThrottleOutput {
	return i.ToApigThrottlingPolicyUserThrottleOutputWithContext(context.Background())
}

func (i ApigThrottlingPolicyUserThrottleArgs) ToApigThrottlingPolicyUserThrottleOutputWithContext(ctx context.Context) ApigThrottlingPolicyUserThrottleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigThrottlingPolicyUserThrottleOutput)
}

// ApigThrottlingPolicyUserThrottleArrayInput is an input type that accepts ApigThrottlingPolicyUserThrottleArray and ApigThrottlingPolicyUserThrottleArrayOutput values.
// You can construct a concrete instance of `ApigThrottlingPolicyUserThrottleArrayInput` via:
//
//	ApigThrottlingPolicyUserThrottleArray{ ApigThrottlingPolicyUserThrottleArgs{...} }
type ApigThrottlingPolicyUserThrottleArrayInput interface {
	pulumi.Input

	ToApigThrottlingPolicyUserThrottleArrayOutput() ApigThrottlingPolicyUserThrottleArrayOutput
	ToApigThrottlingPolicyUserThrottleArrayOutputWithContext(context.Context) ApigThrottlingPolicyUserThrottleArrayOutput
}

type ApigThrottlingPolicyUserThrottleArray []ApigThrottlingPolicyUserThrottleInput

func (ApigThrottlingPolicyUserThrottleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigThrottlingPolicyUserThrottle)(nil)).Elem()
}

func (i ApigThrottlingPolicyUserThrottleArray) ToApigThrottlingPolicyUserThrottleArrayOutput() ApigThrottlingPolicyUserThrottleArrayOutput {
	return i.ToApigThrottlingPolicyUserThrottleArrayOutputWithContext(context.Background())
}

func (i ApigThrottlingPolicyUserThrottleArray) ToApigThrottlingPolicyUserThrottleArrayOutputWithContext(ctx context.Context) ApigThrottlingPolicyUserThrottleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigThrottlingPolicyUserThrottleArrayOutput)
}

type ApigThrottlingPolicyUserThrottleOutput struct{ *pulumi.OutputState }

func (ApigThrottlingPolicyUserThrottleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigThrottlingPolicyUserThrottle)(nil)).Elem()
}

func (o ApigThrottlingPolicyUserThrottleOutput) ToApigThrottlingPolicyUserThrottleOutput() ApigThrottlingPolicyUserThrottleOutput {
	return o
}

func (o ApigThrottlingPolicyUserThrottleOutput) ToApigThrottlingPolicyUserThrottleOutputWithContext(ctx context.Context) ApigThrottlingPolicyUserThrottleOutput {
	return o
}

// The ID of the special user/application throttling policy.
func (o ApigThrottlingPolicyUserThrottleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyUserThrottle) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o ApigThrottlingPolicyUserThrottleOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyUserThrottle) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The object ID which the special throttling policy belongs.
func (o ApigThrottlingPolicyUserThrottleOutput) ThrottlingObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyUserThrottle) string { return v.ThrottlingObjectId }).(pulumi.StringOutput)
}

// The object name which the special user/application throttling policy belongs.
func (o ApigThrottlingPolicyUserThrottleOutput) ThrottlingObjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigThrottlingPolicyUserThrottle) *string { return v.ThrottlingObjectName }).(pulumi.StringPtrOutput)
}

type ApigThrottlingPolicyUserThrottleArrayOutput struct{ *pulumi.OutputState }

func (ApigThrottlingPolicyUserThrottleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigThrottlingPolicyUserThrottle)(nil)).Elem()
}

func (o ApigThrottlingPolicyUserThrottleArrayOutput) ToApigThrottlingPolicyUserThrottleArrayOutput() ApigThrottlingPolicyUserThrottleArrayOutput {
	return o
}

func (o ApigThrottlingPolicyUserThrottleArrayOutput) ToApigThrottlingPolicyUserThrottleArrayOutputWithContext(ctx context.Context) ApigThrottlingPolicyUserThrottleArrayOutput {
	return o
}

func (o ApigThrottlingPolicyUserThrottleArrayOutput) Index(i pulumi.IntInput) ApigThrottlingPolicyUserThrottleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigThrottlingPolicyUserThrottle {
		return vs[0].([]ApigThrottlingPolicyUserThrottle)[vs[1].(int)]
	}).(ApigThrottlingPolicyUserThrottleOutput)
}

type AsBandwidthPolicyScalingPolicyAction struct {
	// Specifies the operation restrictions.
	Limits *int `pulumi:"limits"`
	// Specifies the operation to be performed. The default operation is ADD.
	Operation *string `pulumi:"operation"`
	// Specifies the bandwidth (Mbit/s).
	Size *int `pulumi:"size"`
}

// AsBandwidthPolicyScalingPolicyActionInput is an input type that accepts AsBandwidthPolicyScalingPolicyActionArgs and AsBandwidthPolicyScalingPolicyActionOutput values.
// You can construct a concrete instance of `AsBandwidthPolicyScalingPolicyActionInput` via:
//
//	AsBandwidthPolicyScalingPolicyActionArgs{...}
type AsBandwidthPolicyScalingPolicyActionInput interface {
	pulumi.Input

	ToAsBandwidthPolicyScalingPolicyActionOutput() AsBandwidthPolicyScalingPolicyActionOutput
	ToAsBandwidthPolicyScalingPolicyActionOutputWithContext(context.Context) AsBandwidthPolicyScalingPolicyActionOutput
}

type AsBandwidthPolicyScalingPolicyActionArgs struct {
	// Specifies the operation restrictions.
	Limits pulumi.IntPtrInput `pulumi:"limits"`
	// Specifies the operation to be performed. The default operation is ADD.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// Specifies the bandwidth (Mbit/s).
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (AsBandwidthPolicyScalingPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsBandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (i AsBandwidthPolicyScalingPolicyActionArgs) ToAsBandwidthPolicyScalingPolicyActionOutput() AsBandwidthPolicyScalingPolicyActionOutput {
	return i.ToAsBandwidthPolicyScalingPolicyActionOutputWithContext(context.Background())
}

func (i AsBandwidthPolicyScalingPolicyActionArgs) ToAsBandwidthPolicyScalingPolicyActionOutputWithContext(ctx context.Context) AsBandwidthPolicyScalingPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsBandwidthPolicyScalingPolicyActionOutput)
}

func (i AsBandwidthPolicyScalingPolicyActionArgs) ToAsBandwidthPolicyScalingPolicyActionPtrOutput() AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return i.ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i AsBandwidthPolicyScalingPolicyActionArgs) ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsBandwidthPolicyScalingPolicyActionOutput).ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx)
}

// AsBandwidthPolicyScalingPolicyActionPtrInput is an input type that accepts AsBandwidthPolicyScalingPolicyActionArgs, AsBandwidthPolicyScalingPolicyActionPtr and AsBandwidthPolicyScalingPolicyActionPtrOutput values.
// You can construct a concrete instance of `AsBandwidthPolicyScalingPolicyActionPtrInput` via:
//
//	        AsBandwidthPolicyScalingPolicyActionArgs{...}
//
//	or:
//
//	        nil
type AsBandwidthPolicyScalingPolicyActionPtrInput interface {
	pulumi.Input

	ToAsBandwidthPolicyScalingPolicyActionPtrOutput() AsBandwidthPolicyScalingPolicyActionPtrOutput
	ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Context) AsBandwidthPolicyScalingPolicyActionPtrOutput
}

type asBandwidthPolicyScalingPolicyActionPtrType AsBandwidthPolicyScalingPolicyActionArgs

func AsBandwidthPolicyScalingPolicyActionPtr(v *AsBandwidthPolicyScalingPolicyActionArgs) AsBandwidthPolicyScalingPolicyActionPtrInput {
	return (*asBandwidthPolicyScalingPolicyActionPtrType)(v)
}

func (*asBandwidthPolicyScalingPolicyActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsBandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (i *asBandwidthPolicyScalingPolicyActionPtrType) ToAsBandwidthPolicyScalingPolicyActionPtrOutput() AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return i.ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i *asBandwidthPolicyScalingPolicyActionPtrType) ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsBandwidthPolicyScalingPolicyActionPtrOutput)
}

type AsBandwidthPolicyScalingPolicyActionOutput struct{ *pulumi.OutputState }

func (AsBandwidthPolicyScalingPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsBandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (o AsBandwidthPolicyScalingPolicyActionOutput) ToAsBandwidthPolicyScalingPolicyActionOutput() AsBandwidthPolicyScalingPolicyActionOutput {
	return o
}

func (o AsBandwidthPolicyScalingPolicyActionOutput) ToAsBandwidthPolicyScalingPolicyActionOutputWithContext(ctx context.Context) AsBandwidthPolicyScalingPolicyActionOutput {
	return o
}

func (o AsBandwidthPolicyScalingPolicyActionOutput) ToAsBandwidthPolicyScalingPolicyActionPtrOutput() AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return o.ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (o AsBandwidthPolicyScalingPolicyActionOutput) ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsBandwidthPolicyScalingPolicyAction) *AsBandwidthPolicyScalingPolicyAction {
		return &v
	}).(AsBandwidthPolicyScalingPolicyActionPtrOutput)
}

// Specifies the operation restrictions.
func (o AsBandwidthPolicyScalingPolicyActionOutput) Limits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScalingPolicyAction) *int { return v.Limits }).(pulumi.IntPtrOutput)
}

// Specifies the operation to be performed. The default operation is ADD.
func (o AsBandwidthPolicyScalingPolicyActionOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScalingPolicyAction) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// Specifies the bandwidth (Mbit/s).
func (o AsBandwidthPolicyScalingPolicyActionOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScalingPolicyAction) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type AsBandwidthPolicyScalingPolicyActionPtrOutput struct{ *pulumi.OutputState }

func (AsBandwidthPolicyScalingPolicyActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsBandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (o AsBandwidthPolicyScalingPolicyActionPtrOutput) ToAsBandwidthPolicyScalingPolicyActionPtrOutput() AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return o
}

func (o AsBandwidthPolicyScalingPolicyActionPtrOutput) ToAsBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScalingPolicyActionPtrOutput {
	return o
}

func (o AsBandwidthPolicyScalingPolicyActionPtrOutput) Elem() AsBandwidthPolicyScalingPolicyActionOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScalingPolicyAction) AsBandwidthPolicyScalingPolicyAction {
		if v != nil {
			return *v
		}
		var ret AsBandwidthPolicyScalingPolicyAction
		return ret
	}).(AsBandwidthPolicyScalingPolicyActionOutput)
}

// Specifies the operation restrictions.
func (o AsBandwidthPolicyScalingPolicyActionPtrOutput) Limits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.IntPtrOutput)
}

// Specifies the operation to be performed. The default operation is ADD.
func (o AsBandwidthPolicyScalingPolicyActionPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScalingPolicyAction) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

// Specifies the bandwidth (Mbit/s).
func (o AsBandwidthPolicyScalingPolicyActionPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type AsBandwidthPolicyScheduledPolicy struct {
	// Specifies the end time of the scaling action triggered periodically.
	EndTime *string `pulumi:"endTime"`
	// Specifies the time when the scaling action is triggered. The time format complies with UTC.
	LaunchTime string `pulumi:"launchTime"`
	// Specifies the periodic triggering type.
	RecurrenceType *string `pulumi:"recurrenceType"`
	// Specifies the day when a periodic scaling action is triggered.
	RecurrenceValue *string `pulumi:"recurrenceValue"`
	// Specifies the start time of the scaling action triggered periodically.
	StartTime *string `pulumi:"startTime"`
}

// AsBandwidthPolicyScheduledPolicyInput is an input type that accepts AsBandwidthPolicyScheduledPolicyArgs and AsBandwidthPolicyScheduledPolicyOutput values.
// You can construct a concrete instance of `AsBandwidthPolicyScheduledPolicyInput` via:
//
//	AsBandwidthPolicyScheduledPolicyArgs{...}
type AsBandwidthPolicyScheduledPolicyInput interface {
	pulumi.Input

	ToAsBandwidthPolicyScheduledPolicyOutput() AsBandwidthPolicyScheduledPolicyOutput
	ToAsBandwidthPolicyScheduledPolicyOutputWithContext(context.Context) AsBandwidthPolicyScheduledPolicyOutput
}

type AsBandwidthPolicyScheduledPolicyArgs struct {
	// Specifies the end time of the scaling action triggered periodically.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Specifies the time when the scaling action is triggered. The time format complies with UTC.
	LaunchTime pulumi.StringInput `pulumi:"launchTime"`
	// Specifies the periodic triggering type.
	RecurrenceType pulumi.StringPtrInput `pulumi:"recurrenceType"`
	// Specifies the day when a periodic scaling action is triggered.
	RecurrenceValue pulumi.StringPtrInput `pulumi:"recurrenceValue"`
	// Specifies the start time of the scaling action triggered periodically.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (AsBandwidthPolicyScheduledPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsBandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (i AsBandwidthPolicyScheduledPolicyArgs) ToAsBandwidthPolicyScheduledPolicyOutput() AsBandwidthPolicyScheduledPolicyOutput {
	return i.ToAsBandwidthPolicyScheduledPolicyOutputWithContext(context.Background())
}

func (i AsBandwidthPolicyScheduledPolicyArgs) ToAsBandwidthPolicyScheduledPolicyOutputWithContext(ctx context.Context) AsBandwidthPolicyScheduledPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsBandwidthPolicyScheduledPolicyOutput)
}

func (i AsBandwidthPolicyScheduledPolicyArgs) ToAsBandwidthPolicyScheduledPolicyPtrOutput() AsBandwidthPolicyScheduledPolicyPtrOutput {
	return i.ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i AsBandwidthPolicyScheduledPolicyArgs) ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsBandwidthPolicyScheduledPolicyOutput).ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx)
}

// AsBandwidthPolicyScheduledPolicyPtrInput is an input type that accepts AsBandwidthPolicyScheduledPolicyArgs, AsBandwidthPolicyScheduledPolicyPtr and AsBandwidthPolicyScheduledPolicyPtrOutput values.
// You can construct a concrete instance of `AsBandwidthPolicyScheduledPolicyPtrInput` via:
//
//	        AsBandwidthPolicyScheduledPolicyArgs{...}
//
//	or:
//
//	        nil
type AsBandwidthPolicyScheduledPolicyPtrInput interface {
	pulumi.Input

	ToAsBandwidthPolicyScheduledPolicyPtrOutput() AsBandwidthPolicyScheduledPolicyPtrOutput
	ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Context) AsBandwidthPolicyScheduledPolicyPtrOutput
}

type asBandwidthPolicyScheduledPolicyPtrType AsBandwidthPolicyScheduledPolicyArgs

func AsBandwidthPolicyScheduledPolicyPtr(v *AsBandwidthPolicyScheduledPolicyArgs) AsBandwidthPolicyScheduledPolicyPtrInput {
	return (*asBandwidthPolicyScheduledPolicyPtrType)(v)
}

func (*asBandwidthPolicyScheduledPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsBandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (i *asBandwidthPolicyScheduledPolicyPtrType) ToAsBandwidthPolicyScheduledPolicyPtrOutput() AsBandwidthPolicyScheduledPolicyPtrOutput {
	return i.ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i *asBandwidthPolicyScheduledPolicyPtrType) ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsBandwidthPolicyScheduledPolicyPtrOutput)
}

type AsBandwidthPolicyScheduledPolicyOutput struct{ *pulumi.OutputState }

func (AsBandwidthPolicyScheduledPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsBandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (o AsBandwidthPolicyScheduledPolicyOutput) ToAsBandwidthPolicyScheduledPolicyOutput() AsBandwidthPolicyScheduledPolicyOutput {
	return o
}

func (o AsBandwidthPolicyScheduledPolicyOutput) ToAsBandwidthPolicyScheduledPolicyOutputWithContext(ctx context.Context) AsBandwidthPolicyScheduledPolicyOutput {
	return o
}

func (o AsBandwidthPolicyScheduledPolicyOutput) ToAsBandwidthPolicyScheduledPolicyPtrOutput() AsBandwidthPolicyScheduledPolicyPtrOutput {
	return o.ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (o AsBandwidthPolicyScheduledPolicyOutput) ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScheduledPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsBandwidthPolicyScheduledPolicy) *AsBandwidthPolicyScheduledPolicy {
		return &v
	}).(AsBandwidthPolicyScheduledPolicyPtrOutput)
}

// Specifies the end time of the scaling action triggered periodically.
func (o AsBandwidthPolicyScheduledPolicyOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScheduledPolicy) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Specifies the time when the scaling action is triggered. The time format complies with UTC.
func (o AsBandwidthPolicyScheduledPolicyOutput) LaunchTime() pulumi.StringOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScheduledPolicy) string { return v.LaunchTime }).(pulumi.StringOutput)
}

// Specifies the periodic triggering type.
func (o AsBandwidthPolicyScheduledPolicyOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScheduledPolicy) *string { return v.RecurrenceType }).(pulumi.StringPtrOutput)
}

// Specifies the day when a periodic scaling action is triggered.
func (o AsBandwidthPolicyScheduledPolicyOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScheduledPolicy) *string { return v.RecurrenceValue }).(pulumi.StringPtrOutput)
}

// Specifies the start time of the scaling action triggered periodically.
func (o AsBandwidthPolicyScheduledPolicyOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsBandwidthPolicyScheduledPolicy) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type AsBandwidthPolicyScheduledPolicyPtrOutput struct{ *pulumi.OutputState }

func (AsBandwidthPolicyScheduledPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsBandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (o AsBandwidthPolicyScheduledPolicyPtrOutput) ToAsBandwidthPolicyScheduledPolicyPtrOutput() AsBandwidthPolicyScheduledPolicyPtrOutput {
	return o
}

func (o AsBandwidthPolicyScheduledPolicyPtrOutput) ToAsBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsBandwidthPolicyScheduledPolicyPtrOutput {
	return o
}

func (o AsBandwidthPolicyScheduledPolicyPtrOutput) Elem() AsBandwidthPolicyScheduledPolicyOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScheduledPolicy) AsBandwidthPolicyScheduledPolicy {
		if v != nil {
			return *v
		}
		var ret AsBandwidthPolicyScheduledPolicy
		return ret
	}).(AsBandwidthPolicyScheduledPolicyOutput)
}

// Specifies the end time of the scaling action triggered periodically.
func (o AsBandwidthPolicyScheduledPolicyPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Specifies the time when the scaling action is triggered. The time format complies with UTC.
func (o AsBandwidthPolicyScheduledPolicyPtrOutput) LaunchTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.LaunchTime
	}).(pulumi.StringPtrOutput)
}

// Specifies the periodic triggering type.
func (o AsBandwidthPolicyScheduledPolicyPtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// Specifies the day when a periodic scaling action is triggered.
func (o AsBandwidthPolicyScheduledPolicyPtrOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceValue
	}).(pulumi.StringPtrOutput)
}

// Specifies the start time of the scaling action triggered periodically.
func (o AsBandwidthPolicyScheduledPolicyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsBandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type AsConfigurationInstanceConfig struct {
	AdminPass            *string                                    `pulumi:"adminPass"`
	ChargingMode         *string                                    `pulumi:"chargingMode"`
	DedicatedHostId      *string                                    `pulumi:"dedicatedHostId"`
	Disks                []AsConfigurationInstanceConfigDisk        `pulumi:"disks"`
	EcsGroupId           *string                                    `pulumi:"ecsGroupId"`
	Flavor               *string                                    `pulumi:"flavor"`
	FlavorPriorityPolicy *string                                    `pulumi:"flavorPriorityPolicy"`
	Image                *string                                    `pulumi:"image"`
	InstanceId           *string                                    `pulumi:"instanceId"`
	KeyName              *string                                    `pulumi:"keyName"`
	Metadata             map[string]string                          `pulumi:"metadata"`
	Personalities        []AsConfigurationInstanceConfigPersonality `pulumi:"personalities"`
	PublicIp             *AsConfigurationInstanceConfigPublicIp     `pulumi:"publicIp"`
	// schema: Required
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Tenancy          *string  `pulumi:"tenancy"`
	UserData         *string  `pulumi:"userData"`
}

// AsConfigurationInstanceConfigInput is an input type that accepts AsConfigurationInstanceConfigArgs and AsConfigurationInstanceConfigOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigInput` via:
//
//	AsConfigurationInstanceConfigArgs{...}
type AsConfigurationInstanceConfigInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigOutput() AsConfigurationInstanceConfigOutput
	ToAsConfigurationInstanceConfigOutputWithContext(context.Context) AsConfigurationInstanceConfigOutput
}

type AsConfigurationInstanceConfigArgs struct {
	AdminPass            pulumi.StringPtrInput                              `pulumi:"adminPass"`
	ChargingMode         pulumi.StringPtrInput                              `pulumi:"chargingMode"`
	DedicatedHostId      pulumi.StringPtrInput                              `pulumi:"dedicatedHostId"`
	Disks                AsConfigurationInstanceConfigDiskArrayInput        `pulumi:"disks"`
	EcsGroupId           pulumi.StringPtrInput                              `pulumi:"ecsGroupId"`
	Flavor               pulumi.StringPtrInput                              `pulumi:"flavor"`
	FlavorPriorityPolicy pulumi.StringPtrInput                              `pulumi:"flavorPriorityPolicy"`
	Image                pulumi.StringPtrInput                              `pulumi:"image"`
	InstanceId           pulumi.StringPtrInput                              `pulumi:"instanceId"`
	KeyName              pulumi.StringPtrInput                              `pulumi:"keyName"`
	Metadata             pulumi.StringMapInput                              `pulumi:"metadata"`
	Personalities        AsConfigurationInstanceConfigPersonalityArrayInput `pulumi:"personalities"`
	PublicIp             AsConfigurationInstanceConfigPublicIpPtrInput      `pulumi:"publicIp"`
	// schema: Required
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Tenancy          pulumi.StringPtrInput   `pulumi:"tenancy"`
	UserData         pulumi.StringPtrInput   `pulumi:"userData"`
}

func (AsConfigurationInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfig)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigArgs) ToAsConfigurationInstanceConfigOutput() AsConfigurationInstanceConfigOutput {
	return i.ToAsConfigurationInstanceConfigOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigArgs) ToAsConfigurationInstanceConfigOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigOutput)
}

func (i AsConfigurationInstanceConfigArgs) ToAsConfigurationInstanceConfigPtrOutput() AsConfigurationInstanceConfigPtrOutput {
	return i.ToAsConfigurationInstanceConfigPtrOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigArgs) ToAsConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigOutput).ToAsConfigurationInstanceConfigPtrOutputWithContext(ctx)
}

// AsConfigurationInstanceConfigPtrInput is an input type that accepts AsConfigurationInstanceConfigArgs, AsConfigurationInstanceConfigPtr and AsConfigurationInstanceConfigPtrOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPtrInput` via:
//
//	        AsConfigurationInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type AsConfigurationInstanceConfigPtrInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPtrOutput() AsConfigurationInstanceConfigPtrOutput
	ToAsConfigurationInstanceConfigPtrOutputWithContext(context.Context) AsConfigurationInstanceConfigPtrOutput
}

type asConfigurationInstanceConfigPtrType AsConfigurationInstanceConfigArgs

func AsConfigurationInstanceConfigPtr(v *AsConfigurationInstanceConfigArgs) AsConfigurationInstanceConfigPtrInput {
	return (*asConfigurationInstanceConfigPtrType)(v)
}

func (*asConfigurationInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfig)(nil)).Elem()
}

func (i *asConfigurationInstanceConfigPtrType) ToAsConfigurationInstanceConfigPtrOutput() AsConfigurationInstanceConfigPtrOutput {
	return i.ToAsConfigurationInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *asConfigurationInstanceConfigPtrType) ToAsConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPtrOutput)
}

type AsConfigurationInstanceConfigOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfig)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigOutput) ToAsConfigurationInstanceConfigOutput() AsConfigurationInstanceConfigOutput {
	return o
}

func (o AsConfigurationInstanceConfigOutput) ToAsConfigurationInstanceConfigOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigOutput {
	return o
}

func (o AsConfigurationInstanceConfigOutput) ToAsConfigurationInstanceConfigPtrOutput() AsConfigurationInstanceConfigPtrOutput {
	return o.ToAsConfigurationInstanceConfigPtrOutputWithContext(context.Background())
}

func (o AsConfigurationInstanceConfigOutput) ToAsConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsConfigurationInstanceConfig) *AsConfigurationInstanceConfig {
		return &v
	}).(AsConfigurationInstanceConfigPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) AdminPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.AdminPass }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) DedicatedHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.DedicatedHostId }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) Disks() AsConfigurationInstanceConfigDiskArrayOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) []AsConfigurationInstanceConfigDisk { return v.Disks }).(AsConfigurationInstanceConfigDiskArrayOutput)
}

func (o AsConfigurationInstanceConfigOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.EcsGroupId }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.Flavor }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) FlavorPriorityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.FlavorPriorityPolicy }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o AsConfigurationInstanceConfigOutput) Personalities() AsConfigurationInstanceConfigPersonalityArrayOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) []AsConfigurationInstanceConfigPersonality {
		return v.Personalities
	}).(AsConfigurationInstanceConfigPersonalityArrayOutput)
}

func (o AsConfigurationInstanceConfigOutput) PublicIp() AsConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *AsConfigurationInstanceConfigPublicIp { return v.PublicIp }).(AsConfigurationInstanceConfigPublicIpPtrOutput)
}

// schema: Required
func (o AsConfigurationInstanceConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o AsConfigurationInstanceConfigOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfig) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type AsConfigurationInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfig)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPtrOutput) ToAsConfigurationInstanceConfigPtrOutput() AsConfigurationInstanceConfigPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPtrOutput) ToAsConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPtrOutput) Elem() AsConfigurationInstanceConfigOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) AsConfigurationInstanceConfig {
		if v != nil {
			return *v
		}
		var ret AsConfigurationInstanceConfig
		return ret
	}).(AsConfigurationInstanceConfigOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) AdminPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminPass
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ChargingMode
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) DedicatedHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.DedicatedHostId
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) Disks() AsConfigurationInstanceConfigDiskArrayOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) []AsConfigurationInstanceConfigDisk {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(AsConfigurationInstanceConfigDiskArrayOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.EcsGroupId
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) FlavorPriorityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.FlavorPriorityPolicy
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) Personalities() AsConfigurationInstanceConfigPersonalityArrayOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) []AsConfigurationInstanceConfigPersonality {
		if v == nil {
			return nil
		}
		return v.Personalities
	}).(AsConfigurationInstanceConfigPersonalityArrayOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) PublicIp() AsConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *AsConfigurationInstanceConfigPublicIp {
		if v == nil {
			return nil
		}
		return v.PublicIp
	}).(AsConfigurationInstanceConfigPublicIpPtrOutput)
}

// schema: Required
func (o AsConfigurationInstanceConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type AsConfigurationInstanceConfigDisk struct {
	DataDiskImageId    *string `pulumi:"dataDiskImageId"`
	DedicatedStorageId *string `pulumi:"dedicatedStorageId"`
	DiskType           string  `pulumi:"diskType"`
	Iops               *int    `pulumi:"iops"`
	KmsId              *string `pulumi:"kmsId"`
	Size               int     `pulumi:"size"`
	SnapshotId         *string `pulumi:"snapshotId"`
	Throughput         *int    `pulumi:"throughput"`
	VolumeType         string  `pulumi:"volumeType"`
}

// AsConfigurationInstanceConfigDiskInput is an input type that accepts AsConfigurationInstanceConfigDiskArgs and AsConfigurationInstanceConfigDiskOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigDiskInput` via:
//
//	AsConfigurationInstanceConfigDiskArgs{...}
type AsConfigurationInstanceConfigDiskInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigDiskOutput() AsConfigurationInstanceConfigDiskOutput
	ToAsConfigurationInstanceConfigDiskOutputWithContext(context.Context) AsConfigurationInstanceConfigDiskOutput
}

type AsConfigurationInstanceConfigDiskArgs struct {
	DataDiskImageId    pulumi.StringPtrInput `pulumi:"dataDiskImageId"`
	DedicatedStorageId pulumi.StringPtrInput `pulumi:"dedicatedStorageId"`
	DiskType           pulumi.StringInput    `pulumi:"diskType"`
	Iops               pulumi.IntPtrInput    `pulumi:"iops"`
	KmsId              pulumi.StringPtrInput `pulumi:"kmsId"`
	Size               pulumi.IntInput       `pulumi:"size"`
	SnapshotId         pulumi.StringPtrInput `pulumi:"snapshotId"`
	Throughput         pulumi.IntPtrInput    `pulumi:"throughput"`
	VolumeType         pulumi.StringInput    `pulumi:"volumeType"`
}

func (AsConfigurationInstanceConfigDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigDiskArgs) ToAsConfigurationInstanceConfigDiskOutput() AsConfigurationInstanceConfigDiskOutput {
	return i.ToAsConfigurationInstanceConfigDiskOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigDiskArgs) ToAsConfigurationInstanceConfigDiskOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigDiskOutput)
}

// AsConfigurationInstanceConfigDiskArrayInput is an input type that accepts AsConfigurationInstanceConfigDiskArray and AsConfigurationInstanceConfigDiskArrayOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigDiskArrayInput` via:
//
//	AsConfigurationInstanceConfigDiskArray{ AsConfigurationInstanceConfigDiskArgs{...} }
type AsConfigurationInstanceConfigDiskArrayInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigDiskArrayOutput() AsConfigurationInstanceConfigDiskArrayOutput
	ToAsConfigurationInstanceConfigDiskArrayOutputWithContext(context.Context) AsConfigurationInstanceConfigDiskArrayOutput
}

type AsConfigurationInstanceConfigDiskArray []AsConfigurationInstanceConfigDiskInput

func (AsConfigurationInstanceConfigDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigDiskArray) ToAsConfigurationInstanceConfigDiskArrayOutput() AsConfigurationInstanceConfigDiskArrayOutput {
	return i.ToAsConfigurationInstanceConfigDiskArrayOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigDiskArray) ToAsConfigurationInstanceConfigDiskArrayOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigDiskArrayOutput)
}

type AsConfigurationInstanceConfigDiskOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigDiskOutput) ToAsConfigurationInstanceConfigDiskOutput() AsConfigurationInstanceConfigDiskOutput {
	return o
}

func (o AsConfigurationInstanceConfigDiskOutput) ToAsConfigurationInstanceConfigDiskOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigDiskOutput {
	return o
}

func (o AsConfigurationInstanceConfigDiskOutput) DataDiskImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) *string { return v.DataDiskImageId }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) DedicatedStorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) *string { return v.DedicatedStorageId }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) KmsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) *string { return v.KmsId }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) int { return v.Size }).(pulumi.IntOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o AsConfigurationInstanceConfigDiskOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigDisk) string { return v.VolumeType }).(pulumi.StringOutput)
}

type AsConfigurationInstanceConfigDiskArrayOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigDiskArrayOutput) ToAsConfigurationInstanceConfigDiskArrayOutput() AsConfigurationInstanceConfigDiskArrayOutput {
	return o
}

func (o AsConfigurationInstanceConfigDiskArrayOutput) ToAsConfigurationInstanceConfigDiskArrayOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigDiskArrayOutput {
	return o
}

func (o AsConfigurationInstanceConfigDiskArrayOutput) Index(i pulumi.IntInput) AsConfigurationInstanceConfigDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AsConfigurationInstanceConfigDisk {
		return vs[0].([]AsConfigurationInstanceConfigDisk)[vs[1].(int)]
	}).(AsConfigurationInstanceConfigDiskOutput)
}

type AsConfigurationInstanceConfigPersonality struct {
	Content string `pulumi:"content"`
	Path    string `pulumi:"path"`
}

// AsConfigurationInstanceConfigPersonalityInput is an input type that accepts AsConfigurationInstanceConfigPersonalityArgs and AsConfigurationInstanceConfigPersonalityOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPersonalityInput` via:
//
//	AsConfigurationInstanceConfigPersonalityArgs{...}
type AsConfigurationInstanceConfigPersonalityInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPersonalityOutput() AsConfigurationInstanceConfigPersonalityOutput
	ToAsConfigurationInstanceConfigPersonalityOutputWithContext(context.Context) AsConfigurationInstanceConfigPersonalityOutput
}

type AsConfigurationInstanceConfigPersonalityArgs struct {
	Content pulumi.StringInput `pulumi:"content"`
	Path    pulumi.StringInput `pulumi:"path"`
}

func (AsConfigurationInstanceConfigPersonalityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigPersonalityArgs) ToAsConfigurationInstanceConfigPersonalityOutput() AsConfigurationInstanceConfigPersonalityOutput {
	return i.ToAsConfigurationInstanceConfigPersonalityOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPersonalityArgs) ToAsConfigurationInstanceConfigPersonalityOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPersonalityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPersonalityOutput)
}

// AsConfigurationInstanceConfigPersonalityArrayInput is an input type that accepts AsConfigurationInstanceConfigPersonalityArray and AsConfigurationInstanceConfigPersonalityArrayOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPersonalityArrayInput` via:
//
//	AsConfigurationInstanceConfigPersonalityArray{ AsConfigurationInstanceConfigPersonalityArgs{...} }
type AsConfigurationInstanceConfigPersonalityArrayInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPersonalityArrayOutput() AsConfigurationInstanceConfigPersonalityArrayOutput
	ToAsConfigurationInstanceConfigPersonalityArrayOutputWithContext(context.Context) AsConfigurationInstanceConfigPersonalityArrayOutput
}

type AsConfigurationInstanceConfigPersonalityArray []AsConfigurationInstanceConfigPersonalityInput

func (AsConfigurationInstanceConfigPersonalityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigPersonalityArray) ToAsConfigurationInstanceConfigPersonalityArrayOutput() AsConfigurationInstanceConfigPersonalityArrayOutput {
	return i.ToAsConfigurationInstanceConfigPersonalityArrayOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPersonalityArray) ToAsConfigurationInstanceConfigPersonalityArrayOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPersonalityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPersonalityArrayOutput)
}

type AsConfigurationInstanceConfigPersonalityOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPersonalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPersonalityOutput) ToAsConfigurationInstanceConfigPersonalityOutput() AsConfigurationInstanceConfigPersonalityOutput {
	return o
}

func (o AsConfigurationInstanceConfigPersonalityOutput) ToAsConfigurationInstanceConfigPersonalityOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPersonalityOutput {
	return o
}

func (o AsConfigurationInstanceConfigPersonalityOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPersonality) string { return v.Content }).(pulumi.StringOutput)
}

func (o AsConfigurationInstanceConfigPersonalityOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPersonality) string { return v.Path }).(pulumi.StringOutput)
}

type AsConfigurationInstanceConfigPersonalityArrayOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPersonalityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPersonalityArrayOutput) ToAsConfigurationInstanceConfigPersonalityArrayOutput() AsConfigurationInstanceConfigPersonalityArrayOutput {
	return o
}

func (o AsConfigurationInstanceConfigPersonalityArrayOutput) ToAsConfigurationInstanceConfigPersonalityArrayOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPersonalityArrayOutput {
	return o
}

func (o AsConfigurationInstanceConfigPersonalityArrayOutput) Index(i pulumi.IntInput) AsConfigurationInstanceConfigPersonalityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AsConfigurationInstanceConfigPersonality {
		return vs[0].([]AsConfigurationInstanceConfigPersonality)[vs[1].(int)]
	}).(AsConfigurationInstanceConfigPersonalityOutput)
}

type AsConfigurationInstanceConfigPublicIp struct {
	Eip AsConfigurationInstanceConfigPublicIpEip `pulumi:"eip"`
}

// AsConfigurationInstanceConfigPublicIpInput is an input type that accepts AsConfigurationInstanceConfigPublicIpArgs and AsConfigurationInstanceConfigPublicIpOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPublicIpInput` via:
//
//	AsConfigurationInstanceConfigPublicIpArgs{...}
type AsConfigurationInstanceConfigPublicIpInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPublicIpOutput() AsConfigurationInstanceConfigPublicIpOutput
	ToAsConfigurationInstanceConfigPublicIpOutputWithContext(context.Context) AsConfigurationInstanceConfigPublicIpOutput
}

type AsConfigurationInstanceConfigPublicIpArgs struct {
	Eip AsConfigurationInstanceConfigPublicIpEipInput `pulumi:"eip"`
}

func (AsConfigurationInstanceConfigPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigPublicIpArgs) ToAsConfigurationInstanceConfigPublicIpOutput() AsConfigurationInstanceConfigPublicIpOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPublicIpArgs) ToAsConfigurationInstanceConfigPublicIpOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpOutput)
}

func (i AsConfigurationInstanceConfigPublicIpArgs) ToAsConfigurationInstanceConfigPublicIpPtrOutput() AsConfigurationInstanceConfigPublicIpPtrOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPublicIpArgs) ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpOutput).ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx)
}

// AsConfigurationInstanceConfigPublicIpPtrInput is an input type that accepts AsConfigurationInstanceConfigPublicIpArgs, AsConfigurationInstanceConfigPublicIpPtr and AsConfigurationInstanceConfigPublicIpPtrOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPublicIpPtrInput` via:
//
//	        AsConfigurationInstanceConfigPublicIpArgs{...}
//
//	or:
//
//	        nil
type AsConfigurationInstanceConfigPublicIpPtrInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPublicIpPtrOutput() AsConfigurationInstanceConfigPublicIpPtrOutput
	ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Context) AsConfigurationInstanceConfigPublicIpPtrOutput
}

type asConfigurationInstanceConfigPublicIpPtrType AsConfigurationInstanceConfigPublicIpArgs

func AsConfigurationInstanceConfigPublicIpPtr(v *AsConfigurationInstanceConfigPublicIpArgs) AsConfigurationInstanceConfigPublicIpPtrInput {
	return (*asConfigurationInstanceConfigPublicIpPtrType)(v)
}

func (*asConfigurationInstanceConfigPublicIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (i *asConfigurationInstanceConfigPublicIpPtrType) ToAsConfigurationInstanceConfigPublicIpPtrOutput() AsConfigurationInstanceConfigPublicIpPtrOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Background())
}

func (i *asConfigurationInstanceConfigPublicIpPtrType) ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpPtrOutput)
}

type AsConfigurationInstanceConfigPublicIpOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPublicIpOutput) ToAsConfigurationInstanceConfigPublicIpOutput() AsConfigurationInstanceConfigPublicIpOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpOutput) ToAsConfigurationInstanceConfigPublicIpOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpOutput) ToAsConfigurationInstanceConfigPublicIpPtrOutput() AsConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Background())
}

func (o AsConfigurationInstanceConfigPublicIpOutput) ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsConfigurationInstanceConfigPublicIp) *AsConfigurationInstanceConfigPublicIp {
		return &v
	}).(AsConfigurationInstanceConfigPublicIpPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpOutput) Eip() AsConfigurationInstanceConfigPublicIpEipOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPublicIp) AsConfigurationInstanceConfigPublicIpEip { return v.Eip }).(AsConfigurationInstanceConfigPublicIpEipOutput)
}

type AsConfigurationInstanceConfigPublicIpPtrOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPublicIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPublicIpPtrOutput) ToAsConfigurationInstanceConfigPublicIpPtrOutput() AsConfigurationInstanceConfigPublicIpPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpPtrOutput) ToAsConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpPtrOutput) Elem() AsConfigurationInstanceConfigPublicIpOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIp) AsConfigurationInstanceConfigPublicIp {
		if v != nil {
			return *v
		}
		var ret AsConfigurationInstanceConfigPublicIp
		return ret
	}).(AsConfigurationInstanceConfigPublicIpOutput)
}

func (o AsConfigurationInstanceConfigPublicIpPtrOutput) Eip() AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIp) *AsConfigurationInstanceConfigPublicIpEip {
		if v == nil {
			return nil
		}
		return &v.Eip
	}).(AsConfigurationInstanceConfigPublicIpEipPtrOutput)
}

type AsConfigurationInstanceConfigPublicIpEip struct {
	Bandwidth AsConfigurationInstanceConfigPublicIpEipBandwidth `pulumi:"bandwidth"`
	IpType    string                                            `pulumi:"ipType"`
}

// AsConfigurationInstanceConfigPublicIpEipInput is an input type that accepts AsConfigurationInstanceConfigPublicIpEipArgs and AsConfigurationInstanceConfigPublicIpEipOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPublicIpEipInput` via:
//
//	AsConfigurationInstanceConfigPublicIpEipArgs{...}
type AsConfigurationInstanceConfigPublicIpEipInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPublicIpEipOutput() AsConfigurationInstanceConfigPublicIpEipOutput
	ToAsConfigurationInstanceConfigPublicIpEipOutputWithContext(context.Context) AsConfigurationInstanceConfigPublicIpEipOutput
}

type AsConfigurationInstanceConfigPublicIpEipArgs struct {
	Bandwidth AsConfigurationInstanceConfigPublicIpEipBandwidthInput `pulumi:"bandwidth"`
	IpType    pulumi.StringInput                                     `pulumi:"ipType"`
}

func (AsConfigurationInstanceConfigPublicIpEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigPublicIpEipArgs) ToAsConfigurationInstanceConfigPublicIpEipOutput() AsConfigurationInstanceConfigPublicIpEipOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpEipOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPublicIpEipArgs) ToAsConfigurationInstanceConfigPublicIpEipOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpEipOutput)
}

func (i AsConfigurationInstanceConfigPublicIpEipArgs) ToAsConfigurationInstanceConfigPublicIpEipPtrOutput() AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPublicIpEipArgs) ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpEipOutput).ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx)
}

// AsConfigurationInstanceConfigPublicIpEipPtrInput is an input type that accepts AsConfigurationInstanceConfigPublicIpEipArgs, AsConfigurationInstanceConfigPublicIpEipPtr and AsConfigurationInstanceConfigPublicIpEipPtrOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPublicIpEipPtrInput` via:
//
//	        AsConfigurationInstanceConfigPublicIpEipArgs{...}
//
//	or:
//
//	        nil
type AsConfigurationInstanceConfigPublicIpEipPtrInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPublicIpEipPtrOutput() AsConfigurationInstanceConfigPublicIpEipPtrOutput
	ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Context) AsConfigurationInstanceConfigPublicIpEipPtrOutput
}

type asConfigurationInstanceConfigPublicIpEipPtrType AsConfigurationInstanceConfigPublicIpEipArgs

func AsConfigurationInstanceConfigPublicIpEipPtr(v *AsConfigurationInstanceConfigPublicIpEipArgs) AsConfigurationInstanceConfigPublicIpEipPtrInput {
	return (*asConfigurationInstanceConfigPublicIpEipPtrType)(v)
}

func (*asConfigurationInstanceConfigPublicIpEipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (i *asConfigurationInstanceConfigPublicIpEipPtrType) ToAsConfigurationInstanceConfigPublicIpEipPtrOutput() AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Background())
}

func (i *asConfigurationInstanceConfigPublicIpEipPtrType) ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpEipPtrOutput)
}

type AsConfigurationInstanceConfigPublicIpEipOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPublicIpEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPublicIpEipOutput) ToAsConfigurationInstanceConfigPublicIpEipOutput() AsConfigurationInstanceConfigPublicIpEipOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipOutput) ToAsConfigurationInstanceConfigPublicIpEipOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipOutput) ToAsConfigurationInstanceConfigPublicIpEipPtrOutput() AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o.ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Background())
}

func (o AsConfigurationInstanceConfigPublicIpEipOutput) ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsConfigurationInstanceConfigPublicIpEip) *AsConfigurationInstanceConfigPublicIpEip {
		return &v
	}).(AsConfigurationInstanceConfigPublicIpEipPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipOutput) Bandwidth() AsConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPublicIpEip) AsConfigurationInstanceConfigPublicIpEipBandwidth {
		return v.Bandwidth
	}).(AsConfigurationInstanceConfigPublicIpEipBandwidthOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipOutput) IpType() pulumi.StringOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPublicIpEip) string { return v.IpType }).(pulumi.StringOutput)
}

type AsConfigurationInstanceConfigPublicIpEipPtrOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPublicIpEipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPublicIpEipPtrOutput) ToAsConfigurationInstanceConfigPublicIpEipPtrOutput() AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipPtrOutput) ToAsConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipPtrOutput) Elem() AsConfigurationInstanceConfigPublicIpEipOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEip) AsConfigurationInstanceConfigPublicIpEip {
		if v != nil {
			return *v
		}
		var ret AsConfigurationInstanceConfigPublicIpEip
		return ret
	}).(AsConfigurationInstanceConfigPublicIpEipOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipPtrOutput) Bandwidth() AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEip) *AsConfigurationInstanceConfigPublicIpEipBandwidth {
		if v == nil {
			return nil
		}
		return &v.Bandwidth
	}).(AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipPtrOutput) IpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEip) *string {
		if v == nil {
			return nil
		}
		return &v.IpType
	}).(pulumi.StringPtrOutput)
}

type AsConfigurationInstanceConfigPublicIpEipBandwidth struct {
	ChargingMode *string `pulumi:"chargingMode"`
	Id           *string `pulumi:"id"`
	ShareType    string  `pulumi:"shareType"`
	Size         *int    `pulumi:"size"`
}

// AsConfigurationInstanceConfigPublicIpEipBandwidthInput is an input type that accepts AsConfigurationInstanceConfigPublicIpEipBandwidthArgs and AsConfigurationInstanceConfigPublicIpEipBandwidthOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPublicIpEipBandwidthInput` via:
//
//	AsConfigurationInstanceConfigPublicIpEipBandwidthArgs{...}
type AsConfigurationInstanceConfigPublicIpEipBandwidthInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPublicIpEipBandwidthOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthOutput
	ToAsConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthOutput
}

type AsConfigurationInstanceConfigPublicIpEipBandwidthArgs struct {
	ChargingMode pulumi.StringPtrInput `pulumi:"chargingMode"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	ShareType    pulumi.StringInput    `pulumi:"shareType"`
	Size         pulumi.IntPtrInput    `pulumi:"size"`
}

func (AsConfigurationInstanceConfigPublicIpEipBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (i AsConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToAsConfigurationInstanceConfigPublicIpEipBandwidthOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToAsConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpEipBandwidthOutput)
}

func (i AsConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Background())
}

func (i AsConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpEipBandwidthOutput).ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx)
}

// AsConfigurationInstanceConfigPublicIpEipBandwidthPtrInput is an input type that accepts AsConfigurationInstanceConfigPublicIpEipBandwidthArgs, AsConfigurationInstanceConfigPublicIpEipBandwidthPtr and AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput values.
// You can construct a concrete instance of `AsConfigurationInstanceConfigPublicIpEipBandwidthPtrInput` via:
//
//	        AsConfigurationInstanceConfigPublicIpEipBandwidthArgs{...}
//
//	or:
//
//	        nil
type AsConfigurationInstanceConfigPublicIpEipBandwidthPtrInput interface {
	pulumi.Input

	ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput
	ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput
}

type asConfigurationInstanceConfigPublicIpEipBandwidthPtrType AsConfigurationInstanceConfigPublicIpEipBandwidthArgs

func AsConfigurationInstanceConfigPublicIpEipBandwidthPtr(v *AsConfigurationInstanceConfigPublicIpEipBandwidthArgs) AsConfigurationInstanceConfigPublicIpEipBandwidthPtrInput {
	return (*asConfigurationInstanceConfigPublicIpEipBandwidthPtrType)(v)
}

func (*asConfigurationInstanceConfigPublicIpEipBandwidthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (i *asConfigurationInstanceConfigPublicIpEipBandwidthPtrType) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return i.ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Background())
}

func (i *asConfigurationInstanceConfigPublicIpEipBandwidthPtrType) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput)
}

type AsConfigurationInstanceConfigPublicIpEipBandwidthOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToAsConfigurationInstanceConfigPublicIpEipBandwidthOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToAsConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o.ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Background())
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsConfigurationInstanceConfigPublicIpEipBandwidth) *AsConfigurationInstanceConfigPublicIpEipBandwidth {
		return &v
	}).(AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPublicIpEipBandwidth) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPublicIpEipBandwidth) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPublicIpEipBandwidth) string { return v.ShareType }).(pulumi.StringOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsConfigurationInstanceConfigPublicIpEipBandwidth) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput struct{ *pulumi.OutputState }

func (AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ToAsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) Elem() AsConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEipBandwidth) AsConfigurationInstanceConfigPublicIpEipBandwidth {
		if v != nil {
			return *v
		}
		var ret AsConfigurationInstanceConfigPublicIpEipBandwidth
		return ret
	}).(AsConfigurationInstanceConfigPublicIpEipBandwidthOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.ChargingMode
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ShareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return &v.ShareType
	}).(pulumi.StringPtrOutput)
}

func (o AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsConfigurationInstanceConfigPublicIpEipBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type AsGroupLbaasListener struct {
	PoolId          string  `pulumi:"poolId"`
	ProtocolPort    int     `pulumi:"protocolPort"`
	ProtocolVersion *string `pulumi:"protocolVersion"`
	Weight          *int    `pulumi:"weight"`
}

// AsGroupLbaasListenerInput is an input type that accepts AsGroupLbaasListenerArgs and AsGroupLbaasListenerOutput values.
// You can construct a concrete instance of `AsGroupLbaasListenerInput` via:
//
//	AsGroupLbaasListenerArgs{...}
type AsGroupLbaasListenerInput interface {
	pulumi.Input

	ToAsGroupLbaasListenerOutput() AsGroupLbaasListenerOutput
	ToAsGroupLbaasListenerOutputWithContext(context.Context) AsGroupLbaasListenerOutput
}

type AsGroupLbaasListenerArgs struct {
	PoolId          pulumi.StringInput    `pulumi:"poolId"`
	ProtocolPort    pulumi.IntInput       `pulumi:"protocolPort"`
	ProtocolVersion pulumi.StringPtrInput `pulumi:"protocolVersion"`
	Weight          pulumi.IntPtrInput    `pulumi:"weight"`
}

func (AsGroupLbaasListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsGroupLbaasListener)(nil)).Elem()
}

func (i AsGroupLbaasListenerArgs) ToAsGroupLbaasListenerOutput() AsGroupLbaasListenerOutput {
	return i.ToAsGroupLbaasListenerOutputWithContext(context.Background())
}

func (i AsGroupLbaasListenerArgs) ToAsGroupLbaasListenerOutputWithContext(ctx context.Context) AsGroupLbaasListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupLbaasListenerOutput)
}

// AsGroupLbaasListenerArrayInput is an input type that accepts AsGroupLbaasListenerArray and AsGroupLbaasListenerArrayOutput values.
// You can construct a concrete instance of `AsGroupLbaasListenerArrayInput` via:
//
//	AsGroupLbaasListenerArray{ AsGroupLbaasListenerArgs{...} }
type AsGroupLbaasListenerArrayInput interface {
	pulumi.Input

	ToAsGroupLbaasListenerArrayOutput() AsGroupLbaasListenerArrayOutput
	ToAsGroupLbaasListenerArrayOutputWithContext(context.Context) AsGroupLbaasListenerArrayOutput
}

type AsGroupLbaasListenerArray []AsGroupLbaasListenerInput

func (AsGroupLbaasListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsGroupLbaasListener)(nil)).Elem()
}

func (i AsGroupLbaasListenerArray) ToAsGroupLbaasListenerArrayOutput() AsGroupLbaasListenerArrayOutput {
	return i.ToAsGroupLbaasListenerArrayOutputWithContext(context.Background())
}

func (i AsGroupLbaasListenerArray) ToAsGroupLbaasListenerArrayOutputWithContext(ctx context.Context) AsGroupLbaasListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupLbaasListenerArrayOutput)
}

type AsGroupLbaasListenerOutput struct{ *pulumi.OutputState }

func (AsGroupLbaasListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsGroupLbaasListener)(nil)).Elem()
}

func (o AsGroupLbaasListenerOutput) ToAsGroupLbaasListenerOutput() AsGroupLbaasListenerOutput {
	return o
}

func (o AsGroupLbaasListenerOutput) ToAsGroupLbaasListenerOutputWithContext(ctx context.Context) AsGroupLbaasListenerOutput {
	return o
}

func (o AsGroupLbaasListenerOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v AsGroupLbaasListener) string { return v.PoolId }).(pulumi.StringOutput)
}

func (o AsGroupLbaasListenerOutput) ProtocolPort() pulumi.IntOutput {
	return o.ApplyT(func(v AsGroupLbaasListener) int { return v.ProtocolPort }).(pulumi.IntOutput)
}

func (o AsGroupLbaasListenerOutput) ProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsGroupLbaasListener) *string { return v.ProtocolVersion }).(pulumi.StringPtrOutput)
}

func (o AsGroupLbaasListenerOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsGroupLbaasListener) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AsGroupLbaasListenerArrayOutput struct{ *pulumi.OutputState }

func (AsGroupLbaasListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsGroupLbaasListener)(nil)).Elem()
}

func (o AsGroupLbaasListenerArrayOutput) ToAsGroupLbaasListenerArrayOutput() AsGroupLbaasListenerArrayOutput {
	return o
}

func (o AsGroupLbaasListenerArrayOutput) ToAsGroupLbaasListenerArrayOutputWithContext(ctx context.Context) AsGroupLbaasListenerArrayOutput {
	return o
}

func (o AsGroupLbaasListenerArrayOutput) Index(i pulumi.IntInput) AsGroupLbaasListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AsGroupLbaasListener {
		return vs[0].([]AsGroupLbaasListener)[vs[1].(int)]
	}).(AsGroupLbaasListenerOutput)
}

type AsGroupNetwork struct {
	Id              string  `pulumi:"id"`
	Ipv6BandwidthId *string `pulumi:"ipv6BandwidthId"`
	Ipv6Enable      *bool   `pulumi:"ipv6Enable"`
	SourceDestCheck *bool   `pulumi:"sourceDestCheck"`
}

// AsGroupNetworkInput is an input type that accepts AsGroupNetworkArgs and AsGroupNetworkOutput values.
// You can construct a concrete instance of `AsGroupNetworkInput` via:
//
//	AsGroupNetworkArgs{...}
type AsGroupNetworkInput interface {
	pulumi.Input

	ToAsGroupNetworkOutput() AsGroupNetworkOutput
	ToAsGroupNetworkOutputWithContext(context.Context) AsGroupNetworkOutput
}

type AsGroupNetworkArgs struct {
	Id              pulumi.StringInput    `pulumi:"id"`
	Ipv6BandwidthId pulumi.StringPtrInput `pulumi:"ipv6BandwidthId"`
	Ipv6Enable      pulumi.BoolPtrInput   `pulumi:"ipv6Enable"`
	SourceDestCheck pulumi.BoolPtrInput   `pulumi:"sourceDestCheck"`
}

func (AsGroupNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsGroupNetwork)(nil)).Elem()
}

func (i AsGroupNetworkArgs) ToAsGroupNetworkOutput() AsGroupNetworkOutput {
	return i.ToAsGroupNetworkOutputWithContext(context.Background())
}

func (i AsGroupNetworkArgs) ToAsGroupNetworkOutputWithContext(ctx context.Context) AsGroupNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupNetworkOutput)
}

// AsGroupNetworkArrayInput is an input type that accepts AsGroupNetworkArray and AsGroupNetworkArrayOutput values.
// You can construct a concrete instance of `AsGroupNetworkArrayInput` via:
//
//	AsGroupNetworkArray{ AsGroupNetworkArgs{...} }
type AsGroupNetworkArrayInput interface {
	pulumi.Input

	ToAsGroupNetworkArrayOutput() AsGroupNetworkArrayOutput
	ToAsGroupNetworkArrayOutputWithContext(context.Context) AsGroupNetworkArrayOutput
}

type AsGroupNetworkArray []AsGroupNetworkInput

func (AsGroupNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsGroupNetwork)(nil)).Elem()
}

func (i AsGroupNetworkArray) ToAsGroupNetworkArrayOutput() AsGroupNetworkArrayOutput {
	return i.ToAsGroupNetworkArrayOutputWithContext(context.Background())
}

func (i AsGroupNetworkArray) ToAsGroupNetworkArrayOutputWithContext(ctx context.Context) AsGroupNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupNetworkArrayOutput)
}

type AsGroupNetworkOutput struct{ *pulumi.OutputState }

func (AsGroupNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsGroupNetwork)(nil)).Elem()
}

func (o AsGroupNetworkOutput) ToAsGroupNetworkOutput() AsGroupNetworkOutput {
	return o
}

func (o AsGroupNetworkOutput) ToAsGroupNetworkOutputWithContext(ctx context.Context) AsGroupNetworkOutput {
	return o
}

func (o AsGroupNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AsGroupNetwork) string { return v.Id }).(pulumi.StringOutput)
}

func (o AsGroupNetworkOutput) Ipv6BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsGroupNetwork) *string { return v.Ipv6BandwidthId }).(pulumi.StringPtrOutput)
}

func (o AsGroupNetworkOutput) Ipv6Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AsGroupNetwork) *bool { return v.Ipv6Enable }).(pulumi.BoolPtrOutput)
}

func (o AsGroupNetworkOutput) SourceDestCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AsGroupNetwork) *bool { return v.SourceDestCheck }).(pulumi.BoolPtrOutput)
}

type AsGroupNetworkArrayOutput struct{ *pulumi.OutputState }

func (AsGroupNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsGroupNetwork)(nil)).Elem()
}

func (o AsGroupNetworkArrayOutput) ToAsGroupNetworkArrayOutput() AsGroupNetworkArrayOutput {
	return o
}

func (o AsGroupNetworkArrayOutput) ToAsGroupNetworkArrayOutputWithContext(ctx context.Context) AsGroupNetworkArrayOutput {
	return o
}

func (o AsGroupNetworkArrayOutput) Index(i pulumi.IntInput) AsGroupNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AsGroupNetwork {
		return vs[0].([]AsGroupNetwork)[vs[1].(int)]
	}).(AsGroupNetworkOutput)
}

type AsGroupSecurityGroup struct {
	Id string `pulumi:"id"`
}

// AsGroupSecurityGroupInput is an input type that accepts AsGroupSecurityGroupArgs and AsGroupSecurityGroupOutput values.
// You can construct a concrete instance of `AsGroupSecurityGroupInput` via:
//
//	AsGroupSecurityGroupArgs{...}
type AsGroupSecurityGroupInput interface {
	pulumi.Input

	ToAsGroupSecurityGroupOutput() AsGroupSecurityGroupOutput
	ToAsGroupSecurityGroupOutputWithContext(context.Context) AsGroupSecurityGroupOutput
}

type AsGroupSecurityGroupArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (AsGroupSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsGroupSecurityGroup)(nil)).Elem()
}

func (i AsGroupSecurityGroupArgs) ToAsGroupSecurityGroupOutput() AsGroupSecurityGroupOutput {
	return i.ToAsGroupSecurityGroupOutputWithContext(context.Background())
}

func (i AsGroupSecurityGroupArgs) ToAsGroupSecurityGroupOutputWithContext(ctx context.Context) AsGroupSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupSecurityGroupOutput)
}

// AsGroupSecurityGroupArrayInput is an input type that accepts AsGroupSecurityGroupArray and AsGroupSecurityGroupArrayOutput values.
// You can construct a concrete instance of `AsGroupSecurityGroupArrayInput` via:
//
//	AsGroupSecurityGroupArray{ AsGroupSecurityGroupArgs{...} }
type AsGroupSecurityGroupArrayInput interface {
	pulumi.Input

	ToAsGroupSecurityGroupArrayOutput() AsGroupSecurityGroupArrayOutput
	ToAsGroupSecurityGroupArrayOutputWithContext(context.Context) AsGroupSecurityGroupArrayOutput
}

type AsGroupSecurityGroupArray []AsGroupSecurityGroupInput

func (AsGroupSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsGroupSecurityGroup)(nil)).Elem()
}

func (i AsGroupSecurityGroupArray) ToAsGroupSecurityGroupArrayOutput() AsGroupSecurityGroupArrayOutput {
	return i.ToAsGroupSecurityGroupArrayOutputWithContext(context.Background())
}

func (i AsGroupSecurityGroupArray) ToAsGroupSecurityGroupArrayOutputWithContext(ctx context.Context) AsGroupSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsGroupSecurityGroupArrayOutput)
}

type AsGroupSecurityGroupOutput struct{ *pulumi.OutputState }

func (AsGroupSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsGroupSecurityGroup)(nil)).Elem()
}

func (o AsGroupSecurityGroupOutput) ToAsGroupSecurityGroupOutput() AsGroupSecurityGroupOutput {
	return o
}

func (o AsGroupSecurityGroupOutput) ToAsGroupSecurityGroupOutputWithContext(ctx context.Context) AsGroupSecurityGroupOutput {
	return o
}

func (o AsGroupSecurityGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AsGroupSecurityGroup) string { return v.Id }).(pulumi.StringOutput)
}

type AsGroupSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (AsGroupSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AsGroupSecurityGroup)(nil)).Elem()
}

func (o AsGroupSecurityGroupArrayOutput) ToAsGroupSecurityGroupArrayOutput() AsGroupSecurityGroupArrayOutput {
	return o
}

func (o AsGroupSecurityGroupArrayOutput) ToAsGroupSecurityGroupArrayOutputWithContext(ctx context.Context) AsGroupSecurityGroupArrayOutput {
	return o
}

func (o AsGroupSecurityGroupArrayOutput) Index(i pulumi.IntInput) AsGroupSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AsGroupSecurityGroup {
		return vs[0].([]AsGroupSecurityGroup)[vs[1].(int)]
	}).(AsGroupSecurityGroupOutput)
}

type AsPolicyScalingPolicyAction struct {
	InstanceNumber     *int    `pulumi:"instanceNumber"`
	InstancePercentage *int    `pulumi:"instancePercentage"`
	Operation          *string `pulumi:"operation"`
}

// AsPolicyScalingPolicyActionInput is an input type that accepts AsPolicyScalingPolicyActionArgs and AsPolicyScalingPolicyActionOutput values.
// You can construct a concrete instance of `AsPolicyScalingPolicyActionInput` via:
//
//	AsPolicyScalingPolicyActionArgs{...}
type AsPolicyScalingPolicyActionInput interface {
	pulumi.Input

	ToAsPolicyScalingPolicyActionOutput() AsPolicyScalingPolicyActionOutput
	ToAsPolicyScalingPolicyActionOutputWithContext(context.Context) AsPolicyScalingPolicyActionOutput
}

type AsPolicyScalingPolicyActionArgs struct {
	InstanceNumber     pulumi.IntPtrInput    `pulumi:"instanceNumber"`
	InstancePercentage pulumi.IntPtrInput    `pulumi:"instancePercentage"`
	Operation          pulumi.StringPtrInput `pulumi:"operation"`
}

func (AsPolicyScalingPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsPolicyScalingPolicyAction)(nil)).Elem()
}

func (i AsPolicyScalingPolicyActionArgs) ToAsPolicyScalingPolicyActionOutput() AsPolicyScalingPolicyActionOutput {
	return i.ToAsPolicyScalingPolicyActionOutputWithContext(context.Background())
}

func (i AsPolicyScalingPolicyActionArgs) ToAsPolicyScalingPolicyActionOutputWithContext(ctx context.Context) AsPolicyScalingPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsPolicyScalingPolicyActionOutput)
}

func (i AsPolicyScalingPolicyActionArgs) ToAsPolicyScalingPolicyActionPtrOutput() AsPolicyScalingPolicyActionPtrOutput {
	return i.ToAsPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i AsPolicyScalingPolicyActionArgs) ToAsPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsPolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsPolicyScalingPolicyActionOutput).ToAsPolicyScalingPolicyActionPtrOutputWithContext(ctx)
}

// AsPolicyScalingPolicyActionPtrInput is an input type that accepts AsPolicyScalingPolicyActionArgs, AsPolicyScalingPolicyActionPtr and AsPolicyScalingPolicyActionPtrOutput values.
// You can construct a concrete instance of `AsPolicyScalingPolicyActionPtrInput` via:
//
//	        AsPolicyScalingPolicyActionArgs{...}
//
//	or:
//
//	        nil
type AsPolicyScalingPolicyActionPtrInput interface {
	pulumi.Input

	ToAsPolicyScalingPolicyActionPtrOutput() AsPolicyScalingPolicyActionPtrOutput
	ToAsPolicyScalingPolicyActionPtrOutputWithContext(context.Context) AsPolicyScalingPolicyActionPtrOutput
}

type asPolicyScalingPolicyActionPtrType AsPolicyScalingPolicyActionArgs

func AsPolicyScalingPolicyActionPtr(v *AsPolicyScalingPolicyActionArgs) AsPolicyScalingPolicyActionPtrInput {
	return (*asPolicyScalingPolicyActionPtrType)(v)
}

func (*asPolicyScalingPolicyActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsPolicyScalingPolicyAction)(nil)).Elem()
}

func (i *asPolicyScalingPolicyActionPtrType) ToAsPolicyScalingPolicyActionPtrOutput() AsPolicyScalingPolicyActionPtrOutput {
	return i.ToAsPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i *asPolicyScalingPolicyActionPtrType) ToAsPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsPolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsPolicyScalingPolicyActionPtrOutput)
}

type AsPolicyScalingPolicyActionOutput struct{ *pulumi.OutputState }

func (AsPolicyScalingPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsPolicyScalingPolicyAction)(nil)).Elem()
}

func (o AsPolicyScalingPolicyActionOutput) ToAsPolicyScalingPolicyActionOutput() AsPolicyScalingPolicyActionOutput {
	return o
}

func (o AsPolicyScalingPolicyActionOutput) ToAsPolicyScalingPolicyActionOutputWithContext(ctx context.Context) AsPolicyScalingPolicyActionOutput {
	return o
}

func (o AsPolicyScalingPolicyActionOutput) ToAsPolicyScalingPolicyActionPtrOutput() AsPolicyScalingPolicyActionPtrOutput {
	return o.ToAsPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (o AsPolicyScalingPolicyActionOutput) ToAsPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsPolicyScalingPolicyActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsPolicyScalingPolicyAction) *AsPolicyScalingPolicyAction {
		return &v
	}).(AsPolicyScalingPolicyActionPtrOutput)
}

func (o AsPolicyScalingPolicyActionOutput) InstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsPolicyScalingPolicyAction) *int { return v.InstanceNumber }).(pulumi.IntPtrOutput)
}

func (o AsPolicyScalingPolicyActionOutput) InstancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AsPolicyScalingPolicyAction) *int { return v.InstancePercentage }).(pulumi.IntPtrOutput)
}

func (o AsPolicyScalingPolicyActionOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsPolicyScalingPolicyAction) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

type AsPolicyScalingPolicyActionPtrOutput struct{ *pulumi.OutputState }

func (AsPolicyScalingPolicyActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsPolicyScalingPolicyAction)(nil)).Elem()
}

func (o AsPolicyScalingPolicyActionPtrOutput) ToAsPolicyScalingPolicyActionPtrOutput() AsPolicyScalingPolicyActionPtrOutput {
	return o
}

func (o AsPolicyScalingPolicyActionPtrOutput) ToAsPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) AsPolicyScalingPolicyActionPtrOutput {
	return o
}

func (o AsPolicyScalingPolicyActionPtrOutput) Elem() AsPolicyScalingPolicyActionOutput {
	return o.ApplyT(func(v *AsPolicyScalingPolicyAction) AsPolicyScalingPolicyAction {
		if v != nil {
			return *v
		}
		var ret AsPolicyScalingPolicyAction
		return ret
	}).(AsPolicyScalingPolicyActionOutput)
}

func (o AsPolicyScalingPolicyActionPtrOutput) InstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsPolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.InstanceNumber
	}).(pulumi.IntPtrOutput)
}

func (o AsPolicyScalingPolicyActionPtrOutput) InstancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsPolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.InstancePercentage
	}).(pulumi.IntPtrOutput)
}

func (o AsPolicyScalingPolicyActionPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsPolicyScalingPolicyAction) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

type AsPolicyScheduledPolicy struct {
	EndTime         *string `pulumi:"endTime"`
	LaunchTime      string  `pulumi:"launchTime"`
	RecurrenceType  *string `pulumi:"recurrenceType"`
	RecurrenceValue *string `pulumi:"recurrenceValue"`
	StartTime       *string `pulumi:"startTime"`
}

// AsPolicyScheduledPolicyInput is an input type that accepts AsPolicyScheduledPolicyArgs and AsPolicyScheduledPolicyOutput values.
// You can construct a concrete instance of `AsPolicyScheduledPolicyInput` via:
//
//	AsPolicyScheduledPolicyArgs{...}
type AsPolicyScheduledPolicyInput interface {
	pulumi.Input

	ToAsPolicyScheduledPolicyOutput() AsPolicyScheduledPolicyOutput
	ToAsPolicyScheduledPolicyOutputWithContext(context.Context) AsPolicyScheduledPolicyOutput
}

type AsPolicyScheduledPolicyArgs struct {
	EndTime         pulumi.StringPtrInput `pulumi:"endTime"`
	LaunchTime      pulumi.StringInput    `pulumi:"launchTime"`
	RecurrenceType  pulumi.StringPtrInput `pulumi:"recurrenceType"`
	RecurrenceValue pulumi.StringPtrInput `pulumi:"recurrenceValue"`
	StartTime       pulumi.StringPtrInput `pulumi:"startTime"`
}

func (AsPolicyScheduledPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsPolicyScheduledPolicy)(nil)).Elem()
}

func (i AsPolicyScheduledPolicyArgs) ToAsPolicyScheduledPolicyOutput() AsPolicyScheduledPolicyOutput {
	return i.ToAsPolicyScheduledPolicyOutputWithContext(context.Background())
}

func (i AsPolicyScheduledPolicyArgs) ToAsPolicyScheduledPolicyOutputWithContext(ctx context.Context) AsPolicyScheduledPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsPolicyScheduledPolicyOutput)
}

func (i AsPolicyScheduledPolicyArgs) ToAsPolicyScheduledPolicyPtrOutput() AsPolicyScheduledPolicyPtrOutput {
	return i.ToAsPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i AsPolicyScheduledPolicyArgs) ToAsPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsPolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsPolicyScheduledPolicyOutput).ToAsPolicyScheduledPolicyPtrOutputWithContext(ctx)
}

// AsPolicyScheduledPolicyPtrInput is an input type that accepts AsPolicyScheduledPolicyArgs, AsPolicyScheduledPolicyPtr and AsPolicyScheduledPolicyPtrOutput values.
// You can construct a concrete instance of `AsPolicyScheduledPolicyPtrInput` via:
//
//	        AsPolicyScheduledPolicyArgs{...}
//
//	or:
//
//	        nil
type AsPolicyScheduledPolicyPtrInput interface {
	pulumi.Input

	ToAsPolicyScheduledPolicyPtrOutput() AsPolicyScheduledPolicyPtrOutput
	ToAsPolicyScheduledPolicyPtrOutputWithContext(context.Context) AsPolicyScheduledPolicyPtrOutput
}

type asPolicyScheduledPolicyPtrType AsPolicyScheduledPolicyArgs

func AsPolicyScheduledPolicyPtr(v *AsPolicyScheduledPolicyArgs) AsPolicyScheduledPolicyPtrInput {
	return (*asPolicyScheduledPolicyPtrType)(v)
}

func (*asPolicyScheduledPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsPolicyScheduledPolicy)(nil)).Elem()
}

func (i *asPolicyScheduledPolicyPtrType) ToAsPolicyScheduledPolicyPtrOutput() AsPolicyScheduledPolicyPtrOutput {
	return i.ToAsPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i *asPolicyScheduledPolicyPtrType) ToAsPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsPolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsPolicyScheduledPolicyPtrOutput)
}

type AsPolicyScheduledPolicyOutput struct{ *pulumi.OutputState }

func (AsPolicyScheduledPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsPolicyScheduledPolicy)(nil)).Elem()
}

func (o AsPolicyScheduledPolicyOutput) ToAsPolicyScheduledPolicyOutput() AsPolicyScheduledPolicyOutput {
	return o
}

func (o AsPolicyScheduledPolicyOutput) ToAsPolicyScheduledPolicyOutputWithContext(ctx context.Context) AsPolicyScheduledPolicyOutput {
	return o
}

func (o AsPolicyScheduledPolicyOutput) ToAsPolicyScheduledPolicyPtrOutput() AsPolicyScheduledPolicyPtrOutput {
	return o.ToAsPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (o AsPolicyScheduledPolicyOutput) ToAsPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsPolicyScheduledPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsPolicyScheduledPolicy) *AsPolicyScheduledPolicy {
		return &v
	}).(AsPolicyScheduledPolicyPtrOutput)
}

func (o AsPolicyScheduledPolicyOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsPolicyScheduledPolicy) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o AsPolicyScheduledPolicyOutput) LaunchTime() pulumi.StringOutput {
	return o.ApplyT(func(v AsPolicyScheduledPolicy) string { return v.LaunchTime }).(pulumi.StringOutput)
}

func (o AsPolicyScheduledPolicyOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsPolicyScheduledPolicy) *string { return v.RecurrenceType }).(pulumi.StringPtrOutput)
}

func (o AsPolicyScheduledPolicyOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsPolicyScheduledPolicy) *string { return v.RecurrenceValue }).(pulumi.StringPtrOutput)
}

func (o AsPolicyScheduledPolicyOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsPolicyScheduledPolicy) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type AsPolicyScheduledPolicyPtrOutput struct{ *pulumi.OutputState }

func (AsPolicyScheduledPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsPolicyScheduledPolicy)(nil)).Elem()
}

func (o AsPolicyScheduledPolicyPtrOutput) ToAsPolicyScheduledPolicyPtrOutput() AsPolicyScheduledPolicyPtrOutput {
	return o
}

func (o AsPolicyScheduledPolicyPtrOutput) ToAsPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) AsPolicyScheduledPolicyPtrOutput {
	return o
}

func (o AsPolicyScheduledPolicyPtrOutput) Elem() AsPolicyScheduledPolicyOutput {
	return o.ApplyT(func(v *AsPolicyScheduledPolicy) AsPolicyScheduledPolicy {
		if v != nil {
			return *v
		}
		var ret AsPolicyScheduledPolicy
		return ret
	}).(AsPolicyScheduledPolicyOutput)
}

func (o AsPolicyScheduledPolicyPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

func (o AsPolicyScheduledPolicyPtrOutput) LaunchTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.LaunchTime
	}).(pulumi.StringPtrOutput)
}

func (o AsPolicyScheduledPolicyPtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o AsPolicyScheduledPolicyPtrOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceValue
	}).(pulumi.StringPtrOutput)
}

func (o AsPolicyScheduledPolicyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type CbrBackupShareMember struct {
	// The creation time of the backup shared member.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the project with which the backup is shared.
	DestProjectId string `pulumi:"destProjectId"`
	// The ID of the backup shared member record.
	Id *string `pulumi:"id"`
	// The ID of the image registered with the shared backup copy.
	ImageId *string `pulumi:"imageId"`
	// The backup shared status.
	Status *string `pulumi:"status"`
	// The latest update time of the backup shared member.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The ID of the vault where the shared backup is stored.
	VaultId *string `pulumi:"vaultId"`
}

// CbrBackupShareMemberInput is an input type that accepts CbrBackupShareMemberArgs and CbrBackupShareMemberOutput values.
// You can construct a concrete instance of `CbrBackupShareMemberInput` via:
//
//	CbrBackupShareMemberArgs{...}
type CbrBackupShareMemberInput interface {
	pulumi.Input

	ToCbrBackupShareMemberOutput() CbrBackupShareMemberOutput
	ToCbrBackupShareMemberOutputWithContext(context.Context) CbrBackupShareMemberOutput
}

type CbrBackupShareMemberArgs struct {
	// The creation time of the backup shared member.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The ID of the project with which the backup is shared.
	DestProjectId pulumi.StringInput `pulumi:"destProjectId"`
	// The ID of the backup shared member record.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ID of the image registered with the shared backup copy.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The backup shared status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The latest update time of the backup shared member.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
	// The ID of the vault where the shared backup is stored.
	VaultId pulumi.StringPtrInput `pulumi:"vaultId"`
}

func (CbrBackupShareMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrBackupShareMember)(nil)).Elem()
}

func (i CbrBackupShareMemberArgs) ToCbrBackupShareMemberOutput() CbrBackupShareMemberOutput {
	return i.ToCbrBackupShareMemberOutputWithContext(context.Background())
}

func (i CbrBackupShareMemberArgs) ToCbrBackupShareMemberOutputWithContext(ctx context.Context) CbrBackupShareMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrBackupShareMemberOutput)
}

// CbrBackupShareMemberArrayInput is an input type that accepts CbrBackupShareMemberArray and CbrBackupShareMemberArrayOutput values.
// You can construct a concrete instance of `CbrBackupShareMemberArrayInput` via:
//
//	CbrBackupShareMemberArray{ CbrBackupShareMemberArgs{...} }
type CbrBackupShareMemberArrayInput interface {
	pulumi.Input

	ToCbrBackupShareMemberArrayOutput() CbrBackupShareMemberArrayOutput
	ToCbrBackupShareMemberArrayOutputWithContext(context.Context) CbrBackupShareMemberArrayOutput
}

type CbrBackupShareMemberArray []CbrBackupShareMemberInput

func (CbrBackupShareMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrBackupShareMember)(nil)).Elem()
}

func (i CbrBackupShareMemberArray) ToCbrBackupShareMemberArrayOutput() CbrBackupShareMemberArrayOutput {
	return i.ToCbrBackupShareMemberArrayOutputWithContext(context.Background())
}

func (i CbrBackupShareMemberArray) ToCbrBackupShareMemberArrayOutputWithContext(ctx context.Context) CbrBackupShareMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrBackupShareMemberArrayOutput)
}

type CbrBackupShareMemberOutput struct{ *pulumi.OutputState }

func (CbrBackupShareMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrBackupShareMember)(nil)).Elem()
}

func (o CbrBackupShareMemberOutput) ToCbrBackupShareMemberOutput() CbrBackupShareMemberOutput {
	return o
}

func (o CbrBackupShareMemberOutput) ToCbrBackupShareMemberOutputWithContext(ctx context.Context) CbrBackupShareMemberOutput {
	return o
}

// The creation time of the backup shared member.
func (o CbrBackupShareMemberOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrBackupShareMember) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The ID of the project with which the backup is shared.
func (o CbrBackupShareMemberOutput) DestProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v CbrBackupShareMember) string { return v.DestProjectId }).(pulumi.StringOutput)
}

// The ID of the backup shared member record.
func (o CbrBackupShareMemberOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrBackupShareMember) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ID of the image registered with the shared backup copy.
func (o CbrBackupShareMemberOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrBackupShareMember) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

// The backup shared status.
func (o CbrBackupShareMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrBackupShareMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The latest update time of the backup shared member.
func (o CbrBackupShareMemberOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrBackupShareMember) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The ID of the vault where the shared backup is stored.
func (o CbrBackupShareMemberOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrBackupShareMember) *string { return v.VaultId }).(pulumi.StringPtrOutput)
}

type CbrBackupShareMemberArrayOutput struct{ *pulumi.OutputState }

func (CbrBackupShareMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrBackupShareMember)(nil)).Elem()
}

func (o CbrBackupShareMemberArrayOutput) ToCbrBackupShareMemberArrayOutput() CbrBackupShareMemberArrayOutput {
	return o
}

func (o CbrBackupShareMemberArrayOutput) ToCbrBackupShareMemberArrayOutputWithContext(ctx context.Context) CbrBackupShareMemberArrayOutput {
	return o
}

func (o CbrBackupShareMemberArrayOutput) Index(i pulumi.IntInput) CbrBackupShareMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CbrBackupShareMember {
		return vs[0].([]CbrBackupShareMember)[vs[1].(int)]
	}).(CbrBackupShareMemberOutput)
}

type CbrCheckpointBackup struct {
	// The backup ID.
	Id *string `pulumi:"id"`
	// The backup time.
	ProtectedAt *string `pulumi:"protectedAt"`
	// The ID of backup resource.
	ResourceId string `pulumi:"resourceId"`
	// The backup resource size.
	ResourceSize *int `pulumi:"resourceSize"`
	// The backup status.
	Status *string `pulumi:"status"`
	// The type of the backup resource.
	Type string `pulumi:"type"`
	// The latest update time of the backup.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// CbrCheckpointBackupInput is an input type that accepts CbrCheckpointBackupArgs and CbrCheckpointBackupOutput values.
// You can construct a concrete instance of `CbrCheckpointBackupInput` via:
//
//	CbrCheckpointBackupArgs{...}
type CbrCheckpointBackupInput interface {
	pulumi.Input

	ToCbrCheckpointBackupOutput() CbrCheckpointBackupOutput
	ToCbrCheckpointBackupOutputWithContext(context.Context) CbrCheckpointBackupOutput
}

type CbrCheckpointBackupArgs struct {
	// The backup ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The backup time.
	ProtectedAt pulumi.StringPtrInput `pulumi:"protectedAt"`
	// The ID of backup resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The backup resource size.
	ResourceSize pulumi.IntPtrInput `pulumi:"resourceSize"`
	// The backup status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The type of the backup resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The latest update time of the backup.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (CbrCheckpointBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrCheckpointBackup)(nil)).Elem()
}

func (i CbrCheckpointBackupArgs) ToCbrCheckpointBackupOutput() CbrCheckpointBackupOutput {
	return i.ToCbrCheckpointBackupOutputWithContext(context.Background())
}

func (i CbrCheckpointBackupArgs) ToCbrCheckpointBackupOutputWithContext(ctx context.Context) CbrCheckpointBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrCheckpointBackupOutput)
}

// CbrCheckpointBackupArrayInput is an input type that accepts CbrCheckpointBackupArray and CbrCheckpointBackupArrayOutput values.
// You can construct a concrete instance of `CbrCheckpointBackupArrayInput` via:
//
//	CbrCheckpointBackupArray{ CbrCheckpointBackupArgs{...} }
type CbrCheckpointBackupArrayInput interface {
	pulumi.Input

	ToCbrCheckpointBackupArrayOutput() CbrCheckpointBackupArrayOutput
	ToCbrCheckpointBackupArrayOutputWithContext(context.Context) CbrCheckpointBackupArrayOutput
}

type CbrCheckpointBackupArray []CbrCheckpointBackupInput

func (CbrCheckpointBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrCheckpointBackup)(nil)).Elem()
}

func (i CbrCheckpointBackupArray) ToCbrCheckpointBackupArrayOutput() CbrCheckpointBackupArrayOutput {
	return i.ToCbrCheckpointBackupArrayOutputWithContext(context.Background())
}

func (i CbrCheckpointBackupArray) ToCbrCheckpointBackupArrayOutputWithContext(ctx context.Context) CbrCheckpointBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrCheckpointBackupArrayOutput)
}

type CbrCheckpointBackupOutput struct{ *pulumi.OutputState }

func (CbrCheckpointBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrCheckpointBackup)(nil)).Elem()
}

func (o CbrCheckpointBackupOutput) ToCbrCheckpointBackupOutput() CbrCheckpointBackupOutput {
	return o
}

func (o CbrCheckpointBackupOutput) ToCbrCheckpointBackupOutputWithContext(ctx context.Context) CbrCheckpointBackupOutput {
	return o
}

// The backup ID.
func (o CbrCheckpointBackupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrCheckpointBackup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The backup time.
func (o CbrCheckpointBackupOutput) ProtectedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrCheckpointBackup) *string { return v.ProtectedAt }).(pulumi.StringPtrOutput)
}

// The ID of backup resource.
func (o CbrCheckpointBackupOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v CbrCheckpointBackup) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The backup resource size.
func (o CbrCheckpointBackupOutput) ResourceSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CbrCheckpointBackup) *int { return v.ResourceSize }).(pulumi.IntPtrOutput)
}

// The backup status.
func (o CbrCheckpointBackupOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrCheckpointBackup) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of the backup resource.
func (o CbrCheckpointBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CbrCheckpointBackup) string { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the backup.
func (o CbrCheckpointBackupOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrCheckpointBackup) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type CbrCheckpointBackupArrayOutput struct{ *pulumi.OutputState }

func (CbrCheckpointBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrCheckpointBackup)(nil)).Elem()
}

func (o CbrCheckpointBackupArrayOutput) ToCbrCheckpointBackupArrayOutput() CbrCheckpointBackupArrayOutput {
	return o
}

func (o CbrCheckpointBackupArrayOutput) ToCbrCheckpointBackupArrayOutputWithContext(ctx context.Context) CbrCheckpointBackupArrayOutput {
	return o
}

func (o CbrCheckpointBackupArrayOutput) Index(i pulumi.IntInput) CbrCheckpointBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CbrCheckpointBackup {
		return vs[0].([]CbrCheckpointBackup)[vs[1].(int)]
	}).(CbrCheckpointBackupOutput)
}

type CbrPolicyBackupCycle struct {
	// The weekly backup time.
	Days *string `pulumi:"days"`
	// The execution time of the policy.
	ExecutionTimes []string `pulumi:"executionTimes"`
	// The number of days between each backup.
	Interval *int `pulumi:"interval"`
}

// CbrPolicyBackupCycleInput is an input type that accepts CbrPolicyBackupCycleArgs and CbrPolicyBackupCycleOutput values.
// You can construct a concrete instance of `CbrPolicyBackupCycleInput` via:
//
//	CbrPolicyBackupCycleArgs{...}
type CbrPolicyBackupCycleInput interface {
	pulumi.Input

	ToCbrPolicyBackupCycleOutput() CbrPolicyBackupCycleOutput
	ToCbrPolicyBackupCycleOutputWithContext(context.Context) CbrPolicyBackupCycleOutput
}

type CbrPolicyBackupCycleArgs struct {
	// The weekly backup time.
	Days pulumi.StringPtrInput `pulumi:"days"`
	// The execution time of the policy.
	ExecutionTimes pulumi.StringArrayInput `pulumi:"executionTimes"`
	// The number of days between each backup.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (CbrPolicyBackupCycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrPolicyBackupCycle)(nil)).Elem()
}

func (i CbrPolicyBackupCycleArgs) ToCbrPolicyBackupCycleOutput() CbrPolicyBackupCycleOutput {
	return i.ToCbrPolicyBackupCycleOutputWithContext(context.Background())
}

func (i CbrPolicyBackupCycleArgs) ToCbrPolicyBackupCycleOutputWithContext(ctx context.Context) CbrPolicyBackupCycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrPolicyBackupCycleOutput)
}

func (i CbrPolicyBackupCycleArgs) ToCbrPolicyBackupCyclePtrOutput() CbrPolicyBackupCyclePtrOutput {
	return i.ToCbrPolicyBackupCyclePtrOutputWithContext(context.Background())
}

func (i CbrPolicyBackupCycleArgs) ToCbrPolicyBackupCyclePtrOutputWithContext(ctx context.Context) CbrPolicyBackupCyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrPolicyBackupCycleOutput).ToCbrPolicyBackupCyclePtrOutputWithContext(ctx)
}

// CbrPolicyBackupCyclePtrInput is an input type that accepts CbrPolicyBackupCycleArgs, CbrPolicyBackupCyclePtr and CbrPolicyBackupCyclePtrOutput values.
// You can construct a concrete instance of `CbrPolicyBackupCyclePtrInput` via:
//
//	        CbrPolicyBackupCycleArgs{...}
//
//	or:
//
//	        nil
type CbrPolicyBackupCyclePtrInput interface {
	pulumi.Input

	ToCbrPolicyBackupCyclePtrOutput() CbrPolicyBackupCyclePtrOutput
	ToCbrPolicyBackupCyclePtrOutputWithContext(context.Context) CbrPolicyBackupCyclePtrOutput
}

type cbrPolicyBackupCyclePtrType CbrPolicyBackupCycleArgs

func CbrPolicyBackupCyclePtr(v *CbrPolicyBackupCycleArgs) CbrPolicyBackupCyclePtrInput {
	return (*cbrPolicyBackupCyclePtrType)(v)
}

func (*cbrPolicyBackupCyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CbrPolicyBackupCycle)(nil)).Elem()
}

func (i *cbrPolicyBackupCyclePtrType) ToCbrPolicyBackupCyclePtrOutput() CbrPolicyBackupCyclePtrOutput {
	return i.ToCbrPolicyBackupCyclePtrOutputWithContext(context.Background())
}

func (i *cbrPolicyBackupCyclePtrType) ToCbrPolicyBackupCyclePtrOutputWithContext(ctx context.Context) CbrPolicyBackupCyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrPolicyBackupCyclePtrOutput)
}

type CbrPolicyBackupCycleOutput struct{ *pulumi.OutputState }

func (CbrPolicyBackupCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrPolicyBackupCycle)(nil)).Elem()
}

func (o CbrPolicyBackupCycleOutput) ToCbrPolicyBackupCycleOutput() CbrPolicyBackupCycleOutput {
	return o
}

func (o CbrPolicyBackupCycleOutput) ToCbrPolicyBackupCycleOutputWithContext(ctx context.Context) CbrPolicyBackupCycleOutput {
	return o
}

func (o CbrPolicyBackupCycleOutput) ToCbrPolicyBackupCyclePtrOutput() CbrPolicyBackupCyclePtrOutput {
	return o.ToCbrPolicyBackupCyclePtrOutputWithContext(context.Background())
}

func (o CbrPolicyBackupCycleOutput) ToCbrPolicyBackupCyclePtrOutputWithContext(ctx context.Context) CbrPolicyBackupCyclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CbrPolicyBackupCycle) *CbrPolicyBackupCycle {
		return &v
	}).(CbrPolicyBackupCyclePtrOutput)
}

// The weekly backup time.
func (o CbrPolicyBackupCycleOutput) Days() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrPolicyBackupCycle) *string { return v.Days }).(pulumi.StringPtrOutput)
}

// The execution time of the policy.
func (o CbrPolicyBackupCycleOutput) ExecutionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CbrPolicyBackupCycle) []string { return v.ExecutionTimes }).(pulumi.StringArrayOutput)
}

// The number of days between each backup.
func (o CbrPolicyBackupCycleOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CbrPolicyBackupCycle) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type CbrPolicyBackupCyclePtrOutput struct{ *pulumi.OutputState }

func (CbrPolicyBackupCyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CbrPolicyBackupCycle)(nil)).Elem()
}

func (o CbrPolicyBackupCyclePtrOutput) ToCbrPolicyBackupCyclePtrOutput() CbrPolicyBackupCyclePtrOutput {
	return o
}

func (o CbrPolicyBackupCyclePtrOutput) ToCbrPolicyBackupCyclePtrOutputWithContext(ctx context.Context) CbrPolicyBackupCyclePtrOutput {
	return o
}

func (o CbrPolicyBackupCyclePtrOutput) Elem() CbrPolicyBackupCycleOutput {
	return o.ApplyT(func(v *CbrPolicyBackupCycle) CbrPolicyBackupCycle {
		if v != nil {
			return *v
		}
		var ret CbrPolicyBackupCycle
		return ret
	}).(CbrPolicyBackupCycleOutput)
}

// The weekly backup time.
func (o CbrPolicyBackupCyclePtrOutput) Days() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CbrPolicyBackupCycle) *string {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.StringPtrOutput)
}

// The execution time of the policy.
func (o CbrPolicyBackupCyclePtrOutput) ExecutionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CbrPolicyBackupCycle) []string {
		if v == nil {
			return nil
		}
		return v.ExecutionTimes
	}).(pulumi.StringArrayOutput)
}

// The number of days between each backup.
func (o CbrPolicyBackupCyclePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CbrPolicyBackupCycle) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type CbrPolicyLongTermRetention struct {
	// The latest backup of each day is saved in the long term.
	Daily *int `pulumi:"daily"`
	// How often (after how many incremental backups) a full backup is performed.
	FullBackupInterval *int `pulumi:"fullBackupInterval"`
	// The latest backup of each month is saved in the long term.
	Monthly *int `pulumi:"monthly"`
	// The latest backup of each week is saved in the long term.
	Weekly *int `pulumi:"weekly"`
	// The latest backup of each year is saved in the long term.
	Yearly *int `pulumi:"yearly"`
}

// CbrPolicyLongTermRetentionInput is an input type that accepts CbrPolicyLongTermRetentionArgs and CbrPolicyLongTermRetentionOutput values.
// You can construct a concrete instance of `CbrPolicyLongTermRetentionInput` via:
//
//	CbrPolicyLongTermRetentionArgs{...}
type CbrPolicyLongTermRetentionInput interface {
	pulumi.Input

	ToCbrPolicyLongTermRetentionOutput() CbrPolicyLongTermRetentionOutput
	ToCbrPolicyLongTermRetentionOutputWithContext(context.Context) CbrPolicyLongTermRetentionOutput
}

type CbrPolicyLongTermRetentionArgs struct {
	// The latest backup of each day is saved in the long term.
	Daily pulumi.IntPtrInput `pulumi:"daily"`
	// How often (after how many incremental backups) a full backup is performed.
	FullBackupInterval pulumi.IntPtrInput `pulumi:"fullBackupInterval"`
	// The latest backup of each month is saved in the long term.
	Monthly pulumi.IntPtrInput `pulumi:"monthly"`
	// The latest backup of each week is saved in the long term.
	Weekly pulumi.IntPtrInput `pulumi:"weekly"`
	// The latest backup of each year is saved in the long term.
	Yearly pulumi.IntPtrInput `pulumi:"yearly"`
}

func (CbrPolicyLongTermRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrPolicyLongTermRetention)(nil)).Elem()
}

func (i CbrPolicyLongTermRetentionArgs) ToCbrPolicyLongTermRetentionOutput() CbrPolicyLongTermRetentionOutput {
	return i.ToCbrPolicyLongTermRetentionOutputWithContext(context.Background())
}

func (i CbrPolicyLongTermRetentionArgs) ToCbrPolicyLongTermRetentionOutputWithContext(ctx context.Context) CbrPolicyLongTermRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrPolicyLongTermRetentionOutput)
}

func (i CbrPolicyLongTermRetentionArgs) ToCbrPolicyLongTermRetentionPtrOutput() CbrPolicyLongTermRetentionPtrOutput {
	return i.ToCbrPolicyLongTermRetentionPtrOutputWithContext(context.Background())
}

func (i CbrPolicyLongTermRetentionArgs) ToCbrPolicyLongTermRetentionPtrOutputWithContext(ctx context.Context) CbrPolicyLongTermRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrPolicyLongTermRetentionOutput).ToCbrPolicyLongTermRetentionPtrOutputWithContext(ctx)
}

// CbrPolicyLongTermRetentionPtrInput is an input type that accepts CbrPolicyLongTermRetentionArgs, CbrPolicyLongTermRetentionPtr and CbrPolicyLongTermRetentionPtrOutput values.
// You can construct a concrete instance of `CbrPolicyLongTermRetentionPtrInput` via:
//
//	        CbrPolicyLongTermRetentionArgs{...}
//
//	or:
//
//	        nil
type CbrPolicyLongTermRetentionPtrInput interface {
	pulumi.Input

	ToCbrPolicyLongTermRetentionPtrOutput() CbrPolicyLongTermRetentionPtrOutput
	ToCbrPolicyLongTermRetentionPtrOutputWithContext(context.Context) CbrPolicyLongTermRetentionPtrOutput
}

type cbrPolicyLongTermRetentionPtrType CbrPolicyLongTermRetentionArgs

func CbrPolicyLongTermRetentionPtr(v *CbrPolicyLongTermRetentionArgs) CbrPolicyLongTermRetentionPtrInput {
	return (*cbrPolicyLongTermRetentionPtrType)(v)
}

func (*cbrPolicyLongTermRetentionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CbrPolicyLongTermRetention)(nil)).Elem()
}

func (i *cbrPolicyLongTermRetentionPtrType) ToCbrPolicyLongTermRetentionPtrOutput() CbrPolicyLongTermRetentionPtrOutput {
	return i.ToCbrPolicyLongTermRetentionPtrOutputWithContext(context.Background())
}

func (i *cbrPolicyLongTermRetentionPtrType) ToCbrPolicyLongTermRetentionPtrOutputWithContext(ctx context.Context) CbrPolicyLongTermRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrPolicyLongTermRetentionPtrOutput)
}

type CbrPolicyLongTermRetentionOutput struct{ *pulumi.OutputState }

func (CbrPolicyLongTermRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrPolicyLongTermRetention)(nil)).Elem()
}

func (o CbrPolicyLongTermRetentionOutput) ToCbrPolicyLongTermRetentionOutput() CbrPolicyLongTermRetentionOutput {
	return o
}

func (o CbrPolicyLongTermRetentionOutput) ToCbrPolicyLongTermRetentionOutputWithContext(ctx context.Context) CbrPolicyLongTermRetentionOutput {
	return o
}

func (o CbrPolicyLongTermRetentionOutput) ToCbrPolicyLongTermRetentionPtrOutput() CbrPolicyLongTermRetentionPtrOutput {
	return o.ToCbrPolicyLongTermRetentionPtrOutputWithContext(context.Background())
}

func (o CbrPolicyLongTermRetentionOutput) ToCbrPolicyLongTermRetentionPtrOutputWithContext(ctx context.Context) CbrPolicyLongTermRetentionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CbrPolicyLongTermRetention) *CbrPolicyLongTermRetention {
		return &v
	}).(CbrPolicyLongTermRetentionPtrOutput)
}

// The latest backup of each day is saved in the long term.
func (o CbrPolicyLongTermRetentionOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CbrPolicyLongTermRetention) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// How often (after how many incremental backups) a full backup is performed.
func (o CbrPolicyLongTermRetentionOutput) FullBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CbrPolicyLongTermRetention) *int { return v.FullBackupInterval }).(pulumi.IntPtrOutput)
}

// The latest backup of each month is saved in the long term.
func (o CbrPolicyLongTermRetentionOutput) Monthly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CbrPolicyLongTermRetention) *int { return v.Monthly }).(pulumi.IntPtrOutput)
}

// The latest backup of each week is saved in the long term.
func (o CbrPolicyLongTermRetentionOutput) Weekly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CbrPolicyLongTermRetention) *int { return v.Weekly }).(pulumi.IntPtrOutput)
}

// The latest backup of each year is saved in the long term.
func (o CbrPolicyLongTermRetentionOutput) Yearly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CbrPolicyLongTermRetention) *int { return v.Yearly }).(pulumi.IntPtrOutput)
}

type CbrPolicyLongTermRetentionPtrOutput struct{ *pulumi.OutputState }

func (CbrPolicyLongTermRetentionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CbrPolicyLongTermRetention)(nil)).Elem()
}

func (o CbrPolicyLongTermRetentionPtrOutput) ToCbrPolicyLongTermRetentionPtrOutput() CbrPolicyLongTermRetentionPtrOutput {
	return o
}

func (o CbrPolicyLongTermRetentionPtrOutput) ToCbrPolicyLongTermRetentionPtrOutputWithContext(ctx context.Context) CbrPolicyLongTermRetentionPtrOutput {
	return o
}

func (o CbrPolicyLongTermRetentionPtrOutput) Elem() CbrPolicyLongTermRetentionOutput {
	return o.ApplyT(func(v *CbrPolicyLongTermRetention) CbrPolicyLongTermRetention {
		if v != nil {
			return *v
		}
		var ret CbrPolicyLongTermRetention
		return ret
	}).(CbrPolicyLongTermRetentionOutput)
}

// The latest backup of each day is saved in the long term.
func (o CbrPolicyLongTermRetentionPtrOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CbrPolicyLongTermRetention) *int {
		if v == nil {
			return nil
		}
		return v.Daily
	}).(pulumi.IntPtrOutput)
}

// How often (after how many incremental backups) a full backup is performed.
func (o CbrPolicyLongTermRetentionPtrOutput) FullBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CbrPolicyLongTermRetention) *int {
		if v == nil {
			return nil
		}
		return v.FullBackupInterval
	}).(pulumi.IntPtrOutput)
}

// The latest backup of each month is saved in the long term.
func (o CbrPolicyLongTermRetentionPtrOutput) Monthly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CbrPolicyLongTermRetention) *int {
		if v == nil {
			return nil
		}
		return v.Monthly
	}).(pulumi.IntPtrOutput)
}

// The latest backup of each week is saved in the long term.
func (o CbrPolicyLongTermRetentionPtrOutput) Weekly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CbrPolicyLongTermRetention) *int {
		if v == nil {
			return nil
		}
		return v.Weekly
	}).(pulumi.IntPtrOutput)
}

// The latest backup of each year is saved in the long term.
func (o CbrPolicyLongTermRetentionPtrOutput) Yearly() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CbrPolicyLongTermRetention) *int {
		if v == nil {
			return nil
		}
		return v.Yearly
	}).(pulumi.IntPtrOutput)
}

type CbrVaultPolicy struct {
	// The ID of destination vault to which the replication policy will associated.
	DestinationVaultId *string `pulumi:"destinationVaultId"`
	// The policy ID.
	Id string `pulumi:"id"`
}

// CbrVaultPolicyInput is an input type that accepts CbrVaultPolicyArgs and CbrVaultPolicyOutput values.
// You can construct a concrete instance of `CbrVaultPolicyInput` via:
//
//	CbrVaultPolicyArgs{...}
type CbrVaultPolicyInput interface {
	pulumi.Input

	ToCbrVaultPolicyOutput() CbrVaultPolicyOutput
	ToCbrVaultPolicyOutputWithContext(context.Context) CbrVaultPolicyOutput
}

type CbrVaultPolicyArgs struct {
	// The ID of destination vault to which the replication policy will associated.
	DestinationVaultId pulumi.StringPtrInput `pulumi:"destinationVaultId"`
	// The policy ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (CbrVaultPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrVaultPolicy)(nil)).Elem()
}

func (i CbrVaultPolicyArgs) ToCbrVaultPolicyOutput() CbrVaultPolicyOutput {
	return i.ToCbrVaultPolicyOutputWithContext(context.Background())
}

func (i CbrVaultPolicyArgs) ToCbrVaultPolicyOutputWithContext(ctx context.Context) CbrVaultPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrVaultPolicyOutput)
}

// CbrVaultPolicyArrayInput is an input type that accepts CbrVaultPolicyArray and CbrVaultPolicyArrayOutput values.
// You can construct a concrete instance of `CbrVaultPolicyArrayInput` via:
//
//	CbrVaultPolicyArray{ CbrVaultPolicyArgs{...} }
type CbrVaultPolicyArrayInput interface {
	pulumi.Input

	ToCbrVaultPolicyArrayOutput() CbrVaultPolicyArrayOutput
	ToCbrVaultPolicyArrayOutputWithContext(context.Context) CbrVaultPolicyArrayOutput
}

type CbrVaultPolicyArray []CbrVaultPolicyInput

func (CbrVaultPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrVaultPolicy)(nil)).Elem()
}

func (i CbrVaultPolicyArray) ToCbrVaultPolicyArrayOutput() CbrVaultPolicyArrayOutput {
	return i.ToCbrVaultPolicyArrayOutputWithContext(context.Background())
}

func (i CbrVaultPolicyArray) ToCbrVaultPolicyArrayOutputWithContext(ctx context.Context) CbrVaultPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrVaultPolicyArrayOutput)
}

type CbrVaultPolicyOutput struct{ *pulumi.OutputState }

func (CbrVaultPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrVaultPolicy)(nil)).Elem()
}

func (o CbrVaultPolicyOutput) ToCbrVaultPolicyOutput() CbrVaultPolicyOutput {
	return o
}

func (o CbrVaultPolicyOutput) ToCbrVaultPolicyOutputWithContext(ctx context.Context) CbrVaultPolicyOutput {
	return o
}

// The ID of destination vault to which the replication policy will associated.
func (o CbrVaultPolicyOutput) DestinationVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrVaultPolicy) *string { return v.DestinationVaultId }).(pulumi.StringPtrOutput)
}

// The policy ID.
func (o CbrVaultPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CbrVaultPolicy) string { return v.Id }).(pulumi.StringOutput)
}

type CbrVaultPolicyArrayOutput struct{ *pulumi.OutputState }

func (CbrVaultPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrVaultPolicy)(nil)).Elem()
}

func (o CbrVaultPolicyArrayOutput) ToCbrVaultPolicyArrayOutput() CbrVaultPolicyArrayOutput {
	return o
}

func (o CbrVaultPolicyArrayOutput) ToCbrVaultPolicyArrayOutputWithContext(ctx context.Context) CbrVaultPolicyArrayOutput {
	return o
}

func (o CbrVaultPolicyArrayOutput) Index(i pulumi.IntInput) CbrVaultPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CbrVaultPolicy {
		return vs[0].([]CbrVaultPolicy)[vs[1].(int)]
	}).(CbrVaultPolicyOutput)
}

type CbrVaultResource struct {
	// The array of disk IDs which will be excluded in the backup.
	Excludes []string `pulumi:"excludes"`
	// The array of disk or SFS file systems which will be included in the backup.
	Includes []string `pulumi:"includes"`
	// The ID of the ECS instance to be backed up.
	ServerId *string `pulumi:"serverId"`
}

// CbrVaultResourceInput is an input type that accepts CbrVaultResourceArgs and CbrVaultResourceOutput values.
// You can construct a concrete instance of `CbrVaultResourceInput` via:
//
//	CbrVaultResourceArgs{...}
type CbrVaultResourceInput interface {
	pulumi.Input

	ToCbrVaultResourceOutput() CbrVaultResourceOutput
	ToCbrVaultResourceOutputWithContext(context.Context) CbrVaultResourceOutput
}

type CbrVaultResourceArgs struct {
	// The array of disk IDs which will be excluded in the backup.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// The array of disk or SFS file systems which will be included in the backup.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
	// The ID of the ECS instance to be backed up.
	ServerId pulumi.StringPtrInput `pulumi:"serverId"`
}

func (CbrVaultResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrVaultResource)(nil)).Elem()
}

func (i CbrVaultResourceArgs) ToCbrVaultResourceOutput() CbrVaultResourceOutput {
	return i.ToCbrVaultResourceOutputWithContext(context.Background())
}

func (i CbrVaultResourceArgs) ToCbrVaultResourceOutputWithContext(ctx context.Context) CbrVaultResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrVaultResourceOutput)
}

// CbrVaultResourceArrayInput is an input type that accepts CbrVaultResourceArray and CbrVaultResourceArrayOutput values.
// You can construct a concrete instance of `CbrVaultResourceArrayInput` via:
//
//	CbrVaultResourceArray{ CbrVaultResourceArgs{...} }
type CbrVaultResourceArrayInput interface {
	pulumi.Input

	ToCbrVaultResourceArrayOutput() CbrVaultResourceArrayOutput
	ToCbrVaultResourceArrayOutputWithContext(context.Context) CbrVaultResourceArrayOutput
}

type CbrVaultResourceArray []CbrVaultResourceInput

func (CbrVaultResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrVaultResource)(nil)).Elem()
}

func (i CbrVaultResourceArray) ToCbrVaultResourceArrayOutput() CbrVaultResourceArrayOutput {
	return i.ToCbrVaultResourceArrayOutputWithContext(context.Background())
}

func (i CbrVaultResourceArray) ToCbrVaultResourceArrayOutputWithContext(ctx context.Context) CbrVaultResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbrVaultResourceArrayOutput)
}

type CbrVaultResourceOutput struct{ *pulumi.OutputState }

func (CbrVaultResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CbrVaultResource)(nil)).Elem()
}

func (o CbrVaultResourceOutput) ToCbrVaultResourceOutput() CbrVaultResourceOutput {
	return o
}

func (o CbrVaultResourceOutput) ToCbrVaultResourceOutputWithContext(ctx context.Context) CbrVaultResourceOutput {
	return o
}

// The array of disk IDs which will be excluded in the backup.
func (o CbrVaultResourceOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CbrVaultResource) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// The array of disk or SFS file systems which will be included in the backup.
func (o CbrVaultResourceOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CbrVaultResource) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

// The ID of the ECS instance to be backed up.
func (o CbrVaultResourceOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CbrVaultResource) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

type CbrVaultResourceArrayOutput struct{ *pulumi.OutputState }

func (CbrVaultResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CbrVaultResource)(nil)).Elem()
}

func (o CbrVaultResourceArrayOutput) ToCbrVaultResourceArrayOutput() CbrVaultResourceArrayOutput {
	return o
}

func (o CbrVaultResourceArrayOutput) ToCbrVaultResourceArrayOutputWithContext(ctx context.Context) CbrVaultResourceArrayOutput {
	return o
}

func (o CbrVaultResourceArrayOutput) Index(i pulumi.IntInput) CbrVaultResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CbrVaultResource {
		return vs[0].([]CbrVaultResource)[vs[1].(int)]
	}).(CbrVaultResourceOutput)
}

type CceAddonValues struct {
	Basic      map[string]string `pulumi:"basic"`
	BasicJson  *string           `pulumi:"basicJson"`
	Custom     map[string]string `pulumi:"custom"`
	CustomJson *string           `pulumi:"customJson"`
	Flavor     map[string]string `pulumi:"flavor"`
	FlavorJson *string           `pulumi:"flavorJson"`
}

// CceAddonValuesInput is an input type that accepts CceAddonValuesArgs and CceAddonValuesOutput values.
// You can construct a concrete instance of `CceAddonValuesInput` via:
//
//	CceAddonValuesArgs{...}
type CceAddonValuesInput interface {
	pulumi.Input

	ToCceAddonValuesOutput() CceAddonValuesOutput
	ToCceAddonValuesOutputWithContext(context.Context) CceAddonValuesOutput
}

type CceAddonValuesArgs struct {
	Basic      pulumi.StringMapInput `pulumi:"basic"`
	BasicJson  pulumi.StringPtrInput `pulumi:"basicJson"`
	Custom     pulumi.StringMapInput `pulumi:"custom"`
	CustomJson pulumi.StringPtrInput `pulumi:"customJson"`
	Flavor     pulumi.StringMapInput `pulumi:"flavor"`
	FlavorJson pulumi.StringPtrInput `pulumi:"flavorJson"`
}

func (CceAddonValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceAddonValues)(nil)).Elem()
}

func (i CceAddonValuesArgs) ToCceAddonValuesOutput() CceAddonValuesOutput {
	return i.ToCceAddonValuesOutputWithContext(context.Background())
}

func (i CceAddonValuesArgs) ToCceAddonValuesOutputWithContext(ctx context.Context) CceAddonValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceAddonValuesOutput)
}

func (i CceAddonValuesArgs) ToCceAddonValuesPtrOutput() CceAddonValuesPtrOutput {
	return i.ToCceAddonValuesPtrOutputWithContext(context.Background())
}

func (i CceAddonValuesArgs) ToCceAddonValuesPtrOutputWithContext(ctx context.Context) CceAddonValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceAddonValuesOutput).ToCceAddonValuesPtrOutputWithContext(ctx)
}

// CceAddonValuesPtrInput is an input type that accepts CceAddonValuesArgs, CceAddonValuesPtr and CceAddonValuesPtrOutput values.
// You can construct a concrete instance of `CceAddonValuesPtrInput` via:
//
//	        CceAddonValuesArgs{...}
//
//	or:
//
//	        nil
type CceAddonValuesPtrInput interface {
	pulumi.Input

	ToCceAddonValuesPtrOutput() CceAddonValuesPtrOutput
	ToCceAddonValuesPtrOutputWithContext(context.Context) CceAddonValuesPtrOutput
}

type cceAddonValuesPtrType CceAddonValuesArgs

func CceAddonValuesPtr(v *CceAddonValuesArgs) CceAddonValuesPtrInput {
	return (*cceAddonValuesPtrType)(v)
}

func (*cceAddonValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceAddonValues)(nil)).Elem()
}

func (i *cceAddonValuesPtrType) ToCceAddonValuesPtrOutput() CceAddonValuesPtrOutput {
	return i.ToCceAddonValuesPtrOutputWithContext(context.Background())
}

func (i *cceAddonValuesPtrType) ToCceAddonValuesPtrOutputWithContext(ctx context.Context) CceAddonValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceAddonValuesPtrOutput)
}

type CceAddonValuesOutput struct{ *pulumi.OutputState }

func (CceAddonValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceAddonValues)(nil)).Elem()
}

func (o CceAddonValuesOutput) ToCceAddonValuesOutput() CceAddonValuesOutput {
	return o
}

func (o CceAddonValuesOutput) ToCceAddonValuesOutputWithContext(ctx context.Context) CceAddonValuesOutput {
	return o
}

func (o CceAddonValuesOutput) ToCceAddonValuesPtrOutput() CceAddonValuesPtrOutput {
	return o.ToCceAddonValuesPtrOutputWithContext(context.Background())
}

func (o CceAddonValuesOutput) ToCceAddonValuesPtrOutputWithContext(ctx context.Context) CceAddonValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceAddonValues) *CceAddonValues {
		return &v
	}).(CceAddonValuesPtrOutput)
}

func (o CceAddonValuesOutput) Basic() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceAddonValues) map[string]string { return v.Basic }).(pulumi.StringMapOutput)
}

func (o CceAddonValuesOutput) BasicJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceAddonValues) *string { return v.BasicJson }).(pulumi.StringPtrOutput)
}

func (o CceAddonValuesOutput) Custom() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceAddonValues) map[string]string { return v.Custom }).(pulumi.StringMapOutput)
}

func (o CceAddonValuesOutput) CustomJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceAddonValues) *string { return v.CustomJson }).(pulumi.StringPtrOutput)
}

func (o CceAddonValuesOutput) Flavor() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceAddonValues) map[string]string { return v.Flavor }).(pulumi.StringMapOutput)
}

func (o CceAddonValuesOutput) FlavorJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceAddonValues) *string { return v.FlavorJson }).(pulumi.StringPtrOutput)
}

type CceAddonValuesPtrOutput struct{ *pulumi.OutputState }

func (CceAddonValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceAddonValues)(nil)).Elem()
}

func (o CceAddonValuesPtrOutput) ToCceAddonValuesPtrOutput() CceAddonValuesPtrOutput {
	return o
}

func (o CceAddonValuesPtrOutput) ToCceAddonValuesPtrOutputWithContext(ctx context.Context) CceAddonValuesPtrOutput {
	return o
}

func (o CceAddonValuesPtrOutput) Elem() CceAddonValuesOutput {
	return o.ApplyT(func(v *CceAddonValues) CceAddonValues {
		if v != nil {
			return *v
		}
		var ret CceAddonValues
		return ret
	}).(CceAddonValuesOutput)
}

func (o CceAddonValuesPtrOutput) Basic() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceAddonValues) map[string]string {
		if v == nil {
			return nil
		}
		return v.Basic
	}).(pulumi.StringMapOutput)
}

func (o CceAddonValuesPtrOutput) BasicJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceAddonValues) *string {
		if v == nil {
			return nil
		}
		return v.BasicJson
	}).(pulumi.StringPtrOutput)
}

func (o CceAddonValuesPtrOutput) Custom() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceAddonValues) map[string]string {
		if v == nil {
			return nil
		}
		return v.Custom
	}).(pulumi.StringMapOutput)
}

func (o CceAddonValuesPtrOutput) CustomJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceAddonValues) *string {
		if v == nil {
			return nil
		}
		return v.CustomJson
	}).(pulumi.StringPtrOutput)
}

func (o CceAddonValuesPtrOutput) Flavor() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceAddonValues) map[string]string {
		if v == nil {
			return nil
		}
		return v.Flavor
	}).(pulumi.StringMapOutput)
}

func (o CceAddonValuesPtrOutput) FlavorJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceAddonValues) *string {
		if v == nil {
			return nil
		}
		return v.FlavorJson
	}).(pulumi.StringPtrOutput)
}

type CceClusterCertificateCluster struct {
	CertificateAuthorityData *string `pulumi:"certificateAuthorityData"`
	Name                     *string `pulumi:"name"`
	Server                   *string `pulumi:"server"`
}

// CceClusterCertificateClusterInput is an input type that accepts CceClusterCertificateClusterArgs and CceClusterCertificateClusterOutput values.
// You can construct a concrete instance of `CceClusterCertificateClusterInput` via:
//
//	CceClusterCertificateClusterArgs{...}
type CceClusterCertificateClusterInput interface {
	pulumi.Input

	ToCceClusterCertificateClusterOutput() CceClusterCertificateClusterOutput
	ToCceClusterCertificateClusterOutputWithContext(context.Context) CceClusterCertificateClusterOutput
}

type CceClusterCertificateClusterArgs struct {
	CertificateAuthorityData pulumi.StringPtrInput `pulumi:"certificateAuthorityData"`
	Name                     pulumi.StringPtrInput `pulumi:"name"`
	Server                   pulumi.StringPtrInput `pulumi:"server"`
}

func (CceClusterCertificateClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterCertificateCluster)(nil)).Elem()
}

func (i CceClusterCertificateClusterArgs) ToCceClusterCertificateClusterOutput() CceClusterCertificateClusterOutput {
	return i.ToCceClusterCertificateClusterOutputWithContext(context.Background())
}

func (i CceClusterCertificateClusterArgs) ToCceClusterCertificateClusterOutputWithContext(ctx context.Context) CceClusterCertificateClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterCertificateClusterOutput)
}

// CceClusterCertificateClusterArrayInput is an input type that accepts CceClusterCertificateClusterArray and CceClusterCertificateClusterArrayOutput values.
// You can construct a concrete instance of `CceClusterCertificateClusterArrayInput` via:
//
//	CceClusterCertificateClusterArray{ CceClusterCertificateClusterArgs{...} }
type CceClusterCertificateClusterArrayInput interface {
	pulumi.Input

	ToCceClusterCertificateClusterArrayOutput() CceClusterCertificateClusterArrayOutput
	ToCceClusterCertificateClusterArrayOutputWithContext(context.Context) CceClusterCertificateClusterArrayOutput
}

type CceClusterCertificateClusterArray []CceClusterCertificateClusterInput

func (CceClusterCertificateClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterCertificateCluster)(nil)).Elem()
}

func (i CceClusterCertificateClusterArray) ToCceClusterCertificateClusterArrayOutput() CceClusterCertificateClusterArrayOutput {
	return i.ToCceClusterCertificateClusterArrayOutputWithContext(context.Background())
}

func (i CceClusterCertificateClusterArray) ToCceClusterCertificateClusterArrayOutputWithContext(ctx context.Context) CceClusterCertificateClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterCertificateClusterArrayOutput)
}

type CceClusterCertificateClusterOutput struct{ *pulumi.OutputState }

func (CceClusterCertificateClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterCertificateCluster)(nil)).Elem()
}

func (o CceClusterCertificateClusterOutput) ToCceClusterCertificateClusterOutput() CceClusterCertificateClusterOutput {
	return o
}

func (o CceClusterCertificateClusterOutput) ToCceClusterCertificateClusterOutputWithContext(ctx context.Context) CceClusterCertificateClusterOutput {
	return o
}

func (o CceClusterCertificateClusterOutput) CertificateAuthorityData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterCertificateCluster) *string { return v.CertificateAuthorityData }).(pulumi.StringPtrOutput)
}

func (o CceClusterCertificateClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterCertificateCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CceClusterCertificateClusterOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterCertificateCluster) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type CceClusterCertificateClusterArrayOutput struct{ *pulumi.OutputState }

func (CceClusterCertificateClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterCertificateCluster)(nil)).Elem()
}

func (o CceClusterCertificateClusterArrayOutput) ToCceClusterCertificateClusterArrayOutput() CceClusterCertificateClusterArrayOutput {
	return o
}

func (o CceClusterCertificateClusterArrayOutput) ToCceClusterCertificateClusterArrayOutputWithContext(ctx context.Context) CceClusterCertificateClusterArrayOutput {
	return o
}

func (o CceClusterCertificateClusterArrayOutput) Index(i pulumi.IntInput) CceClusterCertificateClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceClusterCertificateCluster {
		return vs[0].([]CceClusterCertificateCluster)[vs[1].(int)]
	}).(CceClusterCertificateClusterOutput)
}

type CceClusterCertificateUser struct {
	ClientCertificateData *string `pulumi:"clientCertificateData"`
	ClientKeyData         *string `pulumi:"clientKeyData"`
	Name                  *string `pulumi:"name"`
}

// CceClusterCertificateUserInput is an input type that accepts CceClusterCertificateUserArgs and CceClusterCertificateUserOutput values.
// You can construct a concrete instance of `CceClusterCertificateUserInput` via:
//
//	CceClusterCertificateUserArgs{...}
type CceClusterCertificateUserInput interface {
	pulumi.Input

	ToCceClusterCertificateUserOutput() CceClusterCertificateUserOutput
	ToCceClusterCertificateUserOutputWithContext(context.Context) CceClusterCertificateUserOutput
}

type CceClusterCertificateUserArgs struct {
	ClientCertificateData pulumi.StringPtrInput `pulumi:"clientCertificateData"`
	ClientKeyData         pulumi.StringPtrInput `pulumi:"clientKeyData"`
	Name                  pulumi.StringPtrInput `pulumi:"name"`
}

func (CceClusterCertificateUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterCertificateUser)(nil)).Elem()
}

func (i CceClusterCertificateUserArgs) ToCceClusterCertificateUserOutput() CceClusterCertificateUserOutput {
	return i.ToCceClusterCertificateUserOutputWithContext(context.Background())
}

func (i CceClusterCertificateUserArgs) ToCceClusterCertificateUserOutputWithContext(ctx context.Context) CceClusterCertificateUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterCertificateUserOutput)
}

// CceClusterCertificateUserArrayInput is an input type that accepts CceClusterCertificateUserArray and CceClusterCertificateUserArrayOutput values.
// You can construct a concrete instance of `CceClusterCertificateUserArrayInput` via:
//
//	CceClusterCertificateUserArray{ CceClusterCertificateUserArgs{...} }
type CceClusterCertificateUserArrayInput interface {
	pulumi.Input

	ToCceClusterCertificateUserArrayOutput() CceClusterCertificateUserArrayOutput
	ToCceClusterCertificateUserArrayOutputWithContext(context.Context) CceClusterCertificateUserArrayOutput
}

type CceClusterCertificateUserArray []CceClusterCertificateUserInput

func (CceClusterCertificateUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterCertificateUser)(nil)).Elem()
}

func (i CceClusterCertificateUserArray) ToCceClusterCertificateUserArrayOutput() CceClusterCertificateUserArrayOutput {
	return i.ToCceClusterCertificateUserArrayOutputWithContext(context.Background())
}

func (i CceClusterCertificateUserArray) ToCceClusterCertificateUserArrayOutputWithContext(ctx context.Context) CceClusterCertificateUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterCertificateUserArrayOutput)
}

type CceClusterCertificateUserOutput struct{ *pulumi.OutputState }

func (CceClusterCertificateUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterCertificateUser)(nil)).Elem()
}

func (o CceClusterCertificateUserOutput) ToCceClusterCertificateUserOutput() CceClusterCertificateUserOutput {
	return o
}

func (o CceClusterCertificateUserOutput) ToCceClusterCertificateUserOutputWithContext(ctx context.Context) CceClusterCertificateUserOutput {
	return o
}

func (o CceClusterCertificateUserOutput) ClientCertificateData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterCertificateUser) *string { return v.ClientCertificateData }).(pulumi.StringPtrOutput)
}

func (o CceClusterCertificateUserOutput) ClientKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterCertificateUser) *string { return v.ClientKeyData }).(pulumi.StringPtrOutput)
}

func (o CceClusterCertificateUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterCertificateUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CceClusterCertificateUserArrayOutput struct{ *pulumi.OutputState }

func (CceClusterCertificateUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterCertificateUser)(nil)).Elem()
}

func (o CceClusterCertificateUserArrayOutput) ToCceClusterCertificateUserArrayOutput() CceClusterCertificateUserArrayOutput {
	return o
}

func (o CceClusterCertificateUserArrayOutput) ToCceClusterCertificateUserArrayOutputWithContext(ctx context.Context) CceClusterCertificateUserArrayOutput {
	return o
}

func (o CceClusterCertificateUserArrayOutput) Index(i pulumi.IntInput) CceClusterCertificateUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceClusterCertificateUser {
		return vs[0].([]CceClusterCertificateUser)[vs[1].(int)]
	}).(CceClusterCertificateUserOutput)
}

type CceClusterComponentConfiguration struct {
	Configurations *string `pulumi:"configurations"`
	Name           string  `pulumi:"name"`
}

// CceClusterComponentConfigurationInput is an input type that accepts CceClusterComponentConfigurationArgs and CceClusterComponentConfigurationOutput values.
// You can construct a concrete instance of `CceClusterComponentConfigurationInput` via:
//
//	CceClusterComponentConfigurationArgs{...}
type CceClusterComponentConfigurationInput interface {
	pulumi.Input

	ToCceClusterComponentConfigurationOutput() CceClusterComponentConfigurationOutput
	ToCceClusterComponentConfigurationOutputWithContext(context.Context) CceClusterComponentConfigurationOutput
}

type CceClusterComponentConfigurationArgs struct {
	Configurations pulumi.StringPtrInput `pulumi:"configurations"`
	Name           pulumi.StringInput    `pulumi:"name"`
}

func (CceClusterComponentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterComponentConfiguration)(nil)).Elem()
}

func (i CceClusterComponentConfigurationArgs) ToCceClusterComponentConfigurationOutput() CceClusterComponentConfigurationOutput {
	return i.ToCceClusterComponentConfigurationOutputWithContext(context.Background())
}

func (i CceClusterComponentConfigurationArgs) ToCceClusterComponentConfigurationOutputWithContext(ctx context.Context) CceClusterComponentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterComponentConfigurationOutput)
}

// CceClusterComponentConfigurationArrayInput is an input type that accepts CceClusterComponentConfigurationArray and CceClusterComponentConfigurationArrayOutput values.
// You can construct a concrete instance of `CceClusterComponentConfigurationArrayInput` via:
//
//	CceClusterComponentConfigurationArray{ CceClusterComponentConfigurationArgs{...} }
type CceClusterComponentConfigurationArrayInput interface {
	pulumi.Input

	ToCceClusterComponentConfigurationArrayOutput() CceClusterComponentConfigurationArrayOutput
	ToCceClusterComponentConfigurationArrayOutputWithContext(context.Context) CceClusterComponentConfigurationArrayOutput
}

type CceClusterComponentConfigurationArray []CceClusterComponentConfigurationInput

func (CceClusterComponentConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterComponentConfiguration)(nil)).Elem()
}

func (i CceClusterComponentConfigurationArray) ToCceClusterComponentConfigurationArrayOutput() CceClusterComponentConfigurationArrayOutput {
	return i.ToCceClusterComponentConfigurationArrayOutputWithContext(context.Background())
}

func (i CceClusterComponentConfigurationArray) ToCceClusterComponentConfigurationArrayOutputWithContext(ctx context.Context) CceClusterComponentConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterComponentConfigurationArrayOutput)
}

type CceClusterComponentConfigurationOutput struct{ *pulumi.OutputState }

func (CceClusterComponentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterComponentConfiguration)(nil)).Elem()
}

func (o CceClusterComponentConfigurationOutput) ToCceClusterComponentConfigurationOutput() CceClusterComponentConfigurationOutput {
	return o
}

func (o CceClusterComponentConfigurationOutput) ToCceClusterComponentConfigurationOutputWithContext(ctx context.Context) CceClusterComponentConfigurationOutput {
	return o
}

func (o CceClusterComponentConfigurationOutput) Configurations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterComponentConfiguration) *string { return v.Configurations }).(pulumi.StringPtrOutput)
}

func (o CceClusterComponentConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceClusterComponentConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

type CceClusterComponentConfigurationArrayOutput struct{ *pulumi.OutputState }

func (CceClusterComponentConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterComponentConfiguration)(nil)).Elem()
}

func (o CceClusterComponentConfigurationArrayOutput) ToCceClusterComponentConfigurationArrayOutput() CceClusterComponentConfigurationArrayOutput {
	return o
}

func (o CceClusterComponentConfigurationArrayOutput) ToCceClusterComponentConfigurationArrayOutputWithContext(ctx context.Context) CceClusterComponentConfigurationArrayOutput {
	return o
}

func (o CceClusterComponentConfigurationArrayOutput) Index(i pulumi.IntInput) CceClusterComponentConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceClusterComponentConfiguration {
		return vs[0].([]CceClusterComponentConfiguration)[vs[1].(int)]
	}).(CceClusterComponentConfigurationOutput)
}

type CceClusterExtendParam struct {
	ClusterAz        *string `pulumi:"clusterAz"`
	CpuManagerPolicy *string `pulumi:"cpuManagerPolicy"`
	DecMasterFlavor  *string `pulumi:"decMasterFlavor"`
	DockerUmaskMode  *string `pulumi:"dockerUmaskMode"`
	DssMasterVolumes *string `pulumi:"dssMasterVolumes"`
	FixPoolMask      *string `pulumi:"fixPoolMask"`
}

// CceClusterExtendParamInput is an input type that accepts CceClusterExtendParamArgs and CceClusterExtendParamOutput values.
// You can construct a concrete instance of `CceClusterExtendParamInput` via:
//
//	CceClusterExtendParamArgs{...}
type CceClusterExtendParamInput interface {
	pulumi.Input

	ToCceClusterExtendParamOutput() CceClusterExtendParamOutput
	ToCceClusterExtendParamOutputWithContext(context.Context) CceClusterExtendParamOutput
}

type CceClusterExtendParamArgs struct {
	ClusterAz        pulumi.StringPtrInput `pulumi:"clusterAz"`
	CpuManagerPolicy pulumi.StringPtrInput `pulumi:"cpuManagerPolicy"`
	DecMasterFlavor  pulumi.StringPtrInput `pulumi:"decMasterFlavor"`
	DockerUmaskMode  pulumi.StringPtrInput `pulumi:"dockerUmaskMode"`
	DssMasterVolumes pulumi.StringPtrInput `pulumi:"dssMasterVolumes"`
	FixPoolMask      pulumi.StringPtrInput `pulumi:"fixPoolMask"`
}

func (CceClusterExtendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterExtendParam)(nil)).Elem()
}

func (i CceClusterExtendParamArgs) ToCceClusterExtendParamOutput() CceClusterExtendParamOutput {
	return i.ToCceClusterExtendParamOutputWithContext(context.Background())
}

func (i CceClusterExtendParamArgs) ToCceClusterExtendParamOutputWithContext(ctx context.Context) CceClusterExtendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterExtendParamOutput)
}

// CceClusterExtendParamArrayInput is an input type that accepts CceClusterExtendParamArray and CceClusterExtendParamArrayOutput values.
// You can construct a concrete instance of `CceClusterExtendParamArrayInput` via:
//
//	CceClusterExtendParamArray{ CceClusterExtendParamArgs{...} }
type CceClusterExtendParamArrayInput interface {
	pulumi.Input

	ToCceClusterExtendParamArrayOutput() CceClusterExtendParamArrayOutput
	ToCceClusterExtendParamArrayOutputWithContext(context.Context) CceClusterExtendParamArrayOutput
}

type CceClusterExtendParamArray []CceClusterExtendParamInput

func (CceClusterExtendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterExtendParam)(nil)).Elem()
}

func (i CceClusterExtendParamArray) ToCceClusterExtendParamArrayOutput() CceClusterExtendParamArrayOutput {
	return i.ToCceClusterExtendParamArrayOutputWithContext(context.Background())
}

func (i CceClusterExtendParamArray) ToCceClusterExtendParamArrayOutputWithContext(ctx context.Context) CceClusterExtendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterExtendParamArrayOutput)
}

type CceClusterExtendParamOutput struct{ *pulumi.OutputState }

func (CceClusterExtendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterExtendParam)(nil)).Elem()
}

func (o CceClusterExtendParamOutput) ToCceClusterExtendParamOutput() CceClusterExtendParamOutput {
	return o
}

func (o CceClusterExtendParamOutput) ToCceClusterExtendParamOutputWithContext(ctx context.Context) CceClusterExtendParamOutput {
	return o
}

func (o CceClusterExtendParamOutput) ClusterAz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterExtendParam) *string { return v.ClusterAz }).(pulumi.StringPtrOutput)
}

func (o CceClusterExtendParamOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterExtendParam) *string { return v.CpuManagerPolicy }).(pulumi.StringPtrOutput)
}

func (o CceClusterExtendParamOutput) DecMasterFlavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterExtendParam) *string { return v.DecMasterFlavor }).(pulumi.StringPtrOutput)
}

func (o CceClusterExtendParamOutput) DockerUmaskMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterExtendParam) *string { return v.DockerUmaskMode }).(pulumi.StringPtrOutput)
}

func (o CceClusterExtendParamOutput) DssMasterVolumes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterExtendParam) *string { return v.DssMasterVolumes }).(pulumi.StringPtrOutput)
}

func (o CceClusterExtendParamOutput) FixPoolMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterExtendParam) *string { return v.FixPoolMask }).(pulumi.StringPtrOutput)
}

type CceClusterExtendParamArrayOutput struct{ *pulumi.OutputState }

func (CceClusterExtendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterExtendParam)(nil)).Elem()
}

func (o CceClusterExtendParamArrayOutput) ToCceClusterExtendParamArrayOutput() CceClusterExtendParamArrayOutput {
	return o
}

func (o CceClusterExtendParamArrayOutput) ToCceClusterExtendParamArrayOutputWithContext(ctx context.Context) CceClusterExtendParamArrayOutput {
	return o
}

func (o CceClusterExtendParamArrayOutput) Index(i pulumi.IntInput) CceClusterExtendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceClusterExtendParam {
		return vs[0].([]CceClusterExtendParam)[vs[1].(int)]
	}).(CceClusterExtendParamOutput)
}

type CceClusterMaster struct {
	AvailabilityZone *string `pulumi:"availabilityZone"`
}

// CceClusterMasterInput is an input type that accepts CceClusterMasterArgs and CceClusterMasterOutput values.
// You can construct a concrete instance of `CceClusterMasterInput` via:
//
//	CceClusterMasterArgs{...}
type CceClusterMasterInput interface {
	pulumi.Input

	ToCceClusterMasterOutput() CceClusterMasterOutput
	ToCceClusterMasterOutputWithContext(context.Context) CceClusterMasterOutput
}

type CceClusterMasterArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
}

func (CceClusterMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterMaster)(nil)).Elem()
}

func (i CceClusterMasterArgs) ToCceClusterMasterOutput() CceClusterMasterOutput {
	return i.ToCceClusterMasterOutputWithContext(context.Background())
}

func (i CceClusterMasterArgs) ToCceClusterMasterOutputWithContext(ctx context.Context) CceClusterMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterMasterOutput)
}

// CceClusterMasterArrayInput is an input type that accepts CceClusterMasterArray and CceClusterMasterArrayOutput values.
// You can construct a concrete instance of `CceClusterMasterArrayInput` via:
//
//	CceClusterMasterArray{ CceClusterMasterArgs{...} }
type CceClusterMasterArrayInput interface {
	pulumi.Input

	ToCceClusterMasterArrayOutput() CceClusterMasterArrayOutput
	ToCceClusterMasterArrayOutputWithContext(context.Context) CceClusterMasterArrayOutput
}

type CceClusterMasterArray []CceClusterMasterInput

func (CceClusterMasterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterMaster)(nil)).Elem()
}

func (i CceClusterMasterArray) ToCceClusterMasterArrayOutput() CceClusterMasterArrayOutput {
	return i.ToCceClusterMasterArrayOutputWithContext(context.Background())
}

func (i CceClusterMasterArray) ToCceClusterMasterArrayOutputWithContext(ctx context.Context) CceClusterMasterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterMasterArrayOutput)
}

type CceClusterMasterOutput struct{ *pulumi.OutputState }

func (CceClusterMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceClusterMaster)(nil)).Elem()
}

func (o CceClusterMasterOutput) ToCceClusterMasterOutput() CceClusterMasterOutput {
	return o
}

func (o CceClusterMasterOutput) ToCceClusterMasterOutputWithContext(ctx context.Context) CceClusterMasterOutput {
	return o
}

func (o CceClusterMasterOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceClusterMaster) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

type CceClusterMasterArrayOutput struct{ *pulumi.OutputState }

func (CceClusterMasterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceClusterMaster)(nil)).Elem()
}

func (o CceClusterMasterArrayOutput) ToCceClusterMasterArrayOutput() CceClusterMasterArrayOutput {
	return o
}

func (o CceClusterMasterArrayOutput) ToCceClusterMasterArrayOutputWithContext(ctx context.Context) CceClusterMasterArrayOutput {
	return o
}

func (o CceClusterMasterArrayOutput) Index(i pulumi.IntInput) CceClusterMasterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceClusterMaster {
		return vs[0].([]CceClusterMaster)[vs[1].(int)]
	}).(CceClusterMasterOutput)
}

type CceNodeAttachDataVolume struct {
	DssPoolId *string `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  *string           `pulumi:"extendParam"`
	ExtendParams map[string]string `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough *bool   `pulumi:"hwPassthrough"`
	Iops          *int    `pulumi:"iops"`
	KmsKeyId      *string `pulumi:"kmsKeyId"`
	Size          *int    `pulumi:"size"`
	Throughput    *int    `pulumi:"throughput"`
	Volumetype    *string `pulumi:"volumetype"`
}

// CceNodeAttachDataVolumeInput is an input type that accepts CceNodeAttachDataVolumeArgs and CceNodeAttachDataVolumeOutput values.
// You can construct a concrete instance of `CceNodeAttachDataVolumeInput` via:
//
//	CceNodeAttachDataVolumeArgs{...}
type CceNodeAttachDataVolumeInput interface {
	pulumi.Input

	ToCceNodeAttachDataVolumeOutput() CceNodeAttachDataVolumeOutput
	ToCceNodeAttachDataVolumeOutputWithContext(context.Context) CceNodeAttachDataVolumeOutput
}

type CceNodeAttachDataVolumeArgs struct {
	DssPoolId pulumi.StringPtrInput `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  pulumi.StringPtrInput `pulumi:"extendParam"`
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough pulumi.BoolPtrInput   `pulumi:"hwPassthrough"`
	Iops          pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId      pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	Size          pulumi.IntPtrInput    `pulumi:"size"`
	Throughput    pulumi.IntPtrInput    `pulumi:"throughput"`
	Volumetype    pulumi.StringPtrInput `pulumi:"volumetype"`
}

func (CceNodeAttachDataVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachDataVolume)(nil)).Elem()
}

func (i CceNodeAttachDataVolumeArgs) ToCceNodeAttachDataVolumeOutput() CceNodeAttachDataVolumeOutput {
	return i.ToCceNodeAttachDataVolumeOutputWithContext(context.Background())
}

func (i CceNodeAttachDataVolumeArgs) ToCceNodeAttachDataVolumeOutputWithContext(ctx context.Context) CceNodeAttachDataVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachDataVolumeOutput)
}

// CceNodeAttachDataVolumeArrayInput is an input type that accepts CceNodeAttachDataVolumeArray and CceNodeAttachDataVolumeArrayOutput values.
// You can construct a concrete instance of `CceNodeAttachDataVolumeArrayInput` via:
//
//	CceNodeAttachDataVolumeArray{ CceNodeAttachDataVolumeArgs{...} }
type CceNodeAttachDataVolumeArrayInput interface {
	pulumi.Input

	ToCceNodeAttachDataVolumeArrayOutput() CceNodeAttachDataVolumeArrayOutput
	ToCceNodeAttachDataVolumeArrayOutputWithContext(context.Context) CceNodeAttachDataVolumeArrayOutput
}

type CceNodeAttachDataVolumeArray []CceNodeAttachDataVolumeInput

func (CceNodeAttachDataVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachDataVolume)(nil)).Elem()
}

func (i CceNodeAttachDataVolumeArray) ToCceNodeAttachDataVolumeArrayOutput() CceNodeAttachDataVolumeArrayOutput {
	return i.ToCceNodeAttachDataVolumeArrayOutputWithContext(context.Background())
}

func (i CceNodeAttachDataVolumeArray) ToCceNodeAttachDataVolumeArrayOutputWithContext(ctx context.Context) CceNodeAttachDataVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachDataVolumeArrayOutput)
}

type CceNodeAttachDataVolumeOutput struct{ *pulumi.OutputState }

func (CceNodeAttachDataVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachDataVolume)(nil)).Elem()
}

func (o CceNodeAttachDataVolumeOutput) ToCceNodeAttachDataVolumeOutput() CceNodeAttachDataVolumeOutput {
	return o
}

func (o CceNodeAttachDataVolumeOutput) ToCceNodeAttachDataVolumeOutputWithContext(ctx context.Context) CceNodeAttachDataVolumeOutput {
	return o
}

func (o CceNodeAttachDataVolumeOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *string { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodeAttachDataVolumeOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *string { return v.ExtendParam }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachDataVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodeAttachDataVolumeOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *bool { return v.HwPassthrough }).(pulumi.BoolPtrOutput)
}

func (o CceNodeAttachDataVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o CceNodeAttachDataVolumeOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachDataVolumeOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o CceNodeAttachDataVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o CceNodeAttachDataVolumeOutput) Volumetype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachDataVolume) *string { return v.Volumetype }).(pulumi.StringPtrOutput)
}

type CceNodeAttachDataVolumeArrayOutput struct{ *pulumi.OutputState }

func (CceNodeAttachDataVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachDataVolume)(nil)).Elem()
}

func (o CceNodeAttachDataVolumeArrayOutput) ToCceNodeAttachDataVolumeArrayOutput() CceNodeAttachDataVolumeArrayOutput {
	return o
}

func (o CceNodeAttachDataVolumeArrayOutput) ToCceNodeAttachDataVolumeArrayOutputWithContext(ctx context.Context) CceNodeAttachDataVolumeArrayOutput {
	return o
}

func (o CceNodeAttachDataVolumeArrayOutput) Index(i pulumi.IntInput) CceNodeAttachDataVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeAttachDataVolume {
		return vs[0].([]CceNodeAttachDataVolume)[vs[1].(int)]
	}).(CceNodeAttachDataVolumeOutput)
}

type CceNodeAttachHostnameConfig struct {
	Type string `pulumi:"type"`
}

// CceNodeAttachHostnameConfigInput is an input type that accepts CceNodeAttachHostnameConfigArgs and CceNodeAttachHostnameConfigOutput values.
// You can construct a concrete instance of `CceNodeAttachHostnameConfigInput` via:
//
//	CceNodeAttachHostnameConfigArgs{...}
type CceNodeAttachHostnameConfigInput interface {
	pulumi.Input

	ToCceNodeAttachHostnameConfigOutput() CceNodeAttachHostnameConfigOutput
	ToCceNodeAttachHostnameConfigOutputWithContext(context.Context) CceNodeAttachHostnameConfigOutput
}

type CceNodeAttachHostnameConfigArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (CceNodeAttachHostnameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachHostnameConfig)(nil)).Elem()
}

func (i CceNodeAttachHostnameConfigArgs) ToCceNodeAttachHostnameConfigOutput() CceNodeAttachHostnameConfigOutput {
	return i.ToCceNodeAttachHostnameConfigOutputWithContext(context.Background())
}

func (i CceNodeAttachHostnameConfigArgs) ToCceNodeAttachHostnameConfigOutputWithContext(ctx context.Context) CceNodeAttachHostnameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachHostnameConfigOutput)
}

func (i CceNodeAttachHostnameConfigArgs) ToCceNodeAttachHostnameConfigPtrOutput() CceNodeAttachHostnameConfigPtrOutput {
	return i.ToCceNodeAttachHostnameConfigPtrOutputWithContext(context.Background())
}

func (i CceNodeAttachHostnameConfigArgs) ToCceNodeAttachHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeAttachHostnameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachHostnameConfigOutput).ToCceNodeAttachHostnameConfigPtrOutputWithContext(ctx)
}

// CceNodeAttachHostnameConfigPtrInput is an input type that accepts CceNodeAttachHostnameConfigArgs, CceNodeAttachHostnameConfigPtr and CceNodeAttachHostnameConfigPtrOutput values.
// You can construct a concrete instance of `CceNodeAttachHostnameConfigPtrInput` via:
//
//	        CceNodeAttachHostnameConfigArgs{...}
//
//	or:
//
//	        nil
type CceNodeAttachHostnameConfigPtrInput interface {
	pulumi.Input

	ToCceNodeAttachHostnameConfigPtrOutput() CceNodeAttachHostnameConfigPtrOutput
	ToCceNodeAttachHostnameConfigPtrOutputWithContext(context.Context) CceNodeAttachHostnameConfigPtrOutput
}

type cceNodeAttachHostnameConfigPtrType CceNodeAttachHostnameConfigArgs

func CceNodeAttachHostnameConfigPtr(v *CceNodeAttachHostnameConfigArgs) CceNodeAttachHostnameConfigPtrInput {
	return (*cceNodeAttachHostnameConfigPtrType)(v)
}

func (*cceNodeAttachHostnameConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeAttachHostnameConfig)(nil)).Elem()
}

func (i *cceNodeAttachHostnameConfigPtrType) ToCceNodeAttachHostnameConfigPtrOutput() CceNodeAttachHostnameConfigPtrOutput {
	return i.ToCceNodeAttachHostnameConfigPtrOutputWithContext(context.Background())
}

func (i *cceNodeAttachHostnameConfigPtrType) ToCceNodeAttachHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeAttachHostnameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachHostnameConfigPtrOutput)
}

type CceNodeAttachHostnameConfigOutput struct{ *pulumi.OutputState }

func (CceNodeAttachHostnameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachHostnameConfig)(nil)).Elem()
}

func (o CceNodeAttachHostnameConfigOutput) ToCceNodeAttachHostnameConfigOutput() CceNodeAttachHostnameConfigOutput {
	return o
}

func (o CceNodeAttachHostnameConfigOutput) ToCceNodeAttachHostnameConfigOutputWithContext(ctx context.Context) CceNodeAttachHostnameConfigOutput {
	return o
}

func (o CceNodeAttachHostnameConfigOutput) ToCceNodeAttachHostnameConfigPtrOutput() CceNodeAttachHostnameConfigPtrOutput {
	return o.ToCceNodeAttachHostnameConfigPtrOutputWithContext(context.Background())
}

func (o CceNodeAttachHostnameConfigOutput) ToCceNodeAttachHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeAttachHostnameConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodeAttachHostnameConfig) *CceNodeAttachHostnameConfig {
		return &v
	}).(CceNodeAttachHostnameConfigPtrOutput)
}

func (o CceNodeAttachHostnameConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachHostnameConfig) string { return v.Type }).(pulumi.StringOutput)
}

type CceNodeAttachHostnameConfigPtrOutput struct{ *pulumi.OutputState }

func (CceNodeAttachHostnameConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeAttachHostnameConfig)(nil)).Elem()
}

func (o CceNodeAttachHostnameConfigPtrOutput) ToCceNodeAttachHostnameConfigPtrOutput() CceNodeAttachHostnameConfigPtrOutput {
	return o
}

func (o CceNodeAttachHostnameConfigPtrOutput) ToCceNodeAttachHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeAttachHostnameConfigPtrOutput {
	return o
}

func (o CceNodeAttachHostnameConfigPtrOutput) Elem() CceNodeAttachHostnameConfigOutput {
	return o.ApplyT(func(v *CceNodeAttachHostnameConfig) CceNodeAttachHostnameConfig {
		if v != nil {
			return *v
		}
		var ret CceNodeAttachHostnameConfig
		return ret
	}).(CceNodeAttachHostnameConfigOutput)
}

func (o CceNodeAttachHostnameConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeAttachHostnameConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CceNodeAttachRootVolume struct {
	DssPoolId *string `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  *string           `pulumi:"extendParam"`
	ExtendParams map[string]string `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough *bool   `pulumi:"hwPassthrough"`
	Iops          *int    `pulumi:"iops"`
	KmsKeyId      *string `pulumi:"kmsKeyId"`
	Size          *int    `pulumi:"size"`
	Throughput    *int    `pulumi:"throughput"`
	Volumetype    *string `pulumi:"volumetype"`
}

// CceNodeAttachRootVolumeInput is an input type that accepts CceNodeAttachRootVolumeArgs and CceNodeAttachRootVolumeOutput values.
// You can construct a concrete instance of `CceNodeAttachRootVolumeInput` via:
//
//	CceNodeAttachRootVolumeArgs{...}
type CceNodeAttachRootVolumeInput interface {
	pulumi.Input

	ToCceNodeAttachRootVolumeOutput() CceNodeAttachRootVolumeOutput
	ToCceNodeAttachRootVolumeOutputWithContext(context.Context) CceNodeAttachRootVolumeOutput
}

type CceNodeAttachRootVolumeArgs struct {
	DssPoolId pulumi.StringPtrInput `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  pulumi.StringPtrInput `pulumi:"extendParam"`
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough pulumi.BoolPtrInput   `pulumi:"hwPassthrough"`
	Iops          pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId      pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	Size          pulumi.IntPtrInput    `pulumi:"size"`
	Throughput    pulumi.IntPtrInput    `pulumi:"throughput"`
	Volumetype    pulumi.StringPtrInput `pulumi:"volumetype"`
}

func (CceNodeAttachRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachRootVolume)(nil)).Elem()
}

func (i CceNodeAttachRootVolumeArgs) ToCceNodeAttachRootVolumeOutput() CceNodeAttachRootVolumeOutput {
	return i.ToCceNodeAttachRootVolumeOutputWithContext(context.Background())
}

func (i CceNodeAttachRootVolumeArgs) ToCceNodeAttachRootVolumeOutputWithContext(ctx context.Context) CceNodeAttachRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachRootVolumeOutput)
}

// CceNodeAttachRootVolumeArrayInput is an input type that accepts CceNodeAttachRootVolumeArray and CceNodeAttachRootVolumeArrayOutput values.
// You can construct a concrete instance of `CceNodeAttachRootVolumeArrayInput` via:
//
//	CceNodeAttachRootVolumeArray{ CceNodeAttachRootVolumeArgs{...} }
type CceNodeAttachRootVolumeArrayInput interface {
	pulumi.Input

	ToCceNodeAttachRootVolumeArrayOutput() CceNodeAttachRootVolumeArrayOutput
	ToCceNodeAttachRootVolumeArrayOutputWithContext(context.Context) CceNodeAttachRootVolumeArrayOutput
}

type CceNodeAttachRootVolumeArray []CceNodeAttachRootVolumeInput

func (CceNodeAttachRootVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachRootVolume)(nil)).Elem()
}

func (i CceNodeAttachRootVolumeArray) ToCceNodeAttachRootVolumeArrayOutput() CceNodeAttachRootVolumeArrayOutput {
	return i.ToCceNodeAttachRootVolumeArrayOutputWithContext(context.Background())
}

func (i CceNodeAttachRootVolumeArray) ToCceNodeAttachRootVolumeArrayOutputWithContext(ctx context.Context) CceNodeAttachRootVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachRootVolumeArrayOutput)
}

type CceNodeAttachRootVolumeOutput struct{ *pulumi.OutputState }

func (CceNodeAttachRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachRootVolume)(nil)).Elem()
}

func (o CceNodeAttachRootVolumeOutput) ToCceNodeAttachRootVolumeOutput() CceNodeAttachRootVolumeOutput {
	return o
}

func (o CceNodeAttachRootVolumeOutput) ToCceNodeAttachRootVolumeOutputWithContext(ctx context.Context) CceNodeAttachRootVolumeOutput {
	return o
}

func (o CceNodeAttachRootVolumeOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *string { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodeAttachRootVolumeOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *string { return v.ExtendParam }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachRootVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodeAttachRootVolumeOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *bool { return v.HwPassthrough }).(pulumi.BoolPtrOutput)
}

func (o CceNodeAttachRootVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o CceNodeAttachRootVolumeOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachRootVolumeOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o CceNodeAttachRootVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o CceNodeAttachRootVolumeOutput) Volumetype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachRootVolume) *string { return v.Volumetype }).(pulumi.StringPtrOutput)
}

type CceNodeAttachRootVolumeArrayOutput struct{ *pulumi.OutputState }

func (CceNodeAttachRootVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachRootVolume)(nil)).Elem()
}

func (o CceNodeAttachRootVolumeArrayOutput) ToCceNodeAttachRootVolumeArrayOutput() CceNodeAttachRootVolumeArrayOutput {
	return o
}

func (o CceNodeAttachRootVolumeArrayOutput) ToCceNodeAttachRootVolumeArrayOutputWithContext(ctx context.Context) CceNodeAttachRootVolumeArrayOutput {
	return o
}

func (o CceNodeAttachRootVolumeArrayOutput) Index(i pulumi.IntInput) CceNodeAttachRootVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeAttachRootVolume {
		return vs[0].([]CceNodeAttachRootVolume)[vs[1].(int)]
	}).(CceNodeAttachRootVolumeOutput)
}

type CceNodeAttachStorage struct {
	Groups    []CceNodeAttachStorageGroup    `pulumi:"groups"`
	Selectors []CceNodeAttachStorageSelector `pulumi:"selectors"`
}

// CceNodeAttachStorageInput is an input type that accepts CceNodeAttachStorageArgs and CceNodeAttachStorageOutput values.
// You can construct a concrete instance of `CceNodeAttachStorageInput` via:
//
//	CceNodeAttachStorageArgs{...}
type CceNodeAttachStorageInput interface {
	pulumi.Input

	ToCceNodeAttachStorageOutput() CceNodeAttachStorageOutput
	ToCceNodeAttachStorageOutputWithContext(context.Context) CceNodeAttachStorageOutput
}

type CceNodeAttachStorageArgs struct {
	Groups    CceNodeAttachStorageGroupArrayInput    `pulumi:"groups"`
	Selectors CceNodeAttachStorageSelectorArrayInput `pulumi:"selectors"`
}

func (CceNodeAttachStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorage)(nil)).Elem()
}

func (i CceNodeAttachStorageArgs) ToCceNodeAttachStorageOutput() CceNodeAttachStorageOutput {
	return i.ToCceNodeAttachStorageOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageArgs) ToCceNodeAttachStorageOutputWithContext(ctx context.Context) CceNodeAttachStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageOutput)
}

func (i CceNodeAttachStorageArgs) ToCceNodeAttachStoragePtrOutput() CceNodeAttachStoragePtrOutput {
	return i.ToCceNodeAttachStoragePtrOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageArgs) ToCceNodeAttachStoragePtrOutputWithContext(ctx context.Context) CceNodeAttachStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageOutput).ToCceNodeAttachStoragePtrOutputWithContext(ctx)
}

// CceNodeAttachStoragePtrInput is an input type that accepts CceNodeAttachStorageArgs, CceNodeAttachStoragePtr and CceNodeAttachStoragePtrOutput values.
// You can construct a concrete instance of `CceNodeAttachStoragePtrInput` via:
//
//	        CceNodeAttachStorageArgs{...}
//
//	or:
//
//	        nil
type CceNodeAttachStoragePtrInput interface {
	pulumi.Input

	ToCceNodeAttachStoragePtrOutput() CceNodeAttachStoragePtrOutput
	ToCceNodeAttachStoragePtrOutputWithContext(context.Context) CceNodeAttachStoragePtrOutput
}

type cceNodeAttachStoragePtrType CceNodeAttachStorageArgs

func CceNodeAttachStoragePtr(v *CceNodeAttachStorageArgs) CceNodeAttachStoragePtrInput {
	return (*cceNodeAttachStoragePtrType)(v)
}

func (*cceNodeAttachStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeAttachStorage)(nil)).Elem()
}

func (i *cceNodeAttachStoragePtrType) ToCceNodeAttachStoragePtrOutput() CceNodeAttachStoragePtrOutput {
	return i.ToCceNodeAttachStoragePtrOutputWithContext(context.Background())
}

func (i *cceNodeAttachStoragePtrType) ToCceNodeAttachStoragePtrOutputWithContext(ctx context.Context) CceNodeAttachStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStoragePtrOutput)
}

type CceNodeAttachStorageOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorage)(nil)).Elem()
}

func (o CceNodeAttachStorageOutput) ToCceNodeAttachStorageOutput() CceNodeAttachStorageOutput {
	return o
}

func (o CceNodeAttachStorageOutput) ToCceNodeAttachStorageOutputWithContext(ctx context.Context) CceNodeAttachStorageOutput {
	return o
}

func (o CceNodeAttachStorageOutput) ToCceNodeAttachStoragePtrOutput() CceNodeAttachStoragePtrOutput {
	return o.ToCceNodeAttachStoragePtrOutputWithContext(context.Background())
}

func (o CceNodeAttachStorageOutput) ToCceNodeAttachStoragePtrOutputWithContext(ctx context.Context) CceNodeAttachStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodeAttachStorage) *CceNodeAttachStorage {
		return &v
	}).(CceNodeAttachStoragePtrOutput)
}

func (o CceNodeAttachStorageOutput) Groups() CceNodeAttachStorageGroupArrayOutput {
	return o.ApplyT(func(v CceNodeAttachStorage) []CceNodeAttachStorageGroup { return v.Groups }).(CceNodeAttachStorageGroupArrayOutput)
}

func (o CceNodeAttachStorageOutput) Selectors() CceNodeAttachStorageSelectorArrayOutput {
	return o.ApplyT(func(v CceNodeAttachStorage) []CceNodeAttachStorageSelector { return v.Selectors }).(CceNodeAttachStorageSelectorArrayOutput)
}

type CceNodeAttachStoragePtrOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeAttachStorage)(nil)).Elem()
}

func (o CceNodeAttachStoragePtrOutput) ToCceNodeAttachStoragePtrOutput() CceNodeAttachStoragePtrOutput {
	return o
}

func (o CceNodeAttachStoragePtrOutput) ToCceNodeAttachStoragePtrOutputWithContext(ctx context.Context) CceNodeAttachStoragePtrOutput {
	return o
}

func (o CceNodeAttachStoragePtrOutput) Elem() CceNodeAttachStorageOutput {
	return o.ApplyT(func(v *CceNodeAttachStorage) CceNodeAttachStorage {
		if v != nil {
			return *v
		}
		var ret CceNodeAttachStorage
		return ret
	}).(CceNodeAttachStorageOutput)
}

func (o CceNodeAttachStoragePtrOutput) Groups() CceNodeAttachStorageGroupArrayOutput {
	return o.ApplyT(func(v *CceNodeAttachStorage) []CceNodeAttachStorageGroup {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(CceNodeAttachStorageGroupArrayOutput)
}

func (o CceNodeAttachStoragePtrOutput) Selectors() CceNodeAttachStorageSelectorArrayOutput {
	return o.ApplyT(func(v *CceNodeAttachStorage) []CceNodeAttachStorageSelector {
		if v == nil {
			return nil
		}
		return v.Selectors
	}).(CceNodeAttachStorageSelectorArrayOutput)
}

type CceNodeAttachStorageGroup struct {
	CceManaged    *bool                                   `pulumi:"cceManaged"`
	Name          string                                  `pulumi:"name"`
	SelectorNames []string                                `pulumi:"selectorNames"`
	VirtualSpaces []CceNodeAttachStorageGroupVirtualSpace `pulumi:"virtualSpaces"`
}

// CceNodeAttachStorageGroupInput is an input type that accepts CceNodeAttachStorageGroupArgs and CceNodeAttachStorageGroupOutput values.
// You can construct a concrete instance of `CceNodeAttachStorageGroupInput` via:
//
//	CceNodeAttachStorageGroupArgs{...}
type CceNodeAttachStorageGroupInput interface {
	pulumi.Input

	ToCceNodeAttachStorageGroupOutput() CceNodeAttachStorageGroupOutput
	ToCceNodeAttachStorageGroupOutputWithContext(context.Context) CceNodeAttachStorageGroupOutput
}

type CceNodeAttachStorageGroupArgs struct {
	CceManaged    pulumi.BoolPtrInput                             `pulumi:"cceManaged"`
	Name          pulumi.StringInput                              `pulumi:"name"`
	SelectorNames pulumi.StringArrayInput                         `pulumi:"selectorNames"`
	VirtualSpaces CceNodeAttachStorageGroupVirtualSpaceArrayInput `pulumi:"virtualSpaces"`
}

func (CceNodeAttachStorageGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorageGroup)(nil)).Elem()
}

func (i CceNodeAttachStorageGroupArgs) ToCceNodeAttachStorageGroupOutput() CceNodeAttachStorageGroupOutput {
	return i.ToCceNodeAttachStorageGroupOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageGroupArgs) ToCceNodeAttachStorageGroupOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageGroupOutput)
}

// CceNodeAttachStorageGroupArrayInput is an input type that accepts CceNodeAttachStorageGroupArray and CceNodeAttachStorageGroupArrayOutput values.
// You can construct a concrete instance of `CceNodeAttachStorageGroupArrayInput` via:
//
//	CceNodeAttachStorageGroupArray{ CceNodeAttachStorageGroupArgs{...} }
type CceNodeAttachStorageGroupArrayInput interface {
	pulumi.Input

	ToCceNodeAttachStorageGroupArrayOutput() CceNodeAttachStorageGroupArrayOutput
	ToCceNodeAttachStorageGroupArrayOutputWithContext(context.Context) CceNodeAttachStorageGroupArrayOutput
}

type CceNodeAttachStorageGroupArray []CceNodeAttachStorageGroupInput

func (CceNodeAttachStorageGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachStorageGroup)(nil)).Elem()
}

func (i CceNodeAttachStorageGroupArray) ToCceNodeAttachStorageGroupArrayOutput() CceNodeAttachStorageGroupArrayOutput {
	return i.ToCceNodeAttachStorageGroupArrayOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageGroupArray) ToCceNodeAttachStorageGroupArrayOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageGroupArrayOutput)
}

type CceNodeAttachStorageGroupOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStorageGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorageGroup)(nil)).Elem()
}

func (o CceNodeAttachStorageGroupOutput) ToCceNodeAttachStorageGroupOutput() CceNodeAttachStorageGroupOutput {
	return o
}

func (o CceNodeAttachStorageGroupOutput) ToCceNodeAttachStorageGroupOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupOutput {
	return o
}

func (o CceNodeAttachStorageGroupOutput) CceManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroup) *bool { return v.CceManaged }).(pulumi.BoolPtrOutput)
}

func (o CceNodeAttachStorageGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodeAttachStorageGroupOutput) SelectorNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroup) []string { return v.SelectorNames }).(pulumi.StringArrayOutput)
}

func (o CceNodeAttachStorageGroupOutput) VirtualSpaces() CceNodeAttachStorageGroupVirtualSpaceArrayOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroup) []CceNodeAttachStorageGroupVirtualSpace { return v.VirtualSpaces }).(CceNodeAttachStorageGroupVirtualSpaceArrayOutput)
}

type CceNodeAttachStorageGroupArrayOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStorageGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachStorageGroup)(nil)).Elem()
}

func (o CceNodeAttachStorageGroupArrayOutput) ToCceNodeAttachStorageGroupArrayOutput() CceNodeAttachStorageGroupArrayOutput {
	return o
}

func (o CceNodeAttachStorageGroupArrayOutput) ToCceNodeAttachStorageGroupArrayOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupArrayOutput {
	return o
}

func (o CceNodeAttachStorageGroupArrayOutput) Index(i pulumi.IntInput) CceNodeAttachStorageGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeAttachStorageGroup {
		return vs[0].([]CceNodeAttachStorageGroup)[vs[1].(int)]
	}).(CceNodeAttachStorageGroupOutput)
}

type CceNodeAttachStorageGroupVirtualSpace struct {
	LvmLvType     *string `pulumi:"lvmLvType"`
	LvmPath       *string `pulumi:"lvmPath"`
	Name          string  `pulumi:"name"`
	RuntimeLvType *string `pulumi:"runtimeLvType"`
	Size          string  `pulumi:"size"`
}

// CceNodeAttachStorageGroupVirtualSpaceInput is an input type that accepts CceNodeAttachStorageGroupVirtualSpaceArgs and CceNodeAttachStorageGroupVirtualSpaceOutput values.
// You can construct a concrete instance of `CceNodeAttachStorageGroupVirtualSpaceInput` via:
//
//	CceNodeAttachStorageGroupVirtualSpaceArgs{...}
type CceNodeAttachStorageGroupVirtualSpaceInput interface {
	pulumi.Input

	ToCceNodeAttachStorageGroupVirtualSpaceOutput() CceNodeAttachStorageGroupVirtualSpaceOutput
	ToCceNodeAttachStorageGroupVirtualSpaceOutputWithContext(context.Context) CceNodeAttachStorageGroupVirtualSpaceOutput
}

type CceNodeAttachStorageGroupVirtualSpaceArgs struct {
	LvmLvType     pulumi.StringPtrInput `pulumi:"lvmLvType"`
	LvmPath       pulumi.StringPtrInput `pulumi:"lvmPath"`
	Name          pulumi.StringInput    `pulumi:"name"`
	RuntimeLvType pulumi.StringPtrInput `pulumi:"runtimeLvType"`
	Size          pulumi.StringInput    `pulumi:"size"`
}

func (CceNodeAttachStorageGroupVirtualSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorageGroupVirtualSpace)(nil)).Elem()
}

func (i CceNodeAttachStorageGroupVirtualSpaceArgs) ToCceNodeAttachStorageGroupVirtualSpaceOutput() CceNodeAttachStorageGroupVirtualSpaceOutput {
	return i.ToCceNodeAttachStorageGroupVirtualSpaceOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageGroupVirtualSpaceArgs) ToCceNodeAttachStorageGroupVirtualSpaceOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupVirtualSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageGroupVirtualSpaceOutput)
}

// CceNodeAttachStorageGroupVirtualSpaceArrayInput is an input type that accepts CceNodeAttachStorageGroupVirtualSpaceArray and CceNodeAttachStorageGroupVirtualSpaceArrayOutput values.
// You can construct a concrete instance of `CceNodeAttachStorageGroupVirtualSpaceArrayInput` via:
//
//	CceNodeAttachStorageGroupVirtualSpaceArray{ CceNodeAttachStorageGroupVirtualSpaceArgs{...} }
type CceNodeAttachStorageGroupVirtualSpaceArrayInput interface {
	pulumi.Input

	ToCceNodeAttachStorageGroupVirtualSpaceArrayOutput() CceNodeAttachStorageGroupVirtualSpaceArrayOutput
	ToCceNodeAttachStorageGroupVirtualSpaceArrayOutputWithContext(context.Context) CceNodeAttachStorageGroupVirtualSpaceArrayOutput
}

type CceNodeAttachStorageGroupVirtualSpaceArray []CceNodeAttachStorageGroupVirtualSpaceInput

func (CceNodeAttachStorageGroupVirtualSpaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachStorageGroupVirtualSpace)(nil)).Elem()
}

func (i CceNodeAttachStorageGroupVirtualSpaceArray) ToCceNodeAttachStorageGroupVirtualSpaceArrayOutput() CceNodeAttachStorageGroupVirtualSpaceArrayOutput {
	return i.ToCceNodeAttachStorageGroupVirtualSpaceArrayOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageGroupVirtualSpaceArray) ToCceNodeAttachStorageGroupVirtualSpaceArrayOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupVirtualSpaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageGroupVirtualSpaceArrayOutput)
}

type CceNodeAttachStorageGroupVirtualSpaceOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStorageGroupVirtualSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorageGroupVirtualSpace)(nil)).Elem()
}

func (o CceNodeAttachStorageGroupVirtualSpaceOutput) ToCceNodeAttachStorageGroupVirtualSpaceOutput() CceNodeAttachStorageGroupVirtualSpaceOutput {
	return o
}

func (o CceNodeAttachStorageGroupVirtualSpaceOutput) ToCceNodeAttachStorageGroupVirtualSpaceOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupVirtualSpaceOutput {
	return o
}

func (o CceNodeAttachStorageGroupVirtualSpaceOutput) LvmLvType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroupVirtualSpace) *string { return v.LvmLvType }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageGroupVirtualSpaceOutput) LvmPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroupVirtualSpace) *string { return v.LvmPath }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageGroupVirtualSpaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroupVirtualSpace) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodeAttachStorageGroupVirtualSpaceOutput) RuntimeLvType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroupVirtualSpace) *string { return v.RuntimeLvType }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageGroupVirtualSpaceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachStorageGroupVirtualSpace) string { return v.Size }).(pulumi.StringOutput)
}

type CceNodeAttachStorageGroupVirtualSpaceArrayOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStorageGroupVirtualSpaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachStorageGroupVirtualSpace)(nil)).Elem()
}

func (o CceNodeAttachStorageGroupVirtualSpaceArrayOutput) ToCceNodeAttachStorageGroupVirtualSpaceArrayOutput() CceNodeAttachStorageGroupVirtualSpaceArrayOutput {
	return o
}

func (o CceNodeAttachStorageGroupVirtualSpaceArrayOutput) ToCceNodeAttachStorageGroupVirtualSpaceArrayOutputWithContext(ctx context.Context) CceNodeAttachStorageGroupVirtualSpaceArrayOutput {
	return o
}

func (o CceNodeAttachStorageGroupVirtualSpaceArrayOutput) Index(i pulumi.IntInput) CceNodeAttachStorageGroupVirtualSpaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeAttachStorageGroupVirtualSpace {
		return vs[0].([]CceNodeAttachStorageGroupVirtualSpace)[vs[1].(int)]
	}).(CceNodeAttachStorageGroupVirtualSpaceOutput)
}

type CceNodeAttachStorageSelector struct {
	MatchLabelCount             *string `pulumi:"matchLabelCount"`
	MatchLabelMetadataCmkid     *string `pulumi:"matchLabelMetadataCmkid"`
	MatchLabelMetadataEncrypted *string `pulumi:"matchLabelMetadataEncrypted"`
	MatchLabelSize              *string `pulumi:"matchLabelSize"`
	MatchLabelVolumeType        *string `pulumi:"matchLabelVolumeType"`
	Name                        string  `pulumi:"name"`
	Type                        *string `pulumi:"type"`
}

// CceNodeAttachStorageSelectorInput is an input type that accepts CceNodeAttachStorageSelectorArgs and CceNodeAttachStorageSelectorOutput values.
// You can construct a concrete instance of `CceNodeAttachStorageSelectorInput` via:
//
//	CceNodeAttachStorageSelectorArgs{...}
type CceNodeAttachStorageSelectorInput interface {
	pulumi.Input

	ToCceNodeAttachStorageSelectorOutput() CceNodeAttachStorageSelectorOutput
	ToCceNodeAttachStorageSelectorOutputWithContext(context.Context) CceNodeAttachStorageSelectorOutput
}

type CceNodeAttachStorageSelectorArgs struct {
	MatchLabelCount             pulumi.StringPtrInput `pulumi:"matchLabelCount"`
	MatchLabelMetadataCmkid     pulumi.StringPtrInput `pulumi:"matchLabelMetadataCmkid"`
	MatchLabelMetadataEncrypted pulumi.StringPtrInput `pulumi:"matchLabelMetadataEncrypted"`
	MatchLabelSize              pulumi.StringPtrInput `pulumi:"matchLabelSize"`
	MatchLabelVolumeType        pulumi.StringPtrInput `pulumi:"matchLabelVolumeType"`
	Name                        pulumi.StringInput    `pulumi:"name"`
	Type                        pulumi.StringPtrInput `pulumi:"type"`
}

func (CceNodeAttachStorageSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorageSelector)(nil)).Elem()
}

func (i CceNodeAttachStorageSelectorArgs) ToCceNodeAttachStorageSelectorOutput() CceNodeAttachStorageSelectorOutput {
	return i.ToCceNodeAttachStorageSelectorOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageSelectorArgs) ToCceNodeAttachStorageSelectorOutputWithContext(ctx context.Context) CceNodeAttachStorageSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageSelectorOutput)
}

// CceNodeAttachStorageSelectorArrayInput is an input type that accepts CceNodeAttachStorageSelectorArray and CceNodeAttachStorageSelectorArrayOutput values.
// You can construct a concrete instance of `CceNodeAttachStorageSelectorArrayInput` via:
//
//	CceNodeAttachStorageSelectorArray{ CceNodeAttachStorageSelectorArgs{...} }
type CceNodeAttachStorageSelectorArrayInput interface {
	pulumi.Input

	ToCceNodeAttachStorageSelectorArrayOutput() CceNodeAttachStorageSelectorArrayOutput
	ToCceNodeAttachStorageSelectorArrayOutputWithContext(context.Context) CceNodeAttachStorageSelectorArrayOutput
}

type CceNodeAttachStorageSelectorArray []CceNodeAttachStorageSelectorInput

func (CceNodeAttachStorageSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachStorageSelector)(nil)).Elem()
}

func (i CceNodeAttachStorageSelectorArray) ToCceNodeAttachStorageSelectorArrayOutput() CceNodeAttachStorageSelectorArrayOutput {
	return i.ToCceNodeAttachStorageSelectorArrayOutputWithContext(context.Background())
}

func (i CceNodeAttachStorageSelectorArray) ToCceNodeAttachStorageSelectorArrayOutputWithContext(ctx context.Context) CceNodeAttachStorageSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachStorageSelectorArrayOutput)
}

type CceNodeAttachStorageSelectorOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStorageSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachStorageSelector)(nil)).Elem()
}

func (o CceNodeAttachStorageSelectorOutput) ToCceNodeAttachStorageSelectorOutput() CceNodeAttachStorageSelectorOutput {
	return o
}

func (o CceNodeAttachStorageSelectorOutput) ToCceNodeAttachStorageSelectorOutputWithContext(ctx context.Context) CceNodeAttachStorageSelectorOutput {
	return o
}

func (o CceNodeAttachStorageSelectorOutput) MatchLabelCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageSelector) *string { return v.MatchLabelCount }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageSelectorOutput) MatchLabelMetadataCmkid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageSelector) *string { return v.MatchLabelMetadataCmkid }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageSelectorOutput) MatchLabelMetadataEncrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageSelector) *string { return v.MatchLabelMetadataEncrypted }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageSelectorOutput) MatchLabelSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageSelector) *string { return v.MatchLabelSize }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageSelectorOutput) MatchLabelVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageSelector) *string { return v.MatchLabelVolumeType }).(pulumi.StringPtrOutput)
}

func (o CceNodeAttachStorageSelectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachStorageSelector) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodeAttachStorageSelectorOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeAttachStorageSelector) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CceNodeAttachStorageSelectorArrayOutput struct{ *pulumi.OutputState }

func (CceNodeAttachStorageSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachStorageSelector)(nil)).Elem()
}

func (o CceNodeAttachStorageSelectorArrayOutput) ToCceNodeAttachStorageSelectorArrayOutput() CceNodeAttachStorageSelectorArrayOutput {
	return o
}

func (o CceNodeAttachStorageSelectorArrayOutput) ToCceNodeAttachStorageSelectorArrayOutputWithContext(ctx context.Context) CceNodeAttachStorageSelectorArrayOutput {
	return o
}

func (o CceNodeAttachStorageSelectorArrayOutput) Index(i pulumi.IntInput) CceNodeAttachStorageSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeAttachStorageSelector {
		return vs[0].([]CceNodeAttachStorageSelector)[vs[1].(int)]
	}).(CceNodeAttachStorageSelectorOutput)
}

type CceNodeAttachTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

// CceNodeAttachTaintInput is an input type that accepts CceNodeAttachTaintArgs and CceNodeAttachTaintOutput values.
// You can construct a concrete instance of `CceNodeAttachTaintInput` via:
//
//	CceNodeAttachTaintArgs{...}
type CceNodeAttachTaintInput interface {
	pulumi.Input

	ToCceNodeAttachTaintOutput() CceNodeAttachTaintOutput
	ToCceNodeAttachTaintOutputWithContext(context.Context) CceNodeAttachTaintOutput
}

type CceNodeAttachTaintArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (CceNodeAttachTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachTaint)(nil)).Elem()
}

func (i CceNodeAttachTaintArgs) ToCceNodeAttachTaintOutput() CceNodeAttachTaintOutput {
	return i.ToCceNodeAttachTaintOutputWithContext(context.Background())
}

func (i CceNodeAttachTaintArgs) ToCceNodeAttachTaintOutputWithContext(ctx context.Context) CceNodeAttachTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachTaintOutput)
}

// CceNodeAttachTaintArrayInput is an input type that accepts CceNodeAttachTaintArray and CceNodeAttachTaintArrayOutput values.
// You can construct a concrete instance of `CceNodeAttachTaintArrayInput` via:
//
//	CceNodeAttachTaintArray{ CceNodeAttachTaintArgs{...} }
type CceNodeAttachTaintArrayInput interface {
	pulumi.Input

	ToCceNodeAttachTaintArrayOutput() CceNodeAttachTaintArrayOutput
	ToCceNodeAttachTaintArrayOutputWithContext(context.Context) CceNodeAttachTaintArrayOutput
}

type CceNodeAttachTaintArray []CceNodeAttachTaintInput

func (CceNodeAttachTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachTaint)(nil)).Elem()
}

func (i CceNodeAttachTaintArray) ToCceNodeAttachTaintArrayOutput() CceNodeAttachTaintArrayOutput {
	return i.ToCceNodeAttachTaintArrayOutputWithContext(context.Background())
}

func (i CceNodeAttachTaintArray) ToCceNodeAttachTaintArrayOutputWithContext(ctx context.Context) CceNodeAttachTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeAttachTaintArrayOutput)
}

type CceNodeAttachTaintOutput struct{ *pulumi.OutputState }

func (CceNodeAttachTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeAttachTaint)(nil)).Elem()
}

func (o CceNodeAttachTaintOutput) ToCceNodeAttachTaintOutput() CceNodeAttachTaintOutput {
	return o
}

func (o CceNodeAttachTaintOutput) ToCceNodeAttachTaintOutputWithContext(ctx context.Context) CceNodeAttachTaintOutput {
	return o
}

func (o CceNodeAttachTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o CceNodeAttachTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o CceNodeAttachTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeAttachTaint) string { return v.Value }).(pulumi.StringOutput)
}

type CceNodeAttachTaintArrayOutput struct{ *pulumi.OutputState }

func (CceNodeAttachTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeAttachTaint)(nil)).Elem()
}

func (o CceNodeAttachTaintArrayOutput) ToCceNodeAttachTaintArrayOutput() CceNodeAttachTaintArrayOutput {
	return o
}

func (o CceNodeAttachTaintArrayOutput) ToCceNodeAttachTaintArrayOutputWithContext(ctx context.Context) CceNodeAttachTaintArrayOutput {
	return o
}

func (o CceNodeAttachTaintArrayOutput) Index(i pulumi.IntInput) CceNodeAttachTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeAttachTaint {
		return vs[0].([]CceNodeAttachTaint)[vs[1].(int)]
	}).(CceNodeAttachTaintOutput)
}

type CceNodeDataVolume struct {
	DssPoolId *string `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  *string           `pulumi:"extendParam"`
	ExtendParams map[string]string `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough *bool   `pulumi:"hwPassthrough"`
	Iops          *int    `pulumi:"iops"`
	KmsKeyId      *string `pulumi:"kmsKeyId"`
	Size          int     `pulumi:"size"`
	Throughput    *int    `pulumi:"throughput"`
	Volumetype    string  `pulumi:"volumetype"`
}

// CceNodeDataVolumeInput is an input type that accepts CceNodeDataVolumeArgs and CceNodeDataVolumeOutput values.
// You can construct a concrete instance of `CceNodeDataVolumeInput` via:
//
//	CceNodeDataVolumeArgs{...}
type CceNodeDataVolumeInput interface {
	pulumi.Input

	ToCceNodeDataVolumeOutput() CceNodeDataVolumeOutput
	ToCceNodeDataVolumeOutputWithContext(context.Context) CceNodeDataVolumeOutput
}

type CceNodeDataVolumeArgs struct {
	DssPoolId pulumi.StringPtrInput `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  pulumi.StringPtrInput `pulumi:"extendParam"`
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough pulumi.BoolPtrInput   `pulumi:"hwPassthrough"`
	Iops          pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId      pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	Size          pulumi.IntInput       `pulumi:"size"`
	Throughput    pulumi.IntPtrInput    `pulumi:"throughput"`
	Volumetype    pulumi.StringInput    `pulumi:"volumetype"`
}

func (CceNodeDataVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeDataVolume)(nil)).Elem()
}

func (i CceNodeDataVolumeArgs) ToCceNodeDataVolumeOutput() CceNodeDataVolumeOutput {
	return i.ToCceNodeDataVolumeOutputWithContext(context.Background())
}

func (i CceNodeDataVolumeArgs) ToCceNodeDataVolumeOutputWithContext(ctx context.Context) CceNodeDataVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeDataVolumeOutput)
}

// CceNodeDataVolumeArrayInput is an input type that accepts CceNodeDataVolumeArray and CceNodeDataVolumeArrayOutput values.
// You can construct a concrete instance of `CceNodeDataVolumeArrayInput` via:
//
//	CceNodeDataVolumeArray{ CceNodeDataVolumeArgs{...} }
type CceNodeDataVolumeArrayInput interface {
	pulumi.Input

	ToCceNodeDataVolumeArrayOutput() CceNodeDataVolumeArrayOutput
	ToCceNodeDataVolumeArrayOutputWithContext(context.Context) CceNodeDataVolumeArrayOutput
}

type CceNodeDataVolumeArray []CceNodeDataVolumeInput

func (CceNodeDataVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeDataVolume)(nil)).Elem()
}

func (i CceNodeDataVolumeArray) ToCceNodeDataVolumeArrayOutput() CceNodeDataVolumeArrayOutput {
	return i.ToCceNodeDataVolumeArrayOutputWithContext(context.Background())
}

func (i CceNodeDataVolumeArray) ToCceNodeDataVolumeArrayOutputWithContext(ctx context.Context) CceNodeDataVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeDataVolumeArrayOutput)
}

type CceNodeDataVolumeOutput struct{ *pulumi.OutputState }

func (CceNodeDataVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeDataVolume)(nil)).Elem()
}

func (o CceNodeDataVolumeOutput) ToCceNodeDataVolumeOutput() CceNodeDataVolumeOutput {
	return o
}

func (o CceNodeDataVolumeOutput) ToCceNodeDataVolumeOutputWithContext(ctx context.Context) CceNodeDataVolumeOutput {
	return o
}

func (o CceNodeDataVolumeOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeDataVolume) *string { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodeDataVolumeOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeDataVolume) *string { return v.ExtendParam }).(pulumi.StringPtrOutput)
}

func (o CceNodeDataVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceNodeDataVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodeDataVolumeOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodeDataVolume) *bool { return v.HwPassthrough }).(pulumi.BoolPtrOutput)
}

func (o CceNodeDataVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeDataVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o CceNodeDataVolumeOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeDataVolume) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o CceNodeDataVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v CceNodeDataVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o CceNodeDataVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeDataVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o CceNodeDataVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeDataVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type CceNodeDataVolumeArrayOutput struct{ *pulumi.OutputState }

func (CceNodeDataVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeDataVolume)(nil)).Elem()
}

func (o CceNodeDataVolumeArrayOutput) ToCceNodeDataVolumeArrayOutput() CceNodeDataVolumeArrayOutput {
	return o
}

func (o CceNodeDataVolumeArrayOutput) ToCceNodeDataVolumeArrayOutputWithContext(ctx context.Context) CceNodeDataVolumeArrayOutput {
	return o
}

func (o CceNodeDataVolumeArrayOutput) Index(i pulumi.IntInput) CceNodeDataVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeDataVolume {
		return vs[0].([]CceNodeDataVolume)[vs[1].(int)]
	}).(CceNodeDataVolumeOutput)
}

type CceNodeExtendParams struct {
	AgencyName                *string `pulumi:"agencyName"`
	DockerBaseSize            *int    `pulumi:"dockerBaseSize"`
	KubeReservedMem           *int    `pulumi:"kubeReservedMem"`
	MarketType                *string `pulumi:"marketType"`
	MaxPods                   *int    `pulumi:"maxPods"`
	NicThreshold              *string `pulumi:"nicThreshold"`
	NodeImageId               *string `pulumi:"nodeImageId"`
	NodeMultiQueue            *string `pulumi:"nodeMultiQueue"`
	Postinstall               *string `pulumi:"postinstall"`
	Preinstall                *string `pulumi:"preinstall"`
	SecurityReinforcementType *string `pulumi:"securityReinforcementType"`
	SpotPrice                 *string `pulumi:"spotPrice"`
	SystemReservedMem         *int    `pulumi:"systemReservedMem"`
}

// CceNodeExtendParamsInput is an input type that accepts CceNodeExtendParamsArgs and CceNodeExtendParamsOutput values.
// You can construct a concrete instance of `CceNodeExtendParamsInput` via:
//
//	CceNodeExtendParamsArgs{...}
type CceNodeExtendParamsInput interface {
	pulumi.Input

	ToCceNodeExtendParamsOutput() CceNodeExtendParamsOutput
	ToCceNodeExtendParamsOutputWithContext(context.Context) CceNodeExtendParamsOutput
}

type CceNodeExtendParamsArgs struct {
	AgencyName                pulumi.StringPtrInput `pulumi:"agencyName"`
	DockerBaseSize            pulumi.IntPtrInput    `pulumi:"dockerBaseSize"`
	KubeReservedMem           pulumi.IntPtrInput    `pulumi:"kubeReservedMem"`
	MarketType                pulumi.StringPtrInput `pulumi:"marketType"`
	MaxPods                   pulumi.IntPtrInput    `pulumi:"maxPods"`
	NicThreshold              pulumi.StringPtrInput `pulumi:"nicThreshold"`
	NodeImageId               pulumi.StringPtrInput `pulumi:"nodeImageId"`
	NodeMultiQueue            pulumi.StringPtrInput `pulumi:"nodeMultiQueue"`
	Postinstall               pulumi.StringPtrInput `pulumi:"postinstall"`
	Preinstall                pulumi.StringPtrInput `pulumi:"preinstall"`
	SecurityReinforcementType pulumi.StringPtrInput `pulumi:"securityReinforcementType"`
	SpotPrice                 pulumi.StringPtrInput `pulumi:"spotPrice"`
	SystemReservedMem         pulumi.IntPtrInput    `pulumi:"systemReservedMem"`
}

func (CceNodeExtendParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeExtendParams)(nil)).Elem()
}

func (i CceNodeExtendParamsArgs) ToCceNodeExtendParamsOutput() CceNodeExtendParamsOutput {
	return i.ToCceNodeExtendParamsOutputWithContext(context.Background())
}

func (i CceNodeExtendParamsArgs) ToCceNodeExtendParamsOutputWithContext(ctx context.Context) CceNodeExtendParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeExtendParamsOutput)
}

func (i CceNodeExtendParamsArgs) ToCceNodeExtendParamsPtrOutput() CceNodeExtendParamsPtrOutput {
	return i.ToCceNodeExtendParamsPtrOutputWithContext(context.Background())
}

func (i CceNodeExtendParamsArgs) ToCceNodeExtendParamsPtrOutputWithContext(ctx context.Context) CceNodeExtendParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeExtendParamsOutput).ToCceNodeExtendParamsPtrOutputWithContext(ctx)
}

// CceNodeExtendParamsPtrInput is an input type that accepts CceNodeExtendParamsArgs, CceNodeExtendParamsPtr and CceNodeExtendParamsPtrOutput values.
// You can construct a concrete instance of `CceNodeExtendParamsPtrInput` via:
//
//	        CceNodeExtendParamsArgs{...}
//
//	or:
//
//	        nil
type CceNodeExtendParamsPtrInput interface {
	pulumi.Input

	ToCceNodeExtendParamsPtrOutput() CceNodeExtendParamsPtrOutput
	ToCceNodeExtendParamsPtrOutputWithContext(context.Context) CceNodeExtendParamsPtrOutput
}

type cceNodeExtendParamsPtrType CceNodeExtendParamsArgs

func CceNodeExtendParamsPtr(v *CceNodeExtendParamsArgs) CceNodeExtendParamsPtrInput {
	return (*cceNodeExtendParamsPtrType)(v)
}

func (*cceNodeExtendParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeExtendParams)(nil)).Elem()
}

func (i *cceNodeExtendParamsPtrType) ToCceNodeExtendParamsPtrOutput() CceNodeExtendParamsPtrOutput {
	return i.ToCceNodeExtendParamsPtrOutputWithContext(context.Background())
}

func (i *cceNodeExtendParamsPtrType) ToCceNodeExtendParamsPtrOutputWithContext(ctx context.Context) CceNodeExtendParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeExtendParamsPtrOutput)
}

type CceNodeExtendParamsOutput struct{ *pulumi.OutputState }

func (CceNodeExtendParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeExtendParams)(nil)).Elem()
}

func (o CceNodeExtendParamsOutput) ToCceNodeExtendParamsOutput() CceNodeExtendParamsOutput {
	return o
}

func (o CceNodeExtendParamsOutput) ToCceNodeExtendParamsOutputWithContext(ctx context.Context) CceNodeExtendParamsOutput {
	return o
}

func (o CceNodeExtendParamsOutput) ToCceNodeExtendParamsPtrOutput() CceNodeExtendParamsPtrOutput {
	return o.ToCceNodeExtendParamsPtrOutputWithContext(context.Background())
}

func (o CceNodeExtendParamsOutput) ToCceNodeExtendParamsPtrOutputWithContext(ctx context.Context) CceNodeExtendParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodeExtendParams) *CceNodeExtendParams {
		return &v
	}).(CceNodeExtendParamsPtrOutput)
}

func (o CceNodeExtendParamsOutput) AgencyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.AgencyName }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) DockerBaseSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *int { return v.DockerBaseSize }).(pulumi.IntPtrOutput)
}

func (o CceNodeExtendParamsOutput) KubeReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *int { return v.KubeReservedMem }).(pulumi.IntPtrOutput)
}

func (o CceNodeExtendParamsOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

func (o CceNodeExtendParamsOutput) NicThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.NicThreshold }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) NodeImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.NodeImageId }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) NodeMultiQueue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.NodeMultiQueue }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.Postinstall }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.Preinstall }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) SecurityReinforcementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.SecurityReinforcementType }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsOutput) SystemReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeExtendParams) *int { return v.SystemReservedMem }).(pulumi.IntPtrOutput)
}

type CceNodeExtendParamsPtrOutput struct{ *pulumi.OutputState }

func (CceNodeExtendParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeExtendParams)(nil)).Elem()
}

func (o CceNodeExtendParamsPtrOutput) ToCceNodeExtendParamsPtrOutput() CceNodeExtendParamsPtrOutput {
	return o
}

func (o CceNodeExtendParamsPtrOutput) ToCceNodeExtendParamsPtrOutputWithContext(ctx context.Context) CceNodeExtendParamsPtrOutput {
	return o
}

func (o CceNodeExtendParamsPtrOutput) Elem() CceNodeExtendParamsOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) CceNodeExtendParams {
		if v != nil {
			return *v
		}
		var ret CceNodeExtendParams
		return ret
	}).(CceNodeExtendParamsOutput)
}

func (o CceNodeExtendParamsPtrOutput) AgencyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.AgencyName
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) DockerBaseSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.DockerBaseSize
	}).(pulumi.IntPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) KubeReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.KubeReservedMem
	}).(pulumi.IntPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.MarketType
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.MaxPods
	}).(pulumi.IntPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) NicThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.NicThreshold
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) NodeImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.NodeImageId
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) NodeMultiQueue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.NodeMultiQueue
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.Postinstall
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.Preinstall
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) SecurityReinforcementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.SecurityReinforcementType
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.SpotPrice
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeExtendParamsPtrOutput) SystemReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodeExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.SystemReservedMem
	}).(pulumi.IntPtrOutput)
}

type CceNodeExtensionNic struct {
	SubnetId string `pulumi:"subnetId"`
}

// CceNodeExtensionNicInput is an input type that accepts CceNodeExtensionNicArgs and CceNodeExtensionNicOutput values.
// You can construct a concrete instance of `CceNodeExtensionNicInput` via:
//
//	CceNodeExtensionNicArgs{...}
type CceNodeExtensionNicInput interface {
	pulumi.Input

	ToCceNodeExtensionNicOutput() CceNodeExtensionNicOutput
	ToCceNodeExtensionNicOutputWithContext(context.Context) CceNodeExtensionNicOutput
}

type CceNodeExtensionNicArgs struct {
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (CceNodeExtensionNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeExtensionNic)(nil)).Elem()
}

func (i CceNodeExtensionNicArgs) ToCceNodeExtensionNicOutput() CceNodeExtensionNicOutput {
	return i.ToCceNodeExtensionNicOutputWithContext(context.Background())
}

func (i CceNodeExtensionNicArgs) ToCceNodeExtensionNicOutputWithContext(ctx context.Context) CceNodeExtensionNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeExtensionNicOutput)
}

// CceNodeExtensionNicArrayInput is an input type that accepts CceNodeExtensionNicArray and CceNodeExtensionNicArrayOutput values.
// You can construct a concrete instance of `CceNodeExtensionNicArrayInput` via:
//
//	CceNodeExtensionNicArray{ CceNodeExtensionNicArgs{...} }
type CceNodeExtensionNicArrayInput interface {
	pulumi.Input

	ToCceNodeExtensionNicArrayOutput() CceNodeExtensionNicArrayOutput
	ToCceNodeExtensionNicArrayOutputWithContext(context.Context) CceNodeExtensionNicArrayOutput
}

type CceNodeExtensionNicArray []CceNodeExtensionNicInput

func (CceNodeExtensionNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeExtensionNic)(nil)).Elem()
}

func (i CceNodeExtensionNicArray) ToCceNodeExtensionNicArrayOutput() CceNodeExtensionNicArrayOutput {
	return i.ToCceNodeExtensionNicArrayOutputWithContext(context.Background())
}

func (i CceNodeExtensionNicArray) ToCceNodeExtensionNicArrayOutputWithContext(ctx context.Context) CceNodeExtensionNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeExtensionNicArrayOutput)
}

type CceNodeExtensionNicOutput struct{ *pulumi.OutputState }

func (CceNodeExtensionNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeExtensionNic)(nil)).Elem()
}

func (o CceNodeExtensionNicOutput) ToCceNodeExtensionNicOutput() CceNodeExtensionNicOutput {
	return o
}

func (o CceNodeExtensionNicOutput) ToCceNodeExtensionNicOutputWithContext(ctx context.Context) CceNodeExtensionNicOutput {
	return o
}

func (o CceNodeExtensionNicOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeExtensionNic) string { return v.SubnetId }).(pulumi.StringOutput)
}

type CceNodeExtensionNicArrayOutput struct{ *pulumi.OutputState }

func (CceNodeExtensionNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeExtensionNic)(nil)).Elem()
}

func (o CceNodeExtensionNicArrayOutput) ToCceNodeExtensionNicArrayOutput() CceNodeExtensionNicArrayOutput {
	return o
}

func (o CceNodeExtensionNicArrayOutput) ToCceNodeExtensionNicArrayOutputWithContext(ctx context.Context) CceNodeExtensionNicArrayOutput {
	return o
}

func (o CceNodeExtensionNicArrayOutput) Index(i pulumi.IntInput) CceNodeExtensionNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeExtensionNic {
		return vs[0].([]CceNodeExtensionNic)[vs[1].(int)]
	}).(CceNodeExtensionNicOutput)
}

type CceNodeHostnameConfig struct {
	Type string `pulumi:"type"`
}

// CceNodeHostnameConfigInput is an input type that accepts CceNodeHostnameConfigArgs and CceNodeHostnameConfigOutput values.
// You can construct a concrete instance of `CceNodeHostnameConfigInput` via:
//
//	CceNodeHostnameConfigArgs{...}
type CceNodeHostnameConfigInput interface {
	pulumi.Input

	ToCceNodeHostnameConfigOutput() CceNodeHostnameConfigOutput
	ToCceNodeHostnameConfigOutputWithContext(context.Context) CceNodeHostnameConfigOutput
}

type CceNodeHostnameConfigArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (CceNodeHostnameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeHostnameConfig)(nil)).Elem()
}

func (i CceNodeHostnameConfigArgs) ToCceNodeHostnameConfigOutput() CceNodeHostnameConfigOutput {
	return i.ToCceNodeHostnameConfigOutputWithContext(context.Background())
}

func (i CceNodeHostnameConfigArgs) ToCceNodeHostnameConfigOutputWithContext(ctx context.Context) CceNodeHostnameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeHostnameConfigOutput)
}

func (i CceNodeHostnameConfigArgs) ToCceNodeHostnameConfigPtrOutput() CceNodeHostnameConfigPtrOutput {
	return i.ToCceNodeHostnameConfigPtrOutputWithContext(context.Background())
}

func (i CceNodeHostnameConfigArgs) ToCceNodeHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeHostnameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeHostnameConfigOutput).ToCceNodeHostnameConfigPtrOutputWithContext(ctx)
}

// CceNodeHostnameConfigPtrInput is an input type that accepts CceNodeHostnameConfigArgs, CceNodeHostnameConfigPtr and CceNodeHostnameConfigPtrOutput values.
// You can construct a concrete instance of `CceNodeHostnameConfigPtrInput` via:
//
//	        CceNodeHostnameConfigArgs{...}
//
//	or:
//
//	        nil
type CceNodeHostnameConfigPtrInput interface {
	pulumi.Input

	ToCceNodeHostnameConfigPtrOutput() CceNodeHostnameConfigPtrOutput
	ToCceNodeHostnameConfigPtrOutputWithContext(context.Context) CceNodeHostnameConfigPtrOutput
}

type cceNodeHostnameConfigPtrType CceNodeHostnameConfigArgs

func CceNodeHostnameConfigPtr(v *CceNodeHostnameConfigArgs) CceNodeHostnameConfigPtrInput {
	return (*cceNodeHostnameConfigPtrType)(v)
}

func (*cceNodeHostnameConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeHostnameConfig)(nil)).Elem()
}

func (i *cceNodeHostnameConfigPtrType) ToCceNodeHostnameConfigPtrOutput() CceNodeHostnameConfigPtrOutput {
	return i.ToCceNodeHostnameConfigPtrOutputWithContext(context.Background())
}

func (i *cceNodeHostnameConfigPtrType) ToCceNodeHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeHostnameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeHostnameConfigPtrOutput)
}

type CceNodeHostnameConfigOutput struct{ *pulumi.OutputState }

func (CceNodeHostnameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeHostnameConfig)(nil)).Elem()
}

func (o CceNodeHostnameConfigOutput) ToCceNodeHostnameConfigOutput() CceNodeHostnameConfigOutput {
	return o
}

func (o CceNodeHostnameConfigOutput) ToCceNodeHostnameConfigOutputWithContext(ctx context.Context) CceNodeHostnameConfigOutput {
	return o
}

func (o CceNodeHostnameConfigOutput) ToCceNodeHostnameConfigPtrOutput() CceNodeHostnameConfigPtrOutput {
	return o.ToCceNodeHostnameConfigPtrOutputWithContext(context.Background())
}

func (o CceNodeHostnameConfigOutput) ToCceNodeHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeHostnameConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodeHostnameConfig) *CceNodeHostnameConfig {
		return &v
	}).(CceNodeHostnameConfigPtrOutput)
}

func (o CceNodeHostnameConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeHostnameConfig) string { return v.Type }).(pulumi.StringOutput)
}

type CceNodeHostnameConfigPtrOutput struct{ *pulumi.OutputState }

func (CceNodeHostnameConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeHostnameConfig)(nil)).Elem()
}

func (o CceNodeHostnameConfigPtrOutput) ToCceNodeHostnameConfigPtrOutput() CceNodeHostnameConfigPtrOutput {
	return o
}

func (o CceNodeHostnameConfigPtrOutput) ToCceNodeHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodeHostnameConfigPtrOutput {
	return o
}

func (o CceNodeHostnameConfigPtrOutput) Elem() CceNodeHostnameConfigOutput {
	return o.ApplyT(func(v *CceNodeHostnameConfig) CceNodeHostnameConfig {
		if v != nil {
			return *v
		}
		var ret CceNodeHostnameConfig
		return ret
	}).(CceNodeHostnameConfigOutput)
}

func (o CceNodeHostnameConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeHostnameConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CceNodePoolDataVolume struct {
	DssPoolId *string `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  *string           `pulumi:"extendParam"`
	ExtendParams map[string]string `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough *bool   `pulumi:"hwPassthrough"`
	Iops          *int    `pulumi:"iops"`
	KmsKeyId      *string `pulumi:"kmsKeyId"`
	Size          int     `pulumi:"size"`
	Throughput    *int    `pulumi:"throughput"`
	Volumetype    string  `pulumi:"volumetype"`
}

// CceNodePoolDataVolumeInput is an input type that accepts CceNodePoolDataVolumeArgs and CceNodePoolDataVolumeOutput values.
// You can construct a concrete instance of `CceNodePoolDataVolumeInput` via:
//
//	CceNodePoolDataVolumeArgs{...}
type CceNodePoolDataVolumeInput interface {
	pulumi.Input

	ToCceNodePoolDataVolumeOutput() CceNodePoolDataVolumeOutput
	ToCceNodePoolDataVolumeOutputWithContext(context.Context) CceNodePoolDataVolumeOutput
}

type CceNodePoolDataVolumeArgs struct {
	DssPoolId pulumi.StringPtrInput `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  pulumi.StringPtrInput `pulumi:"extendParam"`
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough pulumi.BoolPtrInput   `pulumi:"hwPassthrough"`
	Iops          pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId      pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	Size          pulumi.IntInput       `pulumi:"size"`
	Throughput    pulumi.IntPtrInput    `pulumi:"throughput"`
	Volumetype    pulumi.StringInput    `pulumi:"volumetype"`
}

func (CceNodePoolDataVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolDataVolume)(nil)).Elem()
}

func (i CceNodePoolDataVolumeArgs) ToCceNodePoolDataVolumeOutput() CceNodePoolDataVolumeOutput {
	return i.ToCceNodePoolDataVolumeOutputWithContext(context.Background())
}

func (i CceNodePoolDataVolumeArgs) ToCceNodePoolDataVolumeOutputWithContext(ctx context.Context) CceNodePoolDataVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolDataVolumeOutput)
}

// CceNodePoolDataVolumeArrayInput is an input type that accepts CceNodePoolDataVolumeArray and CceNodePoolDataVolumeArrayOutput values.
// You can construct a concrete instance of `CceNodePoolDataVolumeArrayInput` via:
//
//	CceNodePoolDataVolumeArray{ CceNodePoolDataVolumeArgs{...} }
type CceNodePoolDataVolumeArrayInput interface {
	pulumi.Input

	ToCceNodePoolDataVolumeArrayOutput() CceNodePoolDataVolumeArrayOutput
	ToCceNodePoolDataVolumeArrayOutputWithContext(context.Context) CceNodePoolDataVolumeArrayOutput
}

type CceNodePoolDataVolumeArray []CceNodePoolDataVolumeInput

func (CceNodePoolDataVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolDataVolume)(nil)).Elem()
}

func (i CceNodePoolDataVolumeArray) ToCceNodePoolDataVolumeArrayOutput() CceNodePoolDataVolumeArrayOutput {
	return i.ToCceNodePoolDataVolumeArrayOutputWithContext(context.Background())
}

func (i CceNodePoolDataVolumeArray) ToCceNodePoolDataVolumeArrayOutputWithContext(ctx context.Context) CceNodePoolDataVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolDataVolumeArrayOutput)
}

type CceNodePoolDataVolumeOutput struct{ *pulumi.OutputState }

func (CceNodePoolDataVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolDataVolume)(nil)).Elem()
}

func (o CceNodePoolDataVolumeOutput) ToCceNodePoolDataVolumeOutput() CceNodePoolDataVolumeOutput {
	return o
}

func (o CceNodePoolDataVolumeOutput) ToCceNodePoolDataVolumeOutputWithContext(ctx context.Context) CceNodePoolDataVolumeOutput {
	return o
}

func (o CceNodePoolDataVolumeOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) *string { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodePoolDataVolumeOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) *string { return v.ExtendParam }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolDataVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodePoolDataVolumeOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) *bool { return v.HwPassthrough }).(pulumi.BoolPtrOutput)
}

func (o CceNodePoolDataVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolDataVolumeOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolDataVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o CceNodePoolDataVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolDataVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolDataVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type CceNodePoolDataVolumeArrayOutput struct{ *pulumi.OutputState }

func (CceNodePoolDataVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolDataVolume)(nil)).Elem()
}

func (o CceNodePoolDataVolumeArrayOutput) ToCceNodePoolDataVolumeArrayOutput() CceNodePoolDataVolumeArrayOutput {
	return o
}

func (o CceNodePoolDataVolumeArrayOutput) ToCceNodePoolDataVolumeArrayOutputWithContext(ctx context.Context) CceNodePoolDataVolumeArrayOutput {
	return o
}

func (o CceNodePoolDataVolumeArrayOutput) Index(i pulumi.IntInput) CceNodePoolDataVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodePoolDataVolume {
		return vs[0].([]CceNodePoolDataVolume)[vs[1].(int)]
	}).(CceNodePoolDataVolumeOutput)
}

type CceNodePoolExtendParams struct {
	AgencyName                *string `pulumi:"agencyName"`
	DockerBaseSize            *int    `pulumi:"dockerBaseSize"`
	KubeReservedMem           *int    `pulumi:"kubeReservedMem"`
	MarketType                *string `pulumi:"marketType"`
	MaxPods                   *int    `pulumi:"maxPods"`
	NicThreshold              *string `pulumi:"nicThreshold"`
	NodeImageId               *string `pulumi:"nodeImageId"`
	NodeMultiQueue            *string `pulumi:"nodeMultiQueue"`
	Postinstall               *string `pulumi:"postinstall"`
	Preinstall                *string `pulumi:"preinstall"`
	SecurityReinforcementType *string `pulumi:"securityReinforcementType"`
	SpotPrice                 *string `pulumi:"spotPrice"`
	SystemReservedMem         *int    `pulumi:"systemReservedMem"`
}

// CceNodePoolExtendParamsInput is an input type that accepts CceNodePoolExtendParamsArgs and CceNodePoolExtendParamsOutput values.
// You can construct a concrete instance of `CceNodePoolExtendParamsInput` via:
//
//	CceNodePoolExtendParamsArgs{...}
type CceNodePoolExtendParamsInput interface {
	pulumi.Input

	ToCceNodePoolExtendParamsOutput() CceNodePoolExtendParamsOutput
	ToCceNodePoolExtendParamsOutputWithContext(context.Context) CceNodePoolExtendParamsOutput
}

type CceNodePoolExtendParamsArgs struct {
	AgencyName                pulumi.StringPtrInput `pulumi:"agencyName"`
	DockerBaseSize            pulumi.IntPtrInput    `pulumi:"dockerBaseSize"`
	KubeReservedMem           pulumi.IntPtrInput    `pulumi:"kubeReservedMem"`
	MarketType                pulumi.StringPtrInput `pulumi:"marketType"`
	MaxPods                   pulumi.IntPtrInput    `pulumi:"maxPods"`
	NicThreshold              pulumi.StringPtrInput `pulumi:"nicThreshold"`
	NodeImageId               pulumi.StringPtrInput `pulumi:"nodeImageId"`
	NodeMultiQueue            pulumi.StringPtrInput `pulumi:"nodeMultiQueue"`
	Postinstall               pulumi.StringPtrInput `pulumi:"postinstall"`
	Preinstall                pulumi.StringPtrInput `pulumi:"preinstall"`
	SecurityReinforcementType pulumi.StringPtrInput `pulumi:"securityReinforcementType"`
	SpotPrice                 pulumi.StringPtrInput `pulumi:"spotPrice"`
	SystemReservedMem         pulumi.IntPtrInput    `pulumi:"systemReservedMem"`
}

func (CceNodePoolExtendParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtendParams)(nil)).Elem()
}

func (i CceNodePoolExtendParamsArgs) ToCceNodePoolExtendParamsOutput() CceNodePoolExtendParamsOutput {
	return i.ToCceNodePoolExtendParamsOutputWithContext(context.Background())
}

func (i CceNodePoolExtendParamsArgs) ToCceNodePoolExtendParamsOutputWithContext(ctx context.Context) CceNodePoolExtendParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtendParamsOutput)
}

func (i CceNodePoolExtendParamsArgs) ToCceNodePoolExtendParamsPtrOutput() CceNodePoolExtendParamsPtrOutput {
	return i.ToCceNodePoolExtendParamsPtrOutputWithContext(context.Background())
}

func (i CceNodePoolExtendParamsArgs) ToCceNodePoolExtendParamsPtrOutputWithContext(ctx context.Context) CceNodePoolExtendParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtendParamsOutput).ToCceNodePoolExtendParamsPtrOutputWithContext(ctx)
}

// CceNodePoolExtendParamsPtrInput is an input type that accepts CceNodePoolExtendParamsArgs, CceNodePoolExtendParamsPtr and CceNodePoolExtendParamsPtrOutput values.
// You can construct a concrete instance of `CceNodePoolExtendParamsPtrInput` via:
//
//	        CceNodePoolExtendParamsArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolExtendParamsPtrInput interface {
	pulumi.Input

	ToCceNodePoolExtendParamsPtrOutput() CceNodePoolExtendParamsPtrOutput
	ToCceNodePoolExtendParamsPtrOutputWithContext(context.Context) CceNodePoolExtendParamsPtrOutput
}

type cceNodePoolExtendParamsPtrType CceNodePoolExtendParamsArgs

func CceNodePoolExtendParamsPtr(v *CceNodePoolExtendParamsArgs) CceNodePoolExtendParamsPtrInput {
	return (*cceNodePoolExtendParamsPtrType)(v)
}

func (*cceNodePoolExtendParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtendParams)(nil)).Elem()
}

func (i *cceNodePoolExtendParamsPtrType) ToCceNodePoolExtendParamsPtrOutput() CceNodePoolExtendParamsPtrOutput {
	return i.ToCceNodePoolExtendParamsPtrOutputWithContext(context.Background())
}

func (i *cceNodePoolExtendParamsPtrType) ToCceNodePoolExtendParamsPtrOutputWithContext(ctx context.Context) CceNodePoolExtendParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtendParamsPtrOutput)
}

type CceNodePoolExtendParamsOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtendParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtendParams)(nil)).Elem()
}

func (o CceNodePoolExtendParamsOutput) ToCceNodePoolExtendParamsOutput() CceNodePoolExtendParamsOutput {
	return o
}

func (o CceNodePoolExtendParamsOutput) ToCceNodePoolExtendParamsOutputWithContext(ctx context.Context) CceNodePoolExtendParamsOutput {
	return o
}

func (o CceNodePoolExtendParamsOutput) ToCceNodePoolExtendParamsPtrOutput() CceNodePoolExtendParamsPtrOutput {
	return o.ToCceNodePoolExtendParamsPtrOutputWithContext(context.Background())
}

func (o CceNodePoolExtendParamsOutput) ToCceNodePoolExtendParamsPtrOutputWithContext(ctx context.Context) CceNodePoolExtendParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolExtendParams) *CceNodePoolExtendParams {
		return &v
	}).(CceNodePoolExtendParamsPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) AgencyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.AgencyName }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) DockerBaseSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *int { return v.DockerBaseSize }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) KubeReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *int { return v.KubeReservedMem }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) NicThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.NicThreshold }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) NodeImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.NodeImageId }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) NodeMultiQueue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.NodeMultiQueue }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.Postinstall }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.Preinstall }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) SecurityReinforcementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.SecurityReinforcementType }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsOutput) SystemReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtendParams) *int { return v.SystemReservedMem }).(pulumi.IntPtrOutput)
}

type CceNodePoolExtendParamsPtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtendParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtendParams)(nil)).Elem()
}

func (o CceNodePoolExtendParamsPtrOutput) ToCceNodePoolExtendParamsPtrOutput() CceNodePoolExtendParamsPtrOutput {
	return o
}

func (o CceNodePoolExtendParamsPtrOutput) ToCceNodePoolExtendParamsPtrOutputWithContext(ctx context.Context) CceNodePoolExtendParamsPtrOutput {
	return o
}

func (o CceNodePoolExtendParamsPtrOutput) Elem() CceNodePoolExtendParamsOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) CceNodePoolExtendParams {
		if v != nil {
			return *v
		}
		var ret CceNodePoolExtendParams
		return ret
	}).(CceNodePoolExtendParamsOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) AgencyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.AgencyName
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) DockerBaseSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.DockerBaseSize
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) KubeReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.KubeReservedMem
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.MarketType
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.MaxPods
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) NicThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.NicThreshold
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) NodeImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.NodeImageId
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) NodeMultiQueue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.NodeMultiQueue
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.Postinstall
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.Preinstall
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) SecurityReinforcementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.SecurityReinforcementType
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *string {
		if v == nil {
			return nil
		}
		return v.SpotPrice
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtendParamsPtrOutput) SystemReservedMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtendParams) *int {
		if v == nil {
			return nil
		}
		return v.SystemReservedMem
	}).(pulumi.IntPtrOutput)
}

type CceNodePoolExtensionScaleGroup struct {
	Metadata *CceNodePoolExtensionScaleGroupMetadata `pulumi:"metadata"`
	Spec     *CceNodePoolExtensionScaleGroupSpec     `pulumi:"spec"`
}

// CceNodePoolExtensionScaleGroupInput is an input type that accepts CceNodePoolExtensionScaleGroupArgs and CceNodePoolExtensionScaleGroupOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupInput` via:
//
//	CceNodePoolExtensionScaleGroupArgs{...}
type CceNodePoolExtensionScaleGroupInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupOutput() CceNodePoolExtensionScaleGroupOutput
	ToCceNodePoolExtensionScaleGroupOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupOutput
}

type CceNodePoolExtensionScaleGroupArgs struct {
	Metadata CceNodePoolExtensionScaleGroupMetadataPtrInput `pulumi:"metadata"`
	Spec     CceNodePoolExtensionScaleGroupSpecPtrInput     `pulumi:"spec"`
}

func (CceNodePoolExtensionScaleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroup)(nil)).Elem()
}

func (i CceNodePoolExtensionScaleGroupArgs) ToCceNodePoolExtensionScaleGroupOutput() CceNodePoolExtensionScaleGroupOutput {
	return i.ToCceNodePoolExtensionScaleGroupOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupArgs) ToCceNodePoolExtensionScaleGroupOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupOutput)
}

// CceNodePoolExtensionScaleGroupArrayInput is an input type that accepts CceNodePoolExtensionScaleGroupArray and CceNodePoolExtensionScaleGroupArrayOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupArrayInput` via:
//
//	CceNodePoolExtensionScaleGroupArray{ CceNodePoolExtensionScaleGroupArgs{...} }
type CceNodePoolExtensionScaleGroupArrayInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupArrayOutput() CceNodePoolExtensionScaleGroupArrayOutput
	ToCceNodePoolExtensionScaleGroupArrayOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupArrayOutput
}

type CceNodePoolExtensionScaleGroupArray []CceNodePoolExtensionScaleGroupInput

func (CceNodePoolExtensionScaleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolExtensionScaleGroup)(nil)).Elem()
}

func (i CceNodePoolExtensionScaleGroupArray) ToCceNodePoolExtensionScaleGroupArrayOutput() CceNodePoolExtensionScaleGroupArrayOutput {
	return i.ToCceNodePoolExtensionScaleGroupArrayOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupArray) ToCceNodePoolExtensionScaleGroupArrayOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupArrayOutput)
}

type CceNodePoolExtensionScaleGroupOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroup)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupOutput) ToCceNodePoolExtensionScaleGroupOutput() CceNodePoolExtensionScaleGroupOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupOutput) ToCceNodePoolExtensionScaleGroupOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupOutput) Metadata() CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroup) *CceNodePoolExtensionScaleGroupMetadata { return v.Metadata }).(CceNodePoolExtensionScaleGroupMetadataPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupOutput) Spec() CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroup) *CceNodePoolExtensionScaleGroupSpec { return v.Spec }).(CceNodePoolExtensionScaleGroupSpecPtrOutput)
}

type CceNodePoolExtensionScaleGroupArrayOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolExtensionScaleGroup)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupArrayOutput) ToCceNodePoolExtensionScaleGroupArrayOutput() CceNodePoolExtensionScaleGroupArrayOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupArrayOutput) ToCceNodePoolExtensionScaleGroupArrayOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupArrayOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupArrayOutput) Index(i pulumi.IntInput) CceNodePoolExtensionScaleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodePoolExtensionScaleGroup {
		return vs[0].([]CceNodePoolExtensionScaleGroup)[vs[1].(int)]
	}).(CceNodePoolExtensionScaleGroupOutput)
}

type CceNodePoolExtensionScaleGroupMetadata struct {
	Name *string `pulumi:"name"`
}

// CceNodePoolExtensionScaleGroupMetadataInput is an input type that accepts CceNodePoolExtensionScaleGroupMetadataArgs and CceNodePoolExtensionScaleGroupMetadataOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupMetadataInput` via:
//
//	CceNodePoolExtensionScaleGroupMetadataArgs{...}
type CceNodePoolExtensionScaleGroupMetadataInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupMetadataOutput() CceNodePoolExtensionScaleGroupMetadataOutput
	ToCceNodePoolExtensionScaleGroupMetadataOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupMetadataOutput
}

type CceNodePoolExtensionScaleGroupMetadataArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CceNodePoolExtensionScaleGroupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupMetadata)(nil)).Elem()
}

func (i CceNodePoolExtensionScaleGroupMetadataArgs) ToCceNodePoolExtensionScaleGroupMetadataOutput() CceNodePoolExtensionScaleGroupMetadataOutput {
	return i.ToCceNodePoolExtensionScaleGroupMetadataOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupMetadataArgs) ToCceNodePoolExtensionScaleGroupMetadataOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupMetadataOutput)
}

func (i CceNodePoolExtensionScaleGroupMetadataArgs) ToCceNodePoolExtensionScaleGroupMetadataPtrOutput() CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupMetadataArgs) ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupMetadataOutput).ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(ctx)
}

// CceNodePoolExtensionScaleGroupMetadataPtrInput is an input type that accepts CceNodePoolExtensionScaleGroupMetadataArgs, CceNodePoolExtensionScaleGroupMetadataPtr and CceNodePoolExtensionScaleGroupMetadataPtrOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupMetadataPtrInput` via:
//
//	        CceNodePoolExtensionScaleGroupMetadataArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolExtensionScaleGroupMetadataPtrInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupMetadataPtrOutput() CceNodePoolExtensionScaleGroupMetadataPtrOutput
	ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupMetadataPtrOutput
}

type cceNodePoolExtensionScaleGroupMetadataPtrType CceNodePoolExtensionScaleGroupMetadataArgs

func CceNodePoolExtensionScaleGroupMetadataPtr(v *CceNodePoolExtensionScaleGroupMetadataArgs) CceNodePoolExtensionScaleGroupMetadataPtrInput {
	return (*cceNodePoolExtensionScaleGroupMetadataPtrType)(v)
}

func (*cceNodePoolExtensionScaleGroupMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupMetadata)(nil)).Elem()
}

func (i *cceNodePoolExtensionScaleGroupMetadataPtrType) ToCceNodePoolExtensionScaleGroupMetadataPtrOutput() CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(context.Background())
}

func (i *cceNodePoolExtensionScaleGroupMetadataPtrType) ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupMetadataPtrOutput)
}

type CceNodePoolExtensionScaleGroupMetadataOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupMetadata)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupMetadataOutput) ToCceNodePoolExtensionScaleGroupMetadataOutput() CceNodePoolExtensionScaleGroupMetadataOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupMetadataOutput) ToCceNodePoolExtensionScaleGroupMetadataOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupMetadataOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupMetadataOutput) ToCceNodePoolExtensionScaleGroupMetadataPtrOutput() CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return o.ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(context.Background())
}

func (o CceNodePoolExtensionScaleGroupMetadataOutput) ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolExtensionScaleGroupMetadata) *CceNodePoolExtensionScaleGroupMetadata {
		return &v
	}).(CceNodePoolExtensionScaleGroupMetadataPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CceNodePoolExtensionScaleGroupMetadataPtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupMetadata)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupMetadataPtrOutput) ToCceNodePoolExtensionScaleGroupMetadataPtrOutput() CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupMetadataPtrOutput) ToCceNodePoolExtensionScaleGroupMetadataPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupMetadataPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupMetadataPtrOutput) Elem() CceNodePoolExtensionScaleGroupMetadataOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupMetadata) CceNodePoolExtensionScaleGroupMetadata {
		if v != nil {
			return *v
		}
		var ret CceNodePoolExtensionScaleGroupMetadata
		return ret
	}).(CceNodePoolExtensionScaleGroupMetadataOutput)
}

func (o CceNodePoolExtensionScaleGroupMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpec struct {
	Autoscaling                      *CceNodePoolExtensionScaleGroupSpecAutoscaling                      `pulumi:"autoscaling"`
	Az                               *string                                                             `pulumi:"az"`
	CapacityReservationSpecification *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	Flavor                           *string                                                             `pulumi:"flavor"`
}

// CceNodePoolExtensionScaleGroupSpecInput is an input type that accepts CceNodePoolExtensionScaleGroupSpecArgs and CceNodePoolExtensionScaleGroupSpecOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupSpecInput` via:
//
//	CceNodePoolExtensionScaleGroupSpecArgs{...}
type CceNodePoolExtensionScaleGroupSpecInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupSpecOutput() CceNodePoolExtensionScaleGroupSpecOutput
	ToCceNodePoolExtensionScaleGroupSpecOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupSpecOutput
}

type CceNodePoolExtensionScaleGroupSpecArgs struct {
	Autoscaling                      CceNodePoolExtensionScaleGroupSpecAutoscalingPtrInput                      `pulumi:"autoscaling"`
	Az                               pulumi.StringPtrInput                                                      `pulumi:"az"`
	CapacityReservationSpecification CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrInput `pulumi:"capacityReservationSpecification"`
	Flavor                           pulumi.StringPtrInput                                                      `pulumi:"flavor"`
}

func (CceNodePoolExtensionScaleGroupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpec)(nil)).Elem()
}

func (i CceNodePoolExtensionScaleGroupSpecArgs) ToCceNodePoolExtensionScaleGroupSpecOutput() CceNodePoolExtensionScaleGroupSpecOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupSpecArgs) ToCceNodePoolExtensionScaleGroupSpecOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecOutput)
}

func (i CceNodePoolExtensionScaleGroupSpecArgs) ToCceNodePoolExtensionScaleGroupSpecPtrOutput() CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupSpecArgs) ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecOutput).ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(ctx)
}

// CceNodePoolExtensionScaleGroupSpecPtrInput is an input type that accepts CceNodePoolExtensionScaleGroupSpecArgs, CceNodePoolExtensionScaleGroupSpecPtr and CceNodePoolExtensionScaleGroupSpecPtrOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupSpecPtrInput` via:
//
//	        CceNodePoolExtensionScaleGroupSpecArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolExtensionScaleGroupSpecPtrInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupSpecPtrOutput() CceNodePoolExtensionScaleGroupSpecPtrOutput
	ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupSpecPtrOutput
}

type cceNodePoolExtensionScaleGroupSpecPtrType CceNodePoolExtensionScaleGroupSpecArgs

func CceNodePoolExtensionScaleGroupSpecPtr(v *CceNodePoolExtensionScaleGroupSpecArgs) CceNodePoolExtensionScaleGroupSpecPtrInput {
	return (*cceNodePoolExtensionScaleGroupSpecPtrType)(v)
}

func (*cceNodePoolExtensionScaleGroupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupSpec)(nil)).Elem()
}

func (i *cceNodePoolExtensionScaleGroupSpecPtrType) ToCceNodePoolExtensionScaleGroupSpecPtrOutput() CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(context.Background())
}

func (i *cceNodePoolExtensionScaleGroupSpecPtrType) ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpec)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) ToCceNodePoolExtensionScaleGroupSpecOutput() CceNodePoolExtensionScaleGroupSpecOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) ToCceNodePoolExtensionScaleGroupSpecOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) ToCceNodePoolExtensionScaleGroupSpecPtrOutput() CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return o.ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(context.Background())
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolExtensionScaleGroupSpec) *CceNodePoolExtensionScaleGroupSpec {
		return &v
	}).(CceNodePoolExtensionScaleGroupSpecPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) Autoscaling() CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpec) *CceNodePoolExtensionScaleGroupSpecAutoscaling {
		return v.Autoscaling
	}).(CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) Az() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpec) *string { return v.Az }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) CapacityReservationSpecification() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpec) *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification {
		return v.CapacityReservationSpecification
	}).(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpec) *string { return v.Flavor }).(pulumi.StringPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecPtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupSpec)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupSpecPtrOutput) ToCceNodePoolExtensionScaleGroupSpecPtrOutput() CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecPtrOutput) ToCceNodePoolExtensionScaleGroupSpecPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecPtrOutput) Elem() CceNodePoolExtensionScaleGroupSpecOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpec) CceNodePoolExtensionScaleGroupSpec {
		if v != nil {
			return *v
		}
		var ret CceNodePoolExtensionScaleGroupSpec
		return ret
	}).(CceNodePoolExtensionScaleGroupSpecOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecPtrOutput) Autoscaling() CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpec) *CceNodePoolExtensionScaleGroupSpecAutoscaling {
		if v == nil {
			return nil
		}
		return v.Autoscaling
	}).(CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecPtrOutput) Az() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpec) *string {
		if v == nil {
			return nil
		}
		return v.Az
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecPtrOutput) CapacityReservationSpecification() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpec) *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification {
		if v == nil {
			return nil
		}
		return v.CapacityReservationSpecification
	}).(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpec) *string {
		if v == nil {
			return nil
		}
		return v.Flavor
	}).(pulumi.StringPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecAutoscaling struct {
	Enable            *bool `pulumi:"enable"`
	ExtensionPriority *int  `pulumi:"extensionPriority"`
	MaxNodeCount      *int  `pulumi:"maxNodeCount"`
	MinNodeCount      *int  `pulumi:"minNodeCount"`
}

// CceNodePoolExtensionScaleGroupSpecAutoscalingInput is an input type that accepts CceNodePoolExtensionScaleGroupSpecAutoscalingArgs and CceNodePoolExtensionScaleGroupSpecAutoscalingOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupSpecAutoscalingInput` via:
//
//	CceNodePoolExtensionScaleGroupSpecAutoscalingArgs{...}
type CceNodePoolExtensionScaleGroupSpecAutoscalingInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupSpecAutoscalingOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingOutput
	ToCceNodePoolExtensionScaleGroupSpecAutoscalingOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingOutput
}

type CceNodePoolExtensionScaleGroupSpecAutoscalingArgs struct {
	Enable            pulumi.BoolPtrInput `pulumi:"enable"`
	ExtensionPriority pulumi.IntPtrInput  `pulumi:"extensionPriority"`
	MaxNodeCount      pulumi.IntPtrInput  `pulumi:"maxNodeCount"`
	MinNodeCount      pulumi.IntPtrInput  `pulumi:"minNodeCount"`
}

func (CceNodePoolExtensionScaleGroupSpecAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecAutoscaling)(nil)).Elem()
}

func (i CceNodePoolExtensionScaleGroupSpecAutoscalingArgs) ToCceNodePoolExtensionScaleGroupSpecAutoscalingOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecAutoscalingOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupSpecAutoscalingArgs) ToCceNodePoolExtensionScaleGroupSpecAutoscalingOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecAutoscalingOutput)
}

func (i CceNodePoolExtensionScaleGroupSpecAutoscalingArgs) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupSpecAutoscalingArgs) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecAutoscalingOutput).ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(ctx)
}

// CceNodePoolExtensionScaleGroupSpecAutoscalingPtrInput is an input type that accepts CceNodePoolExtensionScaleGroupSpecAutoscalingArgs, CceNodePoolExtensionScaleGroupSpecAutoscalingPtr and CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupSpecAutoscalingPtrInput` via:
//
//	        CceNodePoolExtensionScaleGroupSpecAutoscalingArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolExtensionScaleGroupSpecAutoscalingPtrInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput
	ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput
}

type cceNodePoolExtensionScaleGroupSpecAutoscalingPtrType CceNodePoolExtensionScaleGroupSpecAutoscalingArgs

func CceNodePoolExtensionScaleGroupSpecAutoscalingPtr(v *CceNodePoolExtensionScaleGroupSpecAutoscalingArgs) CceNodePoolExtensionScaleGroupSpecAutoscalingPtrInput {
	return (*cceNodePoolExtensionScaleGroupSpecAutoscalingPtrType)(v)
}

func (*cceNodePoolExtensionScaleGroupSpecAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupSpecAutoscaling)(nil)).Elem()
}

func (i *cceNodePoolExtensionScaleGroupSpecAutoscalingPtrType) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(context.Background())
}

func (i *cceNodePoolExtensionScaleGroupSpecAutoscalingPtrType) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecAutoscalingOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecAutoscaling)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) ToCceNodePoolExtensionScaleGroupSpecAutoscalingOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) ToCceNodePoolExtensionScaleGroupSpecAutoscalingOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return o.ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(context.Background())
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolExtensionScaleGroupSpecAutoscaling) *CceNodePoolExtensionScaleGroupSpecAutoscaling {
		return &v
	}).(CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpecAutoscaling) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) ExtensionPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpecAutoscaling) *int { return v.ExtensionPriority }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpecAutoscaling) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpecAutoscaling) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupSpecAutoscaling)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput() CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) ToCceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) Elem() CceNodePoolExtensionScaleGroupSpecAutoscalingOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecAutoscaling) CceNodePoolExtensionScaleGroupSpecAutoscaling {
		if v != nil {
			return *v
		}
		var ret CceNodePoolExtensionScaleGroupSpecAutoscaling
		return ret
	}).(CceNodePoolExtensionScaleGroupSpecAutoscalingOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecAutoscaling) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) ExtensionPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.ExtensionPriority
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification struct {
	Id         *string `pulumi:"id"`
	Preference *string `pulumi:"preference"`
}

// CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationInput is an input type that accepts CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs and CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationInput` via:
//
//	CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs{...}
type CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput
	ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput
}

type CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs struct {
	Id         pulumi.StringPtrInput `pulumi:"id"`
	Preference pulumi.StringPtrInput `pulumi:"preference"`
}

func (CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification)(nil)).Elem()
}

func (i CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput)
}

func (i CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput).ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(ctx)
}

// CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrInput is an input type that accepts CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs, CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtr and CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput values.
// You can construct a concrete instance of `CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrInput` via:
//
//	        CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrInput interface {
	pulumi.Input

	ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput
	ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput
}

type cceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrType CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs

func CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtr(v *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrInput {
	return (*cceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrType)(v)
}

func (*cceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification)(nil)).Elem()
}

func (i *cceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrType) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return i.ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i *cceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrType) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return o.ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification) *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification {
		return &v
	}).(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput) Preference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification) *string {
		return v.Preference
	}).(pulumi.StringPtrOutput)
}

type CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification)(nil)).Elem()
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput) ToCceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput {
	return o
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput) Elem() CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification) CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification {
		if v != nil {
			return *v
		}
		var ret CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification
		return ret
	}).(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput) Preference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Preference
	}).(pulumi.StringPtrOutput)
}

type CceNodePoolHostnameConfig struct {
	Type string `pulumi:"type"`
}

// CceNodePoolHostnameConfigInput is an input type that accepts CceNodePoolHostnameConfigArgs and CceNodePoolHostnameConfigOutput values.
// You can construct a concrete instance of `CceNodePoolHostnameConfigInput` via:
//
//	CceNodePoolHostnameConfigArgs{...}
type CceNodePoolHostnameConfigInput interface {
	pulumi.Input

	ToCceNodePoolHostnameConfigOutput() CceNodePoolHostnameConfigOutput
	ToCceNodePoolHostnameConfigOutputWithContext(context.Context) CceNodePoolHostnameConfigOutput
}

type CceNodePoolHostnameConfigArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (CceNodePoolHostnameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolHostnameConfig)(nil)).Elem()
}

func (i CceNodePoolHostnameConfigArgs) ToCceNodePoolHostnameConfigOutput() CceNodePoolHostnameConfigOutput {
	return i.ToCceNodePoolHostnameConfigOutputWithContext(context.Background())
}

func (i CceNodePoolHostnameConfigArgs) ToCceNodePoolHostnameConfigOutputWithContext(ctx context.Context) CceNodePoolHostnameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolHostnameConfigOutput)
}

func (i CceNodePoolHostnameConfigArgs) ToCceNodePoolHostnameConfigPtrOutput() CceNodePoolHostnameConfigPtrOutput {
	return i.ToCceNodePoolHostnameConfigPtrOutputWithContext(context.Background())
}

func (i CceNodePoolHostnameConfigArgs) ToCceNodePoolHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodePoolHostnameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolHostnameConfigOutput).ToCceNodePoolHostnameConfigPtrOutputWithContext(ctx)
}

// CceNodePoolHostnameConfigPtrInput is an input type that accepts CceNodePoolHostnameConfigArgs, CceNodePoolHostnameConfigPtr and CceNodePoolHostnameConfigPtrOutput values.
// You can construct a concrete instance of `CceNodePoolHostnameConfigPtrInput` via:
//
//	        CceNodePoolHostnameConfigArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolHostnameConfigPtrInput interface {
	pulumi.Input

	ToCceNodePoolHostnameConfigPtrOutput() CceNodePoolHostnameConfigPtrOutput
	ToCceNodePoolHostnameConfigPtrOutputWithContext(context.Context) CceNodePoolHostnameConfigPtrOutput
}

type cceNodePoolHostnameConfigPtrType CceNodePoolHostnameConfigArgs

func CceNodePoolHostnameConfigPtr(v *CceNodePoolHostnameConfigArgs) CceNodePoolHostnameConfigPtrInput {
	return (*cceNodePoolHostnameConfigPtrType)(v)
}

func (*cceNodePoolHostnameConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolHostnameConfig)(nil)).Elem()
}

func (i *cceNodePoolHostnameConfigPtrType) ToCceNodePoolHostnameConfigPtrOutput() CceNodePoolHostnameConfigPtrOutput {
	return i.ToCceNodePoolHostnameConfigPtrOutputWithContext(context.Background())
}

func (i *cceNodePoolHostnameConfigPtrType) ToCceNodePoolHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodePoolHostnameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolHostnameConfigPtrOutput)
}

type CceNodePoolHostnameConfigOutput struct{ *pulumi.OutputState }

func (CceNodePoolHostnameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolHostnameConfig)(nil)).Elem()
}

func (o CceNodePoolHostnameConfigOutput) ToCceNodePoolHostnameConfigOutput() CceNodePoolHostnameConfigOutput {
	return o
}

func (o CceNodePoolHostnameConfigOutput) ToCceNodePoolHostnameConfigOutputWithContext(ctx context.Context) CceNodePoolHostnameConfigOutput {
	return o
}

func (o CceNodePoolHostnameConfigOutput) ToCceNodePoolHostnameConfigPtrOutput() CceNodePoolHostnameConfigPtrOutput {
	return o.ToCceNodePoolHostnameConfigPtrOutputWithContext(context.Background())
}

func (o CceNodePoolHostnameConfigOutput) ToCceNodePoolHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodePoolHostnameConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolHostnameConfig) *CceNodePoolHostnameConfig {
		return &v
	}).(CceNodePoolHostnameConfigPtrOutput)
}

func (o CceNodePoolHostnameConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolHostnameConfig) string { return v.Type }).(pulumi.StringOutput)
}

type CceNodePoolHostnameConfigPtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolHostnameConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolHostnameConfig)(nil)).Elem()
}

func (o CceNodePoolHostnameConfigPtrOutput) ToCceNodePoolHostnameConfigPtrOutput() CceNodePoolHostnameConfigPtrOutput {
	return o
}

func (o CceNodePoolHostnameConfigPtrOutput) ToCceNodePoolHostnameConfigPtrOutputWithContext(ctx context.Context) CceNodePoolHostnameConfigPtrOutput {
	return o
}

func (o CceNodePoolHostnameConfigPtrOutput) Elem() CceNodePoolHostnameConfigOutput {
	return o.ApplyT(func(v *CceNodePoolHostnameConfig) CceNodePoolHostnameConfig {
		if v != nil {
			return *v
		}
		var ret CceNodePoolHostnameConfig
		return ret
	}).(CceNodePoolHostnameConfigOutput)
}

func (o CceNodePoolHostnameConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolHostnameConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CceNodePoolRootVolume struct {
	DssPoolId *string `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  *string           `pulumi:"extendParam"`
	ExtendParams map[string]string `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough *bool   `pulumi:"hwPassthrough"`
	Iops          *int    `pulumi:"iops"`
	KmsKeyId      *string `pulumi:"kmsKeyId"`
	Size          int     `pulumi:"size"`
	Throughput    *int    `pulumi:"throughput"`
	Volumetype    string  `pulumi:"volumetype"`
}

// CceNodePoolRootVolumeInput is an input type that accepts CceNodePoolRootVolumeArgs and CceNodePoolRootVolumeOutput values.
// You can construct a concrete instance of `CceNodePoolRootVolumeInput` via:
//
//	CceNodePoolRootVolumeArgs{...}
type CceNodePoolRootVolumeInput interface {
	pulumi.Input

	ToCceNodePoolRootVolumeOutput() CceNodePoolRootVolumeOutput
	ToCceNodePoolRootVolumeOutputWithContext(context.Context) CceNodePoolRootVolumeOutput
}

type CceNodePoolRootVolumeArgs struct {
	DssPoolId pulumi.StringPtrInput `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  pulumi.StringPtrInput `pulumi:"extendParam"`
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough pulumi.BoolPtrInput   `pulumi:"hwPassthrough"`
	Iops          pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId      pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	Size          pulumi.IntInput       `pulumi:"size"`
	Throughput    pulumi.IntPtrInput    `pulumi:"throughput"`
	Volumetype    pulumi.StringInput    `pulumi:"volumetype"`
}

func (CceNodePoolRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolRootVolume)(nil)).Elem()
}

func (i CceNodePoolRootVolumeArgs) ToCceNodePoolRootVolumeOutput() CceNodePoolRootVolumeOutput {
	return i.ToCceNodePoolRootVolumeOutputWithContext(context.Background())
}

func (i CceNodePoolRootVolumeArgs) ToCceNodePoolRootVolumeOutputWithContext(ctx context.Context) CceNodePoolRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolRootVolumeOutput)
}

func (i CceNodePoolRootVolumeArgs) ToCceNodePoolRootVolumePtrOutput() CceNodePoolRootVolumePtrOutput {
	return i.ToCceNodePoolRootVolumePtrOutputWithContext(context.Background())
}

func (i CceNodePoolRootVolumeArgs) ToCceNodePoolRootVolumePtrOutputWithContext(ctx context.Context) CceNodePoolRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolRootVolumeOutput).ToCceNodePoolRootVolumePtrOutputWithContext(ctx)
}

// CceNodePoolRootVolumePtrInput is an input type that accepts CceNodePoolRootVolumeArgs, CceNodePoolRootVolumePtr and CceNodePoolRootVolumePtrOutput values.
// You can construct a concrete instance of `CceNodePoolRootVolumePtrInput` via:
//
//	        CceNodePoolRootVolumeArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolRootVolumePtrInput interface {
	pulumi.Input

	ToCceNodePoolRootVolumePtrOutput() CceNodePoolRootVolumePtrOutput
	ToCceNodePoolRootVolumePtrOutputWithContext(context.Context) CceNodePoolRootVolumePtrOutput
}

type cceNodePoolRootVolumePtrType CceNodePoolRootVolumeArgs

func CceNodePoolRootVolumePtr(v *CceNodePoolRootVolumeArgs) CceNodePoolRootVolumePtrInput {
	return (*cceNodePoolRootVolumePtrType)(v)
}

func (*cceNodePoolRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolRootVolume)(nil)).Elem()
}

func (i *cceNodePoolRootVolumePtrType) ToCceNodePoolRootVolumePtrOutput() CceNodePoolRootVolumePtrOutput {
	return i.ToCceNodePoolRootVolumePtrOutputWithContext(context.Background())
}

func (i *cceNodePoolRootVolumePtrType) ToCceNodePoolRootVolumePtrOutputWithContext(ctx context.Context) CceNodePoolRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolRootVolumePtrOutput)
}

type CceNodePoolRootVolumeOutput struct{ *pulumi.OutputState }

func (CceNodePoolRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolRootVolume)(nil)).Elem()
}

func (o CceNodePoolRootVolumeOutput) ToCceNodePoolRootVolumeOutput() CceNodePoolRootVolumeOutput {
	return o
}

func (o CceNodePoolRootVolumeOutput) ToCceNodePoolRootVolumeOutputWithContext(ctx context.Context) CceNodePoolRootVolumeOutput {
	return o
}

func (o CceNodePoolRootVolumeOutput) ToCceNodePoolRootVolumePtrOutput() CceNodePoolRootVolumePtrOutput {
	return o.ToCceNodePoolRootVolumePtrOutputWithContext(context.Background())
}

func (o CceNodePoolRootVolumeOutput) ToCceNodePoolRootVolumePtrOutputWithContext(ctx context.Context) CceNodePoolRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolRootVolume) *CceNodePoolRootVolume {
		return &v
	}).(CceNodePoolRootVolumePtrOutput)
}

func (o CceNodePoolRootVolumeOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) *string { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodePoolRootVolumeOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) *string { return v.ExtendParam }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolRootVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodePoolRootVolumeOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) *bool { return v.HwPassthrough }).(pulumi.BoolPtrOutput)
}

func (o CceNodePoolRootVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolRootVolumeOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolRootVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o CceNodePoolRootVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolRootVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolRootVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type CceNodePoolRootVolumePtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolRootVolume)(nil)).Elem()
}

func (o CceNodePoolRootVolumePtrOutput) ToCceNodePoolRootVolumePtrOutput() CceNodePoolRootVolumePtrOutput {
	return o
}

func (o CceNodePoolRootVolumePtrOutput) ToCceNodePoolRootVolumePtrOutputWithContext(ctx context.Context) CceNodePoolRootVolumePtrOutput {
	return o
}

func (o CceNodePoolRootVolumePtrOutput) Elem() CceNodePoolRootVolumeOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) CceNodePoolRootVolume {
		if v != nil {
			return *v
		}
		var ret CceNodePoolRootVolume
		return ret
	}).(CceNodePoolRootVolumeOutput)
}

func (o CceNodePoolRootVolumePtrOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.DssPoolId
	}).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodePoolRootVolumePtrOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.ExtendParam
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolRootVolumePtrOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtendParams
	}).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodePoolRootVolumePtrOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *bool {
		if v == nil {
			return nil
		}
		return v.HwPassthrough
	}).(pulumi.BoolPtrOutput)
}

func (o CceNodePoolRootVolumePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolRootVolumePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o CceNodePoolRootVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolRootVolumePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

func (o CceNodePoolRootVolumePtrOutput) Volumetype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePoolRootVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Volumetype
	}).(pulumi.StringPtrOutput)
}

type CceNodePoolStorage struct {
	Groups    []CceNodePoolStorageGroup    `pulumi:"groups"`
	Selectors []CceNodePoolStorageSelector `pulumi:"selectors"`
}

// CceNodePoolStorageInput is an input type that accepts CceNodePoolStorageArgs and CceNodePoolStorageOutput values.
// You can construct a concrete instance of `CceNodePoolStorageInput` via:
//
//	CceNodePoolStorageArgs{...}
type CceNodePoolStorageInput interface {
	pulumi.Input

	ToCceNodePoolStorageOutput() CceNodePoolStorageOutput
	ToCceNodePoolStorageOutputWithContext(context.Context) CceNodePoolStorageOutput
}

type CceNodePoolStorageArgs struct {
	Groups    CceNodePoolStorageGroupArrayInput    `pulumi:"groups"`
	Selectors CceNodePoolStorageSelectorArrayInput `pulumi:"selectors"`
}

func (CceNodePoolStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorage)(nil)).Elem()
}

func (i CceNodePoolStorageArgs) ToCceNodePoolStorageOutput() CceNodePoolStorageOutput {
	return i.ToCceNodePoolStorageOutputWithContext(context.Background())
}

func (i CceNodePoolStorageArgs) ToCceNodePoolStorageOutputWithContext(ctx context.Context) CceNodePoolStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageOutput)
}

func (i CceNodePoolStorageArgs) ToCceNodePoolStoragePtrOutput() CceNodePoolStoragePtrOutput {
	return i.ToCceNodePoolStoragePtrOutputWithContext(context.Background())
}

func (i CceNodePoolStorageArgs) ToCceNodePoolStoragePtrOutputWithContext(ctx context.Context) CceNodePoolStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageOutput).ToCceNodePoolStoragePtrOutputWithContext(ctx)
}

// CceNodePoolStoragePtrInput is an input type that accepts CceNodePoolStorageArgs, CceNodePoolStoragePtr and CceNodePoolStoragePtrOutput values.
// You can construct a concrete instance of `CceNodePoolStoragePtrInput` via:
//
//	        CceNodePoolStorageArgs{...}
//
//	or:
//
//	        nil
type CceNodePoolStoragePtrInput interface {
	pulumi.Input

	ToCceNodePoolStoragePtrOutput() CceNodePoolStoragePtrOutput
	ToCceNodePoolStoragePtrOutputWithContext(context.Context) CceNodePoolStoragePtrOutput
}

type cceNodePoolStoragePtrType CceNodePoolStorageArgs

func CceNodePoolStoragePtr(v *CceNodePoolStorageArgs) CceNodePoolStoragePtrInput {
	return (*cceNodePoolStoragePtrType)(v)
}

func (*cceNodePoolStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolStorage)(nil)).Elem()
}

func (i *cceNodePoolStoragePtrType) ToCceNodePoolStoragePtrOutput() CceNodePoolStoragePtrOutput {
	return i.ToCceNodePoolStoragePtrOutputWithContext(context.Background())
}

func (i *cceNodePoolStoragePtrType) ToCceNodePoolStoragePtrOutputWithContext(ctx context.Context) CceNodePoolStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStoragePtrOutput)
}

type CceNodePoolStorageOutput struct{ *pulumi.OutputState }

func (CceNodePoolStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorage)(nil)).Elem()
}

func (o CceNodePoolStorageOutput) ToCceNodePoolStorageOutput() CceNodePoolStorageOutput {
	return o
}

func (o CceNodePoolStorageOutput) ToCceNodePoolStorageOutputWithContext(ctx context.Context) CceNodePoolStorageOutput {
	return o
}

func (o CceNodePoolStorageOutput) ToCceNodePoolStoragePtrOutput() CceNodePoolStoragePtrOutput {
	return o.ToCceNodePoolStoragePtrOutputWithContext(context.Background())
}

func (o CceNodePoolStorageOutput) ToCceNodePoolStoragePtrOutputWithContext(ctx context.Context) CceNodePoolStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodePoolStorage) *CceNodePoolStorage {
		return &v
	}).(CceNodePoolStoragePtrOutput)
}

func (o CceNodePoolStorageOutput) Groups() CceNodePoolStorageGroupArrayOutput {
	return o.ApplyT(func(v CceNodePoolStorage) []CceNodePoolStorageGroup { return v.Groups }).(CceNodePoolStorageGroupArrayOutput)
}

func (o CceNodePoolStorageOutput) Selectors() CceNodePoolStorageSelectorArrayOutput {
	return o.ApplyT(func(v CceNodePoolStorage) []CceNodePoolStorageSelector { return v.Selectors }).(CceNodePoolStorageSelectorArrayOutput)
}

type CceNodePoolStoragePtrOutput struct{ *pulumi.OutputState }

func (CceNodePoolStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePoolStorage)(nil)).Elem()
}

func (o CceNodePoolStoragePtrOutput) ToCceNodePoolStoragePtrOutput() CceNodePoolStoragePtrOutput {
	return o
}

func (o CceNodePoolStoragePtrOutput) ToCceNodePoolStoragePtrOutputWithContext(ctx context.Context) CceNodePoolStoragePtrOutput {
	return o
}

func (o CceNodePoolStoragePtrOutput) Elem() CceNodePoolStorageOutput {
	return o.ApplyT(func(v *CceNodePoolStorage) CceNodePoolStorage {
		if v != nil {
			return *v
		}
		var ret CceNodePoolStorage
		return ret
	}).(CceNodePoolStorageOutput)
}

func (o CceNodePoolStoragePtrOutput) Groups() CceNodePoolStorageGroupArrayOutput {
	return o.ApplyT(func(v *CceNodePoolStorage) []CceNodePoolStorageGroup {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(CceNodePoolStorageGroupArrayOutput)
}

func (o CceNodePoolStoragePtrOutput) Selectors() CceNodePoolStorageSelectorArrayOutput {
	return o.ApplyT(func(v *CceNodePoolStorage) []CceNodePoolStorageSelector {
		if v == nil {
			return nil
		}
		return v.Selectors
	}).(CceNodePoolStorageSelectorArrayOutput)
}

type CceNodePoolStorageGroup struct {
	CceManaged    *bool                                 `pulumi:"cceManaged"`
	Name          string                                `pulumi:"name"`
	SelectorNames []string                              `pulumi:"selectorNames"`
	VirtualSpaces []CceNodePoolStorageGroupVirtualSpace `pulumi:"virtualSpaces"`
}

// CceNodePoolStorageGroupInput is an input type that accepts CceNodePoolStorageGroupArgs and CceNodePoolStorageGroupOutput values.
// You can construct a concrete instance of `CceNodePoolStorageGroupInput` via:
//
//	CceNodePoolStorageGroupArgs{...}
type CceNodePoolStorageGroupInput interface {
	pulumi.Input

	ToCceNodePoolStorageGroupOutput() CceNodePoolStorageGroupOutput
	ToCceNodePoolStorageGroupOutputWithContext(context.Context) CceNodePoolStorageGroupOutput
}

type CceNodePoolStorageGroupArgs struct {
	CceManaged    pulumi.BoolPtrInput                           `pulumi:"cceManaged"`
	Name          pulumi.StringInput                            `pulumi:"name"`
	SelectorNames pulumi.StringArrayInput                       `pulumi:"selectorNames"`
	VirtualSpaces CceNodePoolStorageGroupVirtualSpaceArrayInput `pulumi:"virtualSpaces"`
}

func (CceNodePoolStorageGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorageGroup)(nil)).Elem()
}

func (i CceNodePoolStorageGroupArgs) ToCceNodePoolStorageGroupOutput() CceNodePoolStorageGroupOutput {
	return i.ToCceNodePoolStorageGroupOutputWithContext(context.Background())
}

func (i CceNodePoolStorageGroupArgs) ToCceNodePoolStorageGroupOutputWithContext(ctx context.Context) CceNodePoolStorageGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageGroupOutput)
}

// CceNodePoolStorageGroupArrayInput is an input type that accepts CceNodePoolStorageGroupArray and CceNodePoolStorageGroupArrayOutput values.
// You can construct a concrete instance of `CceNodePoolStorageGroupArrayInput` via:
//
//	CceNodePoolStorageGroupArray{ CceNodePoolStorageGroupArgs{...} }
type CceNodePoolStorageGroupArrayInput interface {
	pulumi.Input

	ToCceNodePoolStorageGroupArrayOutput() CceNodePoolStorageGroupArrayOutput
	ToCceNodePoolStorageGroupArrayOutputWithContext(context.Context) CceNodePoolStorageGroupArrayOutput
}

type CceNodePoolStorageGroupArray []CceNodePoolStorageGroupInput

func (CceNodePoolStorageGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolStorageGroup)(nil)).Elem()
}

func (i CceNodePoolStorageGroupArray) ToCceNodePoolStorageGroupArrayOutput() CceNodePoolStorageGroupArrayOutput {
	return i.ToCceNodePoolStorageGroupArrayOutputWithContext(context.Background())
}

func (i CceNodePoolStorageGroupArray) ToCceNodePoolStorageGroupArrayOutputWithContext(ctx context.Context) CceNodePoolStorageGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageGroupArrayOutput)
}

type CceNodePoolStorageGroupOutput struct{ *pulumi.OutputState }

func (CceNodePoolStorageGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorageGroup)(nil)).Elem()
}

func (o CceNodePoolStorageGroupOutput) ToCceNodePoolStorageGroupOutput() CceNodePoolStorageGroupOutput {
	return o
}

func (o CceNodePoolStorageGroupOutput) ToCceNodePoolStorageGroupOutputWithContext(ctx context.Context) CceNodePoolStorageGroupOutput {
	return o
}

func (o CceNodePoolStorageGroupOutput) CceManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroup) *bool { return v.CceManaged }).(pulumi.BoolPtrOutput)
}

func (o CceNodePoolStorageGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodePoolStorageGroupOutput) SelectorNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroup) []string { return v.SelectorNames }).(pulumi.StringArrayOutput)
}

func (o CceNodePoolStorageGroupOutput) VirtualSpaces() CceNodePoolStorageGroupVirtualSpaceArrayOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroup) []CceNodePoolStorageGroupVirtualSpace { return v.VirtualSpaces }).(CceNodePoolStorageGroupVirtualSpaceArrayOutput)
}

type CceNodePoolStorageGroupArrayOutput struct{ *pulumi.OutputState }

func (CceNodePoolStorageGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolStorageGroup)(nil)).Elem()
}

func (o CceNodePoolStorageGroupArrayOutput) ToCceNodePoolStorageGroupArrayOutput() CceNodePoolStorageGroupArrayOutput {
	return o
}

func (o CceNodePoolStorageGroupArrayOutput) ToCceNodePoolStorageGroupArrayOutputWithContext(ctx context.Context) CceNodePoolStorageGroupArrayOutput {
	return o
}

func (o CceNodePoolStorageGroupArrayOutput) Index(i pulumi.IntInput) CceNodePoolStorageGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodePoolStorageGroup {
		return vs[0].([]CceNodePoolStorageGroup)[vs[1].(int)]
	}).(CceNodePoolStorageGroupOutput)
}

type CceNodePoolStorageGroupVirtualSpace struct {
	LvmLvType     *string `pulumi:"lvmLvType"`
	LvmPath       *string `pulumi:"lvmPath"`
	Name          string  `pulumi:"name"`
	RuntimeLvType *string `pulumi:"runtimeLvType"`
	Size          string  `pulumi:"size"`
}

// CceNodePoolStorageGroupVirtualSpaceInput is an input type that accepts CceNodePoolStorageGroupVirtualSpaceArgs and CceNodePoolStorageGroupVirtualSpaceOutput values.
// You can construct a concrete instance of `CceNodePoolStorageGroupVirtualSpaceInput` via:
//
//	CceNodePoolStorageGroupVirtualSpaceArgs{...}
type CceNodePoolStorageGroupVirtualSpaceInput interface {
	pulumi.Input

	ToCceNodePoolStorageGroupVirtualSpaceOutput() CceNodePoolStorageGroupVirtualSpaceOutput
	ToCceNodePoolStorageGroupVirtualSpaceOutputWithContext(context.Context) CceNodePoolStorageGroupVirtualSpaceOutput
}

type CceNodePoolStorageGroupVirtualSpaceArgs struct {
	LvmLvType     pulumi.StringPtrInput `pulumi:"lvmLvType"`
	LvmPath       pulumi.StringPtrInput `pulumi:"lvmPath"`
	Name          pulumi.StringInput    `pulumi:"name"`
	RuntimeLvType pulumi.StringPtrInput `pulumi:"runtimeLvType"`
	Size          pulumi.StringInput    `pulumi:"size"`
}

func (CceNodePoolStorageGroupVirtualSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorageGroupVirtualSpace)(nil)).Elem()
}

func (i CceNodePoolStorageGroupVirtualSpaceArgs) ToCceNodePoolStorageGroupVirtualSpaceOutput() CceNodePoolStorageGroupVirtualSpaceOutput {
	return i.ToCceNodePoolStorageGroupVirtualSpaceOutputWithContext(context.Background())
}

func (i CceNodePoolStorageGroupVirtualSpaceArgs) ToCceNodePoolStorageGroupVirtualSpaceOutputWithContext(ctx context.Context) CceNodePoolStorageGroupVirtualSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageGroupVirtualSpaceOutput)
}

// CceNodePoolStorageGroupVirtualSpaceArrayInput is an input type that accepts CceNodePoolStorageGroupVirtualSpaceArray and CceNodePoolStorageGroupVirtualSpaceArrayOutput values.
// You can construct a concrete instance of `CceNodePoolStorageGroupVirtualSpaceArrayInput` via:
//
//	CceNodePoolStorageGroupVirtualSpaceArray{ CceNodePoolStorageGroupVirtualSpaceArgs{...} }
type CceNodePoolStorageGroupVirtualSpaceArrayInput interface {
	pulumi.Input

	ToCceNodePoolStorageGroupVirtualSpaceArrayOutput() CceNodePoolStorageGroupVirtualSpaceArrayOutput
	ToCceNodePoolStorageGroupVirtualSpaceArrayOutputWithContext(context.Context) CceNodePoolStorageGroupVirtualSpaceArrayOutput
}

type CceNodePoolStorageGroupVirtualSpaceArray []CceNodePoolStorageGroupVirtualSpaceInput

func (CceNodePoolStorageGroupVirtualSpaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolStorageGroupVirtualSpace)(nil)).Elem()
}

func (i CceNodePoolStorageGroupVirtualSpaceArray) ToCceNodePoolStorageGroupVirtualSpaceArrayOutput() CceNodePoolStorageGroupVirtualSpaceArrayOutput {
	return i.ToCceNodePoolStorageGroupVirtualSpaceArrayOutputWithContext(context.Background())
}

func (i CceNodePoolStorageGroupVirtualSpaceArray) ToCceNodePoolStorageGroupVirtualSpaceArrayOutputWithContext(ctx context.Context) CceNodePoolStorageGroupVirtualSpaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageGroupVirtualSpaceArrayOutput)
}

type CceNodePoolStorageGroupVirtualSpaceOutput struct{ *pulumi.OutputState }

func (CceNodePoolStorageGroupVirtualSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorageGroupVirtualSpace)(nil)).Elem()
}

func (o CceNodePoolStorageGroupVirtualSpaceOutput) ToCceNodePoolStorageGroupVirtualSpaceOutput() CceNodePoolStorageGroupVirtualSpaceOutput {
	return o
}

func (o CceNodePoolStorageGroupVirtualSpaceOutput) ToCceNodePoolStorageGroupVirtualSpaceOutputWithContext(ctx context.Context) CceNodePoolStorageGroupVirtualSpaceOutput {
	return o
}

func (o CceNodePoolStorageGroupVirtualSpaceOutput) LvmLvType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroupVirtualSpace) *string { return v.LvmLvType }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageGroupVirtualSpaceOutput) LvmPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroupVirtualSpace) *string { return v.LvmPath }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageGroupVirtualSpaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroupVirtualSpace) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodePoolStorageGroupVirtualSpaceOutput) RuntimeLvType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroupVirtualSpace) *string { return v.RuntimeLvType }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageGroupVirtualSpaceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolStorageGroupVirtualSpace) string { return v.Size }).(pulumi.StringOutput)
}

type CceNodePoolStorageGroupVirtualSpaceArrayOutput struct{ *pulumi.OutputState }

func (CceNodePoolStorageGroupVirtualSpaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolStorageGroupVirtualSpace)(nil)).Elem()
}

func (o CceNodePoolStorageGroupVirtualSpaceArrayOutput) ToCceNodePoolStorageGroupVirtualSpaceArrayOutput() CceNodePoolStorageGroupVirtualSpaceArrayOutput {
	return o
}

func (o CceNodePoolStorageGroupVirtualSpaceArrayOutput) ToCceNodePoolStorageGroupVirtualSpaceArrayOutputWithContext(ctx context.Context) CceNodePoolStorageGroupVirtualSpaceArrayOutput {
	return o
}

func (o CceNodePoolStorageGroupVirtualSpaceArrayOutput) Index(i pulumi.IntInput) CceNodePoolStorageGroupVirtualSpaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodePoolStorageGroupVirtualSpace {
		return vs[0].([]CceNodePoolStorageGroupVirtualSpace)[vs[1].(int)]
	}).(CceNodePoolStorageGroupVirtualSpaceOutput)
}

type CceNodePoolStorageSelector struct {
	MatchLabelCount             *string `pulumi:"matchLabelCount"`
	MatchLabelMetadataCmkid     *string `pulumi:"matchLabelMetadataCmkid"`
	MatchLabelMetadataEncrypted *string `pulumi:"matchLabelMetadataEncrypted"`
	MatchLabelSize              *string `pulumi:"matchLabelSize"`
	MatchLabelVolumeType        *string `pulumi:"matchLabelVolumeType"`
	Name                        string  `pulumi:"name"`
	Type                        *string `pulumi:"type"`
}

// CceNodePoolStorageSelectorInput is an input type that accepts CceNodePoolStorageSelectorArgs and CceNodePoolStorageSelectorOutput values.
// You can construct a concrete instance of `CceNodePoolStorageSelectorInput` via:
//
//	CceNodePoolStorageSelectorArgs{...}
type CceNodePoolStorageSelectorInput interface {
	pulumi.Input

	ToCceNodePoolStorageSelectorOutput() CceNodePoolStorageSelectorOutput
	ToCceNodePoolStorageSelectorOutputWithContext(context.Context) CceNodePoolStorageSelectorOutput
}

type CceNodePoolStorageSelectorArgs struct {
	MatchLabelCount             pulumi.StringPtrInput `pulumi:"matchLabelCount"`
	MatchLabelMetadataCmkid     pulumi.StringPtrInput `pulumi:"matchLabelMetadataCmkid"`
	MatchLabelMetadataEncrypted pulumi.StringPtrInput `pulumi:"matchLabelMetadataEncrypted"`
	MatchLabelSize              pulumi.StringPtrInput `pulumi:"matchLabelSize"`
	MatchLabelVolumeType        pulumi.StringPtrInput `pulumi:"matchLabelVolumeType"`
	Name                        pulumi.StringInput    `pulumi:"name"`
	Type                        pulumi.StringPtrInput `pulumi:"type"`
}

func (CceNodePoolStorageSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorageSelector)(nil)).Elem()
}

func (i CceNodePoolStorageSelectorArgs) ToCceNodePoolStorageSelectorOutput() CceNodePoolStorageSelectorOutput {
	return i.ToCceNodePoolStorageSelectorOutputWithContext(context.Background())
}

func (i CceNodePoolStorageSelectorArgs) ToCceNodePoolStorageSelectorOutputWithContext(ctx context.Context) CceNodePoolStorageSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageSelectorOutput)
}

// CceNodePoolStorageSelectorArrayInput is an input type that accepts CceNodePoolStorageSelectorArray and CceNodePoolStorageSelectorArrayOutput values.
// You can construct a concrete instance of `CceNodePoolStorageSelectorArrayInput` via:
//
//	CceNodePoolStorageSelectorArray{ CceNodePoolStorageSelectorArgs{...} }
type CceNodePoolStorageSelectorArrayInput interface {
	pulumi.Input

	ToCceNodePoolStorageSelectorArrayOutput() CceNodePoolStorageSelectorArrayOutput
	ToCceNodePoolStorageSelectorArrayOutputWithContext(context.Context) CceNodePoolStorageSelectorArrayOutput
}

type CceNodePoolStorageSelectorArray []CceNodePoolStorageSelectorInput

func (CceNodePoolStorageSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolStorageSelector)(nil)).Elem()
}

func (i CceNodePoolStorageSelectorArray) ToCceNodePoolStorageSelectorArrayOutput() CceNodePoolStorageSelectorArrayOutput {
	return i.ToCceNodePoolStorageSelectorArrayOutputWithContext(context.Background())
}

func (i CceNodePoolStorageSelectorArray) ToCceNodePoolStorageSelectorArrayOutputWithContext(ctx context.Context) CceNodePoolStorageSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolStorageSelectorArrayOutput)
}

type CceNodePoolStorageSelectorOutput struct{ *pulumi.OutputState }

func (CceNodePoolStorageSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolStorageSelector)(nil)).Elem()
}

func (o CceNodePoolStorageSelectorOutput) ToCceNodePoolStorageSelectorOutput() CceNodePoolStorageSelectorOutput {
	return o
}

func (o CceNodePoolStorageSelectorOutput) ToCceNodePoolStorageSelectorOutputWithContext(ctx context.Context) CceNodePoolStorageSelectorOutput {
	return o
}

func (o CceNodePoolStorageSelectorOutput) MatchLabelCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageSelector) *string { return v.MatchLabelCount }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageSelectorOutput) MatchLabelMetadataCmkid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageSelector) *string { return v.MatchLabelMetadataCmkid }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageSelectorOutput) MatchLabelMetadataEncrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageSelector) *string { return v.MatchLabelMetadataEncrypted }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageSelectorOutput) MatchLabelSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageSelector) *string { return v.MatchLabelSize }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageSelectorOutput) MatchLabelVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageSelector) *string { return v.MatchLabelVolumeType }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolStorageSelectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolStorageSelector) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodePoolStorageSelectorOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodePoolStorageSelector) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CceNodePoolStorageSelectorArrayOutput struct{ *pulumi.OutputState }

func (CceNodePoolStorageSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolStorageSelector)(nil)).Elem()
}

func (o CceNodePoolStorageSelectorArrayOutput) ToCceNodePoolStorageSelectorArrayOutput() CceNodePoolStorageSelectorArrayOutput {
	return o
}

func (o CceNodePoolStorageSelectorArrayOutput) ToCceNodePoolStorageSelectorArrayOutputWithContext(ctx context.Context) CceNodePoolStorageSelectorArrayOutput {
	return o
}

func (o CceNodePoolStorageSelectorArrayOutput) Index(i pulumi.IntInput) CceNodePoolStorageSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodePoolStorageSelector {
		return vs[0].([]CceNodePoolStorageSelector)[vs[1].(int)]
	}).(CceNodePoolStorageSelectorOutput)
}

type CceNodePoolTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

// CceNodePoolTaintInput is an input type that accepts CceNodePoolTaintArgs and CceNodePoolTaintOutput values.
// You can construct a concrete instance of `CceNodePoolTaintInput` via:
//
//	CceNodePoolTaintArgs{...}
type CceNodePoolTaintInput interface {
	pulumi.Input

	ToCceNodePoolTaintOutput() CceNodePoolTaintOutput
	ToCceNodePoolTaintOutputWithContext(context.Context) CceNodePoolTaintOutput
}

type CceNodePoolTaintArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (CceNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolTaint)(nil)).Elem()
}

func (i CceNodePoolTaintArgs) ToCceNodePoolTaintOutput() CceNodePoolTaintOutput {
	return i.ToCceNodePoolTaintOutputWithContext(context.Background())
}

func (i CceNodePoolTaintArgs) ToCceNodePoolTaintOutputWithContext(ctx context.Context) CceNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolTaintOutput)
}

// CceNodePoolTaintArrayInput is an input type that accepts CceNodePoolTaintArray and CceNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `CceNodePoolTaintArrayInput` via:
//
//	CceNodePoolTaintArray{ CceNodePoolTaintArgs{...} }
type CceNodePoolTaintArrayInput interface {
	pulumi.Input

	ToCceNodePoolTaintArrayOutput() CceNodePoolTaintArrayOutput
	ToCceNodePoolTaintArrayOutputWithContext(context.Context) CceNodePoolTaintArrayOutput
}

type CceNodePoolTaintArray []CceNodePoolTaintInput

func (CceNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolTaint)(nil)).Elem()
}

func (i CceNodePoolTaintArray) ToCceNodePoolTaintArrayOutput() CceNodePoolTaintArrayOutput {
	return i.ToCceNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i CceNodePoolTaintArray) ToCceNodePoolTaintArrayOutputWithContext(ctx context.Context) CceNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolTaintArrayOutput)
}

type CceNodePoolTaintOutput struct{ *pulumi.OutputState }

func (CceNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodePoolTaint)(nil)).Elem()
}

func (o CceNodePoolTaintOutput) ToCceNodePoolTaintOutput() CceNodePoolTaintOutput {
	return o
}

func (o CceNodePoolTaintOutput) ToCceNodePoolTaintOutputWithContext(ctx context.Context) CceNodePoolTaintOutput {
	return o
}

func (o CceNodePoolTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o CceNodePoolTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o CceNodePoolTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodePoolTaint) string { return v.Value }).(pulumi.StringOutput)
}

type CceNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (CceNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodePoolTaint)(nil)).Elem()
}

func (o CceNodePoolTaintArrayOutput) ToCceNodePoolTaintArrayOutput() CceNodePoolTaintArrayOutput {
	return o
}

func (o CceNodePoolTaintArrayOutput) ToCceNodePoolTaintArrayOutputWithContext(ctx context.Context) CceNodePoolTaintArrayOutput {
	return o
}

func (o CceNodePoolTaintArrayOutput) Index(i pulumi.IntInput) CceNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodePoolTaint {
		return vs[0].([]CceNodePoolTaint)[vs[1].(int)]
	}).(CceNodePoolTaintOutput)
}

type CceNodeRootVolume struct {
	DssPoolId *string `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  *string           `pulumi:"extendParam"`
	ExtendParams map[string]string `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough *bool   `pulumi:"hwPassthrough"`
	Iops          *int    `pulumi:"iops"`
	KmsKeyId      *string `pulumi:"kmsKeyId"`
	Size          int     `pulumi:"size"`
	Throughput    *int    `pulumi:"throughput"`
	Volumetype    string  `pulumi:"volumetype"`
}

// CceNodeRootVolumeInput is an input type that accepts CceNodeRootVolumeArgs and CceNodeRootVolumeOutput values.
// You can construct a concrete instance of `CceNodeRootVolumeInput` via:
//
//	CceNodeRootVolumeArgs{...}
type CceNodeRootVolumeInput interface {
	pulumi.Input

	ToCceNodeRootVolumeOutput() CceNodeRootVolumeOutput
	ToCceNodeRootVolumeOutputWithContext(context.Context) CceNodeRootVolumeOutput
}

type CceNodeRootVolumeArgs struct {
	DssPoolId pulumi.StringPtrInput `pulumi:"dssPoolId"`
	// Deprecated: use extendParams instead
	ExtendParam  pulumi.StringPtrInput `pulumi:"extendParam"`
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	// schema: Internal
	HwPassthrough pulumi.BoolPtrInput   `pulumi:"hwPassthrough"`
	Iops          pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId      pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	Size          pulumi.IntInput       `pulumi:"size"`
	Throughput    pulumi.IntPtrInput    `pulumi:"throughput"`
	Volumetype    pulumi.StringInput    `pulumi:"volumetype"`
}

func (CceNodeRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeRootVolume)(nil)).Elem()
}

func (i CceNodeRootVolumeArgs) ToCceNodeRootVolumeOutput() CceNodeRootVolumeOutput {
	return i.ToCceNodeRootVolumeOutputWithContext(context.Background())
}

func (i CceNodeRootVolumeArgs) ToCceNodeRootVolumeOutputWithContext(ctx context.Context) CceNodeRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeRootVolumeOutput)
}

func (i CceNodeRootVolumeArgs) ToCceNodeRootVolumePtrOutput() CceNodeRootVolumePtrOutput {
	return i.ToCceNodeRootVolumePtrOutputWithContext(context.Background())
}

func (i CceNodeRootVolumeArgs) ToCceNodeRootVolumePtrOutputWithContext(ctx context.Context) CceNodeRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeRootVolumeOutput).ToCceNodeRootVolumePtrOutputWithContext(ctx)
}

// CceNodeRootVolumePtrInput is an input type that accepts CceNodeRootVolumeArgs, CceNodeRootVolumePtr and CceNodeRootVolumePtrOutput values.
// You can construct a concrete instance of `CceNodeRootVolumePtrInput` via:
//
//	        CceNodeRootVolumeArgs{...}
//
//	or:
//
//	        nil
type CceNodeRootVolumePtrInput interface {
	pulumi.Input

	ToCceNodeRootVolumePtrOutput() CceNodeRootVolumePtrOutput
	ToCceNodeRootVolumePtrOutputWithContext(context.Context) CceNodeRootVolumePtrOutput
}

type cceNodeRootVolumePtrType CceNodeRootVolumeArgs

func CceNodeRootVolumePtr(v *CceNodeRootVolumeArgs) CceNodeRootVolumePtrInput {
	return (*cceNodeRootVolumePtrType)(v)
}

func (*cceNodeRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeRootVolume)(nil)).Elem()
}

func (i *cceNodeRootVolumePtrType) ToCceNodeRootVolumePtrOutput() CceNodeRootVolumePtrOutput {
	return i.ToCceNodeRootVolumePtrOutputWithContext(context.Background())
}

func (i *cceNodeRootVolumePtrType) ToCceNodeRootVolumePtrOutputWithContext(ctx context.Context) CceNodeRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeRootVolumePtrOutput)
}

type CceNodeRootVolumeOutput struct{ *pulumi.OutputState }

func (CceNodeRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeRootVolume)(nil)).Elem()
}

func (o CceNodeRootVolumeOutput) ToCceNodeRootVolumeOutput() CceNodeRootVolumeOutput {
	return o
}

func (o CceNodeRootVolumeOutput) ToCceNodeRootVolumeOutputWithContext(ctx context.Context) CceNodeRootVolumeOutput {
	return o
}

func (o CceNodeRootVolumeOutput) ToCceNodeRootVolumePtrOutput() CceNodeRootVolumePtrOutput {
	return o.ToCceNodeRootVolumePtrOutputWithContext(context.Background())
}

func (o CceNodeRootVolumeOutput) ToCceNodeRootVolumePtrOutputWithContext(ctx context.Context) CceNodeRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodeRootVolume) *CceNodeRootVolume {
		return &v
	}).(CceNodeRootVolumePtrOutput)
}

func (o CceNodeRootVolumeOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeRootVolume) *string { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodeRootVolumeOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeRootVolume) *string { return v.ExtendParam }).(pulumi.StringPtrOutput)
}

func (o CceNodeRootVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v CceNodeRootVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodeRootVolumeOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodeRootVolume) *bool { return v.HwPassthrough }).(pulumi.BoolPtrOutput)
}

func (o CceNodeRootVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeRootVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o CceNodeRootVolumeOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeRootVolume) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o CceNodeRootVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v CceNodeRootVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o CceNodeRootVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CceNodeRootVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o CceNodeRootVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeRootVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type CceNodeRootVolumePtrOutput struct{ *pulumi.OutputState }

func (CceNodeRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeRootVolume)(nil)).Elem()
}

func (o CceNodeRootVolumePtrOutput) ToCceNodeRootVolumePtrOutput() CceNodeRootVolumePtrOutput {
	return o
}

func (o CceNodeRootVolumePtrOutput) ToCceNodeRootVolumePtrOutputWithContext(ctx context.Context) CceNodeRootVolumePtrOutput {
	return o
}

func (o CceNodeRootVolumePtrOutput) Elem() CceNodeRootVolumeOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) CceNodeRootVolume {
		if v != nil {
			return *v
		}
		var ret CceNodeRootVolume
		return ret
	}).(CceNodeRootVolumeOutput)
}

func (o CceNodeRootVolumePtrOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.DssPoolId
	}).(pulumi.StringPtrOutput)
}

// Deprecated: use extendParams instead
func (o CceNodeRootVolumePtrOutput) ExtendParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.ExtendParam
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeRootVolumePtrOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtendParams
	}).(pulumi.StringMapOutput)
}

// schema: Internal
func (o CceNodeRootVolumePtrOutput) HwPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *bool {
		if v == nil {
			return nil
		}
		return v.HwPassthrough
	}).(pulumi.BoolPtrOutput)
}

func (o CceNodeRootVolumePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

func (o CceNodeRootVolumePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o CceNodeRootVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

func (o CceNodeRootVolumePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

func (o CceNodeRootVolumePtrOutput) Volumetype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodeRootVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Volumetype
	}).(pulumi.StringPtrOutput)
}

type CceNodeStorage struct {
	Groups    []CceNodeStorageGroup    `pulumi:"groups"`
	Selectors []CceNodeStorageSelector `pulumi:"selectors"`
}

// CceNodeStorageInput is an input type that accepts CceNodeStorageArgs and CceNodeStorageOutput values.
// You can construct a concrete instance of `CceNodeStorageInput` via:
//
//	CceNodeStorageArgs{...}
type CceNodeStorageInput interface {
	pulumi.Input

	ToCceNodeStorageOutput() CceNodeStorageOutput
	ToCceNodeStorageOutputWithContext(context.Context) CceNodeStorageOutput
}

type CceNodeStorageArgs struct {
	Groups    CceNodeStorageGroupArrayInput    `pulumi:"groups"`
	Selectors CceNodeStorageSelectorArrayInput `pulumi:"selectors"`
}

func (CceNodeStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorage)(nil)).Elem()
}

func (i CceNodeStorageArgs) ToCceNodeStorageOutput() CceNodeStorageOutput {
	return i.ToCceNodeStorageOutputWithContext(context.Background())
}

func (i CceNodeStorageArgs) ToCceNodeStorageOutputWithContext(ctx context.Context) CceNodeStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageOutput)
}

func (i CceNodeStorageArgs) ToCceNodeStoragePtrOutput() CceNodeStoragePtrOutput {
	return i.ToCceNodeStoragePtrOutputWithContext(context.Background())
}

func (i CceNodeStorageArgs) ToCceNodeStoragePtrOutputWithContext(ctx context.Context) CceNodeStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageOutput).ToCceNodeStoragePtrOutputWithContext(ctx)
}

// CceNodeStoragePtrInput is an input type that accepts CceNodeStorageArgs, CceNodeStoragePtr and CceNodeStoragePtrOutput values.
// You can construct a concrete instance of `CceNodeStoragePtrInput` via:
//
//	        CceNodeStorageArgs{...}
//
//	or:
//
//	        nil
type CceNodeStoragePtrInput interface {
	pulumi.Input

	ToCceNodeStoragePtrOutput() CceNodeStoragePtrOutput
	ToCceNodeStoragePtrOutputWithContext(context.Context) CceNodeStoragePtrOutput
}

type cceNodeStoragePtrType CceNodeStorageArgs

func CceNodeStoragePtr(v *CceNodeStorageArgs) CceNodeStoragePtrInput {
	return (*cceNodeStoragePtrType)(v)
}

func (*cceNodeStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeStorage)(nil)).Elem()
}

func (i *cceNodeStoragePtrType) ToCceNodeStoragePtrOutput() CceNodeStoragePtrOutput {
	return i.ToCceNodeStoragePtrOutputWithContext(context.Background())
}

func (i *cceNodeStoragePtrType) ToCceNodeStoragePtrOutputWithContext(ctx context.Context) CceNodeStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStoragePtrOutput)
}

type CceNodeStorageOutput struct{ *pulumi.OutputState }

func (CceNodeStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorage)(nil)).Elem()
}

func (o CceNodeStorageOutput) ToCceNodeStorageOutput() CceNodeStorageOutput {
	return o
}

func (o CceNodeStorageOutput) ToCceNodeStorageOutputWithContext(ctx context.Context) CceNodeStorageOutput {
	return o
}

func (o CceNodeStorageOutput) ToCceNodeStoragePtrOutput() CceNodeStoragePtrOutput {
	return o.ToCceNodeStoragePtrOutputWithContext(context.Background())
}

func (o CceNodeStorageOutput) ToCceNodeStoragePtrOutputWithContext(ctx context.Context) CceNodeStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CceNodeStorage) *CceNodeStorage {
		return &v
	}).(CceNodeStoragePtrOutput)
}

func (o CceNodeStorageOutput) Groups() CceNodeStorageGroupArrayOutput {
	return o.ApplyT(func(v CceNodeStorage) []CceNodeStorageGroup { return v.Groups }).(CceNodeStorageGroupArrayOutput)
}

func (o CceNodeStorageOutput) Selectors() CceNodeStorageSelectorArrayOutput {
	return o.ApplyT(func(v CceNodeStorage) []CceNodeStorageSelector { return v.Selectors }).(CceNodeStorageSelectorArrayOutput)
}

type CceNodeStoragePtrOutput struct{ *pulumi.OutputState }

func (CceNodeStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodeStorage)(nil)).Elem()
}

func (o CceNodeStoragePtrOutput) ToCceNodeStoragePtrOutput() CceNodeStoragePtrOutput {
	return o
}

func (o CceNodeStoragePtrOutput) ToCceNodeStoragePtrOutputWithContext(ctx context.Context) CceNodeStoragePtrOutput {
	return o
}

func (o CceNodeStoragePtrOutput) Elem() CceNodeStorageOutput {
	return o.ApplyT(func(v *CceNodeStorage) CceNodeStorage {
		if v != nil {
			return *v
		}
		var ret CceNodeStorage
		return ret
	}).(CceNodeStorageOutput)
}

func (o CceNodeStoragePtrOutput) Groups() CceNodeStorageGroupArrayOutput {
	return o.ApplyT(func(v *CceNodeStorage) []CceNodeStorageGroup {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(CceNodeStorageGroupArrayOutput)
}

func (o CceNodeStoragePtrOutput) Selectors() CceNodeStorageSelectorArrayOutput {
	return o.ApplyT(func(v *CceNodeStorage) []CceNodeStorageSelector {
		if v == nil {
			return nil
		}
		return v.Selectors
	}).(CceNodeStorageSelectorArrayOutput)
}

type CceNodeStorageGroup struct {
	CceManaged    *bool                             `pulumi:"cceManaged"`
	Name          string                            `pulumi:"name"`
	SelectorNames []string                          `pulumi:"selectorNames"`
	VirtualSpaces []CceNodeStorageGroupVirtualSpace `pulumi:"virtualSpaces"`
}

// CceNodeStorageGroupInput is an input type that accepts CceNodeStorageGroupArgs and CceNodeStorageGroupOutput values.
// You can construct a concrete instance of `CceNodeStorageGroupInput` via:
//
//	CceNodeStorageGroupArgs{...}
type CceNodeStorageGroupInput interface {
	pulumi.Input

	ToCceNodeStorageGroupOutput() CceNodeStorageGroupOutput
	ToCceNodeStorageGroupOutputWithContext(context.Context) CceNodeStorageGroupOutput
}

type CceNodeStorageGroupArgs struct {
	CceManaged    pulumi.BoolPtrInput                       `pulumi:"cceManaged"`
	Name          pulumi.StringInput                        `pulumi:"name"`
	SelectorNames pulumi.StringArrayInput                   `pulumi:"selectorNames"`
	VirtualSpaces CceNodeStorageGroupVirtualSpaceArrayInput `pulumi:"virtualSpaces"`
}

func (CceNodeStorageGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorageGroup)(nil)).Elem()
}

func (i CceNodeStorageGroupArgs) ToCceNodeStorageGroupOutput() CceNodeStorageGroupOutput {
	return i.ToCceNodeStorageGroupOutputWithContext(context.Background())
}

func (i CceNodeStorageGroupArgs) ToCceNodeStorageGroupOutputWithContext(ctx context.Context) CceNodeStorageGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageGroupOutput)
}

// CceNodeStorageGroupArrayInput is an input type that accepts CceNodeStorageGroupArray and CceNodeStorageGroupArrayOutput values.
// You can construct a concrete instance of `CceNodeStorageGroupArrayInput` via:
//
//	CceNodeStorageGroupArray{ CceNodeStorageGroupArgs{...} }
type CceNodeStorageGroupArrayInput interface {
	pulumi.Input

	ToCceNodeStorageGroupArrayOutput() CceNodeStorageGroupArrayOutput
	ToCceNodeStorageGroupArrayOutputWithContext(context.Context) CceNodeStorageGroupArrayOutput
}

type CceNodeStorageGroupArray []CceNodeStorageGroupInput

func (CceNodeStorageGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeStorageGroup)(nil)).Elem()
}

func (i CceNodeStorageGroupArray) ToCceNodeStorageGroupArrayOutput() CceNodeStorageGroupArrayOutput {
	return i.ToCceNodeStorageGroupArrayOutputWithContext(context.Background())
}

func (i CceNodeStorageGroupArray) ToCceNodeStorageGroupArrayOutputWithContext(ctx context.Context) CceNodeStorageGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageGroupArrayOutput)
}

type CceNodeStorageGroupOutput struct{ *pulumi.OutputState }

func (CceNodeStorageGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorageGroup)(nil)).Elem()
}

func (o CceNodeStorageGroupOutput) ToCceNodeStorageGroupOutput() CceNodeStorageGroupOutput {
	return o
}

func (o CceNodeStorageGroupOutput) ToCceNodeStorageGroupOutputWithContext(ctx context.Context) CceNodeStorageGroupOutput {
	return o
}

func (o CceNodeStorageGroupOutput) CceManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CceNodeStorageGroup) *bool { return v.CceManaged }).(pulumi.BoolPtrOutput)
}

func (o CceNodeStorageGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeStorageGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodeStorageGroupOutput) SelectorNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CceNodeStorageGroup) []string { return v.SelectorNames }).(pulumi.StringArrayOutput)
}

func (o CceNodeStorageGroupOutput) VirtualSpaces() CceNodeStorageGroupVirtualSpaceArrayOutput {
	return o.ApplyT(func(v CceNodeStorageGroup) []CceNodeStorageGroupVirtualSpace { return v.VirtualSpaces }).(CceNodeStorageGroupVirtualSpaceArrayOutput)
}

type CceNodeStorageGroupArrayOutput struct{ *pulumi.OutputState }

func (CceNodeStorageGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeStorageGroup)(nil)).Elem()
}

func (o CceNodeStorageGroupArrayOutput) ToCceNodeStorageGroupArrayOutput() CceNodeStorageGroupArrayOutput {
	return o
}

func (o CceNodeStorageGroupArrayOutput) ToCceNodeStorageGroupArrayOutputWithContext(ctx context.Context) CceNodeStorageGroupArrayOutput {
	return o
}

func (o CceNodeStorageGroupArrayOutput) Index(i pulumi.IntInput) CceNodeStorageGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeStorageGroup {
		return vs[0].([]CceNodeStorageGroup)[vs[1].(int)]
	}).(CceNodeStorageGroupOutput)
}

type CceNodeStorageGroupVirtualSpace struct {
	LvmLvType     *string `pulumi:"lvmLvType"`
	LvmPath       *string `pulumi:"lvmPath"`
	Name          string  `pulumi:"name"`
	RuntimeLvType *string `pulumi:"runtimeLvType"`
	Size          string  `pulumi:"size"`
}

// CceNodeStorageGroupVirtualSpaceInput is an input type that accepts CceNodeStorageGroupVirtualSpaceArgs and CceNodeStorageGroupVirtualSpaceOutput values.
// You can construct a concrete instance of `CceNodeStorageGroupVirtualSpaceInput` via:
//
//	CceNodeStorageGroupVirtualSpaceArgs{...}
type CceNodeStorageGroupVirtualSpaceInput interface {
	pulumi.Input

	ToCceNodeStorageGroupVirtualSpaceOutput() CceNodeStorageGroupVirtualSpaceOutput
	ToCceNodeStorageGroupVirtualSpaceOutputWithContext(context.Context) CceNodeStorageGroupVirtualSpaceOutput
}

type CceNodeStorageGroupVirtualSpaceArgs struct {
	LvmLvType     pulumi.StringPtrInput `pulumi:"lvmLvType"`
	LvmPath       pulumi.StringPtrInput `pulumi:"lvmPath"`
	Name          pulumi.StringInput    `pulumi:"name"`
	RuntimeLvType pulumi.StringPtrInput `pulumi:"runtimeLvType"`
	Size          pulumi.StringInput    `pulumi:"size"`
}

func (CceNodeStorageGroupVirtualSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorageGroupVirtualSpace)(nil)).Elem()
}

func (i CceNodeStorageGroupVirtualSpaceArgs) ToCceNodeStorageGroupVirtualSpaceOutput() CceNodeStorageGroupVirtualSpaceOutput {
	return i.ToCceNodeStorageGroupVirtualSpaceOutputWithContext(context.Background())
}

func (i CceNodeStorageGroupVirtualSpaceArgs) ToCceNodeStorageGroupVirtualSpaceOutputWithContext(ctx context.Context) CceNodeStorageGroupVirtualSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageGroupVirtualSpaceOutput)
}

// CceNodeStorageGroupVirtualSpaceArrayInput is an input type that accepts CceNodeStorageGroupVirtualSpaceArray and CceNodeStorageGroupVirtualSpaceArrayOutput values.
// You can construct a concrete instance of `CceNodeStorageGroupVirtualSpaceArrayInput` via:
//
//	CceNodeStorageGroupVirtualSpaceArray{ CceNodeStorageGroupVirtualSpaceArgs{...} }
type CceNodeStorageGroupVirtualSpaceArrayInput interface {
	pulumi.Input

	ToCceNodeStorageGroupVirtualSpaceArrayOutput() CceNodeStorageGroupVirtualSpaceArrayOutput
	ToCceNodeStorageGroupVirtualSpaceArrayOutputWithContext(context.Context) CceNodeStorageGroupVirtualSpaceArrayOutput
}

type CceNodeStorageGroupVirtualSpaceArray []CceNodeStorageGroupVirtualSpaceInput

func (CceNodeStorageGroupVirtualSpaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeStorageGroupVirtualSpace)(nil)).Elem()
}

func (i CceNodeStorageGroupVirtualSpaceArray) ToCceNodeStorageGroupVirtualSpaceArrayOutput() CceNodeStorageGroupVirtualSpaceArrayOutput {
	return i.ToCceNodeStorageGroupVirtualSpaceArrayOutputWithContext(context.Background())
}

func (i CceNodeStorageGroupVirtualSpaceArray) ToCceNodeStorageGroupVirtualSpaceArrayOutputWithContext(ctx context.Context) CceNodeStorageGroupVirtualSpaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageGroupVirtualSpaceArrayOutput)
}

type CceNodeStorageGroupVirtualSpaceOutput struct{ *pulumi.OutputState }

func (CceNodeStorageGroupVirtualSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorageGroupVirtualSpace)(nil)).Elem()
}

func (o CceNodeStorageGroupVirtualSpaceOutput) ToCceNodeStorageGroupVirtualSpaceOutput() CceNodeStorageGroupVirtualSpaceOutput {
	return o
}

func (o CceNodeStorageGroupVirtualSpaceOutput) ToCceNodeStorageGroupVirtualSpaceOutputWithContext(ctx context.Context) CceNodeStorageGroupVirtualSpaceOutput {
	return o
}

func (o CceNodeStorageGroupVirtualSpaceOutput) LvmLvType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageGroupVirtualSpace) *string { return v.LvmLvType }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageGroupVirtualSpaceOutput) LvmPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageGroupVirtualSpace) *string { return v.LvmPath }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageGroupVirtualSpaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeStorageGroupVirtualSpace) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodeStorageGroupVirtualSpaceOutput) RuntimeLvType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageGroupVirtualSpace) *string { return v.RuntimeLvType }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageGroupVirtualSpaceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeStorageGroupVirtualSpace) string { return v.Size }).(pulumi.StringOutput)
}

type CceNodeStorageGroupVirtualSpaceArrayOutput struct{ *pulumi.OutputState }

func (CceNodeStorageGroupVirtualSpaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeStorageGroupVirtualSpace)(nil)).Elem()
}

func (o CceNodeStorageGroupVirtualSpaceArrayOutput) ToCceNodeStorageGroupVirtualSpaceArrayOutput() CceNodeStorageGroupVirtualSpaceArrayOutput {
	return o
}

func (o CceNodeStorageGroupVirtualSpaceArrayOutput) ToCceNodeStorageGroupVirtualSpaceArrayOutputWithContext(ctx context.Context) CceNodeStorageGroupVirtualSpaceArrayOutput {
	return o
}

func (o CceNodeStorageGroupVirtualSpaceArrayOutput) Index(i pulumi.IntInput) CceNodeStorageGroupVirtualSpaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeStorageGroupVirtualSpace {
		return vs[0].([]CceNodeStorageGroupVirtualSpace)[vs[1].(int)]
	}).(CceNodeStorageGroupVirtualSpaceOutput)
}

type CceNodeStorageSelector struct {
	MatchLabelCount             *string `pulumi:"matchLabelCount"`
	MatchLabelMetadataCmkid     *string `pulumi:"matchLabelMetadataCmkid"`
	MatchLabelMetadataEncrypted *string `pulumi:"matchLabelMetadataEncrypted"`
	MatchLabelSize              *string `pulumi:"matchLabelSize"`
	MatchLabelVolumeType        *string `pulumi:"matchLabelVolumeType"`
	Name                        string  `pulumi:"name"`
	Type                        *string `pulumi:"type"`
}

// CceNodeStorageSelectorInput is an input type that accepts CceNodeStorageSelectorArgs and CceNodeStorageSelectorOutput values.
// You can construct a concrete instance of `CceNodeStorageSelectorInput` via:
//
//	CceNodeStorageSelectorArgs{...}
type CceNodeStorageSelectorInput interface {
	pulumi.Input

	ToCceNodeStorageSelectorOutput() CceNodeStorageSelectorOutput
	ToCceNodeStorageSelectorOutputWithContext(context.Context) CceNodeStorageSelectorOutput
}

type CceNodeStorageSelectorArgs struct {
	MatchLabelCount             pulumi.StringPtrInput `pulumi:"matchLabelCount"`
	MatchLabelMetadataCmkid     pulumi.StringPtrInput `pulumi:"matchLabelMetadataCmkid"`
	MatchLabelMetadataEncrypted pulumi.StringPtrInput `pulumi:"matchLabelMetadataEncrypted"`
	MatchLabelSize              pulumi.StringPtrInput `pulumi:"matchLabelSize"`
	MatchLabelVolumeType        pulumi.StringPtrInput `pulumi:"matchLabelVolumeType"`
	Name                        pulumi.StringInput    `pulumi:"name"`
	Type                        pulumi.StringPtrInput `pulumi:"type"`
}

func (CceNodeStorageSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorageSelector)(nil)).Elem()
}

func (i CceNodeStorageSelectorArgs) ToCceNodeStorageSelectorOutput() CceNodeStorageSelectorOutput {
	return i.ToCceNodeStorageSelectorOutputWithContext(context.Background())
}

func (i CceNodeStorageSelectorArgs) ToCceNodeStorageSelectorOutputWithContext(ctx context.Context) CceNodeStorageSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageSelectorOutput)
}

// CceNodeStorageSelectorArrayInput is an input type that accepts CceNodeStorageSelectorArray and CceNodeStorageSelectorArrayOutput values.
// You can construct a concrete instance of `CceNodeStorageSelectorArrayInput` via:
//
//	CceNodeStorageSelectorArray{ CceNodeStorageSelectorArgs{...} }
type CceNodeStorageSelectorArrayInput interface {
	pulumi.Input

	ToCceNodeStorageSelectorArrayOutput() CceNodeStorageSelectorArrayOutput
	ToCceNodeStorageSelectorArrayOutputWithContext(context.Context) CceNodeStorageSelectorArrayOutput
}

type CceNodeStorageSelectorArray []CceNodeStorageSelectorInput

func (CceNodeStorageSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeStorageSelector)(nil)).Elem()
}

func (i CceNodeStorageSelectorArray) ToCceNodeStorageSelectorArrayOutput() CceNodeStorageSelectorArrayOutput {
	return i.ToCceNodeStorageSelectorArrayOutputWithContext(context.Background())
}

func (i CceNodeStorageSelectorArray) ToCceNodeStorageSelectorArrayOutputWithContext(ctx context.Context) CceNodeStorageSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeStorageSelectorArrayOutput)
}

type CceNodeStorageSelectorOutput struct{ *pulumi.OutputState }

func (CceNodeStorageSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeStorageSelector)(nil)).Elem()
}

func (o CceNodeStorageSelectorOutput) ToCceNodeStorageSelectorOutput() CceNodeStorageSelectorOutput {
	return o
}

func (o CceNodeStorageSelectorOutput) ToCceNodeStorageSelectorOutputWithContext(ctx context.Context) CceNodeStorageSelectorOutput {
	return o
}

func (o CceNodeStorageSelectorOutput) MatchLabelCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageSelector) *string { return v.MatchLabelCount }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageSelectorOutput) MatchLabelMetadataCmkid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageSelector) *string { return v.MatchLabelMetadataCmkid }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageSelectorOutput) MatchLabelMetadataEncrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageSelector) *string { return v.MatchLabelMetadataEncrypted }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageSelectorOutput) MatchLabelSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageSelector) *string { return v.MatchLabelSize }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageSelectorOutput) MatchLabelVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageSelector) *string { return v.MatchLabelVolumeType }).(pulumi.StringPtrOutput)
}

func (o CceNodeStorageSelectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeStorageSelector) string { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodeStorageSelectorOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeStorageSelector) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CceNodeStorageSelectorArrayOutput struct{ *pulumi.OutputState }

func (CceNodeStorageSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeStorageSelector)(nil)).Elem()
}

func (o CceNodeStorageSelectorArrayOutput) ToCceNodeStorageSelectorArrayOutput() CceNodeStorageSelectorArrayOutput {
	return o
}

func (o CceNodeStorageSelectorArrayOutput) ToCceNodeStorageSelectorArrayOutputWithContext(ctx context.Context) CceNodeStorageSelectorArrayOutput {
	return o
}

func (o CceNodeStorageSelectorArrayOutput) Index(i pulumi.IntInput) CceNodeStorageSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeStorageSelector {
		return vs[0].([]CceNodeStorageSelector)[vs[1].(int)]
	}).(CceNodeStorageSelectorOutput)
}

type CceNodeTaint struct {
	Effect string  `pulumi:"effect"`
	Key    string  `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// CceNodeTaintInput is an input type that accepts CceNodeTaintArgs and CceNodeTaintOutput values.
// You can construct a concrete instance of `CceNodeTaintInput` via:
//
//	CceNodeTaintArgs{...}
type CceNodeTaintInput interface {
	pulumi.Input

	ToCceNodeTaintOutput() CceNodeTaintOutput
	ToCceNodeTaintOutputWithContext(context.Context) CceNodeTaintOutput
}

type CceNodeTaintArgs struct {
	Effect pulumi.StringInput    `pulumi:"effect"`
	Key    pulumi.StringInput    `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (CceNodeTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeTaint)(nil)).Elem()
}

func (i CceNodeTaintArgs) ToCceNodeTaintOutput() CceNodeTaintOutput {
	return i.ToCceNodeTaintOutputWithContext(context.Background())
}

func (i CceNodeTaintArgs) ToCceNodeTaintOutputWithContext(ctx context.Context) CceNodeTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeTaintOutput)
}

// CceNodeTaintArrayInput is an input type that accepts CceNodeTaintArray and CceNodeTaintArrayOutput values.
// You can construct a concrete instance of `CceNodeTaintArrayInput` via:
//
//	CceNodeTaintArray{ CceNodeTaintArgs{...} }
type CceNodeTaintArrayInput interface {
	pulumi.Input

	ToCceNodeTaintArrayOutput() CceNodeTaintArrayOutput
	ToCceNodeTaintArrayOutputWithContext(context.Context) CceNodeTaintArrayOutput
}

type CceNodeTaintArray []CceNodeTaintInput

func (CceNodeTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeTaint)(nil)).Elem()
}

func (i CceNodeTaintArray) ToCceNodeTaintArrayOutput() CceNodeTaintArrayOutput {
	return i.ToCceNodeTaintArrayOutputWithContext(context.Background())
}

func (i CceNodeTaintArray) ToCceNodeTaintArrayOutputWithContext(ctx context.Context) CceNodeTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeTaintArrayOutput)
}

type CceNodeTaintOutput struct{ *pulumi.OutputState }

func (CceNodeTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CceNodeTaint)(nil)).Elem()
}

func (o CceNodeTaintOutput) ToCceNodeTaintOutput() CceNodeTaintOutput {
	return o
}

func (o CceNodeTaintOutput) ToCceNodeTaintOutputWithContext(ctx context.Context) CceNodeTaintOutput {
	return o
}

func (o CceNodeTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o CceNodeTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CceNodeTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o CceNodeTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CceNodeTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CceNodeTaintArrayOutput struct{ *pulumi.OutputState }

func (CceNodeTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CceNodeTaint)(nil)).Elem()
}

func (o CceNodeTaintArrayOutput) ToCceNodeTaintArrayOutput() CceNodeTaintArrayOutput {
	return o
}

func (o CceNodeTaintArrayOutput) ToCceNodeTaintArrayOutputWithContext(ctx context.Context) CceNodeTaintArrayOutput {
	return o
}

func (o CceNodeTaintArrayOutput) Index(i pulumi.IntInput) CceNodeTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CceNodeTaint {
		return vs[0].([]CceNodeTaint)[vs[1].(int)]
	}).(CceNodeTaintOutput)
}

type CdmClusterInstance struct {
	Id        *string `pulumi:"id"`
	ManageIp  *string `pulumi:"manageIp"`
	Name      *string `pulumi:"name"`
	PrivateIp *string `pulumi:"privateIp"`
	PublicIp  *string `pulumi:"publicIp"`
	Role      *string `pulumi:"role"`
	TrafficIp *string `pulumi:"trafficIp"`
	Type      *string `pulumi:"type"`
}

// CdmClusterInstanceInput is an input type that accepts CdmClusterInstanceArgs and CdmClusterInstanceOutput values.
// You can construct a concrete instance of `CdmClusterInstanceInput` via:
//
//	CdmClusterInstanceArgs{...}
type CdmClusterInstanceInput interface {
	pulumi.Input

	ToCdmClusterInstanceOutput() CdmClusterInstanceOutput
	ToCdmClusterInstanceOutputWithContext(context.Context) CdmClusterInstanceOutput
}

type CdmClusterInstanceArgs struct {
	Id        pulumi.StringPtrInput `pulumi:"id"`
	ManageIp  pulumi.StringPtrInput `pulumi:"manageIp"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	PublicIp  pulumi.StringPtrInput `pulumi:"publicIp"`
	Role      pulumi.StringPtrInput `pulumi:"role"`
	TrafficIp pulumi.StringPtrInput `pulumi:"trafficIp"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
}

func (CdmClusterInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CdmClusterInstance)(nil)).Elem()
}

func (i CdmClusterInstanceArgs) ToCdmClusterInstanceOutput() CdmClusterInstanceOutput {
	return i.ToCdmClusterInstanceOutputWithContext(context.Background())
}

func (i CdmClusterInstanceArgs) ToCdmClusterInstanceOutputWithContext(ctx context.Context) CdmClusterInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdmClusterInstanceOutput)
}

// CdmClusterInstanceArrayInput is an input type that accepts CdmClusterInstanceArray and CdmClusterInstanceArrayOutput values.
// You can construct a concrete instance of `CdmClusterInstanceArrayInput` via:
//
//	CdmClusterInstanceArray{ CdmClusterInstanceArgs{...} }
type CdmClusterInstanceArrayInput interface {
	pulumi.Input

	ToCdmClusterInstanceArrayOutput() CdmClusterInstanceArrayOutput
	ToCdmClusterInstanceArrayOutputWithContext(context.Context) CdmClusterInstanceArrayOutput
}

type CdmClusterInstanceArray []CdmClusterInstanceInput

func (CdmClusterInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdmClusterInstance)(nil)).Elem()
}

func (i CdmClusterInstanceArray) ToCdmClusterInstanceArrayOutput() CdmClusterInstanceArrayOutput {
	return i.ToCdmClusterInstanceArrayOutputWithContext(context.Background())
}

func (i CdmClusterInstanceArray) ToCdmClusterInstanceArrayOutputWithContext(ctx context.Context) CdmClusterInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdmClusterInstanceArrayOutput)
}

type CdmClusterInstanceOutput struct{ *pulumi.OutputState }

func (CdmClusterInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdmClusterInstance)(nil)).Elem()
}

func (o CdmClusterInstanceOutput) ToCdmClusterInstanceOutput() CdmClusterInstanceOutput {
	return o
}

func (o CdmClusterInstanceOutput) ToCdmClusterInstanceOutputWithContext(ctx context.Context) CdmClusterInstanceOutput {
	return o
}

func (o CdmClusterInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CdmClusterInstanceOutput) ManageIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.ManageIp }).(pulumi.StringPtrOutput)
}

func (o CdmClusterInstanceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CdmClusterInstanceOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

func (o CdmClusterInstanceOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o CdmClusterInstanceOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o CdmClusterInstanceOutput) TrafficIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.TrafficIp }).(pulumi.StringPtrOutput)
}

func (o CdmClusterInstanceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdmClusterInstance) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CdmClusterInstanceArrayOutput struct{ *pulumi.OutputState }

func (CdmClusterInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdmClusterInstance)(nil)).Elem()
}

func (o CdmClusterInstanceArrayOutput) ToCdmClusterInstanceArrayOutput() CdmClusterInstanceArrayOutput {
	return o
}

func (o CdmClusterInstanceArrayOutput) ToCdmClusterInstanceArrayOutputWithContext(ctx context.Context) CdmClusterInstanceArrayOutput {
	return o
}

func (o CdmClusterInstanceArrayOutput) Index(i pulumi.IntInput) CdmClusterInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CdmClusterInstance {
		return vs[0].([]CdmClusterInstance)[vs[1].(int)]
	}).(CdmClusterInstanceOutput)
}

type CesAlarmruleAlarmAction struct {
	NotificationLists []string `pulumi:"notificationLists"`
	Type              string   `pulumi:"type"`
}

// CesAlarmruleAlarmActionInput is an input type that accepts CesAlarmruleAlarmActionArgs and CesAlarmruleAlarmActionOutput values.
// You can construct a concrete instance of `CesAlarmruleAlarmActionInput` via:
//
//	CesAlarmruleAlarmActionArgs{...}
type CesAlarmruleAlarmActionInput interface {
	pulumi.Input

	ToCesAlarmruleAlarmActionOutput() CesAlarmruleAlarmActionOutput
	ToCesAlarmruleAlarmActionOutputWithContext(context.Context) CesAlarmruleAlarmActionOutput
}

type CesAlarmruleAlarmActionArgs struct {
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	Type              pulumi.StringInput      `pulumi:"type"`
}

func (CesAlarmruleAlarmActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleAlarmAction)(nil)).Elem()
}

func (i CesAlarmruleAlarmActionArgs) ToCesAlarmruleAlarmActionOutput() CesAlarmruleAlarmActionOutput {
	return i.ToCesAlarmruleAlarmActionOutputWithContext(context.Background())
}

func (i CesAlarmruleAlarmActionArgs) ToCesAlarmruleAlarmActionOutputWithContext(ctx context.Context) CesAlarmruleAlarmActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleAlarmActionOutput)
}

// CesAlarmruleAlarmActionArrayInput is an input type that accepts CesAlarmruleAlarmActionArray and CesAlarmruleAlarmActionArrayOutput values.
// You can construct a concrete instance of `CesAlarmruleAlarmActionArrayInput` via:
//
//	CesAlarmruleAlarmActionArray{ CesAlarmruleAlarmActionArgs{...} }
type CesAlarmruleAlarmActionArrayInput interface {
	pulumi.Input

	ToCesAlarmruleAlarmActionArrayOutput() CesAlarmruleAlarmActionArrayOutput
	ToCesAlarmruleAlarmActionArrayOutputWithContext(context.Context) CesAlarmruleAlarmActionArrayOutput
}

type CesAlarmruleAlarmActionArray []CesAlarmruleAlarmActionInput

func (CesAlarmruleAlarmActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleAlarmAction)(nil)).Elem()
}

func (i CesAlarmruleAlarmActionArray) ToCesAlarmruleAlarmActionArrayOutput() CesAlarmruleAlarmActionArrayOutput {
	return i.ToCesAlarmruleAlarmActionArrayOutputWithContext(context.Background())
}

func (i CesAlarmruleAlarmActionArray) ToCesAlarmruleAlarmActionArrayOutputWithContext(ctx context.Context) CesAlarmruleAlarmActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleAlarmActionArrayOutput)
}

type CesAlarmruleAlarmActionOutput struct{ *pulumi.OutputState }

func (CesAlarmruleAlarmActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleAlarmAction)(nil)).Elem()
}

func (o CesAlarmruleAlarmActionOutput) ToCesAlarmruleAlarmActionOutput() CesAlarmruleAlarmActionOutput {
	return o
}

func (o CesAlarmruleAlarmActionOutput) ToCesAlarmruleAlarmActionOutputWithContext(ctx context.Context) CesAlarmruleAlarmActionOutput {
	return o
}

func (o CesAlarmruleAlarmActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CesAlarmruleAlarmAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

func (o CesAlarmruleAlarmActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleAlarmAction) string { return v.Type }).(pulumi.StringOutput)
}

type CesAlarmruleAlarmActionArrayOutput struct{ *pulumi.OutputState }

func (CesAlarmruleAlarmActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleAlarmAction)(nil)).Elem()
}

func (o CesAlarmruleAlarmActionArrayOutput) ToCesAlarmruleAlarmActionArrayOutput() CesAlarmruleAlarmActionArrayOutput {
	return o
}

func (o CesAlarmruleAlarmActionArrayOutput) ToCesAlarmruleAlarmActionArrayOutputWithContext(ctx context.Context) CesAlarmruleAlarmActionArrayOutput {
	return o
}

func (o CesAlarmruleAlarmActionArrayOutput) Index(i pulumi.IntInput) CesAlarmruleAlarmActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CesAlarmruleAlarmAction {
		return vs[0].([]CesAlarmruleAlarmAction)[vs[1].(int)]
	}).(CesAlarmruleAlarmActionOutput)
}

type CesAlarmruleCondition struct {
	ComparisonOperator string  `pulumi:"comparisonOperator"`
	Count              int     `pulumi:"count"`
	Filter             string  `pulumi:"filter"`
	Period             int     `pulumi:"period"`
	SuppressDuration   *int    `pulumi:"suppressDuration"`
	Unit               *string `pulumi:"unit"`
	Value              int     `pulumi:"value"`
}

// CesAlarmruleConditionInput is an input type that accepts CesAlarmruleConditionArgs and CesAlarmruleConditionOutput values.
// You can construct a concrete instance of `CesAlarmruleConditionInput` via:
//
//	CesAlarmruleConditionArgs{...}
type CesAlarmruleConditionInput interface {
	pulumi.Input

	ToCesAlarmruleConditionOutput() CesAlarmruleConditionOutput
	ToCesAlarmruleConditionOutputWithContext(context.Context) CesAlarmruleConditionOutput
}

type CesAlarmruleConditionArgs struct {
	ComparisonOperator pulumi.StringInput    `pulumi:"comparisonOperator"`
	Count              pulumi.IntInput       `pulumi:"count"`
	Filter             pulumi.StringInput    `pulumi:"filter"`
	Period             pulumi.IntInput       `pulumi:"period"`
	SuppressDuration   pulumi.IntPtrInput    `pulumi:"suppressDuration"`
	Unit               pulumi.StringPtrInput `pulumi:"unit"`
	Value              pulumi.IntInput       `pulumi:"value"`
}

func (CesAlarmruleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleCondition)(nil)).Elem()
}

func (i CesAlarmruleConditionArgs) ToCesAlarmruleConditionOutput() CesAlarmruleConditionOutput {
	return i.ToCesAlarmruleConditionOutputWithContext(context.Background())
}

func (i CesAlarmruleConditionArgs) ToCesAlarmruleConditionOutputWithContext(ctx context.Context) CesAlarmruleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleConditionOutput)
}

func (i CesAlarmruleConditionArgs) ToCesAlarmruleConditionPtrOutput() CesAlarmruleConditionPtrOutput {
	return i.ToCesAlarmruleConditionPtrOutputWithContext(context.Background())
}

func (i CesAlarmruleConditionArgs) ToCesAlarmruleConditionPtrOutputWithContext(ctx context.Context) CesAlarmruleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleConditionOutput).ToCesAlarmruleConditionPtrOutputWithContext(ctx)
}

// CesAlarmruleConditionPtrInput is an input type that accepts CesAlarmruleConditionArgs, CesAlarmruleConditionPtr and CesAlarmruleConditionPtrOutput values.
// You can construct a concrete instance of `CesAlarmruleConditionPtrInput` via:
//
//	        CesAlarmruleConditionArgs{...}
//
//	or:
//
//	        nil
type CesAlarmruleConditionPtrInput interface {
	pulumi.Input

	ToCesAlarmruleConditionPtrOutput() CesAlarmruleConditionPtrOutput
	ToCesAlarmruleConditionPtrOutputWithContext(context.Context) CesAlarmruleConditionPtrOutput
}

type cesAlarmruleConditionPtrType CesAlarmruleConditionArgs

func CesAlarmruleConditionPtr(v *CesAlarmruleConditionArgs) CesAlarmruleConditionPtrInput {
	return (*cesAlarmruleConditionPtrType)(v)
}

func (*cesAlarmruleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CesAlarmruleCondition)(nil)).Elem()
}

func (i *cesAlarmruleConditionPtrType) ToCesAlarmruleConditionPtrOutput() CesAlarmruleConditionPtrOutput {
	return i.ToCesAlarmruleConditionPtrOutputWithContext(context.Background())
}

func (i *cesAlarmruleConditionPtrType) ToCesAlarmruleConditionPtrOutputWithContext(ctx context.Context) CesAlarmruleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleConditionPtrOutput)
}

type CesAlarmruleConditionOutput struct{ *pulumi.OutputState }

func (CesAlarmruleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleCondition)(nil)).Elem()
}

func (o CesAlarmruleConditionOutput) ToCesAlarmruleConditionOutput() CesAlarmruleConditionOutput {
	return o
}

func (o CesAlarmruleConditionOutput) ToCesAlarmruleConditionOutputWithContext(ctx context.Context) CesAlarmruleConditionOutput {
	return o
}

func (o CesAlarmruleConditionOutput) ToCesAlarmruleConditionPtrOutput() CesAlarmruleConditionPtrOutput {
	return o.ToCesAlarmruleConditionPtrOutputWithContext(context.Background())
}

func (o CesAlarmruleConditionOutput) ToCesAlarmruleConditionPtrOutputWithContext(ctx context.Context) CesAlarmruleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CesAlarmruleCondition) *CesAlarmruleCondition {
		return &v
	}).(CesAlarmruleConditionPtrOutput)
}

func (o CesAlarmruleConditionOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleCondition) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

func (o CesAlarmruleConditionOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v CesAlarmruleCondition) int { return v.Count }).(pulumi.IntOutput)
}

func (o CesAlarmruleConditionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleCondition) string { return v.Filter }).(pulumi.StringOutput)
}

func (o CesAlarmruleConditionOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v CesAlarmruleCondition) int { return v.Period }).(pulumi.IntOutput)
}

func (o CesAlarmruleConditionOutput) SuppressDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CesAlarmruleCondition) *int { return v.SuppressDuration }).(pulumi.IntPtrOutput)
}

func (o CesAlarmruleConditionOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CesAlarmruleCondition) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

func (o CesAlarmruleConditionOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v CesAlarmruleCondition) int { return v.Value }).(pulumi.IntOutput)
}

type CesAlarmruleConditionPtrOutput struct{ *pulumi.OutputState }

func (CesAlarmruleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CesAlarmruleCondition)(nil)).Elem()
}

func (o CesAlarmruleConditionPtrOutput) ToCesAlarmruleConditionPtrOutput() CesAlarmruleConditionPtrOutput {
	return o
}

func (o CesAlarmruleConditionPtrOutput) ToCesAlarmruleConditionPtrOutputWithContext(ctx context.Context) CesAlarmruleConditionPtrOutput {
	return o
}

func (o CesAlarmruleConditionPtrOutput) Elem() CesAlarmruleConditionOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) CesAlarmruleCondition {
		if v != nil {
			return *v
		}
		var ret CesAlarmruleCondition
		return ret
	}).(CesAlarmruleConditionOutput)
}

func (o CesAlarmruleConditionPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

func (o CesAlarmruleConditionPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

func (o CesAlarmruleConditionPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Filter
	}).(pulumi.StringPtrOutput)
}

func (o CesAlarmruleConditionPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return &v.Period
	}).(pulumi.IntPtrOutput)
}

func (o CesAlarmruleConditionPtrOutput) SuppressDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return v.SuppressDuration
	}).(pulumi.IntPtrOutput)
}

func (o CesAlarmruleConditionPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

func (o CesAlarmruleConditionPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type CesAlarmruleInsufficientdataAction struct {
	NotificationLists []string `pulumi:"notificationLists"`
	Type              string   `pulumi:"type"`
}

// CesAlarmruleInsufficientdataActionInput is an input type that accepts CesAlarmruleInsufficientdataActionArgs and CesAlarmruleInsufficientdataActionOutput values.
// You can construct a concrete instance of `CesAlarmruleInsufficientdataActionInput` via:
//
//	CesAlarmruleInsufficientdataActionArgs{...}
type CesAlarmruleInsufficientdataActionInput interface {
	pulumi.Input

	ToCesAlarmruleInsufficientdataActionOutput() CesAlarmruleInsufficientdataActionOutput
	ToCesAlarmruleInsufficientdataActionOutputWithContext(context.Context) CesAlarmruleInsufficientdataActionOutput
}

type CesAlarmruleInsufficientdataActionArgs struct {
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	Type              pulumi.StringInput      `pulumi:"type"`
}

func (CesAlarmruleInsufficientdataActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleInsufficientdataAction)(nil)).Elem()
}

func (i CesAlarmruleInsufficientdataActionArgs) ToCesAlarmruleInsufficientdataActionOutput() CesAlarmruleInsufficientdataActionOutput {
	return i.ToCesAlarmruleInsufficientdataActionOutputWithContext(context.Background())
}

func (i CesAlarmruleInsufficientdataActionArgs) ToCesAlarmruleInsufficientdataActionOutputWithContext(ctx context.Context) CesAlarmruleInsufficientdataActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleInsufficientdataActionOutput)
}

// CesAlarmruleInsufficientdataActionArrayInput is an input type that accepts CesAlarmruleInsufficientdataActionArray and CesAlarmruleInsufficientdataActionArrayOutput values.
// You can construct a concrete instance of `CesAlarmruleInsufficientdataActionArrayInput` via:
//
//	CesAlarmruleInsufficientdataActionArray{ CesAlarmruleInsufficientdataActionArgs{...} }
type CesAlarmruleInsufficientdataActionArrayInput interface {
	pulumi.Input

	ToCesAlarmruleInsufficientdataActionArrayOutput() CesAlarmruleInsufficientdataActionArrayOutput
	ToCesAlarmruleInsufficientdataActionArrayOutputWithContext(context.Context) CesAlarmruleInsufficientdataActionArrayOutput
}

type CesAlarmruleInsufficientdataActionArray []CesAlarmruleInsufficientdataActionInput

func (CesAlarmruleInsufficientdataActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleInsufficientdataAction)(nil)).Elem()
}

func (i CesAlarmruleInsufficientdataActionArray) ToCesAlarmruleInsufficientdataActionArrayOutput() CesAlarmruleInsufficientdataActionArrayOutput {
	return i.ToCesAlarmruleInsufficientdataActionArrayOutputWithContext(context.Background())
}

func (i CesAlarmruleInsufficientdataActionArray) ToCesAlarmruleInsufficientdataActionArrayOutputWithContext(ctx context.Context) CesAlarmruleInsufficientdataActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleInsufficientdataActionArrayOutput)
}

type CesAlarmruleInsufficientdataActionOutput struct{ *pulumi.OutputState }

func (CesAlarmruleInsufficientdataActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleInsufficientdataAction)(nil)).Elem()
}

func (o CesAlarmruleInsufficientdataActionOutput) ToCesAlarmruleInsufficientdataActionOutput() CesAlarmruleInsufficientdataActionOutput {
	return o
}

func (o CesAlarmruleInsufficientdataActionOutput) ToCesAlarmruleInsufficientdataActionOutputWithContext(ctx context.Context) CesAlarmruleInsufficientdataActionOutput {
	return o
}

func (o CesAlarmruleInsufficientdataActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CesAlarmruleInsufficientdataAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

func (o CesAlarmruleInsufficientdataActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleInsufficientdataAction) string { return v.Type }).(pulumi.StringOutput)
}

type CesAlarmruleInsufficientdataActionArrayOutput struct{ *pulumi.OutputState }

func (CesAlarmruleInsufficientdataActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleInsufficientdataAction)(nil)).Elem()
}

func (o CesAlarmruleInsufficientdataActionArrayOutput) ToCesAlarmruleInsufficientdataActionArrayOutput() CesAlarmruleInsufficientdataActionArrayOutput {
	return o
}

func (o CesAlarmruleInsufficientdataActionArrayOutput) ToCesAlarmruleInsufficientdataActionArrayOutputWithContext(ctx context.Context) CesAlarmruleInsufficientdataActionArrayOutput {
	return o
}

func (o CesAlarmruleInsufficientdataActionArrayOutput) Index(i pulumi.IntInput) CesAlarmruleInsufficientdataActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CesAlarmruleInsufficientdataAction {
		return vs[0].([]CesAlarmruleInsufficientdataAction)[vs[1].(int)]
	}).(CesAlarmruleInsufficientdataActionOutput)
}

type CesAlarmruleMetric struct {
	Dimensions []CesAlarmruleMetricDimension `pulumi:"dimensions"`
	MetricName string                        `pulumi:"metricName"`
	Namespace  string                        `pulumi:"namespace"`
}

// CesAlarmruleMetricInput is an input type that accepts CesAlarmruleMetricArgs and CesAlarmruleMetricOutput values.
// You can construct a concrete instance of `CesAlarmruleMetricInput` via:
//
//	CesAlarmruleMetricArgs{...}
type CesAlarmruleMetricInput interface {
	pulumi.Input

	ToCesAlarmruleMetricOutput() CesAlarmruleMetricOutput
	ToCesAlarmruleMetricOutputWithContext(context.Context) CesAlarmruleMetricOutput
}

type CesAlarmruleMetricArgs struct {
	Dimensions CesAlarmruleMetricDimensionArrayInput `pulumi:"dimensions"`
	MetricName pulumi.StringInput                    `pulumi:"metricName"`
	Namespace  pulumi.StringInput                    `pulumi:"namespace"`
}

func (CesAlarmruleMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleMetric)(nil)).Elem()
}

func (i CesAlarmruleMetricArgs) ToCesAlarmruleMetricOutput() CesAlarmruleMetricOutput {
	return i.ToCesAlarmruleMetricOutputWithContext(context.Background())
}

func (i CesAlarmruleMetricArgs) ToCesAlarmruleMetricOutputWithContext(ctx context.Context) CesAlarmruleMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleMetricOutput)
}

func (i CesAlarmruleMetricArgs) ToCesAlarmruleMetricPtrOutput() CesAlarmruleMetricPtrOutput {
	return i.ToCesAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (i CesAlarmruleMetricArgs) ToCesAlarmruleMetricPtrOutputWithContext(ctx context.Context) CesAlarmruleMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleMetricOutput).ToCesAlarmruleMetricPtrOutputWithContext(ctx)
}

// CesAlarmruleMetricPtrInput is an input type that accepts CesAlarmruleMetricArgs, CesAlarmruleMetricPtr and CesAlarmruleMetricPtrOutput values.
// You can construct a concrete instance of `CesAlarmruleMetricPtrInput` via:
//
//	        CesAlarmruleMetricArgs{...}
//
//	or:
//
//	        nil
type CesAlarmruleMetricPtrInput interface {
	pulumi.Input

	ToCesAlarmruleMetricPtrOutput() CesAlarmruleMetricPtrOutput
	ToCesAlarmruleMetricPtrOutputWithContext(context.Context) CesAlarmruleMetricPtrOutput
}

type cesAlarmruleMetricPtrType CesAlarmruleMetricArgs

func CesAlarmruleMetricPtr(v *CesAlarmruleMetricArgs) CesAlarmruleMetricPtrInput {
	return (*cesAlarmruleMetricPtrType)(v)
}

func (*cesAlarmruleMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CesAlarmruleMetric)(nil)).Elem()
}

func (i *cesAlarmruleMetricPtrType) ToCesAlarmruleMetricPtrOutput() CesAlarmruleMetricPtrOutput {
	return i.ToCesAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (i *cesAlarmruleMetricPtrType) ToCesAlarmruleMetricPtrOutputWithContext(ctx context.Context) CesAlarmruleMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleMetricPtrOutput)
}

type CesAlarmruleMetricOutput struct{ *pulumi.OutputState }

func (CesAlarmruleMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleMetric)(nil)).Elem()
}

func (o CesAlarmruleMetricOutput) ToCesAlarmruleMetricOutput() CesAlarmruleMetricOutput {
	return o
}

func (o CesAlarmruleMetricOutput) ToCesAlarmruleMetricOutputWithContext(ctx context.Context) CesAlarmruleMetricOutput {
	return o
}

func (o CesAlarmruleMetricOutput) ToCesAlarmruleMetricPtrOutput() CesAlarmruleMetricPtrOutput {
	return o.ToCesAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (o CesAlarmruleMetricOutput) ToCesAlarmruleMetricPtrOutputWithContext(ctx context.Context) CesAlarmruleMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CesAlarmruleMetric) *CesAlarmruleMetric {
		return &v
	}).(CesAlarmruleMetricPtrOutput)
}

func (o CesAlarmruleMetricOutput) Dimensions() CesAlarmruleMetricDimensionArrayOutput {
	return o.ApplyT(func(v CesAlarmruleMetric) []CesAlarmruleMetricDimension { return v.Dimensions }).(CesAlarmruleMetricDimensionArrayOutput)
}

func (o CesAlarmruleMetricOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleMetric) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o CesAlarmruleMetricOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleMetric) string { return v.Namespace }).(pulumi.StringOutput)
}

type CesAlarmruleMetricPtrOutput struct{ *pulumi.OutputState }

func (CesAlarmruleMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CesAlarmruleMetric)(nil)).Elem()
}

func (o CesAlarmruleMetricPtrOutput) ToCesAlarmruleMetricPtrOutput() CesAlarmruleMetricPtrOutput {
	return o
}

func (o CesAlarmruleMetricPtrOutput) ToCesAlarmruleMetricPtrOutputWithContext(ctx context.Context) CesAlarmruleMetricPtrOutput {
	return o
}

func (o CesAlarmruleMetricPtrOutput) Elem() CesAlarmruleMetricOutput {
	return o.ApplyT(func(v *CesAlarmruleMetric) CesAlarmruleMetric {
		if v != nil {
			return *v
		}
		var ret CesAlarmruleMetric
		return ret
	}).(CesAlarmruleMetricOutput)
}

func (o CesAlarmruleMetricPtrOutput) Dimensions() CesAlarmruleMetricDimensionArrayOutput {
	return o.ApplyT(func(v *CesAlarmruleMetric) []CesAlarmruleMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(CesAlarmruleMetricDimensionArrayOutput)
}

func (o CesAlarmruleMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleMetric) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

func (o CesAlarmruleMetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CesAlarmruleMetric) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

type CesAlarmruleMetricDimension struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// CesAlarmruleMetricDimensionInput is an input type that accepts CesAlarmruleMetricDimensionArgs and CesAlarmruleMetricDimensionOutput values.
// You can construct a concrete instance of `CesAlarmruleMetricDimensionInput` via:
//
//	CesAlarmruleMetricDimensionArgs{...}
type CesAlarmruleMetricDimensionInput interface {
	pulumi.Input

	ToCesAlarmruleMetricDimensionOutput() CesAlarmruleMetricDimensionOutput
	ToCesAlarmruleMetricDimensionOutputWithContext(context.Context) CesAlarmruleMetricDimensionOutput
}

type CesAlarmruleMetricDimensionArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (CesAlarmruleMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleMetricDimension)(nil)).Elem()
}

func (i CesAlarmruleMetricDimensionArgs) ToCesAlarmruleMetricDimensionOutput() CesAlarmruleMetricDimensionOutput {
	return i.ToCesAlarmruleMetricDimensionOutputWithContext(context.Background())
}

func (i CesAlarmruleMetricDimensionArgs) ToCesAlarmruleMetricDimensionOutputWithContext(ctx context.Context) CesAlarmruleMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleMetricDimensionOutput)
}

// CesAlarmruleMetricDimensionArrayInput is an input type that accepts CesAlarmruleMetricDimensionArray and CesAlarmruleMetricDimensionArrayOutput values.
// You can construct a concrete instance of `CesAlarmruleMetricDimensionArrayInput` via:
//
//	CesAlarmruleMetricDimensionArray{ CesAlarmruleMetricDimensionArgs{...} }
type CesAlarmruleMetricDimensionArrayInput interface {
	pulumi.Input

	ToCesAlarmruleMetricDimensionArrayOutput() CesAlarmruleMetricDimensionArrayOutput
	ToCesAlarmruleMetricDimensionArrayOutputWithContext(context.Context) CesAlarmruleMetricDimensionArrayOutput
}

type CesAlarmruleMetricDimensionArray []CesAlarmruleMetricDimensionInput

func (CesAlarmruleMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleMetricDimension)(nil)).Elem()
}

func (i CesAlarmruleMetricDimensionArray) ToCesAlarmruleMetricDimensionArrayOutput() CesAlarmruleMetricDimensionArrayOutput {
	return i.ToCesAlarmruleMetricDimensionArrayOutputWithContext(context.Background())
}

func (i CesAlarmruleMetricDimensionArray) ToCesAlarmruleMetricDimensionArrayOutputWithContext(ctx context.Context) CesAlarmruleMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleMetricDimensionArrayOutput)
}

type CesAlarmruleMetricDimensionOutput struct{ *pulumi.OutputState }

func (CesAlarmruleMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleMetricDimension)(nil)).Elem()
}

func (o CesAlarmruleMetricDimensionOutput) ToCesAlarmruleMetricDimensionOutput() CesAlarmruleMetricDimensionOutput {
	return o
}

func (o CesAlarmruleMetricDimensionOutput) ToCesAlarmruleMetricDimensionOutputWithContext(ctx context.Context) CesAlarmruleMetricDimensionOutput {
	return o
}

func (o CesAlarmruleMetricDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleMetricDimension) string { return v.Name }).(pulumi.StringOutput)
}

func (o CesAlarmruleMetricDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleMetricDimension) string { return v.Value }).(pulumi.StringOutput)
}

type CesAlarmruleMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (CesAlarmruleMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleMetricDimension)(nil)).Elem()
}

func (o CesAlarmruleMetricDimensionArrayOutput) ToCesAlarmruleMetricDimensionArrayOutput() CesAlarmruleMetricDimensionArrayOutput {
	return o
}

func (o CesAlarmruleMetricDimensionArrayOutput) ToCesAlarmruleMetricDimensionArrayOutputWithContext(ctx context.Context) CesAlarmruleMetricDimensionArrayOutput {
	return o
}

func (o CesAlarmruleMetricDimensionArrayOutput) Index(i pulumi.IntInput) CesAlarmruleMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CesAlarmruleMetricDimension {
		return vs[0].([]CesAlarmruleMetricDimension)[vs[1].(int)]
	}).(CesAlarmruleMetricDimensionOutput)
}

type CesAlarmruleOkAction struct {
	NotificationLists []string `pulumi:"notificationLists"`
	Type              string   `pulumi:"type"`
}

// CesAlarmruleOkActionInput is an input type that accepts CesAlarmruleOkActionArgs and CesAlarmruleOkActionOutput values.
// You can construct a concrete instance of `CesAlarmruleOkActionInput` via:
//
//	CesAlarmruleOkActionArgs{...}
type CesAlarmruleOkActionInput interface {
	pulumi.Input

	ToCesAlarmruleOkActionOutput() CesAlarmruleOkActionOutput
	ToCesAlarmruleOkActionOutputWithContext(context.Context) CesAlarmruleOkActionOutput
}

type CesAlarmruleOkActionArgs struct {
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	Type              pulumi.StringInput      `pulumi:"type"`
}

func (CesAlarmruleOkActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleOkAction)(nil)).Elem()
}

func (i CesAlarmruleOkActionArgs) ToCesAlarmruleOkActionOutput() CesAlarmruleOkActionOutput {
	return i.ToCesAlarmruleOkActionOutputWithContext(context.Background())
}

func (i CesAlarmruleOkActionArgs) ToCesAlarmruleOkActionOutputWithContext(ctx context.Context) CesAlarmruleOkActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleOkActionOutput)
}

// CesAlarmruleOkActionArrayInput is an input type that accepts CesAlarmruleOkActionArray and CesAlarmruleOkActionArrayOutput values.
// You can construct a concrete instance of `CesAlarmruleOkActionArrayInput` via:
//
//	CesAlarmruleOkActionArray{ CesAlarmruleOkActionArgs{...} }
type CesAlarmruleOkActionArrayInput interface {
	pulumi.Input

	ToCesAlarmruleOkActionArrayOutput() CesAlarmruleOkActionArrayOutput
	ToCesAlarmruleOkActionArrayOutputWithContext(context.Context) CesAlarmruleOkActionArrayOutput
}

type CesAlarmruleOkActionArray []CesAlarmruleOkActionInput

func (CesAlarmruleOkActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleOkAction)(nil)).Elem()
}

func (i CesAlarmruleOkActionArray) ToCesAlarmruleOkActionArrayOutput() CesAlarmruleOkActionArrayOutput {
	return i.ToCesAlarmruleOkActionArrayOutputWithContext(context.Background())
}

func (i CesAlarmruleOkActionArray) ToCesAlarmruleOkActionArrayOutputWithContext(ctx context.Context) CesAlarmruleOkActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CesAlarmruleOkActionArrayOutput)
}

type CesAlarmruleOkActionOutput struct{ *pulumi.OutputState }

func (CesAlarmruleOkActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CesAlarmruleOkAction)(nil)).Elem()
}

func (o CesAlarmruleOkActionOutput) ToCesAlarmruleOkActionOutput() CesAlarmruleOkActionOutput {
	return o
}

func (o CesAlarmruleOkActionOutput) ToCesAlarmruleOkActionOutputWithContext(ctx context.Context) CesAlarmruleOkActionOutput {
	return o
}

func (o CesAlarmruleOkActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CesAlarmruleOkAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

func (o CesAlarmruleOkActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CesAlarmruleOkAction) string { return v.Type }).(pulumi.StringOutput)
}

type CesAlarmruleOkActionArrayOutput struct{ *pulumi.OutputState }

func (CesAlarmruleOkActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CesAlarmruleOkAction)(nil)).Elem()
}

func (o CesAlarmruleOkActionArrayOutput) ToCesAlarmruleOkActionArrayOutput() CesAlarmruleOkActionArrayOutput {
	return o
}

func (o CesAlarmruleOkActionArrayOutput) ToCesAlarmruleOkActionArrayOutputWithContext(ctx context.Context) CesAlarmruleOkActionArrayOutput {
	return o
}

func (o CesAlarmruleOkActionArrayOutput) Index(i pulumi.IntInput) CesAlarmruleOkActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CesAlarmruleOkAction {
		return vs[0].([]CesAlarmruleOkAction)[vs[1].(int)]
	}).(CesAlarmruleOkActionOutput)
}

type ComputeInstanceBandwidth struct {
	ChargeMode  *string           `pulumi:"chargeMode"`
	ExtendParam map[string]string `pulumi:"extendParam"`
	Id          *string           `pulumi:"id"`
	ShareType   string            `pulumi:"shareType"`
	Size        *int              `pulumi:"size"`
}

// ComputeInstanceBandwidthInput is an input type that accepts ComputeInstanceBandwidthArgs and ComputeInstanceBandwidthOutput values.
// You can construct a concrete instance of `ComputeInstanceBandwidthInput` via:
//
//	ComputeInstanceBandwidthArgs{...}
type ComputeInstanceBandwidthInput interface {
	pulumi.Input

	ToComputeInstanceBandwidthOutput() ComputeInstanceBandwidthOutput
	ToComputeInstanceBandwidthOutputWithContext(context.Context) ComputeInstanceBandwidthOutput
}

type ComputeInstanceBandwidthArgs struct {
	ChargeMode  pulumi.StringPtrInput `pulumi:"chargeMode"`
	ExtendParam pulumi.StringMapInput `pulumi:"extendParam"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	ShareType   pulumi.StringInput    `pulumi:"shareType"`
	Size        pulumi.IntPtrInput    `pulumi:"size"`
}

func (ComputeInstanceBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceBandwidth)(nil)).Elem()
}

func (i ComputeInstanceBandwidthArgs) ToComputeInstanceBandwidthOutput() ComputeInstanceBandwidthOutput {
	return i.ToComputeInstanceBandwidthOutputWithContext(context.Background())
}

func (i ComputeInstanceBandwidthArgs) ToComputeInstanceBandwidthOutputWithContext(ctx context.Context) ComputeInstanceBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBandwidthOutput)
}

func (i ComputeInstanceBandwidthArgs) ToComputeInstanceBandwidthPtrOutput() ComputeInstanceBandwidthPtrOutput {
	return i.ToComputeInstanceBandwidthPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceBandwidthArgs) ToComputeInstanceBandwidthPtrOutputWithContext(ctx context.Context) ComputeInstanceBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBandwidthOutput).ToComputeInstanceBandwidthPtrOutputWithContext(ctx)
}

// ComputeInstanceBandwidthPtrInput is an input type that accepts ComputeInstanceBandwidthArgs, ComputeInstanceBandwidthPtr and ComputeInstanceBandwidthPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceBandwidthPtrInput` via:
//
//	        ComputeInstanceBandwidthArgs{...}
//
//	or:
//
//	        nil
type ComputeInstanceBandwidthPtrInput interface {
	pulumi.Input

	ToComputeInstanceBandwidthPtrOutput() ComputeInstanceBandwidthPtrOutput
	ToComputeInstanceBandwidthPtrOutputWithContext(context.Context) ComputeInstanceBandwidthPtrOutput
}

type computeInstanceBandwidthPtrType ComputeInstanceBandwidthArgs

func ComputeInstanceBandwidthPtr(v *ComputeInstanceBandwidthArgs) ComputeInstanceBandwidthPtrInput {
	return (*computeInstanceBandwidthPtrType)(v)
}

func (*computeInstanceBandwidthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceBandwidth)(nil)).Elem()
}

func (i *computeInstanceBandwidthPtrType) ToComputeInstanceBandwidthPtrOutput() ComputeInstanceBandwidthPtrOutput {
	return i.ToComputeInstanceBandwidthPtrOutputWithContext(context.Background())
}

func (i *computeInstanceBandwidthPtrType) ToComputeInstanceBandwidthPtrOutputWithContext(ctx context.Context) ComputeInstanceBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceBandwidthPtrOutput)
}

type ComputeInstanceBandwidthOutput struct{ *pulumi.OutputState }

func (ComputeInstanceBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceBandwidth)(nil)).Elem()
}

func (o ComputeInstanceBandwidthOutput) ToComputeInstanceBandwidthOutput() ComputeInstanceBandwidthOutput {
	return o
}

func (o ComputeInstanceBandwidthOutput) ToComputeInstanceBandwidthOutputWithContext(ctx context.Context) ComputeInstanceBandwidthOutput {
	return o
}

func (o ComputeInstanceBandwidthOutput) ToComputeInstanceBandwidthPtrOutput() ComputeInstanceBandwidthPtrOutput {
	return o.ToComputeInstanceBandwidthPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceBandwidthOutput) ToComputeInstanceBandwidthPtrOutputWithContext(ctx context.Context) ComputeInstanceBandwidthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceBandwidth) *ComputeInstanceBandwidth {
		return &v
	}).(ComputeInstanceBandwidthPtrOutput)
}

func (o ComputeInstanceBandwidthOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBandwidth) *string { return v.ChargeMode }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceBandwidthOutput) ExtendParam() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeInstanceBandwidth) map[string]string { return v.ExtendParam }).(pulumi.StringMapOutput)
}

func (o ComputeInstanceBandwidthOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBandwidth) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceBandwidthOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceBandwidth) string { return v.ShareType }).(pulumi.StringOutput)
}

func (o ComputeInstanceBandwidthOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceBandwidth) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ComputeInstanceBandwidthPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceBandwidth)(nil)).Elem()
}

func (o ComputeInstanceBandwidthPtrOutput) ToComputeInstanceBandwidthPtrOutput() ComputeInstanceBandwidthPtrOutput {
	return o
}

func (o ComputeInstanceBandwidthPtrOutput) ToComputeInstanceBandwidthPtrOutputWithContext(ctx context.Context) ComputeInstanceBandwidthPtrOutput {
	return o
}

func (o ComputeInstanceBandwidthPtrOutput) Elem() ComputeInstanceBandwidthOutput {
	return o.ApplyT(func(v *ComputeInstanceBandwidth) ComputeInstanceBandwidth {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceBandwidth
		return ret
	}).(ComputeInstanceBandwidthOutput)
}

func (o ComputeInstanceBandwidthPtrOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.ChargeMode
	}).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceBandwidthPtrOutput) ExtendParam() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstanceBandwidth) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtendParam
	}).(pulumi.StringMapOutput)
}

func (o ComputeInstanceBandwidthPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceBandwidthPtrOutput) ShareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBandwidth) *string {
		if v == nil {
			return nil
		}
		return &v.ShareType
	}).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceBandwidthPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type ComputeInstanceDataDisk struct {
	DssPoolId  *string `pulumi:"dssPoolId"`
	Iops       *int    `pulumi:"iops"`
	KmsKeyId   *string `pulumi:"kmsKeyId"`
	Size       int     `pulumi:"size"`
	SnapshotId *string `pulumi:"snapshotId"`
	Throughput *int    `pulumi:"throughput"`
	Type       string  `pulumi:"type"`
}

// ComputeInstanceDataDiskInput is an input type that accepts ComputeInstanceDataDiskArgs and ComputeInstanceDataDiskOutput values.
// You can construct a concrete instance of `ComputeInstanceDataDiskInput` via:
//
//	ComputeInstanceDataDiskArgs{...}
type ComputeInstanceDataDiskInput interface {
	pulumi.Input

	ToComputeInstanceDataDiskOutput() ComputeInstanceDataDiskOutput
	ToComputeInstanceDataDiskOutputWithContext(context.Context) ComputeInstanceDataDiskOutput
}

type ComputeInstanceDataDiskArgs struct {
	DssPoolId  pulumi.StringPtrInput `pulumi:"dssPoolId"`
	Iops       pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId   pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	Size       pulumi.IntInput       `pulumi:"size"`
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	Throughput pulumi.IntPtrInput    `pulumi:"throughput"`
	Type       pulumi.StringInput    `pulumi:"type"`
}

func (ComputeInstanceDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceDataDisk)(nil)).Elem()
}

func (i ComputeInstanceDataDiskArgs) ToComputeInstanceDataDiskOutput() ComputeInstanceDataDiskOutput {
	return i.ToComputeInstanceDataDiskOutputWithContext(context.Background())
}

func (i ComputeInstanceDataDiskArgs) ToComputeInstanceDataDiskOutputWithContext(ctx context.Context) ComputeInstanceDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceDataDiskOutput)
}

// ComputeInstanceDataDiskArrayInput is an input type that accepts ComputeInstanceDataDiskArray and ComputeInstanceDataDiskArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceDataDiskArrayInput` via:
//
//	ComputeInstanceDataDiskArray{ ComputeInstanceDataDiskArgs{...} }
type ComputeInstanceDataDiskArrayInput interface {
	pulumi.Input

	ToComputeInstanceDataDiskArrayOutput() ComputeInstanceDataDiskArrayOutput
	ToComputeInstanceDataDiskArrayOutputWithContext(context.Context) ComputeInstanceDataDiskArrayOutput
}

type ComputeInstanceDataDiskArray []ComputeInstanceDataDiskInput

func (ComputeInstanceDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceDataDisk)(nil)).Elem()
}

func (i ComputeInstanceDataDiskArray) ToComputeInstanceDataDiskArrayOutput() ComputeInstanceDataDiskArrayOutput {
	return i.ToComputeInstanceDataDiskArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceDataDiskArray) ToComputeInstanceDataDiskArrayOutputWithContext(ctx context.Context) ComputeInstanceDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceDataDiskArrayOutput)
}

type ComputeInstanceDataDiskOutput struct{ *pulumi.OutputState }

func (ComputeInstanceDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceDataDisk)(nil)).Elem()
}

func (o ComputeInstanceDataDiskOutput) ToComputeInstanceDataDiskOutput() ComputeInstanceDataDiskOutput {
	return o
}

func (o ComputeInstanceDataDiskOutput) ToComputeInstanceDataDiskOutputWithContext(ctx context.Context) ComputeInstanceDataDiskOutput {
	return o
}

func (o ComputeInstanceDataDiskOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceDataDisk) *string { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceDataDiskOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceDataDisk) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o ComputeInstanceDataDiskOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceDataDisk) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceDataDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceDataDisk) int { return v.Size }).(pulumi.IntOutput)
}

func (o ComputeInstanceDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceDataDiskOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceDataDisk) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o ComputeInstanceDataDiskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceDataDisk) string { return v.Type }).(pulumi.StringOutput)
}

type ComputeInstanceDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceDataDisk)(nil)).Elem()
}

func (o ComputeInstanceDataDiskArrayOutput) ToComputeInstanceDataDiskArrayOutput() ComputeInstanceDataDiskArrayOutput {
	return o
}

func (o ComputeInstanceDataDiskArrayOutput) ToComputeInstanceDataDiskArrayOutputWithContext(ctx context.Context) ComputeInstanceDataDiskArrayOutput {
	return o
}

func (o ComputeInstanceDataDiskArrayOutput) Index(i pulumi.IntInput) ComputeInstanceDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceDataDisk {
		return vs[0].([]ComputeInstanceDataDisk)[vs[1].(int)]
	}).(ComputeInstanceDataDiskOutput)
}

type ComputeInstanceNetwork struct {
	AccessNetwork *bool   `pulumi:"accessNetwork"`
	FixedIpV4     *string `pulumi:"fixedIpV4"`
	// schema: Computed
	FixedIpV6  *string `pulumi:"fixedIpV6"`
	Ipv6Enable *bool   `pulumi:"ipv6Enable"`
	Mac        *string `pulumi:"mac"`
	// schema: Computed
	Port            *string `pulumi:"port"`
	SourceDestCheck *bool   `pulumi:"sourceDestCheck"`
	// schema: Required
	Uuid *string `pulumi:"uuid"`
}

// ComputeInstanceNetworkInput is an input type that accepts ComputeInstanceNetworkArgs and ComputeInstanceNetworkOutput values.
// You can construct a concrete instance of `ComputeInstanceNetworkInput` via:
//
//	ComputeInstanceNetworkArgs{...}
type ComputeInstanceNetworkInput interface {
	pulumi.Input

	ToComputeInstanceNetworkOutput() ComputeInstanceNetworkOutput
	ToComputeInstanceNetworkOutputWithContext(context.Context) ComputeInstanceNetworkOutput
}

type ComputeInstanceNetworkArgs struct {
	AccessNetwork pulumi.BoolPtrInput   `pulumi:"accessNetwork"`
	FixedIpV4     pulumi.StringPtrInput `pulumi:"fixedIpV4"`
	// schema: Computed
	FixedIpV6  pulumi.StringPtrInput `pulumi:"fixedIpV6"`
	Ipv6Enable pulumi.BoolPtrInput   `pulumi:"ipv6Enable"`
	Mac        pulumi.StringPtrInput `pulumi:"mac"`
	// schema: Computed
	Port            pulumi.StringPtrInput `pulumi:"port"`
	SourceDestCheck pulumi.BoolPtrInput   `pulumi:"sourceDestCheck"`
	// schema: Required
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ComputeInstanceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceNetwork)(nil)).Elem()
}

func (i ComputeInstanceNetworkArgs) ToComputeInstanceNetworkOutput() ComputeInstanceNetworkOutput {
	return i.ToComputeInstanceNetworkOutputWithContext(context.Background())
}

func (i ComputeInstanceNetworkArgs) ToComputeInstanceNetworkOutputWithContext(ctx context.Context) ComputeInstanceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceNetworkOutput)
}

// ComputeInstanceNetworkArrayInput is an input type that accepts ComputeInstanceNetworkArray and ComputeInstanceNetworkArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceNetworkArrayInput` via:
//
//	ComputeInstanceNetworkArray{ ComputeInstanceNetworkArgs{...} }
type ComputeInstanceNetworkArrayInput interface {
	pulumi.Input

	ToComputeInstanceNetworkArrayOutput() ComputeInstanceNetworkArrayOutput
	ToComputeInstanceNetworkArrayOutputWithContext(context.Context) ComputeInstanceNetworkArrayOutput
}

type ComputeInstanceNetworkArray []ComputeInstanceNetworkInput

func (ComputeInstanceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceNetwork)(nil)).Elem()
}

func (i ComputeInstanceNetworkArray) ToComputeInstanceNetworkArrayOutput() ComputeInstanceNetworkArrayOutput {
	return i.ToComputeInstanceNetworkArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceNetworkArray) ToComputeInstanceNetworkArrayOutputWithContext(ctx context.Context) ComputeInstanceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceNetworkArrayOutput)
}

type ComputeInstanceNetworkOutput struct{ *pulumi.OutputState }

func (ComputeInstanceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceNetwork)(nil)).Elem()
}

func (o ComputeInstanceNetworkOutput) ToComputeInstanceNetworkOutput() ComputeInstanceNetworkOutput {
	return o
}

func (o ComputeInstanceNetworkOutput) ToComputeInstanceNetworkOutputWithContext(ctx context.Context) ComputeInstanceNetworkOutput {
	return o
}

func (o ComputeInstanceNetworkOutput) AccessNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *bool { return v.AccessNetwork }).(pulumi.BoolPtrOutput)
}

func (o ComputeInstanceNetworkOutput) FixedIpV4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *string { return v.FixedIpV4 }).(pulumi.StringPtrOutput)
}

// schema: Computed
func (o ComputeInstanceNetworkOutput) FixedIpV6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *string { return v.FixedIpV6 }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceNetworkOutput) Ipv6Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *bool { return v.Ipv6Enable }).(pulumi.BoolPtrOutput)
}

func (o ComputeInstanceNetworkOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// schema: Computed
func (o ComputeInstanceNetworkOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceNetworkOutput) SourceDestCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *bool { return v.SourceDestCheck }).(pulumi.BoolPtrOutput)
}

// schema: Required
func (o ComputeInstanceNetworkOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceNetwork) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ComputeInstanceNetworkArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceNetwork)(nil)).Elem()
}

func (o ComputeInstanceNetworkArrayOutput) ToComputeInstanceNetworkArrayOutput() ComputeInstanceNetworkArrayOutput {
	return o
}

func (o ComputeInstanceNetworkArrayOutput) ToComputeInstanceNetworkArrayOutputWithContext(ctx context.Context) ComputeInstanceNetworkArrayOutput {
	return o
}

func (o ComputeInstanceNetworkArrayOutput) Index(i pulumi.IntInput) ComputeInstanceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceNetwork {
		return vs[0].([]ComputeInstanceNetwork)[vs[1].(int)]
	}).(ComputeInstanceNetworkOutput)
}

type ComputeInstanceSchedulerHint struct {
	DehId *string `pulumi:"dehId"`
	// schema: Internal
	FaultDomain *string `pulumi:"faultDomain"`
	Group       *string `pulumi:"group"`
	Tenancy     *string `pulumi:"tenancy"`
}

// ComputeInstanceSchedulerHintInput is an input type that accepts ComputeInstanceSchedulerHintArgs and ComputeInstanceSchedulerHintOutput values.
// You can construct a concrete instance of `ComputeInstanceSchedulerHintInput` via:
//
//	ComputeInstanceSchedulerHintArgs{...}
type ComputeInstanceSchedulerHintInput interface {
	pulumi.Input

	ToComputeInstanceSchedulerHintOutput() ComputeInstanceSchedulerHintOutput
	ToComputeInstanceSchedulerHintOutputWithContext(context.Context) ComputeInstanceSchedulerHintOutput
}

type ComputeInstanceSchedulerHintArgs struct {
	DehId pulumi.StringPtrInput `pulumi:"dehId"`
	// schema: Internal
	FaultDomain pulumi.StringPtrInput `pulumi:"faultDomain"`
	Group       pulumi.StringPtrInput `pulumi:"group"`
	Tenancy     pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (ComputeInstanceSchedulerHintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSchedulerHint)(nil)).Elem()
}

func (i ComputeInstanceSchedulerHintArgs) ToComputeInstanceSchedulerHintOutput() ComputeInstanceSchedulerHintOutput {
	return i.ToComputeInstanceSchedulerHintOutputWithContext(context.Background())
}

func (i ComputeInstanceSchedulerHintArgs) ToComputeInstanceSchedulerHintOutputWithContext(ctx context.Context) ComputeInstanceSchedulerHintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSchedulerHintOutput)
}

// ComputeInstanceSchedulerHintArrayInput is an input type that accepts ComputeInstanceSchedulerHintArray and ComputeInstanceSchedulerHintArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceSchedulerHintArrayInput` via:
//
//	ComputeInstanceSchedulerHintArray{ ComputeInstanceSchedulerHintArgs{...} }
type ComputeInstanceSchedulerHintArrayInput interface {
	pulumi.Input

	ToComputeInstanceSchedulerHintArrayOutput() ComputeInstanceSchedulerHintArrayOutput
	ToComputeInstanceSchedulerHintArrayOutputWithContext(context.Context) ComputeInstanceSchedulerHintArrayOutput
}

type ComputeInstanceSchedulerHintArray []ComputeInstanceSchedulerHintInput

func (ComputeInstanceSchedulerHintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceSchedulerHint)(nil)).Elem()
}

func (i ComputeInstanceSchedulerHintArray) ToComputeInstanceSchedulerHintArrayOutput() ComputeInstanceSchedulerHintArrayOutput {
	return i.ToComputeInstanceSchedulerHintArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceSchedulerHintArray) ToComputeInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) ComputeInstanceSchedulerHintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSchedulerHintArrayOutput)
}

type ComputeInstanceSchedulerHintOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSchedulerHintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSchedulerHint)(nil)).Elem()
}

func (o ComputeInstanceSchedulerHintOutput) ToComputeInstanceSchedulerHintOutput() ComputeInstanceSchedulerHintOutput {
	return o
}

func (o ComputeInstanceSchedulerHintOutput) ToComputeInstanceSchedulerHintOutputWithContext(ctx context.Context) ComputeInstanceSchedulerHintOutput {
	return o
}

func (o ComputeInstanceSchedulerHintOutput) DehId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSchedulerHint) *string { return v.DehId }).(pulumi.StringPtrOutput)
}

// schema: Internal
func (o ComputeInstanceSchedulerHintOutput) FaultDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSchedulerHint) *string { return v.FaultDomain }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceSchedulerHintOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSchedulerHint) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceSchedulerHintOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSchedulerHint) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type ComputeInstanceSchedulerHintArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSchedulerHintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceSchedulerHint)(nil)).Elem()
}

func (o ComputeInstanceSchedulerHintArrayOutput) ToComputeInstanceSchedulerHintArrayOutput() ComputeInstanceSchedulerHintArrayOutput {
	return o
}

func (o ComputeInstanceSchedulerHintArrayOutput) ToComputeInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) ComputeInstanceSchedulerHintArrayOutput {
	return o
}

func (o ComputeInstanceSchedulerHintArrayOutput) Index(i pulumi.IntInput) ComputeInstanceSchedulerHintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceSchedulerHint {
		return vs[0].([]ComputeInstanceSchedulerHint)[vs[1].(int)]
	}).(ComputeInstanceSchedulerHintOutput)
}

type ComputeInstanceVolumeAttached struct {
	BootIndex  *int    `pulumi:"bootIndex"`
	KmsKeyId   *string `pulumi:"kmsKeyId"`
	PciAddress *string `pulumi:"pciAddress"`
	Size       *int    `pulumi:"size"`
	Type       *string `pulumi:"type"`
	VolumeId   *string `pulumi:"volumeId"`
}

// ComputeInstanceVolumeAttachedInput is an input type that accepts ComputeInstanceVolumeAttachedArgs and ComputeInstanceVolumeAttachedOutput values.
// You can construct a concrete instance of `ComputeInstanceVolumeAttachedInput` via:
//
//	ComputeInstanceVolumeAttachedArgs{...}
type ComputeInstanceVolumeAttachedInput interface {
	pulumi.Input

	ToComputeInstanceVolumeAttachedOutput() ComputeInstanceVolumeAttachedOutput
	ToComputeInstanceVolumeAttachedOutputWithContext(context.Context) ComputeInstanceVolumeAttachedOutput
}

type ComputeInstanceVolumeAttachedArgs struct {
	BootIndex  pulumi.IntPtrInput    `pulumi:"bootIndex"`
	KmsKeyId   pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	PciAddress pulumi.StringPtrInput `pulumi:"pciAddress"`
	Size       pulumi.IntPtrInput    `pulumi:"size"`
	Type       pulumi.StringPtrInput `pulumi:"type"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
}

func (ComputeInstanceVolumeAttachedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceVolumeAttached)(nil)).Elem()
}

func (i ComputeInstanceVolumeAttachedArgs) ToComputeInstanceVolumeAttachedOutput() ComputeInstanceVolumeAttachedOutput {
	return i.ToComputeInstanceVolumeAttachedOutputWithContext(context.Background())
}

func (i ComputeInstanceVolumeAttachedArgs) ToComputeInstanceVolumeAttachedOutputWithContext(ctx context.Context) ComputeInstanceVolumeAttachedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceVolumeAttachedOutput)
}

// ComputeInstanceVolumeAttachedArrayInput is an input type that accepts ComputeInstanceVolumeAttachedArray and ComputeInstanceVolumeAttachedArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceVolumeAttachedArrayInput` via:
//
//	ComputeInstanceVolumeAttachedArray{ ComputeInstanceVolumeAttachedArgs{...} }
type ComputeInstanceVolumeAttachedArrayInput interface {
	pulumi.Input

	ToComputeInstanceVolumeAttachedArrayOutput() ComputeInstanceVolumeAttachedArrayOutput
	ToComputeInstanceVolumeAttachedArrayOutputWithContext(context.Context) ComputeInstanceVolumeAttachedArrayOutput
}

type ComputeInstanceVolumeAttachedArray []ComputeInstanceVolumeAttachedInput

func (ComputeInstanceVolumeAttachedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceVolumeAttached)(nil)).Elem()
}

func (i ComputeInstanceVolumeAttachedArray) ToComputeInstanceVolumeAttachedArrayOutput() ComputeInstanceVolumeAttachedArrayOutput {
	return i.ToComputeInstanceVolumeAttachedArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceVolumeAttachedArray) ToComputeInstanceVolumeAttachedArrayOutputWithContext(ctx context.Context) ComputeInstanceVolumeAttachedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceVolumeAttachedArrayOutput)
}

type ComputeInstanceVolumeAttachedOutput struct{ *pulumi.OutputState }

func (ComputeInstanceVolumeAttachedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceVolumeAttached)(nil)).Elem()
}

func (o ComputeInstanceVolumeAttachedOutput) ToComputeInstanceVolumeAttachedOutput() ComputeInstanceVolumeAttachedOutput {
	return o
}

func (o ComputeInstanceVolumeAttachedOutput) ToComputeInstanceVolumeAttachedOutputWithContext(ctx context.Context) ComputeInstanceVolumeAttachedOutput {
	return o
}

func (o ComputeInstanceVolumeAttachedOutput) BootIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceVolumeAttached) *int { return v.BootIndex }).(pulumi.IntPtrOutput)
}

func (o ComputeInstanceVolumeAttachedOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceVolumeAttached) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceVolumeAttachedOutput) PciAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceVolumeAttached) *string { return v.PciAddress }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceVolumeAttachedOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeInstanceVolumeAttached) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o ComputeInstanceVolumeAttachedOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceVolumeAttached) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ComputeInstanceVolumeAttachedOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceVolumeAttached) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

type ComputeInstanceVolumeAttachedArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceVolumeAttachedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceVolumeAttached)(nil)).Elem()
}

func (o ComputeInstanceVolumeAttachedArrayOutput) ToComputeInstanceVolumeAttachedArrayOutput() ComputeInstanceVolumeAttachedArrayOutput {
	return o
}

func (o ComputeInstanceVolumeAttachedArrayOutput) ToComputeInstanceVolumeAttachedArrayOutputWithContext(ctx context.Context) ComputeInstanceVolumeAttachedArrayOutput {
	return o
}

func (o ComputeInstanceVolumeAttachedArrayOutput) Index(i pulumi.IntInput) ComputeInstanceVolumeAttachedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceVolumeAttached {
		return vs[0].([]ComputeInstanceVolumeAttached)[vs[1].(int)]
	}).(ComputeInstanceVolumeAttachedOutput)
}

type CssClusterBackupStrategy struct {
	Agency     *string `pulumi:"agency"`
	BackupPath *string `pulumi:"backupPath"`
	Bucket     *string `pulumi:"bucket"`
	KeepDays   *int    `pulumi:"keepDays"`
	Prefix     *string `pulumi:"prefix"`
	StartTime  string  `pulumi:"startTime"`
}

// CssClusterBackupStrategyInput is an input type that accepts CssClusterBackupStrategyArgs and CssClusterBackupStrategyOutput values.
// You can construct a concrete instance of `CssClusterBackupStrategyInput` via:
//
//	CssClusterBackupStrategyArgs{...}
type CssClusterBackupStrategyInput interface {
	pulumi.Input

	ToCssClusterBackupStrategyOutput() CssClusterBackupStrategyOutput
	ToCssClusterBackupStrategyOutputWithContext(context.Context) CssClusterBackupStrategyOutput
}

type CssClusterBackupStrategyArgs struct {
	Agency     pulumi.StringPtrInput `pulumi:"agency"`
	BackupPath pulumi.StringPtrInput `pulumi:"backupPath"`
	Bucket     pulumi.StringPtrInput `pulumi:"bucket"`
	KeepDays   pulumi.IntPtrInput    `pulumi:"keepDays"`
	Prefix     pulumi.StringPtrInput `pulumi:"prefix"`
	StartTime  pulumi.StringInput    `pulumi:"startTime"`
}

func (CssClusterBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterBackupStrategy)(nil)).Elem()
}

func (i CssClusterBackupStrategyArgs) ToCssClusterBackupStrategyOutput() CssClusterBackupStrategyOutput {
	return i.ToCssClusterBackupStrategyOutputWithContext(context.Background())
}

func (i CssClusterBackupStrategyArgs) ToCssClusterBackupStrategyOutputWithContext(ctx context.Context) CssClusterBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterBackupStrategyOutput)
}

func (i CssClusterBackupStrategyArgs) ToCssClusterBackupStrategyPtrOutput() CssClusterBackupStrategyPtrOutput {
	return i.ToCssClusterBackupStrategyPtrOutputWithContext(context.Background())
}

func (i CssClusterBackupStrategyArgs) ToCssClusterBackupStrategyPtrOutputWithContext(ctx context.Context) CssClusterBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterBackupStrategyOutput).ToCssClusterBackupStrategyPtrOutputWithContext(ctx)
}

// CssClusterBackupStrategyPtrInput is an input type that accepts CssClusterBackupStrategyArgs, CssClusterBackupStrategyPtr and CssClusterBackupStrategyPtrOutput values.
// You can construct a concrete instance of `CssClusterBackupStrategyPtrInput` via:
//
//	        CssClusterBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type CssClusterBackupStrategyPtrInput interface {
	pulumi.Input

	ToCssClusterBackupStrategyPtrOutput() CssClusterBackupStrategyPtrOutput
	ToCssClusterBackupStrategyPtrOutputWithContext(context.Context) CssClusterBackupStrategyPtrOutput
}

type cssClusterBackupStrategyPtrType CssClusterBackupStrategyArgs

func CssClusterBackupStrategyPtr(v *CssClusterBackupStrategyArgs) CssClusterBackupStrategyPtrInput {
	return (*cssClusterBackupStrategyPtrType)(v)
}

func (*cssClusterBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterBackupStrategy)(nil)).Elem()
}

func (i *cssClusterBackupStrategyPtrType) ToCssClusterBackupStrategyPtrOutput() CssClusterBackupStrategyPtrOutput {
	return i.ToCssClusterBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *cssClusterBackupStrategyPtrType) ToCssClusterBackupStrategyPtrOutputWithContext(ctx context.Context) CssClusterBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterBackupStrategyPtrOutput)
}

type CssClusterBackupStrategyOutput struct{ *pulumi.OutputState }

func (CssClusterBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterBackupStrategy)(nil)).Elem()
}

func (o CssClusterBackupStrategyOutput) ToCssClusterBackupStrategyOutput() CssClusterBackupStrategyOutput {
	return o
}

func (o CssClusterBackupStrategyOutput) ToCssClusterBackupStrategyOutputWithContext(ctx context.Context) CssClusterBackupStrategyOutput {
	return o
}

func (o CssClusterBackupStrategyOutput) ToCssClusterBackupStrategyPtrOutput() CssClusterBackupStrategyPtrOutput {
	return o.ToCssClusterBackupStrategyPtrOutputWithContext(context.Background())
}

func (o CssClusterBackupStrategyOutput) ToCssClusterBackupStrategyPtrOutputWithContext(ctx context.Context) CssClusterBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CssClusterBackupStrategy) *CssClusterBackupStrategy {
		return &v
	}).(CssClusterBackupStrategyPtrOutput)
}

func (o CssClusterBackupStrategyOutput) Agency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterBackupStrategy) *string { return v.Agency }).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyOutput) BackupPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterBackupStrategy) *string { return v.BackupPath }).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterBackupStrategy) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CssClusterBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

func (o CssClusterBackupStrategyOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterBackupStrategy) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v CssClusterBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type CssClusterBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (CssClusterBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterBackupStrategy)(nil)).Elem()
}

func (o CssClusterBackupStrategyPtrOutput) ToCssClusterBackupStrategyPtrOutput() CssClusterBackupStrategyPtrOutput {
	return o
}

func (o CssClusterBackupStrategyPtrOutput) ToCssClusterBackupStrategyPtrOutputWithContext(ctx context.Context) CssClusterBackupStrategyPtrOutput {
	return o
}

func (o CssClusterBackupStrategyPtrOutput) Elem() CssClusterBackupStrategyOutput {
	return o.ApplyT(func(v *CssClusterBackupStrategy) CssClusterBackupStrategy {
		if v != nil {
			return *v
		}
		var ret CssClusterBackupStrategy
		return ret
	}).(CssClusterBackupStrategyOutput)
}

func (o CssClusterBackupStrategyPtrOutput) Agency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Agency
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyPtrOutput) BackupPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return v.BackupPath
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CssClusterBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

func (o CssClusterBackupStrategyPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type CssClusterNode struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
	Type *string `pulumi:"type"`
}

// CssClusterNodeInput is an input type that accepts CssClusterNodeArgs and CssClusterNodeOutput values.
// You can construct a concrete instance of `CssClusterNodeInput` via:
//
//	CssClusterNodeArgs{...}
type CssClusterNodeInput interface {
	pulumi.Input

	ToCssClusterNodeOutput() CssClusterNodeOutput
	ToCssClusterNodeOutputWithContext(context.Context) CssClusterNodeOutput
}

type CssClusterNodeArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CssClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNode)(nil)).Elem()
}

func (i CssClusterNodeArgs) ToCssClusterNodeOutput() CssClusterNodeOutput {
	return i.ToCssClusterNodeOutputWithContext(context.Background())
}

func (i CssClusterNodeArgs) ToCssClusterNodeOutputWithContext(ctx context.Context) CssClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeOutput)
}

// CssClusterNodeArrayInput is an input type that accepts CssClusterNodeArray and CssClusterNodeArrayOutput values.
// You can construct a concrete instance of `CssClusterNodeArrayInput` via:
//
//	CssClusterNodeArray{ CssClusterNodeArgs{...} }
type CssClusterNodeArrayInput interface {
	pulumi.Input

	ToCssClusterNodeArrayOutput() CssClusterNodeArrayOutput
	ToCssClusterNodeArrayOutputWithContext(context.Context) CssClusterNodeArrayOutput
}

type CssClusterNodeArray []CssClusterNodeInput

func (CssClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CssClusterNode)(nil)).Elem()
}

func (i CssClusterNodeArray) ToCssClusterNodeArrayOutput() CssClusterNodeArrayOutput {
	return i.ToCssClusterNodeArrayOutputWithContext(context.Background())
}

func (i CssClusterNodeArray) ToCssClusterNodeArrayOutputWithContext(ctx context.Context) CssClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeArrayOutput)
}

type CssClusterNodeOutput struct{ *pulumi.OutputState }

func (CssClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNode)(nil)).Elem()
}

func (o CssClusterNodeOutput) ToCssClusterNodeOutput() CssClusterNodeOutput {
	return o
}

func (o CssClusterNodeOutput) ToCssClusterNodeOutputWithContext(ctx context.Context) CssClusterNodeOutput {
	return o
}

func (o CssClusterNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o CssClusterNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CssClusterNodeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterNode) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CssClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (CssClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CssClusterNode)(nil)).Elem()
}

func (o CssClusterNodeArrayOutput) ToCssClusterNodeArrayOutput() CssClusterNodeArrayOutput {
	return o
}

func (o CssClusterNodeArrayOutput) ToCssClusterNodeArrayOutputWithContext(ctx context.Context) CssClusterNodeArrayOutput {
	return o
}

func (o CssClusterNodeArrayOutput) Index(i pulumi.IntInput) CssClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CssClusterNode {
		return vs[0].([]CssClusterNode)[vs[1].(int)]
	}).(CssClusterNodeOutput)
}

type CssClusterNodeConfig struct {
	AvailabilityZone *string                         `pulumi:"availabilityZone"`
	Flavor           string                          `pulumi:"flavor"`
	NetworkInfo      CssClusterNodeConfigNetworkInfo `pulumi:"networkInfo"`
	Volume           CssClusterNodeConfigVolume      `pulumi:"volume"`
}

// CssClusterNodeConfigInput is an input type that accepts CssClusterNodeConfigArgs and CssClusterNodeConfigOutput values.
// You can construct a concrete instance of `CssClusterNodeConfigInput` via:
//
//	CssClusterNodeConfigArgs{...}
type CssClusterNodeConfigInput interface {
	pulumi.Input

	ToCssClusterNodeConfigOutput() CssClusterNodeConfigOutput
	ToCssClusterNodeConfigOutputWithContext(context.Context) CssClusterNodeConfigOutput
}

type CssClusterNodeConfigArgs struct {
	AvailabilityZone pulumi.StringPtrInput                `pulumi:"availabilityZone"`
	Flavor           pulumi.StringInput                   `pulumi:"flavor"`
	NetworkInfo      CssClusterNodeConfigNetworkInfoInput `pulumi:"networkInfo"`
	Volume           CssClusterNodeConfigVolumeInput      `pulumi:"volume"`
}

func (CssClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNodeConfig)(nil)).Elem()
}

func (i CssClusterNodeConfigArgs) ToCssClusterNodeConfigOutput() CssClusterNodeConfigOutput {
	return i.ToCssClusterNodeConfigOutputWithContext(context.Background())
}

func (i CssClusterNodeConfigArgs) ToCssClusterNodeConfigOutputWithContext(ctx context.Context) CssClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigOutput)
}

func (i CssClusterNodeConfigArgs) ToCssClusterNodeConfigPtrOutput() CssClusterNodeConfigPtrOutput {
	return i.ToCssClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i CssClusterNodeConfigArgs) ToCssClusterNodeConfigPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigOutput).ToCssClusterNodeConfigPtrOutputWithContext(ctx)
}

// CssClusterNodeConfigPtrInput is an input type that accepts CssClusterNodeConfigArgs, CssClusterNodeConfigPtr and CssClusterNodeConfigPtrOutput values.
// You can construct a concrete instance of `CssClusterNodeConfigPtrInput` via:
//
//	        CssClusterNodeConfigArgs{...}
//
//	or:
//
//	        nil
type CssClusterNodeConfigPtrInput interface {
	pulumi.Input

	ToCssClusterNodeConfigPtrOutput() CssClusterNodeConfigPtrOutput
	ToCssClusterNodeConfigPtrOutputWithContext(context.Context) CssClusterNodeConfigPtrOutput
}

type cssClusterNodeConfigPtrType CssClusterNodeConfigArgs

func CssClusterNodeConfigPtr(v *CssClusterNodeConfigArgs) CssClusterNodeConfigPtrInput {
	return (*cssClusterNodeConfigPtrType)(v)
}

func (*cssClusterNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterNodeConfig)(nil)).Elem()
}

func (i *cssClusterNodeConfigPtrType) ToCssClusterNodeConfigPtrOutput() CssClusterNodeConfigPtrOutput {
	return i.ToCssClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i *cssClusterNodeConfigPtrType) ToCssClusterNodeConfigPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigPtrOutput)
}

type CssClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (CssClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNodeConfig)(nil)).Elem()
}

func (o CssClusterNodeConfigOutput) ToCssClusterNodeConfigOutput() CssClusterNodeConfigOutput {
	return o
}

func (o CssClusterNodeConfigOutput) ToCssClusterNodeConfigOutputWithContext(ctx context.Context) CssClusterNodeConfigOutput {
	return o
}

func (o CssClusterNodeConfigOutput) ToCssClusterNodeConfigPtrOutput() CssClusterNodeConfigPtrOutput {
	return o.ToCssClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (o CssClusterNodeConfigOutput) ToCssClusterNodeConfigPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CssClusterNodeConfig) *CssClusterNodeConfig {
		return &v
	}).(CssClusterNodeConfigPtrOutput)
}

func (o CssClusterNodeConfigOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CssClusterNodeConfig) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o CssClusterNodeConfigOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v CssClusterNodeConfig) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o CssClusterNodeConfigOutput) NetworkInfo() CssClusterNodeConfigNetworkInfoOutput {
	return o.ApplyT(func(v CssClusterNodeConfig) CssClusterNodeConfigNetworkInfo { return v.NetworkInfo }).(CssClusterNodeConfigNetworkInfoOutput)
}

func (o CssClusterNodeConfigOutput) Volume() CssClusterNodeConfigVolumeOutput {
	return o.ApplyT(func(v CssClusterNodeConfig) CssClusterNodeConfigVolume { return v.Volume }).(CssClusterNodeConfigVolumeOutput)
}

type CssClusterNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (CssClusterNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterNodeConfig)(nil)).Elem()
}

func (o CssClusterNodeConfigPtrOutput) ToCssClusterNodeConfigPtrOutput() CssClusterNodeConfigPtrOutput {
	return o
}

func (o CssClusterNodeConfigPtrOutput) ToCssClusterNodeConfigPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigPtrOutput {
	return o
}

func (o CssClusterNodeConfigPtrOutput) Elem() CssClusterNodeConfigOutput {
	return o.ApplyT(func(v *CssClusterNodeConfig) CssClusterNodeConfig {
		if v != nil {
			return *v
		}
		var ret CssClusterNodeConfig
		return ret
	}).(CssClusterNodeConfigOutput)
}

func (o CssClusterNodeConfigPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterNodeConfigPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterNodeConfigPtrOutput) NetworkInfo() CssClusterNodeConfigNetworkInfoPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfig) *CssClusterNodeConfigNetworkInfo {
		if v == nil {
			return nil
		}
		return &v.NetworkInfo
	}).(CssClusterNodeConfigNetworkInfoPtrOutput)
}

func (o CssClusterNodeConfigPtrOutput) Volume() CssClusterNodeConfigVolumePtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfig) *CssClusterNodeConfigVolume {
		if v == nil {
			return nil
		}
		return &v.Volume
	}).(CssClusterNodeConfigVolumePtrOutput)
}

type CssClusterNodeConfigNetworkInfo struct {
	SecurityGroupId string `pulumi:"securityGroupId"`
	SubnetId        string `pulumi:"subnetId"`
	VpcId           string `pulumi:"vpcId"`
}

// CssClusterNodeConfigNetworkInfoInput is an input type that accepts CssClusterNodeConfigNetworkInfoArgs and CssClusterNodeConfigNetworkInfoOutput values.
// You can construct a concrete instance of `CssClusterNodeConfigNetworkInfoInput` via:
//
//	CssClusterNodeConfigNetworkInfoArgs{...}
type CssClusterNodeConfigNetworkInfoInput interface {
	pulumi.Input

	ToCssClusterNodeConfigNetworkInfoOutput() CssClusterNodeConfigNetworkInfoOutput
	ToCssClusterNodeConfigNetworkInfoOutputWithContext(context.Context) CssClusterNodeConfigNetworkInfoOutput
}

type CssClusterNodeConfigNetworkInfoArgs struct {
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	SubnetId        pulumi.StringInput `pulumi:"subnetId"`
	VpcId           pulumi.StringInput `pulumi:"vpcId"`
}

func (CssClusterNodeConfigNetworkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNodeConfigNetworkInfo)(nil)).Elem()
}

func (i CssClusterNodeConfigNetworkInfoArgs) ToCssClusterNodeConfigNetworkInfoOutput() CssClusterNodeConfigNetworkInfoOutput {
	return i.ToCssClusterNodeConfigNetworkInfoOutputWithContext(context.Background())
}

func (i CssClusterNodeConfigNetworkInfoArgs) ToCssClusterNodeConfigNetworkInfoOutputWithContext(ctx context.Context) CssClusterNodeConfigNetworkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigNetworkInfoOutput)
}

func (i CssClusterNodeConfigNetworkInfoArgs) ToCssClusterNodeConfigNetworkInfoPtrOutput() CssClusterNodeConfigNetworkInfoPtrOutput {
	return i.ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(context.Background())
}

func (i CssClusterNodeConfigNetworkInfoArgs) ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigNetworkInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigNetworkInfoOutput).ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(ctx)
}

// CssClusterNodeConfigNetworkInfoPtrInput is an input type that accepts CssClusterNodeConfigNetworkInfoArgs, CssClusterNodeConfigNetworkInfoPtr and CssClusterNodeConfigNetworkInfoPtrOutput values.
// You can construct a concrete instance of `CssClusterNodeConfigNetworkInfoPtrInput` via:
//
//	        CssClusterNodeConfigNetworkInfoArgs{...}
//
//	or:
//
//	        nil
type CssClusterNodeConfigNetworkInfoPtrInput interface {
	pulumi.Input

	ToCssClusterNodeConfigNetworkInfoPtrOutput() CssClusterNodeConfigNetworkInfoPtrOutput
	ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(context.Context) CssClusterNodeConfigNetworkInfoPtrOutput
}

type cssClusterNodeConfigNetworkInfoPtrType CssClusterNodeConfigNetworkInfoArgs

func CssClusterNodeConfigNetworkInfoPtr(v *CssClusterNodeConfigNetworkInfoArgs) CssClusterNodeConfigNetworkInfoPtrInput {
	return (*cssClusterNodeConfigNetworkInfoPtrType)(v)
}

func (*cssClusterNodeConfigNetworkInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterNodeConfigNetworkInfo)(nil)).Elem()
}

func (i *cssClusterNodeConfigNetworkInfoPtrType) ToCssClusterNodeConfigNetworkInfoPtrOutput() CssClusterNodeConfigNetworkInfoPtrOutput {
	return i.ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(context.Background())
}

func (i *cssClusterNodeConfigNetworkInfoPtrType) ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigNetworkInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigNetworkInfoPtrOutput)
}

type CssClusterNodeConfigNetworkInfoOutput struct{ *pulumi.OutputState }

func (CssClusterNodeConfigNetworkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNodeConfigNetworkInfo)(nil)).Elem()
}

func (o CssClusterNodeConfigNetworkInfoOutput) ToCssClusterNodeConfigNetworkInfoOutput() CssClusterNodeConfigNetworkInfoOutput {
	return o
}

func (o CssClusterNodeConfigNetworkInfoOutput) ToCssClusterNodeConfigNetworkInfoOutputWithContext(ctx context.Context) CssClusterNodeConfigNetworkInfoOutput {
	return o
}

func (o CssClusterNodeConfigNetworkInfoOutput) ToCssClusterNodeConfigNetworkInfoPtrOutput() CssClusterNodeConfigNetworkInfoPtrOutput {
	return o.ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(context.Background())
}

func (o CssClusterNodeConfigNetworkInfoOutput) ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigNetworkInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CssClusterNodeConfigNetworkInfo) *CssClusterNodeConfigNetworkInfo {
		return &v
	}).(CssClusterNodeConfigNetworkInfoPtrOutput)
}

func (o CssClusterNodeConfigNetworkInfoOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v CssClusterNodeConfigNetworkInfo) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o CssClusterNodeConfigNetworkInfoOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v CssClusterNodeConfigNetworkInfo) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o CssClusterNodeConfigNetworkInfoOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v CssClusterNodeConfigNetworkInfo) string { return v.VpcId }).(pulumi.StringOutput)
}

type CssClusterNodeConfigNetworkInfoPtrOutput struct{ *pulumi.OutputState }

func (CssClusterNodeConfigNetworkInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterNodeConfigNetworkInfo)(nil)).Elem()
}

func (o CssClusterNodeConfigNetworkInfoPtrOutput) ToCssClusterNodeConfigNetworkInfoPtrOutput() CssClusterNodeConfigNetworkInfoPtrOutput {
	return o
}

func (o CssClusterNodeConfigNetworkInfoPtrOutput) ToCssClusterNodeConfigNetworkInfoPtrOutputWithContext(ctx context.Context) CssClusterNodeConfigNetworkInfoPtrOutput {
	return o
}

func (o CssClusterNodeConfigNetworkInfoPtrOutput) Elem() CssClusterNodeConfigNetworkInfoOutput {
	return o.ApplyT(func(v *CssClusterNodeConfigNetworkInfo) CssClusterNodeConfigNetworkInfo {
		if v != nil {
			return *v
		}
		var ret CssClusterNodeConfigNetworkInfo
		return ret
	}).(CssClusterNodeConfigNetworkInfoOutput)
}

func (o CssClusterNodeConfigNetworkInfoPtrOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfigNetworkInfo) *string {
		if v == nil {
			return nil
		}
		return &v.SecurityGroupId
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterNodeConfigNetworkInfoPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfigNetworkInfo) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func (o CssClusterNodeConfigNetworkInfoPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfigNetworkInfo) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type CssClusterNodeConfigVolume struct {
	Size       int    `pulumi:"size"`
	VolumeType string `pulumi:"volumeType"`
}

// CssClusterNodeConfigVolumeInput is an input type that accepts CssClusterNodeConfigVolumeArgs and CssClusterNodeConfigVolumeOutput values.
// You can construct a concrete instance of `CssClusterNodeConfigVolumeInput` via:
//
//	CssClusterNodeConfigVolumeArgs{...}
type CssClusterNodeConfigVolumeInput interface {
	pulumi.Input

	ToCssClusterNodeConfigVolumeOutput() CssClusterNodeConfigVolumeOutput
	ToCssClusterNodeConfigVolumeOutputWithContext(context.Context) CssClusterNodeConfigVolumeOutput
}

type CssClusterNodeConfigVolumeArgs struct {
	Size       pulumi.IntInput    `pulumi:"size"`
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (CssClusterNodeConfigVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNodeConfigVolume)(nil)).Elem()
}

func (i CssClusterNodeConfigVolumeArgs) ToCssClusterNodeConfigVolumeOutput() CssClusterNodeConfigVolumeOutput {
	return i.ToCssClusterNodeConfigVolumeOutputWithContext(context.Background())
}

func (i CssClusterNodeConfigVolumeArgs) ToCssClusterNodeConfigVolumeOutputWithContext(ctx context.Context) CssClusterNodeConfigVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigVolumeOutput)
}

func (i CssClusterNodeConfigVolumeArgs) ToCssClusterNodeConfigVolumePtrOutput() CssClusterNodeConfigVolumePtrOutput {
	return i.ToCssClusterNodeConfigVolumePtrOutputWithContext(context.Background())
}

func (i CssClusterNodeConfigVolumeArgs) ToCssClusterNodeConfigVolumePtrOutputWithContext(ctx context.Context) CssClusterNodeConfigVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigVolumeOutput).ToCssClusterNodeConfigVolumePtrOutputWithContext(ctx)
}

// CssClusterNodeConfigVolumePtrInput is an input type that accepts CssClusterNodeConfigVolumeArgs, CssClusterNodeConfigVolumePtr and CssClusterNodeConfigVolumePtrOutput values.
// You can construct a concrete instance of `CssClusterNodeConfigVolumePtrInput` via:
//
//	        CssClusterNodeConfigVolumeArgs{...}
//
//	or:
//
//	        nil
type CssClusterNodeConfigVolumePtrInput interface {
	pulumi.Input

	ToCssClusterNodeConfigVolumePtrOutput() CssClusterNodeConfigVolumePtrOutput
	ToCssClusterNodeConfigVolumePtrOutputWithContext(context.Context) CssClusterNodeConfigVolumePtrOutput
}

type cssClusterNodeConfigVolumePtrType CssClusterNodeConfigVolumeArgs

func CssClusterNodeConfigVolumePtr(v *CssClusterNodeConfigVolumeArgs) CssClusterNodeConfigVolumePtrInput {
	return (*cssClusterNodeConfigVolumePtrType)(v)
}

func (*cssClusterNodeConfigVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterNodeConfigVolume)(nil)).Elem()
}

func (i *cssClusterNodeConfigVolumePtrType) ToCssClusterNodeConfigVolumePtrOutput() CssClusterNodeConfigVolumePtrOutput {
	return i.ToCssClusterNodeConfigVolumePtrOutputWithContext(context.Background())
}

func (i *cssClusterNodeConfigVolumePtrType) ToCssClusterNodeConfigVolumePtrOutputWithContext(ctx context.Context) CssClusterNodeConfigVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssClusterNodeConfigVolumePtrOutput)
}

type CssClusterNodeConfigVolumeOutput struct{ *pulumi.OutputState }

func (CssClusterNodeConfigVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CssClusterNodeConfigVolume)(nil)).Elem()
}

func (o CssClusterNodeConfigVolumeOutput) ToCssClusterNodeConfigVolumeOutput() CssClusterNodeConfigVolumeOutput {
	return o
}

func (o CssClusterNodeConfigVolumeOutput) ToCssClusterNodeConfigVolumeOutputWithContext(ctx context.Context) CssClusterNodeConfigVolumeOutput {
	return o
}

func (o CssClusterNodeConfigVolumeOutput) ToCssClusterNodeConfigVolumePtrOutput() CssClusterNodeConfigVolumePtrOutput {
	return o.ToCssClusterNodeConfigVolumePtrOutputWithContext(context.Background())
}

func (o CssClusterNodeConfigVolumeOutput) ToCssClusterNodeConfigVolumePtrOutputWithContext(ctx context.Context) CssClusterNodeConfigVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CssClusterNodeConfigVolume) *CssClusterNodeConfigVolume {
		return &v
	}).(CssClusterNodeConfigVolumePtrOutput)
}

func (o CssClusterNodeConfigVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v CssClusterNodeConfigVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o CssClusterNodeConfigVolumeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v CssClusterNodeConfigVolume) string { return v.VolumeType }).(pulumi.StringOutput)
}

type CssClusterNodeConfigVolumePtrOutput struct{ *pulumi.OutputState }

func (CssClusterNodeConfigVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CssClusterNodeConfigVolume)(nil)).Elem()
}

func (o CssClusterNodeConfigVolumePtrOutput) ToCssClusterNodeConfigVolumePtrOutput() CssClusterNodeConfigVolumePtrOutput {
	return o
}

func (o CssClusterNodeConfigVolumePtrOutput) ToCssClusterNodeConfigVolumePtrOutputWithContext(ctx context.Context) CssClusterNodeConfigVolumePtrOutput {
	return o
}

func (o CssClusterNodeConfigVolumePtrOutput) Elem() CssClusterNodeConfigVolumeOutput {
	return o.ApplyT(func(v *CssClusterNodeConfigVolume) CssClusterNodeConfigVolume {
		if v != nil {
			return *v
		}
		var ret CssClusterNodeConfigVolume
		return ret
	}).(CssClusterNodeConfigVolumeOutput)
}

func (o CssClusterNodeConfigVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfigVolume) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

func (o CssClusterNodeConfigVolumePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CssClusterNodeConfigVolume) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type CtsNotificationFilter struct {
	Condition string   `pulumi:"condition"`
	Rules     []string `pulumi:"rules"`
}

// CtsNotificationFilterInput is an input type that accepts CtsNotificationFilterArgs and CtsNotificationFilterOutput values.
// You can construct a concrete instance of `CtsNotificationFilterInput` via:
//
//	CtsNotificationFilterArgs{...}
type CtsNotificationFilterInput interface {
	pulumi.Input

	ToCtsNotificationFilterOutput() CtsNotificationFilterOutput
	ToCtsNotificationFilterOutputWithContext(context.Context) CtsNotificationFilterOutput
}

type CtsNotificationFilterArgs struct {
	Condition pulumi.StringInput      `pulumi:"condition"`
	Rules     pulumi.StringArrayInput `pulumi:"rules"`
}

func (CtsNotificationFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CtsNotificationFilter)(nil)).Elem()
}

func (i CtsNotificationFilterArgs) ToCtsNotificationFilterOutput() CtsNotificationFilterOutput {
	return i.ToCtsNotificationFilterOutputWithContext(context.Background())
}

func (i CtsNotificationFilterArgs) ToCtsNotificationFilterOutputWithContext(ctx context.Context) CtsNotificationFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CtsNotificationFilterOutput)
}

func (i CtsNotificationFilterArgs) ToCtsNotificationFilterPtrOutput() CtsNotificationFilterPtrOutput {
	return i.ToCtsNotificationFilterPtrOutputWithContext(context.Background())
}

func (i CtsNotificationFilterArgs) ToCtsNotificationFilterPtrOutputWithContext(ctx context.Context) CtsNotificationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CtsNotificationFilterOutput).ToCtsNotificationFilterPtrOutputWithContext(ctx)
}

// CtsNotificationFilterPtrInput is an input type that accepts CtsNotificationFilterArgs, CtsNotificationFilterPtr and CtsNotificationFilterPtrOutput values.
// You can construct a concrete instance of `CtsNotificationFilterPtrInput` via:
//
//	        CtsNotificationFilterArgs{...}
//
//	or:
//
//	        nil
type CtsNotificationFilterPtrInput interface {
	pulumi.Input

	ToCtsNotificationFilterPtrOutput() CtsNotificationFilterPtrOutput
	ToCtsNotificationFilterPtrOutputWithContext(context.Context) CtsNotificationFilterPtrOutput
}

type ctsNotificationFilterPtrType CtsNotificationFilterArgs

func CtsNotificationFilterPtr(v *CtsNotificationFilterArgs) CtsNotificationFilterPtrInput {
	return (*ctsNotificationFilterPtrType)(v)
}

func (*ctsNotificationFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CtsNotificationFilter)(nil)).Elem()
}

func (i *ctsNotificationFilterPtrType) ToCtsNotificationFilterPtrOutput() CtsNotificationFilterPtrOutput {
	return i.ToCtsNotificationFilterPtrOutputWithContext(context.Background())
}

func (i *ctsNotificationFilterPtrType) ToCtsNotificationFilterPtrOutputWithContext(ctx context.Context) CtsNotificationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CtsNotificationFilterPtrOutput)
}

type CtsNotificationFilterOutput struct{ *pulumi.OutputState }

func (CtsNotificationFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CtsNotificationFilter)(nil)).Elem()
}

func (o CtsNotificationFilterOutput) ToCtsNotificationFilterOutput() CtsNotificationFilterOutput {
	return o
}

func (o CtsNotificationFilterOutput) ToCtsNotificationFilterOutputWithContext(ctx context.Context) CtsNotificationFilterOutput {
	return o
}

func (o CtsNotificationFilterOutput) ToCtsNotificationFilterPtrOutput() CtsNotificationFilterPtrOutput {
	return o.ToCtsNotificationFilterPtrOutputWithContext(context.Background())
}

func (o CtsNotificationFilterOutput) ToCtsNotificationFilterPtrOutputWithContext(ctx context.Context) CtsNotificationFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CtsNotificationFilter) *CtsNotificationFilter {
		return &v
	}).(CtsNotificationFilterPtrOutput)
}

func (o CtsNotificationFilterOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v CtsNotificationFilter) string { return v.Condition }).(pulumi.StringOutput)
}

func (o CtsNotificationFilterOutput) Rules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CtsNotificationFilter) []string { return v.Rules }).(pulumi.StringArrayOutput)
}

type CtsNotificationFilterPtrOutput struct{ *pulumi.OutputState }

func (CtsNotificationFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CtsNotificationFilter)(nil)).Elem()
}

func (o CtsNotificationFilterPtrOutput) ToCtsNotificationFilterPtrOutput() CtsNotificationFilterPtrOutput {
	return o
}

func (o CtsNotificationFilterPtrOutput) ToCtsNotificationFilterPtrOutputWithContext(ctx context.Context) CtsNotificationFilterPtrOutput {
	return o
}

func (o CtsNotificationFilterPtrOutput) Elem() CtsNotificationFilterOutput {
	return o.ApplyT(func(v *CtsNotificationFilter) CtsNotificationFilter {
		if v != nil {
			return *v
		}
		var ret CtsNotificationFilter
		return ret
	}).(CtsNotificationFilterOutput)
}

func (o CtsNotificationFilterPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CtsNotificationFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(pulumi.StringPtrOutput)
}

func (o CtsNotificationFilterPtrOutput) Rules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CtsNotificationFilter) []string {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(pulumi.StringArrayOutput)
}

type CtsNotificationOperation struct {
	Resource   string   `pulumi:"resource"`
	Service    string   `pulumi:"service"`
	TraceNames []string `pulumi:"traceNames"`
}

// CtsNotificationOperationInput is an input type that accepts CtsNotificationOperationArgs and CtsNotificationOperationOutput values.
// You can construct a concrete instance of `CtsNotificationOperationInput` via:
//
//	CtsNotificationOperationArgs{...}
type CtsNotificationOperationInput interface {
	pulumi.Input

	ToCtsNotificationOperationOutput() CtsNotificationOperationOutput
	ToCtsNotificationOperationOutputWithContext(context.Context) CtsNotificationOperationOutput
}

type CtsNotificationOperationArgs struct {
	Resource   pulumi.StringInput      `pulumi:"resource"`
	Service    pulumi.StringInput      `pulumi:"service"`
	TraceNames pulumi.StringArrayInput `pulumi:"traceNames"`
}

func (CtsNotificationOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CtsNotificationOperation)(nil)).Elem()
}

func (i CtsNotificationOperationArgs) ToCtsNotificationOperationOutput() CtsNotificationOperationOutput {
	return i.ToCtsNotificationOperationOutputWithContext(context.Background())
}

func (i CtsNotificationOperationArgs) ToCtsNotificationOperationOutputWithContext(ctx context.Context) CtsNotificationOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CtsNotificationOperationOutput)
}

// CtsNotificationOperationArrayInput is an input type that accepts CtsNotificationOperationArray and CtsNotificationOperationArrayOutput values.
// You can construct a concrete instance of `CtsNotificationOperationArrayInput` via:
//
//	CtsNotificationOperationArray{ CtsNotificationOperationArgs{...} }
type CtsNotificationOperationArrayInput interface {
	pulumi.Input

	ToCtsNotificationOperationArrayOutput() CtsNotificationOperationArrayOutput
	ToCtsNotificationOperationArrayOutputWithContext(context.Context) CtsNotificationOperationArrayOutput
}

type CtsNotificationOperationArray []CtsNotificationOperationInput

func (CtsNotificationOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CtsNotificationOperation)(nil)).Elem()
}

func (i CtsNotificationOperationArray) ToCtsNotificationOperationArrayOutput() CtsNotificationOperationArrayOutput {
	return i.ToCtsNotificationOperationArrayOutputWithContext(context.Background())
}

func (i CtsNotificationOperationArray) ToCtsNotificationOperationArrayOutputWithContext(ctx context.Context) CtsNotificationOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CtsNotificationOperationArrayOutput)
}

type CtsNotificationOperationOutput struct{ *pulumi.OutputState }

func (CtsNotificationOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CtsNotificationOperation)(nil)).Elem()
}

func (o CtsNotificationOperationOutput) ToCtsNotificationOperationOutput() CtsNotificationOperationOutput {
	return o
}

func (o CtsNotificationOperationOutput) ToCtsNotificationOperationOutputWithContext(ctx context.Context) CtsNotificationOperationOutput {
	return o
}

func (o CtsNotificationOperationOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v CtsNotificationOperation) string { return v.Resource }).(pulumi.StringOutput)
}

func (o CtsNotificationOperationOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v CtsNotificationOperation) string { return v.Service }).(pulumi.StringOutput)
}

func (o CtsNotificationOperationOutput) TraceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CtsNotificationOperation) []string { return v.TraceNames }).(pulumi.StringArrayOutput)
}

type CtsNotificationOperationArrayOutput struct{ *pulumi.OutputState }

func (CtsNotificationOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CtsNotificationOperation)(nil)).Elem()
}

func (o CtsNotificationOperationArrayOutput) ToCtsNotificationOperationArrayOutput() CtsNotificationOperationArrayOutput {
	return o
}

func (o CtsNotificationOperationArrayOutput) ToCtsNotificationOperationArrayOutputWithContext(ctx context.Context) CtsNotificationOperationArrayOutput {
	return o
}

func (o CtsNotificationOperationArrayOutput) Index(i pulumi.IntInput) CtsNotificationOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CtsNotificationOperation {
		return vs[0].([]CtsNotificationOperation)[vs[1].(int)]
	}).(CtsNotificationOperationOutput)
}

type CtsNotificationOperationUser struct {
	Group string   `pulumi:"group"`
	Users []string `pulumi:"users"`
}

// CtsNotificationOperationUserInput is an input type that accepts CtsNotificationOperationUserArgs and CtsNotificationOperationUserOutput values.
// You can construct a concrete instance of `CtsNotificationOperationUserInput` via:
//
//	CtsNotificationOperationUserArgs{...}
type CtsNotificationOperationUserInput interface {
	pulumi.Input

	ToCtsNotificationOperationUserOutput() CtsNotificationOperationUserOutput
	ToCtsNotificationOperationUserOutputWithContext(context.Context) CtsNotificationOperationUserOutput
}

type CtsNotificationOperationUserArgs struct {
	Group pulumi.StringInput      `pulumi:"group"`
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (CtsNotificationOperationUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CtsNotificationOperationUser)(nil)).Elem()
}

func (i CtsNotificationOperationUserArgs) ToCtsNotificationOperationUserOutput() CtsNotificationOperationUserOutput {
	return i.ToCtsNotificationOperationUserOutputWithContext(context.Background())
}

func (i CtsNotificationOperationUserArgs) ToCtsNotificationOperationUserOutputWithContext(ctx context.Context) CtsNotificationOperationUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CtsNotificationOperationUserOutput)
}

// CtsNotificationOperationUserArrayInput is an input type that accepts CtsNotificationOperationUserArray and CtsNotificationOperationUserArrayOutput values.
// You can construct a concrete instance of `CtsNotificationOperationUserArrayInput` via:
//
//	CtsNotificationOperationUserArray{ CtsNotificationOperationUserArgs{...} }
type CtsNotificationOperationUserArrayInput interface {
	pulumi.Input

	ToCtsNotificationOperationUserArrayOutput() CtsNotificationOperationUserArrayOutput
	ToCtsNotificationOperationUserArrayOutputWithContext(context.Context) CtsNotificationOperationUserArrayOutput
}

type CtsNotificationOperationUserArray []CtsNotificationOperationUserInput

func (CtsNotificationOperationUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CtsNotificationOperationUser)(nil)).Elem()
}

func (i CtsNotificationOperationUserArray) ToCtsNotificationOperationUserArrayOutput() CtsNotificationOperationUserArrayOutput {
	return i.ToCtsNotificationOperationUserArrayOutputWithContext(context.Background())
}

func (i CtsNotificationOperationUserArray) ToCtsNotificationOperationUserArrayOutputWithContext(ctx context.Context) CtsNotificationOperationUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CtsNotificationOperationUserArrayOutput)
}

type CtsNotificationOperationUserOutput struct{ *pulumi.OutputState }

func (CtsNotificationOperationUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CtsNotificationOperationUser)(nil)).Elem()
}

func (o CtsNotificationOperationUserOutput) ToCtsNotificationOperationUserOutput() CtsNotificationOperationUserOutput {
	return o
}

func (o CtsNotificationOperationUserOutput) ToCtsNotificationOperationUserOutputWithContext(ctx context.Context) CtsNotificationOperationUserOutput {
	return o
}

func (o CtsNotificationOperationUserOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v CtsNotificationOperationUser) string { return v.Group }).(pulumi.StringOutput)
}

func (o CtsNotificationOperationUserOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CtsNotificationOperationUser) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type CtsNotificationOperationUserArrayOutput struct{ *pulumi.OutputState }

func (CtsNotificationOperationUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CtsNotificationOperationUser)(nil)).Elem()
}

func (o CtsNotificationOperationUserArrayOutput) ToCtsNotificationOperationUserArrayOutput() CtsNotificationOperationUserArrayOutput {
	return o
}

func (o CtsNotificationOperationUserArrayOutput) ToCtsNotificationOperationUserArrayOutputWithContext(ctx context.Context) CtsNotificationOperationUserArrayOutput {
	return o
}

func (o CtsNotificationOperationUserArrayOutput) Index(i pulumi.IntInput) CtsNotificationOperationUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CtsNotificationOperationUser {
		return vs[0].([]CtsNotificationOperationUser)[vs[1].(int)]
	}).(CtsNotificationOperationUserOutput)
}

type DcsInstanceBackupPolicy struct {
	BackupAts  []int   `pulumi:"backupAts"`
	BackupType *string `pulumi:"backupType"`
	BeginAt    string  `pulumi:"beginAt"`
	PeriodType *string `pulumi:"periodType"`
	SaveDays   *int    `pulumi:"saveDays"`
}

// DcsInstanceBackupPolicyInput is an input type that accepts DcsInstanceBackupPolicyArgs and DcsInstanceBackupPolicyOutput values.
// You can construct a concrete instance of `DcsInstanceBackupPolicyInput` via:
//
//	DcsInstanceBackupPolicyArgs{...}
type DcsInstanceBackupPolicyInput interface {
	pulumi.Input

	ToDcsInstanceBackupPolicyOutput() DcsInstanceBackupPolicyOutput
	ToDcsInstanceBackupPolicyOutputWithContext(context.Context) DcsInstanceBackupPolicyOutput
}

type DcsInstanceBackupPolicyArgs struct {
	BackupAts  pulumi.IntArrayInput  `pulumi:"backupAts"`
	BackupType pulumi.StringPtrInput `pulumi:"backupType"`
	BeginAt    pulumi.StringInput    `pulumi:"beginAt"`
	PeriodType pulumi.StringPtrInput `pulumi:"periodType"`
	SaveDays   pulumi.IntPtrInput    `pulumi:"saveDays"`
}

func (DcsInstanceBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceBackupPolicy)(nil)).Elem()
}

func (i DcsInstanceBackupPolicyArgs) ToDcsInstanceBackupPolicyOutput() DcsInstanceBackupPolicyOutput {
	return i.ToDcsInstanceBackupPolicyOutputWithContext(context.Background())
}

func (i DcsInstanceBackupPolicyArgs) ToDcsInstanceBackupPolicyOutputWithContext(ctx context.Context) DcsInstanceBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceBackupPolicyOutput)
}

func (i DcsInstanceBackupPolicyArgs) ToDcsInstanceBackupPolicyPtrOutput() DcsInstanceBackupPolicyPtrOutput {
	return i.ToDcsInstanceBackupPolicyPtrOutputWithContext(context.Background())
}

func (i DcsInstanceBackupPolicyArgs) ToDcsInstanceBackupPolicyPtrOutputWithContext(ctx context.Context) DcsInstanceBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceBackupPolicyOutput).ToDcsInstanceBackupPolicyPtrOutputWithContext(ctx)
}

// DcsInstanceBackupPolicyPtrInput is an input type that accepts DcsInstanceBackupPolicyArgs, DcsInstanceBackupPolicyPtr and DcsInstanceBackupPolicyPtrOutput values.
// You can construct a concrete instance of `DcsInstanceBackupPolicyPtrInput` via:
//
//	        DcsInstanceBackupPolicyArgs{...}
//
//	or:
//
//	        nil
type DcsInstanceBackupPolicyPtrInput interface {
	pulumi.Input

	ToDcsInstanceBackupPolicyPtrOutput() DcsInstanceBackupPolicyPtrOutput
	ToDcsInstanceBackupPolicyPtrOutputWithContext(context.Context) DcsInstanceBackupPolicyPtrOutput
}

type dcsInstanceBackupPolicyPtrType DcsInstanceBackupPolicyArgs

func DcsInstanceBackupPolicyPtr(v *DcsInstanceBackupPolicyArgs) DcsInstanceBackupPolicyPtrInput {
	return (*dcsInstanceBackupPolicyPtrType)(v)
}

func (*dcsInstanceBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DcsInstanceBackupPolicy)(nil)).Elem()
}

func (i *dcsInstanceBackupPolicyPtrType) ToDcsInstanceBackupPolicyPtrOutput() DcsInstanceBackupPolicyPtrOutput {
	return i.ToDcsInstanceBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *dcsInstanceBackupPolicyPtrType) ToDcsInstanceBackupPolicyPtrOutputWithContext(ctx context.Context) DcsInstanceBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceBackupPolicyPtrOutput)
}

type DcsInstanceBackupPolicyOutput struct{ *pulumi.OutputState }

func (DcsInstanceBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceBackupPolicy)(nil)).Elem()
}

func (o DcsInstanceBackupPolicyOutput) ToDcsInstanceBackupPolicyOutput() DcsInstanceBackupPolicyOutput {
	return o
}

func (o DcsInstanceBackupPolicyOutput) ToDcsInstanceBackupPolicyOutputWithContext(ctx context.Context) DcsInstanceBackupPolicyOutput {
	return o
}

func (o DcsInstanceBackupPolicyOutput) ToDcsInstanceBackupPolicyPtrOutput() DcsInstanceBackupPolicyPtrOutput {
	return o.ToDcsInstanceBackupPolicyPtrOutputWithContext(context.Background())
}

func (o DcsInstanceBackupPolicyOutput) ToDcsInstanceBackupPolicyPtrOutputWithContext(ctx context.Context) DcsInstanceBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DcsInstanceBackupPolicy) *DcsInstanceBackupPolicy {
		return &v
	}).(DcsInstanceBackupPolicyPtrOutput)
}

func (o DcsInstanceBackupPolicyOutput) BackupAts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DcsInstanceBackupPolicy) []int { return v.BackupAts }).(pulumi.IntArrayOutput)
}

func (o DcsInstanceBackupPolicyOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsInstanceBackupPolicy) *string { return v.BackupType }).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBackupPolicyOutput) BeginAt() pulumi.StringOutput {
	return o.ApplyT(func(v DcsInstanceBackupPolicy) string { return v.BeginAt }).(pulumi.StringOutput)
}

func (o DcsInstanceBackupPolicyOutput) PeriodType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsInstanceBackupPolicy) *string { return v.PeriodType }).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBackupPolicyOutput) SaveDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DcsInstanceBackupPolicy) *int { return v.SaveDays }).(pulumi.IntPtrOutput)
}

type DcsInstanceBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (DcsInstanceBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DcsInstanceBackupPolicy)(nil)).Elem()
}

func (o DcsInstanceBackupPolicyPtrOutput) ToDcsInstanceBackupPolicyPtrOutput() DcsInstanceBackupPolicyPtrOutput {
	return o
}

func (o DcsInstanceBackupPolicyPtrOutput) ToDcsInstanceBackupPolicyPtrOutputWithContext(ctx context.Context) DcsInstanceBackupPolicyPtrOutput {
	return o
}

func (o DcsInstanceBackupPolicyPtrOutput) Elem() DcsInstanceBackupPolicyOutput {
	return o.ApplyT(func(v *DcsInstanceBackupPolicy) DcsInstanceBackupPolicy {
		if v != nil {
			return *v
		}
		var ret DcsInstanceBackupPolicy
		return ret
	}).(DcsInstanceBackupPolicyOutput)
}

func (o DcsInstanceBackupPolicyPtrOutput) BackupAts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DcsInstanceBackupPolicy) []int {
		if v == nil {
			return nil
		}
		return v.BackupAts
	}).(pulumi.IntArrayOutput)
}

func (o DcsInstanceBackupPolicyPtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DcsInstanceBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.BackupType
	}).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBackupPolicyPtrOutput) BeginAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DcsInstanceBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BeginAt
	}).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBackupPolicyPtrOutput) PeriodType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DcsInstanceBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PeriodType
	}).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBackupPolicyPtrOutput) SaveDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DcsInstanceBackupPolicy) *int {
		if v == nil {
			return nil
		}
		return v.SaveDays
	}).(pulumi.IntPtrOutput)
}

type DcsInstanceBandwidthInfo struct {
	Bandwidth          *int    `pulumi:"bandwidth"`
	BeginTime          *string `pulumi:"beginTime"`
	CurrentTime        *string `pulumi:"currentTime"`
	EndTime            *string `pulumi:"endTime"`
	ExpandCount        *int    `pulumi:"expandCount"`
	ExpandEffectTime   *int    `pulumi:"expandEffectTime"`
	ExpandIntervalTime *int    `pulumi:"expandIntervalTime"`
	MaxExpandCount     *int    `pulumi:"maxExpandCount"`
	NextExpandTime     *string `pulumi:"nextExpandTime"`
	TaskRunning        *bool   `pulumi:"taskRunning"`
}

// DcsInstanceBandwidthInfoInput is an input type that accepts DcsInstanceBandwidthInfoArgs and DcsInstanceBandwidthInfoOutput values.
// You can construct a concrete instance of `DcsInstanceBandwidthInfoInput` via:
//
//	DcsInstanceBandwidthInfoArgs{...}
type DcsInstanceBandwidthInfoInput interface {
	pulumi.Input

	ToDcsInstanceBandwidthInfoOutput() DcsInstanceBandwidthInfoOutput
	ToDcsInstanceBandwidthInfoOutputWithContext(context.Context) DcsInstanceBandwidthInfoOutput
}

type DcsInstanceBandwidthInfoArgs struct {
	Bandwidth          pulumi.IntPtrInput    `pulumi:"bandwidth"`
	BeginTime          pulumi.StringPtrInput `pulumi:"beginTime"`
	CurrentTime        pulumi.StringPtrInput `pulumi:"currentTime"`
	EndTime            pulumi.StringPtrInput `pulumi:"endTime"`
	ExpandCount        pulumi.IntPtrInput    `pulumi:"expandCount"`
	ExpandEffectTime   pulumi.IntPtrInput    `pulumi:"expandEffectTime"`
	ExpandIntervalTime pulumi.IntPtrInput    `pulumi:"expandIntervalTime"`
	MaxExpandCount     pulumi.IntPtrInput    `pulumi:"maxExpandCount"`
	NextExpandTime     pulumi.StringPtrInput `pulumi:"nextExpandTime"`
	TaskRunning        pulumi.BoolPtrInput   `pulumi:"taskRunning"`
}

func (DcsInstanceBandwidthInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceBandwidthInfo)(nil)).Elem()
}

func (i DcsInstanceBandwidthInfoArgs) ToDcsInstanceBandwidthInfoOutput() DcsInstanceBandwidthInfoOutput {
	return i.ToDcsInstanceBandwidthInfoOutputWithContext(context.Background())
}

func (i DcsInstanceBandwidthInfoArgs) ToDcsInstanceBandwidthInfoOutputWithContext(ctx context.Context) DcsInstanceBandwidthInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceBandwidthInfoOutput)
}

// DcsInstanceBandwidthInfoArrayInput is an input type that accepts DcsInstanceBandwidthInfoArray and DcsInstanceBandwidthInfoArrayOutput values.
// You can construct a concrete instance of `DcsInstanceBandwidthInfoArrayInput` via:
//
//	DcsInstanceBandwidthInfoArray{ DcsInstanceBandwidthInfoArgs{...} }
type DcsInstanceBandwidthInfoArrayInput interface {
	pulumi.Input

	ToDcsInstanceBandwidthInfoArrayOutput() DcsInstanceBandwidthInfoArrayOutput
	ToDcsInstanceBandwidthInfoArrayOutputWithContext(context.Context) DcsInstanceBandwidthInfoArrayOutput
}

type DcsInstanceBandwidthInfoArray []DcsInstanceBandwidthInfoInput

func (DcsInstanceBandwidthInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsInstanceBandwidthInfo)(nil)).Elem()
}

func (i DcsInstanceBandwidthInfoArray) ToDcsInstanceBandwidthInfoArrayOutput() DcsInstanceBandwidthInfoArrayOutput {
	return i.ToDcsInstanceBandwidthInfoArrayOutputWithContext(context.Background())
}

func (i DcsInstanceBandwidthInfoArray) ToDcsInstanceBandwidthInfoArrayOutputWithContext(ctx context.Context) DcsInstanceBandwidthInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceBandwidthInfoArrayOutput)
}

type DcsInstanceBandwidthInfoOutput struct{ *pulumi.OutputState }

func (DcsInstanceBandwidthInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceBandwidthInfo)(nil)).Elem()
}

func (o DcsInstanceBandwidthInfoOutput) ToDcsInstanceBandwidthInfoOutput() DcsInstanceBandwidthInfoOutput {
	return o
}

func (o DcsInstanceBandwidthInfoOutput) ToDcsInstanceBandwidthInfoOutputWithContext(ctx context.Context) DcsInstanceBandwidthInfoOutput {
	return o
}

func (o DcsInstanceBandwidthInfoOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) BeginTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *string { return v.BeginTime }).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) CurrentTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *string { return v.CurrentTime }).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) ExpandCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *int { return v.ExpandCount }).(pulumi.IntPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) ExpandEffectTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *int { return v.ExpandEffectTime }).(pulumi.IntPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) ExpandIntervalTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *int { return v.ExpandIntervalTime }).(pulumi.IntPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) MaxExpandCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *int { return v.MaxExpandCount }).(pulumi.IntPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) NextExpandTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *string { return v.NextExpandTime }).(pulumi.StringPtrOutput)
}

func (o DcsInstanceBandwidthInfoOutput) TaskRunning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DcsInstanceBandwidthInfo) *bool { return v.TaskRunning }).(pulumi.BoolPtrOutput)
}

type DcsInstanceBandwidthInfoArrayOutput struct{ *pulumi.OutputState }

func (DcsInstanceBandwidthInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsInstanceBandwidthInfo)(nil)).Elem()
}

func (o DcsInstanceBandwidthInfoArrayOutput) ToDcsInstanceBandwidthInfoArrayOutput() DcsInstanceBandwidthInfoArrayOutput {
	return o
}

func (o DcsInstanceBandwidthInfoArrayOutput) ToDcsInstanceBandwidthInfoArrayOutputWithContext(ctx context.Context) DcsInstanceBandwidthInfoArrayOutput {
	return o
}

func (o DcsInstanceBandwidthInfoArrayOutput) Index(i pulumi.IntInput) DcsInstanceBandwidthInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DcsInstanceBandwidthInfo {
		return vs[0].([]DcsInstanceBandwidthInfo)[vs[1].(int)]
	}).(DcsInstanceBandwidthInfoOutput)
}

type DcsInstanceParameter struct {
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// DcsInstanceParameterInput is an input type that accepts DcsInstanceParameterArgs and DcsInstanceParameterOutput values.
// You can construct a concrete instance of `DcsInstanceParameterInput` via:
//
//	DcsInstanceParameterArgs{...}
type DcsInstanceParameterInput interface {
	pulumi.Input

	ToDcsInstanceParameterOutput() DcsInstanceParameterOutput
	ToDcsInstanceParameterOutputWithContext(context.Context) DcsInstanceParameterOutput
}

type DcsInstanceParameterArgs struct {
	Id    pulumi.StringInput `pulumi:"id"`
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DcsInstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceParameter)(nil)).Elem()
}

func (i DcsInstanceParameterArgs) ToDcsInstanceParameterOutput() DcsInstanceParameterOutput {
	return i.ToDcsInstanceParameterOutputWithContext(context.Background())
}

func (i DcsInstanceParameterArgs) ToDcsInstanceParameterOutputWithContext(ctx context.Context) DcsInstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceParameterOutput)
}

// DcsInstanceParameterArrayInput is an input type that accepts DcsInstanceParameterArray and DcsInstanceParameterArrayOutput values.
// You can construct a concrete instance of `DcsInstanceParameterArrayInput` via:
//
//	DcsInstanceParameterArray{ DcsInstanceParameterArgs{...} }
type DcsInstanceParameterArrayInput interface {
	pulumi.Input

	ToDcsInstanceParameterArrayOutput() DcsInstanceParameterArrayOutput
	ToDcsInstanceParameterArrayOutputWithContext(context.Context) DcsInstanceParameterArrayOutput
}

type DcsInstanceParameterArray []DcsInstanceParameterInput

func (DcsInstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsInstanceParameter)(nil)).Elem()
}

func (i DcsInstanceParameterArray) ToDcsInstanceParameterArrayOutput() DcsInstanceParameterArrayOutput {
	return i.ToDcsInstanceParameterArrayOutputWithContext(context.Background())
}

func (i DcsInstanceParameterArray) ToDcsInstanceParameterArrayOutputWithContext(ctx context.Context) DcsInstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceParameterArrayOutput)
}

type DcsInstanceParameterOutput struct{ *pulumi.OutputState }

func (DcsInstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceParameter)(nil)).Elem()
}

func (o DcsInstanceParameterOutput) ToDcsInstanceParameterOutput() DcsInstanceParameterOutput {
	return o
}

func (o DcsInstanceParameterOutput) ToDcsInstanceParameterOutputWithContext(ctx context.Context) DcsInstanceParameterOutput {
	return o
}

func (o DcsInstanceParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DcsInstanceParameter) string { return v.Id }).(pulumi.StringOutput)
}

func (o DcsInstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DcsInstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DcsInstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DcsInstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type DcsInstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (DcsInstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsInstanceParameter)(nil)).Elem()
}

func (o DcsInstanceParameterArrayOutput) ToDcsInstanceParameterArrayOutput() DcsInstanceParameterArrayOutput {
	return o
}

func (o DcsInstanceParameterArrayOutput) ToDcsInstanceParameterArrayOutputWithContext(ctx context.Context) DcsInstanceParameterArrayOutput {
	return o
}

func (o DcsInstanceParameterArrayOutput) Index(i pulumi.IntInput) DcsInstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DcsInstanceParameter {
		return vs[0].([]DcsInstanceParameter)[vs[1].(int)]
	}).(DcsInstanceParameterOutput)
}

type DcsInstanceWhitelist struct {
	GroupName   string   `pulumi:"groupName"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// DcsInstanceWhitelistInput is an input type that accepts DcsInstanceWhitelistArgs and DcsInstanceWhitelistOutput values.
// You can construct a concrete instance of `DcsInstanceWhitelistInput` via:
//
//	DcsInstanceWhitelistArgs{...}
type DcsInstanceWhitelistInput interface {
	pulumi.Input

	ToDcsInstanceWhitelistOutput() DcsInstanceWhitelistOutput
	ToDcsInstanceWhitelistOutputWithContext(context.Context) DcsInstanceWhitelistOutput
}

type DcsInstanceWhitelistArgs struct {
	GroupName   pulumi.StringInput      `pulumi:"groupName"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (DcsInstanceWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceWhitelist)(nil)).Elem()
}

func (i DcsInstanceWhitelistArgs) ToDcsInstanceWhitelistOutput() DcsInstanceWhitelistOutput {
	return i.ToDcsInstanceWhitelistOutputWithContext(context.Background())
}

func (i DcsInstanceWhitelistArgs) ToDcsInstanceWhitelistOutputWithContext(ctx context.Context) DcsInstanceWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceWhitelistOutput)
}

// DcsInstanceWhitelistArrayInput is an input type that accepts DcsInstanceWhitelistArray and DcsInstanceWhitelistArrayOutput values.
// You can construct a concrete instance of `DcsInstanceWhitelistArrayInput` via:
//
//	DcsInstanceWhitelistArray{ DcsInstanceWhitelistArgs{...} }
type DcsInstanceWhitelistArrayInput interface {
	pulumi.Input

	ToDcsInstanceWhitelistArrayOutput() DcsInstanceWhitelistArrayOutput
	ToDcsInstanceWhitelistArrayOutputWithContext(context.Context) DcsInstanceWhitelistArrayOutput
}

type DcsInstanceWhitelistArray []DcsInstanceWhitelistInput

func (DcsInstanceWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsInstanceWhitelist)(nil)).Elem()
}

func (i DcsInstanceWhitelistArray) ToDcsInstanceWhitelistArrayOutput() DcsInstanceWhitelistArrayOutput {
	return i.ToDcsInstanceWhitelistArrayOutputWithContext(context.Background())
}

func (i DcsInstanceWhitelistArray) ToDcsInstanceWhitelistArrayOutputWithContext(ctx context.Context) DcsInstanceWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsInstanceWhitelistArrayOutput)
}

type DcsInstanceWhitelistOutput struct{ *pulumi.OutputState }

func (DcsInstanceWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsInstanceWhitelist)(nil)).Elem()
}

func (o DcsInstanceWhitelistOutput) ToDcsInstanceWhitelistOutput() DcsInstanceWhitelistOutput {
	return o
}

func (o DcsInstanceWhitelistOutput) ToDcsInstanceWhitelistOutputWithContext(ctx context.Context) DcsInstanceWhitelistOutput {
	return o
}

func (o DcsInstanceWhitelistOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v DcsInstanceWhitelist) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o DcsInstanceWhitelistOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DcsInstanceWhitelist) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type DcsInstanceWhitelistArrayOutput struct{ *pulumi.OutputState }

func (DcsInstanceWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsInstanceWhitelist)(nil)).Elem()
}

func (o DcsInstanceWhitelistArrayOutput) ToDcsInstanceWhitelistArrayOutput() DcsInstanceWhitelistArrayOutput {
	return o
}

func (o DcsInstanceWhitelistArrayOutput) ToDcsInstanceWhitelistArrayOutputWithContext(ctx context.Context) DcsInstanceWhitelistArrayOutput {
	return o
}

func (o DcsInstanceWhitelistArrayOutput) Index(i pulumi.IntInput) DcsInstanceWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DcsInstanceWhitelist {
		return vs[0].([]DcsInstanceWhitelist)[vs[1].(int)]
	}).(DcsInstanceWhitelistOutput)
}

type DcsParametersConfigurationParameter struct {
	Name           *string `pulumi:"name"`
	NeedRestart    *bool   `pulumi:"needRestart"`
	Type           *string `pulumi:"type"`
	UserPermission *string `pulumi:"userPermission"`
	Value          *string `pulumi:"value"`
}

// DcsParametersConfigurationParameterInput is an input type that accepts DcsParametersConfigurationParameterArgs and DcsParametersConfigurationParameterOutput values.
// You can construct a concrete instance of `DcsParametersConfigurationParameterInput` via:
//
//	DcsParametersConfigurationParameterArgs{...}
type DcsParametersConfigurationParameterInput interface {
	pulumi.Input

	ToDcsParametersConfigurationParameterOutput() DcsParametersConfigurationParameterOutput
	ToDcsParametersConfigurationParameterOutputWithContext(context.Context) DcsParametersConfigurationParameterOutput
}

type DcsParametersConfigurationParameterArgs struct {
	Name           pulumi.StringPtrInput `pulumi:"name"`
	NeedRestart    pulumi.BoolPtrInput   `pulumi:"needRestart"`
	Type           pulumi.StringPtrInput `pulumi:"type"`
	UserPermission pulumi.StringPtrInput `pulumi:"userPermission"`
	Value          pulumi.StringPtrInput `pulumi:"value"`
}

func (DcsParametersConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsParametersConfigurationParameter)(nil)).Elem()
}

func (i DcsParametersConfigurationParameterArgs) ToDcsParametersConfigurationParameterOutput() DcsParametersConfigurationParameterOutput {
	return i.ToDcsParametersConfigurationParameterOutputWithContext(context.Background())
}

func (i DcsParametersConfigurationParameterArgs) ToDcsParametersConfigurationParameterOutputWithContext(ctx context.Context) DcsParametersConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsParametersConfigurationParameterOutput)
}

// DcsParametersConfigurationParameterArrayInput is an input type that accepts DcsParametersConfigurationParameterArray and DcsParametersConfigurationParameterArrayOutput values.
// You can construct a concrete instance of `DcsParametersConfigurationParameterArrayInput` via:
//
//	DcsParametersConfigurationParameterArray{ DcsParametersConfigurationParameterArgs{...} }
type DcsParametersConfigurationParameterArrayInput interface {
	pulumi.Input

	ToDcsParametersConfigurationParameterArrayOutput() DcsParametersConfigurationParameterArrayOutput
	ToDcsParametersConfigurationParameterArrayOutputWithContext(context.Context) DcsParametersConfigurationParameterArrayOutput
}

type DcsParametersConfigurationParameterArray []DcsParametersConfigurationParameterInput

func (DcsParametersConfigurationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsParametersConfigurationParameter)(nil)).Elem()
}

func (i DcsParametersConfigurationParameterArray) ToDcsParametersConfigurationParameterArrayOutput() DcsParametersConfigurationParameterArrayOutput {
	return i.ToDcsParametersConfigurationParameterArrayOutputWithContext(context.Background())
}

func (i DcsParametersConfigurationParameterArray) ToDcsParametersConfigurationParameterArrayOutputWithContext(ctx context.Context) DcsParametersConfigurationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsParametersConfigurationParameterArrayOutput)
}

type DcsParametersConfigurationParameterOutput struct{ *pulumi.OutputState }

func (DcsParametersConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsParametersConfigurationParameter)(nil)).Elem()
}

func (o DcsParametersConfigurationParameterOutput) ToDcsParametersConfigurationParameterOutput() DcsParametersConfigurationParameterOutput {
	return o
}

func (o DcsParametersConfigurationParameterOutput) ToDcsParametersConfigurationParameterOutputWithContext(ctx context.Context) DcsParametersConfigurationParameterOutput {
	return o
}

func (o DcsParametersConfigurationParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsParametersConfigurationParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DcsParametersConfigurationParameterOutput) NeedRestart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DcsParametersConfigurationParameter) *bool { return v.NeedRestart }).(pulumi.BoolPtrOutput)
}

func (o DcsParametersConfigurationParameterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsParametersConfigurationParameter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o DcsParametersConfigurationParameterOutput) UserPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsParametersConfigurationParameter) *string { return v.UserPermission }).(pulumi.StringPtrOutput)
}

func (o DcsParametersConfigurationParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsParametersConfigurationParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DcsParametersConfigurationParameterArrayOutput struct{ *pulumi.OutputState }

func (DcsParametersConfigurationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsParametersConfigurationParameter)(nil)).Elem()
}

func (o DcsParametersConfigurationParameterArrayOutput) ToDcsParametersConfigurationParameterArrayOutput() DcsParametersConfigurationParameterArrayOutput {
	return o
}

func (o DcsParametersConfigurationParameterArrayOutput) ToDcsParametersConfigurationParameterArrayOutputWithContext(ctx context.Context) DcsParametersConfigurationParameterArrayOutput {
	return o
}

func (o DcsParametersConfigurationParameterArrayOutput) Index(i pulumi.IntInput) DcsParametersConfigurationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DcsParametersConfigurationParameter {
		return vs[0].([]DcsParametersConfigurationParameter)[vs[1].(int)]
	}).(DcsParametersConfigurationParameterOutput)
}

type DcsRestoreRestoreRecord struct {
	BackupId           *string `pulumi:"backupId"`
	BackupName         *string `pulumi:"backupName"`
	BackupRemark       *string `pulumi:"backupRemark"`
	CreatedAt          *string `pulumi:"createdAt"`
	ErrorCode          *string `pulumi:"errorCode"`
	Progress           *string `pulumi:"progress"`
	RestoreId          *string `pulumi:"restoreId"`
	RestoreName        *string `pulumi:"restoreName"`
	RestoreRemark      *string `pulumi:"restoreRemark"`
	SourceInstanceId   *string `pulumi:"sourceInstanceId"`
	SourceInstanceName *string `pulumi:"sourceInstanceName"`
	Status             *string `pulumi:"status"`
	UpdatedAt          *string `pulumi:"updatedAt"`
}

// DcsRestoreRestoreRecordInput is an input type that accepts DcsRestoreRestoreRecordArgs and DcsRestoreRestoreRecordOutput values.
// You can construct a concrete instance of `DcsRestoreRestoreRecordInput` via:
//
//	DcsRestoreRestoreRecordArgs{...}
type DcsRestoreRestoreRecordInput interface {
	pulumi.Input

	ToDcsRestoreRestoreRecordOutput() DcsRestoreRestoreRecordOutput
	ToDcsRestoreRestoreRecordOutputWithContext(context.Context) DcsRestoreRestoreRecordOutput
}

type DcsRestoreRestoreRecordArgs struct {
	BackupId           pulumi.StringPtrInput `pulumi:"backupId"`
	BackupName         pulumi.StringPtrInput `pulumi:"backupName"`
	BackupRemark       pulumi.StringPtrInput `pulumi:"backupRemark"`
	CreatedAt          pulumi.StringPtrInput `pulumi:"createdAt"`
	ErrorCode          pulumi.StringPtrInput `pulumi:"errorCode"`
	Progress           pulumi.StringPtrInput `pulumi:"progress"`
	RestoreId          pulumi.StringPtrInput `pulumi:"restoreId"`
	RestoreName        pulumi.StringPtrInput `pulumi:"restoreName"`
	RestoreRemark      pulumi.StringPtrInput `pulumi:"restoreRemark"`
	SourceInstanceId   pulumi.StringPtrInput `pulumi:"sourceInstanceId"`
	SourceInstanceName pulumi.StringPtrInput `pulumi:"sourceInstanceName"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	UpdatedAt          pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (DcsRestoreRestoreRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsRestoreRestoreRecord)(nil)).Elem()
}

func (i DcsRestoreRestoreRecordArgs) ToDcsRestoreRestoreRecordOutput() DcsRestoreRestoreRecordOutput {
	return i.ToDcsRestoreRestoreRecordOutputWithContext(context.Background())
}

func (i DcsRestoreRestoreRecordArgs) ToDcsRestoreRestoreRecordOutputWithContext(ctx context.Context) DcsRestoreRestoreRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsRestoreRestoreRecordOutput)
}

// DcsRestoreRestoreRecordArrayInput is an input type that accepts DcsRestoreRestoreRecordArray and DcsRestoreRestoreRecordArrayOutput values.
// You can construct a concrete instance of `DcsRestoreRestoreRecordArrayInput` via:
//
//	DcsRestoreRestoreRecordArray{ DcsRestoreRestoreRecordArgs{...} }
type DcsRestoreRestoreRecordArrayInput interface {
	pulumi.Input

	ToDcsRestoreRestoreRecordArrayOutput() DcsRestoreRestoreRecordArrayOutput
	ToDcsRestoreRestoreRecordArrayOutputWithContext(context.Context) DcsRestoreRestoreRecordArrayOutput
}

type DcsRestoreRestoreRecordArray []DcsRestoreRestoreRecordInput

func (DcsRestoreRestoreRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsRestoreRestoreRecord)(nil)).Elem()
}

func (i DcsRestoreRestoreRecordArray) ToDcsRestoreRestoreRecordArrayOutput() DcsRestoreRestoreRecordArrayOutput {
	return i.ToDcsRestoreRestoreRecordArrayOutputWithContext(context.Background())
}

func (i DcsRestoreRestoreRecordArray) ToDcsRestoreRestoreRecordArrayOutputWithContext(ctx context.Context) DcsRestoreRestoreRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcsRestoreRestoreRecordArrayOutput)
}

type DcsRestoreRestoreRecordOutput struct{ *pulumi.OutputState }

func (DcsRestoreRestoreRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcsRestoreRestoreRecord)(nil)).Elem()
}

func (o DcsRestoreRestoreRecordOutput) ToDcsRestoreRestoreRecordOutput() DcsRestoreRestoreRecordOutput {
	return o
}

func (o DcsRestoreRestoreRecordOutput) ToDcsRestoreRestoreRecordOutputWithContext(ctx context.Context) DcsRestoreRestoreRecordOutput {
	return o
}

func (o DcsRestoreRestoreRecordOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.BackupId }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) BackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.BackupName }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) BackupRemark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.BackupRemark }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) Progress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.Progress }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) RestoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.RestoreId }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) RestoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.RestoreName }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) RestoreRemark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.RestoreRemark }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) SourceInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.SourceInstanceId }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) SourceInstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.SourceInstanceName }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o DcsRestoreRestoreRecordOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcsRestoreRestoreRecord) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type DcsRestoreRestoreRecordArrayOutput struct{ *pulumi.OutputState }

func (DcsRestoreRestoreRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DcsRestoreRestoreRecord)(nil)).Elem()
}

func (o DcsRestoreRestoreRecordArrayOutput) ToDcsRestoreRestoreRecordArrayOutput() DcsRestoreRestoreRecordArrayOutput {
	return o
}

func (o DcsRestoreRestoreRecordArrayOutput) ToDcsRestoreRestoreRecordArrayOutputWithContext(ctx context.Context) DcsRestoreRestoreRecordArrayOutput {
	return o
}

func (o DcsRestoreRestoreRecordArrayOutput) Index(i pulumi.IntInput) DcsRestoreRestoreRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DcsRestoreRestoreRecord {
		return vs[0].([]DcsRestoreRestoreRecord)[vs[1].(int)]
	}).(DcsRestoreRestoreRecordOutput)
}

type DdsInstanceBackupStrategy struct {
	KeepDays  int     `pulumi:"keepDays"`
	Period    *string `pulumi:"period"`
	StartTime string  `pulumi:"startTime"`
}

// DdsInstanceBackupStrategyInput is an input type that accepts DdsInstanceBackupStrategyArgs and DdsInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `DdsInstanceBackupStrategyInput` via:
//
//	DdsInstanceBackupStrategyArgs{...}
type DdsInstanceBackupStrategyInput interface {
	pulumi.Input

	ToDdsInstanceBackupStrategyOutput() DdsInstanceBackupStrategyOutput
	ToDdsInstanceBackupStrategyOutputWithContext(context.Context) DdsInstanceBackupStrategyOutput
}

type DdsInstanceBackupStrategyArgs struct {
	KeepDays  pulumi.IntInput       `pulumi:"keepDays"`
	Period    pulumi.StringPtrInput `pulumi:"period"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (DdsInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceBackupStrategy)(nil)).Elem()
}

func (i DdsInstanceBackupStrategyArgs) ToDdsInstanceBackupStrategyOutput() DdsInstanceBackupStrategyOutput {
	return i.ToDdsInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i DdsInstanceBackupStrategyArgs) ToDdsInstanceBackupStrategyOutputWithContext(ctx context.Context) DdsInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceBackupStrategyOutput)
}

func (i DdsInstanceBackupStrategyArgs) ToDdsInstanceBackupStrategyPtrOutput() DdsInstanceBackupStrategyPtrOutput {
	return i.ToDdsInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i DdsInstanceBackupStrategyArgs) ToDdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) DdsInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceBackupStrategyOutput).ToDdsInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// DdsInstanceBackupStrategyPtrInput is an input type that accepts DdsInstanceBackupStrategyArgs, DdsInstanceBackupStrategyPtr and DdsInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `DdsInstanceBackupStrategyPtrInput` via:
//
//	        DdsInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type DdsInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToDdsInstanceBackupStrategyPtrOutput() DdsInstanceBackupStrategyPtrOutput
	ToDdsInstanceBackupStrategyPtrOutputWithContext(context.Context) DdsInstanceBackupStrategyPtrOutput
}

type ddsInstanceBackupStrategyPtrType DdsInstanceBackupStrategyArgs

func DdsInstanceBackupStrategyPtr(v *DdsInstanceBackupStrategyArgs) DdsInstanceBackupStrategyPtrInput {
	return (*ddsInstanceBackupStrategyPtrType)(v)
}

func (*ddsInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsInstanceBackupStrategy)(nil)).Elem()
}

func (i *ddsInstanceBackupStrategyPtrType) ToDdsInstanceBackupStrategyPtrOutput() DdsInstanceBackupStrategyPtrOutput {
	return i.ToDdsInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *ddsInstanceBackupStrategyPtrType) ToDdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) DdsInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceBackupStrategyPtrOutput)
}

type DdsInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (DdsInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceBackupStrategy)(nil)).Elem()
}

func (o DdsInstanceBackupStrategyOutput) ToDdsInstanceBackupStrategyOutput() DdsInstanceBackupStrategyOutput {
	return o
}

func (o DdsInstanceBackupStrategyOutput) ToDdsInstanceBackupStrategyOutputWithContext(ctx context.Context) DdsInstanceBackupStrategyOutput {
	return o
}

func (o DdsInstanceBackupStrategyOutput) ToDdsInstanceBackupStrategyPtrOutput() DdsInstanceBackupStrategyPtrOutput {
	return o.ToDdsInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o DdsInstanceBackupStrategyOutput) ToDdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) DdsInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DdsInstanceBackupStrategy) *DdsInstanceBackupStrategy {
		return &v
	}).(DdsInstanceBackupStrategyPtrOutput)
}

func (o DdsInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v DdsInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

func (o DdsInstanceBackupStrategyOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceBackupStrategy) *string { return v.Period }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DdsInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type DdsInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (DdsInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsInstanceBackupStrategy)(nil)).Elem()
}

func (o DdsInstanceBackupStrategyPtrOutput) ToDdsInstanceBackupStrategyPtrOutput() DdsInstanceBackupStrategyPtrOutput {
	return o
}

func (o DdsInstanceBackupStrategyPtrOutput) ToDdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) DdsInstanceBackupStrategyPtrOutput {
	return o
}

func (o DdsInstanceBackupStrategyPtrOutput) Elem() DdsInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *DdsInstanceBackupStrategy) DdsInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret DdsInstanceBackupStrategy
		return ret
	}).(DdsInstanceBackupStrategyOutput)
}

func (o DdsInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DdsInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return &v.KeepDays
	}).(pulumi.IntPtrOutput)
}

func (o DdsInstanceBackupStrategyPtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdsInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

func (o DdsInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdsInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type DdsInstanceConfiguration struct {
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

// DdsInstanceConfigurationInput is an input type that accepts DdsInstanceConfigurationArgs and DdsInstanceConfigurationOutput values.
// You can construct a concrete instance of `DdsInstanceConfigurationInput` via:
//
//	DdsInstanceConfigurationArgs{...}
type DdsInstanceConfigurationInput interface {
	pulumi.Input

	ToDdsInstanceConfigurationOutput() DdsInstanceConfigurationOutput
	ToDdsInstanceConfigurationOutputWithContext(context.Context) DdsInstanceConfigurationOutput
}

type DdsInstanceConfigurationArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (DdsInstanceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceConfiguration)(nil)).Elem()
}

func (i DdsInstanceConfigurationArgs) ToDdsInstanceConfigurationOutput() DdsInstanceConfigurationOutput {
	return i.ToDdsInstanceConfigurationOutputWithContext(context.Background())
}

func (i DdsInstanceConfigurationArgs) ToDdsInstanceConfigurationOutputWithContext(ctx context.Context) DdsInstanceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceConfigurationOutput)
}

// DdsInstanceConfigurationArrayInput is an input type that accepts DdsInstanceConfigurationArray and DdsInstanceConfigurationArrayOutput values.
// You can construct a concrete instance of `DdsInstanceConfigurationArrayInput` via:
//
//	DdsInstanceConfigurationArray{ DdsInstanceConfigurationArgs{...} }
type DdsInstanceConfigurationArrayInput interface {
	pulumi.Input

	ToDdsInstanceConfigurationArrayOutput() DdsInstanceConfigurationArrayOutput
	ToDdsInstanceConfigurationArrayOutputWithContext(context.Context) DdsInstanceConfigurationArrayOutput
}

type DdsInstanceConfigurationArray []DdsInstanceConfigurationInput

func (DdsInstanceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceConfiguration)(nil)).Elem()
}

func (i DdsInstanceConfigurationArray) ToDdsInstanceConfigurationArrayOutput() DdsInstanceConfigurationArrayOutput {
	return i.ToDdsInstanceConfigurationArrayOutputWithContext(context.Background())
}

func (i DdsInstanceConfigurationArray) ToDdsInstanceConfigurationArrayOutputWithContext(ctx context.Context) DdsInstanceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceConfigurationArrayOutput)
}

type DdsInstanceConfigurationOutput struct{ *pulumi.OutputState }

func (DdsInstanceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceConfiguration)(nil)).Elem()
}

func (o DdsInstanceConfigurationOutput) ToDdsInstanceConfigurationOutput() DdsInstanceConfigurationOutput {
	return o
}

func (o DdsInstanceConfigurationOutput) ToDdsInstanceConfigurationOutputWithContext(ctx context.Context) DdsInstanceConfigurationOutput {
	return o
}

func (o DdsInstanceConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DdsInstanceConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

func (o DdsInstanceConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DdsInstanceConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

type DdsInstanceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DdsInstanceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceConfiguration)(nil)).Elem()
}

func (o DdsInstanceConfigurationArrayOutput) ToDdsInstanceConfigurationArrayOutput() DdsInstanceConfigurationArrayOutput {
	return o
}

func (o DdsInstanceConfigurationArrayOutput) ToDdsInstanceConfigurationArrayOutputWithContext(ctx context.Context) DdsInstanceConfigurationArrayOutput {
	return o
}

func (o DdsInstanceConfigurationArrayOutput) Index(i pulumi.IntInput) DdsInstanceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdsInstanceConfiguration {
		return vs[0].([]DdsInstanceConfiguration)[vs[1].(int)]
	}).(DdsInstanceConfigurationOutput)
}

type DdsInstanceDatastore struct {
	StorageEngine *string `pulumi:"storageEngine"`
	Type          string  `pulumi:"type"`
	Version       string  `pulumi:"version"`
}

// DdsInstanceDatastoreInput is an input type that accepts DdsInstanceDatastoreArgs and DdsInstanceDatastoreOutput values.
// You can construct a concrete instance of `DdsInstanceDatastoreInput` via:
//
//	DdsInstanceDatastoreArgs{...}
type DdsInstanceDatastoreInput interface {
	pulumi.Input

	ToDdsInstanceDatastoreOutput() DdsInstanceDatastoreOutput
	ToDdsInstanceDatastoreOutputWithContext(context.Context) DdsInstanceDatastoreOutput
}

type DdsInstanceDatastoreArgs struct {
	StorageEngine pulumi.StringPtrInput `pulumi:"storageEngine"`
	Type          pulumi.StringInput    `pulumi:"type"`
	Version       pulumi.StringInput    `pulumi:"version"`
}

func (DdsInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceDatastore)(nil)).Elem()
}

func (i DdsInstanceDatastoreArgs) ToDdsInstanceDatastoreOutput() DdsInstanceDatastoreOutput {
	return i.ToDdsInstanceDatastoreOutputWithContext(context.Background())
}

func (i DdsInstanceDatastoreArgs) ToDdsInstanceDatastoreOutputWithContext(ctx context.Context) DdsInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceDatastoreOutput)
}

func (i DdsInstanceDatastoreArgs) ToDdsInstanceDatastorePtrOutput() DdsInstanceDatastorePtrOutput {
	return i.ToDdsInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i DdsInstanceDatastoreArgs) ToDdsInstanceDatastorePtrOutputWithContext(ctx context.Context) DdsInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceDatastoreOutput).ToDdsInstanceDatastorePtrOutputWithContext(ctx)
}

// DdsInstanceDatastorePtrInput is an input type that accepts DdsInstanceDatastoreArgs, DdsInstanceDatastorePtr and DdsInstanceDatastorePtrOutput values.
// You can construct a concrete instance of `DdsInstanceDatastorePtrInput` via:
//
//	        DdsInstanceDatastoreArgs{...}
//
//	or:
//
//	        nil
type DdsInstanceDatastorePtrInput interface {
	pulumi.Input

	ToDdsInstanceDatastorePtrOutput() DdsInstanceDatastorePtrOutput
	ToDdsInstanceDatastorePtrOutputWithContext(context.Context) DdsInstanceDatastorePtrOutput
}

type ddsInstanceDatastorePtrType DdsInstanceDatastoreArgs

func DdsInstanceDatastorePtr(v *DdsInstanceDatastoreArgs) DdsInstanceDatastorePtrInput {
	return (*ddsInstanceDatastorePtrType)(v)
}

func (*ddsInstanceDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsInstanceDatastore)(nil)).Elem()
}

func (i *ddsInstanceDatastorePtrType) ToDdsInstanceDatastorePtrOutput() DdsInstanceDatastorePtrOutput {
	return i.ToDdsInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i *ddsInstanceDatastorePtrType) ToDdsInstanceDatastorePtrOutputWithContext(ctx context.Context) DdsInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceDatastorePtrOutput)
}

type DdsInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (DdsInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceDatastore)(nil)).Elem()
}

func (o DdsInstanceDatastoreOutput) ToDdsInstanceDatastoreOutput() DdsInstanceDatastoreOutput {
	return o
}

func (o DdsInstanceDatastoreOutput) ToDdsInstanceDatastoreOutputWithContext(ctx context.Context) DdsInstanceDatastoreOutput {
	return o
}

func (o DdsInstanceDatastoreOutput) ToDdsInstanceDatastorePtrOutput() DdsInstanceDatastorePtrOutput {
	return o.ToDdsInstanceDatastorePtrOutputWithContext(context.Background())
}

func (o DdsInstanceDatastoreOutput) ToDdsInstanceDatastorePtrOutputWithContext(ctx context.Context) DdsInstanceDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DdsInstanceDatastore) *DdsInstanceDatastore {
		return &v
	}).(DdsInstanceDatastorePtrOutput)
}

func (o DdsInstanceDatastoreOutput) StorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceDatastore) *string { return v.StorageEngine }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceDatastoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DdsInstanceDatastore) string { return v.Type }).(pulumi.StringOutput)
}

func (o DdsInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v DdsInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type DdsInstanceDatastorePtrOutput struct{ *pulumi.OutputState }

func (DdsInstanceDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsInstanceDatastore)(nil)).Elem()
}

func (o DdsInstanceDatastorePtrOutput) ToDdsInstanceDatastorePtrOutput() DdsInstanceDatastorePtrOutput {
	return o
}

func (o DdsInstanceDatastorePtrOutput) ToDdsInstanceDatastorePtrOutputWithContext(ctx context.Context) DdsInstanceDatastorePtrOutput {
	return o
}

func (o DdsInstanceDatastorePtrOutput) Elem() DdsInstanceDatastoreOutput {
	return o.ApplyT(func(v *DdsInstanceDatastore) DdsInstanceDatastore {
		if v != nil {
			return *v
		}
		var ret DdsInstanceDatastore
		return ret
	}).(DdsInstanceDatastoreOutput)
}

func (o DdsInstanceDatastorePtrOutput) StorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdsInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return v.StorageEngine
	}).(pulumi.StringPtrOutput)
}

func (o DdsInstanceDatastorePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdsInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o DdsInstanceDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdsInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type DdsInstanceFlavor struct {
	Num      int     `pulumi:"num"`
	Size     *int    `pulumi:"size"`
	SpecCode string  `pulumi:"specCode"`
	Storage  *string `pulumi:"storage"`
	Type     string  `pulumi:"type"`
}

// DdsInstanceFlavorInput is an input type that accepts DdsInstanceFlavorArgs and DdsInstanceFlavorOutput values.
// You can construct a concrete instance of `DdsInstanceFlavorInput` via:
//
//	DdsInstanceFlavorArgs{...}
type DdsInstanceFlavorInput interface {
	pulumi.Input

	ToDdsInstanceFlavorOutput() DdsInstanceFlavorOutput
	ToDdsInstanceFlavorOutputWithContext(context.Context) DdsInstanceFlavorOutput
}

type DdsInstanceFlavorArgs struct {
	Num      pulumi.IntInput       `pulumi:"num"`
	Size     pulumi.IntPtrInput    `pulumi:"size"`
	SpecCode pulumi.StringInput    `pulumi:"specCode"`
	Storage  pulumi.StringPtrInput `pulumi:"storage"`
	Type     pulumi.StringInput    `pulumi:"type"`
}

func (DdsInstanceFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceFlavor)(nil)).Elem()
}

func (i DdsInstanceFlavorArgs) ToDdsInstanceFlavorOutput() DdsInstanceFlavorOutput {
	return i.ToDdsInstanceFlavorOutputWithContext(context.Background())
}

func (i DdsInstanceFlavorArgs) ToDdsInstanceFlavorOutputWithContext(ctx context.Context) DdsInstanceFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceFlavorOutput)
}

// DdsInstanceFlavorArrayInput is an input type that accepts DdsInstanceFlavorArray and DdsInstanceFlavorArrayOutput values.
// You can construct a concrete instance of `DdsInstanceFlavorArrayInput` via:
//
//	DdsInstanceFlavorArray{ DdsInstanceFlavorArgs{...} }
type DdsInstanceFlavorArrayInput interface {
	pulumi.Input

	ToDdsInstanceFlavorArrayOutput() DdsInstanceFlavorArrayOutput
	ToDdsInstanceFlavorArrayOutputWithContext(context.Context) DdsInstanceFlavorArrayOutput
}

type DdsInstanceFlavorArray []DdsInstanceFlavorInput

func (DdsInstanceFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceFlavor)(nil)).Elem()
}

func (i DdsInstanceFlavorArray) ToDdsInstanceFlavorArrayOutput() DdsInstanceFlavorArrayOutput {
	return i.ToDdsInstanceFlavorArrayOutputWithContext(context.Background())
}

func (i DdsInstanceFlavorArray) ToDdsInstanceFlavorArrayOutputWithContext(ctx context.Context) DdsInstanceFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceFlavorArrayOutput)
}

type DdsInstanceFlavorOutput struct{ *pulumi.OutputState }

func (DdsInstanceFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceFlavor)(nil)).Elem()
}

func (o DdsInstanceFlavorOutput) ToDdsInstanceFlavorOutput() DdsInstanceFlavorOutput {
	return o
}

func (o DdsInstanceFlavorOutput) ToDdsInstanceFlavorOutputWithContext(ctx context.Context) DdsInstanceFlavorOutput {
	return o
}

func (o DdsInstanceFlavorOutput) Num() pulumi.IntOutput {
	return o.ApplyT(func(v DdsInstanceFlavor) int { return v.Num }).(pulumi.IntOutput)
}

func (o DdsInstanceFlavorOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DdsInstanceFlavor) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o DdsInstanceFlavorOutput) SpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v DdsInstanceFlavor) string { return v.SpecCode }).(pulumi.StringOutput)
}

func (o DdsInstanceFlavorOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceFlavor) *string { return v.Storage }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DdsInstanceFlavor) string { return v.Type }).(pulumi.StringOutput)
}

type DdsInstanceFlavorArrayOutput struct{ *pulumi.OutputState }

func (DdsInstanceFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceFlavor)(nil)).Elem()
}

func (o DdsInstanceFlavorArrayOutput) ToDdsInstanceFlavorArrayOutput() DdsInstanceFlavorArrayOutput {
	return o
}

func (o DdsInstanceFlavorArrayOutput) ToDdsInstanceFlavorArrayOutputWithContext(ctx context.Context) DdsInstanceFlavorArrayOutput {
	return o
}

func (o DdsInstanceFlavorArrayOutput) Index(i pulumi.IntInput) DdsInstanceFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdsInstanceFlavor {
		return vs[0].([]DdsInstanceFlavor)[vs[1].(int)]
	}).(DdsInstanceFlavorOutput)
}

type DdsInstanceGroup struct {
	Id     *string                `pulumi:"id"`
	Name   *string                `pulumi:"name"`
	Nodes  []DdsInstanceGroupNode `pulumi:"nodes"`
	Size   *string                `pulumi:"size"`
	Status *string                `pulumi:"status"`
	Type   *string                `pulumi:"type"`
	Used   *string                `pulumi:"used"`
}

// DdsInstanceGroupInput is an input type that accepts DdsInstanceGroupArgs and DdsInstanceGroupOutput values.
// You can construct a concrete instance of `DdsInstanceGroupInput` via:
//
//	DdsInstanceGroupArgs{...}
type DdsInstanceGroupInput interface {
	pulumi.Input

	ToDdsInstanceGroupOutput() DdsInstanceGroupOutput
	ToDdsInstanceGroupOutputWithContext(context.Context) DdsInstanceGroupOutput
}

type DdsInstanceGroupArgs struct {
	Id     pulumi.StringPtrInput          `pulumi:"id"`
	Name   pulumi.StringPtrInput          `pulumi:"name"`
	Nodes  DdsInstanceGroupNodeArrayInput `pulumi:"nodes"`
	Size   pulumi.StringPtrInput          `pulumi:"size"`
	Status pulumi.StringPtrInput          `pulumi:"status"`
	Type   pulumi.StringPtrInput          `pulumi:"type"`
	Used   pulumi.StringPtrInput          `pulumi:"used"`
}

func (DdsInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceGroup)(nil)).Elem()
}

func (i DdsInstanceGroupArgs) ToDdsInstanceGroupOutput() DdsInstanceGroupOutput {
	return i.ToDdsInstanceGroupOutputWithContext(context.Background())
}

func (i DdsInstanceGroupArgs) ToDdsInstanceGroupOutputWithContext(ctx context.Context) DdsInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceGroupOutput)
}

// DdsInstanceGroupArrayInput is an input type that accepts DdsInstanceGroupArray and DdsInstanceGroupArrayOutput values.
// You can construct a concrete instance of `DdsInstanceGroupArrayInput` via:
//
//	DdsInstanceGroupArray{ DdsInstanceGroupArgs{...} }
type DdsInstanceGroupArrayInput interface {
	pulumi.Input

	ToDdsInstanceGroupArrayOutput() DdsInstanceGroupArrayOutput
	ToDdsInstanceGroupArrayOutputWithContext(context.Context) DdsInstanceGroupArrayOutput
}

type DdsInstanceGroupArray []DdsInstanceGroupInput

func (DdsInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceGroup)(nil)).Elem()
}

func (i DdsInstanceGroupArray) ToDdsInstanceGroupArrayOutput() DdsInstanceGroupArrayOutput {
	return i.ToDdsInstanceGroupArrayOutputWithContext(context.Background())
}

func (i DdsInstanceGroupArray) ToDdsInstanceGroupArrayOutputWithContext(ctx context.Context) DdsInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceGroupArrayOutput)
}

type DdsInstanceGroupOutput struct{ *pulumi.OutputState }

func (DdsInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceGroup)(nil)).Elem()
}

func (o DdsInstanceGroupOutput) ToDdsInstanceGroupOutput() DdsInstanceGroupOutput {
	return o
}

func (o DdsInstanceGroupOutput) ToDdsInstanceGroupOutputWithContext(ctx context.Context) DdsInstanceGroupOutput {
	return o
}

func (o DdsInstanceGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceGroupOutput) Nodes() DdsInstanceGroupNodeArrayOutput {
	return o.ApplyT(func(v DdsInstanceGroup) []DdsInstanceGroupNode { return v.Nodes }).(DdsInstanceGroupNodeArrayOutput)
}

func (o DdsInstanceGroupOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroup) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceGroupOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroup) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceGroupOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroup) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o DdsInstanceGroupOutput) Used() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroup) *string { return v.Used }).(pulumi.StringPtrOutput)
}

type DdsInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (DdsInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceGroup)(nil)).Elem()
}

func (o DdsInstanceGroupArrayOutput) ToDdsInstanceGroupArrayOutput() DdsInstanceGroupArrayOutput {
	return o
}

func (o DdsInstanceGroupArrayOutput) ToDdsInstanceGroupArrayOutputWithContext(ctx context.Context) DdsInstanceGroupArrayOutput {
	return o
}

func (o DdsInstanceGroupArrayOutput) Index(i pulumi.IntInput) DdsInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdsInstanceGroup {
		return vs[0].([]DdsInstanceGroup)[vs[1].(int)]
	}).(DdsInstanceGroupOutput)
}

type DdsInstanceGroupNode struct {
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Indicates the node name.
	Name *string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp *string `pulumi:"privateIp"`
	// Indicates the EIP that has been bound on a node.
	PublicIp *string `pulumi:"publicIp"`
	// Indicates the node role.
	Role *string `pulumi:"role"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Indicates the node type.
	Type *string `pulumi:"type"`
}

// DdsInstanceGroupNodeInput is an input type that accepts DdsInstanceGroupNodeArgs and DdsInstanceGroupNodeOutput values.
// You can construct a concrete instance of `DdsInstanceGroupNodeInput` via:
//
//	DdsInstanceGroupNodeArgs{...}
type DdsInstanceGroupNodeInput interface {
	pulumi.Input

	ToDdsInstanceGroupNodeOutput() DdsInstanceGroupNodeOutput
	ToDdsInstanceGroupNodeOutputWithContext(context.Context) DdsInstanceGroupNodeOutput
}

type DdsInstanceGroupNodeArgs struct {
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Indicates the node name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// Indicates the EIP that has been bound on a node.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// Indicates the node role.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Indicates the node type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DdsInstanceGroupNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceGroupNode)(nil)).Elem()
}

func (i DdsInstanceGroupNodeArgs) ToDdsInstanceGroupNodeOutput() DdsInstanceGroupNodeOutput {
	return i.ToDdsInstanceGroupNodeOutputWithContext(context.Background())
}

func (i DdsInstanceGroupNodeArgs) ToDdsInstanceGroupNodeOutputWithContext(ctx context.Context) DdsInstanceGroupNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceGroupNodeOutput)
}

// DdsInstanceGroupNodeArrayInput is an input type that accepts DdsInstanceGroupNodeArray and DdsInstanceGroupNodeArrayOutput values.
// You can construct a concrete instance of `DdsInstanceGroupNodeArrayInput` via:
//
//	DdsInstanceGroupNodeArray{ DdsInstanceGroupNodeArgs{...} }
type DdsInstanceGroupNodeArrayInput interface {
	pulumi.Input

	ToDdsInstanceGroupNodeArrayOutput() DdsInstanceGroupNodeArrayOutput
	ToDdsInstanceGroupNodeArrayOutputWithContext(context.Context) DdsInstanceGroupNodeArrayOutput
}

type DdsInstanceGroupNodeArray []DdsInstanceGroupNodeInput

func (DdsInstanceGroupNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceGroupNode)(nil)).Elem()
}

func (i DdsInstanceGroupNodeArray) ToDdsInstanceGroupNodeArrayOutput() DdsInstanceGroupNodeArrayOutput {
	return i.ToDdsInstanceGroupNodeArrayOutputWithContext(context.Background())
}

func (i DdsInstanceGroupNodeArray) ToDdsInstanceGroupNodeArrayOutputWithContext(ctx context.Context) DdsInstanceGroupNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceGroupNodeArrayOutput)
}

type DdsInstanceGroupNodeOutput struct{ *pulumi.OutputState }

func (DdsInstanceGroupNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceGroupNode)(nil)).Elem()
}

func (o DdsInstanceGroupNodeOutput) ToDdsInstanceGroupNodeOutput() DdsInstanceGroupNodeOutput {
	return o
}

func (o DdsInstanceGroupNodeOutput) ToDdsInstanceGroupNodeOutputWithContext(ctx context.Context) DdsInstanceGroupNodeOutput {
	return o
}

// Indicates the node ID.
func (o DdsInstanceGroupNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroupNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Indicates the node name.
func (o DdsInstanceGroupNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroupNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address of a node.
func (o DdsInstanceGroupNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroupNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// Indicates the EIP that has been bound on a node.
func (o DdsInstanceGroupNodeOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroupNode) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// Indicates the node role.
func (o DdsInstanceGroupNodeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroupNode) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o DdsInstanceGroupNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroupNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Indicates the node type.
func (o DdsInstanceGroupNodeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceGroupNode) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DdsInstanceGroupNodeArrayOutput struct{ *pulumi.OutputState }

func (DdsInstanceGroupNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceGroupNode)(nil)).Elem()
}

func (o DdsInstanceGroupNodeArrayOutput) ToDdsInstanceGroupNodeArrayOutput() DdsInstanceGroupNodeArrayOutput {
	return o
}

func (o DdsInstanceGroupNodeArrayOutput) ToDdsInstanceGroupNodeArrayOutputWithContext(ctx context.Context) DdsInstanceGroupNodeArrayOutput {
	return o
}

func (o DdsInstanceGroupNodeArrayOutput) Index(i pulumi.IntInput) DdsInstanceGroupNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdsInstanceGroupNode {
		return vs[0].([]DdsInstanceGroupNode)[vs[1].(int)]
	}).(DdsInstanceGroupNodeOutput)
}

type DdsInstanceNode struct {
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Indicates the node name.
	Name *string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp *string `pulumi:"privateIp"`
	// Indicates the EIP that has been bound on a node.
	PublicIp *string `pulumi:"publicIp"`
	// Indicates the node role.
	Role *string `pulumi:"role"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Indicates the node type.
	Type *string `pulumi:"type"`
}

// DdsInstanceNodeInput is an input type that accepts DdsInstanceNodeArgs and DdsInstanceNodeOutput values.
// You can construct a concrete instance of `DdsInstanceNodeInput` via:
//
//	DdsInstanceNodeArgs{...}
type DdsInstanceNodeInput interface {
	pulumi.Input

	ToDdsInstanceNodeOutput() DdsInstanceNodeOutput
	ToDdsInstanceNodeOutputWithContext(context.Context) DdsInstanceNodeOutput
}

type DdsInstanceNodeArgs struct {
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Indicates the node name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// Indicates the EIP that has been bound on a node.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// Indicates the node role.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Indicates the node type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DdsInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceNode)(nil)).Elem()
}

func (i DdsInstanceNodeArgs) ToDdsInstanceNodeOutput() DdsInstanceNodeOutput {
	return i.ToDdsInstanceNodeOutputWithContext(context.Background())
}

func (i DdsInstanceNodeArgs) ToDdsInstanceNodeOutputWithContext(ctx context.Context) DdsInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceNodeOutput)
}

// DdsInstanceNodeArrayInput is an input type that accepts DdsInstanceNodeArray and DdsInstanceNodeArrayOutput values.
// You can construct a concrete instance of `DdsInstanceNodeArrayInput` via:
//
//	DdsInstanceNodeArray{ DdsInstanceNodeArgs{...} }
type DdsInstanceNodeArrayInput interface {
	pulumi.Input

	ToDdsInstanceNodeArrayOutput() DdsInstanceNodeArrayOutput
	ToDdsInstanceNodeArrayOutputWithContext(context.Context) DdsInstanceNodeArrayOutput
}

type DdsInstanceNodeArray []DdsInstanceNodeInput

func (DdsInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceNode)(nil)).Elem()
}

func (i DdsInstanceNodeArray) ToDdsInstanceNodeArrayOutput() DdsInstanceNodeArrayOutput {
	return i.ToDdsInstanceNodeArrayOutputWithContext(context.Background())
}

func (i DdsInstanceNodeArray) ToDdsInstanceNodeArrayOutputWithContext(ctx context.Context) DdsInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsInstanceNodeArrayOutput)
}

type DdsInstanceNodeOutput struct{ *pulumi.OutputState }

func (DdsInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdsInstanceNode)(nil)).Elem()
}

func (o DdsInstanceNodeOutput) ToDdsInstanceNodeOutput() DdsInstanceNodeOutput {
	return o
}

func (o DdsInstanceNodeOutput) ToDdsInstanceNodeOutputWithContext(ctx context.Context) DdsInstanceNodeOutput {
	return o
}

// Indicates the node ID.
func (o DdsInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Indicates the node name.
func (o DdsInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address of a node.
func (o DdsInstanceNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// Indicates the EIP that has been bound on a node.
func (o DdsInstanceNodeOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceNode) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// Indicates the node role.
func (o DdsInstanceNodeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceNode) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o DdsInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Indicates the node type.
func (o DdsInstanceNodeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdsInstanceNode) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DdsInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (DdsInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdsInstanceNode)(nil)).Elem()
}

func (o DdsInstanceNodeArrayOutput) ToDdsInstanceNodeArrayOutput() DdsInstanceNodeArrayOutput {
	return o
}

func (o DdsInstanceNodeArrayOutput) ToDdsInstanceNodeArrayOutputWithContext(ctx context.Context) DdsInstanceNodeArrayOutput {
	return o
}

func (o DdsInstanceNodeArrayOutput) Index(i pulumi.IntInput) DdsInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdsInstanceNode {
		return vs[0].([]DdsInstanceNode)[vs[1].(int)]
	}).(DdsInstanceNodeOutput)
}

type DisStreamPartition struct {
	HashRange           *string `pulumi:"hashRange"`
	Id                  *string `pulumi:"id"`
	SequenceNumberRange *string `pulumi:"sequenceNumberRange"`
	Status              *string `pulumi:"status"`
}

// DisStreamPartitionInput is an input type that accepts DisStreamPartitionArgs and DisStreamPartitionOutput values.
// You can construct a concrete instance of `DisStreamPartitionInput` via:
//
//	DisStreamPartitionArgs{...}
type DisStreamPartitionInput interface {
	pulumi.Input

	ToDisStreamPartitionOutput() DisStreamPartitionOutput
	ToDisStreamPartitionOutputWithContext(context.Context) DisStreamPartitionOutput
}

type DisStreamPartitionArgs struct {
	HashRange           pulumi.StringPtrInput `pulumi:"hashRange"`
	Id                  pulumi.StringPtrInput `pulumi:"id"`
	SequenceNumberRange pulumi.StringPtrInput `pulumi:"sequenceNumberRange"`
	Status              pulumi.StringPtrInput `pulumi:"status"`
}

func (DisStreamPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DisStreamPartition)(nil)).Elem()
}

func (i DisStreamPartitionArgs) ToDisStreamPartitionOutput() DisStreamPartitionOutput {
	return i.ToDisStreamPartitionOutputWithContext(context.Background())
}

func (i DisStreamPartitionArgs) ToDisStreamPartitionOutputWithContext(ctx context.Context) DisStreamPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisStreamPartitionOutput)
}

// DisStreamPartitionArrayInput is an input type that accepts DisStreamPartitionArray and DisStreamPartitionArrayOutput values.
// You can construct a concrete instance of `DisStreamPartitionArrayInput` via:
//
//	DisStreamPartitionArray{ DisStreamPartitionArgs{...} }
type DisStreamPartitionArrayInput interface {
	pulumi.Input

	ToDisStreamPartitionArrayOutput() DisStreamPartitionArrayOutput
	ToDisStreamPartitionArrayOutputWithContext(context.Context) DisStreamPartitionArrayOutput
}

type DisStreamPartitionArray []DisStreamPartitionInput

func (DisStreamPartitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DisStreamPartition)(nil)).Elem()
}

func (i DisStreamPartitionArray) ToDisStreamPartitionArrayOutput() DisStreamPartitionArrayOutput {
	return i.ToDisStreamPartitionArrayOutputWithContext(context.Background())
}

func (i DisStreamPartitionArray) ToDisStreamPartitionArrayOutputWithContext(ctx context.Context) DisStreamPartitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisStreamPartitionArrayOutput)
}

type DisStreamPartitionOutput struct{ *pulumi.OutputState }

func (DisStreamPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisStreamPartition)(nil)).Elem()
}

func (o DisStreamPartitionOutput) ToDisStreamPartitionOutput() DisStreamPartitionOutput {
	return o
}

func (o DisStreamPartitionOutput) ToDisStreamPartitionOutputWithContext(ctx context.Context) DisStreamPartitionOutput {
	return o
}

func (o DisStreamPartitionOutput) HashRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisStreamPartition) *string { return v.HashRange }).(pulumi.StringPtrOutput)
}

func (o DisStreamPartitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisStreamPartition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DisStreamPartitionOutput) SequenceNumberRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisStreamPartition) *string { return v.SequenceNumberRange }).(pulumi.StringPtrOutput)
}

func (o DisStreamPartitionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisStreamPartition) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DisStreamPartitionArrayOutput struct{ *pulumi.OutputState }

func (DisStreamPartitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DisStreamPartition)(nil)).Elem()
}

func (o DisStreamPartitionArrayOutput) ToDisStreamPartitionArrayOutput() DisStreamPartitionArrayOutput {
	return o
}

func (o DisStreamPartitionArrayOutput) ToDisStreamPartitionArrayOutputWithContext(ctx context.Context) DisStreamPartitionArrayOutput {
	return o
}

func (o DisStreamPartitionArrayOutput) Index(i pulumi.IntInput) DisStreamPartitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DisStreamPartition {
		return vs[0].([]DisStreamPartition)[vs[1].(int)]
	}).(DisStreamPartitionOutput)
}

type DliQueueScalingPolicy struct {
	ImpactStartTime string `pulumi:"impactStartTime"`
	ImpactStopTime  string `pulumi:"impactStopTime"`
	MaxCu           int    `pulumi:"maxCu"`
	MinCu           int    `pulumi:"minCu"`
	Priority        int    `pulumi:"priority"`
}

// DliQueueScalingPolicyInput is an input type that accepts DliQueueScalingPolicyArgs and DliQueueScalingPolicyOutput values.
// You can construct a concrete instance of `DliQueueScalingPolicyInput` via:
//
//	DliQueueScalingPolicyArgs{...}
type DliQueueScalingPolicyInput interface {
	pulumi.Input

	ToDliQueueScalingPolicyOutput() DliQueueScalingPolicyOutput
	ToDliQueueScalingPolicyOutputWithContext(context.Context) DliQueueScalingPolicyOutput
}

type DliQueueScalingPolicyArgs struct {
	ImpactStartTime pulumi.StringInput `pulumi:"impactStartTime"`
	ImpactStopTime  pulumi.StringInput `pulumi:"impactStopTime"`
	MaxCu           pulumi.IntInput    `pulumi:"maxCu"`
	MinCu           pulumi.IntInput    `pulumi:"minCu"`
	Priority        pulumi.IntInput    `pulumi:"priority"`
}

func (DliQueueScalingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DliQueueScalingPolicy)(nil)).Elem()
}

func (i DliQueueScalingPolicyArgs) ToDliQueueScalingPolicyOutput() DliQueueScalingPolicyOutput {
	return i.ToDliQueueScalingPolicyOutputWithContext(context.Background())
}

func (i DliQueueScalingPolicyArgs) ToDliQueueScalingPolicyOutputWithContext(ctx context.Context) DliQueueScalingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliQueueScalingPolicyOutput)
}

// DliQueueScalingPolicyArrayInput is an input type that accepts DliQueueScalingPolicyArray and DliQueueScalingPolicyArrayOutput values.
// You can construct a concrete instance of `DliQueueScalingPolicyArrayInput` via:
//
//	DliQueueScalingPolicyArray{ DliQueueScalingPolicyArgs{...} }
type DliQueueScalingPolicyArrayInput interface {
	pulumi.Input

	ToDliQueueScalingPolicyArrayOutput() DliQueueScalingPolicyArrayOutput
	ToDliQueueScalingPolicyArrayOutputWithContext(context.Context) DliQueueScalingPolicyArrayOutput
}

type DliQueueScalingPolicyArray []DliQueueScalingPolicyInput

func (DliQueueScalingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DliQueueScalingPolicy)(nil)).Elem()
}

func (i DliQueueScalingPolicyArray) ToDliQueueScalingPolicyArrayOutput() DliQueueScalingPolicyArrayOutput {
	return i.ToDliQueueScalingPolicyArrayOutputWithContext(context.Background())
}

func (i DliQueueScalingPolicyArray) ToDliQueueScalingPolicyArrayOutputWithContext(ctx context.Context) DliQueueScalingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliQueueScalingPolicyArrayOutput)
}

type DliQueueScalingPolicyOutput struct{ *pulumi.OutputState }

func (DliQueueScalingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DliQueueScalingPolicy)(nil)).Elem()
}

func (o DliQueueScalingPolicyOutput) ToDliQueueScalingPolicyOutput() DliQueueScalingPolicyOutput {
	return o
}

func (o DliQueueScalingPolicyOutput) ToDliQueueScalingPolicyOutputWithContext(ctx context.Context) DliQueueScalingPolicyOutput {
	return o
}

func (o DliQueueScalingPolicyOutput) ImpactStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DliQueueScalingPolicy) string { return v.ImpactStartTime }).(pulumi.StringOutput)
}

func (o DliQueueScalingPolicyOutput) ImpactStopTime() pulumi.StringOutput {
	return o.ApplyT(func(v DliQueueScalingPolicy) string { return v.ImpactStopTime }).(pulumi.StringOutput)
}

func (o DliQueueScalingPolicyOutput) MaxCu() pulumi.IntOutput {
	return o.ApplyT(func(v DliQueueScalingPolicy) int { return v.MaxCu }).(pulumi.IntOutput)
}

func (o DliQueueScalingPolicyOutput) MinCu() pulumi.IntOutput {
	return o.ApplyT(func(v DliQueueScalingPolicy) int { return v.MinCu }).(pulumi.IntOutput)
}

func (o DliQueueScalingPolicyOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v DliQueueScalingPolicy) int { return v.Priority }).(pulumi.IntOutput)
}

type DliQueueScalingPolicyArrayOutput struct{ *pulumi.OutputState }

func (DliQueueScalingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DliQueueScalingPolicy)(nil)).Elem()
}

func (o DliQueueScalingPolicyArrayOutput) ToDliQueueScalingPolicyArrayOutput() DliQueueScalingPolicyArrayOutput {
	return o
}

func (o DliQueueScalingPolicyArrayOutput) ToDliQueueScalingPolicyArrayOutputWithContext(ctx context.Context) DliQueueScalingPolicyArrayOutput {
	return o
}

func (o DliQueueScalingPolicyArrayOutput) Index(i pulumi.IntInput) DliQueueScalingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DliQueueScalingPolicy {
		return vs[0].([]DliQueueScalingPolicy)[vs[1].(int)]
	}).(DliQueueScalingPolicyOutput)
}

type DliQueueSparkDriver struct {
	MaxConcurrent       *int    `pulumi:"maxConcurrent"`
	MaxInstance         *int    `pulumi:"maxInstance"`
	MaxPrefetchInstance *string `pulumi:"maxPrefetchInstance"`
}

// DliQueueSparkDriverInput is an input type that accepts DliQueueSparkDriverArgs and DliQueueSparkDriverOutput values.
// You can construct a concrete instance of `DliQueueSparkDriverInput` via:
//
//	DliQueueSparkDriverArgs{...}
type DliQueueSparkDriverInput interface {
	pulumi.Input

	ToDliQueueSparkDriverOutput() DliQueueSparkDriverOutput
	ToDliQueueSparkDriverOutputWithContext(context.Context) DliQueueSparkDriverOutput
}

type DliQueueSparkDriverArgs struct {
	MaxConcurrent       pulumi.IntPtrInput    `pulumi:"maxConcurrent"`
	MaxInstance         pulumi.IntPtrInput    `pulumi:"maxInstance"`
	MaxPrefetchInstance pulumi.StringPtrInput `pulumi:"maxPrefetchInstance"`
}

func (DliQueueSparkDriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DliQueueSparkDriver)(nil)).Elem()
}

func (i DliQueueSparkDriverArgs) ToDliQueueSparkDriverOutput() DliQueueSparkDriverOutput {
	return i.ToDliQueueSparkDriverOutputWithContext(context.Background())
}

func (i DliQueueSparkDriverArgs) ToDliQueueSparkDriverOutputWithContext(ctx context.Context) DliQueueSparkDriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliQueueSparkDriverOutput)
}

func (i DliQueueSparkDriverArgs) ToDliQueueSparkDriverPtrOutput() DliQueueSparkDriverPtrOutput {
	return i.ToDliQueueSparkDriverPtrOutputWithContext(context.Background())
}

func (i DliQueueSparkDriverArgs) ToDliQueueSparkDriverPtrOutputWithContext(ctx context.Context) DliQueueSparkDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliQueueSparkDriverOutput).ToDliQueueSparkDriverPtrOutputWithContext(ctx)
}

// DliQueueSparkDriverPtrInput is an input type that accepts DliQueueSparkDriverArgs, DliQueueSparkDriverPtr and DliQueueSparkDriverPtrOutput values.
// You can construct a concrete instance of `DliQueueSparkDriverPtrInput` via:
//
//	        DliQueueSparkDriverArgs{...}
//
//	or:
//
//	        nil
type DliQueueSparkDriverPtrInput interface {
	pulumi.Input

	ToDliQueueSparkDriverPtrOutput() DliQueueSparkDriverPtrOutput
	ToDliQueueSparkDriverPtrOutputWithContext(context.Context) DliQueueSparkDriverPtrOutput
}

type dliQueueSparkDriverPtrType DliQueueSparkDriverArgs

func DliQueueSparkDriverPtr(v *DliQueueSparkDriverArgs) DliQueueSparkDriverPtrInput {
	return (*dliQueueSparkDriverPtrType)(v)
}

func (*dliQueueSparkDriverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DliQueueSparkDriver)(nil)).Elem()
}

func (i *dliQueueSparkDriverPtrType) ToDliQueueSparkDriverPtrOutput() DliQueueSparkDriverPtrOutput {
	return i.ToDliQueueSparkDriverPtrOutputWithContext(context.Background())
}

func (i *dliQueueSparkDriverPtrType) ToDliQueueSparkDriverPtrOutputWithContext(ctx context.Context) DliQueueSparkDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliQueueSparkDriverPtrOutput)
}

type DliQueueSparkDriverOutput struct{ *pulumi.OutputState }

func (DliQueueSparkDriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DliQueueSparkDriver)(nil)).Elem()
}

func (o DliQueueSparkDriverOutput) ToDliQueueSparkDriverOutput() DliQueueSparkDriverOutput {
	return o
}

func (o DliQueueSparkDriverOutput) ToDliQueueSparkDriverOutputWithContext(ctx context.Context) DliQueueSparkDriverOutput {
	return o
}

func (o DliQueueSparkDriverOutput) ToDliQueueSparkDriverPtrOutput() DliQueueSparkDriverPtrOutput {
	return o.ToDliQueueSparkDriverPtrOutputWithContext(context.Background())
}

func (o DliQueueSparkDriverOutput) ToDliQueueSparkDriverPtrOutputWithContext(ctx context.Context) DliQueueSparkDriverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DliQueueSparkDriver) *DliQueueSparkDriver {
		return &v
	}).(DliQueueSparkDriverPtrOutput)
}

func (o DliQueueSparkDriverOutput) MaxConcurrent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DliQueueSparkDriver) *int { return v.MaxConcurrent }).(pulumi.IntPtrOutput)
}

func (o DliQueueSparkDriverOutput) MaxInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DliQueueSparkDriver) *int { return v.MaxInstance }).(pulumi.IntPtrOutput)
}

func (o DliQueueSparkDriverOutput) MaxPrefetchInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DliQueueSparkDriver) *string { return v.MaxPrefetchInstance }).(pulumi.StringPtrOutput)
}

type DliQueueSparkDriverPtrOutput struct{ *pulumi.OutputState }

func (DliQueueSparkDriverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DliQueueSparkDriver)(nil)).Elem()
}

func (o DliQueueSparkDriverPtrOutput) ToDliQueueSparkDriverPtrOutput() DliQueueSparkDriverPtrOutput {
	return o
}

func (o DliQueueSparkDriverPtrOutput) ToDliQueueSparkDriverPtrOutputWithContext(ctx context.Context) DliQueueSparkDriverPtrOutput {
	return o
}

func (o DliQueueSparkDriverPtrOutput) Elem() DliQueueSparkDriverOutput {
	return o.ApplyT(func(v *DliQueueSparkDriver) DliQueueSparkDriver {
		if v != nil {
			return *v
		}
		var ret DliQueueSparkDriver
		return ret
	}).(DliQueueSparkDriverOutput)
}

func (o DliQueueSparkDriverPtrOutput) MaxConcurrent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DliQueueSparkDriver) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrent
	}).(pulumi.IntPtrOutput)
}

func (o DliQueueSparkDriverPtrOutput) MaxInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DliQueueSparkDriver) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstance
	}).(pulumi.IntPtrOutput)
}

func (o DliQueueSparkDriverPtrOutput) MaxPrefetchInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DliQueueSparkDriver) *string {
		if v == nil {
			return nil
		}
		return v.MaxPrefetchInstance
	}).(pulumi.StringPtrOutput)
}

type DliSparkJobDependentPackage struct {
	GroupName string                               `pulumi:"groupName"`
	Packages  []DliSparkJobDependentPackagePackage `pulumi:"packages"`
}

// DliSparkJobDependentPackageInput is an input type that accepts DliSparkJobDependentPackageArgs and DliSparkJobDependentPackageOutput values.
// You can construct a concrete instance of `DliSparkJobDependentPackageInput` via:
//
//	DliSparkJobDependentPackageArgs{...}
type DliSparkJobDependentPackageInput interface {
	pulumi.Input

	ToDliSparkJobDependentPackageOutput() DliSparkJobDependentPackageOutput
	ToDliSparkJobDependentPackageOutputWithContext(context.Context) DliSparkJobDependentPackageOutput
}

type DliSparkJobDependentPackageArgs struct {
	GroupName pulumi.StringInput                           `pulumi:"groupName"`
	Packages  DliSparkJobDependentPackagePackageArrayInput `pulumi:"packages"`
}

func (DliSparkJobDependentPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DliSparkJobDependentPackage)(nil)).Elem()
}

func (i DliSparkJobDependentPackageArgs) ToDliSparkJobDependentPackageOutput() DliSparkJobDependentPackageOutput {
	return i.ToDliSparkJobDependentPackageOutputWithContext(context.Background())
}

func (i DliSparkJobDependentPackageArgs) ToDliSparkJobDependentPackageOutputWithContext(ctx context.Context) DliSparkJobDependentPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliSparkJobDependentPackageOutput)
}

// DliSparkJobDependentPackageArrayInput is an input type that accepts DliSparkJobDependentPackageArray and DliSparkJobDependentPackageArrayOutput values.
// You can construct a concrete instance of `DliSparkJobDependentPackageArrayInput` via:
//
//	DliSparkJobDependentPackageArray{ DliSparkJobDependentPackageArgs{...} }
type DliSparkJobDependentPackageArrayInput interface {
	pulumi.Input

	ToDliSparkJobDependentPackageArrayOutput() DliSparkJobDependentPackageArrayOutput
	ToDliSparkJobDependentPackageArrayOutputWithContext(context.Context) DliSparkJobDependentPackageArrayOutput
}

type DliSparkJobDependentPackageArray []DliSparkJobDependentPackageInput

func (DliSparkJobDependentPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DliSparkJobDependentPackage)(nil)).Elem()
}

func (i DliSparkJobDependentPackageArray) ToDliSparkJobDependentPackageArrayOutput() DliSparkJobDependentPackageArrayOutput {
	return i.ToDliSparkJobDependentPackageArrayOutputWithContext(context.Background())
}

func (i DliSparkJobDependentPackageArray) ToDliSparkJobDependentPackageArrayOutputWithContext(ctx context.Context) DliSparkJobDependentPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliSparkJobDependentPackageArrayOutput)
}

type DliSparkJobDependentPackageOutput struct{ *pulumi.OutputState }

func (DliSparkJobDependentPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DliSparkJobDependentPackage)(nil)).Elem()
}

func (o DliSparkJobDependentPackageOutput) ToDliSparkJobDependentPackageOutput() DliSparkJobDependentPackageOutput {
	return o
}

func (o DliSparkJobDependentPackageOutput) ToDliSparkJobDependentPackageOutputWithContext(ctx context.Context) DliSparkJobDependentPackageOutput {
	return o
}

func (o DliSparkJobDependentPackageOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v DliSparkJobDependentPackage) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o DliSparkJobDependentPackageOutput) Packages() DliSparkJobDependentPackagePackageArrayOutput {
	return o.ApplyT(func(v DliSparkJobDependentPackage) []DliSparkJobDependentPackagePackage { return v.Packages }).(DliSparkJobDependentPackagePackageArrayOutput)
}

type DliSparkJobDependentPackageArrayOutput struct{ *pulumi.OutputState }

func (DliSparkJobDependentPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DliSparkJobDependentPackage)(nil)).Elem()
}

func (o DliSparkJobDependentPackageArrayOutput) ToDliSparkJobDependentPackageArrayOutput() DliSparkJobDependentPackageArrayOutput {
	return o
}

func (o DliSparkJobDependentPackageArrayOutput) ToDliSparkJobDependentPackageArrayOutputWithContext(ctx context.Context) DliSparkJobDependentPackageArrayOutput {
	return o
}

func (o DliSparkJobDependentPackageArrayOutput) Index(i pulumi.IntInput) DliSparkJobDependentPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DliSparkJobDependentPackage {
		return vs[0].([]DliSparkJobDependentPackage)[vs[1].(int)]
	}).(DliSparkJobDependentPackageOutput)
}

type DliSparkJobDependentPackagePackage struct {
	PackageName string `pulumi:"packageName"`
	Type        string `pulumi:"type"`
}

// DliSparkJobDependentPackagePackageInput is an input type that accepts DliSparkJobDependentPackagePackageArgs and DliSparkJobDependentPackagePackageOutput values.
// You can construct a concrete instance of `DliSparkJobDependentPackagePackageInput` via:
//
//	DliSparkJobDependentPackagePackageArgs{...}
type DliSparkJobDependentPackagePackageInput interface {
	pulumi.Input

	ToDliSparkJobDependentPackagePackageOutput() DliSparkJobDependentPackagePackageOutput
	ToDliSparkJobDependentPackagePackageOutputWithContext(context.Context) DliSparkJobDependentPackagePackageOutput
}

type DliSparkJobDependentPackagePackageArgs struct {
	PackageName pulumi.StringInput `pulumi:"packageName"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (DliSparkJobDependentPackagePackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DliSparkJobDependentPackagePackage)(nil)).Elem()
}

func (i DliSparkJobDependentPackagePackageArgs) ToDliSparkJobDependentPackagePackageOutput() DliSparkJobDependentPackagePackageOutput {
	return i.ToDliSparkJobDependentPackagePackageOutputWithContext(context.Background())
}

func (i DliSparkJobDependentPackagePackageArgs) ToDliSparkJobDependentPackagePackageOutputWithContext(ctx context.Context) DliSparkJobDependentPackagePackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliSparkJobDependentPackagePackageOutput)
}

// DliSparkJobDependentPackagePackageArrayInput is an input type that accepts DliSparkJobDependentPackagePackageArray and DliSparkJobDependentPackagePackageArrayOutput values.
// You can construct a concrete instance of `DliSparkJobDependentPackagePackageArrayInput` via:
//
//	DliSparkJobDependentPackagePackageArray{ DliSparkJobDependentPackagePackageArgs{...} }
type DliSparkJobDependentPackagePackageArrayInput interface {
	pulumi.Input

	ToDliSparkJobDependentPackagePackageArrayOutput() DliSparkJobDependentPackagePackageArrayOutput
	ToDliSparkJobDependentPackagePackageArrayOutputWithContext(context.Context) DliSparkJobDependentPackagePackageArrayOutput
}

type DliSparkJobDependentPackagePackageArray []DliSparkJobDependentPackagePackageInput

func (DliSparkJobDependentPackagePackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DliSparkJobDependentPackagePackage)(nil)).Elem()
}

func (i DliSparkJobDependentPackagePackageArray) ToDliSparkJobDependentPackagePackageArrayOutput() DliSparkJobDependentPackagePackageArrayOutput {
	return i.ToDliSparkJobDependentPackagePackageArrayOutputWithContext(context.Background())
}

func (i DliSparkJobDependentPackagePackageArray) ToDliSparkJobDependentPackagePackageArrayOutputWithContext(ctx context.Context) DliSparkJobDependentPackagePackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliSparkJobDependentPackagePackageArrayOutput)
}

type DliSparkJobDependentPackagePackageOutput struct{ *pulumi.OutputState }

func (DliSparkJobDependentPackagePackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DliSparkJobDependentPackagePackage)(nil)).Elem()
}

func (o DliSparkJobDependentPackagePackageOutput) ToDliSparkJobDependentPackagePackageOutput() DliSparkJobDependentPackagePackageOutput {
	return o
}

func (o DliSparkJobDependentPackagePackageOutput) ToDliSparkJobDependentPackagePackageOutputWithContext(ctx context.Context) DliSparkJobDependentPackagePackageOutput {
	return o
}

func (o DliSparkJobDependentPackagePackageOutput) PackageName() pulumi.StringOutput {
	return o.ApplyT(func(v DliSparkJobDependentPackagePackage) string { return v.PackageName }).(pulumi.StringOutput)
}

func (o DliSparkJobDependentPackagePackageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DliSparkJobDependentPackagePackage) string { return v.Type }).(pulumi.StringOutput)
}

type DliSparkJobDependentPackagePackageArrayOutput struct{ *pulumi.OutputState }

func (DliSparkJobDependentPackagePackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DliSparkJobDependentPackagePackage)(nil)).Elem()
}

func (o DliSparkJobDependentPackagePackageArrayOutput) ToDliSparkJobDependentPackagePackageArrayOutput() DliSparkJobDependentPackagePackageArrayOutput {
	return o
}

func (o DliSparkJobDependentPackagePackageArrayOutput) ToDliSparkJobDependentPackagePackageArrayOutputWithContext(ctx context.Context) DliSparkJobDependentPackagePackageArrayOutput {
	return o
}

func (o DliSparkJobDependentPackagePackageArrayOutput) Index(i pulumi.IntInput) DliSparkJobDependentPackagePackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DliSparkJobDependentPackagePackage {
		return vs[0].([]DliSparkJobDependentPackagePackage)[vs[1].(int)]
	}).(DliSparkJobDependentPackagePackageOutput)
}

type DmsKafkaInstanceCrossVpcAccess struct {
	AdvertisedIp *string `pulumi:"advertisedIp"`
	// Deprecated: typo in lisenter_ip, please use "listenerIp" instead.
	LisenterIp *string `pulumi:"lisenterIp"`
	ListenerIp *string `pulumi:"listenerIp"`
	Port       *int    `pulumi:"port"`
	PortId     *string `pulumi:"portId"`
}

// DmsKafkaInstanceCrossVpcAccessInput is an input type that accepts DmsKafkaInstanceCrossVpcAccessArgs and DmsKafkaInstanceCrossVpcAccessOutput values.
// You can construct a concrete instance of `DmsKafkaInstanceCrossVpcAccessInput` via:
//
//	DmsKafkaInstanceCrossVpcAccessArgs{...}
type DmsKafkaInstanceCrossVpcAccessInput interface {
	pulumi.Input

	ToDmsKafkaInstanceCrossVpcAccessOutput() DmsKafkaInstanceCrossVpcAccessOutput
	ToDmsKafkaInstanceCrossVpcAccessOutputWithContext(context.Context) DmsKafkaInstanceCrossVpcAccessOutput
}

type DmsKafkaInstanceCrossVpcAccessArgs struct {
	AdvertisedIp pulumi.StringPtrInput `pulumi:"advertisedIp"`
	// Deprecated: typo in lisenter_ip, please use "listenerIp" instead.
	LisenterIp pulumi.StringPtrInput `pulumi:"lisenterIp"`
	ListenerIp pulumi.StringPtrInput `pulumi:"listenerIp"`
	Port       pulumi.IntPtrInput    `pulumi:"port"`
	PortId     pulumi.StringPtrInput `pulumi:"portId"`
}

func (DmsKafkaInstanceCrossVpcAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaInstanceCrossVpcAccess)(nil)).Elem()
}

func (i DmsKafkaInstanceCrossVpcAccessArgs) ToDmsKafkaInstanceCrossVpcAccessOutput() DmsKafkaInstanceCrossVpcAccessOutput {
	return i.ToDmsKafkaInstanceCrossVpcAccessOutputWithContext(context.Background())
}

func (i DmsKafkaInstanceCrossVpcAccessArgs) ToDmsKafkaInstanceCrossVpcAccessOutputWithContext(ctx context.Context) DmsKafkaInstanceCrossVpcAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstanceCrossVpcAccessOutput)
}

// DmsKafkaInstanceCrossVpcAccessArrayInput is an input type that accepts DmsKafkaInstanceCrossVpcAccessArray and DmsKafkaInstanceCrossVpcAccessArrayOutput values.
// You can construct a concrete instance of `DmsKafkaInstanceCrossVpcAccessArrayInput` via:
//
//	DmsKafkaInstanceCrossVpcAccessArray{ DmsKafkaInstanceCrossVpcAccessArgs{...} }
type DmsKafkaInstanceCrossVpcAccessArrayInput interface {
	pulumi.Input

	ToDmsKafkaInstanceCrossVpcAccessArrayOutput() DmsKafkaInstanceCrossVpcAccessArrayOutput
	ToDmsKafkaInstanceCrossVpcAccessArrayOutputWithContext(context.Context) DmsKafkaInstanceCrossVpcAccessArrayOutput
}

type DmsKafkaInstanceCrossVpcAccessArray []DmsKafkaInstanceCrossVpcAccessInput

func (DmsKafkaInstanceCrossVpcAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaInstanceCrossVpcAccess)(nil)).Elem()
}

func (i DmsKafkaInstanceCrossVpcAccessArray) ToDmsKafkaInstanceCrossVpcAccessArrayOutput() DmsKafkaInstanceCrossVpcAccessArrayOutput {
	return i.ToDmsKafkaInstanceCrossVpcAccessArrayOutputWithContext(context.Background())
}

func (i DmsKafkaInstanceCrossVpcAccessArray) ToDmsKafkaInstanceCrossVpcAccessArrayOutputWithContext(ctx context.Context) DmsKafkaInstanceCrossVpcAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstanceCrossVpcAccessArrayOutput)
}

type DmsKafkaInstanceCrossVpcAccessOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstanceCrossVpcAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaInstanceCrossVpcAccess)(nil)).Elem()
}

func (o DmsKafkaInstanceCrossVpcAccessOutput) ToDmsKafkaInstanceCrossVpcAccessOutput() DmsKafkaInstanceCrossVpcAccessOutput {
	return o
}

func (o DmsKafkaInstanceCrossVpcAccessOutput) ToDmsKafkaInstanceCrossVpcAccessOutputWithContext(ctx context.Context) DmsKafkaInstanceCrossVpcAccessOutput {
	return o
}

func (o DmsKafkaInstanceCrossVpcAccessOutput) AdvertisedIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstanceCrossVpcAccess) *string { return v.AdvertisedIp }).(pulumi.StringPtrOutput)
}

// Deprecated: typo in lisenter_ip, please use "listenerIp" instead.
func (o DmsKafkaInstanceCrossVpcAccessOutput) LisenterIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstanceCrossVpcAccess) *string { return v.LisenterIp }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceCrossVpcAccessOutput) ListenerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstanceCrossVpcAccess) *string { return v.ListenerIp }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceCrossVpcAccessOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstanceCrossVpcAccess) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o DmsKafkaInstanceCrossVpcAccessOutput) PortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstanceCrossVpcAccess) *string { return v.PortId }).(pulumi.StringPtrOutput)
}

type DmsKafkaInstanceCrossVpcAccessArrayOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstanceCrossVpcAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaInstanceCrossVpcAccess)(nil)).Elem()
}

func (o DmsKafkaInstanceCrossVpcAccessArrayOutput) ToDmsKafkaInstanceCrossVpcAccessArrayOutput() DmsKafkaInstanceCrossVpcAccessArrayOutput {
	return o
}

func (o DmsKafkaInstanceCrossVpcAccessArrayOutput) ToDmsKafkaInstanceCrossVpcAccessArrayOutputWithContext(ctx context.Context) DmsKafkaInstanceCrossVpcAccessArrayOutput {
	return o
}

func (o DmsKafkaInstanceCrossVpcAccessArrayOutput) Index(i pulumi.IntInput) DmsKafkaInstanceCrossVpcAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DmsKafkaInstanceCrossVpcAccess {
		return vs[0].([]DmsKafkaInstanceCrossVpcAccess)[vs[1].(int)]
	}).(DmsKafkaInstanceCrossVpcAccessOutput)
}

type DmsKafkaInstanceParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// DmsKafkaInstanceParameterInput is an input type that accepts DmsKafkaInstanceParameterArgs and DmsKafkaInstanceParameterOutput values.
// You can construct a concrete instance of `DmsKafkaInstanceParameterInput` via:
//
//	DmsKafkaInstanceParameterArgs{...}
type DmsKafkaInstanceParameterInput interface {
	pulumi.Input

	ToDmsKafkaInstanceParameterOutput() DmsKafkaInstanceParameterOutput
	ToDmsKafkaInstanceParameterOutputWithContext(context.Context) DmsKafkaInstanceParameterOutput
}

type DmsKafkaInstanceParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DmsKafkaInstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaInstanceParameter)(nil)).Elem()
}

func (i DmsKafkaInstanceParameterArgs) ToDmsKafkaInstanceParameterOutput() DmsKafkaInstanceParameterOutput {
	return i.ToDmsKafkaInstanceParameterOutputWithContext(context.Background())
}

func (i DmsKafkaInstanceParameterArgs) ToDmsKafkaInstanceParameterOutputWithContext(ctx context.Context) DmsKafkaInstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstanceParameterOutput)
}

// DmsKafkaInstanceParameterArrayInput is an input type that accepts DmsKafkaInstanceParameterArray and DmsKafkaInstanceParameterArrayOutput values.
// You can construct a concrete instance of `DmsKafkaInstanceParameterArrayInput` via:
//
//	DmsKafkaInstanceParameterArray{ DmsKafkaInstanceParameterArgs{...} }
type DmsKafkaInstanceParameterArrayInput interface {
	pulumi.Input

	ToDmsKafkaInstanceParameterArrayOutput() DmsKafkaInstanceParameterArrayOutput
	ToDmsKafkaInstanceParameterArrayOutputWithContext(context.Context) DmsKafkaInstanceParameterArrayOutput
}

type DmsKafkaInstanceParameterArray []DmsKafkaInstanceParameterInput

func (DmsKafkaInstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaInstanceParameter)(nil)).Elem()
}

func (i DmsKafkaInstanceParameterArray) ToDmsKafkaInstanceParameterArrayOutput() DmsKafkaInstanceParameterArrayOutput {
	return i.ToDmsKafkaInstanceParameterArrayOutputWithContext(context.Background())
}

func (i DmsKafkaInstanceParameterArray) ToDmsKafkaInstanceParameterArrayOutputWithContext(ctx context.Context) DmsKafkaInstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstanceParameterArrayOutput)
}

type DmsKafkaInstanceParameterOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaInstanceParameter)(nil)).Elem()
}

func (o DmsKafkaInstanceParameterOutput) ToDmsKafkaInstanceParameterOutput() DmsKafkaInstanceParameterOutput {
	return o
}

func (o DmsKafkaInstanceParameterOutput) ToDmsKafkaInstanceParameterOutputWithContext(ctx context.Context) DmsKafkaInstanceParameterOutput {
	return o
}

func (o DmsKafkaInstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaInstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaInstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type DmsKafkaInstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaInstanceParameter)(nil)).Elem()
}

func (o DmsKafkaInstanceParameterArrayOutput) ToDmsKafkaInstanceParameterArrayOutput() DmsKafkaInstanceParameterArrayOutput {
	return o
}

func (o DmsKafkaInstanceParameterArrayOutput) ToDmsKafkaInstanceParameterArrayOutputWithContext(ctx context.Context) DmsKafkaInstanceParameterArrayOutput {
	return o
}

func (o DmsKafkaInstanceParameterArrayOutput) Index(i pulumi.IntInput) DmsKafkaInstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DmsKafkaInstanceParameter {
		return vs[0].([]DmsKafkaInstanceParameter)[vs[1].(int)]
	}).(DmsKafkaInstanceParameterOutput)
}

type DmsKafkaInstancePortProtocol struct {
	PrivatePlainAddress            *string `pulumi:"privatePlainAddress"`
	PrivatePlainDomainName         *string `pulumi:"privatePlainDomainName"`
	PrivatePlainEnable             *bool   `pulumi:"privatePlainEnable"`
	PrivateSaslPlaintextAddress    *string `pulumi:"privateSaslPlaintextAddress"`
	PrivateSaslPlaintextDomainName *string `pulumi:"privateSaslPlaintextDomainName"`
	PrivateSaslPlaintextEnable     *bool   `pulumi:"privateSaslPlaintextEnable"`
	PrivateSaslSslAddress          *string `pulumi:"privateSaslSslAddress"`
	PrivateSaslSslDomainName       *string `pulumi:"privateSaslSslDomainName"`
	PrivateSaslSslEnable           *bool   `pulumi:"privateSaslSslEnable"`
	PublicPlainAddress             *string `pulumi:"publicPlainAddress"`
	PublicPlainDomainName          *string `pulumi:"publicPlainDomainName"`
	PublicPlainEnable              *bool   `pulumi:"publicPlainEnable"`
	PublicSaslPlaintextAddress     *string `pulumi:"publicSaslPlaintextAddress"`
	PublicSaslPlaintextDomainName  *string `pulumi:"publicSaslPlaintextDomainName"`
	PublicSaslPlaintextEnable      *bool   `pulumi:"publicSaslPlaintextEnable"`
	PublicSaslSslAddress           *string `pulumi:"publicSaslSslAddress"`
	PublicSaslSslDomainName        *string `pulumi:"publicSaslSslDomainName"`
	PublicSaslSslEnable            *bool   `pulumi:"publicSaslSslEnable"`
}

// DmsKafkaInstancePortProtocolInput is an input type that accepts DmsKafkaInstancePortProtocolArgs and DmsKafkaInstancePortProtocolOutput values.
// You can construct a concrete instance of `DmsKafkaInstancePortProtocolInput` via:
//
//	DmsKafkaInstancePortProtocolArgs{...}
type DmsKafkaInstancePortProtocolInput interface {
	pulumi.Input

	ToDmsKafkaInstancePortProtocolOutput() DmsKafkaInstancePortProtocolOutput
	ToDmsKafkaInstancePortProtocolOutputWithContext(context.Context) DmsKafkaInstancePortProtocolOutput
}

type DmsKafkaInstancePortProtocolArgs struct {
	PrivatePlainAddress            pulumi.StringPtrInput `pulumi:"privatePlainAddress"`
	PrivatePlainDomainName         pulumi.StringPtrInput `pulumi:"privatePlainDomainName"`
	PrivatePlainEnable             pulumi.BoolPtrInput   `pulumi:"privatePlainEnable"`
	PrivateSaslPlaintextAddress    pulumi.StringPtrInput `pulumi:"privateSaslPlaintextAddress"`
	PrivateSaslPlaintextDomainName pulumi.StringPtrInput `pulumi:"privateSaslPlaintextDomainName"`
	PrivateSaslPlaintextEnable     pulumi.BoolPtrInput   `pulumi:"privateSaslPlaintextEnable"`
	PrivateSaslSslAddress          pulumi.StringPtrInput `pulumi:"privateSaslSslAddress"`
	PrivateSaslSslDomainName       pulumi.StringPtrInput `pulumi:"privateSaslSslDomainName"`
	PrivateSaslSslEnable           pulumi.BoolPtrInput   `pulumi:"privateSaslSslEnable"`
	PublicPlainAddress             pulumi.StringPtrInput `pulumi:"publicPlainAddress"`
	PublicPlainDomainName          pulumi.StringPtrInput `pulumi:"publicPlainDomainName"`
	PublicPlainEnable              pulumi.BoolPtrInput   `pulumi:"publicPlainEnable"`
	PublicSaslPlaintextAddress     pulumi.StringPtrInput `pulumi:"publicSaslPlaintextAddress"`
	PublicSaslPlaintextDomainName  pulumi.StringPtrInput `pulumi:"publicSaslPlaintextDomainName"`
	PublicSaslPlaintextEnable      pulumi.BoolPtrInput   `pulumi:"publicSaslPlaintextEnable"`
	PublicSaslSslAddress           pulumi.StringPtrInput `pulumi:"publicSaslSslAddress"`
	PublicSaslSslDomainName        pulumi.StringPtrInput `pulumi:"publicSaslSslDomainName"`
	PublicSaslSslEnable            pulumi.BoolPtrInput   `pulumi:"publicSaslSslEnable"`
}

func (DmsKafkaInstancePortProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaInstancePortProtocol)(nil)).Elem()
}

func (i DmsKafkaInstancePortProtocolArgs) ToDmsKafkaInstancePortProtocolOutput() DmsKafkaInstancePortProtocolOutput {
	return i.ToDmsKafkaInstancePortProtocolOutputWithContext(context.Background())
}

func (i DmsKafkaInstancePortProtocolArgs) ToDmsKafkaInstancePortProtocolOutputWithContext(ctx context.Context) DmsKafkaInstancePortProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstancePortProtocolOutput)
}

// DmsKafkaInstancePortProtocolArrayInput is an input type that accepts DmsKafkaInstancePortProtocolArray and DmsKafkaInstancePortProtocolArrayOutput values.
// You can construct a concrete instance of `DmsKafkaInstancePortProtocolArrayInput` via:
//
//	DmsKafkaInstancePortProtocolArray{ DmsKafkaInstancePortProtocolArgs{...} }
type DmsKafkaInstancePortProtocolArrayInput interface {
	pulumi.Input

	ToDmsKafkaInstancePortProtocolArrayOutput() DmsKafkaInstancePortProtocolArrayOutput
	ToDmsKafkaInstancePortProtocolArrayOutputWithContext(context.Context) DmsKafkaInstancePortProtocolArrayOutput
}

type DmsKafkaInstancePortProtocolArray []DmsKafkaInstancePortProtocolInput

func (DmsKafkaInstancePortProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaInstancePortProtocol)(nil)).Elem()
}

func (i DmsKafkaInstancePortProtocolArray) ToDmsKafkaInstancePortProtocolArrayOutput() DmsKafkaInstancePortProtocolArrayOutput {
	return i.ToDmsKafkaInstancePortProtocolArrayOutputWithContext(context.Background())
}

func (i DmsKafkaInstancePortProtocolArray) ToDmsKafkaInstancePortProtocolArrayOutputWithContext(ctx context.Context) DmsKafkaInstancePortProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstancePortProtocolArrayOutput)
}

type DmsKafkaInstancePortProtocolOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstancePortProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaInstancePortProtocol)(nil)).Elem()
}

func (o DmsKafkaInstancePortProtocolOutput) ToDmsKafkaInstancePortProtocolOutput() DmsKafkaInstancePortProtocolOutput {
	return o
}

func (o DmsKafkaInstancePortProtocolOutput) ToDmsKafkaInstancePortProtocolOutputWithContext(ctx context.Context) DmsKafkaInstancePortProtocolOutput {
	return o
}

func (o DmsKafkaInstancePortProtocolOutput) PrivatePlainAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PrivatePlainAddress }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivatePlainDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PrivatePlainDomainName }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivatePlainEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *bool { return v.PrivatePlainEnable }).(pulumi.BoolPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivateSaslPlaintextAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PrivateSaslPlaintextAddress }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivateSaslPlaintextDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PrivateSaslPlaintextDomainName }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivateSaslPlaintextEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *bool { return v.PrivateSaslPlaintextEnable }).(pulumi.BoolPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivateSaslSslAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PrivateSaslSslAddress }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivateSaslSslDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PrivateSaslSslDomainName }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PrivateSaslSslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *bool { return v.PrivateSaslSslEnable }).(pulumi.BoolPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicPlainAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PublicPlainAddress }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicPlainDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PublicPlainDomainName }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicPlainEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *bool { return v.PublicPlainEnable }).(pulumi.BoolPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicSaslPlaintextAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PublicSaslPlaintextAddress }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicSaslPlaintextDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PublicSaslPlaintextDomainName }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicSaslPlaintextEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *bool { return v.PublicSaslPlaintextEnable }).(pulumi.BoolPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicSaslSslAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PublicSaslSslAddress }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicSaslSslDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *string { return v.PublicSaslSslDomainName }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstancePortProtocolOutput) PublicSaslSslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DmsKafkaInstancePortProtocol) *bool { return v.PublicSaslSslEnable }).(pulumi.BoolPtrOutput)
}

type DmsKafkaInstancePortProtocolArrayOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstancePortProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaInstancePortProtocol)(nil)).Elem()
}

func (o DmsKafkaInstancePortProtocolArrayOutput) ToDmsKafkaInstancePortProtocolArrayOutput() DmsKafkaInstancePortProtocolArrayOutput {
	return o
}

func (o DmsKafkaInstancePortProtocolArrayOutput) ToDmsKafkaInstancePortProtocolArrayOutputWithContext(ctx context.Context) DmsKafkaInstancePortProtocolArrayOutput {
	return o
}

func (o DmsKafkaInstancePortProtocolArrayOutput) Index(i pulumi.IntInput) DmsKafkaInstancePortProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DmsKafkaInstancePortProtocol {
		return vs[0].([]DmsKafkaInstancePortProtocol)[vs[1].(int)]
	}).(DmsKafkaInstancePortProtocolOutput)
}

type DmsKafkaMessageProducePropertyList struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// DmsKafkaMessageProducePropertyListInput is an input type that accepts DmsKafkaMessageProducePropertyListArgs and DmsKafkaMessageProducePropertyListOutput values.
// You can construct a concrete instance of `DmsKafkaMessageProducePropertyListInput` via:
//
//	DmsKafkaMessageProducePropertyListArgs{...}
type DmsKafkaMessageProducePropertyListInput interface {
	pulumi.Input

	ToDmsKafkaMessageProducePropertyListOutput() DmsKafkaMessageProducePropertyListOutput
	ToDmsKafkaMessageProducePropertyListOutputWithContext(context.Context) DmsKafkaMessageProducePropertyListOutput
}

type DmsKafkaMessageProducePropertyListArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DmsKafkaMessageProducePropertyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaMessageProducePropertyList)(nil)).Elem()
}

func (i DmsKafkaMessageProducePropertyListArgs) ToDmsKafkaMessageProducePropertyListOutput() DmsKafkaMessageProducePropertyListOutput {
	return i.ToDmsKafkaMessageProducePropertyListOutputWithContext(context.Background())
}

func (i DmsKafkaMessageProducePropertyListArgs) ToDmsKafkaMessageProducePropertyListOutputWithContext(ctx context.Context) DmsKafkaMessageProducePropertyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaMessageProducePropertyListOutput)
}

// DmsKafkaMessageProducePropertyListArrayInput is an input type that accepts DmsKafkaMessageProducePropertyListArray and DmsKafkaMessageProducePropertyListArrayOutput values.
// You can construct a concrete instance of `DmsKafkaMessageProducePropertyListArrayInput` via:
//
//	DmsKafkaMessageProducePropertyListArray{ DmsKafkaMessageProducePropertyListArgs{...} }
type DmsKafkaMessageProducePropertyListArrayInput interface {
	pulumi.Input

	ToDmsKafkaMessageProducePropertyListArrayOutput() DmsKafkaMessageProducePropertyListArrayOutput
	ToDmsKafkaMessageProducePropertyListArrayOutputWithContext(context.Context) DmsKafkaMessageProducePropertyListArrayOutput
}

type DmsKafkaMessageProducePropertyListArray []DmsKafkaMessageProducePropertyListInput

func (DmsKafkaMessageProducePropertyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaMessageProducePropertyList)(nil)).Elem()
}

func (i DmsKafkaMessageProducePropertyListArray) ToDmsKafkaMessageProducePropertyListArrayOutput() DmsKafkaMessageProducePropertyListArrayOutput {
	return i.ToDmsKafkaMessageProducePropertyListArrayOutputWithContext(context.Background())
}

func (i DmsKafkaMessageProducePropertyListArray) ToDmsKafkaMessageProducePropertyListArrayOutputWithContext(ctx context.Context) DmsKafkaMessageProducePropertyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaMessageProducePropertyListArrayOutput)
}

type DmsKafkaMessageProducePropertyListOutput struct{ *pulumi.OutputState }

func (DmsKafkaMessageProducePropertyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaMessageProducePropertyList)(nil)).Elem()
}

func (o DmsKafkaMessageProducePropertyListOutput) ToDmsKafkaMessageProducePropertyListOutput() DmsKafkaMessageProducePropertyListOutput {
	return o
}

func (o DmsKafkaMessageProducePropertyListOutput) ToDmsKafkaMessageProducePropertyListOutputWithContext(ctx context.Context) DmsKafkaMessageProducePropertyListOutput {
	return o
}

func (o DmsKafkaMessageProducePropertyListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaMessageProducePropertyList) string { return v.Name }).(pulumi.StringOutput)
}

func (o DmsKafkaMessageProducePropertyListOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaMessageProducePropertyList) string { return v.Value }).(pulumi.StringOutput)
}

type DmsKafkaMessageProducePropertyListArrayOutput struct{ *pulumi.OutputState }

func (DmsKafkaMessageProducePropertyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaMessageProducePropertyList)(nil)).Elem()
}

func (o DmsKafkaMessageProducePropertyListArrayOutput) ToDmsKafkaMessageProducePropertyListArrayOutput() DmsKafkaMessageProducePropertyListArrayOutput {
	return o
}

func (o DmsKafkaMessageProducePropertyListArrayOutput) ToDmsKafkaMessageProducePropertyListArrayOutputWithContext(ctx context.Context) DmsKafkaMessageProducePropertyListArrayOutput {
	return o
}

func (o DmsKafkaMessageProducePropertyListArrayOutput) Index(i pulumi.IntInput) DmsKafkaMessageProducePropertyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DmsKafkaMessageProducePropertyList {
		return vs[0].([]DmsKafkaMessageProducePropertyList)[vs[1].(int)]
	}).(DmsKafkaMessageProducePropertyListOutput)
}

type DmsKafkaPermissionsPolicy struct {
	AccessPolicy string `pulumi:"accessPolicy"`
	UserName     string `pulumi:"userName"`
}

// DmsKafkaPermissionsPolicyInput is an input type that accepts DmsKafkaPermissionsPolicyArgs and DmsKafkaPermissionsPolicyOutput values.
// You can construct a concrete instance of `DmsKafkaPermissionsPolicyInput` via:
//
//	DmsKafkaPermissionsPolicyArgs{...}
type DmsKafkaPermissionsPolicyInput interface {
	pulumi.Input

	ToDmsKafkaPermissionsPolicyOutput() DmsKafkaPermissionsPolicyOutput
	ToDmsKafkaPermissionsPolicyOutputWithContext(context.Context) DmsKafkaPermissionsPolicyOutput
}

type DmsKafkaPermissionsPolicyArgs struct {
	AccessPolicy pulumi.StringInput `pulumi:"accessPolicy"`
	UserName     pulumi.StringInput `pulumi:"userName"`
}

func (DmsKafkaPermissionsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaPermissionsPolicy)(nil)).Elem()
}

func (i DmsKafkaPermissionsPolicyArgs) ToDmsKafkaPermissionsPolicyOutput() DmsKafkaPermissionsPolicyOutput {
	return i.ToDmsKafkaPermissionsPolicyOutputWithContext(context.Background())
}

func (i DmsKafkaPermissionsPolicyArgs) ToDmsKafkaPermissionsPolicyOutputWithContext(ctx context.Context) DmsKafkaPermissionsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaPermissionsPolicyOutput)
}

// DmsKafkaPermissionsPolicyArrayInput is an input type that accepts DmsKafkaPermissionsPolicyArray and DmsKafkaPermissionsPolicyArrayOutput values.
// You can construct a concrete instance of `DmsKafkaPermissionsPolicyArrayInput` via:
//
//	DmsKafkaPermissionsPolicyArray{ DmsKafkaPermissionsPolicyArgs{...} }
type DmsKafkaPermissionsPolicyArrayInput interface {
	pulumi.Input

	ToDmsKafkaPermissionsPolicyArrayOutput() DmsKafkaPermissionsPolicyArrayOutput
	ToDmsKafkaPermissionsPolicyArrayOutputWithContext(context.Context) DmsKafkaPermissionsPolicyArrayOutput
}

type DmsKafkaPermissionsPolicyArray []DmsKafkaPermissionsPolicyInput

func (DmsKafkaPermissionsPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaPermissionsPolicy)(nil)).Elem()
}

func (i DmsKafkaPermissionsPolicyArray) ToDmsKafkaPermissionsPolicyArrayOutput() DmsKafkaPermissionsPolicyArrayOutput {
	return i.ToDmsKafkaPermissionsPolicyArrayOutputWithContext(context.Background())
}

func (i DmsKafkaPermissionsPolicyArray) ToDmsKafkaPermissionsPolicyArrayOutputWithContext(ctx context.Context) DmsKafkaPermissionsPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaPermissionsPolicyArrayOutput)
}

type DmsKafkaPermissionsPolicyOutput struct{ *pulumi.OutputState }

func (DmsKafkaPermissionsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaPermissionsPolicy)(nil)).Elem()
}

func (o DmsKafkaPermissionsPolicyOutput) ToDmsKafkaPermissionsPolicyOutput() DmsKafkaPermissionsPolicyOutput {
	return o
}

func (o DmsKafkaPermissionsPolicyOutput) ToDmsKafkaPermissionsPolicyOutputWithContext(ctx context.Context) DmsKafkaPermissionsPolicyOutput {
	return o
}

func (o DmsKafkaPermissionsPolicyOutput) AccessPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaPermissionsPolicy) string { return v.AccessPolicy }).(pulumi.StringOutput)
}

func (o DmsKafkaPermissionsPolicyOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaPermissionsPolicy) string { return v.UserName }).(pulumi.StringOutput)
}

type DmsKafkaPermissionsPolicyArrayOutput struct{ *pulumi.OutputState }

func (DmsKafkaPermissionsPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaPermissionsPolicy)(nil)).Elem()
}

func (o DmsKafkaPermissionsPolicyArrayOutput) ToDmsKafkaPermissionsPolicyArrayOutput() DmsKafkaPermissionsPolicyArrayOutput {
	return o
}

func (o DmsKafkaPermissionsPolicyArrayOutput) ToDmsKafkaPermissionsPolicyArrayOutputWithContext(ctx context.Context) DmsKafkaPermissionsPolicyArrayOutput {
	return o
}

func (o DmsKafkaPermissionsPolicyArrayOutput) Index(i pulumi.IntInput) DmsKafkaPermissionsPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DmsKafkaPermissionsPolicy {
		return vs[0].([]DmsKafkaPermissionsPolicy)[vs[1].(int)]
	}).(DmsKafkaPermissionsPolicyOutput)
}

type DmsKafkaTopicConfig struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// DmsKafkaTopicConfigInput is an input type that accepts DmsKafkaTopicConfigArgs and DmsKafkaTopicConfigOutput values.
// You can construct a concrete instance of `DmsKafkaTopicConfigInput` via:
//
//	DmsKafkaTopicConfigArgs{...}
type DmsKafkaTopicConfigInput interface {
	pulumi.Input

	ToDmsKafkaTopicConfigOutput() DmsKafkaTopicConfigOutput
	ToDmsKafkaTopicConfigOutputWithContext(context.Context) DmsKafkaTopicConfigOutput
}

type DmsKafkaTopicConfigArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DmsKafkaTopicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaTopicConfig)(nil)).Elem()
}

func (i DmsKafkaTopicConfigArgs) ToDmsKafkaTopicConfigOutput() DmsKafkaTopicConfigOutput {
	return i.ToDmsKafkaTopicConfigOutputWithContext(context.Background())
}

func (i DmsKafkaTopicConfigArgs) ToDmsKafkaTopicConfigOutputWithContext(ctx context.Context) DmsKafkaTopicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaTopicConfigOutput)
}

// DmsKafkaTopicConfigArrayInput is an input type that accepts DmsKafkaTopicConfigArray and DmsKafkaTopicConfigArrayOutput values.
// You can construct a concrete instance of `DmsKafkaTopicConfigArrayInput` via:
//
//	DmsKafkaTopicConfigArray{ DmsKafkaTopicConfigArgs{...} }
type DmsKafkaTopicConfigArrayInput interface {
	pulumi.Input

	ToDmsKafkaTopicConfigArrayOutput() DmsKafkaTopicConfigArrayOutput
	ToDmsKafkaTopicConfigArrayOutputWithContext(context.Context) DmsKafkaTopicConfigArrayOutput
}

type DmsKafkaTopicConfigArray []DmsKafkaTopicConfigInput

func (DmsKafkaTopicConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaTopicConfig)(nil)).Elem()
}

func (i DmsKafkaTopicConfigArray) ToDmsKafkaTopicConfigArrayOutput() DmsKafkaTopicConfigArrayOutput {
	return i.ToDmsKafkaTopicConfigArrayOutputWithContext(context.Background())
}

func (i DmsKafkaTopicConfigArray) ToDmsKafkaTopicConfigArrayOutputWithContext(ctx context.Context) DmsKafkaTopicConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaTopicConfigArrayOutput)
}

type DmsKafkaTopicConfigOutput struct{ *pulumi.OutputState }

func (DmsKafkaTopicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DmsKafkaTopicConfig)(nil)).Elem()
}

func (o DmsKafkaTopicConfigOutput) ToDmsKafkaTopicConfigOutput() DmsKafkaTopicConfigOutput {
	return o
}

func (o DmsKafkaTopicConfigOutput) ToDmsKafkaTopicConfigOutputWithContext(ctx context.Context) DmsKafkaTopicConfigOutput {
	return o
}

func (o DmsKafkaTopicConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaTopicConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o DmsKafkaTopicConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DmsKafkaTopicConfig) string { return v.Value }).(pulumi.StringOutput)
}

type DmsKafkaTopicConfigArrayOutput struct{ *pulumi.OutputState }

func (DmsKafkaTopicConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DmsKafkaTopicConfig)(nil)).Elem()
}

func (o DmsKafkaTopicConfigArrayOutput) ToDmsKafkaTopicConfigArrayOutput() DmsKafkaTopicConfigArrayOutput {
	return o
}

func (o DmsKafkaTopicConfigArrayOutput) ToDmsKafkaTopicConfigArrayOutputWithContext(ctx context.Context) DmsKafkaTopicConfigArrayOutput {
	return o
}

func (o DmsKafkaTopicConfigArrayOutput) Index(i pulumi.IntInput) DmsKafkaTopicConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DmsKafkaTopicConfig {
		return vs[0].([]DmsKafkaTopicConfig)[vs[1].(int)]
	}).(DmsKafkaTopicConfigOutput)
}

type DnsZoneRouter struct {
	// The ID of the associated VPC.
	RouterId string `pulumi:"routerId"`
	// The region of the VPC.
	RouterRegion *string `pulumi:"routerRegion"`
}

// DnsZoneRouterInput is an input type that accepts DnsZoneRouterArgs and DnsZoneRouterOutput values.
// You can construct a concrete instance of `DnsZoneRouterInput` via:
//
//	DnsZoneRouterArgs{...}
type DnsZoneRouterInput interface {
	pulumi.Input

	ToDnsZoneRouterOutput() DnsZoneRouterOutput
	ToDnsZoneRouterOutputWithContext(context.Context) DnsZoneRouterOutput
}

type DnsZoneRouterArgs struct {
	// The ID of the associated VPC.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// The region of the VPC.
	RouterRegion pulumi.StringPtrInput `pulumi:"routerRegion"`
}

func (DnsZoneRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsZoneRouter)(nil)).Elem()
}

func (i DnsZoneRouterArgs) ToDnsZoneRouterOutput() DnsZoneRouterOutput {
	return i.ToDnsZoneRouterOutputWithContext(context.Background())
}

func (i DnsZoneRouterArgs) ToDnsZoneRouterOutputWithContext(ctx context.Context) DnsZoneRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsZoneRouterOutput)
}

// DnsZoneRouterArrayInput is an input type that accepts DnsZoneRouterArray and DnsZoneRouterArrayOutput values.
// You can construct a concrete instance of `DnsZoneRouterArrayInput` via:
//
//	DnsZoneRouterArray{ DnsZoneRouterArgs{...} }
type DnsZoneRouterArrayInput interface {
	pulumi.Input

	ToDnsZoneRouterArrayOutput() DnsZoneRouterArrayOutput
	ToDnsZoneRouterArrayOutputWithContext(context.Context) DnsZoneRouterArrayOutput
}

type DnsZoneRouterArray []DnsZoneRouterInput

func (DnsZoneRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsZoneRouter)(nil)).Elem()
}

func (i DnsZoneRouterArray) ToDnsZoneRouterArrayOutput() DnsZoneRouterArrayOutput {
	return i.ToDnsZoneRouterArrayOutputWithContext(context.Background())
}

func (i DnsZoneRouterArray) ToDnsZoneRouterArrayOutputWithContext(ctx context.Context) DnsZoneRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsZoneRouterArrayOutput)
}

type DnsZoneRouterOutput struct{ *pulumi.OutputState }

func (DnsZoneRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsZoneRouter)(nil)).Elem()
}

func (o DnsZoneRouterOutput) ToDnsZoneRouterOutput() DnsZoneRouterOutput {
	return o
}

func (o DnsZoneRouterOutput) ToDnsZoneRouterOutputWithContext(ctx context.Context) DnsZoneRouterOutput {
	return o
}

// The ID of the associated VPC.
func (o DnsZoneRouterOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v DnsZoneRouter) string { return v.RouterId }).(pulumi.StringOutput)
}

// The region of the VPC.
func (o DnsZoneRouterOutput) RouterRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsZoneRouter) *string { return v.RouterRegion }).(pulumi.StringPtrOutput)
}

type DnsZoneRouterArrayOutput struct{ *pulumi.OutputState }

func (DnsZoneRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsZoneRouter)(nil)).Elem()
}

func (o DnsZoneRouterArrayOutput) ToDnsZoneRouterArrayOutput() DnsZoneRouterArrayOutput {
	return o
}

func (o DnsZoneRouterArrayOutput) ToDnsZoneRouterArrayOutputWithContext(ctx context.Context) DnsZoneRouterArrayOutput {
	return o
}

func (o DnsZoneRouterArrayOutput) Index(i pulumi.IntInput) DnsZoneRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsZoneRouter {
		return vs[0].([]DnsZoneRouter)[vs[1].(int)]
	}).(DnsZoneRouterOutput)
}

type DrsJobDestinationDb struct {
	EngineType      string  `pulumi:"engineType"`
	InstanceId      *string `pulumi:"instanceId"`
	Ip              string  `pulumi:"ip"`
	Name            *string `pulumi:"name"`
	Password        string  `pulumi:"password"`
	Port            int     `pulumi:"port"`
	Region          *string `pulumi:"region"`
	SslCertCheckSum *string `pulumi:"sslCertCheckSum"`
	SslCertKey      *string `pulumi:"sslCertKey"`
	SslCertName     *string `pulumi:"sslCertName"`
	SslCertPassword *string `pulumi:"sslCertPassword"`
	SslEnabled      *bool   `pulumi:"sslEnabled"`
	SubnetId        *string `pulumi:"subnetId"`
	User            string  `pulumi:"user"`
}

// DrsJobDestinationDbInput is an input type that accepts DrsJobDestinationDbArgs and DrsJobDestinationDbOutput values.
// You can construct a concrete instance of `DrsJobDestinationDbInput` via:
//
//	DrsJobDestinationDbArgs{...}
type DrsJobDestinationDbInput interface {
	pulumi.Input

	ToDrsJobDestinationDbOutput() DrsJobDestinationDbOutput
	ToDrsJobDestinationDbOutputWithContext(context.Context) DrsJobDestinationDbOutput
}

type DrsJobDestinationDbArgs struct {
	EngineType      pulumi.StringInput    `pulumi:"engineType"`
	InstanceId      pulumi.StringPtrInput `pulumi:"instanceId"`
	Ip              pulumi.StringInput    `pulumi:"ip"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
	Password        pulumi.StringInput    `pulumi:"password"`
	Port            pulumi.IntInput       `pulumi:"port"`
	Region          pulumi.StringPtrInput `pulumi:"region"`
	SslCertCheckSum pulumi.StringPtrInput `pulumi:"sslCertCheckSum"`
	SslCertKey      pulumi.StringPtrInput `pulumi:"sslCertKey"`
	SslCertName     pulumi.StringPtrInput `pulumi:"sslCertName"`
	SslCertPassword pulumi.StringPtrInput `pulumi:"sslCertPassword"`
	SslEnabled      pulumi.BoolPtrInput   `pulumi:"sslEnabled"`
	SubnetId        pulumi.StringPtrInput `pulumi:"subnetId"`
	User            pulumi.StringInput    `pulumi:"user"`
}

func (DrsJobDestinationDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrsJobDestinationDb)(nil)).Elem()
}

func (i DrsJobDestinationDbArgs) ToDrsJobDestinationDbOutput() DrsJobDestinationDbOutput {
	return i.ToDrsJobDestinationDbOutputWithContext(context.Background())
}

func (i DrsJobDestinationDbArgs) ToDrsJobDestinationDbOutputWithContext(ctx context.Context) DrsJobDestinationDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobDestinationDbOutput)
}

func (i DrsJobDestinationDbArgs) ToDrsJobDestinationDbPtrOutput() DrsJobDestinationDbPtrOutput {
	return i.ToDrsJobDestinationDbPtrOutputWithContext(context.Background())
}

func (i DrsJobDestinationDbArgs) ToDrsJobDestinationDbPtrOutputWithContext(ctx context.Context) DrsJobDestinationDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobDestinationDbOutput).ToDrsJobDestinationDbPtrOutputWithContext(ctx)
}

// DrsJobDestinationDbPtrInput is an input type that accepts DrsJobDestinationDbArgs, DrsJobDestinationDbPtr and DrsJobDestinationDbPtrOutput values.
// You can construct a concrete instance of `DrsJobDestinationDbPtrInput` via:
//
//	        DrsJobDestinationDbArgs{...}
//
//	or:
//
//	        nil
type DrsJobDestinationDbPtrInput interface {
	pulumi.Input

	ToDrsJobDestinationDbPtrOutput() DrsJobDestinationDbPtrOutput
	ToDrsJobDestinationDbPtrOutputWithContext(context.Context) DrsJobDestinationDbPtrOutput
}

type drsJobDestinationDbPtrType DrsJobDestinationDbArgs

func DrsJobDestinationDbPtr(v *DrsJobDestinationDbArgs) DrsJobDestinationDbPtrInput {
	return (*drsJobDestinationDbPtrType)(v)
}

func (*drsJobDestinationDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DrsJobDestinationDb)(nil)).Elem()
}

func (i *drsJobDestinationDbPtrType) ToDrsJobDestinationDbPtrOutput() DrsJobDestinationDbPtrOutput {
	return i.ToDrsJobDestinationDbPtrOutputWithContext(context.Background())
}

func (i *drsJobDestinationDbPtrType) ToDrsJobDestinationDbPtrOutputWithContext(ctx context.Context) DrsJobDestinationDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobDestinationDbPtrOutput)
}

type DrsJobDestinationDbOutput struct{ *pulumi.OutputState }

func (DrsJobDestinationDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrsJobDestinationDb)(nil)).Elem()
}

func (o DrsJobDestinationDbOutput) ToDrsJobDestinationDbOutput() DrsJobDestinationDbOutput {
	return o
}

func (o DrsJobDestinationDbOutput) ToDrsJobDestinationDbOutputWithContext(ctx context.Context) DrsJobDestinationDbOutput {
	return o
}

func (o DrsJobDestinationDbOutput) ToDrsJobDestinationDbPtrOutput() DrsJobDestinationDbPtrOutput {
	return o.ToDrsJobDestinationDbPtrOutputWithContext(context.Background())
}

func (o DrsJobDestinationDbOutput) ToDrsJobDestinationDbPtrOutputWithContext(ctx context.Context) DrsJobDestinationDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DrsJobDestinationDb) *DrsJobDestinationDb {
		return &v
	}).(DrsJobDestinationDbPtrOutput)
}

func (o DrsJobDestinationDbOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) string { return v.EngineType }).(pulumi.StringOutput)
}

func (o DrsJobDestinationDbOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) string { return v.Ip }).(pulumi.StringOutput)
}

func (o DrsJobDestinationDbOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) string { return v.Password }).(pulumi.StringOutput)
}

func (o DrsJobDestinationDbOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) int { return v.Port }).(pulumi.IntOutput)
}

func (o DrsJobDestinationDbOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.SslCertCheckSum }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.SslCertKey }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.SslCertName }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.SslCertPassword }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

func (o DrsJobDestinationDbOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobDestinationDb) string { return v.User }).(pulumi.StringOutput)
}

type DrsJobDestinationDbPtrOutput struct{ *pulumi.OutputState }

func (DrsJobDestinationDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DrsJobDestinationDb)(nil)).Elem()
}

func (o DrsJobDestinationDbPtrOutput) ToDrsJobDestinationDbPtrOutput() DrsJobDestinationDbPtrOutput {
	return o
}

func (o DrsJobDestinationDbPtrOutput) ToDrsJobDestinationDbPtrOutputWithContext(ctx context.Context) DrsJobDestinationDbPtrOutput {
	return o
}

func (o DrsJobDestinationDbPtrOutput) Elem() DrsJobDestinationDbOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) DrsJobDestinationDb {
		if v != nil {
			return *v
		}
		var ret DrsJobDestinationDb
		return ret
	}).(DrsJobDestinationDbOutput)
}

func (o DrsJobDestinationDbPtrOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.EngineType
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertCheckSum
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertKey
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertName
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertPassword
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobDestinationDbPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type DrsJobLimitSpeed struct {
	EndTime   string `pulumi:"endTime"`
	Speed     string `pulumi:"speed"`
	StartTime string `pulumi:"startTime"`
}

// DrsJobLimitSpeedInput is an input type that accepts DrsJobLimitSpeedArgs and DrsJobLimitSpeedOutput values.
// You can construct a concrete instance of `DrsJobLimitSpeedInput` via:
//
//	DrsJobLimitSpeedArgs{...}
type DrsJobLimitSpeedInput interface {
	pulumi.Input

	ToDrsJobLimitSpeedOutput() DrsJobLimitSpeedOutput
	ToDrsJobLimitSpeedOutputWithContext(context.Context) DrsJobLimitSpeedOutput
}

type DrsJobLimitSpeedArgs struct {
	EndTime   pulumi.StringInput `pulumi:"endTime"`
	Speed     pulumi.StringInput `pulumi:"speed"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (DrsJobLimitSpeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrsJobLimitSpeed)(nil)).Elem()
}

func (i DrsJobLimitSpeedArgs) ToDrsJobLimitSpeedOutput() DrsJobLimitSpeedOutput {
	return i.ToDrsJobLimitSpeedOutputWithContext(context.Background())
}

func (i DrsJobLimitSpeedArgs) ToDrsJobLimitSpeedOutputWithContext(ctx context.Context) DrsJobLimitSpeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobLimitSpeedOutput)
}

// DrsJobLimitSpeedArrayInput is an input type that accepts DrsJobLimitSpeedArray and DrsJobLimitSpeedArrayOutput values.
// You can construct a concrete instance of `DrsJobLimitSpeedArrayInput` via:
//
//	DrsJobLimitSpeedArray{ DrsJobLimitSpeedArgs{...} }
type DrsJobLimitSpeedArrayInput interface {
	pulumi.Input

	ToDrsJobLimitSpeedArrayOutput() DrsJobLimitSpeedArrayOutput
	ToDrsJobLimitSpeedArrayOutputWithContext(context.Context) DrsJobLimitSpeedArrayOutput
}

type DrsJobLimitSpeedArray []DrsJobLimitSpeedInput

func (DrsJobLimitSpeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DrsJobLimitSpeed)(nil)).Elem()
}

func (i DrsJobLimitSpeedArray) ToDrsJobLimitSpeedArrayOutput() DrsJobLimitSpeedArrayOutput {
	return i.ToDrsJobLimitSpeedArrayOutputWithContext(context.Background())
}

func (i DrsJobLimitSpeedArray) ToDrsJobLimitSpeedArrayOutputWithContext(ctx context.Context) DrsJobLimitSpeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobLimitSpeedArrayOutput)
}

type DrsJobLimitSpeedOutput struct{ *pulumi.OutputState }

func (DrsJobLimitSpeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrsJobLimitSpeed)(nil)).Elem()
}

func (o DrsJobLimitSpeedOutput) ToDrsJobLimitSpeedOutput() DrsJobLimitSpeedOutput {
	return o
}

func (o DrsJobLimitSpeedOutput) ToDrsJobLimitSpeedOutputWithContext(ctx context.Context) DrsJobLimitSpeedOutput {
	return o
}

func (o DrsJobLimitSpeedOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobLimitSpeed) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o DrsJobLimitSpeedOutput) Speed() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobLimitSpeed) string { return v.Speed }).(pulumi.StringOutput)
}

func (o DrsJobLimitSpeedOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobLimitSpeed) string { return v.StartTime }).(pulumi.StringOutput)
}

type DrsJobLimitSpeedArrayOutput struct{ *pulumi.OutputState }

func (DrsJobLimitSpeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DrsJobLimitSpeed)(nil)).Elem()
}

func (o DrsJobLimitSpeedArrayOutput) ToDrsJobLimitSpeedArrayOutput() DrsJobLimitSpeedArrayOutput {
	return o
}

func (o DrsJobLimitSpeedArrayOutput) ToDrsJobLimitSpeedArrayOutputWithContext(ctx context.Context) DrsJobLimitSpeedArrayOutput {
	return o
}

func (o DrsJobLimitSpeedArrayOutput) Index(i pulumi.IntInput) DrsJobLimitSpeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DrsJobLimitSpeed {
		return vs[0].([]DrsJobLimitSpeed)[vs[1].(int)]
	}).(DrsJobLimitSpeedOutput)
}

type DrsJobSourceDb struct {
	EngineType      string  `pulumi:"engineType"`
	InstanceId      *string `pulumi:"instanceId"`
	Ip              string  `pulumi:"ip"`
	Name            *string `pulumi:"name"`
	Password        string  `pulumi:"password"`
	Port            int     `pulumi:"port"`
	Region          *string `pulumi:"region"`
	SslCertCheckSum *string `pulumi:"sslCertCheckSum"`
	SslCertKey      *string `pulumi:"sslCertKey"`
	SslCertName     *string `pulumi:"sslCertName"`
	SslCertPassword *string `pulumi:"sslCertPassword"`
	SslEnabled      *bool   `pulumi:"sslEnabled"`
	SubnetId        *string `pulumi:"subnetId"`
	User            string  `pulumi:"user"`
}

// DrsJobSourceDbInput is an input type that accepts DrsJobSourceDbArgs and DrsJobSourceDbOutput values.
// You can construct a concrete instance of `DrsJobSourceDbInput` via:
//
//	DrsJobSourceDbArgs{...}
type DrsJobSourceDbInput interface {
	pulumi.Input

	ToDrsJobSourceDbOutput() DrsJobSourceDbOutput
	ToDrsJobSourceDbOutputWithContext(context.Context) DrsJobSourceDbOutput
}

type DrsJobSourceDbArgs struct {
	EngineType      pulumi.StringInput    `pulumi:"engineType"`
	InstanceId      pulumi.StringPtrInput `pulumi:"instanceId"`
	Ip              pulumi.StringInput    `pulumi:"ip"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
	Password        pulumi.StringInput    `pulumi:"password"`
	Port            pulumi.IntInput       `pulumi:"port"`
	Region          pulumi.StringPtrInput `pulumi:"region"`
	SslCertCheckSum pulumi.StringPtrInput `pulumi:"sslCertCheckSum"`
	SslCertKey      pulumi.StringPtrInput `pulumi:"sslCertKey"`
	SslCertName     pulumi.StringPtrInput `pulumi:"sslCertName"`
	SslCertPassword pulumi.StringPtrInput `pulumi:"sslCertPassword"`
	SslEnabled      pulumi.BoolPtrInput   `pulumi:"sslEnabled"`
	SubnetId        pulumi.StringPtrInput `pulumi:"subnetId"`
	User            pulumi.StringInput    `pulumi:"user"`
}

func (DrsJobSourceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrsJobSourceDb)(nil)).Elem()
}

func (i DrsJobSourceDbArgs) ToDrsJobSourceDbOutput() DrsJobSourceDbOutput {
	return i.ToDrsJobSourceDbOutputWithContext(context.Background())
}

func (i DrsJobSourceDbArgs) ToDrsJobSourceDbOutputWithContext(ctx context.Context) DrsJobSourceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobSourceDbOutput)
}

func (i DrsJobSourceDbArgs) ToDrsJobSourceDbPtrOutput() DrsJobSourceDbPtrOutput {
	return i.ToDrsJobSourceDbPtrOutputWithContext(context.Background())
}

func (i DrsJobSourceDbArgs) ToDrsJobSourceDbPtrOutputWithContext(ctx context.Context) DrsJobSourceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobSourceDbOutput).ToDrsJobSourceDbPtrOutputWithContext(ctx)
}

// DrsJobSourceDbPtrInput is an input type that accepts DrsJobSourceDbArgs, DrsJobSourceDbPtr and DrsJobSourceDbPtrOutput values.
// You can construct a concrete instance of `DrsJobSourceDbPtrInput` via:
//
//	        DrsJobSourceDbArgs{...}
//
//	or:
//
//	        nil
type DrsJobSourceDbPtrInput interface {
	pulumi.Input

	ToDrsJobSourceDbPtrOutput() DrsJobSourceDbPtrOutput
	ToDrsJobSourceDbPtrOutputWithContext(context.Context) DrsJobSourceDbPtrOutput
}

type drsJobSourceDbPtrType DrsJobSourceDbArgs

func DrsJobSourceDbPtr(v *DrsJobSourceDbArgs) DrsJobSourceDbPtrInput {
	return (*drsJobSourceDbPtrType)(v)
}

func (*drsJobSourceDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DrsJobSourceDb)(nil)).Elem()
}

func (i *drsJobSourceDbPtrType) ToDrsJobSourceDbPtrOutput() DrsJobSourceDbPtrOutput {
	return i.ToDrsJobSourceDbPtrOutputWithContext(context.Background())
}

func (i *drsJobSourceDbPtrType) ToDrsJobSourceDbPtrOutputWithContext(ctx context.Context) DrsJobSourceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobSourceDbPtrOutput)
}

type DrsJobSourceDbOutput struct{ *pulumi.OutputState }

func (DrsJobSourceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrsJobSourceDb)(nil)).Elem()
}

func (o DrsJobSourceDbOutput) ToDrsJobSourceDbOutput() DrsJobSourceDbOutput {
	return o
}

func (o DrsJobSourceDbOutput) ToDrsJobSourceDbOutputWithContext(ctx context.Context) DrsJobSourceDbOutput {
	return o
}

func (o DrsJobSourceDbOutput) ToDrsJobSourceDbPtrOutput() DrsJobSourceDbPtrOutput {
	return o.ToDrsJobSourceDbPtrOutputWithContext(context.Background())
}

func (o DrsJobSourceDbOutput) ToDrsJobSourceDbPtrOutputWithContext(ctx context.Context) DrsJobSourceDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DrsJobSourceDb) *DrsJobSourceDb {
		return &v
	}).(DrsJobSourceDbPtrOutput)
}

func (o DrsJobSourceDbOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobSourceDb) string { return v.EngineType }).(pulumi.StringOutput)
}

func (o DrsJobSourceDbOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobSourceDb) string { return v.Ip }).(pulumi.StringOutput)
}

func (o DrsJobSourceDbOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobSourceDb) string { return v.Password }).(pulumi.StringOutput)
}

func (o DrsJobSourceDbOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DrsJobSourceDb) int { return v.Port }).(pulumi.IntOutput)
}

func (o DrsJobSourceDbOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.SslCertCheckSum }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.SslCertKey }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.SslCertName }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.SslCertPassword }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

func (o DrsJobSourceDbOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrsJobSourceDb) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v DrsJobSourceDb) string { return v.User }).(pulumi.StringOutput)
}

type DrsJobSourceDbPtrOutput struct{ *pulumi.OutputState }

func (DrsJobSourceDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DrsJobSourceDb)(nil)).Elem()
}

func (o DrsJobSourceDbPtrOutput) ToDrsJobSourceDbPtrOutput() DrsJobSourceDbPtrOutput {
	return o
}

func (o DrsJobSourceDbPtrOutput) ToDrsJobSourceDbPtrOutputWithContext(ctx context.Context) DrsJobSourceDbPtrOutput {
	return o
}

func (o DrsJobSourceDbPtrOutput) Elem() DrsJobSourceDbOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) DrsJobSourceDb {
		if v != nil {
			return *v
		}
		var ret DrsJobSourceDb
		return ret
	}).(DrsJobSourceDbOutput)
}

func (o DrsJobSourceDbPtrOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.EngineType
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertCheckSum
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertKey
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertName
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertPassword
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func (o DrsJobSourceDbPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type DwsClusterElb struct {
	// The ID of the ELB load balancer.
	Id *string `pulumi:"id"`
	// The name of the ELB load balancer.
	Name *string `pulumi:"name"`
	// The private endpoint of the ELB load balancer.
	PrivateEndpoint *string `pulumi:"privateEndpoint"`
	// The private IP address of the ELB load balancer.
	PrivateIp *string `pulumi:"privateIp"`
	// The IPv6 address of the ELB load balancer.
	PrivateIpV6 *string `pulumi:"privateIpV6"`
	// The public IP address of the ELB load balancer.
	PublicIp *string `pulumi:"publicIp"`
	// The ID of VPC to which the ELB load balancer belongs.
	VpcId *string `pulumi:"vpcId"`
}

// DwsClusterElbInput is an input type that accepts DwsClusterElbArgs and DwsClusterElbOutput values.
// You can construct a concrete instance of `DwsClusterElbInput` via:
//
//	DwsClusterElbArgs{...}
type DwsClusterElbInput interface {
	pulumi.Input

	ToDwsClusterElbOutput() DwsClusterElbOutput
	ToDwsClusterElbOutputWithContext(context.Context) DwsClusterElbOutput
}

type DwsClusterElbArgs struct {
	// The ID of the ELB load balancer.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the ELB load balancer.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private endpoint of the ELB load balancer.
	PrivateEndpoint pulumi.StringPtrInput `pulumi:"privateEndpoint"`
	// The private IP address of the ELB load balancer.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// The IPv6 address of the ELB load balancer.
	PrivateIpV6 pulumi.StringPtrInput `pulumi:"privateIpV6"`
	// The public IP address of the ELB load balancer.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The ID of VPC to which the ELB load balancer belongs.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (DwsClusterElbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterElb)(nil)).Elem()
}

func (i DwsClusterElbArgs) ToDwsClusterElbOutput() DwsClusterElbOutput {
	return i.ToDwsClusterElbOutputWithContext(context.Background())
}

func (i DwsClusterElbArgs) ToDwsClusterElbOutputWithContext(ctx context.Context) DwsClusterElbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterElbOutput)
}

// DwsClusterElbArrayInput is an input type that accepts DwsClusterElbArray and DwsClusterElbArrayOutput values.
// You can construct a concrete instance of `DwsClusterElbArrayInput` via:
//
//	DwsClusterElbArray{ DwsClusterElbArgs{...} }
type DwsClusterElbArrayInput interface {
	pulumi.Input

	ToDwsClusterElbArrayOutput() DwsClusterElbArrayOutput
	ToDwsClusterElbArrayOutputWithContext(context.Context) DwsClusterElbArrayOutput
}

type DwsClusterElbArray []DwsClusterElbInput

func (DwsClusterElbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterElb)(nil)).Elem()
}

func (i DwsClusterElbArray) ToDwsClusterElbArrayOutput() DwsClusterElbArrayOutput {
	return i.ToDwsClusterElbArrayOutputWithContext(context.Background())
}

func (i DwsClusterElbArray) ToDwsClusterElbArrayOutputWithContext(ctx context.Context) DwsClusterElbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterElbArrayOutput)
}

type DwsClusterElbOutput struct{ *pulumi.OutputState }

func (DwsClusterElbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterElb)(nil)).Elem()
}

func (o DwsClusterElbOutput) ToDwsClusterElbOutput() DwsClusterElbOutput {
	return o
}

func (o DwsClusterElbOutput) ToDwsClusterElbOutputWithContext(ctx context.Context) DwsClusterElbOutput {
	return o
}

// The ID of the ELB load balancer.
func (o DwsClusterElbOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterElb) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the ELB load balancer.
func (o DwsClusterElbOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterElb) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private endpoint of the ELB load balancer.
func (o DwsClusterElbOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterElb) *string { return v.PrivateEndpoint }).(pulumi.StringPtrOutput)
}

// The private IP address of the ELB load balancer.
func (o DwsClusterElbOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterElb) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// The IPv6 address of the ELB load balancer.
func (o DwsClusterElbOutput) PrivateIpV6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterElb) *string { return v.PrivateIpV6 }).(pulumi.StringPtrOutput)
}

// The public IP address of the ELB load balancer.
func (o DwsClusterElbOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterElb) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The ID of VPC to which the ELB load balancer belongs.
func (o DwsClusterElbOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterElb) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type DwsClusterElbArrayOutput struct{ *pulumi.OutputState }

func (DwsClusterElbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterElb)(nil)).Elem()
}

func (o DwsClusterElbArrayOutput) ToDwsClusterElbArrayOutput() DwsClusterElbArrayOutput {
	return o
}

func (o DwsClusterElbArrayOutput) ToDwsClusterElbArrayOutputWithContext(ctx context.Context) DwsClusterElbArrayOutput {
	return o
}

func (o DwsClusterElbArrayOutput) Index(i pulumi.IntInput) DwsClusterElbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DwsClusterElb {
		return vs[0].([]DwsClusterElb)[vs[1].(int)]
	}).(DwsClusterElbOutput)
}

type DwsClusterEndpoint struct {
	// Private network connection information.
	ConnectInfo *string `pulumi:"connectInfo"`
	// JDBC URL. Format: jdbc:postgresql://<connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl *string `pulumi:"jdbcUrl"`
}

// DwsClusterEndpointInput is an input type that accepts DwsClusterEndpointArgs and DwsClusterEndpointOutput values.
// You can construct a concrete instance of `DwsClusterEndpointInput` via:
//
//	DwsClusterEndpointArgs{...}
type DwsClusterEndpointInput interface {
	pulumi.Input

	ToDwsClusterEndpointOutput() DwsClusterEndpointOutput
	ToDwsClusterEndpointOutputWithContext(context.Context) DwsClusterEndpointOutput
}

type DwsClusterEndpointArgs struct {
	// Private network connection information.
	ConnectInfo pulumi.StringPtrInput `pulumi:"connectInfo"`
	// JDBC URL. Format: jdbc:postgresql://<connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl pulumi.StringPtrInput `pulumi:"jdbcUrl"`
}

func (DwsClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterEndpoint)(nil)).Elem()
}

func (i DwsClusterEndpointArgs) ToDwsClusterEndpointOutput() DwsClusterEndpointOutput {
	return i.ToDwsClusterEndpointOutputWithContext(context.Background())
}

func (i DwsClusterEndpointArgs) ToDwsClusterEndpointOutputWithContext(ctx context.Context) DwsClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterEndpointOutput)
}

// DwsClusterEndpointArrayInput is an input type that accepts DwsClusterEndpointArray and DwsClusterEndpointArrayOutput values.
// You can construct a concrete instance of `DwsClusterEndpointArrayInput` via:
//
//	DwsClusterEndpointArray{ DwsClusterEndpointArgs{...} }
type DwsClusterEndpointArrayInput interface {
	pulumi.Input

	ToDwsClusterEndpointArrayOutput() DwsClusterEndpointArrayOutput
	ToDwsClusterEndpointArrayOutputWithContext(context.Context) DwsClusterEndpointArrayOutput
}

type DwsClusterEndpointArray []DwsClusterEndpointInput

func (DwsClusterEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterEndpoint)(nil)).Elem()
}

func (i DwsClusterEndpointArray) ToDwsClusterEndpointArrayOutput() DwsClusterEndpointArrayOutput {
	return i.ToDwsClusterEndpointArrayOutputWithContext(context.Background())
}

func (i DwsClusterEndpointArray) ToDwsClusterEndpointArrayOutputWithContext(ctx context.Context) DwsClusterEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterEndpointArrayOutput)
}

type DwsClusterEndpointOutput struct{ *pulumi.OutputState }

func (DwsClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterEndpoint)(nil)).Elem()
}

func (o DwsClusterEndpointOutput) ToDwsClusterEndpointOutput() DwsClusterEndpointOutput {
	return o
}

func (o DwsClusterEndpointOutput) ToDwsClusterEndpointOutputWithContext(ctx context.Context) DwsClusterEndpointOutput {
	return o
}

// Private network connection information.
func (o DwsClusterEndpointOutput) ConnectInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterEndpoint) *string { return v.ConnectInfo }).(pulumi.StringPtrOutput)
}

// JDBC URL. Format: jdbc:postgresql://<connect_info>/<YOUR_DATABASE_NAME>
func (o DwsClusterEndpointOutput) JdbcUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterEndpoint) *string { return v.JdbcUrl }).(pulumi.StringPtrOutput)
}

type DwsClusterEndpointArrayOutput struct{ *pulumi.OutputState }

func (DwsClusterEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterEndpoint)(nil)).Elem()
}

func (o DwsClusterEndpointArrayOutput) ToDwsClusterEndpointArrayOutput() DwsClusterEndpointArrayOutput {
	return o
}

func (o DwsClusterEndpointArrayOutput) ToDwsClusterEndpointArrayOutputWithContext(ctx context.Context) DwsClusterEndpointArrayOutput {
	return o
}

func (o DwsClusterEndpointArrayOutput) Index(i pulumi.IntInput) DwsClusterEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DwsClusterEndpoint {
		return vs[0].([]DwsClusterEndpoint)[vs[1].(int)]
	}).(DwsClusterEndpointOutput)
}

type DwsClusterMaintainWindow struct {
	// Maintenance time in each week in the unit of day.
	Day *string `pulumi:"day"`
	// Maintenance end time in HH:mm format. The time zone is GMT+0.
	EndTime *string `pulumi:"endTime"`
	// Maintenance start time in HH:mm format. The time zone is GMT+0.
	StartTime *string `pulumi:"startTime"`
}

// DwsClusterMaintainWindowInput is an input type that accepts DwsClusterMaintainWindowArgs and DwsClusterMaintainWindowOutput values.
// You can construct a concrete instance of `DwsClusterMaintainWindowInput` via:
//
//	DwsClusterMaintainWindowArgs{...}
type DwsClusterMaintainWindowInput interface {
	pulumi.Input

	ToDwsClusterMaintainWindowOutput() DwsClusterMaintainWindowOutput
	ToDwsClusterMaintainWindowOutputWithContext(context.Context) DwsClusterMaintainWindowOutput
}

type DwsClusterMaintainWindowArgs struct {
	// Maintenance time in each week in the unit of day.
	Day pulumi.StringPtrInput `pulumi:"day"`
	// Maintenance end time in HH:mm format. The time zone is GMT+0.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Maintenance start time in HH:mm format. The time zone is GMT+0.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (DwsClusterMaintainWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterMaintainWindow)(nil)).Elem()
}

func (i DwsClusterMaintainWindowArgs) ToDwsClusterMaintainWindowOutput() DwsClusterMaintainWindowOutput {
	return i.ToDwsClusterMaintainWindowOutputWithContext(context.Background())
}

func (i DwsClusterMaintainWindowArgs) ToDwsClusterMaintainWindowOutputWithContext(ctx context.Context) DwsClusterMaintainWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterMaintainWindowOutput)
}

// DwsClusterMaintainWindowArrayInput is an input type that accepts DwsClusterMaintainWindowArray and DwsClusterMaintainWindowArrayOutput values.
// You can construct a concrete instance of `DwsClusterMaintainWindowArrayInput` via:
//
//	DwsClusterMaintainWindowArray{ DwsClusterMaintainWindowArgs{...} }
type DwsClusterMaintainWindowArrayInput interface {
	pulumi.Input

	ToDwsClusterMaintainWindowArrayOutput() DwsClusterMaintainWindowArrayOutput
	ToDwsClusterMaintainWindowArrayOutputWithContext(context.Context) DwsClusterMaintainWindowArrayOutput
}

type DwsClusterMaintainWindowArray []DwsClusterMaintainWindowInput

func (DwsClusterMaintainWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterMaintainWindow)(nil)).Elem()
}

func (i DwsClusterMaintainWindowArray) ToDwsClusterMaintainWindowArrayOutput() DwsClusterMaintainWindowArrayOutput {
	return i.ToDwsClusterMaintainWindowArrayOutputWithContext(context.Background())
}

func (i DwsClusterMaintainWindowArray) ToDwsClusterMaintainWindowArrayOutputWithContext(ctx context.Context) DwsClusterMaintainWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterMaintainWindowArrayOutput)
}

type DwsClusterMaintainWindowOutput struct{ *pulumi.OutputState }

func (DwsClusterMaintainWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterMaintainWindow)(nil)).Elem()
}

func (o DwsClusterMaintainWindowOutput) ToDwsClusterMaintainWindowOutput() DwsClusterMaintainWindowOutput {
	return o
}

func (o DwsClusterMaintainWindowOutput) ToDwsClusterMaintainWindowOutputWithContext(ctx context.Context) DwsClusterMaintainWindowOutput {
	return o
}

// Maintenance time in each week in the unit of day.
func (o DwsClusterMaintainWindowOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterMaintainWindow) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// Maintenance end time in HH:mm format. The time zone is GMT+0.
func (o DwsClusterMaintainWindowOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterMaintainWindow) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Maintenance start time in HH:mm format. The time zone is GMT+0.
func (o DwsClusterMaintainWindowOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterMaintainWindow) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type DwsClusterMaintainWindowArrayOutput struct{ *pulumi.OutputState }

func (DwsClusterMaintainWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterMaintainWindow)(nil)).Elem()
}

func (o DwsClusterMaintainWindowArrayOutput) ToDwsClusterMaintainWindowArrayOutput() DwsClusterMaintainWindowArrayOutput {
	return o
}

func (o DwsClusterMaintainWindowArrayOutput) ToDwsClusterMaintainWindowArrayOutputWithContext(ctx context.Context) DwsClusterMaintainWindowArrayOutput {
	return o
}

func (o DwsClusterMaintainWindowArrayOutput) Index(i pulumi.IntInput) DwsClusterMaintainWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DwsClusterMaintainWindow {
		return vs[0].([]DwsClusterMaintainWindow)[vs[1].(int)]
	}).(DwsClusterMaintainWindowOutput)
}

type DwsClusterPublicEndpoint struct {
	// JDBC URL. Format: jdbc:postgresql://<public_connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl *string `pulumi:"jdbcUrl"`
	// Public network connection information.
	PublicConnectInfo *string `pulumi:"publicConnectInfo"`
}

// DwsClusterPublicEndpointInput is an input type that accepts DwsClusterPublicEndpointArgs and DwsClusterPublicEndpointOutput values.
// You can construct a concrete instance of `DwsClusterPublicEndpointInput` via:
//
//	DwsClusterPublicEndpointArgs{...}
type DwsClusterPublicEndpointInput interface {
	pulumi.Input

	ToDwsClusterPublicEndpointOutput() DwsClusterPublicEndpointOutput
	ToDwsClusterPublicEndpointOutputWithContext(context.Context) DwsClusterPublicEndpointOutput
}

type DwsClusterPublicEndpointArgs struct {
	// JDBC URL. Format: jdbc:postgresql://<public_connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl pulumi.StringPtrInput `pulumi:"jdbcUrl"`
	// Public network connection information.
	PublicConnectInfo pulumi.StringPtrInput `pulumi:"publicConnectInfo"`
}

func (DwsClusterPublicEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterPublicEndpoint)(nil)).Elem()
}

func (i DwsClusterPublicEndpointArgs) ToDwsClusterPublicEndpointOutput() DwsClusterPublicEndpointOutput {
	return i.ToDwsClusterPublicEndpointOutputWithContext(context.Background())
}

func (i DwsClusterPublicEndpointArgs) ToDwsClusterPublicEndpointOutputWithContext(ctx context.Context) DwsClusterPublicEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterPublicEndpointOutput)
}

// DwsClusterPublicEndpointArrayInput is an input type that accepts DwsClusterPublicEndpointArray and DwsClusterPublicEndpointArrayOutput values.
// You can construct a concrete instance of `DwsClusterPublicEndpointArrayInput` via:
//
//	DwsClusterPublicEndpointArray{ DwsClusterPublicEndpointArgs{...} }
type DwsClusterPublicEndpointArrayInput interface {
	pulumi.Input

	ToDwsClusterPublicEndpointArrayOutput() DwsClusterPublicEndpointArrayOutput
	ToDwsClusterPublicEndpointArrayOutputWithContext(context.Context) DwsClusterPublicEndpointArrayOutput
}

type DwsClusterPublicEndpointArray []DwsClusterPublicEndpointInput

func (DwsClusterPublicEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterPublicEndpoint)(nil)).Elem()
}

func (i DwsClusterPublicEndpointArray) ToDwsClusterPublicEndpointArrayOutput() DwsClusterPublicEndpointArrayOutput {
	return i.ToDwsClusterPublicEndpointArrayOutputWithContext(context.Background())
}

func (i DwsClusterPublicEndpointArray) ToDwsClusterPublicEndpointArrayOutputWithContext(ctx context.Context) DwsClusterPublicEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterPublicEndpointArrayOutput)
}

type DwsClusterPublicEndpointOutput struct{ *pulumi.OutputState }

func (DwsClusterPublicEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterPublicEndpoint)(nil)).Elem()
}

func (o DwsClusterPublicEndpointOutput) ToDwsClusterPublicEndpointOutput() DwsClusterPublicEndpointOutput {
	return o
}

func (o DwsClusterPublicEndpointOutput) ToDwsClusterPublicEndpointOutputWithContext(ctx context.Context) DwsClusterPublicEndpointOutput {
	return o
}

// JDBC URL. Format: jdbc:postgresql://<public_connect_info>/<YOUR_DATABASE_NAME>
func (o DwsClusterPublicEndpointOutput) JdbcUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterPublicEndpoint) *string { return v.JdbcUrl }).(pulumi.StringPtrOutput)
}

// Public network connection information.
func (o DwsClusterPublicEndpointOutput) PublicConnectInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterPublicEndpoint) *string { return v.PublicConnectInfo }).(pulumi.StringPtrOutput)
}

type DwsClusterPublicEndpointArrayOutput struct{ *pulumi.OutputState }

func (DwsClusterPublicEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DwsClusterPublicEndpoint)(nil)).Elem()
}

func (o DwsClusterPublicEndpointArrayOutput) ToDwsClusterPublicEndpointArrayOutput() DwsClusterPublicEndpointArrayOutput {
	return o
}

func (o DwsClusterPublicEndpointArrayOutput) ToDwsClusterPublicEndpointArrayOutputWithContext(ctx context.Context) DwsClusterPublicEndpointArrayOutput {
	return o
}

func (o DwsClusterPublicEndpointArrayOutput) Index(i pulumi.IntInput) DwsClusterPublicEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DwsClusterPublicEndpoint {
		return vs[0].([]DwsClusterPublicEndpoint)[vs[1].(int)]
	}).(DwsClusterPublicEndpointOutput)
}

type DwsClusterPublicIp struct {
	// The EIP ID.
	EipId *string `pulumi:"eipId"`
	// The bind type of public IP.
	PublicBindType *string `pulumi:"publicBindType"`
}

// DwsClusterPublicIpInput is an input type that accepts DwsClusterPublicIpArgs and DwsClusterPublicIpOutput values.
// You can construct a concrete instance of `DwsClusterPublicIpInput` via:
//
//	DwsClusterPublicIpArgs{...}
type DwsClusterPublicIpInput interface {
	pulumi.Input

	ToDwsClusterPublicIpOutput() DwsClusterPublicIpOutput
	ToDwsClusterPublicIpOutputWithContext(context.Context) DwsClusterPublicIpOutput
}

type DwsClusterPublicIpArgs struct {
	// The EIP ID.
	EipId pulumi.StringPtrInput `pulumi:"eipId"`
	// The bind type of public IP.
	PublicBindType pulumi.StringPtrInput `pulumi:"publicBindType"`
}

func (DwsClusterPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterPublicIp)(nil)).Elem()
}

func (i DwsClusterPublicIpArgs) ToDwsClusterPublicIpOutput() DwsClusterPublicIpOutput {
	return i.ToDwsClusterPublicIpOutputWithContext(context.Background())
}

func (i DwsClusterPublicIpArgs) ToDwsClusterPublicIpOutputWithContext(ctx context.Context) DwsClusterPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterPublicIpOutput)
}

func (i DwsClusterPublicIpArgs) ToDwsClusterPublicIpPtrOutput() DwsClusterPublicIpPtrOutput {
	return i.ToDwsClusterPublicIpPtrOutputWithContext(context.Background())
}

func (i DwsClusterPublicIpArgs) ToDwsClusterPublicIpPtrOutputWithContext(ctx context.Context) DwsClusterPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterPublicIpOutput).ToDwsClusterPublicIpPtrOutputWithContext(ctx)
}

// DwsClusterPublicIpPtrInput is an input type that accepts DwsClusterPublicIpArgs, DwsClusterPublicIpPtr and DwsClusterPublicIpPtrOutput values.
// You can construct a concrete instance of `DwsClusterPublicIpPtrInput` via:
//
//	        DwsClusterPublicIpArgs{...}
//
//	or:
//
//	        nil
type DwsClusterPublicIpPtrInput interface {
	pulumi.Input

	ToDwsClusterPublicIpPtrOutput() DwsClusterPublicIpPtrOutput
	ToDwsClusterPublicIpPtrOutputWithContext(context.Context) DwsClusterPublicIpPtrOutput
}

type dwsClusterPublicIpPtrType DwsClusterPublicIpArgs

func DwsClusterPublicIpPtr(v *DwsClusterPublicIpArgs) DwsClusterPublicIpPtrInput {
	return (*dwsClusterPublicIpPtrType)(v)
}

func (*dwsClusterPublicIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DwsClusterPublicIp)(nil)).Elem()
}

func (i *dwsClusterPublicIpPtrType) ToDwsClusterPublicIpPtrOutput() DwsClusterPublicIpPtrOutput {
	return i.ToDwsClusterPublicIpPtrOutputWithContext(context.Background())
}

func (i *dwsClusterPublicIpPtrType) ToDwsClusterPublicIpPtrOutputWithContext(ctx context.Context) DwsClusterPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterPublicIpPtrOutput)
}

type DwsClusterPublicIpOutput struct{ *pulumi.OutputState }

func (DwsClusterPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterPublicIp)(nil)).Elem()
}

func (o DwsClusterPublicIpOutput) ToDwsClusterPublicIpOutput() DwsClusterPublicIpOutput {
	return o
}

func (o DwsClusterPublicIpOutput) ToDwsClusterPublicIpOutputWithContext(ctx context.Context) DwsClusterPublicIpOutput {
	return o
}

func (o DwsClusterPublicIpOutput) ToDwsClusterPublicIpPtrOutput() DwsClusterPublicIpPtrOutput {
	return o.ToDwsClusterPublicIpPtrOutputWithContext(context.Background())
}

func (o DwsClusterPublicIpOutput) ToDwsClusterPublicIpPtrOutputWithContext(ctx context.Context) DwsClusterPublicIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DwsClusterPublicIp) *DwsClusterPublicIp {
		return &v
	}).(DwsClusterPublicIpPtrOutput)
}

// The EIP ID.
func (o DwsClusterPublicIpOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterPublicIp) *string { return v.EipId }).(pulumi.StringPtrOutput)
}

// The bind type of public IP.
func (o DwsClusterPublicIpOutput) PublicBindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterPublicIp) *string { return v.PublicBindType }).(pulumi.StringPtrOutput)
}

type DwsClusterPublicIpPtrOutput struct{ *pulumi.OutputState }

func (DwsClusterPublicIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DwsClusterPublicIp)(nil)).Elem()
}

func (o DwsClusterPublicIpPtrOutput) ToDwsClusterPublicIpPtrOutput() DwsClusterPublicIpPtrOutput {
	return o
}

func (o DwsClusterPublicIpPtrOutput) ToDwsClusterPublicIpPtrOutputWithContext(ctx context.Context) DwsClusterPublicIpPtrOutput {
	return o
}

func (o DwsClusterPublicIpPtrOutput) Elem() DwsClusterPublicIpOutput {
	return o.ApplyT(func(v *DwsClusterPublicIp) DwsClusterPublicIp {
		if v != nil {
			return *v
		}
		var ret DwsClusterPublicIp
		return ret
	}).(DwsClusterPublicIpOutput)
}

// The EIP ID.
func (o DwsClusterPublicIpPtrOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DwsClusterPublicIp) *string {
		if v == nil {
			return nil
		}
		return v.EipId
	}).(pulumi.StringPtrOutput)
}

// The bind type of public IP.
func (o DwsClusterPublicIpPtrOutput) PublicBindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DwsClusterPublicIp) *string {
		if v == nil {
			return nil
		}
		return v.PublicBindType
	}).(pulumi.StringPtrOutput)
}

type DwsClusterVolume struct {
	// The capacity size, in GB.
	Capacity *string `pulumi:"capacity"`
	// The volume type.
	Type *string `pulumi:"type"`
}

// DwsClusterVolumeInput is an input type that accepts DwsClusterVolumeArgs and DwsClusterVolumeOutput values.
// You can construct a concrete instance of `DwsClusterVolumeInput` via:
//
//	DwsClusterVolumeArgs{...}
type DwsClusterVolumeInput interface {
	pulumi.Input

	ToDwsClusterVolumeOutput() DwsClusterVolumeOutput
	ToDwsClusterVolumeOutputWithContext(context.Context) DwsClusterVolumeOutput
}

type DwsClusterVolumeArgs struct {
	// The capacity size, in GB.
	Capacity pulumi.StringPtrInput `pulumi:"capacity"`
	// The volume type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DwsClusterVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterVolume)(nil)).Elem()
}

func (i DwsClusterVolumeArgs) ToDwsClusterVolumeOutput() DwsClusterVolumeOutput {
	return i.ToDwsClusterVolumeOutputWithContext(context.Background())
}

func (i DwsClusterVolumeArgs) ToDwsClusterVolumeOutputWithContext(ctx context.Context) DwsClusterVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterVolumeOutput)
}

func (i DwsClusterVolumeArgs) ToDwsClusterVolumePtrOutput() DwsClusterVolumePtrOutput {
	return i.ToDwsClusterVolumePtrOutputWithContext(context.Background())
}

func (i DwsClusterVolumeArgs) ToDwsClusterVolumePtrOutputWithContext(ctx context.Context) DwsClusterVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterVolumeOutput).ToDwsClusterVolumePtrOutputWithContext(ctx)
}

// DwsClusterVolumePtrInput is an input type that accepts DwsClusterVolumeArgs, DwsClusterVolumePtr and DwsClusterVolumePtrOutput values.
// You can construct a concrete instance of `DwsClusterVolumePtrInput` via:
//
//	        DwsClusterVolumeArgs{...}
//
//	or:
//
//	        nil
type DwsClusterVolumePtrInput interface {
	pulumi.Input

	ToDwsClusterVolumePtrOutput() DwsClusterVolumePtrOutput
	ToDwsClusterVolumePtrOutputWithContext(context.Context) DwsClusterVolumePtrOutput
}

type dwsClusterVolumePtrType DwsClusterVolumeArgs

func DwsClusterVolumePtr(v *DwsClusterVolumeArgs) DwsClusterVolumePtrInput {
	return (*dwsClusterVolumePtrType)(v)
}

func (*dwsClusterVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DwsClusterVolume)(nil)).Elem()
}

func (i *dwsClusterVolumePtrType) ToDwsClusterVolumePtrOutput() DwsClusterVolumePtrOutput {
	return i.ToDwsClusterVolumePtrOutputWithContext(context.Background())
}

func (i *dwsClusterVolumePtrType) ToDwsClusterVolumePtrOutputWithContext(ctx context.Context) DwsClusterVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DwsClusterVolumePtrOutput)
}

type DwsClusterVolumeOutput struct{ *pulumi.OutputState }

func (DwsClusterVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DwsClusterVolume)(nil)).Elem()
}

func (o DwsClusterVolumeOutput) ToDwsClusterVolumeOutput() DwsClusterVolumeOutput {
	return o
}

func (o DwsClusterVolumeOutput) ToDwsClusterVolumeOutputWithContext(ctx context.Context) DwsClusterVolumeOutput {
	return o
}

func (o DwsClusterVolumeOutput) ToDwsClusterVolumePtrOutput() DwsClusterVolumePtrOutput {
	return o.ToDwsClusterVolumePtrOutputWithContext(context.Background())
}

func (o DwsClusterVolumeOutput) ToDwsClusterVolumePtrOutputWithContext(ctx context.Context) DwsClusterVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DwsClusterVolume) *DwsClusterVolume {
		return &v
	}).(DwsClusterVolumePtrOutput)
}

// The capacity size, in GB.
func (o DwsClusterVolumeOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterVolume) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The volume type.
func (o DwsClusterVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DwsClusterVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DwsClusterVolumePtrOutput struct{ *pulumi.OutputState }

func (DwsClusterVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DwsClusterVolume)(nil)).Elem()
}

func (o DwsClusterVolumePtrOutput) ToDwsClusterVolumePtrOutput() DwsClusterVolumePtrOutput {
	return o
}

func (o DwsClusterVolumePtrOutput) ToDwsClusterVolumePtrOutputWithContext(ctx context.Context) DwsClusterVolumePtrOutput {
	return o
}

func (o DwsClusterVolumePtrOutput) Elem() DwsClusterVolumeOutput {
	return o.ApplyT(func(v *DwsClusterVolume) DwsClusterVolume {
		if v != nil {
			return *v
		}
		var ret DwsClusterVolume
		return ret
	}).(DwsClusterVolumeOutput)
}

// The capacity size, in GB.
func (o DwsClusterVolumePtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DwsClusterVolume) *string {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The volume type.
func (o DwsClusterVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DwsClusterVolume) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ElbIpgroupIpList struct {
	Description *string `pulumi:"description"`
	Ip          string  `pulumi:"ip"`
}

// ElbIpgroupIpListInput is an input type that accepts ElbIpgroupIpListArgs and ElbIpgroupIpListOutput values.
// You can construct a concrete instance of `ElbIpgroupIpListInput` via:
//
//	ElbIpgroupIpListArgs{...}
type ElbIpgroupIpListInput interface {
	pulumi.Input

	ToElbIpgroupIpListOutput() ElbIpgroupIpListOutput
	ToElbIpgroupIpListOutputWithContext(context.Context) ElbIpgroupIpListOutput
}

type ElbIpgroupIpListArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Ip          pulumi.StringInput    `pulumi:"ip"`
}

func (ElbIpgroupIpListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbIpgroupIpList)(nil)).Elem()
}

func (i ElbIpgroupIpListArgs) ToElbIpgroupIpListOutput() ElbIpgroupIpListOutput {
	return i.ToElbIpgroupIpListOutputWithContext(context.Background())
}

func (i ElbIpgroupIpListArgs) ToElbIpgroupIpListOutputWithContext(ctx context.Context) ElbIpgroupIpListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbIpgroupIpListOutput)
}

// ElbIpgroupIpListArrayInput is an input type that accepts ElbIpgroupIpListArray and ElbIpgroupIpListArrayOutput values.
// You can construct a concrete instance of `ElbIpgroupIpListArrayInput` via:
//
//	ElbIpgroupIpListArray{ ElbIpgroupIpListArgs{...} }
type ElbIpgroupIpListArrayInput interface {
	pulumi.Input

	ToElbIpgroupIpListArrayOutput() ElbIpgroupIpListArrayOutput
	ToElbIpgroupIpListArrayOutputWithContext(context.Context) ElbIpgroupIpListArrayOutput
}

type ElbIpgroupIpListArray []ElbIpgroupIpListInput

func (ElbIpgroupIpListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbIpgroupIpList)(nil)).Elem()
}

func (i ElbIpgroupIpListArray) ToElbIpgroupIpListArrayOutput() ElbIpgroupIpListArrayOutput {
	return i.ToElbIpgroupIpListArrayOutputWithContext(context.Background())
}

func (i ElbIpgroupIpListArray) ToElbIpgroupIpListArrayOutputWithContext(ctx context.Context) ElbIpgroupIpListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbIpgroupIpListArrayOutput)
}

type ElbIpgroupIpListOutput struct{ *pulumi.OutputState }

func (ElbIpgroupIpListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbIpgroupIpList)(nil)).Elem()
}

func (o ElbIpgroupIpListOutput) ToElbIpgroupIpListOutput() ElbIpgroupIpListOutput {
	return o
}

func (o ElbIpgroupIpListOutput) ToElbIpgroupIpListOutputWithContext(ctx context.Context) ElbIpgroupIpListOutput {
	return o
}

func (o ElbIpgroupIpListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbIpgroupIpList) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ElbIpgroupIpListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v ElbIpgroupIpList) string { return v.Ip }).(pulumi.StringOutput)
}

type ElbIpgroupIpListArrayOutput struct{ *pulumi.OutputState }

func (ElbIpgroupIpListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbIpgroupIpList)(nil)).Elem()
}

func (o ElbIpgroupIpListArrayOutput) ToElbIpgroupIpListArrayOutput() ElbIpgroupIpListArrayOutput {
	return o
}

func (o ElbIpgroupIpListArrayOutput) ToElbIpgroupIpListArrayOutputWithContext(ctx context.Context) ElbIpgroupIpListArrayOutput {
	return o
}

func (o ElbIpgroupIpListArrayOutput) Index(i pulumi.IntInput) ElbIpgroupIpListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbIpgroupIpList {
		return vs[0].([]ElbIpgroupIpList)[vs[1].(int)]
	}).(ElbIpgroupIpListOutput)
}

type ElbL7policyFixedResponseConfig struct {
	ContentType         *string                                            `pulumi:"contentType"`
	InsertHeadersConfig *ElbL7policyFixedResponseConfigInsertHeadersConfig `pulumi:"insertHeadersConfig"`
	MessageBody         *string                                            `pulumi:"messageBody"`
	RemoveHeadersConfig *ElbL7policyFixedResponseConfigRemoveHeadersConfig `pulumi:"removeHeadersConfig"`
	StatusCode          string                                             `pulumi:"statusCode"`
	TrafficLimitConfig  *ElbL7policyFixedResponseConfigTrafficLimitConfig  `pulumi:"trafficLimitConfig"`
}

// ElbL7policyFixedResponseConfigInput is an input type that accepts ElbL7policyFixedResponseConfigArgs and ElbL7policyFixedResponseConfigOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigInput` via:
//
//	ElbL7policyFixedResponseConfigArgs{...}
type ElbL7policyFixedResponseConfigInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigOutput() ElbL7policyFixedResponseConfigOutput
	ToElbL7policyFixedResponseConfigOutputWithContext(context.Context) ElbL7policyFixedResponseConfigOutput
}

type ElbL7policyFixedResponseConfigArgs struct {
	ContentType         pulumi.StringPtrInput                                     `pulumi:"contentType"`
	InsertHeadersConfig ElbL7policyFixedResponseConfigInsertHeadersConfigPtrInput `pulumi:"insertHeadersConfig"`
	MessageBody         pulumi.StringPtrInput                                     `pulumi:"messageBody"`
	RemoveHeadersConfig ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrInput `pulumi:"removeHeadersConfig"`
	StatusCode          pulumi.StringInput                                        `pulumi:"statusCode"`
	TrafficLimitConfig  ElbL7policyFixedResponseConfigTrafficLimitConfigPtrInput  `pulumi:"trafficLimitConfig"`
}

func (ElbL7policyFixedResponseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigArgs) ToElbL7policyFixedResponseConfigOutput() ElbL7policyFixedResponseConfigOutput {
	return i.ToElbL7policyFixedResponseConfigOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigArgs) ToElbL7policyFixedResponseConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigOutput)
}

func (i ElbL7policyFixedResponseConfigArgs) ToElbL7policyFixedResponseConfigPtrOutput() ElbL7policyFixedResponseConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigArgs) ToElbL7policyFixedResponseConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigOutput).ToElbL7policyFixedResponseConfigPtrOutputWithContext(ctx)
}

// ElbL7policyFixedResponseConfigPtrInput is an input type that accepts ElbL7policyFixedResponseConfigArgs, ElbL7policyFixedResponseConfigPtr and ElbL7policyFixedResponseConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigPtrInput` via:
//
//	        ElbL7policyFixedResponseConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyFixedResponseConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigPtrOutput() ElbL7policyFixedResponseConfigPtrOutput
	ToElbL7policyFixedResponseConfigPtrOutputWithContext(context.Context) ElbL7policyFixedResponseConfigPtrOutput
}

type elbL7policyFixedResponseConfigPtrType ElbL7policyFixedResponseConfigArgs

func ElbL7policyFixedResponseConfigPtr(v *ElbL7policyFixedResponseConfigArgs) ElbL7policyFixedResponseConfigPtrInput {
	return (*elbL7policyFixedResponseConfigPtrType)(v)
}

func (*elbL7policyFixedResponseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfig)(nil)).Elem()
}

func (i *elbL7policyFixedResponseConfigPtrType) ToElbL7policyFixedResponseConfigPtrOutput() ElbL7policyFixedResponseConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyFixedResponseConfigPtrType) ToElbL7policyFixedResponseConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigPtrOutput)
}

type ElbL7policyFixedResponseConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigOutput) ToElbL7policyFixedResponseConfigOutput() ElbL7policyFixedResponseConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigOutput) ToElbL7policyFixedResponseConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigOutput) ToElbL7policyFixedResponseConfigPtrOutput() ElbL7policyFixedResponseConfigPtrOutput {
	return o.ToElbL7policyFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyFixedResponseConfigOutput) ToElbL7policyFixedResponseConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyFixedResponseConfig) *ElbL7policyFixedResponseConfig {
		return &v
	}).(ElbL7policyFixedResponseConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfig) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyFixedResponseConfigOutput) InsertHeadersConfig() ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfig) *ElbL7policyFixedResponseConfigInsertHeadersConfig {
		return v.InsertHeadersConfig
	}).(ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfig) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyFixedResponseConfigOutput) RemoveHeadersConfig() ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfig) *ElbL7policyFixedResponseConfigRemoveHeadersConfig {
		return v.RemoveHeadersConfig
	}).(ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfig) string { return v.StatusCode }).(pulumi.StringOutput)
}

func (o ElbL7policyFixedResponseConfigOutput) TrafficLimitConfig() ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfig) *ElbL7policyFixedResponseConfigTrafficLimitConfig {
		return v.TrafficLimitConfig
	}).(ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput)
}

type ElbL7policyFixedResponseConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigPtrOutput) ToElbL7policyFixedResponseConfigPtrOutput() ElbL7policyFixedResponseConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigPtrOutput) ToElbL7policyFixedResponseConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigPtrOutput) Elem() ElbL7policyFixedResponseConfigOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfig) ElbL7policyFixedResponseConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyFixedResponseConfig
		return ret
	}).(ElbL7policyFixedResponseConfigOutput)
}

func (o ElbL7policyFixedResponseConfigPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyFixedResponseConfigPtrOutput) InsertHeadersConfig() ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfig) *ElbL7policyFixedResponseConfigInsertHeadersConfig {
		if v == nil {
			return nil
		}
		return v.InsertHeadersConfig
	}).(ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigPtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.MessageBody
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyFixedResponseConfigPtrOutput) RemoveHeadersConfig() ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfig) *ElbL7policyFixedResponseConfigRemoveHeadersConfig {
		if v == nil {
			return nil
		}
		return v.RemoveHeadersConfig
	}).(ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyFixedResponseConfigPtrOutput) TrafficLimitConfig() ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfig) *ElbL7policyFixedResponseConfigTrafficLimitConfig {
		if v == nil {
			return nil
		}
		return v.TrafficLimitConfig
	}).(ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput)
}

type ElbL7policyFixedResponseConfigInsertHeadersConfig struct {
	Configs []ElbL7policyFixedResponseConfigInsertHeadersConfigConfig `pulumi:"configs"`
}

// ElbL7policyFixedResponseConfigInsertHeadersConfigInput is an input type that accepts ElbL7policyFixedResponseConfigInsertHeadersConfigArgs and ElbL7policyFixedResponseConfigInsertHeadersConfigOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigInsertHeadersConfigInput` via:
//
//	ElbL7policyFixedResponseConfigInsertHeadersConfigArgs{...}
type ElbL7policyFixedResponseConfigInsertHeadersConfigInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigInsertHeadersConfigOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigOutput
	ToElbL7policyFixedResponseConfigInsertHeadersConfigOutputWithContext(context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigOutput
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigArgs struct {
	Configs ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayInput `pulumi:"configs"`
}

func (ElbL7policyFixedResponseConfigInsertHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigArgs) ToElbL7policyFixedResponseConfigInsertHeadersConfigOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigOutput {
	return i.ToElbL7policyFixedResponseConfigInsertHeadersConfigOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigArgs) ToElbL7policyFixedResponseConfigInsertHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigInsertHeadersConfigOutput)
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigArgs) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigArgs) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigInsertHeadersConfigOutput).ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(ctx)
}

// ElbL7policyFixedResponseConfigInsertHeadersConfigPtrInput is an input type that accepts ElbL7policyFixedResponseConfigInsertHeadersConfigArgs, ElbL7policyFixedResponseConfigInsertHeadersConfigPtr and ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigInsertHeadersConfigPtrInput` via:
//
//	        ElbL7policyFixedResponseConfigInsertHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyFixedResponseConfigInsertHeadersConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput
	ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput
}

type elbL7policyFixedResponseConfigInsertHeadersConfigPtrType ElbL7policyFixedResponseConfigInsertHeadersConfigArgs

func ElbL7policyFixedResponseConfigInsertHeadersConfigPtr(v *ElbL7policyFixedResponseConfigInsertHeadersConfigArgs) ElbL7policyFixedResponseConfigInsertHeadersConfigPtrInput {
	return (*elbL7policyFixedResponseConfigInsertHeadersConfigPtrType)(v)
}

func (*elbL7policyFixedResponseConfigInsertHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfigInsertHeadersConfig)(nil)).Elem()
}

func (i *elbL7policyFixedResponseConfigInsertHeadersConfigPtrType) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyFixedResponseConfigInsertHeadersConfigPtrType) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput)
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigInsertHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return o.ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyFixedResponseConfigInsertHeadersConfig) *ElbL7policyFixedResponseConfigInsertHeadersConfig {
		return &v
	}).(ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigOutput) Configs() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigInsertHeadersConfig) []ElbL7policyFixedResponseConfigInsertHeadersConfigConfig {
		return v.Configs
	}).(ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfigInsertHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput) Elem() ElbL7policyFixedResponseConfigInsertHeadersConfigOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigInsertHeadersConfig) ElbL7policyFixedResponseConfigInsertHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyFixedResponseConfigInsertHeadersConfig
		return ret
	}).(ElbL7policyFixedResponseConfigInsertHeadersConfigOutput)
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput) Configs() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigInsertHeadersConfig) []ElbL7policyFixedResponseConfigInsertHeadersConfigConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigConfig struct {
	Key       string `pulumi:"key"`
	Value     string `pulumi:"value"`
	ValueType string `pulumi:"valueType"`
}

// ElbL7policyFixedResponseConfigInsertHeadersConfigConfigInput is an input type that accepts ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs and ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigInsertHeadersConfigConfigInput` via:
//
//	ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs{...}
type ElbL7policyFixedResponseConfigInsertHeadersConfigConfigInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput
	ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutputWithContext(context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs struct {
	Key       pulumi.StringInput `pulumi:"key"`
	Value     pulumi.StringInput `pulumi:"value"`
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput {
	return i.ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput)
}

// ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayInput is an input type that accepts ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArray and ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayInput` via:
//
//	ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArray{ ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs{...} }
type ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput
	ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutputWithContext(context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArray []ElbL7policyFixedResponseConfigInsertHeadersConfigConfigInput

func (ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyFixedResponseConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArray) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput {
	return i.ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArray) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigInsertHeadersConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigInsertHeadersConfigConfig) string { return v.Value }).(pulumi.StringOutput)
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigInsertHeadersConfigConfig) string { return v.ValueType }).(pulumi.StringOutput)
}

type ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyFixedResponseConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput) ToElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput) Index(i pulumi.IntInput) ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7policyFixedResponseConfigInsertHeadersConfigConfig {
		return vs[0].([]ElbL7policyFixedResponseConfigInsertHeadersConfigConfig)[vs[1].(int)]
	}).(ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput)
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfig struct {
	Configs []ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig `pulumi:"configs"`
}

// ElbL7policyFixedResponseConfigRemoveHeadersConfigInput is an input type that accepts ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs and ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigRemoveHeadersConfigInput` via:
//
//	ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs{...}
type ElbL7policyFixedResponseConfigRemoveHeadersConfigInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigRemoveHeadersConfigOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput
	ToElbL7policyFixedResponseConfigRemoveHeadersConfigOutputWithContext(context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs struct {
	Configs ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayInput `pulumi:"configs"`
}

func (ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs) ToElbL7policyFixedResponseConfigRemoveHeadersConfigOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput {
	return i.ToElbL7policyFixedResponseConfigRemoveHeadersConfigOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs) ToElbL7policyFixedResponseConfigRemoveHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput)
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput).ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(ctx)
}

// ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrInput is an input type that accepts ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs, ElbL7policyFixedResponseConfigRemoveHeadersConfigPtr and ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrInput` via:
//
//	        ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput
	ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput
}

type elbL7policyFixedResponseConfigRemoveHeadersConfigPtrType ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs

func ElbL7policyFixedResponseConfigRemoveHeadersConfigPtr(v *ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs) ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrInput {
	return (*elbL7policyFixedResponseConfigRemoveHeadersConfigPtrType)(v)
}

func (*elbL7policyFixedResponseConfigRemoveHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfigRemoveHeadersConfig)(nil)).Elem()
}

func (i *elbL7policyFixedResponseConfigRemoveHeadersConfigPtrType) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyFixedResponseConfigRemoveHeadersConfigPtrType) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput)
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return o.ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyFixedResponseConfigRemoveHeadersConfig) *ElbL7policyFixedResponseConfigRemoveHeadersConfig {
		return &v
	}).(ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput) Configs() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigRemoveHeadersConfig) []ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig {
		return v.Configs
	}).(ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfigRemoveHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput) Elem() ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigRemoveHeadersConfig) ElbL7policyFixedResponseConfigRemoveHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyFixedResponseConfigRemoveHeadersConfig
		return ret
	}).(ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput)
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput) Configs() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigRemoveHeadersConfig) []ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig struct {
	Key string `pulumi:"key"`
}

// ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigInput is an input type that accepts ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs and ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigInput` via:
//
//	ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs{...}
type ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput
	ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutputWithContext(context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
}

func (ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput {
	return i.ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput)
}

// ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayInput is an input type that accepts ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArray and ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayInput` via:
//
//	ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArray{ ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs{...} }
type ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput
	ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutputWithContext(context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArray []ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigInput

func (ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArray) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput {
	return i.ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArray) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

type ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput) ToElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput) Index(i pulumi.IntInput) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig {
		return vs[0].([]ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig)[vs[1].(int)]
	}).(ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput)
}

type ElbL7policyFixedResponseConfigTrafficLimitConfig struct {
	Burst          *int `pulumi:"burst"`
	PerSourceIpQps *int `pulumi:"perSourceIpQps"`
	Qps            *int `pulumi:"qps"`
}

// ElbL7policyFixedResponseConfigTrafficLimitConfigInput is an input type that accepts ElbL7policyFixedResponseConfigTrafficLimitConfigArgs and ElbL7policyFixedResponseConfigTrafficLimitConfigOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigTrafficLimitConfigInput` via:
//
//	ElbL7policyFixedResponseConfigTrafficLimitConfigArgs{...}
type ElbL7policyFixedResponseConfigTrafficLimitConfigInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigTrafficLimitConfigOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigOutput
	ToElbL7policyFixedResponseConfigTrafficLimitConfigOutputWithContext(context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigOutput
}

type ElbL7policyFixedResponseConfigTrafficLimitConfigArgs struct {
	Burst          pulumi.IntPtrInput `pulumi:"burst"`
	PerSourceIpQps pulumi.IntPtrInput `pulumi:"perSourceIpQps"`
	Qps            pulumi.IntPtrInput `pulumi:"qps"`
}

func (ElbL7policyFixedResponseConfigTrafficLimitConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigTrafficLimitConfig)(nil)).Elem()
}

func (i ElbL7policyFixedResponseConfigTrafficLimitConfigArgs) ToElbL7policyFixedResponseConfigTrafficLimitConfigOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigOutput {
	return i.ToElbL7policyFixedResponseConfigTrafficLimitConfigOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigTrafficLimitConfigArgs) ToElbL7policyFixedResponseConfigTrafficLimitConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigTrafficLimitConfigOutput)
}

func (i ElbL7policyFixedResponseConfigTrafficLimitConfigArgs) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyFixedResponseConfigTrafficLimitConfigArgs) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigTrafficLimitConfigOutput).ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(ctx)
}

// ElbL7policyFixedResponseConfigTrafficLimitConfigPtrInput is an input type that accepts ElbL7policyFixedResponseConfigTrafficLimitConfigArgs, ElbL7policyFixedResponseConfigTrafficLimitConfigPtr and ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyFixedResponseConfigTrafficLimitConfigPtrInput` via:
//
//	        ElbL7policyFixedResponseConfigTrafficLimitConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyFixedResponseConfigTrafficLimitConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput
	ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput
}

type elbL7policyFixedResponseConfigTrafficLimitConfigPtrType ElbL7policyFixedResponseConfigTrafficLimitConfigArgs

func ElbL7policyFixedResponseConfigTrafficLimitConfigPtr(v *ElbL7policyFixedResponseConfigTrafficLimitConfigArgs) ElbL7policyFixedResponseConfigTrafficLimitConfigPtrInput {
	return (*elbL7policyFixedResponseConfigTrafficLimitConfigPtrType)(v)
}

func (*elbL7policyFixedResponseConfigTrafficLimitConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfigTrafficLimitConfig)(nil)).Elem()
}

func (i *elbL7policyFixedResponseConfigTrafficLimitConfigPtrType) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return i.ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyFixedResponseConfigTrafficLimitConfigPtrType) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput)
}

type ElbL7policyFixedResponseConfigTrafficLimitConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyFixedResponseConfigTrafficLimitConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) ToElbL7policyFixedResponseConfigTrafficLimitConfigOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) ToElbL7policyFixedResponseConfigTrafficLimitConfigOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return o.ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyFixedResponseConfigTrafficLimitConfig) *ElbL7policyFixedResponseConfigTrafficLimitConfig {
		return &v
	}).(ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput)
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) Burst() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigTrafficLimitConfig) *int { return v.Burst }).(pulumi.IntPtrOutput)
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) PerSourceIpQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigTrafficLimitConfig) *int { return v.PerSourceIpQps }).(pulumi.IntPtrOutput)
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigOutput) Qps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyFixedResponseConfigTrafficLimitConfig) *int { return v.Qps }).(pulumi.IntPtrOutput)
}

type ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyFixedResponseConfigTrafficLimitConfig)(nil)).Elem()
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput() ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput) ToElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput {
	return o
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput) Elem() ElbL7policyFixedResponseConfigTrafficLimitConfigOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigTrafficLimitConfig) ElbL7policyFixedResponseConfigTrafficLimitConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyFixedResponseConfigTrafficLimitConfig
		return ret
	}).(ElbL7policyFixedResponseConfigTrafficLimitConfigOutput)
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput) Burst() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigTrafficLimitConfig) *int {
		if v == nil {
			return nil
		}
		return v.Burst
	}).(pulumi.IntPtrOutput)
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput) PerSourceIpQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigTrafficLimitConfig) *int {
		if v == nil {
			return nil
		}
		return v.PerSourceIpQps
	}).(pulumi.IntPtrOutput)
}

func (o ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput) Qps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbL7policyFixedResponseConfigTrafficLimitConfig) *int {
		if v == nil {
			return nil
		}
		return v.Qps
	}).(pulumi.IntPtrOutput)
}

type ElbL7policyRedirectPoolsConfig struct {
	PoolId string `pulumi:"poolId"`
	Weight *int   `pulumi:"weight"`
}

// ElbL7policyRedirectPoolsConfigInput is an input type that accepts ElbL7policyRedirectPoolsConfigArgs and ElbL7policyRedirectPoolsConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsConfigInput` via:
//
//	ElbL7policyRedirectPoolsConfigArgs{...}
type ElbL7policyRedirectPoolsConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsConfigOutput() ElbL7policyRedirectPoolsConfigOutput
	ToElbL7policyRedirectPoolsConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsConfigOutput
}

type ElbL7policyRedirectPoolsConfigArgs struct {
	PoolId pulumi.StringInput `pulumi:"poolId"`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ElbL7policyRedirectPoolsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsConfigArgs) ToElbL7policyRedirectPoolsConfigOutput() ElbL7policyRedirectPoolsConfigOutput {
	return i.ToElbL7policyRedirectPoolsConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsConfigArgs) ToElbL7policyRedirectPoolsConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsConfigOutput)
}

// ElbL7policyRedirectPoolsConfigArrayInput is an input type that accepts ElbL7policyRedirectPoolsConfigArray and ElbL7policyRedirectPoolsConfigArrayOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsConfigArrayInput` via:
//
//	ElbL7policyRedirectPoolsConfigArray{ ElbL7policyRedirectPoolsConfigArgs{...} }
type ElbL7policyRedirectPoolsConfigArrayInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsConfigArrayOutput() ElbL7policyRedirectPoolsConfigArrayOutput
	ToElbL7policyRedirectPoolsConfigArrayOutputWithContext(context.Context) ElbL7policyRedirectPoolsConfigArrayOutput
}

type ElbL7policyRedirectPoolsConfigArray []ElbL7policyRedirectPoolsConfigInput

func (ElbL7policyRedirectPoolsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectPoolsConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsConfigArray) ToElbL7policyRedirectPoolsConfigArrayOutput() ElbL7policyRedirectPoolsConfigArrayOutput {
	return i.ToElbL7policyRedirectPoolsConfigArrayOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsConfigArray) ToElbL7policyRedirectPoolsConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsConfigArrayOutput)
}

type ElbL7policyRedirectPoolsConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsConfigOutput) ToElbL7policyRedirectPoolsConfigOutput() ElbL7policyRedirectPoolsConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsConfigOutput) ToElbL7policyRedirectPoolsConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsConfigOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsConfig) string { return v.PoolId }).(pulumi.StringOutput)
}

func (o ElbL7policyRedirectPoolsConfigOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsConfig) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ElbL7policyRedirectPoolsConfigArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectPoolsConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsConfigArrayOutput) ToElbL7policyRedirectPoolsConfigArrayOutput() ElbL7policyRedirectPoolsConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectPoolsConfigArrayOutput) ToElbL7policyRedirectPoolsConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectPoolsConfigArrayOutput) Index(i pulumi.IntInput) ElbL7policyRedirectPoolsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7policyRedirectPoolsConfig {
		return vs[0].([]ElbL7policyRedirectPoolsConfig)[vs[1].(int)]
	}).(ElbL7policyRedirectPoolsConfigOutput)
}

type ElbL7policyRedirectPoolsExtendConfig struct {
	InsertHeadersConfig *ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig `pulumi:"insertHeadersConfig"`
	RemoveHeadersConfig *ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig `pulumi:"removeHeadersConfig"`
	RewriteUrlConfig    *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig    `pulumi:"rewriteUrlConfig"`
	RewriteUrlEnabled   *bool                                                    `pulumi:"rewriteUrlEnabled"`
	TrafficLimitConfig  *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig  `pulumi:"trafficLimitConfig"`
}

// ElbL7policyRedirectPoolsExtendConfigInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigArgs and ElbL7policyRedirectPoolsExtendConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigArgs{...}
type ElbL7policyRedirectPoolsExtendConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigOutput() ElbL7policyRedirectPoolsExtendConfigOutput
	ToElbL7policyRedirectPoolsExtendConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigOutput
}

type ElbL7policyRedirectPoolsExtendConfigArgs struct {
	InsertHeadersConfig ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrInput `pulumi:"insertHeadersConfig"`
	RemoveHeadersConfig ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrInput `pulumi:"removeHeadersConfig"`
	RewriteUrlConfig    ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrInput    `pulumi:"rewriteUrlConfig"`
	RewriteUrlEnabled   pulumi.BoolPtrInput                                             `pulumi:"rewriteUrlEnabled"`
	TrafficLimitConfig  ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrInput  `pulumi:"trafficLimitConfig"`
}

func (ElbL7policyRedirectPoolsExtendConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigArgs) ToElbL7policyRedirectPoolsExtendConfigOutput() ElbL7policyRedirectPoolsExtendConfigOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigArgs) ToElbL7policyRedirectPoolsExtendConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigOutput)
}

func (i ElbL7policyRedirectPoolsExtendConfigArgs) ToElbL7policyRedirectPoolsExtendConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigArgs) ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigOutput).ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectPoolsExtendConfigPtrInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigArgs, ElbL7policyRedirectPoolsExtendConfigPtr and ElbL7policyRedirectPoolsExtendConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigPtrInput` via:
//
//	        ElbL7policyRedirectPoolsExtendConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectPoolsExtendConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigPtrOutput
	ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigPtrOutput
}

type elbL7policyRedirectPoolsExtendConfigPtrType ElbL7policyRedirectPoolsExtendConfigArgs

func ElbL7policyRedirectPoolsExtendConfigPtr(v *ElbL7policyRedirectPoolsExtendConfigArgs) ElbL7policyRedirectPoolsExtendConfigPtrInput {
	return (*elbL7policyRedirectPoolsExtendConfigPtrType)(v)
}

func (*elbL7policyRedirectPoolsExtendConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectPoolsExtendConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectPoolsExtendConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) ToElbL7policyRedirectPoolsExtendConfigOutput() ElbL7policyRedirectPoolsExtendConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) ToElbL7policyRedirectPoolsExtendConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) ToElbL7policyRedirectPoolsExtendConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return o.ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfig {
		return &v
	}).(ElbL7policyRedirectPoolsExtendConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) InsertHeadersConfig() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig {
		return v.InsertHeadersConfig
	}).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) RemoveHeadersConfig() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig {
		return v.RemoveHeadersConfig
	}).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) RewriteUrlConfig() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig {
		return v.RewriteUrlConfig
	}).(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) RewriteUrlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfig) *bool { return v.RewriteUrlEnabled }).(pulumi.BoolPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigOutput) TrafficLimitConfig() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig {
		return v.TrafficLimitConfig
	}).(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) Elem() ElbL7policyRedirectPoolsExtendConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfig) ElbL7policyRedirectPoolsExtendConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectPoolsExtendConfig
		return ret
	}).(ElbL7policyRedirectPoolsExtendConfigOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) InsertHeadersConfig() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig {
		if v == nil {
			return nil
		}
		return v.InsertHeadersConfig
	}).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) RemoveHeadersConfig() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig {
		if v == nil {
			return nil
		}
		return v.RemoveHeadersConfig
	}).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) RewriteUrlConfig() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig {
		if v == nil {
			return nil
		}
		return v.RewriteUrlConfig
	}).(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) RewriteUrlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RewriteUrlEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigPtrOutput) TrafficLimitConfig() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfig) *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig {
		if v == nil {
			return nil
		}
		return v.TrafficLimitConfig
	}).(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig struct {
	Configs []ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig `pulumi:"configs"`
}

// ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs and ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs{...}
type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput
	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs struct {
	Configs ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayInput `pulumi:"configs"`
}

func (ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput)
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput).ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs, ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtr and ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrInput` via:
//
//	        ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput
	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput
}

type elbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrType ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs

func ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtr(v *ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrInput {
	return (*elbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrType)(v)
}

func (*elbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return o.ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig) *ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig {
		return &v
	}).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput) Configs() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig) []ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig {
		return v.Configs
	}).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput) Elem() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig
		return ret
	}).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput) Configs() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig) []ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig struct {
	Key       string `pulumi:"key"`
	Value     string `pulumi:"value"`
	ValueType string `pulumi:"valueType"`
}

// ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs and ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs{...}
type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput
	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs struct {
	Key       pulumi.StringInput `pulumi:"key"`
	Value     pulumi.StringInput `pulumi:"value"`
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput)
}

// ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArray and ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArray{ ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs{...} }
type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput
	ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArray []ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigInput

func (ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArray) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArray) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig) string { return v.Value }).(pulumi.StringOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig) string { return v.ValueType }).(pulumi.StringOutput)
}

type ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput) ToElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput) Index(i pulumi.IntInput) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig {
		return vs[0].([]ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig)[vs[1].(int)]
	}).(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig struct {
	Configs []ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig `pulumi:"configs"`
}

// ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs and ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs{...}
type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput
	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs struct {
	Configs ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayInput `pulumi:"configs"`
}

func (ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput)
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput).ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs, ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtr and ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrInput` via:
//
//	        ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput
	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput
}

type elbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrType ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs

func ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtr(v *ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrInput {
	return (*elbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrType)(v)
}

func (*elbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return o.ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig) *ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig {
		return &v
	}).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput) Configs() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig) []ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig {
		return v.Configs
	}).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput) Elem() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig
		return ret
	}).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput) Configs() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig) []ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig struct {
	Key string `pulumi:"key"`
}

// ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs and ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs{...}
type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput
	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
}

func (ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput)
}

// ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArray and ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArray{ ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs{...} }
type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput
	ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArray []ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigInput

func (ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArray) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArray) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput) ToElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput) Index(i pulumi.IntInput) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig {
		return vs[0].([]ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig)[vs[1].(int)]
	}).(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig struct {
	Host  *string `pulumi:"host"`
	Path  *string `pulumi:"path"`
	Query *string `pulumi:"query"`
}

// ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs and ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs{...}
type ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput
	ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput
}

type ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs struct {
	Host  pulumi.StringPtrInput `pulumi:"host"`
	Path  pulumi.StringPtrInput `pulumi:"path"`
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput)
}

func (i ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput).ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs, ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtr and ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrInput` via:
//
//	        ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput
	ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput
}

type elbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrType ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs

func ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtr(v *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrInput {
	return (*elbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrType)(v)
}

func (*elbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return o.ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig {
		return &v
	}).(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput) Elem() ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig
		return ret
	}).(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig struct {
	Burst          *int `pulumi:"burst"`
	PerSourceIpQps *int `pulumi:"perSourceIpQps"`
	Qps            *int `pulumi:"qps"`
}

// ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs and ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigInput` via:
//
//	ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs{...}
type ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput
	ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput
}

type ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs struct {
	Burst          pulumi.IntPtrInput `pulumi:"burst"`
	PerSourceIpQps pulumi.IntPtrInput `pulumi:"perSourceIpQps"`
	Qps            pulumi.IntPtrInput `pulumi:"qps"`
}

func (ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput)
}

func (i ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput).ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrInput is an input type that accepts ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs, ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtr and ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrInput` via:
//
//	        ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput
	ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput
}

type elbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrType ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs

func ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtr(v *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrInput {
	return (*elbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrType)(v)
}

func (*elbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrType) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return o.ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig {
		return &v
	}).(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) Burst() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) *int { return v.Burst }).(pulumi.IntPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) PerSourceIpQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) *int { return v.PerSourceIpQps }).(pulumi.IntPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput) Qps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) *int { return v.Qps }).(pulumi.IntPtrOutput)
}

type ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput) ToElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput) Elem() ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig
		return ret
	}).(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput) Burst() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) *int {
		if v == nil {
			return nil
		}
		return v.Burst
	}).(pulumi.IntPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput) PerSourceIpQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) *int {
		if v == nil {
			return nil
		}
		return v.PerSourceIpQps
	}).(pulumi.IntPtrOutput)
}

func (o ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput) Qps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig) *int {
		if v == nil {
			return nil
		}
		return v.Qps
	}).(pulumi.IntPtrOutput)
}

type ElbL7policyRedirectPoolsStickySessionConfig struct {
	Enable  *bool `pulumi:"enable"`
	Timeout *int  `pulumi:"timeout"`
}

// ElbL7policyRedirectPoolsStickySessionConfigInput is an input type that accepts ElbL7policyRedirectPoolsStickySessionConfigArgs and ElbL7policyRedirectPoolsStickySessionConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsStickySessionConfigInput` via:
//
//	ElbL7policyRedirectPoolsStickySessionConfigArgs{...}
type ElbL7policyRedirectPoolsStickySessionConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsStickySessionConfigOutput() ElbL7policyRedirectPoolsStickySessionConfigOutput
	ToElbL7policyRedirectPoolsStickySessionConfigOutputWithContext(context.Context) ElbL7policyRedirectPoolsStickySessionConfigOutput
}

type ElbL7policyRedirectPoolsStickySessionConfigArgs struct {
	Enable  pulumi.BoolPtrInput `pulumi:"enable"`
	Timeout pulumi.IntPtrInput  `pulumi:"timeout"`
}

func (ElbL7policyRedirectPoolsStickySessionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsStickySessionConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectPoolsStickySessionConfigArgs) ToElbL7policyRedirectPoolsStickySessionConfigOutput() ElbL7policyRedirectPoolsStickySessionConfigOutput {
	return i.ToElbL7policyRedirectPoolsStickySessionConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsStickySessionConfigArgs) ToElbL7policyRedirectPoolsStickySessionConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsStickySessionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsStickySessionConfigOutput)
}

func (i ElbL7policyRedirectPoolsStickySessionConfigArgs) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutput() ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectPoolsStickySessionConfigArgs) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsStickySessionConfigOutput).ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectPoolsStickySessionConfigPtrInput is an input type that accepts ElbL7policyRedirectPoolsStickySessionConfigArgs, ElbL7policyRedirectPoolsStickySessionConfigPtr and ElbL7policyRedirectPoolsStickySessionConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectPoolsStickySessionConfigPtrInput` via:
//
//	        ElbL7policyRedirectPoolsStickySessionConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectPoolsStickySessionConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectPoolsStickySessionConfigPtrOutput() ElbL7policyRedirectPoolsStickySessionConfigPtrOutput
	ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectPoolsStickySessionConfigPtrOutput
}

type elbL7policyRedirectPoolsStickySessionConfigPtrType ElbL7policyRedirectPoolsStickySessionConfigArgs

func ElbL7policyRedirectPoolsStickySessionConfigPtr(v *ElbL7policyRedirectPoolsStickySessionConfigArgs) ElbL7policyRedirectPoolsStickySessionConfigPtrInput {
	return (*elbL7policyRedirectPoolsStickySessionConfigPtrType)(v)
}

func (*elbL7policyRedirectPoolsStickySessionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsStickySessionConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectPoolsStickySessionConfigPtrType) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutput() ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return i.ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectPoolsStickySessionConfigPtrType) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectPoolsStickySessionConfigPtrOutput)
}

type ElbL7policyRedirectPoolsStickySessionConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsStickySessionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectPoolsStickySessionConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsStickySessionConfigOutput) ToElbL7policyRedirectPoolsStickySessionConfigOutput() ElbL7policyRedirectPoolsStickySessionConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsStickySessionConfigOutput) ToElbL7policyRedirectPoolsStickySessionConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsStickySessionConfigOutput {
	return o
}

func (o ElbL7policyRedirectPoolsStickySessionConfigOutput) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutput() ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return o.ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectPoolsStickySessionConfigOutput) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectPoolsStickySessionConfig) *ElbL7policyRedirectPoolsStickySessionConfig {
		return &v
	}).(ElbL7policyRedirectPoolsStickySessionConfigPtrOutput)
}

func (o ElbL7policyRedirectPoolsStickySessionConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsStickySessionConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o ElbL7policyRedirectPoolsStickySessionConfigOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectPoolsStickySessionConfig) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type ElbL7policyRedirectPoolsStickySessionConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectPoolsStickySessionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectPoolsStickySessionConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectPoolsStickySessionConfigPtrOutput) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutput() ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsStickySessionConfigPtrOutput) ToElbL7policyRedirectPoolsStickySessionConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectPoolsStickySessionConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectPoolsStickySessionConfigPtrOutput) Elem() ElbL7policyRedirectPoolsStickySessionConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsStickySessionConfig) ElbL7policyRedirectPoolsStickySessionConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectPoolsStickySessionConfig
		return ret
	}).(ElbL7policyRedirectPoolsStickySessionConfigOutput)
}

func (o ElbL7policyRedirectPoolsStickySessionConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsStickySessionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

func (o ElbL7policyRedirectPoolsStickySessionConfigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectPoolsStickySessionConfig) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ElbL7policyRedirectUrlConfig struct {
	Host                *string                                          `pulumi:"host"`
	InsertHeadersConfig *ElbL7policyRedirectUrlConfigInsertHeadersConfig `pulumi:"insertHeadersConfig"`
	Path                *string                                          `pulumi:"path"`
	Port                *string                                          `pulumi:"port"`
	Protocol            *string                                          `pulumi:"protocol"`
	Query               *string                                          `pulumi:"query"`
	RemoveHeadersConfig *ElbL7policyRedirectUrlConfigRemoveHeadersConfig `pulumi:"removeHeadersConfig"`
	StatusCode          string                                           `pulumi:"statusCode"`
}

// ElbL7policyRedirectUrlConfigInput is an input type that accepts ElbL7policyRedirectUrlConfigArgs and ElbL7policyRedirectUrlConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigInput` via:
//
//	ElbL7policyRedirectUrlConfigArgs{...}
type ElbL7policyRedirectUrlConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigOutput() ElbL7policyRedirectUrlConfigOutput
	ToElbL7policyRedirectUrlConfigOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigOutput
}

type ElbL7policyRedirectUrlConfigArgs struct {
	Host                pulumi.StringPtrInput                                   `pulumi:"host"`
	InsertHeadersConfig ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrInput `pulumi:"insertHeadersConfig"`
	Path                pulumi.StringPtrInput                                   `pulumi:"path"`
	Port                pulumi.StringPtrInput                                   `pulumi:"port"`
	Protocol            pulumi.StringPtrInput                                   `pulumi:"protocol"`
	Query               pulumi.StringPtrInput                                   `pulumi:"query"`
	RemoveHeadersConfig ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrInput `pulumi:"removeHeadersConfig"`
	StatusCode          pulumi.StringInput                                      `pulumi:"statusCode"`
}

func (ElbL7policyRedirectUrlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectUrlConfigArgs) ToElbL7policyRedirectUrlConfigOutput() ElbL7policyRedirectUrlConfigOutput {
	return i.ToElbL7policyRedirectUrlConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigArgs) ToElbL7policyRedirectUrlConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigOutput)
}

func (i ElbL7policyRedirectUrlConfigArgs) ToElbL7policyRedirectUrlConfigPtrOutput() ElbL7policyRedirectUrlConfigPtrOutput {
	return i.ToElbL7policyRedirectUrlConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigArgs) ToElbL7policyRedirectUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigOutput).ToElbL7policyRedirectUrlConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectUrlConfigPtrInput is an input type that accepts ElbL7policyRedirectUrlConfigArgs, ElbL7policyRedirectUrlConfigPtr and ElbL7policyRedirectUrlConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigPtrInput` via:
//
//	        ElbL7policyRedirectUrlConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectUrlConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigPtrOutput() ElbL7policyRedirectUrlConfigPtrOutput
	ToElbL7policyRedirectUrlConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigPtrOutput
}

type elbL7policyRedirectUrlConfigPtrType ElbL7policyRedirectUrlConfigArgs

func ElbL7policyRedirectUrlConfigPtr(v *ElbL7policyRedirectUrlConfigArgs) ElbL7policyRedirectUrlConfigPtrInput {
	return (*elbL7policyRedirectUrlConfigPtrType)(v)
}

func (*elbL7policyRedirectUrlConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectUrlConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectUrlConfigPtrType) ToElbL7policyRedirectUrlConfigPtrOutput() ElbL7policyRedirectUrlConfigPtrOutput {
	return i.ToElbL7policyRedirectUrlConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectUrlConfigPtrType) ToElbL7policyRedirectUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigPtrOutput)
}

type ElbL7policyRedirectUrlConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigOutput) ToElbL7policyRedirectUrlConfigOutput() ElbL7policyRedirectUrlConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigOutput) ToElbL7policyRedirectUrlConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigOutput) ToElbL7policyRedirectUrlConfigPtrOutput() ElbL7policyRedirectUrlConfigPtrOutput {
	return o.ToElbL7policyRedirectUrlConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectUrlConfigOutput) ToElbL7policyRedirectUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectUrlConfig) *ElbL7policyRedirectUrlConfig {
		return &v
	}).(ElbL7policyRedirectUrlConfigPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) InsertHeadersConfig() ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) *ElbL7policyRedirectUrlConfigInsertHeadersConfig {
		return v.InsertHeadersConfig
	}).(ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) *string { return v.Query }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) RemoveHeadersConfig() ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) *ElbL7policyRedirectUrlConfigRemoveHeadersConfig {
		return v.RemoveHeadersConfig
	}).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfig) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ElbL7policyRedirectUrlConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectUrlConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) ToElbL7policyRedirectUrlConfigPtrOutput() ElbL7policyRedirectUrlConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) ToElbL7policyRedirectUrlConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) Elem() ElbL7policyRedirectUrlConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) ElbL7policyRedirectUrlConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectUrlConfig
		return ret
	}).(ElbL7policyRedirectUrlConfigOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) InsertHeadersConfig() ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *ElbL7policyRedirectUrlConfigInsertHeadersConfig {
		if v == nil {
			return nil
		}
		return v.InsertHeadersConfig
	}).(ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) RemoveHeadersConfig() ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *ElbL7policyRedirectUrlConfigRemoveHeadersConfig {
		if v == nil {
			return nil
		}
		return v.RemoveHeadersConfig
	}).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfig struct {
	Configs []ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig `pulumi:"configs"`
}

// ElbL7policyRedirectUrlConfigInsertHeadersConfigInput is an input type that accepts ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs and ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigInsertHeadersConfigInput` via:
//
//	ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs{...}
type ElbL7policyRedirectUrlConfigInsertHeadersConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigInsertHeadersConfigOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput
	ToElbL7policyRedirectUrlConfigInsertHeadersConfigOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs struct {
	Configs ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayInput `pulumi:"configs"`
}

func (ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs) ToElbL7policyRedirectUrlConfigInsertHeadersConfigOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput {
	return i.ToElbL7policyRedirectUrlConfigInsertHeadersConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs) ToElbL7policyRedirectUrlConfigInsertHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput)
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput).ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrInput is an input type that accepts ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs, ElbL7policyRedirectUrlConfigInsertHeadersConfigPtr and ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrInput` via:
//
//	        ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput
	ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput
}

type elbL7policyRedirectUrlConfigInsertHeadersConfigPtrType ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs

func ElbL7policyRedirectUrlConfigInsertHeadersConfigPtr(v *ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs) ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrInput {
	return (*elbL7policyRedirectUrlConfigInsertHeadersConfigPtrType)(v)
}

func (*elbL7policyRedirectUrlConfigInsertHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectUrlConfigInsertHeadersConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectUrlConfigInsertHeadersConfigPtrType) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectUrlConfigInsertHeadersConfigPtrType) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput)
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return o.ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectUrlConfigInsertHeadersConfig) *ElbL7policyRedirectUrlConfigInsertHeadersConfig {
		return &v
	}).(ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput) Configs() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfigInsertHeadersConfig) []ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig {
		return v.Configs
	}).(ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectUrlConfigInsertHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput) Elem() ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfigInsertHeadersConfig) ElbL7policyRedirectUrlConfigInsertHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectUrlConfigInsertHeadersConfig
		return ret
	}).(ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput)
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput) Configs() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfigInsertHeadersConfig) []ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig struct {
	Key       string `pulumi:"key"`
	Value     string `pulumi:"value"`
	ValueType string `pulumi:"valueType"`
}

// ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigInput is an input type that accepts ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs and ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigInput` via:
//
//	ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs{...}
type ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput
	ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs struct {
	Key       pulumi.StringInput `pulumi:"key"`
	Value     pulumi.StringInput `pulumi:"value"`
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput {
	return i.ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput)
}

// ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayInput is an input type that accepts ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArray and ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayInput` via:
//
//	ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArray{ ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs{...} }
type ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput
	ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArray []ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigInput

func (ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArray) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput {
	return i.ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArray) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig) string { return v.Value }).(pulumi.StringOutput)
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig) string { return v.ValueType }).(pulumi.StringOutput)
}

type ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput() ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput) ToElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput) Index(i pulumi.IntInput) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig {
		return vs[0].([]ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig)[vs[1].(int)]
	}).(ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput)
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfig struct {
	Configs []ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig `pulumi:"configs"`
}

// ElbL7policyRedirectUrlConfigRemoveHeadersConfigInput is an input type that accepts ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs and ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigRemoveHeadersConfigInput` via:
//
//	ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs{...}
type ElbL7policyRedirectUrlConfigRemoveHeadersConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput
	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs struct {
	Configs ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayInput `pulumi:"configs"`
}

func (ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput {
	return i.ToElbL7policyRedirectUrlConfigRemoveHeadersConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput)
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput).ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(ctx)
}

// ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrInput is an input type that accepts ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs, ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtr and ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrInput` via:
//
//	        ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput
	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput
}

type elbL7policyRedirectUrlConfigRemoveHeadersConfigPtrType ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs

func ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtr(v *ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs) ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrInput {
	return (*elbL7policyRedirectUrlConfigRemoveHeadersConfigPtrType)(v)
}

func (*elbL7policyRedirectUrlConfigRemoveHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectUrlConfigRemoveHeadersConfig)(nil)).Elem()
}

func (i *elbL7policyRedirectUrlConfigRemoveHeadersConfigPtrType) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return i.ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *elbL7policyRedirectUrlConfigRemoveHeadersConfigPtrType) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput)
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return o.ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbL7policyRedirectUrlConfigRemoveHeadersConfig) *ElbL7policyRedirectUrlConfigRemoveHeadersConfig {
		return &v
	}).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput)
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput) Configs() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfigRemoveHeadersConfig) []ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig {
		return v.Configs
	}).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policyRedirectUrlConfigRemoveHeadersConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput) Elem() ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfigRemoveHeadersConfig) ElbL7policyRedirectUrlConfigRemoveHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ElbL7policyRedirectUrlConfigRemoveHeadersConfig
		return ret
	}).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput)
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput) Configs() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput {
	return o.ApplyT(func(v *ElbL7policyRedirectUrlConfigRemoveHeadersConfig) []ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig struct {
	Key string `pulumi:"key"`
}

// ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigInput is an input type that accepts ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs and ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigInput` via:
//
//	ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs{...}
type ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput
	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
}

func (ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput {
	return i.ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput)
}

// ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayInput is an input type that accepts ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArray and ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput values.
// You can construct a concrete instance of `ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayInput` via:
//
//	ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArray{ ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs{...} }
type ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayInput interface {
	pulumi.Input

	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput
	ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutputWithContext(context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArray []ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigInput

func (ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArray) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput {
	return i.ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutputWithContext(context.Background())
}

func (i ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArray) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput)
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

type ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig)(nil)).Elem()
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput() ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput) ToElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutputWithContext(ctx context.Context) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput {
	return o
}

func (o ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput) Index(i pulumi.IntInput) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig {
		return vs[0].([]ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig)[vs[1].(int)]
	}).(ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput)
}

type ElbL7ruleCondition struct {
	Key   *string `pulumi:"key"`
	Value string  `pulumi:"value"`
}

// ElbL7ruleConditionInput is an input type that accepts ElbL7ruleConditionArgs and ElbL7ruleConditionOutput values.
// You can construct a concrete instance of `ElbL7ruleConditionInput` via:
//
//	ElbL7ruleConditionArgs{...}
type ElbL7ruleConditionInput interface {
	pulumi.Input

	ToElbL7ruleConditionOutput() ElbL7ruleConditionOutput
	ToElbL7ruleConditionOutputWithContext(context.Context) ElbL7ruleConditionOutput
}

type ElbL7ruleConditionArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (ElbL7ruleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7ruleCondition)(nil)).Elem()
}

func (i ElbL7ruleConditionArgs) ToElbL7ruleConditionOutput() ElbL7ruleConditionOutput {
	return i.ToElbL7ruleConditionOutputWithContext(context.Background())
}

func (i ElbL7ruleConditionArgs) ToElbL7ruleConditionOutputWithContext(ctx context.Context) ElbL7ruleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7ruleConditionOutput)
}

// ElbL7ruleConditionArrayInput is an input type that accepts ElbL7ruleConditionArray and ElbL7ruleConditionArrayOutput values.
// You can construct a concrete instance of `ElbL7ruleConditionArrayInput` via:
//
//	ElbL7ruleConditionArray{ ElbL7ruleConditionArgs{...} }
type ElbL7ruleConditionArrayInput interface {
	pulumi.Input

	ToElbL7ruleConditionArrayOutput() ElbL7ruleConditionArrayOutput
	ToElbL7ruleConditionArrayOutputWithContext(context.Context) ElbL7ruleConditionArrayOutput
}

type ElbL7ruleConditionArray []ElbL7ruleConditionInput

func (ElbL7ruleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7ruleCondition)(nil)).Elem()
}

func (i ElbL7ruleConditionArray) ToElbL7ruleConditionArrayOutput() ElbL7ruleConditionArrayOutput {
	return i.ToElbL7ruleConditionArrayOutputWithContext(context.Background())
}

func (i ElbL7ruleConditionArray) ToElbL7ruleConditionArrayOutputWithContext(ctx context.Context) ElbL7ruleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7ruleConditionArrayOutput)
}

type ElbL7ruleConditionOutput struct{ *pulumi.OutputState }

func (ElbL7ruleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbL7ruleCondition)(nil)).Elem()
}

func (o ElbL7ruleConditionOutput) ToElbL7ruleConditionOutput() ElbL7ruleConditionOutput {
	return o
}

func (o ElbL7ruleConditionOutput) ToElbL7ruleConditionOutputWithContext(ctx context.Context) ElbL7ruleConditionOutput {
	return o
}

func (o ElbL7ruleConditionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbL7ruleCondition) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ElbL7ruleConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ElbL7ruleCondition) string { return v.Value }).(pulumi.StringOutput)
}

type ElbL7ruleConditionArrayOutput struct{ *pulumi.OutputState }

func (ElbL7ruleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbL7ruleCondition)(nil)).Elem()
}

func (o ElbL7ruleConditionArrayOutput) ToElbL7ruleConditionArrayOutput() ElbL7ruleConditionArrayOutput {
	return o
}

func (o ElbL7ruleConditionArrayOutput) ToElbL7ruleConditionArrayOutputWithContext(ctx context.Context) ElbL7ruleConditionArrayOutput {
	return o
}

func (o ElbL7ruleConditionArrayOutput) Index(i pulumi.IntInput) ElbL7ruleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbL7ruleCondition {
		return vs[0].([]ElbL7ruleCondition)[vs[1].(int)]
	}).(ElbL7ruleConditionOutput)
}

type ElbListenerPortRange struct {
	EndPort   int `pulumi:"endPort"`
	StartPort int `pulumi:"startPort"`
}

// ElbListenerPortRangeInput is an input type that accepts ElbListenerPortRangeArgs and ElbListenerPortRangeOutput values.
// You can construct a concrete instance of `ElbListenerPortRangeInput` via:
//
//	ElbListenerPortRangeArgs{...}
type ElbListenerPortRangeInput interface {
	pulumi.Input

	ToElbListenerPortRangeOutput() ElbListenerPortRangeOutput
	ToElbListenerPortRangeOutputWithContext(context.Context) ElbListenerPortRangeOutput
}

type ElbListenerPortRangeArgs struct {
	EndPort   pulumi.IntInput `pulumi:"endPort"`
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (ElbListenerPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbListenerPortRange)(nil)).Elem()
}

func (i ElbListenerPortRangeArgs) ToElbListenerPortRangeOutput() ElbListenerPortRangeOutput {
	return i.ToElbListenerPortRangeOutputWithContext(context.Background())
}

func (i ElbListenerPortRangeArgs) ToElbListenerPortRangeOutputWithContext(ctx context.Context) ElbListenerPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbListenerPortRangeOutput)
}

// ElbListenerPortRangeArrayInput is an input type that accepts ElbListenerPortRangeArray and ElbListenerPortRangeArrayOutput values.
// You can construct a concrete instance of `ElbListenerPortRangeArrayInput` via:
//
//	ElbListenerPortRangeArray{ ElbListenerPortRangeArgs{...} }
type ElbListenerPortRangeArrayInput interface {
	pulumi.Input

	ToElbListenerPortRangeArrayOutput() ElbListenerPortRangeArrayOutput
	ToElbListenerPortRangeArrayOutputWithContext(context.Context) ElbListenerPortRangeArrayOutput
}

type ElbListenerPortRangeArray []ElbListenerPortRangeInput

func (ElbListenerPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbListenerPortRange)(nil)).Elem()
}

func (i ElbListenerPortRangeArray) ToElbListenerPortRangeArrayOutput() ElbListenerPortRangeArrayOutput {
	return i.ToElbListenerPortRangeArrayOutputWithContext(context.Background())
}

func (i ElbListenerPortRangeArray) ToElbListenerPortRangeArrayOutputWithContext(ctx context.Context) ElbListenerPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbListenerPortRangeArrayOutput)
}

type ElbListenerPortRangeOutput struct{ *pulumi.OutputState }

func (ElbListenerPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbListenerPortRange)(nil)).Elem()
}

func (o ElbListenerPortRangeOutput) ToElbListenerPortRangeOutput() ElbListenerPortRangeOutput {
	return o
}

func (o ElbListenerPortRangeOutput) ToElbListenerPortRangeOutputWithContext(ctx context.Context) ElbListenerPortRangeOutput {
	return o
}

func (o ElbListenerPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v ElbListenerPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

func (o ElbListenerPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v ElbListenerPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type ElbListenerPortRangeArrayOutput struct{ *pulumi.OutputState }

func (ElbListenerPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbListenerPortRange)(nil)).Elem()
}

func (o ElbListenerPortRangeArrayOutput) ToElbListenerPortRangeArrayOutput() ElbListenerPortRangeArrayOutput {
	return o
}

func (o ElbListenerPortRangeArrayOutput) ToElbListenerPortRangeArrayOutputWithContext(ctx context.Context) ElbListenerPortRangeArrayOutput {
	return o
}

func (o ElbListenerPortRangeArrayOutput) Index(i pulumi.IntInput) ElbListenerPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbListenerPortRange {
		return vs[0].([]ElbListenerPortRange)[vs[1].(int)]
	}).(ElbListenerPortRangeOutput)
}

type ElbPoolPersistence struct {
	CookieName *string `pulumi:"cookieName"`
	Timeout    *int    `pulumi:"timeout"`
	Type       string  `pulumi:"type"`
}

// ElbPoolPersistenceInput is an input type that accepts ElbPoolPersistenceArgs and ElbPoolPersistenceOutput values.
// You can construct a concrete instance of `ElbPoolPersistenceInput` via:
//
//	ElbPoolPersistenceArgs{...}
type ElbPoolPersistenceInput interface {
	pulumi.Input

	ToElbPoolPersistenceOutput() ElbPoolPersistenceOutput
	ToElbPoolPersistenceOutputWithContext(context.Context) ElbPoolPersistenceOutput
}

type ElbPoolPersistenceArgs struct {
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	Timeout    pulumi.IntPtrInput    `pulumi:"timeout"`
	Type       pulumi.StringInput    `pulumi:"type"`
}

func (ElbPoolPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbPoolPersistence)(nil)).Elem()
}

func (i ElbPoolPersistenceArgs) ToElbPoolPersistenceOutput() ElbPoolPersistenceOutput {
	return i.ToElbPoolPersistenceOutputWithContext(context.Background())
}

func (i ElbPoolPersistenceArgs) ToElbPoolPersistenceOutputWithContext(ctx context.Context) ElbPoolPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbPoolPersistenceOutput)
}

func (i ElbPoolPersistenceArgs) ToElbPoolPersistencePtrOutput() ElbPoolPersistencePtrOutput {
	return i.ToElbPoolPersistencePtrOutputWithContext(context.Background())
}

func (i ElbPoolPersistenceArgs) ToElbPoolPersistencePtrOutputWithContext(ctx context.Context) ElbPoolPersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbPoolPersistenceOutput).ToElbPoolPersistencePtrOutputWithContext(ctx)
}

// ElbPoolPersistencePtrInput is an input type that accepts ElbPoolPersistenceArgs, ElbPoolPersistencePtr and ElbPoolPersistencePtrOutput values.
// You can construct a concrete instance of `ElbPoolPersistencePtrInput` via:
//
//	        ElbPoolPersistenceArgs{...}
//
//	or:
//
//	        nil
type ElbPoolPersistencePtrInput interface {
	pulumi.Input

	ToElbPoolPersistencePtrOutput() ElbPoolPersistencePtrOutput
	ToElbPoolPersistencePtrOutputWithContext(context.Context) ElbPoolPersistencePtrOutput
}

type elbPoolPersistencePtrType ElbPoolPersistenceArgs

func ElbPoolPersistencePtr(v *ElbPoolPersistenceArgs) ElbPoolPersistencePtrInput {
	return (*elbPoolPersistencePtrType)(v)
}

func (*elbPoolPersistencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbPoolPersistence)(nil)).Elem()
}

func (i *elbPoolPersistencePtrType) ToElbPoolPersistencePtrOutput() ElbPoolPersistencePtrOutput {
	return i.ToElbPoolPersistencePtrOutputWithContext(context.Background())
}

func (i *elbPoolPersistencePtrType) ToElbPoolPersistencePtrOutputWithContext(ctx context.Context) ElbPoolPersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbPoolPersistencePtrOutput)
}

type ElbPoolPersistenceOutput struct{ *pulumi.OutputState }

func (ElbPoolPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbPoolPersistence)(nil)).Elem()
}

func (o ElbPoolPersistenceOutput) ToElbPoolPersistenceOutput() ElbPoolPersistenceOutput {
	return o
}

func (o ElbPoolPersistenceOutput) ToElbPoolPersistenceOutputWithContext(ctx context.Context) ElbPoolPersistenceOutput {
	return o
}

func (o ElbPoolPersistenceOutput) ToElbPoolPersistencePtrOutput() ElbPoolPersistencePtrOutput {
	return o.ToElbPoolPersistencePtrOutputWithContext(context.Background())
}

func (o ElbPoolPersistenceOutput) ToElbPoolPersistencePtrOutputWithContext(ctx context.Context) ElbPoolPersistencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbPoolPersistence) *ElbPoolPersistence {
		return &v
	}).(ElbPoolPersistencePtrOutput)
}

func (o ElbPoolPersistenceOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbPoolPersistence) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

func (o ElbPoolPersistenceOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElbPoolPersistence) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

func (o ElbPoolPersistenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ElbPoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

type ElbPoolPersistencePtrOutput struct{ *pulumi.OutputState }

func (ElbPoolPersistencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbPoolPersistence)(nil)).Elem()
}

func (o ElbPoolPersistencePtrOutput) ToElbPoolPersistencePtrOutput() ElbPoolPersistencePtrOutput {
	return o
}

func (o ElbPoolPersistencePtrOutput) ToElbPoolPersistencePtrOutputWithContext(ctx context.Context) ElbPoolPersistencePtrOutput {
	return o
}

func (o ElbPoolPersistencePtrOutput) Elem() ElbPoolPersistenceOutput {
	return o.ApplyT(func(v *ElbPoolPersistence) ElbPoolPersistence {
		if v != nil {
			return *v
		}
		var ret ElbPoolPersistence
		return ret
	}).(ElbPoolPersistenceOutput)
}

func (o ElbPoolPersistencePtrOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbPoolPersistence) *string {
		if v == nil {
			return nil
		}
		return v.CookieName
	}).(pulumi.StringPtrOutput)
}

func (o ElbPoolPersistencePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElbPoolPersistence) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

func (o ElbPoolPersistencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbPoolPersistence) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ElbSecurityPolicyListener struct {
	Id *string `pulumi:"id"`
}

// ElbSecurityPolicyListenerInput is an input type that accepts ElbSecurityPolicyListenerArgs and ElbSecurityPolicyListenerOutput values.
// You can construct a concrete instance of `ElbSecurityPolicyListenerInput` via:
//
//	ElbSecurityPolicyListenerArgs{...}
type ElbSecurityPolicyListenerInput interface {
	pulumi.Input

	ToElbSecurityPolicyListenerOutput() ElbSecurityPolicyListenerOutput
	ToElbSecurityPolicyListenerOutputWithContext(context.Context) ElbSecurityPolicyListenerOutput
}

type ElbSecurityPolicyListenerArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ElbSecurityPolicyListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSecurityPolicyListener)(nil)).Elem()
}

func (i ElbSecurityPolicyListenerArgs) ToElbSecurityPolicyListenerOutput() ElbSecurityPolicyListenerOutput {
	return i.ToElbSecurityPolicyListenerOutputWithContext(context.Background())
}

func (i ElbSecurityPolicyListenerArgs) ToElbSecurityPolicyListenerOutputWithContext(ctx context.Context) ElbSecurityPolicyListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSecurityPolicyListenerOutput)
}

// ElbSecurityPolicyListenerArrayInput is an input type that accepts ElbSecurityPolicyListenerArray and ElbSecurityPolicyListenerArrayOutput values.
// You can construct a concrete instance of `ElbSecurityPolicyListenerArrayInput` via:
//
//	ElbSecurityPolicyListenerArray{ ElbSecurityPolicyListenerArgs{...} }
type ElbSecurityPolicyListenerArrayInput interface {
	pulumi.Input

	ToElbSecurityPolicyListenerArrayOutput() ElbSecurityPolicyListenerArrayOutput
	ToElbSecurityPolicyListenerArrayOutputWithContext(context.Context) ElbSecurityPolicyListenerArrayOutput
}

type ElbSecurityPolicyListenerArray []ElbSecurityPolicyListenerInput

func (ElbSecurityPolicyListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSecurityPolicyListener)(nil)).Elem()
}

func (i ElbSecurityPolicyListenerArray) ToElbSecurityPolicyListenerArrayOutput() ElbSecurityPolicyListenerArrayOutput {
	return i.ToElbSecurityPolicyListenerArrayOutputWithContext(context.Background())
}

func (i ElbSecurityPolicyListenerArray) ToElbSecurityPolicyListenerArrayOutputWithContext(ctx context.Context) ElbSecurityPolicyListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSecurityPolicyListenerArrayOutput)
}

type ElbSecurityPolicyListenerOutput struct{ *pulumi.OutputState }

func (ElbSecurityPolicyListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSecurityPolicyListener)(nil)).Elem()
}

func (o ElbSecurityPolicyListenerOutput) ToElbSecurityPolicyListenerOutput() ElbSecurityPolicyListenerOutput {
	return o
}

func (o ElbSecurityPolicyListenerOutput) ToElbSecurityPolicyListenerOutputWithContext(ctx context.Context) ElbSecurityPolicyListenerOutput {
	return o
}

func (o ElbSecurityPolicyListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSecurityPolicyListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ElbSecurityPolicyListenerArrayOutput struct{ *pulumi.OutputState }

func (ElbSecurityPolicyListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSecurityPolicyListener)(nil)).Elem()
}

func (o ElbSecurityPolicyListenerArrayOutput) ToElbSecurityPolicyListenerArrayOutput() ElbSecurityPolicyListenerArrayOutput {
	return o
}

func (o ElbSecurityPolicyListenerArrayOutput) ToElbSecurityPolicyListenerArrayOutputWithContext(ctx context.Context) ElbSecurityPolicyListenerArrayOutput {
	return o
}

func (o ElbSecurityPolicyListenerArrayOutput) Index(i pulumi.IntInput) ElbSecurityPolicyListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSecurityPolicyListener {
		return vs[0].([]ElbSecurityPolicyListener)[vs[1].(int)]
	}).(ElbSecurityPolicyListenerOutput)
}

type EvsVolumeAttachment struct {
	Device     *string `pulumi:"device"`
	Id         *string `pulumi:"id"`
	InstanceId *string `pulumi:"instanceId"`
}

// EvsVolumeAttachmentInput is an input type that accepts EvsVolumeAttachmentArgs and EvsVolumeAttachmentOutput values.
// You can construct a concrete instance of `EvsVolumeAttachmentInput` via:
//
//	EvsVolumeAttachmentArgs{...}
type EvsVolumeAttachmentInput interface {
	pulumi.Input

	ToEvsVolumeAttachmentOutput() EvsVolumeAttachmentOutput
	ToEvsVolumeAttachmentOutputWithContext(context.Context) EvsVolumeAttachmentOutput
}

type EvsVolumeAttachmentArgs struct {
	Device     pulumi.StringPtrInput `pulumi:"device"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
}

func (EvsVolumeAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvsVolumeAttachment)(nil)).Elem()
}

func (i EvsVolumeAttachmentArgs) ToEvsVolumeAttachmentOutput() EvsVolumeAttachmentOutput {
	return i.ToEvsVolumeAttachmentOutputWithContext(context.Background())
}

func (i EvsVolumeAttachmentArgs) ToEvsVolumeAttachmentOutputWithContext(ctx context.Context) EvsVolumeAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvsVolumeAttachmentOutput)
}

// EvsVolumeAttachmentArrayInput is an input type that accepts EvsVolumeAttachmentArray and EvsVolumeAttachmentArrayOutput values.
// You can construct a concrete instance of `EvsVolumeAttachmentArrayInput` via:
//
//	EvsVolumeAttachmentArray{ EvsVolumeAttachmentArgs{...} }
type EvsVolumeAttachmentArrayInput interface {
	pulumi.Input

	ToEvsVolumeAttachmentArrayOutput() EvsVolumeAttachmentArrayOutput
	ToEvsVolumeAttachmentArrayOutputWithContext(context.Context) EvsVolumeAttachmentArrayOutput
}

type EvsVolumeAttachmentArray []EvsVolumeAttachmentInput

func (EvsVolumeAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvsVolumeAttachment)(nil)).Elem()
}

func (i EvsVolumeAttachmentArray) ToEvsVolumeAttachmentArrayOutput() EvsVolumeAttachmentArrayOutput {
	return i.ToEvsVolumeAttachmentArrayOutputWithContext(context.Background())
}

func (i EvsVolumeAttachmentArray) ToEvsVolumeAttachmentArrayOutputWithContext(ctx context.Context) EvsVolumeAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvsVolumeAttachmentArrayOutput)
}

type EvsVolumeAttachmentOutput struct{ *pulumi.OutputState }

func (EvsVolumeAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvsVolumeAttachment)(nil)).Elem()
}

func (o EvsVolumeAttachmentOutput) ToEvsVolumeAttachmentOutput() EvsVolumeAttachmentOutput {
	return o
}

func (o EvsVolumeAttachmentOutput) ToEvsVolumeAttachmentOutputWithContext(ctx context.Context) EvsVolumeAttachmentOutput {
	return o
}

func (o EvsVolumeAttachmentOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvsVolumeAttachment) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeAttachmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvsVolumeAttachment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeAttachmentOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvsVolumeAttachment) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

type EvsVolumeAttachmentArrayOutput struct{ *pulumi.OutputState }

func (EvsVolumeAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvsVolumeAttachment)(nil)).Elem()
}

func (o EvsVolumeAttachmentArrayOutput) ToEvsVolumeAttachmentArrayOutput() EvsVolumeAttachmentArrayOutput {
	return o
}

func (o EvsVolumeAttachmentArrayOutput) ToEvsVolumeAttachmentArrayOutputWithContext(ctx context.Context) EvsVolumeAttachmentArrayOutput {
	return o
}

func (o EvsVolumeAttachmentArrayOutput) Index(i pulumi.IntInput) EvsVolumeAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvsVolumeAttachment {
		return vs[0].([]EvsVolumeAttachment)[vs[1].(int)]
	}).(EvsVolumeAttachmentOutput)
}

type FgsFunctionCustomImage struct {
	// The command line arguments used to start the SWR image.
	Args *string `pulumi:"args"`
	// The startup commands of the SWR image.
	Command *string `pulumi:"command"`
	// The URL of SWR image.
	Url string `pulumi:"url"`
	// The user group ID that used to run SWR image.
	UserGroupId *string `pulumi:"userGroupId"`
	// The user ID that used to run SWR image.
	UserId *string `pulumi:"userId"`
	// The working directory of the SWR image.
	WorkingDir *string `pulumi:"workingDir"`
}

// FgsFunctionCustomImageInput is an input type that accepts FgsFunctionCustomImageArgs and FgsFunctionCustomImageOutput values.
// You can construct a concrete instance of `FgsFunctionCustomImageInput` via:
//
//	FgsFunctionCustomImageArgs{...}
type FgsFunctionCustomImageInput interface {
	pulumi.Input

	ToFgsFunctionCustomImageOutput() FgsFunctionCustomImageOutput
	ToFgsFunctionCustomImageOutputWithContext(context.Context) FgsFunctionCustomImageOutput
}

type FgsFunctionCustomImageArgs struct {
	// The command line arguments used to start the SWR image.
	Args pulumi.StringPtrInput `pulumi:"args"`
	// The startup commands of the SWR image.
	Command pulumi.StringPtrInput `pulumi:"command"`
	// The URL of SWR image.
	Url pulumi.StringInput `pulumi:"url"`
	// The user group ID that used to run SWR image.
	UserGroupId pulumi.StringPtrInput `pulumi:"userGroupId"`
	// The user ID that used to run SWR image.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// The working directory of the SWR image.
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (FgsFunctionCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionCustomImage)(nil)).Elem()
}

func (i FgsFunctionCustomImageArgs) ToFgsFunctionCustomImageOutput() FgsFunctionCustomImageOutput {
	return i.ToFgsFunctionCustomImageOutputWithContext(context.Background())
}

func (i FgsFunctionCustomImageArgs) ToFgsFunctionCustomImageOutputWithContext(ctx context.Context) FgsFunctionCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionCustomImageOutput)
}

func (i FgsFunctionCustomImageArgs) ToFgsFunctionCustomImagePtrOutput() FgsFunctionCustomImagePtrOutput {
	return i.ToFgsFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (i FgsFunctionCustomImageArgs) ToFgsFunctionCustomImagePtrOutputWithContext(ctx context.Context) FgsFunctionCustomImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionCustomImageOutput).ToFgsFunctionCustomImagePtrOutputWithContext(ctx)
}

// FgsFunctionCustomImagePtrInput is an input type that accepts FgsFunctionCustomImageArgs, FgsFunctionCustomImagePtr and FgsFunctionCustomImagePtrOutput values.
// You can construct a concrete instance of `FgsFunctionCustomImagePtrInput` via:
//
//	        FgsFunctionCustomImageArgs{...}
//
//	or:
//
//	        nil
type FgsFunctionCustomImagePtrInput interface {
	pulumi.Input

	ToFgsFunctionCustomImagePtrOutput() FgsFunctionCustomImagePtrOutput
	ToFgsFunctionCustomImagePtrOutputWithContext(context.Context) FgsFunctionCustomImagePtrOutput
}

type fgsFunctionCustomImagePtrType FgsFunctionCustomImageArgs

func FgsFunctionCustomImagePtr(v *FgsFunctionCustomImageArgs) FgsFunctionCustomImagePtrInput {
	return (*fgsFunctionCustomImagePtrType)(v)
}

func (*fgsFunctionCustomImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionCustomImage)(nil)).Elem()
}

func (i *fgsFunctionCustomImagePtrType) ToFgsFunctionCustomImagePtrOutput() FgsFunctionCustomImagePtrOutput {
	return i.ToFgsFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (i *fgsFunctionCustomImagePtrType) ToFgsFunctionCustomImagePtrOutputWithContext(ctx context.Context) FgsFunctionCustomImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionCustomImagePtrOutput)
}

type FgsFunctionCustomImageOutput struct{ *pulumi.OutputState }

func (FgsFunctionCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionCustomImage)(nil)).Elem()
}

func (o FgsFunctionCustomImageOutput) ToFgsFunctionCustomImageOutput() FgsFunctionCustomImageOutput {
	return o
}

func (o FgsFunctionCustomImageOutput) ToFgsFunctionCustomImageOutputWithContext(ctx context.Context) FgsFunctionCustomImageOutput {
	return o
}

func (o FgsFunctionCustomImageOutput) ToFgsFunctionCustomImagePtrOutput() FgsFunctionCustomImagePtrOutput {
	return o.ToFgsFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (o FgsFunctionCustomImageOutput) ToFgsFunctionCustomImagePtrOutputWithContext(ctx context.Context) FgsFunctionCustomImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FgsFunctionCustomImage) *FgsFunctionCustomImage {
		return &v
	}).(FgsFunctionCustomImagePtrOutput)
}

// The command line arguments used to start the SWR image.
func (o FgsFunctionCustomImageOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionCustomImage) *string { return v.Args }).(pulumi.StringPtrOutput)
}

// The startup commands of the SWR image.
func (o FgsFunctionCustomImageOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionCustomImage) *string { return v.Command }).(pulumi.StringPtrOutput)
}

// The URL of SWR image.
func (o FgsFunctionCustomImageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionCustomImage) string { return v.Url }).(pulumi.StringOutput)
}

// The user group ID that used to run SWR image.
func (o FgsFunctionCustomImageOutput) UserGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionCustomImage) *string { return v.UserGroupId }).(pulumi.StringPtrOutput)
}

// The user ID that used to run SWR image.
func (o FgsFunctionCustomImageOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionCustomImage) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// The working directory of the SWR image.
func (o FgsFunctionCustomImageOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionCustomImage) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type FgsFunctionCustomImagePtrOutput struct{ *pulumi.OutputState }

func (FgsFunctionCustomImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionCustomImage)(nil)).Elem()
}

func (o FgsFunctionCustomImagePtrOutput) ToFgsFunctionCustomImagePtrOutput() FgsFunctionCustomImagePtrOutput {
	return o
}

func (o FgsFunctionCustomImagePtrOutput) ToFgsFunctionCustomImagePtrOutputWithContext(ctx context.Context) FgsFunctionCustomImagePtrOutput {
	return o
}

func (o FgsFunctionCustomImagePtrOutput) Elem() FgsFunctionCustomImageOutput {
	return o.ApplyT(func(v *FgsFunctionCustomImage) FgsFunctionCustomImage {
		if v != nil {
			return *v
		}
		var ret FgsFunctionCustomImage
		return ret
	}).(FgsFunctionCustomImageOutput)
}

// The command line arguments used to start the SWR image.
func (o FgsFunctionCustomImagePtrOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringPtrOutput)
}

// The startup commands of the SWR image.
func (o FgsFunctionCustomImagePtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringPtrOutput)
}

// The URL of SWR image.
func (o FgsFunctionCustomImagePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The user group ID that used to run SWR image.
func (o FgsFunctionCustomImagePtrOutput) UserGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.UserGroupId
	}).(pulumi.StringPtrOutput)
}

// The user ID that used to run SWR image.
func (o FgsFunctionCustomImagePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// The working directory of the SWR image.
func (o FgsFunctionCustomImagePtrOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDir
	}).(pulumi.StringPtrOutput)
}

type FgsFunctionFuncMount struct {
	// The function access path.
	LocalMountPath string `pulumi:"localMountPath"`
	// The ID of the mounted resource (corresponding cloud service).
	MountResource string `pulumi:"mountResource"`
	// The remote mount path.
	MountSharePath string `pulumi:"mountSharePath"`
	// The mount type.
	MountType string `pulumi:"mountType"`
	// The mount status.
	Status *string `pulumi:"status"`
}

// FgsFunctionFuncMountInput is an input type that accepts FgsFunctionFuncMountArgs and FgsFunctionFuncMountOutput values.
// You can construct a concrete instance of `FgsFunctionFuncMountInput` via:
//
//	FgsFunctionFuncMountArgs{...}
type FgsFunctionFuncMountInput interface {
	pulumi.Input

	ToFgsFunctionFuncMountOutput() FgsFunctionFuncMountOutput
	ToFgsFunctionFuncMountOutputWithContext(context.Context) FgsFunctionFuncMountOutput
}

type FgsFunctionFuncMountArgs struct {
	// The function access path.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// The ID of the mounted resource (corresponding cloud service).
	MountResource pulumi.StringInput `pulumi:"mountResource"`
	// The remote mount path.
	MountSharePath pulumi.StringInput `pulumi:"mountSharePath"`
	// The mount type.
	MountType pulumi.StringInput `pulumi:"mountType"`
	// The mount status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (FgsFunctionFuncMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionFuncMount)(nil)).Elem()
}

func (i FgsFunctionFuncMountArgs) ToFgsFunctionFuncMountOutput() FgsFunctionFuncMountOutput {
	return i.ToFgsFunctionFuncMountOutputWithContext(context.Background())
}

func (i FgsFunctionFuncMountArgs) ToFgsFunctionFuncMountOutputWithContext(ctx context.Context) FgsFunctionFuncMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionFuncMountOutput)
}

// FgsFunctionFuncMountArrayInput is an input type that accepts FgsFunctionFuncMountArray and FgsFunctionFuncMountArrayOutput values.
// You can construct a concrete instance of `FgsFunctionFuncMountArrayInput` via:
//
//	FgsFunctionFuncMountArray{ FgsFunctionFuncMountArgs{...} }
type FgsFunctionFuncMountArrayInput interface {
	pulumi.Input

	ToFgsFunctionFuncMountArrayOutput() FgsFunctionFuncMountArrayOutput
	ToFgsFunctionFuncMountArrayOutputWithContext(context.Context) FgsFunctionFuncMountArrayOutput
}

type FgsFunctionFuncMountArray []FgsFunctionFuncMountInput

func (FgsFunctionFuncMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionFuncMount)(nil)).Elem()
}

func (i FgsFunctionFuncMountArray) ToFgsFunctionFuncMountArrayOutput() FgsFunctionFuncMountArrayOutput {
	return i.ToFgsFunctionFuncMountArrayOutputWithContext(context.Background())
}

func (i FgsFunctionFuncMountArray) ToFgsFunctionFuncMountArrayOutputWithContext(ctx context.Context) FgsFunctionFuncMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionFuncMountArrayOutput)
}

type FgsFunctionFuncMountOutput struct{ *pulumi.OutputState }

func (FgsFunctionFuncMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionFuncMount)(nil)).Elem()
}

func (o FgsFunctionFuncMountOutput) ToFgsFunctionFuncMountOutput() FgsFunctionFuncMountOutput {
	return o
}

func (o FgsFunctionFuncMountOutput) ToFgsFunctionFuncMountOutputWithContext(ctx context.Context) FgsFunctionFuncMountOutput {
	return o
}

// The function access path.
func (o FgsFunctionFuncMountOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionFuncMount) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// The ID of the mounted resource (corresponding cloud service).
func (o FgsFunctionFuncMountOutput) MountResource() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionFuncMount) string { return v.MountResource }).(pulumi.StringOutput)
}

// The remote mount path.
func (o FgsFunctionFuncMountOutput) MountSharePath() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionFuncMount) string { return v.MountSharePath }).(pulumi.StringOutput)
}

// The mount type.
func (o FgsFunctionFuncMountOutput) MountType() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionFuncMount) string { return v.MountType }).(pulumi.StringOutput)
}

// The mount status.
func (o FgsFunctionFuncMountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionFuncMount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FgsFunctionFuncMountArrayOutput struct{ *pulumi.OutputState }

func (FgsFunctionFuncMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionFuncMount)(nil)).Elem()
}

func (o FgsFunctionFuncMountArrayOutput) ToFgsFunctionFuncMountArrayOutput() FgsFunctionFuncMountArrayOutput {
	return o
}

func (o FgsFunctionFuncMountArrayOutput) ToFgsFunctionFuncMountArrayOutputWithContext(ctx context.Context) FgsFunctionFuncMountArrayOutput {
	return o
}

func (o FgsFunctionFuncMountArrayOutput) Index(i pulumi.IntInput) FgsFunctionFuncMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FgsFunctionFuncMount {
		return vs[0].([]FgsFunctionFuncMount)[vs[1].(int)]
	}).(FgsFunctionFuncMountOutput)
}

type FgsFunctionNetworkController struct {
	// Whether to disable the public network access.
	DisablePublicNetwork *bool `pulumi:"disablePublicNetwork"`
	// The configuration of the VPCs that can trigger the function.
	TriggerAccessVpcs []FgsFunctionNetworkControllerTriggerAccessVpc `pulumi:"triggerAccessVpcs"`
}

// FgsFunctionNetworkControllerInput is an input type that accepts FgsFunctionNetworkControllerArgs and FgsFunctionNetworkControllerOutput values.
// You can construct a concrete instance of `FgsFunctionNetworkControllerInput` via:
//
//	FgsFunctionNetworkControllerArgs{...}
type FgsFunctionNetworkControllerInput interface {
	pulumi.Input

	ToFgsFunctionNetworkControllerOutput() FgsFunctionNetworkControllerOutput
	ToFgsFunctionNetworkControllerOutputWithContext(context.Context) FgsFunctionNetworkControllerOutput
}

type FgsFunctionNetworkControllerArgs struct {
	// Whether to disable the public network access.
	DisablePublicNetwork pulumi.BoolPtrInput `pulumi:"disablePublicNetwork"`
	// The configuration of the VPCs that can trigger the function.
	TriggerAccessVpcs FgsFunctionNetworkControllerTriggerAccessVpcArrayInput `pulumi:"triggerAccessVpcs"`
}

func (FgsFunctionNetworkControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionNetworkController)(nil)).Elem()
}

func (i FgsFunctionNetworkControllerArgs) ToFgsFunctionNetworkControllerOutput() FgsFunctionNetworkControllerOutput {
	return i.ToFgsFunctionNetworkControllerOutputWithContext(context.Background())
}

func (i FgsFunctionNetworkControllerArgs) ToFgsFunctionNetworkControllerOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionNetworkControllerOutput)
}

func (i FgsFunctionNetworkControllerArgs) ToFgsFunctionNetworkControllerPtrOutput() FgsFunctionNetworkControllerPtrOutput {
	return i.ToFgsFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (i FgsFunctionNetworkControllerArgs) ToFgsFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionNetworkControllerOutput).ToFgsFunctionNetworkControllerPtrOutputWithContext(ctx)
}

// FgsFunctionNetworkControllerPtrInput is an input type that accepts FgsFunctionNetworkControllerArgs, FgsFunctionNetworkControllerPtr and FgsFunctionNetworkControllerPtrOutput values.
// You can construct a concrete instance of `FgsFunctionNetworkControllerPtrInput` via:
//
//	        FgsFunctionNetworkControllerArgs{...}
//
//	or:
//
//	        nil
type FgsFunctionNetworkControllerPtrInput interface {
	pulumi.Input

	ToFgsFunctionNetworkControllerPtrOutput() FgsFunctionNetworkControllerPtrOutput
	ToFgsFunctionNetworkControllerPtrOutputWithContext(context.Context) FgsFunctionNetworkControllerPtrOutput
}

type fgsFunctionNetworkControllerPtrType FgsFunctionNetworkControllerArgs

func FgsFunctionNetworkControllerPtr(v *FgsFunctionNetworkControllerArgs) FgsFunctionNetworkControllerPtrInput {
	return (*fgsFunctionNetworkControllerPtrType)(v)
}

func (*fgsFunctionNetworkControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionNetworkController)(nil)).Elem()
}

func (i *fgsFunctionNetworkControllerPtrType) ToFgsFunctionNetworkControllerPtrOutput() FgsFunctionNetworkControllerPtrOutput {
	return i.ToFgsFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (i *fgsFunctionNetworkControllerPtrType) ToFgsFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionNetworkControllerPtrOutput)
}

type FgsFunctionNetworkControllerOutput struct{ *pulumi.OutputState }

func (FgsFunctionNetworkControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionNetworkController)(nil)).Elem()
}

func (o FgsFunctionNetworkControllerOutput) ToFgsFunctionNetworkControllerOutput() FgsFunctionNetworkControllerOutput {
	return o
}

func (o FgsFunctionNetworkControllerOutput) ToFgsFunctionNetworkControllerOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerOutput {
	return o
}

func (o FgsFunctionNetworkControllerOutput) ToFgsFunctionNetworkControllerPtrOutput() FgsFunctionNetworkControllerPtrOutput {
	return o.ToFgsFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (o FgsFunctionNetworkControllerOutput) ToFgsFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FgsFunctionNetworkController) *FgsFunctionNetworkController {
		return &v
	}).(FgsFunctionNetworkControllerPtrOutput)
}

// Whether to disable the public network access.
func (o FgsFunctionNetworkControllerOutput) DisablePublicNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FgsFunctionNetworkController) *bool { return v.DisablePublicNetwork }).(pulumi.BoolPtrOutput)
}

// The configuration of the VPCs that can trigger the function.
func (o FgsFunctionNetworkControllerOutput) TriggerAccessVpcs() FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o.ApplyT(func(v FgsFunctionNetworkController) []FgsFunctionNetworkControllerTriggerAccessVpc {
		return v.TriggerAccessVpcs
	}).(FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FgsFunctionNetworkControllerPtrOutput struct{ *pulumi.OutputState }

func (FgsFunctionNetworkControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionNetworkController)(nil)).Elem()
}

func (o FgsFunctionNetworkControllerPtrOutput) ToFgsFunctionNetworkControllerPtrOutput() FgsFunctionNetworkControllerPtrOutput {
	return o
}

func (o FgsFunctionNetworkControllerPtrOutput) ToFgsFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerPtrOutput {
	return o
}

func (o FgsFunctionNetworkControllerPtrOutput) Elem() FgsFunctionNetworkControllerOutput {
	return o.ApplyT(func(v *FgsFunctionNetworkController) FgsFunctionNetworkController {
		if v != nil {
			return *v
		}
		var ret FgsFunctionNetworkController
		return ret
	}).(FgsFunctionNetworkControllerOutput)
}

// Whether to disable the public network access.
func (o FgsFunctionNetworkControllerPtrOutput) DisablePublicNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FgsFunctionNetworkController) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePublicNetwork
	}).(pulumi.BoolPtrOutput)
}

// The configuration of the VPCs that can trigger the function.
func (o FgsFunctionNetworkControllerPtrOutput) TriggerAccessVpcs() FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o.ApplyT(func(v *FgsFunctionNetworkController) []FgsFunctionNetworkControllerTriggerAccessVpc {
		if v == nil {
			return nil
		}
		return v.TriggerAccessVpcs
	}).(FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FgsFunctionNetworkControllerTriggerAccessVpc struct {
	// The ID of the VPC that can trigger the function.
	VpcId string `pulumi:"vpcId"`
}

// FgsFunctionNetworkControllerTriggerAccessVpcInput is an input type that accepts FgsFunctionNetworkControllerTriggerAccessVpcArgs and FgsFunctionNetworkControllerTriggerAccessVpcOutput values.
// You can construct a concrete instance of `FgsFunctionNetworkControllerTriggerAccessVpcInput` via:
//
//	FgsFunctionNetworkControllerTriggerAccessVpcArgs{...}
type FgsFunctionNetworkControllerTriggerAccessVpcInput interface {
	pulumi.Input

	ToFgsFunctionNetworkControllerTriggerAccessVpcOutput() FgsFunctionNetworkControllerTriggerAccessVpcOutput
	ToFgsFunctionNetworkControllerTriggerAccessVpcOutputWithContext(context.Context) FgsFunctionNetworkControllerTriggerAccessVpcOutput
}

type FgsFunctionNetworkControllerTriggerAccessVpcArgs struct {
	// The ID of the VPC that can trigger the function.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (FgsFunctionNetworkControllerTriggerAccessVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (i FgsFunctionNetworkControllerTriggerAccessVpcArgs) ToFgsFunctionNetworkControllerTriggerAccessVpcOutput() FgsFunctionNetworkControllerTriggerAccessVpcOutput {
	return i.ToFgsFunctionNetworkControllerTriggerAccessVpcOutputWithContext(context.Background())
}

func (i FgsFunctionNetworkControllerTriggerAccessVpcArgs) ToFgsFunctionNetworkControllerTriggerAccessVpcOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerTriggerAccessVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionNetworkControllerTriggerAccessVpcOutput)
}

// FgsFunctionNetworkControllerTriggerAccessVpcArrayInput is an input type that accepts FgsFunctionNetworkControllerTriggerAccessVpcArray and FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput values.
// You can construct a concrete instance of `FgsFunctionNetworkControllerTriggerAccessVpcArrayInput` via:
//
//	FgsFunctionNetworkControllerTriggerAccessVpcArray{ FgsFunctionNetworkControllerTriggerAccessVpcArgs{...} }
type FgsFunctionNetworkControllerTriggerAccessVpcArrayInput interface {
	pulumi.Input

	ToFgsFunctionNetworkControllerTriggerAccessVpcArrayOutput() FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput
	ToFgsFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(context.Context) FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput
}

type FgsFunctionNetworkControllerTriggerAccessVpcArray []FgsFunctionNetworkControllerTriggerAccessVpcInput

func (FgsFunctionNetworkControllerTriggerAccessVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (i FgsFunctionNetworkControllerTriggerAccessVpcArray) ToFgsFunctionNetworkControllerTriggerAccessVpcArrayOutput() FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return i.ToFgsFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(context.Background())
}

func (i FgsFunctionNetworkControllerTriggerAccessVpcArray) ToFgsFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FgsFunctionNetworkControllerTriggerAccessVpcOutput struct{ *pulumi.OutputState }

func (FgsFunctionNetworkControllerTriggerAccessVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (o FgsFunctionNetworkControllerTriggerAccessVpcOutput) ToFgsFunctionNetworkControllerTriggerAccessVpcOutput() FgsFunctionNetworkControllerTriggerAccessVpcOutput {
	return o
}

func (o FgsFunctionNetworkControllerTriggerAccessVpcOutput) ToFgsFunctionNetworkControllerTriggerAccessVpcOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerTriggerAccessVpcOutput {
	return o
}

// The ID of the VPC that can trigger the function.
func (o FgsFunctionNetworkControllerTriggerAccessVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionNetworkControllerTriggerAccessVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

type FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput struct{ *pulumi.OutputState }

func (FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (o FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput) ToFgsFunctionNetworkControllerTriggerAccessVpcArrayOutput() FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o
}

func (o FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput) ToFgsFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(ctx context.Context) FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o
}

func (o FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput) Index(i pulumi.IntInput) FgsFunctionNetworkControllerTriggerAccessVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FgsFunctionNetworkControllerTriggerAccessVpc {
		return vs[0].([]FgsFunctionNetworkControllerTriggerAccessVpc)[vs[1].(int)]
	}).(FgsFunctionNetworkControllerTriggerAccessVpcOutput)
}

type FgsFunctionReservedInstance struct {
	// The number of reserved instance.
	Count int `pulumi:"count"`
	// Whether to enable the idle mode.
	IdleMode *bool `pulumi:"idleMode"`
	// The version name or alias name.
	QualifierName string `pulumi:"qualifierName"`
	// The qualifier type of reserved instance.
	QualifierType string `pulumi:"qualifierType"`
	// The auto scaling policies for reserved instance.
	TacticsConfig *FgsFunctionReservedInstanceTacticsConfig `pulumi:"tacticsConfig"`
}

// FgsFunctionReservedInstanceInput is an input type that accepts FgsFunctionReservedInstanceArgs and FgsFunctionReservedInstanceOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceInput` via:
//
//	FgsFunctionReservedInstanceArgs{...}
type FgsFunctionReservedInstanceInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceOutput() FgsFunctionReservedInstanceOutput
	ToFgsFunctionReservedInstanceOutputWithContext(context.Context) FgsFunctionReservedInstanceOutput
}

type FgsFunctionReservedInstanceArgs struct {
	// The number of reserved instance.
	Count pulumi.IntInput `pulumi:"count"`
	// Whether to enable the idle mode.
	IdleMode pulumi.BoolPtrInput `pulumi:"idleMode"`
	// The version name or alias name.
	QualifierName pulumi.StringInput `pulumi:"qualifierName"`
	// The qualifier type of reserved instance.
	QualifierType pulumi.StringInput `pulumi:"qualifierType"`
	// The auto scaling policies for reserved instance.
	TacticsConfig FgsFunctionReservedInstanceTacticsConfigPtrInput `pulumi:"tacticsConfig"`
}

func (FgsFunctionReservedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstance)(nil)).Elem()
}

func (i FgsFunctionReservedInstanceArgs) ToFgsFunctionReservedInstanceOutput() FgsFunctionReservedInstanceOutput {
	return i.ToFgsFunctionReservedInstanceOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceArgs) ToFgsFunctionReservedInstanceOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceOutput)
}

// FgsFunctionReservedInstanceArrayInput is an input type that accepts FgsFunctionReservedInstanceArray and FgsFunctionReservedInstanceArrayOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceArrayInput` via:
//
//	FgsFunctionReservedInstanceArray{ FgsFunctionReservedInstanceArgs{...} }
type FgsFunctionReservedInstanceArrayInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceArrayOutput() FgsFunctionReservedInstanceArrayOutput
	ToFgsFunctionReservedInstanceArrayOutputWithContext(context.Context) FgsFunctionReservedInstanceArrayOutput
}

type FgsFunctionReservedInstanceArray []FgsFunctionReservedInstanceInput

func (FgsFunctionReservedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionReservedInstance)(nil)).Elem()
}

func (i FgsFunctionReservedInstanceArray) ToFgsFunctionReservedInstanceArrayOutput() FgsFunctionReservedInstanceArrayOutput {
	return i.ToFgsFunctionReservedInstanceArrayOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceArray) ToFgsFunctionReservedInstanceArrayOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceArrayOutput)
}

type FgsFunctionReservedInstanceOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstance)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceOutput) ToFgsFunctionReservedInstanceOutput() FgsFunctionReservedInstanceOutput {
	return o
}

func (o FgsFunctionReservedInstanceOutput) ToFgsFunctionReservedInstanceOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceOutput {
	return o
}

// The number of reserved instance.
func (o FgsFunctionReservedInstanceOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstance) int { return v.Count }).(pulumi.IntOutput)
}

// Whether to enable the idle mode.
func (o FgsFunctionReservedInstanceOutput) IdleMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstance) *bool { return v.IdleMode }).(pulumi.BoolPtrOutput)
}

// The version name or alias name.
func (o FgsFunctionReservedInstanceOutput) QualifierName() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstance) string { return v.QualifierName }).(pulumi.StringOutput)
}

// The qualifier type of reserved instance.
func (o FgsFunctionReservedInstanceOutput) QualifierType() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstance) string { return v.QualifierType }).(pulumi.StringOutput)
}

// The auto scaling policies for reserved instance.
func (o FgsFunctionReservedInstanceOutput) TacticsConfig() FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstance) *FgsFunctionReservedInstanceTacticsConfig { return v.TacticsConfig }).(FgsFunctionReservedInstanceTacticsConfigPtrOutput)
}

type FgsFunctionReservedInstanceArrayOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionReservedInstance)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceArrayOutput) ToFgsFunctionReservedInstanceArrayOutput() FgsFunctionReservedInstanceArrayOutput {
	return o
}

func (o FgsFunctionReservedInstanceArrayOutput) ToFgsFunctionReservedInstanceArrayOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceArrayOutput {
	return o
}

func (o FgsFunctionReservedInstanceArrayOutput) Index(i pulumi.IntInput) FgsFunctionReservedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FgsFunctionReservedInstance {
		return vs[0].([]FgsFunctionReservedInstance)[vs[1].(int)]
	}).(FgsFunctionReservedInstanceOutput)
}

type FgsFunctionReservedInstanceTacticsConfig struct {
	// The list of scheduled policy configurations.
	CronConfigs []FgsFunctionReservedInstanceTacticsConfigCronConfig `pulumi:"cronConfigs"`
	// The list of metric policy configurations.
	MetricConfigs []FgsFunctionReservedInstanceTacticsConfigMetricConfig `pulumi:"metricConfigs"`
}

// FgsFunctionReservedInstanceTacticsConfigInput is an input type that accepts FgsFunctionReservedInstanceTacticsConfigArgs and FgsFunctionReservedInstanceTacticsConfigOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceTacticsConfigInput` via:
//
//	FgsFunctionReservedInstanceTacticsConfigArgs{...}
type FgsFunctionReservedInstanceTacticsConfigInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceTacticsConfigOutput() FgsFunctionReservedInstanceTacticsConfigOutput
	ToFgsFunctionReservedInstanceTacticsConfigOutputWithContext(context.Context) FgsFunctionReservedInstanceTacticsConfigOutput
}

type FgsFunctionReservedInstanceTacticsConfigArgs struct {
	// The list of scheduled policy configurations.
	CronConfigs FgsFunctionReservedInstanceTacticsConfigCronConfigArrayInput `pulumi:"cronConfigs"`
	// The list of metric policy configurations.
	MetricConfigs FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayInput `pulumi:"metricConfigs"`
}

func (FgsFunctionReservedInstanceTacticsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (i FgsFunctionReservedInstanceTacticsConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigOutput() FgsFunctionReservedInstanceTacticsConfigOutput {
	return i.ToFgsFunctionReservedInstanceTacticsConfigOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceTacticsConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceTacticsConfigOutput)
}

func (i FgsFunctionReservedInstanceTacticsConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigPtrOutput() FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return i.ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceTacticsConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceTacticsConfigOutput).ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx)
}

// FgsFunctionReservedInstanceTacticsConfigPtrInput is an input type that accepts FgsFunctionReservedInstanceTacticsConfigArgs, FgsFunctionReservedInstanceTacticsConfigPtr and FgsFunctionReservedInstanceTacticsConfigPtrOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceTacticsConfigPtrInput` via:
//
//	        FgsFunctionReservedInstanceTacticsConfigArgs{...}
//
//	or:
//
//	        nil
type FgsFunctionReservedInstanceTacticsConfigPtrInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceTacticsConfigPtrOutput() FgsFunctionReservedInstanceTacticsConfigPtrOutput
	ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Context) FgsFunctionReservedInstanceTacticsConfigPtrOutput
}

type fgsFunctionReservedInstanceTacticsConfigPtrType FgsFunctionReservedInstanceTacticsConfigArgs

func FgsFunctionReservedInstanceTacticsConfigPtr(v *FgsFunctionReservedInstanceTacticsConfigArgs) FgsFunctionReservedInstanceTacticsConfigPtrInput {
	return (*fgsFunctionReservedInstanceTacticsConfigPtrType)(v)
}

func (*fgsFunctionReservedInstanceTacticsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (i *fgsFunctionReservedInstanceTacticsConfigPtrType) ToFgsFunctionReservedInstanceTacticsConfigPtrOutput() FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return i.ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (i *fgsFunctionReservedInstanceTacticsConfigPtrType) ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceTacticsConfigPtrOutput)
}

type FgsFunctionReservedInstanceTacticsConfigOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceTacticsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceTacticsConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigOutput() FgsFunctionReservedInstanceTacticsConfigOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigPtrOutput() FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (o FgsFunctionReservedInstanceTacticsConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FgsFunctionReservedInstanceTacticsConfig) *FgsFunctionReservedInstanceTacticsConfig {
		return &v
	}).(FgsFunctionReservedInstanceTacticsConfigPtrOutput)
}

// The list of scheduled policy configurations.
func (o FgsFunctionReservedInstanceTacticsConfigOutput) CronConfigs() FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfig) []FgsFunctionReservedInstanceTacticsConfigCronConfig {
		return v.CronConfigs
	}).(FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

// The list of metric policy configurations.
func (o FgsFunctionReservedInstanceTacticsConfigOutput) MetricConfigs() FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfig) []FgsFunctionReservedInstanceTacticsConfigMetricConfig {
		return v.MetricConfigs
	}).(FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FgsFunctionReservedInstanceTacticsConfigPtrOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceTacticsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceTacticsConfigPtrOutput) ToFgsFunctionReservedInstanceTacticsConfigPtrOutput() FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigPtrOutput) ToFgsFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigPtrOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigPtrOutput) Elem() FgsFunctionReservedInstanceTacticsConfigOutput {
	return o.ApplyT(func(v *FgsFunctionReservedInstanceTacticsConfig) FgsFunctionReservedInstanceTacticsConfig {
		if v != nil {
			return *v
		}
		var ret FgsFunctionReservedInstanceTacticsConfig
		return ret
	}).(FgsFunctionReservedInstanceTacticsConfigOutput)
}

// The list of scheduled policy configurations.
func (o FgsFunctionReservedInstanceTacticsConfigPtrOutput) CronConfigs() FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o.ApplyT(func(v *FgsFunctionReservedInstanceTacticsConfig) []FgsFunctionReservedInstanceTacticsConfigCronConfig {
		if v == nil {
			return nil
		}
		return v.CronConfigs
	}).(FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

// The list of metric policy configurations.
func (o FgsFunctionReservedInstanceTacticsConfigPtrOutput) MetricConfigs() FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o.ApplyT(func(v *FgsFunctionReservedInstanceTacticsConfig) []FgsFunctionReservedInstanceTacticsConfigMetricConfig {
		if v == nil {
			return nil
		}
		return v.MetricConfigs
	}).(FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FgsFunctionReservedInstanceTacticsConfigCronConfig struct {
	// The number of reserved instance to which the policy belongs.
	Count int `pulumi:"count"`
	// The cron expression.
	Cron string `pulumi:"cron"`
	// The expiration timestamp of the policy.
	ExpiredTime int `pulumi:"expiredTime"`
	// The name of scheduled policy configuration.
	Name string `pulumi:"name"`
	// The effective timestamp of policy.
	StartTime int `pulumi:"startTime"`
}

// FgsFunctionReservedInstanceTacticsConfigCronConfigInput is an input type that accepts FgsFunctionReservedInstanceTacticsConfigCronConfigArgs and FgsFunctionReservedInstanceTacticsConfigCronConfigOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceTacticsConfigCronConfigInput` via:
//
//	FgsFunctionReservedInstanceTacticsConfigCronConfigArgs{...}
type FgsFunctionReservedInstanceTacticsConfigCronConfigInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceTacticsConfigCronConfigOutput() FgsFunctionReservedInstanceTacticsConfigCronConfigOutput
	ToFgsFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(context.Context) FgsFunctionReservedInstanceTacticsConfigCronConfigOutput
}

type FgsFunctionReservedInstanceTacticsConfigCronConfigArgs struct {
	// The number of reserved instance to which the policy belongs.
	Count pulumi.IntInput `pulumi:"count"`
	// The cron expression.
	Cron pulumi.StringInput `pulumi:"cron"`
	// The expiration timestamp of the policy.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// The name of scheduled policy configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The effective timestamp of policy.
	StartTime pulumi.IntInput `pulumi:"startTime"`
}

func (FgsFunctionReservedInstanceTacticsConfigCronConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (i FgsFunctionReservedInstanceTacticsConfigCronConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigCronConfigOutput() FgsFunctionReservedInstanceTacticsConfigCronConfigOutput {
	return i.ToFgsFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceTacticsConfigCronConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigCronConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceTacticsConfigCronConfigOutput)
}

// FgsFunctionReservedInstanceTacticsConfigCronConfigArrayInput is an input type that accepts FgsFunctionReservedInstanceTacticsConfigCronConfigArray and FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceTacticsConfigCronConfigArrayInput` via:
//
//	FgsFunctionReservedInstanceTacticsConfigCronConfigArray{ FgsFunctionReservedInstanceTacticsConfigCronConfigArgs{...} }
type FgsFunctionReservedInstanceTacticsConfigCronConfigArrayInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput
	ToFgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(context.Context) FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput
}

type FgsFunctionReservedInstanceTacticsConfigCronConfigArray []FgsFunctionReservedInstanceTacticsConfigCronConfigInput

func (FgsFunctionReservedInstanceTacticsConfigCronConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (i FgsFunctionReservedInstanceTacticsConfigCronConfigArray) ToFgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return i.ToFgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceTacticsConfigCronConfigArray) ToFgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

type FgsFunctionReservedInstanceTacticsConfigCronConfigOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigCronConfigOutput() FgsFunctionReservedInstanceTacticsConfigCronConfigOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigCronConfigOutput {
	return o
}

// The number of reserved instance to which the policy belongs.
func (o FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigCronConfig) int { return v.Count }).(pulumi.IntOutput)
}

// The cron expression.
func (o FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigCronConfig) string { return v.Cron }).(pulumi.StringOutput)
}

// The expiration timestamp of the policy.
func (o FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigCronConfig) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// The name of scheduled policy configuration.
func (o FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigCronConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The effective timestamp of policy.
func (o FgsFunctionReservedInstanceTacticsConfigCronConfigOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigCronConfig) int { return v.StartTime }).(pulumi.IntOutput)
}

type FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ToFgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ToFgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput) Index(i pulumi.IntInput) FgsFunctionReservedInstanceTacticsConfigCronConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FgsFunctionReservedInstanceTacticsConfigCronConfig {
		return vs[0].([]FgsFunctionReservedInstanceTacticsConfigCronConfig)[vs[1].(int)]
	}).(FgsFunctionReservedInstanceTacticsConfigCronConfigOutput)
}

type FgsFunctionReservedInstanceTacticsConfigMetricConfig struct {
	// The minimun of traffic.
	Min int `pulumi:"min"`
	// The name of metric policy.
	Name string `pulumi:"name"`
	// The metric policy threshold.
	Threshold int `pulumi:"threshold"`
	// The type of metric policy.
	Type string `pulumi:"type"`
}

// FgsFunctionReservedInstanceTacticsConfigMetricConfigInput is an input type that accepts FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs and FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceTacticsConfigMetricConfigInput` via:
//
//	FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs{...}
type FgsFunctionReservedInstanceTacticsConfigMetricConfigInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceTacticsConfigMetricConfigOutput() FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput
	ToFgsFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(context.Context) FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput
}

type FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs struct {
	// The minimun of traffic.
	Min pulumi.IntInput `pulumi:"min"`
	// The name of metric policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The metric policy threshold.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// The type of metric policy.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (i FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigOutput() FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return i.ToFgsFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput)
}

// FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayInput is an input type that accepts FgsFunctionReservedInstanceTacticsConfigMetricConfigArray and FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput values.
// You can construct a concrete instance of `FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayInput` via:
//
//	FgsFunctionReservedInstanceTacticsConfigMetricConfigArray{ FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs{...} }
type FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayInput interface {
	pulumi.Input

	ToFgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput
	ToFgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(context.Context) FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput
}

type FgsFunctionReservedInstanceTacticsConfigMetricConfigArray []FgsFunctionReservedInstanceTacticsConfigMetricConfigInput

func (FgsFunctionReservedInstanceTacticsConfigMetricConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (i FgsFunctionReservedInstanceTacticsConfigMetricConfigArray) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return i.ToFgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(context.Background())
}

func (i FgsFunctionReservedInstanceTacticsConfigMetricConfigArray) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigOutput() FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return o
}

// The minimun of traffic.
func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigMetricConfig) int { return v.Min }).(pulumi.IntOutput)
}

// The name of metric policy.
func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigMetricConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The metric policy threshold.
func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigMetricConfig) int { return v.Threshold }).(pulumi.IntOutput)
}

// The type of metric policy.
func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionReservedInstanceTacticsConfigMetricConfig) string { return v.Type }).(pulumi.StringOutput)
}

type FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput struct{ *pulumi.OutputState }

func (FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ToFgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(ctx context.Context) FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o
}

func (o FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) Index(i pulumi.IntInput) FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FgsFunctionReservedInstanceTacticsConfigMetricConfig {
		return vs[0].([]FgsFunctionReservedInstanceTacticsConfigMetricConfig)[vs[1].(int)]
	}).(FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput)
}

type FgsFunctionVersion struct {
	// The aliases management for specified version.
	Aliases *FgsFunctionVersionAliases `pulumi:"aliases"`
	// The description of the version.
	Description *string `pulumi:"description"`
	// The version name.
	Name string `pulumi:"name"`
}

// FgsFunctionVersionInput is an input type that accepts FgsFunctionVersionArgs and FgsFunctionVersionOutput values.
// You can construct a concrete instance of `FgsFunctionVersionInput` via:
//
//	FgsFunctionVersionArgs{...}
type FgsFunctionVersionInput interface {
	pulumi.Input

	ToFgsFunctionVersionOutput() FgsFunctionVersionOutput
	ToFgsFunctionVersionOutputWithContext(context.Context) FgsFunctionVersionOutput
}

type FgsFunctionVersionArgs struct {
	// The aliases management for specified version.
	Aliases FgsFunctionVersionAliasesPtrInput `pulumi:"aliases"`
	// The description of the version.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The version name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FgsFunctionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionVersion)(nil)).Elem()
}

func (i FgsFunctionVersionArgs) ToFgsFunctionVersionOutput() FgsFunctionVersionOutput {
	return i.ToFgsFunctionVersionOutputWithContext(context.Background())
}

func (i FgsFunctionVersionArgs) ToFgsFunctionVersionOutputWithContext(ctx context.Context) FgsFunctionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionVersionOutput)
}

// FgsFunctionVersionArrayInput is an input type that accepts FgsFunctionVersionArray and FgsFunctionVersionArrayOutput values.
// You can construct a concrete instance of `FgsFunctionVersionArrayInput` via:
//
//	FgsFunctionVersionArray{ FgsFunctionVersionArgs{...} }
type FgsFunctionVersionArrayInput interface {
	pulumi.Input

	ToFgsFunctionVersionArrayOutput() FgsFunctionVersionArrayOutput
	ToFgsFunctionVersionArrayOutputWithContext(context.Context) FgsFunctionVersionArrayOutput
}

type FgsFunctionVersionArray []FgsFunctionVersionInput

func (FgsFunctionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionVersion)(nil)).Elem()
}

func (i FgsFunctionVersionArray) ToFgsFunctionVersionArrayOutput() FgsFunctionVersionArrayOutput {
	return i.ToFgsFunctionVersionArrayOutputWithContext(context.Background())
}

func (i FgsFunctionVersionArray) ToFgsFunctionVersionArrayOutputWithContext(ctx context.Context) FgsFunctionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionVersionArrayOutput)
}

type FgsFunctionVersionOutput struct{ *pulumi.OutputState }

func (FgsFunctionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionVersion)(nil)).Elem()
}

func (o FgsFunctionVersionOutput) ToFgsFunctionVersionOutput() FgsFunctionVersionOutput {
	return o
}

func (o FgsFunctionVersionOutput) ToFgsFunctionVersionOutputWithContext(ctx context.Context) FgsFunctionVersionOutput {
	return o
}

// The aliases management for specified version.
func (o FgsFunctionVersionOutput) Aliases() FgsFunctionVersionAliasesPtrOutput {
	return o.ApplyT(func(v FgsFunctionVersion) *FgsFunctionVersionAliases { return v.Aliases }).(FgsFunctionVersionAliasesPtrOutput)
}

// The description of the version.
func (o FgsFunctionVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The version name.
func (o FgsFunctionVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionVersion) string { return v.Name }).(pulumi.StringOutput)
}

type FgsFunctionVersionArrayOutput struct{ *pulumi.OutputState }

func (FgsFunctionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FgsFunctionVersion)(nil)).Elem()
}

func (o FgsFunctionVersionArrayOutput) ToFgsFunctionVersionArrayOutput() FgsFunctionVersionArrayOutput {
	return o
}

func (o FgsFunctionVersionArrayOutput) ToFgsFunctionVersionArrayOutputWithContext(ctx context.Context) FgsFunctionVersionArrayOutput {
	return o
}

func (o FgsFunctionVersionArrayOutput) Index(i pulumi.IntInput) FgsFunctionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FgsFunctionVersion {
		return vs[0].([]FgsFunctionVersion)[vs[1].(int)]
	}).(FgsFunctionVersionOutput)
}

type FgsFunctionVersionAliases struct {
	// The description of the version alias.
	AdditionalVersionStrategy *string `pulumi:"additionalVersionStrategy"`
	// The percentage grayscale configuration of the version alias.
	AdditionalVersionWeights *string `pulumi:"additionalVersionWeights"`
	// The description of the version alias.
	Description *string `pulumi:"description"`
	// The name of the version alias.
	Name string `pulumi:"name"`
}

// FgsFunctionVersionAliasesInput is an input type that accepts FgsFunctionVersionAliasesArgs and FgsFunctionVersionAliasesOutput values.
// You can construct a concrete instance of `FgsFunctionVersionAliasesInput` via:
//
//	FgsFunctionVersionAliasesArgs{...}
type FgsFunctionVersionAliasesInput interface {
	pulumi.Input

	ToFgsFunctionVersionAliasesOutput() FgsFunctionVersionAliasesOutput
	ToFgsFunctionVersionAliasesOutputWithContext(context.Context) FgsFunctionVersionAliasesOutput
}

type FgsFunctionVersionAliasesArgs struct {
	// The description of the version alias.
	AdditionalVersionStrategy pulumi.StringPtrInput `pulumi:"additionalVersionStrategy"`
	// The percentage grayscale configuration of the version alias.
	AdditionalVersionWeights pulumi.StringPtrInput `pulumi:"additionalVersionWeights"`
	// The description of the version alias.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the version alias.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FgsFunctionVersionAliasesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionVersionAliases)(nil)).Elem()
}

func (i FgsFunctionVersionAliasesArgs) ToFgsFunctionVersionAliasesOutput() FgsFunctionVersionAliasesOutput {
	return i.ToFgsFunctionVersionAliasesOutputWithContext(context.Background())
}

func (i FgsFunctionVersionAliasesArgs) ToFgsFunctionVersionAliasesOutputWithContext(ctx context.Context) FgsFunctionVersionAliasesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionVersionAliasesOutput)
}

func (i FgsFunctionVersionAliasesArgs) ToFgsFunctionVersionAliasesPtrOutput() FgsFunctionVersionAliasesPtrOutput {
	return i.ToFgsFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (i FgsFunctionVersionAliasesArgs) ToFgsFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FgsFunctionVersionAliasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionVersionAliasesOutput).ToFgsFunctionVersionAliasesPtrOutputWithContext(ctx)
}

// FgsFunctionVersionAliasesPtrInput is an input type that accepts FgsFunctionVersionAliasesArgs, FgsFunctionVersionAliasesPtr and FgsFunctionVersionAliasesPtrOutput values.
// You can construct a concrete instance of `FgsFunctionVersionAliasesPtrInput` via:
//
//	        FgsFunctionVersionAliasesArgs{...}
//
//	or:
//
//	        nil
type FgsFunctionVersionAliasesPtrInput interface {
	pulumi.Input

	ToFgsFunctionVersionAliasesPtrOutput() FgsFunctionVersionAliasesPtrOutput
	ToFgsFunctionVersionAliasesPtrOutputWithContext(context.Context) FgsFunctionVersionAliasesPtrOutput
}

type fgsFunctionVersionAliasesPtrType FgsFunctionVersionAliasesArgs

func FgsFunctionVersionAliasesPtr(v *FgsFunctionVersionAliasesArgs) FgsFunctionVersionAliasesPtrInput {
	return (*fgsFunctionVersionAliasesPtrType)(v)
}

func (*fgsFunctionVersionAliasesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionVersionAliases)(nil)).Elem()
}

func (i *fgsFunctionVersionAliasesPtrType) ToFgsFunctionVersionAliasesPtrOutput() FgsFunctionVersionAliasesPtrOutput {
	return i.ToFgsFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (i *fgsFunctionVersionAliasesPtrType) ToFgsFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FgsFunctionVersionAliasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsFunctionVersionAliasesPtrOutput)
}

type FgsFunctionVersionAliasesOutput struct{ *pulumi.OutputState }

func (FgsFunctionVersionAliasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FgsFunctionVersionAliases)(nil)).Elem()
}

func (o FgsFunctionVersionAliasesOutput) ToFgsFunctionVersionAliasesOutput() FgsFunctionVersionAliasesOutput {
	return o
}

func (o FgsFunctionVersionAliasesOutput) ToFgsFunctionVersionAliasesOutputWithContext(ctx context.Context) FgsFunctionVersionAliasesOutput {
	return o
}

func (o FgsFunctionVersionAliasesOutput) ToFgsFunctionVersionAliasesPtrOutput() FgsFunctionVersionAliasesPtrOutput {
	return o.ToFgsFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (o FgsFunctionVersionAliasesOutput) ToFgsFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FgsFunctionVersionAliasesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FgsFunctionVersionAliases) *FgsFunctionVersionAliases {
		return &v
	}).(FgsFunctionVersionAliasesPtrOutput)
}

// The description of the version alias.
func (o FgsFunctionVersionAliasesOutput) AdditionalVersionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionVersionAliases) *string { return v.AdditionalVersionStrategy }).(pulumi.StringPtrOutput)
}

// The percentage grayscale configuration of the version alias.
func (o FgsFunctionVersionAliasesOutput) AdditionalVersionWeights() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionVersionAliases) *string { return v.AdditionalVersionWeights }).(pulumi.StringPtrOutput)
}

// The description of the version alias.
func (o FgsFunctionVersionAliasesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FgsFunctionVersionAliases) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the version alias.
func (o FgsFunctionVersionAliasesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FgsFunctionVersionAliases) string { return v.Name }).(pulumi.StringOutput)
}

type FgsFunctionVersionAliasesPtrOutput struct{ *pulumi.OutputState }

func (FgsFunctionVersionAliasesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsFunctionVersionAliases)(nil)).Elem()
}

func (o FgsFunctionVersionAliasesPtrOutput) ToFgsFunctionVersionAliasesPtrOutput() FgsFunctionVersionAliasesPtrOutput {
	return o
}

func (o FgsFunctionVersionAliasesPtrOutput) ToFgsFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FgsFunctionVersionAliasesPtrOutput {
	return o
}

func (o FgsFunctionVersionAliasesPtrOutput) Elem() FgsFunctionVersionAliasesOutput {
	return o.ApplyT(func(v *FgsFunctionVersionAliases) FgsFunctionVersionAliases {
		if v != nil {
			return *v
		}
		var ret FgsFunctionVersionAliases
		return ret
	}).(FgsFunctionVersionAliasesOutput)
}

// The description of the version alias.
func (o FgsFunctionVersionAliasesPtrOutput) AdditionalVersionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionStrategy
	}).(pulumi.StringPtrOutput)
}

// The percentage grayscale configuration of the version alias.
func (o FgsFunctionVersionAliasesPtrOutput) AdditionalVersionWeights() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionWeights
	}).(pulumi.StringPtrOutput)
}

// The description of the version alias.
func (o FgsFunctionVersionAliasesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The name of the version alias.
func (o FgsFunctionVersionAliasesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FgsFunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type GesGraphEncryption struct {
	// Whether to enable data encryption The value can be true or false. The default value is false.
	Enable *bool `pulumi:"enable"`
	// ID of the customer master key created by DEW in the project corresponding to the graph creation.
	MasterKeyId *string `pulumi:"masterKeyId"`
}

// GesGraphEncryptionInput is an input type that accepts GesGraphEncryptionArgs and GesGraphEncryptionOutput values.
// You can construct a concrete instance of `GesGraphEncryptionInput` via:
//
//	GesGraphEncryptionArgs{...}
type GesGraphEncryptionInput interface {
	pulumi.Input

	ToGesGraphEncryptionOutput() GesGraphEncryptionOutput
	ToGesGraphEncryptionOutputWithContext(context.Context) GesGraphEncryptionOutput
}

type GesGraphEncryptionArgs struct {
	// Whether to enable data encryption The value can be true or false. The default value is false.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// ID of the customer master key created by DEW in the project corresponding to the graph creation.
	MasterKeyId pulumi.StringPtrInput `pulumi:"masterKeyId"`
}

func (GesGraphEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphEncryption)(nil)).Elem()
}

func (i GesGraphEncryptionArgs) ToGesGraphEncryptionOutput() GesGraphEncryptionOutput {
	return i.ToGesGraphEncryptionOutputWithContext(context.Background())
}

func (i GesGraphEncryptionArgs) ToGesGraphEncryptionOutputWithContext(ctx context.Context) GesGraphEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphEncryptionOutput)
}

func (i GesGraphEncryptionArgs) ToGesGraphEncryptionPtrOutput() GesGraphEncryptionPtrOutput {
	return i.ToGesGraphEncryptionPtrOutputWithContext(context.Background())
}

func (i GesGraphEncryptionArgs) ToGesGraphEncryptionPtrOutputWithContext(ctx context.Context) GesGraphEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphEncryptionOutput).ToGesGraphEncryptionPtrOutputWithContext(ctx)
}

// GesGraphEncryptionPtrInput is an input type that accepts GesGraphEncryptionArgs, GesGraphEncryptionPtr and GesGraphEncryptionPtrOutput values.
// You can construct a concrete instance of `GesGraphEncryptionPtrInput` via:
//
//	        GesGraphEncryptionArgs{...}
//
//	or:
//
//	        nil
type GesGraphEncryptionPtrInput interface {
	pulumi.Input

	ToGesGraphEncryptionPtrOutput() GesGraphEncryptionPtrOutput
	ToGesGraphEncryptionPtrOutputWithContext(context.Context) GesGraphEncryptionPtrOutput
}

type gesGraphEncryptionPtrType GesGraphEncryptionArgs

func GesGraphEncryptionPtr(v *GesGraphEncryptionArgs) GesGraphEncryptionPtrInput {
	return (*gesGraphEncryptionPtrType)(v)
}

func (*gesGraphEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphEncryption)(nil)).Elem()
}

func (i *gesGraphEncryptionPtrType) ToGesGraphEncryptionPtrOutput() GesGraphEncryptionPtrOutput {
	return i.ToGesGraphEncryptionPtrOutputWithContext(context.Background())
}

func (i *gesGraphEncryptionPtrType) ToGesGraphEncryptionPtrOutputWithContext(ctx context.Context) GesGraphEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphEncryptionPtrOutput)
}

type GesGraphEncryptionOutput struct{ *pulumi.OutputState }

func (GesGraphEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphEncryption)(nil)).Elem()
}

func (o GesGraphEncryptionOutput) ToGesGraphEncryptionOutput() GesGraphEncryptionOutput {
	return o
}

func (o GesGraphEncryptionOutput) ToGesGraphEncryptionOutputWithContext(ctx context.Context) GesGraphEncryptionOutput {
	return o
}

func (o GesGraphEncryptionOutput) ToGesGraphEncryptionPtrOutput() GesGraphEncryptionPtrOutput {
	return o.ToGesGraphEncryptionPtrOutputWithContext(context.Background())
}

func (o GesGraphEncryptionOutput) ToGesGraphEncryptionPtrOutputWithContext(ctx context.Context) GesGraphEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GesGraphEncryption) *GesGraphEncryption {
		return &v
	}).(GesGraphEncryptionPtrOutput)
}

// Whether to enable data encryption The value can be true or false. The default value is false.
func (o GesGraphEncryptionOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GesGraphEncryption) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// ID of the customer master key created by DEW in the project corresponding to the graph creation.
func (o GesGraphEncryptionOutput) MasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GesGraphEncryption) *string { return v.MasterKeyId }).(pulumi.StringPtrOutput)
}

type GesGraphEncryptionPtrOutput struct{ *pulumi.OutputState }

func (GesGraphEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphEncryption)(nil)).Elem()
}

func (o GesGraphEncryptionPtrOutput) ToGesGraphEncryptionPtrOutput() GesGraphEncryptionPtrOutput {
	return o
}

func (o GesGraphEncryptionPtrOutput) ToGesGraphEncryptionPtrOutputWithContext(ctx context.Context) GesGraphEncryptionPtrOutput {
	return o
}

func (o GesGraphEncryptionPtrOutput) Elem() GesGraphEncryptionOutput {
	return o.ApplyT(func(v *GesGraphEncryption) GesGraphEncryption {
		if v != nil {
			return *v
		}
		var ret GesGraphEncryption
		return ret
	}).(GesGraphEncryptionOutput)
}

// Whether to enable data encryption The value can be true or false. The default value is false.
func (o GesGraphEncryptionPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GesGraphEncryption) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// ID of the customer master key created by DEW in the project corresponding to the graph creation.
func (o GesGraphEncryptionPtrOutput) MasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GesGraphEncryption) *string {
		if v == nil {
			return nil
		}
		return v.MasterKeyId
	}).(pulumi.StringPtrOutput)
}

type GesGraphLtsOperationTrace struct {
	// LTS log group name.
	AuditLogGroupName *string `pulumi:"auditLogGroupName"`
	// Whether to enable graph audit. The default value is false.
	EnableAudit *bool `pulumi:"enableAudit"`
}

// GesGraphLtsOperationTraceInput is an input type that accepts GesGraphLtsOperationTraceArgs and GesGraphLtsOperationTraceOutput values.
// You can construct a concrete instance of `GesGraphLtsOperationTraceInput` via:
//
//	GesGraphLtsOperationTraceArgs{...}
type GesGraphLtsOperationTraceInput interface {
	pulumi.Input

	ToGesGraphLtsOperationTraceOutput() GesGraphLtsOperationTraceOutput
	ToGesGraphLtsOperationTraceOutputWithContext(context.Context) GesGraphLtsOperationTraceOutput
}

type GesGraphLtsOperationTraceArgs struct {
	// LTS log group name.
	AuditLogGroupName pulumi.StringPtrInput `pulumi:"auditLogGroupName"`
	// Whether to enable graph audit. The default value is false.
	EnableAudit pulumi.BoolPtrInput `pulumi:"enableAudit"`
}

func (GesGraphLtsOperationTraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphLtsOperationTrace)(nil)).Elem()
}

func (i GesGraphLtsOperationTraceArgs) ToGesGraphLtsOperationTraceOutput() GesGraphLtsOperationTraceOutput {
	return i.ToGesGraphLtsOperationTraceOutputWithContext(context.Background())
}

func (i GesGraphLtsOperationTraceArgs) ToGesGraphLtsOperationTraceOutputWithContext(ctx context.Context) GesGraphLtsOperationTraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphLtsOperationTraceOutput)
}

func (i GesGraphLtsOperationTraceArgs) ToGesGraphLtsOperationTracePtrOutput() GesGraphLtsOperationTracePtrOutput {
	return i.ToGesGraphLtsOperationTracePtrOutputWithContext(context.Background())
}

func (i GesGraphLtsOperationTraceArgs) ToGesGraphLtsOperationTracePtrOutputWithContext(ctx context.Context) GesGraphLtsOperationTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphLtsOperationTraceOutput).ToGesGraphLtsOperationTracePtrOutputWithContext(ctx)
}

// GesGraphLtsOperationTracePtrInput is an input type that accepts GesGraphLtsOperationTraceArgs, GesGraphLtsOperationTracePtr and GesGraphLtsOperationTracePtrOutput values.
// You can construct a concrete instance of `GesGraphLtsOperationTracePtrInput` via:
//
//	        GesGraphLtsOperationTraceArgs{...}
//
//	or:
//
//	        nil
type GesGraphLtsOperationTracePtrInput interface {
	pulumi.Input

	ToGesGraphLtsOperationTracePtrOutput() GesGraphLtsOperationTracePtrOutput
	ToGesGraphLtsOperationTracePtrOutputWithContext(context.Context) GesGraphLtsOperationTracePtrOutput
}

type gesGraphLtsOperationTracePtrType GesGraphLtsOperationTraceArgs

func GesGraphLtsOperationTracePtr(v *GesGraphLtsOperationTraceArgs) GesGraphLtsOperationTracePtrInput {
	return (*gesGraphLtsOperationTracePtrType)(v)
}

func (*gesGraphLtsOperationTracePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphLtsOperationTrace)(nil)).Elem()
}

func (i *gesGraphLtsOperationTracePtrType) ToGesGraphLtsOperationTracePtrOutput() GesGraphLtsOperationTracePtrOutput {
	return i.ToGesGraphLtsOperationTracePtrOutputWithContext(context.Background())
}

func (i *gesGraphLtsOperationTracePtrType) ToGesGraphLtsOperationTracePtrOutputWithContext(ctx context.Context) GesGraphLtsOperationTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphLtsOperationTracePtrOutput)
}

type GesGraphLtsOperationTraceOutput struct{ *pulumi.OutputState }

func (GesGraphLtsOperationTraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphLtsOperationTrace)(nil)).Elem()
}

func (o GesGraphLtsOperationTraceOutput) ToGesGraphLtsOperationTraceOutput() GesGraphLtsOperationTraceOutput {
	return o
}

func (o GesGraphLtsOperationTraceOutput) ToGesGraphLtsOperationTraceOutputWithContext(ctx context.Context) GesGraphLtsOperationTraceOutput {
	return o
}

func (o GesGraphLtsOperationTraceOutput) ToGesGraphLtsOperationTracePtrOutput() GesGraphLtsOperationTracePtrOutput {
	return o.ToGesGraphLtsOperationTracePtrOutputWithContext(context.Background())
}

func (o GesGraphLtsOperationTraceOutput) ToGesGraphLtsOperationTracePtrOutputWithContext(ctx context.Context) GesGraphLtsOperationTracePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GesGraphLtsOperationTrace) *GesGraphLtsOperationTrace {
		return &v
	}).(GesGraphLtsOperationTracePtrOutput)
}

// LTS log group name.
func (o GesGraphLtsOperationTraceOutput) AuditLogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GesGraphLtsOperationTrace) *string { return v.AuditLogGroupName }).(pulumi.StringPtrOutput)
}

// Whether to enable graph audit. The default value is false.
func (o GesGraphLtsOperationTraceOutput) EnableAudit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GesGraphLtsOperationTrace) *bool { return v.EnableAudit }).(pulumi.BoolPtrOutput)
}

type GesGraphLtsOperationTracePtrOutput struct{ *pulumi.OutputState }

func (GesGraphLtsOperationTracePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphLtsOperationTrace)(nil)).Elem()
}

func (o GesGraphLtsOperationTracePtrOutput) ToGesGraphLtsOperationTracePtrOutput() GesGraphLtsOperationTracePtrOutput {
	return o
}

func (o GesGraphLtsOperationTracePtrOutput) ToGesGraphLtsOperationTracePtrOutputWithContext(ctx context.Context) GesGraphLtsOperationTracePtrOutput {
	return o
}

func (o GesGraphLtsOperationTracePtrOutput) Elem() GesGraphLtsOperationTraceOutput {
	return o.ApplyT(func(v *GesGraphLtsOperationTrace) GesGraphLtsOperationTrace {
		if v != nil {
			return *v
		}
		var ret GesGraphLtsOperationTrace
		return ret
	}).(GesGraphLtsOperationTraceOutput)
}

// LTS log group name.
func (o GesGraphLtsOperationTracePtrOutput) AuditLogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GesGraphLtsOperationTrace) *string {
		if v == nil {
			return nil
		}
		return v.AuditLogGroupName
	}).(pulumi.StringPtrOutput)
}

// Whether to enable graph audit. The default value is false.
func (o GesGraphLtsOperationTracePtrOutput) EnableAudit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GesGraphLtsOperationTrace) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAudit
	}).(pulumi.BoolPtrOutput)
}

type GesGraphPublicIp struct {
	// The EIP ID.
	EipId *string `pulumi:"eipId"`
	// The bind type of public IP.
	PublicBindType *string `pulumi:"publicBindType"`
}

// GesGraphPublicIpInput is an input type that accepts GesGraphPublicIpArgs and GesGraphPublicIpOutput values.
// You can construct a concrete instance of `GesGraphPublicIpInput` via:
//
//	GesGraphPublicIpArgs{...}
type GesGraphPublicIpInput interface {
	pulumi.Input

	ToGesGraphPublicIpOutput() GesGraphPublicIpOutput
	ToGesGraphPublicIpOutputWithContext(context.Context) GesGraphPublicIpOutput
}

type GesGraphPublicIpArgs struct {
	// The EIP ID.
	EipId pulumi.StringPtrInput `pulumi:"eipId"`
	// The bind type of public IP.
	PublicBindType pulumi.StringPtrInput `pulumi:"publicBindType"`
}

func (GesGraphPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphPublicIp)(nil)).Elem()
}

func (i GesGraphPublicIpArgs) ToGesGraphPublicIpOutput() GesGraphPublicIpOutput {
	return i.ToGesGraphPublicIpOutputWithContext(context.Background())
}

func (i GesGraphPublicIpArgs) ToGesGraphPublicIpOutputWithContext(ctx context.Context) GesGraphPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphPublicIpOutput)
}

func (i GesGraphPublicIpArgs) ToGesGraphPublicIpPtrOutput() GesGraphPublicIpPtrOutput {
	return i.ToGesGraphPublicIpPtrOutputWithContext(context.Background())
}

func (i GesGraphPublicIpArgs) ToGesGraphPublicIpPtrOutputWithContext(ctx context.Context) GesGraphPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphPublicIpOutput).ToGesGraphPublicIpPtrOutputWithContext(ctx)
}

// GesGraphPublicIpPtrInput is an input type that accepts GesGraphPublicIpArgs, GesGraphPublicIpPtr and GesGraphPublicIpPtrOutput values.
// You can construct a concrete instance of `GesGraphPublicIpPtrInput` via:
//
//	        GesGraphPublicIpArgs{...}
//
//	or:
//
//	        nil
type GesGraphPublicIpPtrInput interface {
	pulumi.Input

	ToGesGraphPublicIpPtrOutput() GesGraphPublicIpPtrOutput
	ToGesGraphPublicIpPtrOutputWithContext(context.Context) GesGraphPublicIpPtrOutput
}

type gesGraphPublicIpPtrType GesGraphPublicIpArgs

func GesGraphPublicIpPtr(v *GesGraphPublicIpArgs) GesGraphPublicIpPtrInput {
	return (*gesGraphPublicIpPtrType)(v)
}

func (*gesGraphPublicIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphPublicIp)(nil)).Elem()
}

func (i *gesGraphPublicIpPtrType) ToGesGraphPublicIpPtrOutput() GesGraphPublicIpPtrOutput {
	return i.ToGesGraphPublicIpPtrOutputWithContext(context.Background())
}

func (i *gesGraphPublicIpPtrType) ToGesGraphPublicIpPtrOutputWithContext(ctx context.Context) GesGraphPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphPublicIpPtrOutput)
}

type GesGraphPublicIpOutput struct{ *pulumi.OutputState }

func (GesGraphPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphPublicIp)(nil)).Elem()
}

func (o GesGraphPublicIpOutput) ToGesGraphPublicIpOutput() GesGraphPublicIpOutput {
	return o
}

func (o GesGraphPublicIpOutput) ToGesGraphPublicIpOutputWithContext(ctx context.Context) GesGraphPublicIpOutput {
	return o
}

func (o GesGraphPublicIpOutput) ToGesGraphPublicIpPtrOutput() GesGraphPublicIpPtrOutput {
	return o.ToGesGraphPublicIpPtrOutputWithContext(context.Background())
}

func (o GesGraphPublicIpOutput) ToGesGraphPublicIpPtrOutputWithContext(ctx context.Context) GesGraphPublicIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GesGraphPublicIp) *GesGraphPublicIp {
		return &v
	}).(GesGraphPublicIpPtrOutput)
}

// The EIP ID.
func (o GesGraphPublicIpOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GesGraphPublicIp) *string { return v.EipId }).(pulumi.StringPtrOutput)
}

// The bind type of public IP.
func (o GesGraphPublicIpOutput) PublicBindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GesGraphPublicIp) *string { return v.PublicBindType }).(pulumi.StringPtrOutput)
}

type GesGraphPublicIpPtrOutput struct{ *pulumi.OutputState }

func (GesGraphPublicIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphPublicIp)(nil)).Elem()
}

func (o GesGraphPublicIpPtrOutput) ToGesGraphPublicIpPtrOutput() GesGraphPublicIpPtrOutput {
	return o
}

func (o GesGraphPublicIpPtrOutput) ToGesGraphPublicIpPtrOutputWithContext(ctx context.Context) GesGraphPublicIpPtrOutput {
	return o
}

func (o GesGraphPublicIpPtrOutput) Elem() GesGraphPublicIpOutput {
	return o.ApplyT(func(v *GesGraphPublicIp) GesGraphPublicIp {
		if v != nil {
			return *v
		}
		var ret GesGraphPublicIp
		return ret
	}).(GesGraphPublicIpOutput)
}

// The EIP ID.
func (o GesGraphPublicIpPtrOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GesGraphPublicIp) *string {
		if v == nil {
			return nil
		}
		return v.EipId
	}).(pulumi.StringPtrOutput)
}

// The bind type of public IP.
func (o GesGraphPublicIpPtrOutput) PublicBindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GesGraphPublicIp) *string {
		if v == nil {
			return nil
		}
		return v.PublicBindType
	}).(pulumi.StringPtrOutput)
}

type GesGraphVertexIdType struct {
	// The length of ID.
	IdLength *int `pulumi:"idLength"`
	// Vertex ID type.
	IdType *string `pulumi:"idType"`
}

// GesGraphVertexIdTypeInput is an input type that accepts GesGraphVertexIdTypeArgs and GesGraphVertexIdTypeOutput values.
// You can construct a concrete instance of `GesGraphVertexIdTypeInput` via:
//
//	GesGraphVertexIdTypeArgs{...}
type GesGraphVertexIdTypeInput interface {
	pulumi.Input

	ToGesGraphVertexIdTypeOutput() GesGraphVertexIdTypeOutput
	ToGesGraphVertexIdTypeOutputWithContext(context.Context) GesGraphVertexIdTypeOutput
}

type GesGraphVertexIdTypeArgs struct {
	// The length of ID.
	IdLength pulumi.IntPtrInput `pulumi:"idLength"`
	// Vertex ID type.
	IdType pulumi.StringPtrInput `pulumi:"idType"`
}

func (GesGraphVertexIdTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphVertexIdType)(nil)).Elem()
}

func (i GesGraphVertexIdTypeArgs) ToGesGraphVertexIdTypeOutput() GesGraphVertexIdTypeOutput {
	return i.ToGesGraphVertexIdTypeOutputWithContext(context.Background())
}

func (i GesGraphVertexIdTypeArgs) ToGesGraphVertexIdTypeOutputWithContext(ctx context.Context) GesGraphVertexIdTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphVertexIdTypeOutput)
}

func (i GesGraphVertexIdTypeArgs) ToGesGraphVertexIdTypePtrOutput() GesGraphVertexIdTypePtrOutput {
	return i.ToGesGraphVertexIdTypePtrOutputWithContext(context.Background())
}

func (i GesGraphVertexIdTypeArgs) ToGesGraphVertexIdTypePtrOutputWithContext(ctx context.Context) GesGraphVertexIdTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphVertexIdTypeOutput).ToGesGraphVertexIdTypePtrOutputWithContext(ctx)
}

// GesGraphVertexIdTypePtrInput is an input type that accepts GesGraphVertexIdTypeArgs, GesGraphVertexIdTypePtr and GesGraphVertexIdTypePtrOutput values.
// You can construct a concrete instance of `GesGraphVertexIdTypePtrInput` via:
//
//	        GesGraphVertexIdTypeArgs{...}
//
//	or:
//
//	        nil
type GesGraphVertexIdTypePtrInput interface {
	pulumi.Input

	ToGesGraphVertexIdTypePtrOutput() GesGraphVertexIdTypePtrOutput
	ToGesGraphVertexIdTypePtrOutputWithContext(context.Context) GesGraphVertexIdTypePtrOutput
}

type gesGraphVertexIdTypePtrType GesGraphVertexIdTypeArgs

func GesGraphVertexIdTypePtr(v *GesGraphVertexIdTypeArgs) GesGraphVertexIdTypePtrInput {
	return (*gesGraphVertexIdTypePtrType)(v)
}

func (*gesGraphVertexIdTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphVertexIdType)(nil)).Elem()
}

func (i *gesGraphVertexIdTypePtrType) ToGesGraphVertexIdTypePtrOutput() GesGraphVertexIdTypePtrOutput {
	return i.ToGesGraphVertexIdTypePtrOutputWithContext(context.Background())
}

func (i *gesGraphVertexIdTypePtrType) ToGesGraphVertexIdTypePtrOutputWithContext(ctx context.Context) GesGraphVertexIdTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GesGraphVertexIdTypePtrOutput)
}

type GesGraphVertexIdTypeOutput struct{ *pulumi.OutputState }

func (GesGraphVertexIdTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GesGraphVertexIdType)(nil)).Elem()
}

func (o GesGraphVertexIdTypeOutput) ToGesGraphVertexIdTypeOutput() GesGraphVertexIdTypeOutput {
	return o
}

func (o GesGraphVertexIdTypeOutput) ToGesGraphVertexIdTypeOutputWithContext(ctx context.Context) GesGraphVertexIdTypeOutput {
	return o
}

func (o GesGraphVertexIdTypeOutput) ToGesGraphVertexIdTypePtrOutput() GesGraphVertexIdTypePtrOutput {
	return o.ToGesGraphVertexIdTypePtrOutputWithContext(context.Background())
}

func (o GesGraphVertexIdTypeOutput) ToGesGraphVertexIdTypePtrOutputWithContext(ctx context.Context) GesGraphVertexIdTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GesGraphVertexIdType) *GesGraphVertexIdType {
		return &v
	}).(GesGraphVertexIdTypePtrOutput)
}

// The length of ID.
func (o GesGraphVertexIdTypeOutput) IdLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GesGraphVertexIdType) *int { return v.IdLength }).(pulumi.IntPtrOutput)
}

// Vertex ID type.
func (o GesGraphVertexIdTypeOutput) IdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GesGraphVertexIdType) *string { return v.IdType }).(pulumi.StringPtrOutput)
}

type GesGraphVertexIdTypePtrOutput struct{ *pulumi.OutputState }

func (GesGraphVertexIdTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GesGraphVertexIdType)(nil)).Elem()
}

func (o GesGraphVertexIdTypePtrOutput) ToGesGraphVertexIdTypePtrOutput() GesGraphVertexIdTypePtrOutput {
	return o
}

func (o GesGraphVertexIdTypePtrOutput) ToGesGraphVertexIdTypePtrOutputWithContext(ctx context.Context) GesGraphVertexIdTypePtrOutput {
	return o
}

func (o GesGraphVertexIdTypePtrOutput) Elem() GesGraphVertexIdTypeOutput {
	return o.ApplyT(func(v *GesGraphVertexIdType) GesGraphVertexIdType {
		if v != nil {
			return *v
		}
		var ret GesGraphVertexIdType
		return ret
	}).(GesGraphVertexIdTypeOutput)
}

// The length of ID.
func (o GesGraphVertexIdTypePtrOutput) IdLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GesGraphVertexIdType) *int {
		if v == nil {
			return nil
		}
		return v.IdLength
	}).(pulumi.IntPtrOutput)
}

// Vertex ID type.
func (o GesGraphVertexIdTypePtrOutput) IdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GesGraphVertexIdType) *string {
		if v == nil {
			return nil
		}
		return v.IdType
	}).(pulumi.StringPtrOutput)
}

type IdentityAclIpCidr struct {
	Cidr        string  `pulumi:"cidr"`
	Description *string `pulumi:"description"`
}

// IdentityAclIpCidrInput is an input type that accepts IdentityAclIpCidrArgs and IdentityAclIpCidrOutput values.
// You can construct a concrete instance of `IdentityAclIpCidrInput` via:
//
//	IdentityAclIpCidrArgs{...}
type IdentityAclIpCidrInput interface {
	pulumi.Input

	ToIdentityAclIpCidrOutput() IdentityAclIpCidrOutput
	ToIdentityAclIpCidrOutputWithContext(context.Context) IdentityAclIpCidrOutput
}

type IdentityAclIpCidrArgs struct {
	Cidr        pulumi.StringInput    `pulumi:"cidr"`
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (IdentityAclIpCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAclIpCidr)(nil)).Elem()
}

func (i IdentityAclIpCidrArgs) ToIdentityAclIpCidrOutput() IdentityAclIpCidrOutput {
	return i.ToIdentityAclIpCidrOutputWithContext(context.Background())
}

func (i IdentityAclIpCidrArgs) ToIdentityAclIpCidrOutputWithContext(ctx context.Context) IdentityAclIpCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAclIpCidrOutput)
}

// IdentityAclIpCidrArrayInput is an input type that accepts IdentityAclIpCidrArray and IdentityAclIpCidrArrayOutput values.
// You can construct a concrete instance of `IdentityAclIpCidrArrayInput` via:
//
//	IdentityAclIpCidrArray{ IdentityAclIpCidrArgs{...} }
type IdentityAclIpCidrArrayInput interface {
	pulumi.Input

	ToIdentityAclIpCidrArrayOutput() IdentityAclIpCidrArrayOutput
	ToIdentityAclIpCidrArrayOutputWithContext(context.Context) IdentityAclIpCidrArrayOutput
}

type IdentityAclIpCidrArray []IdentityAclIpCidrInput

func (IdentityAclIpCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAclIpCidr)(nil)).Elem()
}

func (i IdentityAclIpCidrArray) ToIdentityAclIpCidrArrayOutput() IdentityAclIpCidrArrayOutput {
	return i.ToIdentityAclIpCidrArrayOutputWithContext(context.Background())
}

func (i IdentityAclIpCidrArray) ToIdentityAclIpCidrArrayOutputWithContext(ctx context.Context) IdentityAclIpCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAclIpCidrArrayOutput)
}

type IdentityAclIpCidrOutput struct{ *pulumi.OutputState }

func (IdentityAclIpCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAclIpCidr)(nil)).Elem()
}

func (o IdentityAclIpCidrOutput) ToIdentityAclIpCidrOutput() IdentityAclIpCidrOutput {
	return o
}

func (o IdentityAclIpCidrOutput) ToIdentityAclIpCidrOutputWithContext(ctx context.Context) IdentityAclIpCidrOutput {
	return o
}

func (o IdentityAclIpCidrOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityAclIpCidr) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o IdentityAclIpCidrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAclIpCidr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type IdentityAclIpCidrArrayOutput struct{ *pulumi.OutputState }

func (IdentityAclIpCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAclIpCidr)(nil)).Elem()
}

func (o IdentityAclIpCidrArrayOutput) ToIdentityAclIpCidrArrayOutput() IdentityAclIpCidrArrayOutput {
	return o
}

func (o IdentityAclIpCidrArrayOutput) ToIdentityAclIpCidrArrayOutputWithContext(ctx context.Context) IdentityAclIpCidrArrayOutput {
	return o
}

func (o IdentityAclIpCidrArrayOutput) Index(i pulumi.IntInput) IdentityAclIpCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityAclIpCidr {
		return vs[0].([]IdentityAclIpCidr)[vs[1].(int)]
	}).(IdentityAclIpCidrOutput)
}

type IdentityAclIpRange struct {
	Description *string `pulumi:"description"`
	Range       string  `pulumi:"range"`
}

// IdentityAclIpRangeInput is an input type that accepts IdentityAclIpRangeArgs and IdentityAclIpRangeOutput values.
// You can construct a concrete instance of `IdentityAclIpRangeInput` via:
//
//	IdentityAclIpRangeArgs{...}
type IdentityAclIpRangeInput interface {
	pulumi.Input

	ToIdentityAclIpRangeOutput() IdentityAclIpRangeOutput
	ToIdentityAclIpRangeOutputWithContext(context.Context) IdentityAclIpRangeOutput
}

type IdentityAclIpRangeArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Range       pulumi.StringInput    `pulumi:"range"`
}

func (IdentityAclIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAclIpRange)(nil)).Elem()
}

func (i IdentityAclIpRangeArgs) ToIdentityAclIpRangeOutput() IdentityAclIpRangeOutput {
	return i.ToIdentityAclIpRangeOutputWithContext(context.Background())
}

func (i IdentityAclIpRangeArgs) ToIdentityAclIpRangeOutputWithContext(ctx context.Context) IdentityAclIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAclIpRangeOutput)
}

// IdentityAclIpRangeArrayInput is an input type that accepts IdentityAclIpRangeArray and IdentityAclIpRangeArrayOutput values.
// You can construct a concrete instance of `IdentityAclIpRangeArrayInput` via:
//
//	IdentityAclIpRangeArray{ IdentityAclIpRangeArgs{...} }
type IdentityAclIpRangeArrayInput interface {
	pulumi.Input

	ToIdentityAclIpRangeArrayOutput() IdentityAclIpRangeArrayOutput
	ToIdentityAclIpRangeArrayOutputWithContext(context.Context) IdentityAclIpRangeArrayOutput
}

type IdentityAclIpRangeArray []IdentityAclIpRangeInput

func (IdentityAclIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAclIpRange)(nil)).Elem()
}

func (i IdentityAclIpRangeArray) ToIdentityAclIpRangeArrayOutput() IdentityAclIpRangeArrayOutput {
	return i.ToIdentityAclIpRangeArrayOutputWithContext(context.Background())
}

func (i IdentityAclIpRangeArray) ToIdentityAclIpRangeArrayOutputWithContext(ctx context.Context) IdentityAclIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAclIpRangeArrayOutput)
}

type IdentityAclIpRangeOutput struct{ *pulumi.OutputState }

func (IdentityAclIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAclIpRange)(nil)).Elem()
}

func (o IdentityAclIpRangeOutput) ToIdentityAclIpRangeOutput() IdentityAclIpRangeOutput {
	return o
}

func (o IdentityAclIpRangeOutput) ToIdentityAclIpRangeOutputWithContext(ctx context.Context) IdentityAclIpRangeOutput {
	return o
}

func (o IdentityAclIpRangeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAclIpRange) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IdentityAclIpRangeOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityAclIpRange) string { return v.Range }).(pulumi.StringOutput)
}

type IdentityAclIpRangeArrayOutput struct{ *pulumi.OutputState }

func (IdentityAclIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAclIpRange)(nil)).Elem()
}

func (o IdentityAclIpRangeArrayOutput) ToIdentityAclIpRangeArrayOutput() IdentityAclIpRangeArrayOutput {
	return o
}

func (o IdentityAclIpRangeArrayOutput) ToIdentityAclIpRangeArrayOutputWithContext(ctx context.Context) IdentityAclIpRangeArrayOutput {
	return o
}

func (o IdentityAclIpRangeArrayOutput) Index(i pulumi.IntInput) IdentityAclIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityAclIpRange {
		return vs[0].([]IdentityAclIpRange)[vs[1].(int)]
	}).(IdentityAclIpRangeOutput)
}

type IdentityAgencyProjectRole struct {
	Project string   `pulumi:"project"`
	Roles   []string `pulumi:"roles"`
}

// IdentityAgencyProjectRoleInput is an input type that accepts IdentityAgencyProjectRoleArgs and IdentityAgencyProjectRoleOutput values.
// You can construct a concrete instance of `IdentityAgencyProjectRoleInput` via:
//
//	IdentityAgencyProjectRoleArgs{...}
type IdentityAgencyProjectRoleInput interface {
	pulumi.Input

	ToIdentityAgencyProjectRoleOutput() IdentityAgencyProjectRoleOutput
	ToIdentityAgencyProjectRoleOutputWithContext(context.Context) IdentityAgencyProjectRoleOutput
}

type IdentityAgencyProjectRoleArgs struct {
	Project pulumi.StringInput      `pulumi:"project"`
	Roles   pulumi.StringArrayInput `pulumi:"roles"`
}

func (IdentityAgencyProjectRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAgencyProjectRole)(nil)).Elem()
}

func (i IdentityAgencyProjectRoleArgs) ToIdentityAgencyProjectRoleOutput() IdentityAgencyProjectRoleOutput {
	return i.ToIdentityAgencyProjectRoleOutputWithContext(context.Background())
}

func (i IdentityAgencyProjectRoleArgs) ToIdentityAgencyProjectRoleOutputWithContext(ctx context.Context) IdentityAgencyProjectRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAgencyProjectRoleOutput)
}

// IdentityAgencyProjectRoleArrayInput is an input type that accepts IdentityAgencyProjectRoleArray and IdentityAgencyProjectRoleArrayOutput values.
// You can construct a concrete instance of `IdentityAgencyProjectRoleArrayInput` via:
//
//	IdentityAgencyProjectRoleArray{ IdentityAgencyProjectRoleArgs{...} }
type IdentityAgencyProjectRoleArrayInput interface {
	pulumi.Input

	ToIdentityAgencyProjectRoleArrayOutput() IdentityAgencyProjectRoleArrayOutput
	ToIdentityAgencyProjectRoleArrayOutputWithContext(context.Context) IdentityAgencyProjectRoleArrayOutput
}

type IdentityAgencyProjectRoleArray []IdentityAgencyProjectRoleInput

func (IdentityAgencyProjectRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAgencyProjectRole)(nil)).Elem()
}

func (i IdentityAgencyProjectRoleArray) ToIdentityAgencyProjectRoleArrayOutput() IdentityAgencyProjectRoleArrayOutput {
	return i.ToIdentityAgencyProjectRoleArrayOutputWithContext(context.Background())
}

func (i IdentityAgencyProjectRoleArray) ToIdentityAgencyProjectRoleArrayOutputWithContext(ctx context.Context) IdentityAgencyProjectRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAgencyProjectRoleArrayOutput)
}

type IdentityAgencyProjectRoleOutput struct{ *pulumi.OutputState }

func (IdentityAgencyProjectRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAgencyProjectRole)(nil)).Elem()
}

func (o IdentityAgencyProjectRoleOutput) ToIdentityAgencyProjectRoleOutput() IdentityAgencyProjectRoleOutput {
	return o
}

func (o IdentityAgencyProjectRoleOutput) ToIdentityAgencyProjectRoleOutputWithContext(ctx context.Context) IdentityAgencyProjectRoleOutput {
	return o
}

func (o IdentityAgencyProjectRoleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityAgencyProjectRole) string { return v.Project }).(pulumi.StringOutput)
}

func (o IdentityAgencyProjectRoleOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityAgencyProjectRole) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type IdentityAgencyProjectRoleArrayOutput struct{ *pulumi.OutputState }

func (IdentityAgencyProjectRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAgencyProjectRole)(nil)).Elem()
}

func (o IdentityAgencyProjectRoleArrayOutput) ToIdentityAgencyProjectRoleArrayOutput() IdentityAgencyProjectRoleArrayOutput {
	return o
}

func (o IdentityAgencyProjectRoleArrayOutput) ToIdentityAgencyProjectRoleArrayOutputWithContext(ctx context.Context) IdentityAgencyProjectRoleArrayOutput {
	return o
}

func (o IdentityAgencyProjectRoleArrayOutput) Index(i pulumi.IntInput) IdentityAgencyProjectRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityAgencyProjectRole {
		return vs[0].([]IdentityAgencyProjectRole)[vs[1].(int)]
	}).(IdentityAgencyProjectRoleOutput)
}

type IdentityProviderAccessConfig struct {
	AccessType            string   `pulumi:"accessType"`
	AuthorizationEndpoint *string  `pulumi:"authorizationEndpoint"`
	ClientId              string   `pulumi:"clientId"`
	ProviderUrl           string   `pulumi:"providerUrl"`
	ResponseMode          *string  `pulumi:"responseMode"`
	ResponseType          *string  `pulumi:"responseType"`
	Scopes                []string `pulumi:"scopes"`
	SigningKey            string   `pulumi:"signingKey"`
}

// IdentityProviderAccessConfigInput is an input type that accepts IdentityProviderAccessConfigArgs and IdentityProviderAccessConfigOutput values.
// You can construct a concrete instance of `IdentityProviderAccessConfigInput` via:
//
//	IdentityProviderAccessConfigArgs{...}
type IdentityProviderAccessConfigInput interface {
	pulumi.Input

	ToIdentityProviderAccessConfigOutput() IdentityProviderAccessConfigOutput
	ToIdentityProviderAccessConfigOutputWithContext(context.Context) IdentityProviderAccessConfigOutput
}

type IdentityProviderAccessConfigArgs struct {
	AccessType            pulumi.StringInput      `pulumi:"accessType"`
	AuthorizationEndpoint pulumi.StringPtrInput   `pulumi:"authorizationEndpoint"`
	ClientId              pulumi.StringInput      `pulumi:"clientId"`
	ProviderUrl           pulumi.StringInput      `pulumi:"providerUrl"`
	ResponseMode          pulumi.StringPtrInput   `pulumi:"responseMode"`
	ResponseType          pulumi.StringPtrInput   `pulumi:"responseType"`
	Scopes                pulumi.StringArrayInput `pulumi:"scopes"`
	SigningKey            pulumi.StringInput      `pulumi:"signingKey"`
}

func (IdentityProviderAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderAccessConfig)(nil)).Elem()
}

func (i IdentityProviderAccessConfigArgs) ToIdentityProviderAccessConfigOutput() IdentityProviderAccessConfigOutput {
	return i.ToIdentityProviderAccessConfigOutputWithContext(context.Background())
}

func (i IdentityProviderAccessConfigArgs) ToIdentityProviderAccessConfigOutputWithContext(ctx context.Context) IdentityProviderAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderAccessConfigOutput)
}

func (i IdentityProviderAccessConfigArgs) ToIdentityProviderAccessConfigPtrOutput() IdentityProviderAccessConfigPtrOutput {
	return i.ToIdentityProviderAccessConfigPtrOutputWithContext(context.Background())
}

func (i IdentityProviderAccessConfigArgs) ToIdentityProviderAccessConfigPtrOutputWithContext(ctx context.Context) IdentityProviderAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderAccessConfigOutput).ToIdentityProviderAccessConfigPtrOutputWithContext(ctx)
}

// IdentityProviderAccessConfigPtrInput is an input type that accepts IdentityProviderAccessConfigArgs, IdentityProviderAccessConfigPtr and IdentityProviderAccessConfigPtrOutput values.
// You can construct a concrete instance of `IdentityProviderAccessConfigPtrInput` via:
//
//	        IdentityProviderAccessConfigArgs{...}
//
//	or:
//
//	        nil
type IdentityProviderAccessConfigPtrInput interface {
	pulumi.Input

	ToIdentityProviderAccessConfigPtrOutput() IdentityProviderAccessConfigPtrOutput
	ToIdentityProviderAccessConfigPtrOutputWithContext(context.Context) IdentityProviderAccessConfigPtrOutput
}

type identityProviderAccessConfigPtrType IdentityProviderAccessConfigArgs

func IdentityProviderAccessConfigPtr(v *IdentityProviderAccessConfigArgs) IdentityProviderAccessConfigPtrInput {
	return (*identityProviderAccessConfigPtrType)(v)
}

func (*identityProviderAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderAccessConfig)(nil)).Elem()
}

func (i *identityProviderAccessConfigPtrType) ToIdentityProviderAccessConfigPtrOutput() IdentityProviderAccessConfigPtrOutput {
	return i.ToIdentityProviderAccessConfigPtrOutputWithContext(context.Background())
}

func (i *identityProviderAccessConfigPtrType) ToIdentityProviderAccessConfigPtrOutputWithContext(ctx context.Context) IdentityProviderAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderAccessConfigPtrOutput)
}

type IdentityProviderAccessConfigOutput struct{ *pulumi.OutputState }

func (IdentityProviderAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderAccessConfig)(nil)).Elem()
}

func (o IdentityProviderAccessConfigOutput) ToIdentityProviderAccessConfigOutput() IdentityProviderAccessConfigOutput {
	return o
}

func (o IdentityProviderAccessConfigOutput) ToIdentityProviderAccessConfigOutputWithContext(ctx context.Context) IdentityProviderAccessConfigOutput {
	return o
}

func (o IdentityProviderAccessConfigOutput) ToIdentityProviderAccessConfigPtrOutput() IdentityProviderAccessConfigPtrOutput {
	return o.ToIdentityProviderAccessConfigPtrOutputWithContext(context.Background())
}

func (o IdentityProviderAccessConfigOutput) ToIdentityProviderAccessConfigPtrOutputWithContext(ctx context.Context) IdentityProviderAccessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProviderAccessConfig) *IdentityProviderAccessConfig {
		return &v
	}).(IdentityProviderAccessConfigPtrOutput)
}

func (o IdentityProviderAccessConfigOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) string { return v.AccessType }).(pulumi.StringOutput)
}

func (o IdentityProviderAccessConfigOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o IdentityProviderAccessConfigOutput) ProviderUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) string { return v.ProviderUrl }).(pulumi.StringOutput)
}

func (o IdentityProviderAccessConfigOutput) ResponseMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) *string { return v.ResponseMode }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) *string { return v.ResponseType }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o IdentityProviderAccessConfigOutput) SigningKey() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderAccessConfig) string { return v.SigningKey }).(pulumi.StringOutput)
}

type IdentityProviderAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderAccessConfig)(nil)).Elem()
}

func (o IdentityProviderAccessConfigPtrOutput) ToIdentityProviderAccessConfigPtrOutput() IdentityProviderAccessConfigPtrOutput {
	return o
}

func (o IdentityProviderAccessConfigPtrOutput) ToIdentityProviderAccessConfigPtrOutputWithContext(ctx context.Context) IdentityProviderAccessConfigPtrOutput {
	return o
}

func (o IdentityProviderAccessConfigPtrOutput) Elem() IdentityProviderAccessConfigOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) IdentityProviderAccessConfig {
		if v != nil {
			return *v
		}
		var ret IdentityProviderAccessConfig
		return ret
	}).(IdentityProviderAccessConfigOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) AccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AccessType
	}).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) ProviderUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderUrl
	}).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) ResponseMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResponseMode
	}).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResponseType
	}).(pulumi.StringPtrOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

func (o IdentityProviderAccessConfigPtrOutput) SigningKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderAccessConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SigningKey
	}).(pulumi.StringPtrOutput)
}

type IdentityProviderConversionConversionRule struct {
	Locals  []IdentityProviderConversionConversionRuleLocal  `pulumi:"locals"`
	Remotes []IdentityProviderConversionConversionRuleRemote `pulumi:"remotes"`
}

// IdentityProviderConversionConversionRuleInput is an input type that accepts IdentityProviderConversionConversionRuleArgs and IdentityProviderConversionConversionRuleOutput values.
// You can construct a concrete instance of `IdentityProviderConversionConversionRuleInput` via:
//
//	IdentityProviderConversionConversionRuleArgs{...}
type IdentityProviderConversionConversionRuleInput interface {
	pulumi.Input

	ToIdentityProviderConversionConversionRuleOutput() IdentityProviderConversionConversionRuleOutput
	ToIdentityProviderConversionConversionRuleOutputWithContext(context.Context) IdentityProviderConversionConversionRuleOutput
}

type IdentityProviderConversionConversionRuleArgs struct {
	Locals  IdentityProviderConversionConversionRuleLocalArrayInput  `pulumi:"locals"`
	Remotes IdentityProviderConversionConversionRuleRemoteArrayInput `pulumi:"remotes"`
}

func (IdentityProviderConversionConversionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionConversionRule)(nil)).Elem()
}

func (i IdentityProviderConversionConversionRuleArgs) ToIdentityProviderConversionConversionRuleOutput() IdentityProviderConversionConversionRuleOutput {
	return i.ToIdentityProviderConversionConversionRuleOutputWithContext(context.Background())
}

func (i IdentityProviderConversionConversionRuleArgs) ToIdentityProviderConversionConversionRuleOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionConversionRuleOutput)
}

// IdentityProviderConversionConversionRuleArrayInput is an input type that accepts IdentityProviderConversionConversionRuleArray and IdentityProviderConversionConversionRuleArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConversionConversionRuleArrayInput` via:
//
//	IdentityProviderConversionConversionRuleArray{ IdentityProviderConversionConversionRuleArgs{...} }
type IdentityProviderConversionConversionRuleArrayInput interface {
	pulumi.Input

	ToIdentityProviderConversionConversionRuleArrayOutput() IdentityProviderConversionConversionRuleArrayOutput
	ToIdentityProviderConversionConversionRuleArrayOutputWithContext(context.Context) IdentityProviderConversionConversionRuleArrayOutput
}

type IdentityProviderConversionConversionRuleArray []IdentityProviderConversionConversionRuleInput

func (IdentityProviderConversionConversionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionConversionRule)(nil)).Elem()
}

func (i IdentityProviderConversionConversionRuleArray) ToIdentityProviderConversionConversionRuleArrayOutput() IdentityProviderConversionConversionRuleArrayOutput {
	return i.ToIdentityProviderConversionConversionRuleArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConversionConversionRuleArray) ToIdentityProviderConversionConversionRuleArrayOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionConversionRuleArrayOutput)
}

type IdentityProviderConversionConversionRuleOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionConversionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionConversionRule)(nil)).Elem()
}

func (o IdentityProviderConversionConversionRuleOutput) ToIdentityProviderConversionConversionRuleOutput() IdentityProviderConversionConversionRuleOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleOutput) ToIdentityProviderConversionConversionRuleOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleOutput) Locals() IdentityProviderConversionConversionRuleLocalArrayOutput {
	return o.ApplyT(func(v IdentityProviderConversionConversionRule) []IdentityProviderConversionConversionRuleLocal {
		return v.Locals
	}).(IdentityProviderConversionConversionRuleLocalArrayOutput)
}

func (o IdentityProviderConversionConversionRuleOutput) Remotes() IdentityProviderConversionConversionRuleRemoteArrayOutput {
	return o.ApplyT(func(v IdentityProviderConversionConversionRule) []IdentityProviderConversionConversionRuleRemote {
		return v.Remotes
	}).(IdentityProviderConversionConversionRuleRemoteArrayOutput)
}

type IdentityProviderConversionConversionRuleArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionConversionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionConversionRule)(nil)).Elem()
}

func (o IdentityProviderConversionConversionRuleArrayOutput) ToIdentityProviderConversionConversionRuleArrayOutput() IdentityProviderConversionConversionRuleArrayOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleArrayOutput) ToIdentityProviderConversionConversionRuleArrayOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleArrayOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleArrayOutput) Index(i pulumi.IntInput) IdentityProviderConversionConversionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConversionConversionRule {
		return vs[0].([]IdentityProviderConversionConversionRule)[vs[1].(int)]
	}).(IdentityProviderConversionConversionRuleOutput)
}

type IdentityProviderConversionConversionRuleLocal struct {
	Group    *string `pulumi:"group"`
	Username *string `pulumi:"username"`
}

// IdentityProviderConversionConversionRuleLocalInput is an input type that accepts IdentityProviderConversionConversionRuleLocalArgs and IdentityProviderConversionConversionRuleLocalOutput values.
// You can construct a concrete instance of `IdentityProviderConversionConversionRuleLocalInput` via:
//
//	IdentityProviderConversionConversionRuleLocalArgs{...}
type IdentityProviderConversionConversionRuleLocalInput interface {
	pulumi.Input

	ToIdentityProviderConversionConversionRuleLocalOutput() IdentityProviderConversionConversionRuleLocalOutput
	ToIdentityProviderConversionConversionRuleLocalOutputWithContext(context.Context) IdentityProviderConversionConversionRuleLocalOutput
}

type IdentityProviderConversionConversionRuleLocalArgs struct {
	Group    pulumi.StringPtrInput `pulumi:"group"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentityProviderConversionConversionRuleLocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionConversionRuleLocal)(nil)).Elem()
}

func (i IdentityProviderConversionConversionRuleLocalArgs) ToIdentityProviderConversionConversionRuleLocalOutput() IdentityProviderConversionConversionRuleLocalOutput {
	return i.ToIdentityProviderConversionConversionRuleLocalOutputWithContext(context.Background())
}

func (i IdentityProviderConversionConversionRuleLocalArgs) ToIdentityProviderConversionConversionRuleLocalOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleLocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionConversionRuleLocalOutput)
}

// IdentityProviderConversionConversionRuleLocalArrayInput is an input type that accepts IdentityProviderConversionConversionRuleLocalArray and IdentityProviderConversionConversionRuleLocalArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConversionConversionRuleLocalArrayInput` via:
//
//	IdentityProviderConversionConversionRuleLocalArray{ IdentityProviderConversionConversionRuleLocalArgs{...} }
type IdentityProviderConversionConversionRuleLocalArrayInput interface {
	pulumi.Input

	ToIdentityProviderConversionConversionRuleLocalArrayOutput() IdentityProviderConversionConversionRuleLocalArrayOutput
	ToIdentityProviderConversionConversionRuleLocalArrayOutputWithContext(context.Context) IdentityProviderConversionConversionRuleLocalArrayOutput
}

type IdentityProviderConversionConversionRuleLocalArray []IdentityProviderConversionConversionRuleLocalInput

func (IdentityProviderConversionConversionRuleLocalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionConversionRuleLocal)(nil)).Elem()
}

func (i IdentityProviderConversionConversionRuleLocalArray) ToIdentityProviderConversionConversionRuleLocalArrayOutput() IdentityProviderConversionConversionRuleLocalArrayOutput {
	return i.ToIdentityProviderConversionConversionRuleLocalArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConversionConversionRuleLocalArray) ToIdentityProviderConversionConversionRuleLocalArrayOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleLocalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionConversionRuleLocalArrayOutput)
}

type IdentityProviderConversionConversionRuleLocalOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionConversionRuleLocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionConversionRuleLocal)(nil)).Elem()
}

func (o IdentityProviderConversionConversionRuleLocalOutput) ToIdentityProviderConversionConversionRuleLocalOutput() IdentityProviderConversionConversionRuleLocalOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleLocalOutput) ToIdentityProviderConversionConversionRuleLocalOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleLocalOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleLocalOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConversionConversionRuleLocal) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderConversionConversionRuleLocalOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConversionConversionRuleLocal) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentityProviderConversionConversionRuleLocalArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionConversionRuleLocalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionConversionRuleLocal)(nil)).Elem()
}

func (o IdentityProviderConversionConversionRuleLocalArrayOutput) ToIdentityProviderConversionConversionRuleLocalArrayOutput() IdentityProviderConversionConversionRuleLocalArrayOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleLocalArrayOutput) ToIdentityProviderConversionConversionRuleLocalArrayOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleLocalArrayOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleLocalArrayOutput) Index(i pulumi.IntInput) IdentityProviderConversionConversionRuleLocalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConversionConversionRuleLocal {
		return vs[0].([]IdentityProviderConversionConversionRuleLocal)[vs[1].(int)]
	}).(IdentityProviderConversionConversionRuleLocalOutput)
}

type IdentityProviderConversionConversionRuleRemote struct {
	Attribute string   `pulumi:"attribute"`
	Condition *string  `pulumi:"condition"`
	Values    []string `pulumi:"values"`
}

// IdentityProviderConversionConversionRuleRemoteInput is an input type that accepts IdentityProviderConversionConversionRuleRemoteArgs and IdentityProviderConversionConversionRuleRemoteOutput values.
// You can construct a concrete instance of `IdentityProviderConversionConversionRuleRemoteInput` via:
//
//	IdentityProviderConversionConversionRuleRemoteArgs{...}
type IdentityProviderConversionConversionRuleRemoteInput interface {
	pulumi.Input

	ToIdentityProviderConversionConversionRuleRemoteOutput() IdentityProviderConversionConversionRuleRemoteOutput
	ToIdentityProviderConversionConversionRuleRemoteOutputWithContext(context.Context) IdentityProviderConversionConversionRuleRemoteOutput
}

type IdentityProviderConversionConversionRuleRemoteArgs struct {
	Attribute pulumi.StringInput      `pulumi:"attribute"`
	Condition pulumi.StringPtrInput   `pulumi:"condition"`
	Values    pulumi.StringArrayInput `pulumi:"values"`
}

func (IdentityProviderConversionConversionRuleRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionConversionRuleRemote)(nil)).Elem()
}

func (i IdentityProviderConversionConversionRuleRemoteArgs) ToIdentityProviderConversionConversionRuleRemoteOutput() IdentityProviderConversionConversionRuleRemoteOutput {
	return i.ToIdentityProviderConversionConversionRuleRemoteOutputWithContext(context.Background())
}

func (i IdentityProviderConversionConversionRuleRemoteArgs) ToIdentityProviderConversionConversionRuleRemoteOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionConversionRuleRemoteOutput)
}

// IdentityProviderConversionConversionRuleRemoteArrayInput is an input type that accepts IdentityProviderConversionConversionRuleRemoteArray and IdentityProviderConversionConversionRuleRemoteArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConversionConversionRuleRemoteArrayInput` via:
//
//	IdentityProviderConversionConversionRuleRemoteArray{ IdentityProviderConversionConversionRuleRemoteArgs{...} }
type IdentityProviderConversionConversionRuleRemoteArrayInput interface {
	pulumi.Input

	ToIdentityProviderConversionConversionRuleRemoteArrayOutput() IdentityProviderConversionConversionRuleRemoteArrayOutput
	ToIdentityProviderConversionConversionRuleRemoteArrayOutputWithContext(context.Context) IdentityProviderConversionConversionRuleRemoteArrayOutput
}

type IdentityProviderConversionConversionRuleRemoteArray []IdentityProviderConversionConversionRuleRemoteInput

func (IdentityProviderConversionConversionRuleRemoteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionConversionRuleRemote)(nil)).Elem()
}

func (i IdentityProviderConversionConversionRuleRemoteArray) ToIdentityProviderConversionConversionRuleRemoteArrayOutput() IdentityProviderConversionConversionRuleRemoteArrayOutput {
	return i.ToIdentityProviderConversionConversionRuleRemoteArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConversionConversionRuleRemoteArray) ToIdentityProviderConversionConversionRuleRemoteArrayOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleRemoteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionConversionRuleRemoteArrayOutput)
}

type IdentityProviderConversionConversionRuleRemoteOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionConversionRuleRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionConversionRuleRemote)(nil)).Elem()
}

func (o IdentityProviderConversionConversionRuleRemoteOutput) ToIdentityProviderConversionConversionRuleRemoteOutput() IdentityProviderConversionConversionRuleRemoteOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleRemoteOutput) ToIdentityProviderConversionConversionRuleRemoteOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleRemoteOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleRemoteOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConversionConversionRuleRemote) string { return v.Attribute }).(pulumi.StringOutput)
}

func (o IdentityProviderConversionConversionRuleRemoteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConversionConversionRuleRemote) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderConversionConversionRuleRemoteOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityProviderConversionConversionRuleRemote) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IdentityProviderConversionConversionRuleRemoteArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionConversionRuleRemoteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionConversionRuleRemote)(nil)).Elem()
}

func (o IdentityProviderConversionConversionRuleRemoteArrayOutput) ToIdentityProviderConversionConversionRuleRemoteArrayOutput() IdentityProviderConversionConversionRuleRemoteArrayOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleRemoteArrayOutput) ToIdentityProviderConversionConversionRuleRemoteArrayOutputWithContext(ctx context.Context) IdentityProviderConversionConversionRuleRemoteArrayOutput {
	return o
}

func (o IdentityProviderConversionConversionRuleRemoteArrayOutput) Index(i pulumi.IntInput) IdentityProviderConversionConversionRuleRemoteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConversionConversionRuleRemote {
		return vs[0].([]IdentityProviderConversionConversionRuleRemote)[vs[1].(int)]
	}).(IdentityProviderConversionConversionRuleRemoteOutput)
}

type IdentityProviderConversionRule struct {
	Locals  []IdentityProviderConversionRuleLocal  `pulumi:"locals"`
	Remotes []IdentityProviderConversionRuleRemote `pulumi:"remotes"`
}

// IdentityProviderConversionRuleInput is an input type that accepts IdentityProviderConversionRuleArgs and IdentityProviderConversionRuleOutput values.
// You can construct a concrete instance of `IdentityProviderConversionRuleInput` via:
//
//	IdentityProviderConversionRuleArgs{...}
type IdentityProviderConversionRuleInput interface {
	pulumi.Input

	ToIdentityProviderConversionRuleOutput() IdentityProviderConversionRuleOutput
	ToIdentityProviderConversionRuleOutputWithContext(context.Context) IdentityProviderConversionRuleOutput
}

type IdentityProviderConversionRuleArgs struct {
	Locals  IdentityProviderConversionRuleLocalArrayInput  `pulumi:"locals"`
	Remotes IdentityProviderConversionRuleRemoteArrayInput `pulumi:"remotes"`
}

func (IdentityProviderConversionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionRule)(nil)).Elem()
}

func (i IdentityProviderConversionRuleArgs) ToIdentityProviderConversionRuleOutput() IdentityProviderConversionRuleOutput {
	return i.ToIdentityProviderConversionRuleOutputWithContext(context.Background())
}

func (i IdentityProviderConversionRuleArgs) ToIdentityProviderConversionRuleOutputWithContext(ctx context.Context) IdentityProviderConversionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionRuleOutput)
}

// IdentityProviderConversionRuleArrayInput is an input type that accepts IdentityProviderConversionRuleArray and IdentityProviderConversionRuleArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConversionRuleArrayInput` via:
//
//	IdentityProviderConversionRuleArray{ IdentityProviderConversionRuleArgs{...} }
type IdentityProviderConversionRuleArrayInput interface {
	pulumi.Input

	ToIdentityProviderConversionRuleArrayOutput() IdentityProviderConversionRuleArrayOutput
	ToIdentityProviderConversionRuleArrayOutputWithContext(context.Context) IdentityProviderConversionRuleArrayOutput
}

type IdentityProviderConversionRuleArray []IdentityProviderConversionRuleInput

func (IdentityProviderConversionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionRule)(nil)).Elem()
}

func (i IdentityProviderConversionRuleArray) ToIdentityProviderConversionRuleArrayOutput() IdentityProviderConversionRuleArrayOutput {
	return i.ToIdentityProviderConversionRuleArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConversionRuleArray) ToIdentityProviderConversionRuleArrayOutputWithContext(ctx context.Context) IdentityProviderConversionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionRuleArrayOutput)
}

type IdentityProviderConversionRuleOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionRule)(nil)).Elem()
}

func (o IdentityProviderConversionRuleOutput) ToIdentityProviderConversionRuleOutput() IdentityProviderConversionRuleOutput {
	return o
}

func (o IdentityProviderConversionRuleOutput) ToIdentityProviderConversionRuleOutputWithContext(ctx context.Context) IdentityProviderConversionRuleOutput {
	return o
}

func (o IdentityProviderConversionRuleOutput) Locals() IdentityProviderConversionRuleLocalArrayOutput {
	return o.ApplyT(func(v IdentityProviderConversionRule) []IdentityProviderConversionRuleLocal { return v.Locals }).(IdentityProviderConversionRuleLocalArrayOutput)
}

func (o IdentityProviderConversionRuleOutput) Remotes() IdentityProviderConversionRuleRemoteArrayOutput {
	return o.ApplyT(func(v IdentityProviderConversionRule) []IdentityProviderConversionRuleRemote { return v.Remotes }).(IdentityProviderConversionRuleRemoteArrayOutput)
}

type IdentityProviderConversionRuleArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionRule)(nil)).Elem()
}

func (o IdentityProviderConversionRuleArrayOutput) ToIdentityProviderConversionRuleArrayOutput() IdentityProviderConversionRuleArrayOutput {
	return o
}

func (o IdentityProviderConversionRuleArrayOutput) ToIdentityProviderConversionRuleArrayOutputWithContext(ctx context.Context) IdentityProviderConversionRuleArrayOutput {
	return o
}

func (o IdentityProviderConversionRuleArrayOutput) Index(i pulumi.IntInput) IdentityProviderConversionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConversionRule {
		return vs[0].([]IdentityProviderConversionRule)[vs[1].(int)]
	}).(IdentityProviderConversionRuleOutput)
}

type IdentityProviderConversionRuleLocal struct {
	Group    *string `pulumi:"group"`
	Username *string `pulumi:"username"`
}

// IdentityProviderConversionRuleLocalInput is an input type that accepts IdentityProviderConversionRuleLocalArgs and IdentityProviderConversionRuleLocalOutput values.
// You can construct a concrete instance of `IdentityProviderConversionRuleLocalInput` via:
//
//	IdentityProviderConversionRuleLocalArgs{...}
type IdentityProviderConversionRuleLocalInput interface {
	pulumi.Input

	ToIdentityProviderConversionRuleLocalOutput() IdentityProviderConversionRuleLocalOutput
	ToIdentityProviderConversionRuleLocalOutputWithContext(context.Context) IdentityProviderConversionRuleLocalOutput
}

type IdentityProviderConversionRuleLocalArgs struct {
	Group    pulumi.StringPtrInput `pulumi:"group"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentityProviderConversionRuleLocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionRuleLocal)(nil)).Elem()
}

func (i IdentityProviderConversionRuleLocalArgs) ToIdentityProviderConversionRuleLocalOutput() IdentityProviderConversionRuleLocalOutput {
	return i.ToIdentityProviderConversionRuleLocalOutputWithContext(context.Background())
}

func (i IdentityProviderConversionRuleLocalArgs) ToIdentityProviderConversionRuleLocalOutputWithContext(ctx context.Context) IdentityProviderConversionRuleLocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionRuleLocalOutput)
}

// IdentityProviderConversionRuleLocalArrayInput is an input type that accepts IdentityProviderConversionRuleLocalArray and IdentityProviderConversionRuleLocalArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConversionRuleLocalArrayInput` via:
//
//	IdentityProviderConversionRuleLocalArray{ IdentityProviderConversionRuleLocalArgs{...} }
type IdentityProviderConversionRuleLocalArrayInput interface {
	pulumi.Input

	ToIdentityProviderConversionRuleLocalArrayOutput() IdentityProviderConversionRuleLocalArrayOutput
	ToIdentityProviderConversionRuleLocalArrayOutputWithContext(context.Context) IdentityProviderConversionRuleLocalArrayOutput
}

type IdentityProviderConversionRuleLocalArray []IdentityProviderConversionRuleLocalInput

func (IdentityProviderConversionRuleLocalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionRuleLocal)(nil)).Elem()
}

func (i IdentityProviderConversionRuleLocalArray) ToIdentityProviderConversionRuleLocalArrayOutput() IdentityProviderConversionRuleLocalArrayOutput {
	return i.ToIdentityProviderConversionRuleLocalArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConversionRuleLocalArray) ToIdentityProviderConversionRuleLocalArrayOutputWithContext(ctx context.Context) IdentityProviderConversionRuleLocalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionRuleLocalArrayOutput)
}

type IdentityProviderConversionRuleLocalOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionRuleLocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionRuleLocal)(nil)).Elem()
}

func (o IdentityProviderConversionRuleLocalOutput) ToIdentityProviderConversionRuleLocalOutput() IdentityProviderConversionRuleLocalOutput {
	return o
}

func (o IdentityProviderConversionRuleLocalOutput) ToIdentityProviderConversionRuleLocalOutputWithContext(ctx context.Context) IdentityProviderConversionRuleLocalOutput {
	return o
}

func (o IdentityProviderConversionRuleLocalOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConversionRuleLocal) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderConversionRuleLocalOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConversionRuleLocal) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentityProviderConversionRuleLocalArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionRuleLocalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionRuleLocal)(nil)).Elem()
}

func (o IdentityProviderConversionRuleLocalArrayOutput) ToIdentityProviderConversionRuleLocalArrayOutput() IdentityProviderConversionRuleLocalArrayOutput {
	return o
}

func (o IdentityProviderConversionRuleLocalArrayOutput) ToIdentityProviderConversionRuleLocalArrayOutputWithContext(ctx context.Context) IdentityProviderConversionRuleLocalArrayOutput {
	return o
}

func (o IdentityProviderConversionRuleLocalArrayOutput) Index(i pulumi.IntInput) IdentityProviderConversionRuleLocalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConversionRuleLocal {
		return vs[0].([]IdentityProviderConversionRuleLocal)[vs[1].(int)]
	}).(IdentityProviderConversionRuleLocalOutput)
}

type IdentityProviderConversionRuleRemote struct {
	Attribute *string  `pulumi:"attribute"`
	Condition *string  `pulumi:"condition"`
	Values    []string `pulumi:"values"`
}

// IdentityProviderConversionRuleRemoteInput is an input type that accepts IdentityProviderConversionRuleRemoteArgs and IdentityProviderConversionRuleRemoteOutput values.
// You can construct a concrete instance of `IdentityProviderConversionRuleRemoteInput` via:
//
//	IdentityProviderConversionRuleRemoteArgs{...}
type IdentityProviderConversionRuleRemoteInput interface {
	pulumi.Input

	ToIdentityProviderConversionRuleRemoteOutput() IdentityProviderConversionRuleRemoteOutput
	ToIdentityProviderConversionRuleRemoteOutputWithContext(context.Context) IdentityProviderConversionRuleRemoteOutput
}

type IdentityProviderConversionRuleRemoteArgs struct {
	Attribute pulumi.StringPtrInput   `pulumi:"attribute"`
	Condition pulumi.StringPtrInput   `pulumi:"condition"`
	Values    pulumi.StringArrayInput `pulumi:"values"`
}

func (IdentityProviderConversionRuleRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionRuleRemote)(nil)).Elem()
}

func (i IdentityProviderConversionRuleRemoteArgs) ToIdentityProviderConversionRuleRemoteOutput() IdentityProviderConversionRuleRemoteOutput {
	return i.ToIdentityProviderConversionRuleRemoteOutputWithContext(context.Background())
}

func (i IdentityProviderConversionRuleRemoteArgs) ToIdentityProviderConversionRuleRemoteOutputWithContext(ctx context.Context) IdentityProviderConversionRuleRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionRuleRemoteOutput)
}

// IdentityProviderConversionRuleRemoteArrayInput is an input type that accepts IdentityProviderConversionRuleRemoteArray and IdentityProviderConversionRuleRemoteArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConversionRuleRemoteArrayInput` via:
//
//	IdentityProviderConversionRuleRemoteArray{ IdentityProviderConversionRuleRemoteArgs{...} }
type IdentityProviderConversionRuleRemoteArrayInput interface {
	pulumi.Input

	ToIdentityProviderConversionRuleRemoteArrayOutput() IdentityProviderConversionRuleRemoteArrayOutput
	ToIdentityProviderConversionRuleRemoteArrayOutputWithContext(context.Context) IdentityProviderConversionRuleRemoteArrayOutput
}

type IdentityProviderConversionRuleRemoteArray []IdentityProviderConversionRuleRemoteInput

func (IdentityProviderConversionRuleRemoteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionRuleRemote)(nil)).Elem()
}

func (i IdentityProviderConversionRuleRemoteArray) ToIdentityProviderConversionRuleRemoteArrayOutput() IdentityProviderConversionRuleRemoteArrayOutput {
	return i.ToIdentityProviderConversionRuleRemoteArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConversionRuleRemoteArray) ToIdentityProviderConversionRuleRemoteArrayOutputWithContext(ctx context.Context) IdentityProviderConversionRuleRemoteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConversionRuleRemoteArrayOutput)
}

type IdentityProviderConversionRuleRemoteOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionRuleRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConversionRuleRemote)(nil)).Elem()
}

func (o IdentityProviderConversionRuleRemoteOutput) ToIdentityProviderConversionRuleRemoteOutput() IdentityProviderConversionRuleRemoteOutput {
	return o
}

func (o IdentityProviderConversionRuleRemoteOutput) ToIdentityProviderConversionRuleRemoteOutputWithContext(ctx context.Context) IdentityProviderConversionRuleRemoteOutput {
	return o
}

func (o IdentityProviderConversionRuleRemoteOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConversionRuleRemote) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderConversionRuleRemoteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConversionRuleRemote) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderConversionRuleRemoteOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityProviderConversionRuleRemote) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type IdentityProviderConversionRuleRemoteArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConversionRuleRemoteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConversionRuleRemote)(nil)).Elem()
}

func (o IdentityProviderConversionRuleRemoteArrayOutput) ToIdentityProviderConversionRuleRemoteArrayOutput() IdentityProviderConversionRuleRemoteArrayOutput {
	return o
}

func (o IdentityProviderConversionRuleRemoteArrayOutput) ToIdentityProviderConversionRuleRemoteArrayOutputWithContext(ctx context.Context) IdentityProviderConversionRuleRemoteArrayOutput {
	return o
}

func (o IdentityProviderConversionRuleRemoteArrayOutput) Index(i pulumi.IntInput) IdentityProviderConversionRuleRemoteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConversionRuleRemote {
		return vs[0].([]IdentityProviderConversionRuleRemote)[vs[1].(int)]
	}).(IdentityProviderConversionRuleRemoteOutput)
}

type LbPoolPersistence struct {
	CookieName *string `pulumi:"cookieName"`
	Timeout    *int    `pulumi:"timeout"`
	Type       string  `pulumi:"type"`
}

// LbPoolPersistenceInput is an input type that accepts LbPoolPersistenceArgs and LbPoolPersistenceOutput values.
// You can construct a concrete instance of `LbPoolPersistenceInput` via:
//
//	LbPoolPersistenceArgs{...}
type LbPoolPersistenceInput interface {
	pulumi.Input

	ToLbPoolPersistenceOutput() LbPoolPersistenceOutput
	ToLbPoolPersistenceOutputWithContext(context.Context) LbPoolPersistenceOutput
}

type LbPoolPersistenceArgs struct {
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	Timeout    pulumi.IntPtrInput    `pulumi:"timeout"`
	Type       pulumi.StringInput    `pulumi:"type"`
}

func (LbPoolPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbPoolPersistence)(nil)).Elem()
}

func (i LbPoolPersistenceArgs) ToLbPoolPersistenceOutput() LbPoolPersistenceOutput {
	return i.ToLbPoolPersistenceOutputWithContext(context.Background())
}

func (i LbPoolPersistenceArgs) ToLbPoolPersistenceOutputWithContext(ctx context.Context) LbPoolPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbPoolPersistenceOutput)
}

// LbPoolPersistenceArrayInput is an input type that accepts LbPoolPersistenceArray and LbPoolPersistenceArrayOutput values.
// You can construct a concrete instance of `LbPoolPersistenceArrayInput` via:
//
//	LbPoolPersistenceArray{ LbPoolPersistenceArgs{...} }
type LbPoolPersistenceArrayInput interface {
	pulumi.Input

	ToLbPoolPersistenceArrayOutput() LbPoolPersistenceArrayOutput
	ToLbPoolPersistenceArrayOutputWithContext(context.Context) LbPoolPersistenceArrayOutput
}

type LbPoolPersistenceArray []LbPoolPersistenceInput

func (LbPoolPersistenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbPoolPersistence)(nil)).Elem()
}

func (i LbPoolPersistenceArray) ToLbPoolPersistenceArrayOutput() LbPoolPersistenceArrayOutput {
	return i.ToLbPoolPersistenceArrayOutputWithContext(context.Background())
}

func (i LbPoolPersistenceArray) ToLbPoolPersistenceArrayOutputWithContext(ctx context.Context) LbPoolPersistenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbPoolPersistenceArrayOutput)
}

type LbPoolPersistenceOutput struct{ *pulumi.OutputState }

func (LbPoolPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbPoolPersistence)(nil)).Elem()
}

func (o LbPoolPersistenceOutput) ToLbPoolPersistenceOutput() LbPoolPersistenceOutput {
	return o
}

func (o LbPoolPersistenceOutput) ToLbPoolPersistenceOutputWithContext(ctx context.Context) LbPoolPersistenceOutput {
	return o
}

func (o LbPoolPersistenceOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbPoolPersistence) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

func (o LbPoolPersistenceOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbPoolPersistence) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

func (o LbPoolPersistenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LbPoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

type LbPoolPersistenceArrayOutput struct{ *pulumi.OutputState }

func (LbPoolPersistenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbPoolPersistence)(nil)).Elem()
}

func (o LbPoolPersistenceArrayOutput) ToLbPoolPersistenceArrayOutput() LbPoolPersistenceArrayOutput {
	return o
}

func (o LbPoolPersistenceArrayOutput) ToLbPoolPersistenceArrayOutputWithContext(ctx context.Context) LbPoolPersistenceArrayOutput {
	return o
}

func (o LbPoolPersistenceArrayOutput) Index(i pulumi.IntInput) LbPoolPersistenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LbPoolPersistence {
		return vs[0].([]LbPoolPersistence)[vs[1].(int)]
	}).(LbPoolPersistenceOutput)
}

type MapreduceClusterAnalysisCoreNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// MapreduceClusterAnalysisCoreNodesInput is an input type that accepts MapreduceClusterAnalysisCoreNodesArgs and MapreduceClusterAnalysisCoreNodesOutput values.
// You can construct a concrete instance of `MapreduceClusterAnalysisCoreNodesInput` via:
//
//	MapreduceClusterAnalysisCoreNodesArgs{...}
type MapreduceClusterAnalysisCoreNodesInput interface {
	pulumi.Input

	ToMapreduceClusterAnalysisCoreNodesOutput() MapreduceClusterAnalysisCoreNodesOutput
	ToMapreduceClusterAnalysisCoreNodesOutputWithContext(context.Context) MapreduceClusterAnalysisCoreNodesOutput
}

type MapreduceClusterAnalysisCoreNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (MapreduceClusterAnalysisCoreNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterAnalysisCoreNodes)(nil)).Elem()
}

func (i MapreduceClusterAnalysisCoreNodesArgs) ToMapreduceClusterAnalysisCoreNodesOutput() MapreduceClusterAnalysisCoreNodesOutput {
	return i.ToMapreduceClusterAnalysisCoreNodesOutputWithContext(context.Background())
}

func (i MapreduceClusterAnalysisCoreNodesArgs) ToMapreduceClusterAnalysisCoreNodesOutputWithContext(ctx context.Context) MapreduceClusterAnalysisCoreNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterAnalysisCoreNodesOutput)
}

func (i MapreduceClusterAnalysisCoreNodesArgs) ToMapreduceClusterAnalysisCoreNodesPtrOutput() MapreduceClusterAnalysisCoreNodesPtrOutput {
	return i.ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(context.Background())
}

func (i MapreduceClusterAnalysisCoreNodesArgs) ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterAnalysisCoreNodesOutput).ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(ctx)
}

// MapreduceClusterAnalysisCoreNodesPtrInput is an input type that accepts MapreduceClusterAnalysisCoreNodesArgs, MapreduceClusterAnalysisCoreNodesPtr and MapreduceClusterAnalysisCoreNodesPtrOutput values.
// You can construct a concrete instance of `MapreduceClusterAnalysisCoreNodesPtrInput` via:
//
//	        MapreduceClusterAnalysisCoreNodesArgs{...}
//
//	or:
//
//	        nil
type MapreduceClusterAnalysisCoreNodesPtrInput interface {
	pulumi.Input

	ToMapreduceClusterAnalysisCoreNodesPtrOutput() MapreduceClusterAnalysisCoreNodesPtrOutput
	ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(context.Context) MapreduceClusterAnalysisCoreNodesPtrOutput
}

type mapreduceClusterAnalysisCoreNodesPtrType MapreduceClusterAnalysisCoreNodesArgs

func MapreduceClusterAnalysisCoreNodesPtr(v *MapreduceClusterAnalysisCoreNodesArgs) MapreduceClusterAnalysisCoreNodesPtrInput {
	return (*mapreduceClusterAnalysisCoreNodesPtrType)(v)
}

func (*mapreduceClusterAnalysisCoreNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterAnalysisCoreNodes)(nil)).Elem()
}

func (i *mapreduceClusterAnalysisCoreNodesPtrType) ToMapreduceClusterAnalysisCoreNodesPtrOutput() MapreduceClusterAnalysisCoreNodesPtrOutput {
	return i.ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(context.Background())
}

func (i *mapreduceClusterAnalysisCoreNodesPtrType) ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterAnalysisCoreNodesPtrOutput)
}

type MapreduceClusterAnalysisCoreNodesOutput struct{ *pulumi.OutputState }

func (MapreduceClusterAnalysisCoreNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterAnalysisCoreNodes)(nil)).Elem()
}

func (o MapreduceClusterAnalysisCoreNodesOutput) ToMapreduceClusterAnalysisCoreNodesOutput() MapreduceClusterAnalysisCoreNodesOutput {
	return o
}

func (o MapreduceClusterAnalysisCoreNodesOutput) ToMapreduceClusterAnalysisCoreNodesOutputWithContext(ctx context.Context) MapreduceClusterAnalysisCoreNodesOutput {
	return o
}

func (o MapreduceClusterAnalysisCoreNodesOutput) ToMapreduceClusterAnalysisCoreNodesPtrOutput() MapreduceClusterAnalysisCoreNodesPtrOutput {
	return o.ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(context.Background())
}

func (o MapreduceClusterAnalysisCoreNodesOutput) ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisCoreNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapreduceClusterAnalysisCoreNodes) *MapreduceClusterAnalysisCoreNodes {
		return &v
	}).(MapreduceClusterAnalysisCoreNodesPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o MapreduceClusterAnalysisCoreNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisCoreNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type MapreduceClusterAnalysisCoreNodesPtrOutput struct{ *pulumi.OutputState }

func (MapreduceClusterAnalysisCoreNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterAnalysisCoreNodes)(nil)).Elem()
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) ToMapreduceClusterAnalysisCoreNodesPtrOutput() MapreduceClusterAnalysisCoreNodesPtrOutput {
	return o
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) ToMapreduceClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisCoreNodesPtrOutput {
	return o
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) Elem() MapreduceClusterAnalysisCoreNodesOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) MapreduceClusterAnalysisCoreNodes {
		if v != nil {
			return *v
		}
		var ret MapreduceClusterAnalysisCoreNodes
		return ret
	}).(MapreduceClusterAnalysisCoreNodesOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisCoreNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type MapreduceClusterAnalysisTaskNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// MapreduceClusterAnalysisTaskNodesInput is an input type that accepts MapreduceClusterAnalysisTaskNodesArgs and MapreduceClusterAnalysisTaskNodesOutput values.
// You can construct a concrete instance of `MapreduceClusterAnalysisTaskNodesInput` via:
//
//	MapreduceClusterAnalysisTaskNodesArgs{...}
type MapreduceClusterAnalysisTaskNodesInput interface {
	pulumi.Input

	ToMapreduceClusterAnalysisTaskNodesOutput() MapreduceClusterAnalysisTaskNodesOutput
	ToMapreduceClusterAnalysisTaskNodesOutputWithContext(context.Context) MapreduceClusterAnalysisTaskNodesOutput
}

type MapreduceClusterAnalysisTaskNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (MapreduceClusterAnalysisTaskNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterAnalysisTaskNodes)(nil)).Elem()
}

func (i MapreduceClusterAnalysisTaskNodesArgs) ToMapreduceClusterAnalysisTaskNodesOutput() MapreduceClusterAnalysisTaskNodesOutput {
	return i.ToMapreduceClusterAnalysisTaskNodesOutputWithContext(context.Background())
}

func (i MapreduceClusterAnalysisTaskNodesArgs) ToMapreduceClusterAnalysisTaskNodesOutputWithContext(ctx context.Context) MapreduceClusterAnalysisTaskNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterAnalysisTaskNodesOutput)
}

func (i MapreduceClusterAnalysisTaskNodesArgs) ToMapreduceClusterAnalysisTaskNodesPtrOutput() MapreduceClusterAnalysisTaskNodesPtrOutput {
	return i.ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(context.Background())
}

func (i MapreduceClusterAnalysisTaskNodesArgs) ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterAnalysisTaskNodesOutput).ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(ctx)
}

// MapreduceClusterAnalysisTaskNodesPtrInput is an input type that accepts MapreduceClusterAnalysisTaskNodesArgs, MapreduceClusterAnalysisTaskNodesPtr and MapreduceClusterAnalysisTaskNodesPtrOutput values.
// You can construct a concrete instance of `MapreduceClusterAnalysisTaskNodesPtrInput` via:
//
//	        MapreduceClusterAnalysisTaskNodesArgs{...}
//
//	or:
//
//	        nil
type MapreduceClusterAnalysisTaskNodesPtrInput interface {
	pulumi.Input

	ToMapreduceClusterAnalysisTaskNodesPtrOutput() MapreduceClusterAnalysisTaskNodesPtrOutput
	ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(context.Context) MapreduceClusterAnalysisTaskNodesPtrOutput
}

type mapreduceClusterAnalysisTaskNodesPtrType MapreduceClusterAnalysisTaskNodesArgs

func MapreduceClusterAnalysisTaskNodesPtr(v *MapreduceClusterAnalysisTaskNodesArgs) MapreduceClusterAnalysisTaskNodesPtrInput {
	return (*mapreduceClusterAnalysisTaskNodesPtrType)(v)
}

func (*mapreduceClusterAnalysisTaskNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterAnalysisTaskNodes)(nil)).Elem()
}

func (i *mapreduceClusterAnalysisTaskNodesPtrType) ToMapreduceClusterAnalysisTaskNodesPtrOutput() MapreduceClusterAnalysisTaskNodesPtrOutput {
	return i.ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(context.Background())
}

func (i *mapreduceClusterAnalysisTaskNodesPtrType) ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterAnalysisTaskNodesPtrOutput)
}

type MapreduceClusterAnalysisTaskNodesOutput struct{ *pulumi.OutputState }

func (MapreduceClusterAnalysisTaskNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterAnalysisTaskNodes)(nil)).Elem()
}

func (o MapreduceClusterAnalysisTaskNodesOutput) ToMapreduceClusterAnalysisTaskNodesOutput() MapreduceClusterAnalysisTaskNodesOutput {
	return o
}

func (o MapreduceClusterAnalysisTaskNodesOutput) ToMapreduceClusterAnalysisTaskNodesOutputWithContext(ctx context.Context) MapreduceClusterAnalysisTaskNodesOutput {
	return o
}

func (o MapreduceClusterAnalysisTaskNodesOutput) ToMapreduceClusterAnalysisTaskNodesPtrOutput() MapreduceClusterAnalysisTaskNodesPtrOutput {
	return o.ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(context.Background())
}

func (o MapreduceClusterAnalysisTaskNodesOutput) ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisTaskNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapreduceClusterAnalysisTaskNodes) *MapreduceClusterAnalysisTaskNodes {
		return &v
	}).(MapreduceClusterAnalysisTaskNodesPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o MapreduceClusterAnalysisTaskNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterAnalysisTaskNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type MapreduceClusterAnalysisTaskNodesPtrOutput struct{ *pulumi.OutputState }

func (MapreduceClusterAnalysisTaskNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterAnalysisTaskNodes)(nil)).Elem()
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) ToMapreduceClusterAnalysisTaskNodesPtrOutput() MapreduceClusterAnalysisTaskNodesPtrOutput {
	return o
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) ToMapreduceClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterAnalysisTaskNodesPtrOutput {
	return o
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) Elem() MapreduceClusterAnalysisTaskNodesOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) MapreduceClusterAnalysisTaskNodes {
		if v != nil {
			return *v
		}
		var ret MapreduceClusterAnalysisTaskNodes
		return ret
	}).(MapreduceClusterAnalysisTaskNodesOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterAnalysisTaskNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterAnalysisTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type MapreduceClusterBootstrapScript struct {
	// Whether the bootstrap action script runs only on active master nodes.
	ActiveMaster *bool `pulumi:"activeMaster"`
	// Whether the bootstrap action script is executed before component start.
	BeforeComponentStart *bool `pulumi:"beforeComponentStart"`
	// Whether the bootstrap action script involves root user operations.
	ExecuteNeedSudoRoot *bool `pulumi:"executeNeedSudoRoot"`
	// The action after the bootstrap action script fails to be executed.
	FailAction string `pulumi:"failAction"`
	// Name of a bootstrap action script.
	Name string `pulumi:"name"`
	// Name of the node group where the bootstrap action script is executed.
	Nodes []string `pulumi:"nodes"`
	// Bootstrap action script parameters.
	Parameters *string `pulumi:"parameters"`
	// The execution time of one bootstrap action script, in RFC-3339 format.
	StartTime *string `pulumi:"startTime"`
	// The status of one bootstrap action script.
	State *string `pulumi:"state"`
	// Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.
	Uri string `pulumi:"uri"`
}

// MapreduceClusterBootstrapScriptInput is an input type that accepts MapreduceClusterBootstrapScriptArgs and MapreduceClusterBootstrapScriptOutput values.
// You can construct a concrete instance of `MapreduceClusterBootstrapScriptInput` via:
//
//	MapreduceClusterBootstrapScriptArgs{...}
type MapreduceClusterBootstrapScriptInput interface {
	pulumi.Input

	ToMapreduceClusterBootstrapScriptOutput() MapreduceClusterBootstrapScriptOutput
	ToMapreduceClusterBootstrapScriptOutputWithContext(context.Context) MapreduceClusterBootstrapScriptOutput
}

type MapreduceClusterBootstrapScriptArgs struct {
	// Whether the bootstrap action script runs only on active master nodes.
	ActiveMaster pulumi.BoolPtrInput `pulumi:"activeMaster"`
	// Whether the bootstrap action script is executed before component start.
	BeforeComponentStart pulumi.BoolPtrInput `pulumi:"beforeComponentStart"`
	// Whether the bootstrap action script involves root user operations.
	ExecuteNeedSudoRoot pulumi.BoolPtrInput `pulumi:"executeNeedSudoRoot"`
	// The action after the bootstrap action script fails to be executed.
	FailAction pulumi.StringInput `pulumi:"failAction"`
	// Name of a bootstrap action script.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the node group where the bootstrap action script is executed.
	Nodes pulumi.StringArrayInput `pulumi:"nodes"`
	// Bootstrap action script parameters.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
	// The execution time of one bootstrap action script, in RFC-3339 format.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The status of one bootstrap action script.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (MapreduceClusterBootstrapScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterBootstrapScript)(nil)).Elem()
}

func (i MapreduceClusterBootstrapScriptArgs) ToMapreduceClusterBootstrapScriptOutput() MapreduceClusterBootstrapScriptOutput {
	return i.ToMapreduceClusterBootstrapScriptOutputWithContext(context.Background())
}

func (i MapreduceClusterBootstrapScriptArgs) ToMapreduceClusterBootstrapScriptOutputWithContext(ctx context.Context) MapreduceClusterBootstrapScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterBootstrapScriptOutput)
}

// MapreduceClusterBootstrapScriptArrayInput is an input type that accepts MapreduceClusterBootstrapScriptArray and MapreduceClusterBootstrapScriptArrayOutput values.
// You can construct a concrete instance of `MapreduceClusterBootstrapScriptArrayInput` via:
//
//	MapreduceClusterBootstrapScriptArray{ MapreduceClusterBootstrapScriptArgs{...} }
type MapreduceClusterBootstrapScriptArrayInput interface {
	pulumi.Input

	ToMapreduceClusterBootstrapScriptArrayOutput() MapreduceClusterBootstrapScriptArrayOutput
	ToMapreduceClusterBootstrapScriptArrayOutputWithContext(context.Context) MapreduceClusterBootstrapScriptArrayOutput
}

type MapreduceClusterBootstrapScriptArray []MapreduceClusterBootstrapScriptInput

func (MapreduceClusterBootstrapScriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterBootstrapScript)(nil)).Elem()
}

func (i MapreduceClusterBootstrapScriptArray) ToMapreduceClusterBootstrapScriptArrayOutput() MapreduceClusterBootstrapScriptArrayOutput {
	return i.ToMapreduceClusterBootstrapScriptArrayOutputWithContext(context.Background())
}

func (i MapreduceClusterBootstrapScriptArray) ToMapreduceClusterBootstrapScriptArrayOutputWithContext(ctx context.Context) MapreduceClusterBootstrapScriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterBootstrapScriptArrayOutput)
}

type MapreduceClusterBootstrapScriptOutput struct{ *pulumi.OutputState }

func (MapreduceClusterBootstrapScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterBootstrapScript)(nil)).Elem()
}

func (o MapreduceClusterBootstrapScriptOutput) ToMapreduceClusterBootstrapScriptOutput() MapreduceClusterBootstrapScriptOutput {
	return o
}

func (o MapreduceClusterBootstrapScriptOutput) ToMapreduceClusterBootstrapScriptOutputWithContext(ctx context.Context) MapreduceClusterBootstrapScriptOutput {
	return o
}

// Whether the bootstrap action script runs only on active master nodes.
func (o MapreduceClusterBootstrapScriptOutput) ActiveMaster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) *bool { return v.ActiveMaster }).(pulumi.BoolPtrOutput)
}

// Whether the bootstrap action script is executed before component start.
func (o MapreduceClusterBootstrapScriptOutput) BeforeComponentStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) *bool { return v.BeforeComponentStart }).(pulumi.BoolPtrOutput)
}

// Whether the bootstrap action script involves root user operations.
func (o MapreduceClusterBootstrapScriptOutput) ExecuteNeedSudoRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) *bool { return v.ExecuteNeedSudoRoot }).(pulumi.BoolPtrOutput)
}

// The action after the bootstrap action script fails to be executed.
func (o MapreduceClusterBootstrapScriptOutput) FailAction() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) string { return v.FailAction }).(pulumi.StringOutput)
}

// Name of a bootstrap action script.
func (o MapreduceClusterBootstrapScriptOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the node group where the bootstrap action script is executed.
func (o MapreduceClusterBootstrapScriptOutput) Nodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) []string { return v.Nodes }).(pulumi.StringArrayOutput)
}

// Bootstrap action script parameters.
func (o MapreduceClusterBootstrapScriptOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

// The execution time of one bootstrap action script, in RFC-3339 format.
func (o MapreduceClusterBootstrapScriptOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The status of one bootstrap action script.
func (o MapreduceClusterBootstrapScriptOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.
func (o MapreduceClusterBootstrapScriptOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterBootstrapScript) string { return v.Uri }).(pulumi.StringOutput)
}

type MapreduceClusterBootstrapScriptArrayOutput struct{ *pulumi.OutputState }

func (MapreduceClusterBootstrapScriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterBootstrapScript)(nil)).Elem()
}

func (o MapreduceClusterBootstrapScriptArrayOutput) ToMapreduceClusterBootstrapScriptArrayOutput() MapreduceClusterBootstrapScriptArrayOutput {
	return o
}

func (o MapreduceClusterBootstrapScriptArrayOutput) ToMapreduceClusterBootstrapScriptArrayOutputWithContext(ctx context.Context) MapreduceClusterBootstrapScriptArrayOutput {
	return o
}

func (o MapreduceClusterBootstrapScriptArrayOutput) Index(i pulumi.IntInput) MapreduceClusterBootstrapScriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MapreduceClusterBootstrapScript {
		return vs[0].([]MapreduceClusterBootstrapScript)[vs[1].(int)]
	}).(MapreduceClusterBootstrapScriptOutput)
}

type MapreduceClusterComponentConfig struct {
	Configs []MapreduceClusterComponentConfigConfig `pulumi:"configs"`
	Name    string                                  `pulumi:"name"`
}

// MapreduceClusterComponentConfigInput is an input type that accepts MapreduceClusterComponentConfigArgs and MapreduceClusterComponentConfigOutput values.
// You can construct a concrete instance of `MapreduceClusterComponentConfigInput` via:
//
//	MapreduceClusterComponentConfigArgs{...}
type MapreduceClusterComponentConfigInput interface {
	pulumi.Input

	ToMapreduceClusterComponentConfigOutput() MapreduceClusterComponentConfigOutput
	ToMapreduceClusterComponentConfigOutputWithContext(context.Context) MapreduceClusterComponentConfigOutput
}

type MapreduceClusterComponentConfigArgs struct {
	Configs MapreduceClusterComponentConfigConfigArrayInput `pulumi:"configs"`
	Name    pulumi.StringInput                              `pulumi:"name"`
}

func (MapreduceClusterComponentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterComponentConfig)(nil)).Elem()
}

func (i MapreduceClusterComponentConfigArgs) ToMapreduceClusterComponentConfigOutput() MapreduceClusterComponentConfigOutput {
	return i.ToMapreduceClusterComponentConfigOutputWithContext(context.Background())
}

func (i MapreduceClusterComponentConfigArgs) ToMapreduceClusterComponentConfigOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterComponentConfigOutput)
}

// MapreduceClusterComponentConfigArrayInput is an input type that accepts MapreduceClusterComponentConfigArray and MapreduceClusterComponentConfigArrayOutput values.
// You can construct a concrete instance of `MapreduceClusterComponentConfigArrayInput` via:
//
//	MapreduceClusterComponentConfigArray{ MapreduceClusterComponentConfigArgs{...} }
type MapreduceClusterComponentConfigArrayInput interface {
	pulumi.Input

	ToMapreduceClusterComponentConfigArrayOutput() MapreduceClusterComponentConfigArrayOutput
	ToMapreduceClusterComponentConfigArrayOutputWithContext(context.Context) MapreduceClusterComponentConfigArrayOutput
}

type MapreduceClusterComponentConfigArray []MapreduceClusterComponentConfigInput

func (MapreduceClusterComponentConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterComponentConfig)(nil)).Elem()
}

func (i MapreduceClusterComponentConfigArray) ToMapreduceClusterComponentConfigArrayOutput() MapreduceClusterComponentConfigArrayOutput {
	return i.ToMapreduceClusterComponentConfigArrayOutputWithContext(context.Background())
}

func (i MapreduceClusterComponentConfigArray) ToMapreduceClusterComponentConfigArrayOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterComponentConfigArrayOutput)
}

type MapreduceClusterComponentConfigOutput struct{ *pulumi.OutputState }

func (MapreduceClusterComponentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterComponentConfig)(nil)).Elem()
}

func (o MapreduceClusterComponentConfigOutput) ToMapreduceClusterComponentConfigOutput() MapreduceClusterComponentConfigOutput {
	return o
}

func (o MapreduceClusterComponentConfigOutput) ToMapreduceClusterComponentConfigOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigOutput {
	return o
}

func (o MapreduceClusterComponentConfigOutput) Configs() MapreduceClusterComponentConfigConfigArrayOutput {
	return o.ApplyT(func(v MapreduceClusterComponentConfig) []MapreduceClusterComponentConfigConfig { return v.Configs }).(MapreduceClusterComponentConfigConfigArrayOutput)
}

func (o MapreduceClusterComponentConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterComponentConfig) string { return v.Name }).(pulumi.StringOutput)
}

type MapreduceClusterComponentConfigArrayOutput struct{ *pulumi.OutputState }

func (MapreduceClusterComponentConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterComponentConfig)(nil)).Elem()
}

func (o MapreduceClusterComponentConfigArrayOutput) ToMapreduceClusterComponentConfigArrayOutput() MapreduceClusterComponentConfigArrayOutput {
	return o
}

func (o MapreduceClusterComponentConfigArrayOutput) ToMapreduceClusterComponentConfigArrayOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigArrayOutput {
	return o
}

func (o MapreduceClusterComponentConfigArrayOutput) Index(i pulumi.IntInput) MapreduceClusterComponentConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MapreduceClusterComponentConfig {
		return vs[0].([]MapreduceClusterComponentConfig)[vs[1].(int)]
	}).(MapreduceClusterComponentConfigOutput)
}

type MapreduceClusterComponentConfigConfig struct {
	ConfigFileName string `pulumi:"configFileName"`
	Key            string `pulumi:"key"`
	Value          string `pulumi:"value"`
}

// MapreduceClusterComponentConfigConfigInput is an input type that accepts MapreduceClusterComponentConfigConfigArgs and MapreduceClusterComponentConfigConfigOutput values.
// You can construct a concrete instance of `MapreduceClusterComponentConfigConfigInput` via:
//
//	MapreduceClusterComponentConfigConfigArgs{...}
type MapreduceClusterComponentConfigConfigInput interface {
	pulumi.Input

	ToMapreduceClusterComponentConfigConfigOutput() MapreduceClusterComponentConfigConfigOutput
	ToMapreduceClusterComponentConfigConfigOutputWithContext(context.Context) MapreduceClusterComponentConfigConfigOutput
}

type MapreduceClusterComponentConfigConfigArgs struct {
	ConfigFileName pulumi.StringInput `pulumi:"configFileName"`
	Key            pulumi.StringInput `pulumi:"key"`
	Value          pulumi.StringInput `pulumi:"value"`
}

func (MapreduceClusterComponentConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterComponentConfigConfig)(nil)).Elem()
}

func (i MapreduceClusterComponentConfigConfigArgs) ToMapreduceClusterComponentConfigConfigOutput() MapreduceClusterComponentConfigConfigOutput {
	return i.ToMapreduceClusterComponentConfigConfigOutputWithContext(context.Background())
}

func (i MapreduceClusterComponentConfigConfigArgs) ToMapreduceClusterComponentConfigConfigOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterComponentConfigConfigOutput)
}

// MapreduceClusterComponentConfigConfigArrayInput is an input type that accepts MapreduceClusterComponentConfigConfigArray and MapreduceClusterComponentConfigConfigArrayOutput values.
// You can construct a concrete instance of `MapreduceClusterComponentConfigConfigArrayInput` via:
//
//	MapreduceClusterComponentConfigConfigArray{ MapreduceClusterComponentConfigConfigArgs{...} }
type MapreduceClusterComponentConfigConfigArrayInput interface {
	pulumi.Input

	ToMapreduceClusterComponentConfigConfigArrayOutput() MapreduceClusterComponentConfigConfigArrayOutput
	ToMapreduceClusterComponentConfigConfigArrayOutputWithContext(context.Context) MapreduceClusterComponentConfigConfigArrayOutput
}

type MapreduceClusterComponentConfigConfigArray []MapreduceClusterComponentConfigConfigInput

func (MapreduceClusterComponentConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterComponentConfigConfig)(nil)).Elem()
}

func (i MapreduceClusterComponentConfigConfigArray) ToMapreduceClusterComponentConfigConfigArrayOutput() MapreduceClusterComponentConfigConfigArrayOutput {
	return i.ToMapreduceClusterComponentConfigConfigArrayOutputWithContext(context.Background())
}

func (i MapreduceClusterComponentConfigConfigArray) ToMapreduceClusterComponentConfigConfigArrayOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterComponentConfigConfigArrayOutput)
}

type MapreduceClusterComponentConfigConfigOutput struct{ *pulumi.OutputState }

func (MapreduceClusterComponentConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterComponentConfigConfig)(nil)).Elem()
}

func (o MapreduceClusterComponentConfigConfigOutput) ToMapreduceClusterComponentConfigConfigOutput() MapreduceClusterComponentConfigConfigOutput {
	return o
}

func (o MapreduceClusterComponentConfigConfigOutput) ToMapreduceClusterComponentConfigConfigOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigConfigOutput {
	return o
}

func (o MapreduceClusterComponentConfigConfigOutput) ConfigFileName() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterComponentConfigConfig) string { return v.ConfigFileName }).(pulumi.StringOutput)
}

func (o MapreduceClusterComponentConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterComponentConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

func (o MapreduceClusterComponentConfigConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterComponentConfigConfig) string { return v.Value }).(pulumi.StringOutput)
}

type MapreduceClusterComponentConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (MapreduceClusterComponentConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterComponentConfigConfig)(nil)).Elem()
}

func (o MapreduceClusterComponentConfigConfigArrayOutput) ToMapreduceClusterComponentConfigConfigArrayOutput() MapreduceClusterComponentConfigConfigArrayOutput {
	return o
}

func (o MapreduceClusterComponentConfigConfigArrayOutput) ToMapreduceClusterComponentConfigConfigArrayOutputWithContext(ctx context.Context) MapreduceClusterComponentConfigConfigArrayOutput {
	return o
}

func (o MapreduceClusterComponentConfigConfigArrayOutput) Index(i pulumi.IntInput) MapreduceClusterComponentConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MapreduceClusterComponentConfigConfig {
		return vs[0].([]MapreduceClusterComponentConfigConfig)[vs[1].(int)]
	}).(MapreduceClusterComponentConfigConfigOutput)
}

type MapreduceClusterCustomNode struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	GroupName       string   `pulumi:"groupName"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// MapreduceClusterCustomNodeInput is an input type that accepts MapreduceClusterCustomNodeArgs and MapreduceClusterCustomNodeOutput values.
// You can construct a concrete instance of `MapreduceClusterCustomNodeInput` via:
//
//	MapreduceClusterCustomNodeArgs{...}
type MapreduceClusterCustomNodeInput interface {
	pulumi.Input

	ToMapreduceClusterCustomNodeOutput() MapreduceClusterCustomNodeOutput
	ToMapreduceClusterCustomNodeOutputWithContext(context.Context) MapreduceClusterCustomNodeOutput
}

type MapreduceClusterCustomNodeArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	GroupName       pulumi.StringInput      `pulumi:"groupName"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (MapreduceClusterCustomNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterCustomNode)(nil)).Elem()
}

func (i MapreduceClusterCustomNodeArgs) ToMapreduceClusterCustomNodeOutput() MapreduceClusterCustomNodeOutput {
	return i.ToMapreduceClusterCustomNodeOutputWithContext(context.Background())
}

func (i MapreduceClusterCustomNodeArgs) ToMapreduceClusterCustomNodeOutputWithContext(ctx context.Context) MapreduceClusterCustomNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterCustomNodeOutput)
}

// MapreduceClusterCustomNodeArrayInput is an input type that accepts MapreduceClusterCustomNodeArray and MapreduceClusterCustomNodeArrayOutput values.
// You can construct a concrete instance of `MapreduceClusterCustomNodeArrayInput` via:
//
//	MapreduceClusterCustomNodeArray{ MapreduceClusterCustomNodeArgs{...} }
type MapreduceClusterCustomNodeArrayInput interface {
	pulumi.Input

	ToMapreduceClusterCustomNodeArrayOutput() MapreduceClusterCustomNodeArrayOutput
	ToMapreduceClusterCustomNodeArrayOutputWithContext(context.Context) MapreduceClusterCustomNodeArrayOutput
}

type MapreduceClusterCustomNodeArray []MapreduceClusterCustomNodeInput

func (MapreduceClusterCustomNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterCustomNode)(nil)).Elem()
}

func (i MapreduceClusterCustomNodeArray) ToMapreduceClusterCustomNodeArrayOutput() MapreduceClusterCustomNodeArrayOutput {
	return i.ToMapreduceClusterCustomNodeArrayOutputWithContext(context.Background())
}

func (i MapreduceClusterCustomNodeArray) ToMapreduceClusterCustomNodeArrayOutputWithContext(ctx context.Context) MapreduceClusterCustomNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterCustomNodeArrayOutput)
}

type MapreduceClusterCustomNodeOutput struct{ *pulumi.OutputState }

func (MapreduceClusterCustomNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterCustomNode)(nil)).Elem()
}

func (o MapreduceClusterCustomNodeOutput) ToMapreduceClusterCustomNodeOutput() MapreduceClusterCustomNodeOutput {
	return o
}

func (o MapreduceClusterCustomNodeOutput) ToMapreduceClusterCustomNodeOutputWithContext(ctx context.Context) MapreduceClusterCustomNodeOutput {
	return o
}

func (o MapreduceClusterCustomNodeOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterCustomNodeOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o MapreduceClusterCustomNodeOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterCustomNodeOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterCustomNodeOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o MapreduceClusterCustomNodeOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o MapreduceClusterCustomNodeOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterCustomNodeOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o MapreduceClusterCustomNodeOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o MapreduceClusterCustomNodeOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterCustomNode) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type MapreduceClusterCustomNodeArrayOutput struct{ *pulumi.OutputState }

func (MapreduceClusterCustomNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterCustomNode)(nil)).Elem()
}

func (o MapreduceClusterCustomNodeArrayOutput) ToMapreduceClusterCustomNodeArrayOutput() MapreduceClusterCustomNodeArrayOutput {
	return o
}

func (o MapreduceClusterCustomNodeArrayOutput) ToMapreduceClusterCustomNodeArrayOutputWithContext(ctx context.Context) MapreduceClusterCustomNodeArrayOutput {
	return o
}

func (o MapreduceClusterCustomNodeArrayOutput) Index(i pulumi.IntInput) MapreduceClusterCustomNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MapreduceClusterCustomNode {
		return vs[0].([]MapreduceClusterCustomNode)[vs[1].(int)]
	}).(MapreduceClusterCustomNodeOutput)
}

type MapreduceClusterExternalDatasource struct {
	ComponentName    string  `pulumi:"componentName"`
	DataConnectionId *string `pulumi:"dataConnectionId"`
	RoleType         string  `pulumi:"roleType"`
	SourceType       string  `pulumi:"sourceType"`
}

// MapreduceClusterExternalDatasourceInput is an input type that accepts MapreduceClusterExternalDatasourceArgs and MapreduceClusterExternalDatasourceOutput values.
// You can construct a concrete instance of `MapreduceClusterExternalDatasourceInput` via:
//
//	MapreduceClusterExternalDatasourceArgs{...}
type MapreduceClusterExternalDatasourceInput interface {
	pulumi.Input

	ToMapreduceClusterExternalDatasourceOutput() MapreduceClusterExternalDatasourceOutput
	ToMapreduceClusterExternalDatasourceOutputWithContext(context.Context) MapreduceClusterExternalDatasourceOutput
}

type MapreduceClusterExternalDatasourceArgs struct {
	ComponentName    pulumi.StringInput    `pulumi:"componentName"`
	DataConnectionId pulumi.StringPtrInput `pulumi:"dataConnectionId"`
	RoleType         pulumi.StringInput    `pulumi:"roleType"`
	SourceType       pulumi.StringInput    `pulumi:"sourceType"`
}

func (MapreduceClusterExternalDatasourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterExternalDatasource)(nil)).Elem()
}

func (i MapreduceClusterExternalDatasourceArgs) ToMapreduceClusterExternalDatasourceOutput() MapreduceClusterExternalDatasourceOutput {
	return i.ToMapreduceClusterExternalDatasourceOutputWithContext(context.Background())
}

func (i MapreduceClusterExternalDatasourceArgs) ToMapreduceClusterExternalDatasourceOutputWithContext(ctx context.Context) MapreduceClusterExternalDatasourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterExternalDatasourceOutput)
}

// MapreduceClusterExternalDatasourceArrayInput is an input type that accepts MapreduceClusterExternalDatasourceArray and MapreduceClusterExternalDatasourceArrayOutput values.
// You can construct a concrete instance of `MapreduceClusterExternalDatasourceArrayInput` via:
//
//	MapreduceClusterExternalDatasourceArray{ MapreduceClusterExternalDatasourceArgs{...} }
type MapreduceClusterExternalDatasourceArrayInput interface {
	pulumi.Input

	ToMapreduceClusterExternalDatasourceArrayOutput() MapreduceClusterExternalDatasourceArrayOutput
	ToMapreduceClusterExternalDatasourceArrayOutputWithContext(context.Context) MapreduceClusterExternalDatasourceArrayOutput
}

type MapreduceClusterExternalDatasourceArray []MapreduceClusterExternalDatasourceInput

func (MapreduceClusterExternalDatasourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterExternalDatasource)(nil)).Elem()
}

func (i MapreduceClusterExternalDatasourceArray) ToMapreduceClusterExternalDatasourceArrayOutput() MapreduceClusterExternalDatasourceArrayOutput {
	return i.ToMapreduceClusterExternalDatasourceArrayOutputWithContext(context.Background())
}

func (i MapreduceClusterExternalDatasourceArray) ToMapreduceClusterExternalDatasourceArrayOutputWithContext(ctx context.Context) MapreduceClusterExternalDatasourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterExternalDatasourceArrayOutput)
}

type MapreduceClusterExternalDatasourceOutput struct{ *pulumi.OutputState }

func (MapreduceClusterExternalDatasourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterExternalDatasource)(nil)).Elem()
}

func (o MapreduceClusterExternalDatasourceOutput) ToMapreduceClusterExternalDatasourceOutput() MapreduceClusterExternalDatasourceOutput {
	return o
}

func (o MapreduceClusterExternalDatasourceOutput) ToMapreduceClusterExternalDatasourceOutputWithContext(ctx context.Context) MapreduceClusterExternalDatasourceOutput {
	return o
}

func (o MapreduceClusterExternalDatasourceOutput) ComponentName() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterExternalDatasource) string { return v.ComponentName }).(pulumi.StringOutput)
}

func (o MapreduceClusterExternalDatasourceOutput) DataConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterExternalDatasource) *string { return v.DataConnectionId }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterExternalDatasourceOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterExternalDatasource) string { return v.RoleType }).(pulumi.StringOutput)
}

func (o MapreduceClusterExternalDatasourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterExternalDatasource) string { return v.SourceType }).(pulumi.StringOutput)
}

type MapreduceClusterExternalDatasourceArrayOutput struct{ *pulumi.OutputState }

func (MapreduceClusterExternalDatasourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MapreduceClusterExternalDatasource)(nil)).Elem()
}

func (o MapreduceClusterExternalDatasourceArrayOutput) ToMapreduceClusterExternalDatasourceArrayOutput() MapreduceClusterExternalDatasourceArrayOutput {
	return o
}

func (o MapreduceClusterExternalDatasourceArrayOutput) ToMapreduceClusterExternalDatasourceArrayOutputWithContext(ctx context.Context) MapreduceClusterExternalDatasourceArrayOutput {
	return o
}

func (o MapreduceClusterExternalDatasourceArrayOutput) Index(i pulumi.IntInput) MapreduceClusterExternalDatasourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MapreduceClusterExternalDatasource {
		return vs[0].([]MapreduceClusterExternalDatasource)[vs[1].(int)]
	}).(MapreduceClusterExternalDatasourceOutput)
}

type MapreduceClusterMasterNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// MapreduceClusterMasterNodesInput is an input type that accepts MapreduceClusterMasterNodesArgs and MapreduceClusterMasterNodesOutput values.
// You can construct a concrete instance of `MapreduceClusterMasterNodesInput` via:
//
//	MapreduceClusterMasterNodesArgs{...}
type MapreduceClusterMasterNodesInput interface {
	pulumi.Input

	ToMapreduceClusterMasterNodesOutput() MapreduceClusterMasterNodesOutput
	ToMapreduceClusterMasterNodesOutputWithContext(context.Context) MapreduceClusterMasterNodesOutput
}

type MapreduceClusterMasterNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (MapreduceClusterMasterNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterMasterNodes)(nil)).Elem()
}

func (i MapreduceClusterMasterNodesArgs) ToMapreduceClusterMasterNodesOutput() MapreduceClusterMasterNodesOutput {
	return i.ToMapreduceClusterMasterNodesOutputWithContext(context.Background())
}

func (i MapreduceClusterMasterNodesArgs) ToMapreduceClusterMasterNodesOutputWithContext(ctx context.Context) MapreduceClusterMasterNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterMasterNodesOutput)
}

func (i MapreduceClusterMasterNodesArgs) ToMapreduceClusterMasterNodesPtrOutput() MapreduceClusterMasterNodesPtrOutput {
	return i.ToMapreduceClusterMasterNodesPtrOutputWithContext(context.Background())
}

func (i MapreduceClusterMasterNodesArgs) ToMapreduceClusterMasterNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterMasterNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterMasterNodesOutput).ToMapreduceClusterMasterNodesPtrOutputWithContext(ctx)
}

// MapreduceClusterMasterNodesPtrInput is an input type that accepts MapreduceClusterMasterNodesArgs, MapreduceClusterMasterNodesPtr and MapreduceClusterMasterNodesPtrOutput values.
// You can construct a concrete instance of `MapreduceClusterMasterNodesPtrInput` via:
//
//	        MapreduceClusterMasterNodesArgs{...}
//
//	or:
//
//	        nil
type MapreduceClusterMasterNodesPtrInput interface {
	pulumi.Input

	ToMapreduceClusterMasterNodesPtrOutput() MapreduceClusterMasterNodesPtrOutput
	ToMapreduceClusterMasterNodesPtrOutputWithContext(context.Context) MapreduceClusterMasterNodesPtrOutput
}

type mapreduceClusterMasterNodesPtrType MapreduceClusterMasterNodesArgs

func MapreduceClusterMasterNodesPtr(v *MapreduceClusterMasterNodesArgs) MapreduceClusterMasterNodesPtrInput {
	return (*mapreduceClusterMasterNodesPtrType)(v)
}

func (*mapreduceClusterMasterNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterMasterNodes)(nil)).Elem()
}

func (i *mapreduceClusterMasterNodesPtrType) ToMapreduceClusterMasterNodesPtrOutput() MapreduceClusterMasterNodesPtrOutput {
	return i.ToMapreduceClusterMasterNodesPtrOutputWithContext(context.Background())
}

func (i *mapreduceClusterMasterNodesPtrType) ToMapreduceClusterMasterNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterMasterNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterMasterNodesPtrOutput)
}

type MapreduceClusterMasterNodesOutput struct{ *pulumi.OutputState }

func (MapreduceClusterMasterNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterMasterNodes)(nil)).Elem()
}

func (o MapreduceClusterMasterNodesOutput) ToMapreduceClusterMasterNodesOutput() MapreduceClusterMasterNodesOutput {
	return o
}

func (o MapreduceClusterMasterNodesOutput) ToMapreduceClusterMasterNodesOutputWithContext(ctx context.Context) MapreduceClusterMasterNodesOutput {
	return o
}

func (o MapreduceClusterMasterNodesOutput) ToMapreduceClusterMasterNodesPtrOutput() MapreduceClusterMasterNodesPtrOutput {
	return o.ToMapreduceClusterMasterNodesPtrOutputWithContext(context.Background())
}

func (o MapreduceClusterMasterNodesOutput) ToMapreduceClusterMasterNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterMasterNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapreduceClusterMasterNodes) *MapreduceClusterMasterNodes {
		return &v
	}).(MapreduceClusterMasterNodesPtrOutput)
}

func (o MapreduceClusterMasterNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterMasterNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o MapreduceClusterMasterNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterMasterNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterMasterNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o MapreduceClusterMasterNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterMasterNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o MapreduceClusterMasterNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o MapreduceClusterMasterNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterMasterNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type MapreduceClusterMasterNodesPtrOutput struct{ *pulumi.OutputState }

func (MapreduceClusterMasterNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterMasterNodes)(nil)).Elem()
}

func (o MapreduceClusterMasterNodesPtrOutput) ToMapreduceClusterMasterNodesPtrOutput() MapreduceClusterMasterNodesPtrOutput {
	return o
}

func (o MapreduceClusterMasterNodesPtrOutput) ToMapreduceClusterMasterNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterMasterNodesPtrOutput {
	return o
}

func (o MapreduceClusterMasterNodesPtrOutput) Elem() MapreduceClusterMasterNodesOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) MapreduceClusterMasterNodes {
		if v != nil {
			return *v
		}
		var ret MapreduceClusterMasterNodes
		return ret
	}).(MapreduceClusterMasterNodesOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterMasterNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type MapreduceClusterSmnNotify struct {
	// The subscription rule name.
	SubscriptionName string `pulumi:"subscriptionName"`
	// The Uniform Resource Name (URN) of the topic.
	TopicUrn string `pulumi:"topicUrn"`
}

// MapreduceClusterSmnNotifyInput is an input type that accepts MapreduceClusterSmnNotifyArgs and MapreduceClusterSmnNotifyOutput values.
// You can construct a concrete instance of `MapreduceClusterSmnNotifyInput` via:
//
//	MapreduceClusterSmnNotifyArgs{...}
type MapreduceClusterSmnNotifyInput interface {
	pulumi.Input

	ToMapreduceClusterSmnNotifyOutput() MapreduceClusterSmnNotifyOutput
	ToMapreduceClusterSmnNotifyOutputWithContext(context.Context) MapreduceClusterSmnNotifyOutput
}

type MapreduceClusterSmnNotifyArgs struct {
	// The subscription rule name.
	SubscriptionName pulumi.StringInput `pulumi:"subscriptionName"`
	// The Uniform Resource Name (URN) of the topic.
	TopicUrn pulumi.StringInput `pulumi:"topicUrn"`
}

func (MapreduceClusterSmnNotifyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterSmnNotify)(nil)).Elem()
}

func (i MapreduceClusterSmnNotifyArgs) ToMapreduceClusterSmnNotifyOutput() MapreduceClusterSmnNotifyOutput {
	return i.ToMapreduceClusterSmnNotifyOutputWithContext(context.Background())
}

func (i MapreduceClusterSmnNotifyArgs) ToMapreduceClusterSmnNotifyOutputWithContext(ctx context.Context) MapreduceClusterSmnNotifyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterSmnNotifyOutput)
}

func (i MapreduceClusterSmnNotifyArgs) ToMapreduceClusterSmnNotifyPtrOutput() MapreduceClusterSmnNotifyPtrOutput {
	return i.ToMapreduceClusterSmnNotifyPtrOutputWithContext(context.Background())
}

func (i MapreduceClusterSmnNotifyArgs) ToMapreduceClusterSmnNotifyPtrOutputWithContext(ctx context.Context) MapreduceClusterSmnNotifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterSmnNotifyOutput).ToMapreduceClusterSmnNotifyPtrOutputWithContext(ctx)
}

// MapreduceClusterSmnNotifyPtrInput is an input type that accepts MapreduceClusterSmnNotifyArgs, MapreduceClusterSmnNotifyPtr and MapreduceClusterSmnNotifyPtrOutput values.
// You can construct a concrete instance of `MapreduceClusterSmnNotifyPtrInput` via:
//
//	        MapreduceClusterSmnNotifyArgs{...}
//
//	or:
//
//	        nil
type MapreduceClusterSmnNotifyPtrInput interface {
	pulumi.Input

	ToMapreduceClusterSmnNotifyPtrOutput() MapreduceClusterSmnNotifyPtrOutput
	ToMapreduceClusterSmnNotifyPtrOutputWithContext(context.Context) MapreduceClusterSmnNotifyPtrOutput
}

type mapreduceClusterSmnNotifyPtrType MapreduceClusterSmnNotifyArgs

func MapreduceClusterSmnNotifyPtr(v *MapreduceClusterSmnNotifyArgs) MapreduceClusterSmnNotifyPtrInput {
	return (*mapreduceClusterSmnNotifyPtrType)(v)
}

func (*mapreduceClusterSmnNotifyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterSmnNotify)(nil)).Elem()
}

func (i *mapreduceClusterSmnNotifyPtrType) ToMapreduceClusterSmnNotifyPtrOutput() MapreduceClusterSmnNotifyPtrOutput {
	return i.ToMapreduceClusterSmnNotifyPtrOutputWithContext(context.Background())
}

func (i *mapreduceClusterSmnNotifyPtrType) ToMapreduceClusterSmnNotifyPtrOutputWithContext(ctx context.Context) MapreduceClusterSmnNotifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterSmnNotifyPtrOutput)
}

type MapreduceClusterSmnNotifyOutput struct{ *pulumi.OutputState }

func (MapreduceClusterSmnNotifyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterSmnNotify)(nil)).Elem()
}

func (o MapreduceClusterSmnNotifyOutput) ToMapreduceClusterSmnNotifyOutput() MapreduceClusterSmnNotifyOutput {
	return o
}

func (o MapreduceClusterSmnNotifyOutput) ToMapreduceClusterSmnNotifyOutputWithContext(ctx context.Context) MapreduceClusterSmnNotifyOutput {
	return o
}

func (o MapreduceClusterSmnNotifyOutput) ToMapreduceClusterSmnNotifyPtrOutput() MapreduceClusterSmnNotifyPtrOutput {
	return o.ToMapreduceClusterSmnNotifyPtrOutputWithContext(context.Background())
}

func (o MapreduceClusterSmnNotifyOutput) ToMapreduceClusterSmnNotifyPtrOutputWithContext(ctx context.Context) MapreduceClusterSmnNotifyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapreduceClusterSmnNotify) *MapreduceClusterSmnNotify {
		return &v
	}).(MapreduceClusterSmnNotifyPtrOutput)
}

// The subscription rule name.
func (o MapreduceClusterSmnNotifyOutput) SubscriptionName() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterSmnNotify) string { return v.SubscriptionName }).(pulumi.StringOutput)
}

// The Uniform Resource Name (URN) of the topic.
func (o MapreduceClusterSmnNotifyOutput) TopicUrn() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterSmnNotify) string { return v.TopicUrn }).(pulumi.StringOutput)
}

type MapreduceClusterSmnNotifyPtrOutput struct{ *pulumi.OutputState }

func (MapreduceClusterSmnNotifyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterSmnNotify)(nil)).Elem()
}

func (o MapreduceClusterSmnNotifyPtrOutput) ToMapreduceClusterSmnNotifyPtrOutput() MapreduceClusterSmnNotifyPtrOutput {
	return o
}

func (o MapreduceClusterSmnNotifyPtrOutput) ToMapreduceClusterSmnNotifyPtrOutputWithContext(ctx context.Context) MapreduceClusterSmnNotifyPtrOutput {
	return o
}

func (o MapreduceClusterSmnNotifyPtrOutput) Elem() MapreduceClusterSmnNotifyOutput {
	return o.ApplyT(func(v *MapreduceClusterSmnNotify) MapreduceClusterSmnNotify {
		if v != nil {
			return *v
		}
		var ret MapreduceClusterSmnNotify
		return ret
	}).(MapreduceClusterSmnNotifyOutput)
}

// The subscription rule name.
func (o MapreduceClusterSmnNotifyPtrOutput) SubscriptionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterSmnNotify) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionName
	}).(pulumi.StringPtrOutput)
}

// The Uniform Resource Name (URN) of the topic.
func (o MapreduceClusterSmnNotifyPtrOutput) TopicUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterSmnNotify) *string {
		if v == nil {
			return nil
		}
		return &v.TopicUrn
	}).(pulumi.StringPtrOutput)
}

type MapreduceClusterStreamingCoreNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// MapreduceClusterStreamingCoreNodesInput is an input type that accepts MapreduceClusterStreamingCoreNodesArgs and MapreduceClusterStreamingCoreNodesOutput values.
// You can construct a concrete instance of `MapreduceClusterStreamingCoreNodesInput` via:
//
//	MapreduceClusterStreamingCoreNodesArgs{...}
type MapreduceClusterStreamingCoreNodesInput interface {
	pulumi.Input

	ToMapreduceClusterStreamingCoreNodesOutput() MapreduceClusterStreamingCoreNodesOutput
	ToMapreduceClusterStreamingCoreNodesOutputWithContext(context.Context) MapreduceClusterStreamingCoreNodesOutput
}

type MapreduceClusterStreamingCoreNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (MapreduceClusterStreamingCoreNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterStreamingCoreNodes)(nil)).Elem()
}

func (i MapreduceClusterStreamingCoreNodesArgs) ToMapreduceClusterStreamingCoreNodesOutput() MapreduceClusterStreamingCoreNodesOutput {
	return i.ToMapreduceClusterStreamingCoreNodesOutputWithContext(context.Background())
}

func (i MapreduceClusterStreamingCoreNodesArgs) ToMapreduceClusterStreamingCoreNodesOutputWithContext(ctx context.Context) MapreduceClusterStreamingCoreNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterStreamingCoreNodesOutput)
}

func (i MapreduceClusterStreamingCoreNodesArgs) ToMapreduceClusterStreamingCoreNodesPtrOutput() MapreduceClusterStreamingCoreNodesPtrOutput {
	return i.ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(context.Background())
}

func (i MapreduceClusterStreamingCoreNodesArgs) ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterStreamingCoreNodesOutput).ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(ctx)
}

// MapreduceClusterStreamingCoreNodesPtrInput is an input type that accepts MapreduceClusterStreamingCoreNodesArgs, MapreduceClusterStreamingCoreNodesPtr and MapreduceClusterStreamingCoreNodesPtrOutput values.
// You can construct a concrete instance of `MapreduceClusterStreamingCoreNodesPtrInput` via:
//
//	        MapreduceClusterStreamingCoreNodesArgs{...}
//
//	or:
//
//	        nil
type MapreduceClusterStreamingCoreNodesPtrInput interface {
	pulumi.Input

	ToMapreduceClusterStreamingCoreNodesPtrOutput() MapreduceClusterStreamingCoreNodesPtrOutput
	ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(context.Context) MapreduceClusterStreamingCoreNodesPtrOutput
}

type mapreduceClusterStreamingCoreNodesPtrType MapreduceClusterStreamingCoreNodesArgs

func MapreduceClusterStreamingCoreNodesPtr(v *MapreduceClusterStreamingCoreNodesArgs) MapreduceClusterStreamingCoreNodesPtrInput {
	return (*mapreduceClusterStreamingCoreNodesPtrType)(v)
}

func (*mapreduceClusterStreamingCoreNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterStreamingCoreNodes)(nil)).Elem()
}

func (i *mapreduceClusterStreamingCoreNodesPtrType) ToMapreduceClusterStreamingCoreNodesPtrOutput() MapreduceClusterStreamingCoreNodesPtrOutput {
	return i.ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(context.Background())
}

func (i *mapreduceClusterStreamingCoreNodesPtrType) ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterStreamingCoreNodesPtrOutput)
}

type MapreduceClusterStreamingCoreNodesOutput struct{ *pulumi.OutputState }

func (MapreduceClusterStreamingCoreNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterStreamingCoreNodes)(nil)).Elem()
}

func (o MapreduceClusterStreamingCoreNodesOutput) ToMapreduceClusterStreamingCoreNodesOutput() MapreduceClusterStreamingCoreNodesOutput {
	return o
}

func (o MapreduceClusterStreamingCoreNodesOutput) ToMapreduceClusterStreamingCoreNodesOutputWithContext(ctx context.Context) MapreduceClusterStreamingCoreNodesOutput {
	return o
}

func (o MapreduceClusterStreamingCoreNodesOutput) ToMapreduceClusterStreamingCoreNodesPtrOutput() MapreduceClusterStreamingCoreNodesPtrOutput {
	return o.ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(context.Background())
}

func (o MapreduceClusterStreamingCoreNodesOutput) ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingCoreNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapreduceClusterStreamingCoreNodes) *MapreduceClusterStreamingCoreNodes {
		return &v
	}).(MapreduceClusterStreamingCoreNodesPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o MapreduceClusterStreamingCoreNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingCoreNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type MapreduceClusterStreamingCoreNodesPtrOutput struct{ *pulumi.OutputState }

func (MapreduceClusterStreamingCoreNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterStreamingCoreNodes)(nil)).Elem()
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) ToMapreduceClusterStreamingCoreNodesPtrOutput() MapreduceClusterStreamingCoreNodesPtrOutput {
	return o
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) ToMapreduceClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingCoreNodesPtrOutput {
	return o
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) Elem() MapreduceClusterStreamingCoreNodesOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) MapreduceClusterStreamingCoreNodes {
		if v != nil {
			return *v
		}
		var ret MapreduceClusterStreamingCoreNodes
		return ret
	}).(MapreduceClusterStreamingCoreNodesOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingCoreNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type MapreduceClusterStreamingTaskNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// MapreduceClusterStreamingTaskNodesInput is an input type that accepts MapreduceClusterStreamingTaskNodesArgs and MapreduceClusterStreamingTaskNodesOutput values.
// You can construct a concrete instance of `MapreduceClusterStreamingTaskNodesInput` via:
//
//	MapreduceClusterStreamingTaskNodesArgs{...}
type MapreduceClusterStreamingTaskNodesInput interface {
	pulumi.Input

	ToMapreduceClusterStreamingTaskNodesOutput() MapreduceClusterStreamingTaskNodesOutput
	ToMapreduceClusterStreamingTaskNodesOutputWithContext(context.Context) MapreduceClusterStreamingTaskNodesOutput
}

type MapreduceClusterStreamingTaskNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (MapreduceClusterStreamingTaskNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterStreamingTaskNodes)(nil)).Elem()
}

func (i MapreduceClusterStreamingTaskNodesArgs) ToMapreduceClusterStreamingTaskNodesOutput() MapreduceClusterStreamingTaskNodesOutput {
	return i.ToMapreduceClusterStreamingTaskNodesOutputWithContext(context.Background())
}

func (i MapreduceClusterStreamingTaskNodesArgs) ToMapreduceClusterStreamingTaskNodesOutputWithContext(ctx context.Context) MapreduceClusterStreamingTaskNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterStreamingTaskNodesOutput)
}

func (i MapreduceClusterStreamingTaskNodesArgs) ToMapreduceClusterStreamingTaskNodesPtrOutput() MapreduceClusterStreamingTaskNodesPtrOutput {
	return i.ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(context.Background())
}

func (i MapreduceClusterStreamingTaskNodesArgs) ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterStreamingTaskNodesOutput).ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(ctx)
}

// MapreduceClusterStreamingTaskNodesPtrInput is an input type that accepts MapreduceClusterStreamingTaskNodesArgs, MapreduceClusterStreamingTaskNodesPtr and MapreduceClusterStreamingTaskNodesPtrOutput values.
// You can construct a concrete instance of `MapreduceClusterStreamingTaskNodesPtrInput` via:
//
//	        MapreduceClusterStreamingTaskNodesArgs{...}
//
//	or:
//
//	        nil
type MapreduceClusterStreamingTaskNodesPtrInput interface {
	pulumi.Input

	ToMapreduceClusterStreamingTaskNodesPtrOutput() MapreduceClusterStreamingTaskNodesPtrOutput
	ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(context.Context) MapreduceClusterStreamingTaskNodesPtrOutput
}

type mapreduceClusterStreamingTaskNodesPtrType MapreduceClusterStreamingTaskNodesArgs

func MapreduceClusterStreamingTaskNodesPtr(v *MapreduceClusterStreamingTaskNodesArgs) MapreduceClusterStreamingTaskNodesPtrInput {
	return (*mapreduceClusterStreamingTaskNodesPtrType)(v)
}

func (*mapreduceClusterStreamingTaskNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterStreamingTaskNodes)(nil)).Elem()
}

func (i *mapreduceClusterStreamingTaskNodesPtrType) ToMapreduceClusterStreamingTaskNodesPtrOutput() MapreduceClusterStreamingTaskNodesPtrOutput {
	return i.ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(context.Background())
}

func (i *mapreduceClusterStreamingTaskNodesPtrType) ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapreduceClusterStreamingTaskNodesPtrOutput)
}

type MapreduceClusterStreamingTaskNodesOutput struct{ *pulumi.OutputState }

func (MapreduceClusterStreamingTaskNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapreduceClusterStreamingTaskNodes)(nil)).Elem()
}

func (o MapreduceClusterStreamingTaskNodesOutput) ToMapreduceClusterStreamingTaskNodesOutput() MapreduceClusterStreamingTaskNodesOutput {
	return o
}

func (o MapreduceClusterStreamingTaskNodesOutput) ToMapreduceClusterStreamingTaskNodesOutputWithContext(ctx context.Context) MapreduceClusterStreamingTaskNodesOutput {
	return o
}

func (o MapreduceClusterStreamingTaskNodesOutput) ToMapreduceClusterStreamingTaskNodesPtrOutput() MapreduceClusterStreamingTaskNodesPtrOutput {
	return o.ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(context.Background())
}

func (o MapreduceClusterStreamingTaskNodesOutput) ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingTaskNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapreduceClusterStreamingTaskNodes) *MapreduceClusterStreamingTaskNodes {
		return &v
	}).(MapreduceClusterStreamingTaskNodesPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o MapreduceClusterStreamingTaskNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v MapreduceClusterStreamingTaskNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type MapreduceClusterStreamingTaskNodesPtrOutput struct{ *pulumi.OutputState }

func (MapreduceClusterStreamingTaskNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapreduceClusterStreamingTaskNodes)(nil)).Elem()
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) ToMapreduceClusterStreamingTaskNodesPtrOutput() MapreduceClusterStreamingTaskNodesPtrOutput {
	return o
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) ToMapreduceClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) MapreduceClusterStreamingTaskNodesPtrOutput {
	return o
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) Elem() MapreduceClusterStreamingTaskNodesOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) MapreduceClusterStreamingTaskNodes {
		if v != nil {
			return *v
		}
		var ret MapreduceClusterStreamingTaskNodes
		return ret
	}).(MapreduceClusterStreamingTaskNodesOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o MapreduceClusterStreamingTaskNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapreduceClusterStreamingTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type NatGatewaySessionConf struct {
	// The ICMP session expiration time.
	IcmpSessionExpireTime *int `pulumi:"icmpSessionExpireTime"`
	// The TCP session expiration time.
	TcpSessionExpireTime *int `pulumi:"tcpSessionExpireTime"`
	// The duration of TIME_WAIT state when TCP connection is closed.
	TcpTimeWaitTime *int `pulumi:"tcpTimeWaitTime"`
	// The UDP session expiration time.
	UdpSessionExpireTime *int `pulumi:"udpSessionExpireTime"`
}

// NatGatewaySessionConfInput is an input type that accepts NatGatewaySessionConfArgs and NatGatewaySessionConfOutput values.
// You can construct a concrete instance of `NatGatewaySessionConfInput` via:
//
//	NatGatewaySessionConfArgs{...}
type NatGatewaySessionConfInput interface {
	pulumi.Input

	ToNatGatewaySessionConfOutput() NatGatewaySessionConfOutput
	ToNatGatewaySessionConfOutputWithContext(context.Context) NatGatewaySessionConfOutput
}

type NatGatewaySessionConfArgs struct {
	// The ICMP session expiration time.
	IcmpSessionExpireTime pulumi.IntPtrInput `pulumi:"icmpSessionExpireTime"`
	// The TCP session expiration time.
	TcpSessionExpireTime pulumi.IntPtrInput `pulumi:"tcpSessionExpireTime"`
	// The duration of TIME_WAIT state when TCP connection is closed.
	TcpTimeWaitTime pulumi.IntPtrInput `pulumi:"tcpTimeWaitTime"`
	// The UDP session expiration time.
	UdpSessionExpireTime pulumi.IntPtrInput `pulumi:"udpSessionExpireTime"`
}

func (NatGatewaySessionConfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySessionConf)(nil)).Elem()
}

func (i NatGatewaySessionConfArgs) ToNatGatewaySessionConfOutput() NatGatewaySessionConfOutput {
	return i.ToNatGatewaySessionConfOutputWithContext(context.Background())
}

func (i NatGatewaySessionConfArgs) ToNatGatewaySessionConfOutputWithContext(ctx context.Context) NatGatewaySessionConfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySessionConfOutput)
}

func (i NatGatewaySessionConfArgs) ToNatGatewaySessionConfPtrOutput() NatGatewaySessionConfPtrOutput {
	return i.ToNatGatewaySessionConfPtrOutputWithContext(context.Background())
}

func (i NatGatewaySessionConfArgs) ToNatGatewaySessionConfPtrOutputWithContext(ctx context.Context) NatGatewaySessionConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySessionConfOutput).ToNatGatewaySessionConfPtrOutputWithContext(ctx)
}

// NatGatewaySessionConfPtrInput is an input type that accepts NatGatewaySessionConfArgs, NatGatewaySessionConfPtr and NatGatewaySessionConfPtrOutput values.
// You can construct a concrete instance of `NatGatewaySessionConfPtrInput` via:
//
//	        NatGatewaySessionConfArgs{...}
//
//	or:
//
//	        nil
type NatGatewaySessionConfPtrInput interface {
	pulumi.Input

	ToNatGatewaySessionConfPtrOutput() NatGatewaySessionConfPtrOutput
	ToNatGatewaySessionConfPtrOutputWithContext(context.Context) NatGatewaySessionConfPtrOutput
}

type natGatewaySessionConfPtrType NatGatewaySessionConfArgs

func NatGatewaySessionConfPtr(v *NatGatewaySessionConfArgs) NatGatewaySessionConfPtrInput {
	return (*natGatewaySessionConfPtrType)(v)
}

func (*natGatewaySessionConfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySessionConf)(nil)).Elem()
}

func (i *natGatewaySessionConfPtrType) ToNatGatewaySessionConfPtrOutput() NatGatewaySessionConfPtrOutput {
	return i.ToNatGatewaySessionConfPtrOutputWithContext(context.Background())
}

func (i *natGatewaySessionConfPtrType) ToNatGatewaySessionConfPtrOutputWithContext(ctx context.Context) NatGatewaySessionConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySessionConfPtrOutput)
}

type NatGatewaySessionConfOutput struct{ *pulumi.OutputState }

func (NatGatewaySessionConfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySessionConf)(nil)).Elem()
}

func (o NatGatewaySessionConfOutput) ToNatGatewaySessionConfOutput() NatGatewaySessionConfOutput {
	return o
}

func (o NatGatewaySessionConfOutput) ToNatGatewaySessionConfOutputWithContext(ctx context.Context) NatGatewaySessionConfOutput {
	return o
}

func (o NatGatewaySessionConfOutput) ToNatGatewaySessionConfPtrOutput() NatGatewaySessionConfPtrOutput {
	return o.ToNatGatewaySessionConfPtrOutputWithContext(context.Background())
}

func (o NatGatewaySessionConfOutput) ToNatGatewaySessionConfPtrOutputWithContext(ctx context.Context) NatGatewaySessionConfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatGatewaySessionConf) *NatGatewaySessionConf {
		return &v
	}).(NatGatewaySessionConfPtrOutput)
}

// The ICMP session expiration time.
func (o NatGatewaySessionConfOutput) IcmpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGatewaySessionConf) *int { return v.IcmpSessionExpireTime }).(pulumi.IntPtrOutput)
}

// The TCP session expiration time.
func (o NatGatewaySessionConfOutput) TcpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGatewaySessionConf) *int { return v.TcpSessionExpireTime }).(pulumi.IntPtrOutput)
}

// The duration of TIME_WAIT state when TCP connection is closed.
func (o NatGatewaySessionConfOutput) TcpTimeWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGatewaySessionConf) *int { return v.TcpTimeWaitTime }).(pulumi.IntPtrOutput)
}

// The UDP session expiration time.
func (o NatGatewaySessionConfOutput) UdpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGatewaySessionConf) *int { return v.UdpSessionExpireTime }).(pulumi.IntPtrOutput)
}

type NatGatewaySessionConfPtrOutput struct{ *pulumi.OutputState }

func (NatGatewaySessionConfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySessionConf)(nil)).Elem()
}

func (o NatGatewaySessionConfPtrOutput) ToNatGatewaySessionConfPtrOutput() NatGatewaySessionConfPtrOutput {
	return o
}

func (o NatGatewaySessionConfPtrOutput) ToNatGatewaySessionConfPtrOutputWithContext(ctx context.Context) NatGatewaySessionConfPtrOutput {
	return o
}

func (o NatGatewaySessionConfPtrOutput) Elem() NatGatewaySessionConfOutput {
	return o.ApplyT(func(v *NatGatewaySessionConf) NatGatewaySessionConf {
		if v != nil {
			return *v
		}
		var ret NatGatewaySessionConf
		return ret
	}).(NatGatewaySessionConfOutput)
}

// The ICMP session expiration time.
func (o NatGatewaySessionConfPtrOutput) IcmpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.IcmpSessionExpireTime
	}).(pulumi.IntPtrOutput)
}

// The TCP session expiration time.
func (o NatGatewaySessionConfPtrOutput) TcpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.TcpSessionExpireTime
	}).(pulumi.IntPtrOutput)
}

// The duration of TIME_WAIT state when TCP connection is closed.
func (o NatGatewaySessionConfPtrOutput) TcpTimeWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.TcpTimeWaitTime
	}).(pulumi.IntPtrOutput)
}

// The UDP session expiration time.
func (o NatGatewaySessionConfPtrOutput) UdpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.UdpSessionExpireTime
	}).(pulumi.IntPtrOutput)
}

type NetworkingSecgroupRuleType struct {
	Action      *string `pulumi:"action"`
	Description *string `pulumi:"description"`
	Direction   *string `pulumi:"direction"`
	Ethertype   *string `pulumi:"ethertype"`
	Id          *string `pulumi:"id"`
	// schema: Deprecated
	PortRangeMax *int `pulumi:"portRangeMax"`
	// schema: Deprecated
	PortRangeMin         *int    `pulumi:"portRangeMin"`
	Ports                *string `pulumi:"ports"`
	Priority             *int    `pulumi:"priority"`
	Protocol             *string `pulumi:"protocol"`
	RemoteAddressGroupId *string `pulumi:"remoteAddressGroupId"`
	RemoteGroupId        *string `pulumi:"remoteGroupId"`
	RemoteIpPrefix       *string `pulumi:"remoteIpPrefix"`
}

// NetworkingSecgroupRuleTypeInput is an input type that accepts NetworkingSecgroupRuleTypeArgs and NetworkingSecgroupRuleTypeOutput values.
// You can construct a concrete instance of `NetworkingSecgroupRuleTypeInput` via:
//
//	NetworkingSecgroupRuleTypeArgs{...}
type NetworkingSecgroupRuleTypeInput interface {
	pulumi.Input

	ToNetworkingSecgroupRuleTypeOutput() NetworkingSecgroupRuleTypeOutput
	ToNetworkingSecgroupRuleTypeOutputWithContext(context.Context) NetworkingSecgroupRuleTypeOutput
}

type NetworkingSecgroupRuleTypeArgs struct {
	Action      pulumi.StringPtrInput `pulumi:"action"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Direction   pulumi.StringPtrInput `pulumi:"direction"`
	Ethertype   pulumi.StringPtrInput `pulumi:"ethertype"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// schema: Deprecated
	PortRangeMax pulumi.IntPtrInput `pulumi:"portRangeMax"`
	// schema: Deprecated
	PortRangeMin         pulumi.IntPtrInput    `pulumi:"portRangeMin"`
	Ports                pulumi.StringPtrInput `pulumi:"ports"`
	Priority             pulumi.IntPtrInput    `pulumi:"priority"`
	Protocol             pulumi.StringPtrInput `pulumi:"protocol"`
	RemoteAddressGroupId pulumi.StringPtrInput `pulumi:"remoteAddressGroupId"`
	RemoteGroupId        pulumi.StringPtrInput `pulumi:"remoteGroupId"`
	RemoteIpPrefix       pulumi.StringPtrInput `pulumi:"remoteIpPrefix"`
}

func (NetworkingSecgroupRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkingSecgroupRuleType)(nil)).Elem()
}

func (i NetworkingSecgroupRuleTypeArgs) ToNetworkingSecgroupRuleTypeOutput() NetworkingSecgroupRuleTypeOutput {
	return i.ToNetworkingSecgroupRuleTypeOutputWithContext(context.Background())
}

func (i NetworkingSecgroupRuleTypeArgs) ToNetworkingSecgroupRuleTypeOutputWithContext(ctx context.Context) NetworkingSecgroupRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingSecgroupRuleTypeOutput)
}

// NetworkingSecgroupRuleTypeArrayInput is an input type that accepts NetworkingSecgroupRuleTypeArray and NetworkingSecgroupRuleTypeArrayOutput values.
// You can construct a concrete instance of `NetworkingSecgroupRuleTypeArrayInput` via:
//
//	NetworkingSecgroupRuleTypeArray{ NetworkingSecgroupRuleTypeArgs{...} }
type NetworkingSecgroupRuleTypeArrayInput interface {
	pulumi.Input

	ToNetworkingSecgroupRuleTypeArrayOutput() NetworkingSecgroupRuleTypeArrayOutput
	ToNetworkingSecgroupRuleTypeArrayOutputWithContext(context.Context) NetworkingSecgroupRuleTypeArrayOutput
}

type NetworkingSecgroupRuleTypeArray []NetworkingSecgroupRuleTypeInput

func (NetworkingSecgroupRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkingSecgroupRuleType)(nil)).Elem()
}

func (i NetworkingSecgroupRuleTypeArray) ToNetworkingSecgroupRuleTypeArrayOutput() NetworkingSecgroupRuleTypeArrayOutput {
	return i.ToNetworkingSecgroupRuleTypeArrayOutputWithContext(context.Background())
}

func (i NetworkingSecgroupRuleTypeArray) ToNetworkingSecgroupRuleTypeArrayOutputWithContext(ctx context.Context) NetworkingSecgroupRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingSecgroupRuleTypeArrayOutput)
}

type NetworkingSecgroupRuleTypeOutput struct{ *pulumi.OutputState }

func (NetworkingSecgroupRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkingSecgroupRuleType)(nil)).Elem()
}

func (o NetworkingSecgroupRuleTypeOutput) ToNetworkingSecgroupRuleTypeOutput() NetworkingSecgroupRuleTypeOutput {
	return o
}

func (o NetworkingSecgroupRuleTypeOutput) ToNetworkingSecgroupRuleTypeOutputWithContext(ctx context.Context) NetworkingSecgroupRuleTypeOutput {
	return o
}

func (o NetworkingSecgroupRuleTypeOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) Ethertype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.Ethertype }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o NetworkingSecgroupRuleTypeOutput) PortRangeMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *int { return v.PortRangeMax }).(pulumi.IntPtrOutput)
}

// schema: Deprecated
func (o NetworkingSecgroupRuleTypeOutput) PortRangeMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *int { return v.PortRangeMin }).(pulumi.IntPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) RemoteAddressGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.RemoteAddressGroupId }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) RemoteGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.RemoteGroupId }).(pulumi.StringPtrOutput)
}

func (o NetworkingSecgroupRuleTypeOutput) RemoteIpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingSecgroupRuleType) *string { return v.RemoteIpPrefix }).(pulumi.StringPtrOutput)
}

type NetworkingSecgroupRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkingSecgroupRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkingSecgroupRuleType)(nil)).Elem()
}

func (o NetworkingSecgroupRuleTypeArrayOutput) ToNetworkingSecgroupRuleTypeArrayOutput() NetworkingSecgroupRuleTypeArrayOutput {
	return o
}

func (o NetworkingSecgroupRuleTypeArrayOutput) ToNetworkingSecgroupRuleTypeArrayOutputWithContext(ctx context.Context) NetworkingSecgroupRuleTypeArrayOutput {
	return o
}

func (o NetworkingSecgroupRuleTypeArrayOutput) Index(i pulumi.IntInput) NetworkingSecgroupRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkingSecgroupRuleType {
		return vs[0].([]NetworkingSecgroupRuleType)[vs[1].(int)]
	}).(NetworkingSecgroupRuleTypeOutput)
}

type ObsBucketAclAccountPermission struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls []string `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets []string `pulumi:"accessToBuckets"`
	// Specifies the account id to authorize. The account id cannot be the bucket owner,
	// and must be unique.
	AccountId string `pulumi:"accountId"`
}

// ObsBucketAclAccountPermissionInput is an input type that accepts ObsBucketAclAccountPermissionArgs and ObsBucketAclAccountPermissionOutput values.
// You can construct a concrete instance of `ObsBucketAclAccountPermissionInput` via:
//
//	ObsBucketAclAccountPermissionArgs{...}
type ObsBucketAclAccountPermissionInput interface {
	pulumi.Input

	ToObsBucketAclAccountPermissionOutput() ObsBucketAclAccountPermissionOutput
	ToObsBucketAclAccountPermissionOutputWithContext(context.Context) ObsBucketAclAccountPermissionOutput
}

type ObsBucketAclAccountPermissionArgs struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls pulumi.StringArrayInput `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets pulumi.StringArrayInput `pulumi:"accessToBuckets"`
	// Specifies the account id to authorize. The account id cannot be the bucket owner,
	// and must be unique.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (ObsBucketAclAccountPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclAccountPermission)(nil)).Elem()
}

func (i ObsBucketAclAccountPermissionArgs) ToObsBucketAclAccountPermissionOutput() ObsBucketAclAccountPermissionOutput {
	return i.ToObsBucketAclAccountPermissionOutputWithContext(context.Background())
}

func (i ObsBucketAclAccountPermissionArgs) ToObsBucketAclAccountPermissionOutputWithContext(ctx context.Context) ObsBucketAclAccountPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclAccountPermissionOutput)
}

// ObsBucketAclAccountPermissionArrayInput is an input type that accepts ObsBucketAclAccountPermissionArray and ObsBucketAclAccountPermissionArrayOutput values.
// You can construct a concrete instance of `ObsBucketAclAccountPermissionArrayInput` via:
//
//	ObsBucketAclAccountPermissionArray{ ObsBucketAclAccountPermissionArgs{...} }
type ObsBucketAclAccountPermissionArrayInput interface {
	pulumi.Input

	ToObsBucketAclAccountPermissionArrayOutput() ObsBucketAclAccountPermissionArrayOutput
	ToObsBucketAclAccountPermissionArrayOutputWithContext(context.Context) ObsBucketAclAccountPermissionArrayOutput
}

type ObsBucketAclAccountPermissionArray []ObsBucketAclAccountPermissionInput

func (ObsBucketAclAccountPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketAclAccountPermission)(nil)).Elem()
}

func (i ObsBucketAclAccountPermissionArray) ToObsBucketAclAccountPermissionArrayOutput() ObsBucketAclAccountPermissionArrayOutput {
	return i.ToObsBucketAclAccountPermissionArrayOutputWithContext(context.Background())
}

func (i ObsBucketAclAccountPermissionArray) ToObsBucketAclAccountPermissionArrayOutputWithContext(ctx context.Context) ObsBucketAclAccountPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclAccountPermissionArrayOutput)
}

type ObsBucketAclAccountPermissionOutput struct{ *pulumi.OutputState }

func (ObsBucketAclAccountPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclAccountPermission)(nil)).Elem()
}

func (o ObsBucketAclAccountPermissionOutput) ToObsBucketAclAccountPermissionOutput() ObsBucketAclAccountPermissionOutput {
	return o
}

func (o ObsBucketAclAccountPermissionOutput) ToObsBucketAclAccountPermissionOutputWithContext(ctx context.Context) ObsBucketAclAccountPermissionOutput {
	return o
}

// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
func (o ObsBucketAclAccountPermissionOutput) AccessToAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclAccountPermission) []string { return v.AccessToAcls }).(pulumi.StringArrayOutput)
}

// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
func (o ObsBucketAclAccountPermissionOutput) AccessToBuckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclAccountPermission) []string { return v.AccessToBuckets }).(pulumi.StringArrayOutput)
}

// Specifies the account id to authorize. The account id cannot be the bucket owner,
// and must be unique.
func (o ObsBucketAclAccountPermissionOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ObsBucketAclAccountPermission) string { return v.AccountId }).(pulumi.StringOutput)
}

type ObsBucketAclAccountPermissionArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketAclAccountPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketAclAccountPermission)(nil)).Elem()
}

func (o ObsBucketAclAccountPermissionArrayOutput) ToObsBucketAclAccountPermissionArrayOutput() ObsBucketAclAccountPermissionArrayOutput {
	return o
}

func (o ObsBucketAclAccountPermissionArrayOutput) ToObsBucketAclAccountPermissionArrayOutputWithContext(ctx context.Context) ObsBucketAclAccountPermissionArrayOutput {
	return o
}

func (o ObsBucketAclAccountPermissionArrayOutput) Index(i pulumi.IntInput) ObsBucketAclAccountPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketAclAccountPermission {
		return vs[0].([]ObsBucketAclAccountPermission)[vs[1].(int)]
	}).(ObsBucketAclAccountPermissionOutput)
}

type ObsBucketAclLogDeliveryUserPermission struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls []string `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets []string `pulumi:"accessToBuckets"`
}

// ObsBucketAclLogDeliveryUserPermissionInput is an input type that accepts ObsBucketAclLogDeliveryUserPermissionArgs and ObsBucketAclLogDeliveryUserPermissionOutput values.
// You can construct a concrete instance of `ObsBucketAclLogDeliveryUserPermissionInput` via:
//
//	ObsBucketAclLogDeliveryUserPermissionArgs{...}
type ObsBucketAclLogDeliveryUserPermissionInput interface {
	pulumi.Input

	ToObsBucketAclLogDeliveryUserPermissionOutput() ObsBucketAclLogDeliveryUserPermissionOutput
	ToObsBucketAclLogDeliveryUserPermissionOutputWithContext(context.Context) ObsBucketAclLogDeliveryUserPermissionOutput
}

type ObsBucketAclLogDeliveryUserPermissionArgs struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls pulumi.StringArrayInput `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets pulumi.StringArrayInput `pulumi:"accessToBuckets"`
}

func (ObsBucketAclLogDeliveryUserPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclLogDeliveryUserPermission)(nil)).Elem()
}

func (i ObsBucketAclLogDeliveryUserPermissionArgs) ToObsBucketAclLogDeliveryUserPermissionOutput() ObsBucketAclLogDeliveryUserPermissionOutput {
	return i.ToObsBucketAclLogDeliveryUserPermissionOutputWithContext(context.Background())
}

func (i ObsBucketAclLogDeliveryUserPermissionArgs) ToObsBucketAclLogDeliveryUserPermissionOutputWithContext(ctx context.Context) ObsBucketAclLogDeliveryUserPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclLogDeliveryUserPermissionOutput)
}

func (i ObsBucketAclLogDeliveryUserPermissionArgs) ToObsBucketAclLogDeliveryUserPermissionPtrOutput() ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return i.ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(context.Background())
}

func (i ObsBucketAclLogDeliveryUserPermissionArgs) ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclLogDeliveryUserPermissionOutput).ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(ctx)
}

// ObsBucketAclLogDeliveryUserPermissionPtrInput is an input type that accepts ObsBucketAclLogDeliveryUserPermissionArgs, ObsBucketAclLogDeliveryUserPermissionPtr and ObsBucketAclLogDeliveryUserPermissionPtrOutput values.
// You can construct a concrete instance of `ObsBucketAclLogDeliveryUserPermissionPtrInput` via:
//
//	        ObsBucketAclLogDeliveryUserPermissionArgs{...}
//
//	or:
//
//	        nil
type ObsBucketAclLogDeliveryUserPermissionPtrInput interface {
	pulumi.Input

	ToObsBucketAclLogDeliveryUserPermissionPtrOutput() ObsBucketAclLogDeliveryUserPermissionPtrOutput
	ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(context.Context) ObsBucketAclLogDeliveryUserPermissionPtrOutput
}

type obsBucketAclLogDeliveryUserPermissionPtrType ObsBucketAclLogDeliveryUserPermissionArgs

func ObsBucketAclLogDeliveryUserPermissionPtr(v *ObsBucketAclLogDeliveryUserPermissionArgs) ObsBucketAclLogDeliveryUserPermissionPtrInput {
	return (*obsBucketAclLogDeliveryUserPermissionPtrType)(v)
}

func (*obsBucketAclLogDeliveryUserPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketAclLogDeliveryUserPermission)(nil)).Elem()
}

func (i *obsBucketAclLogDeliveryUserPermissionPtrType) ToObsBucketAclLogDeliveryUserPermissionPtrOutput() ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return i.ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(context.Background())
}

func (i *obsBucketAclLogDeliveryUserPermissionPtrType) ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclLogDeliveryUserPermissionPtrOutput)
}

type ObsBucketAclLogDeliveryUserPermissionOutput struct{ *pulumi.OutputState }

func (ObsBucketAclLogDeliveryUserPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclLogDeliveryUserPermission)(nil)).Elem()
}

func (o ObsBucketAclLogDeliveryUserPermissionOutput) ToObsBucketAclLogDeliveryUserPermissionOutput() ObsBucketAclLogDeliveryUserPermissionOutput {
	return o
}

func (o ObsBucketAclLogDeliveryUserPermissionOutput) ToObsBucketAclLogDeliveryUserPermissionOutputWithContext(ctx context.Context) ObsBucketAclLogDeliveryUserPermissionOutput {
	return o
}

func (o ObsBucketAclLogDeliveryUserPermissionOutput) ToObsBucketAclLogDeliveryUserPermissionPtrOutput() ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return o.ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(context.Background())
}

func (o ObsBucketAclLogDeliveryUserPermissionOutput) ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObsBucketAclLogDeliveryUserPermission) *ObsBucketAclLogDeliveryUserPermission {
		return &v
	}).(ObsBucketAclLogDeliveryUserPermissionPtrOutput)
}

// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
func (o ObsBucketAclLogDeliveryUserPermissionOutput) AccessToAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclLogDeliveryUserPermission) []string { return v.AccessToAcls }).(pulumi.StringArrayOutput)
}

// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
func (o ObsBucketAclLogDeliveryUserPermissionOutput) AccessToBuckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclLogDeliveryUserPermission) []string { return v.AccessToBuckets }).(pulumi.StringArrayOutput)
}

type ObsBucketAclLogDeliveryUserPermissionPtrOutput struct{ *pulumi.OutputState }

func (ObsBucketAclLogDeliveryUserPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketAclLogDeliveryUserPermission)(nil)).Elem()
}

func (o ObsBucketAclLogDeliveryUserPermissionPtrOutput) ToObsBucketAclLogDeliveryUserPermissionPtrOutput() ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return o
}

func (o ObsBucketAclLogDeliveryUserPermissionPtrOutput) ToObsBucketAclLogDeliveryUserPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclLogDeliveryUserPermissionPtrOutput {
	return o
}

func (o ObsBucketAclLogDeliveryUserPermissionPtrOutput) Elem() ObsBucketAclLogDeliveryUserPermissionOutput {
	return o.ApplyT(func(v *ObsBucketAclLogDeliveryUserPermission) ObsBucketAclLogDeliveryUserPermission {
		if v != nil {
			return *v
		}
		var ret ObsBucketAclLogDeliveryUserPermission
		return ret
	}).(ObsBucketAclLogDeliveryUserPermissionOutput)
}

// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
func (o ObsBucketAclLogDeliveryUserPermissionPtrOutput) AccessToAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObsBucketAclLogDeliveryUserPermission) []string {
		if v == nil {
			return nil
		}
		return v.AccessToAcls
	}).(pulumi.StringArrayOutput)
}

// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
func (o ObsBucketAclLogDeliveryUserPermissionPtrOutput) AccessToBuckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObsBucketAclLogDeliveryUserPermission) []string {
		if v == nil {
			return nil
		}
		return v.AccessToBuckets
	}).(pulumi.StringArrayOutput)
}

type ObsBucketAclOwnerPermission struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls []string `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets []string `pulumi:"accessToBuckets"`
}

// ObsBucketAclOwnerPermissionInput is an input type that accepts ObsBucketAclOwnerPermissionArgs and ObsBucketAclOwnerPermissionOutput values.
// You can construct a concrete instance of `ObsBucketAclOwnerPermissionInput` via:
//
//	ObsBucketAclOwnerPermissionArgs{...}
type ObsBucketAclOwnerPermissionInput interface {
	pulumi.Input

	ToObsBucketAclOwnerPermissionOutput() ObsBucketAclOwnerPermissionOutput
	ToObsBucketAclOwnerPermissionOutputWithContext(context.Context) ObsBucketAclOwnerPermissionOutput
}

type ObsBucketAclOwnerPermissionArgs struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls pulumi.StringArrayInput `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets pulumi.StringArrayInput `pulumi:"accessToBuckets"`
}

func (ObsBucketAclOwnerPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclOwnerPermission)(nil)).Elem()
}

func (i ObsBucketAclOwnerPermissionArgs) ToObsBucketAclOwnerPermissionOutput() ObsBucketAclOwnerPermissionOutput {
	return i.ToObsBucketAclOwnerPermissionOutputWithContext(context.Background())
}

func (i ObsBucketAclOwnerPermissionArgs) ToObsBucketAclOwnerPermissionOutputWithContext(ctx context.Context) ObsBucketAclOwnerPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclOwnerPermissionOutput)
}

func (i ObsBucketAclOwnerPermissionArgs) ToObsBucketAclOwnerPermissionPtrOutput() ObsBucketAclOwnerPermissionPtrOutput {
	return i.ToObsBucketAclOwnerPermissionPtrOutputWithContext(context.Background())
}

func (i ObsBucketAclOwnerPermissionArgs) ToObsBucketAclOwnerPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclOwnerPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclOwnerPermissionOutput).ToObsBucketAclOwnerPermissionPtrOutputWithContext(ctx)
}

// ObsBucketAclOwnerPermissionPtrInput is an input type that accepts ObsBucketAclOwnerPermissionArgs, ObsBucketAclOwnerPermissionPtr and ObsBucketAclOwnerPermissionPtrOutput values.
// You can construct a concrete instance of `ObsBucketAclOwnerPermissionPtrInput` via:
//
//	        ObsBucketAclOwnerPermissionArgs{...}
//
//	or:
//
//	        nil
type ObsBucketAclOwnerPermissionPtrInput interface {
	pulumi.Input

	ToObsBucketAclOwnerPermissionPtrOutput() ObsBucketAclOwnerPermissionPtrOutput
	ToObsBucketAclOwnerPermissionPtrOutputWithContext(context.Context) ObsBucketAclOwnerPermissionPtrOutput
}

type obsBucketAclOwnerPermissionPtrType ObsBucketAclOwnerPermissionArgs

func ObsBucketAclOwnerPermissionPtr(v *ObsBucketAclOwnerPermissionArgs) ObsBucketAclOwnerPermissionPtrInput {
	return (*obsBucketAclOwnerPermissionPtrType)(v)
}

func (*obsBucketAclOwnerPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketAclOwnerPermission)(nil)).Elem()
}

func (i *obsBucketAclOwnerPermissionPtrType) ToObsBucketAclOwnerPermissionPtrOutput() ObsBucketAclOwnerPermissionPtrOutput {
	return i.ToObsBucketAclOwnerPermissionPtrOutputWithContext(context.Background())
}

func (i *obsBucketAclOwnerPermissionPtrType) ToObsBucketAclOwnerPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclOwnerPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclOwnerPermissionPtrOutput)
}

type ObsBucketAclOwnerPermissionOutput struct{ *pulumi.OutputState }

func (ObsBucketAclOwnerPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclOwnerPermission)(nil)).Elem()
}

func (o ObsBucketAclOwnerPermissionOutput) ToObsBucketAclOwnerPermissionOutput() ObsBucketAclOwnerPermissionOutput {
	return o
}

func (o ObsBucketAclOwnerPermissionOutput) ToObsBucketAclOwnerPermissionOutputWithContext(ctx context.Context) ObsBucketAclOwnerPermissionOutput {
	return o
}

func (o ObsBucketAclOwnerPermissionOutput) ToObsBucketAclOwnerPermissionPtrOutput() ObsBucketAclOwnerPermissionPtrOutput {
	return o.ToObsBucketAclOwnerPermissionPtrOutputWithContext(context.Background())
}

func (o ObsBucketAclOwnerPermissionOutput) ToObsBucketAclOwnerPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclOwnerPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObsBucketAclOwnerPermission) *ObsBucketAclOwnerPermission {
		return &v
	}).(ObsBucketAclOwnerPermissionPtrOutput)
}

// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
func (o ObsBucketAclOwnerPermissionOutput) AccessToAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclOwnerPermission) []string { return v.AccessToAcls }).(pulumi.StringArrayOutput)
}

// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
func (o ObsBucketAclOwnerPermissionOutput) AccessToBuckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclOwnerPermission) []string { return v.AccessToBuckets }).(pulumi.StringArrayOutput)
}

type ObsBucketAclOwnerPermissionPtrOutput struct{ *pulumi.OutputState }

func (ObsBucketAclOwnerPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketAclOwnerPermission)(nil)).Elem()
}

func (o ObsBucketAclOwnerPermissionPtrOutput) ToObsBucketAclOwnerPermissionPtrOutput() ObsBucketAclOwnerPermissionPtrOutput {
	return o
}

func (o ObsBucketAclOwnerPermissionPtrOutput) ToObsBucketAclOwnerPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclOwnerPermissionPtrOutput {
	return o
}

func (o ObsBucketAclOwnerPermissionPtrOutput) Elem() ObsBucketAclOwnerPermissionOutput {
	return o.ApplyT(func(v *ObsBucketAclOwnerPermission) ObsBucketAclOwnerPermission {
		if v != nil {
			return *v
		}
		var ret ObsBucketAclOwnerPermission
		return ret
	}).(ObsBucketAclOwnerPermissionOutput)
}

// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
func (o ObsBucketAclOwnerPermissionPtrOutput) AccessToAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObsBucketAclOwnerPermission) []string {
		if v == nil {
			return nil
		}
		return v.AccessToAcls
	}).(pulumi.StringArrayOutput)
}

// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
func (o ObsBucketAclOwnerPermissionPtrOutput) AccessToBuckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObsBucketAclOwnerPermission) []string {
		if v == nil {
			return nil
		}
		return v.AccessToBuckets
	}).(pulumi.StringArrayOutput)
}

type ObsBucketAclPublicPermission struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls []string `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets []string `pulumi:"accessToBuckets"`
}

// ObsBucketAclPublicPermissionInput is an input type that accepts ObsBucketAclPublicPermissionArgs and ObsBucketAclPublicPermissionOutput values.
// You can construct a concrete instance of `ObsBucketAclPublicPermissionInput` via:
//
//	ObsBucketAclPublicPermissionArgs{...}
type ObsBucketAclPublicPermissionInput interface {
	pulumi.Input

	ToObsBucketAclPublicPermissionOutput() ObsBucketAclPublicPermissionOutput
	ToObsBucketAclPublicPermissionOutputWithContext(context.Context) ObsBucketAclPublicPermissionOutput
}

type ObsBucketAclPublicPermissionArgs struct {
	// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
	AccessToAcls pulumi.StringArrayInput `pulumi:"accessToAcls"`
	// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
	AccessToBuckets pulumi.StringArrayInput `pulumi:"accessToBuckets"`
}

func (ObsBucketAclPublicPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclPublicPermission)(nil)).Elem()
}

func (i ObsBucketAclPublicPermissionArgs) ToObsBucketAclPublicPermissionOutput() ObsBucketAclPublicPermissionOutput {
	return i.ToObsBucketAclPublicPermissionOutputWithContext(context.Background())
}

func (i ObsBucketAclPublicPermissionArgs) ToObsBucketAclPublicPermissionOutputWithContext(ctx context.Context) ObsBucketAclPublicPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclPublicPermissionOutput)
}

func (i ObsBucketAclPublicPermissionArgs) ToObsBucketAclPublicPermissionPtrOutput() ObsBucketAclPublicPermissionPtrOutput {
	return i.ToObsBucketAclPublicPermissionPtrOutputWithContext(context.Background())
}

func (i ObsBucketAclPublicPermissionArgs) ToObsBucketAclPublicPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclPublicPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclPublicPermissionOutput).ToObsBucketAclPublicPermissionPtrOutputWithContext(ctx)
}

// ObsBucketAclPublicPermissionPtrInput is an input type that accepts ObsBucketAclPublicPermissionArgs, ObsBucketAclPublicPermissionPtr and ObsBucketAclPublicPermissionPtrOutput values.
// You can construct a concrete instance of `ObsBucketAclPublicPermissionPtrInput` via:
//
//	        ObsBucketAclPublicPermissionArgs{...}
//
//	or:
//
//	        nil
type ObsBucketAclPublicPermissionPtrInput interface {
	pulumi.Input

	ToObsBucketAclPublicPermissionPtrOutput() ObsBucketAclPublicPermissionPtrOutput
	ToObsBucketAclPublicPermissionPtrOutputWithContext(context.Context) ObsBucketAclPublicPermissionPtrOutput
}

type obsBucketAclPublicPermissionPtrType ObsBucketAclPublicPermissionArgs

func ObsBucketAclPublicPermissionPtr(v *ObsBucketAclPublicPermissionArgs) ObsBucketAclPublicPermissionPtrInput {
	return (*obsBucketAclPublicPermissionPtrType)(v)
}

func (*obsBucketAclPublicPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketAclPublicPermission)(nil)).Elem()
}

func (i *obsBucketAclPublicPermissionPtrType) ToObsBucketAclPublicPermissionPtrOutput() ObsBucketAclPublicPermissionPtrOutput {
	return i.ToObsBucketAclPublicPermissionPtrOutputWithContext(context.Background())
}

func (i *obsBucketAclPublicPermissionPtrType) ToObsBucketAclPublicPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclPublicPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketAclPublicPermissionPtrOutput)
}

type ObsBucketAclPublicPermissionOutput struct{ *pulumi.OutputState }

func (ObsBucketAclPublicPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketAclPublicPermission)(nil)).Elem()
}

func (o ObsBucketAclPublicPermissionOutput) ToObsBucketAclPublicPermissionOutput() ObsBucketAclPublicPermissionOutput {
	return o
}

func (o ObsBucketAclPublicPermissionOutput) ToObsBucketAclPublicPermissionOutputWithContext(ctx context.Context) ObsBucketAclPublicPermissionOutput {
	return o
}

func (o ObsBucketAclPublicPermissionOutput) ToObsBucketAclPublicPermissionPtrOutput() ObsBucketAclPublicPermissionPtrOutput {
	return o.ToObsBucketAclPublicPermissionPtrOutputWithContext(context.Background())
}

func (o ObsBucketAclPublicPermissionOutput) ToObsBucketAclPublicPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclPublicPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObsBucketAclPublicPermission) *ObsBucketAclPublicPermission {
		return &v
	}).(ObsBucketAclPublicPermissionPtrOutput)
}

// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
func (o ObsBucketAclPublicPermissionOutput) AccessToAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclPublicPermission) []string { return v.AccessToAcls }).(pulumi.StringArrayOutput)
}

// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
func (o ObsBucketAclPublicPermissionOutput) AccessToBuckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketAclPublicPermission) []string { return v.AccessToBuckets }).(pulumi.StringArrayOutput)
}

type ObsBucketAclPublicPermissionPtrOutput struct{ *pulumi.OutputState }

func (ObsBucketAclPublicPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketAclPublicPermission)(nil)).Elem()
}

func (o ObsBucketAclPublicPermissionPtrOutput) ToObsBucketAclPublicPermissionPtrOutput() ObsBucketAclPublicPermissionPtrOutput {
	return o
}

func (o ObsBucketAclPublicPermissionPtrOutput) ToObsBucketAclPublicPermissionPtrOutputWithContext(ctx context.Context) ObsBucketAclPublicPermissionPtrOutput {
	return o
}

func (o ObsBucketAclPublicPermissionPtrOutput) Elem() ObsBucketAclPublicPermissionOutput {
	return o.ApplyT(func(v *ObsBucketAclPublicPermission) ObsBucketAclPublicPermission {
		if v != nil {
			return *v
		}
		var ret ObsBucketAclPublicPermission
		return ret
	}).(ObsBucketAclPublicPermissionOutput)
}

// Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.
func (o ObsBucketAclPublicPermissionPtrOutput) AccessToAcls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObsBucketAclPublicPermission) []string {
		if v == nil {
			return nil
		}
		return v.AccessToAcls
	}).(pulumi.StringArrayOutput)
}

// Specifies the access to bucket. Valid values are **READ** and **WRITE**.
func (o ObsBucketAclPublicPermissionPtrOutput) AccessToBuckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObsBucketAclPublicPermission) []string {
		if v == nil {
			return nil
		}
		return v.AccessToBuckets
	}).(pulumi.StringArrayOutput)
}

type ObsBucketCorsRule struct {
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	AllowedMethods []string `pulumi:"allowedMethods"`
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	ExposeHeaders  []string `pulumi:"exposeHeaders"`
	MaxAgeSeconds  *int     `pulumi:"maxAgeSeconds"`
}

// ObsBucketCorsRuleInput is an input type that accepts ObsBucketCorsRuleArgs and ObsBucketCorsRuleOutput values.
// You can construct a concrete instance of `ObsBucketCorsRuleInput` via:
//
//	ObsBucketCorsRuleArgs{...}
type ObsBucketCorsRuleInput interface {
	pulumi.Input

	ToObsBucketCorsRuleOutput() ObsBucketCorsRuleOutput
	ToObsBucketCorsRuleOutputWithContext(context.Context) ObsBucketCorsRuleOutput
}

type ObsBucketCorsRuleArgs struct {
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	ExposeHeaders  pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	MaxAgeSeconds  pulumi.IntPtrInput      `pulumi:"maxAgeSeconds"`
}

func (ObsBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketCorsRule)(nil)).Elem()
}

func (i ObsBucketCorsRuleArgs) ToObsBucketCorsRuleOutput() ObsBucketCorsRuleOutput {
	return i.ToObsBucketCorsRuleOutputWithContext(context.Background())
}

func (i ObsBucketCorsRuleArgs) ToObsBucketCorsRuleOutputWithContext(ctx context.Context) ObsBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketCorsRuleOutput)
}

// ObsBucketCorsRuleArrayInput is an input type that accepts ObsBucketCorsRuleArray and ObsBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `ObsBucketCorsRuleArrayInput` via:
//
//	ObsBucketCorsRuleArray{ ObsBucketCorsRuleArgs{...} }
type ObsBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToObsBucketCorsRuleArrayOutput() ObsBucketCorsRuleArrayOutput
	ToObsBucketCorsRuleArrayOutputWithContext(context.Context) ObsBucketCorsRuleArrayOutput
}

type ObsBucketCorsRuleArray []ObsBucketCorsRuleInput

func (ObsBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketCorsRule)(nil)).Elem()
}

func (i ObsBucketCorsRuleArray) ToObsBucketCorsRuleArrayOutput() ObsBucketCorsRuleArrayOutput {
	return i.ToObsBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i ObsBucketCorsRuleArray) ToObsBucketCorsRuleArrayOutputWithContext(ctx context.Context) ObsBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketCorsRuleArrayOutput)
}

type ObsBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (ObsBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketCorsRule)(nil)).Elem()
}

func (o ObsBucketCorsRuleOutput) ToObsBucketCorsRuleOutput() ObsBucketCorsRuleOutput {
	return o
}

func (o ObsBucketCorsRuleOutput) ToObsBucketCorsRuleOutputWithContext(ctx context.Context) ObsBucketCorsRuleOutput {
	return o
}

func (o ObsBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

func (o ObsBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

func (o ObsBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

func (o ObsBucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObsBucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o ObsBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObsBucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type ObsBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketCorsRule)(nil)).Elem()
}

func (o ObsBucketCorsRuleArrayOutput) ToObsBucketCorsRuleArrayOutput() ObsBucketCorsRuleArrayOutput {
	return o
}

func (o ObsBucketCorsRuleArrayOutput) ToObsBucketCorsRuleArrayOutputWithContext(ctx context.Context) ObsBucketCorsRuleArrayOutput {
	return o
}

func (o ObsBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) ObsBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketCorsRule {
		return vs[0].([]ObsBucketCorsRule)[vs[1].(int)]
	}).(ObsBucketCorsRuleOutput)
}

type ObsBucketLifecycleRule struct {
	AbortIncompleteMultipartUploads []ObsBucketLifecycleRuleAbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUploads"`
	Enabled                         bool                                                   `pulumi:"enabled"`
	Expirations                     []ObsBucketLifecycleRuleExpiration                     `pulumi:"expirations"`
	Name                            string                                                 `pulumi:"name"`
	NoncurrentVersionExpirations    []ObsBucketLifecycleRuleNoncurrentVersionExpiration    `pulumi:"noncurrentVersionExpirations"`
	NoncurrentVersionTransitions    []ObsBucketLifecycleRuleNoncurrentVersionTransition    `pulumi:"noncurrentVersionTransitions"`
	Prefix                          *string                                                `pulumi:"prefix"`
	Transitions                     []ObsBucketLifecycleRuleTransition                     `pulumi:"transitions"`
}

// ObsBucketLifecycleRuleInput is an input type that accepts ObsBucketLifecycleRuleArgs and ObsBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleInput` via:
//
//	ObsBucketLifecycleRuleArgs{...}
type ObsBucketLifecycleRuleInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleOutput() ObsBucketLifecycleRuleOutput
	ToObsBucketLifecycleRuleOutputWithContext(context.Context) ObsBucketLifecycleRuleOutput
}

type ObsBucketLifecycleRuleArgs struct {
	AbortIncompleteMultipartUploads ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput `pulumi:"abortIncompleteMultipartUploads"`
	Enabled                         pulumi.BoolInput                                               `pulumi:"enabled"`
	Expirations                     ObsBucketLifecycleRuleExpirationArrayInput                     `pulumi:"expirations"`
	Name                            pulumi.StringInput                                             `pulumi:"name"`
	NoncurrentVersionExpirations    ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayInput    `pulumi:"noncurrentVersionExpirations"`
	NoncurrentVersionTransitions    ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayInput    `pulumi:"noncurrentVersionTransitions"`
	Prefix                          pulumi.StringPtrInput                                          `pulumi:"prefix"`
	Transitions                     ObsBucketLifecycleRuleTransitionArrayInput                     `pulumi:"transitions"`
}

func (ObsBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRule)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleArgs) ToObsBucketLifecycleRuleOutput() ObsBucketLifecycleRuleOutput {
	return i.ToObsBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleArgs) ToObsBucketLifecycleRuleOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleOutput)
}

// ObsBucketLifecycleRuleArrayInput is an input type that accepts ObsBucketLifecycleRuleArray and ObsBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleArrayInput` via:
//
//	ObsBucketLifecycleRuleArray{ ObsBucketLifecycleRuleArgs{...} }
type ObsBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleArrayOutput() ObsBucketLifecycleRuleArrayOutput
	ToObsBucketLifecycleRuleArrayOutputWithContext(context.Context) ObsBucketLifecycleRuleArrayOutput
}

type ObsBucketLifecycleRuleArray []ObsBucketLifecycleRuleInput

func (ObsBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRule)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleArray) ToObsBucketLifecycleRuleArrayOutput() ObsBucketLifecycleRuleArrayOutput {
	return i.ToObsBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleArray) ToObsBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleArrayOutput)
}

type ObsBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRule)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleOutput) ToObsBucketLifecycleRuleOutput() ObsBucketLifecycleRuleOutput {
	return o
}

func (o ObsBucketLifecycleRuleOutput) ToObsBucketLifecycleRuleOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleOutput {
	return o
}

func (o ObsBucketLifecycleRuleOutput) AbortIncompleteMultipartUploads() ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) []ObsBucketLifecycleRuleAbortIncompleteMultipartUpload {
		return v.AbortIncompleteMultipartUploads
	}).(ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput)
}

func (o ObsBucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ObsBucketLifecycleRuleOutput) Expirations() ObsBucketLifecycleRuleExpirationArrayOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) []ObsBucketLifecycleRuleExpiration { return v.Expirations }).(ObsBucketLifecycleRuleExpirationArrayOutput)
}

func (o ObsBucketLifecycleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o ObsBucketLifecycleRuleOutput) NoncurrentVersionExpirations() ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) []ObsBucketLifecycleRuleNoncurrentVersionExpiration {
		return v.NoncurrentVersionExpirations
	}).(ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput)
}

func (o ObsBucketLifecycleRuleOutput) NoncurrentVersionTransitions() ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) []ObsBucketLifecycleRuleNoncurrentVersionTransition {
		return v.NoncurrentVersionTransitions
	}).(ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

func (o ObsBucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o ObsBucketLifecycleRuleOutput) Transitions() ObsBucketLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRule) []ObsBucketLifecycleRuleTransition { return v.Transitions }).(ObsBucketLifecycleRuleTransitionArrayOutput)
}

type ObsBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRule)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleArrayOutput) ToObsBucketLifecycleRuleArrayOutput() ObsBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleArrayOutput) ToObsBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) ObsBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketLifecycleRule {
		return vs[0].([]ObsBucketLifecycleRule)[vs[1].(int)]
	}).(ObsBucketLifecycleRuleOutput)
}

type ObsBucketLifecycleRuleAbortIncompleteMultipartUpload struct {
	Days int `pulumi:"days"`
}

// ObsBucketLifecycleRuleAbortIncompleteMultipartUploadInput is an input type that accepts ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs and ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleAbortIncompleteMultipartUploadInput` via:
//
//	ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs{...}
type ObsBucketLifecycleRuleAbortIncompleteMultipartUploadInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput() ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput
	ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(context.Context) ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput
}

type ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs struct {
	Days pulumi.IntInput `pulumi:"days"`
}

func (ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput() ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return i.ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput)
}

// ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput is an input type that accepts ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArray and ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput` via:
//
//	ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArray{ ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs{...} }
type ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput() ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput
	ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(context.Context) ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput
}

type ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArray []ObsBucketLifecycleRuleAbortIncompleteMultipartUploadInput

func (ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArray) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput() ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return i.ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArray) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput)
}

type ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput() ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRuleAbortIncompleteMultipartUpload) int { return v.Days }).(pulumi.IntOutput)
}

type ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput() ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) ToObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) Index(i pulumi.IntInput) ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketLifecycleRuleAbortIncompleteMultipartUpload {
		return vs[0].([]ObsBucketLifecycleRuleAbortIncompleteMultipartUpload)[vs[1].(int)]
	}).(ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput)
}

type ObsBucketLifecycleRuleExpiration struct {
	Days int `pulumi:"days"`
}

// ObsBucketLifecycleRuleExpirationInput is an input type that accepts ObsBucketLifecycleRuleExpirationArgs and ObsBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleExpirationInput` via:
//
//	ObsBucketLifecycleRuleExpirationArgs{...}
type ObsBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleExpirationOutput() ObsBucketLifecycleRuleExpirationOutput
	ToObsBucketLifecycleRuleExpirationOutputWithContext(context.Context) ObsBucketLifecycleRuleExpirationOutput
}

type ObsBucketLifecycleRuleExpirationArgs struct {
	Days pulumi.IntInput `pulumi:"days"`
}

func (ObsBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleExpirationArgs) ToObsBucketLifecycleRuleExpirationOutput() ObsBucketLifecycleRuleExpirationOutput {
	return i.ToObsBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleExpirationArgs) ToObsBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleExpirationOutput)
}

// ObsBucketLifecycleRuleExpirationArrayInput is an input type that accepts ObsBucketLifecycleRuleExpirationArray and ObsBucketLifecycleRuleExpirationArrayOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleExpirationArrayInput` via:
//
//	ObsBucketLifecycleRuleExpirationArray{ ObsBucketLifecycleRuleExpirationArgs{...} }
type ObsBucketLifecycleRuleExpirationArrayInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleExpirationArrayOutput() ObsBucketLifecycleRuleExpirationArrayOutput
	ToObsBucketLifecycleRuleExpirationArrayOutputWithContext(context.Context) ObsBucketLifecycleRuleExpirationArrayOutput
}

type ObsBucketLifecycleRuleExpirationArray []ObsBucketLifecycleRuleExpirationInput

func (ObsBucketLifecycleRuleExpirationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleExpirationArray) ToObsBucketLifecycleRuleExpirationArrayOutput() ObsBucketLifecycleRuleExpirationArrayOutput {
	return i.ToObsBucketLifecycleRuleExpirationArrayOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleExpirationArray) ToObsBucketLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleExpirationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleExpirationArrayOutput)
}

type ObsBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleExpirationOutput) ToObsBucketLifecycleRuleExpirationOutput() ObsBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObsBucketLifecycleRuleExpirationOutput) ToObsBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObsBucketLifecycleRuleExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRuleExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type ObsBucketLifecycleRuleExpirationArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleExpirationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleExpirationArrayOutput) ToObsBucketLifecycleRuleExpirationArrayOutput() ObsBucketLifecycleRuleExpirationArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleExpirationArrayOutput) ToObsBucketLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleExpirationArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleExpirationArrayOutput) Index(i pulumi.IntInput) ObsBucketLifecycleRuleExpirationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketLifecycleRuleExpiration {
		return vs[0].([]ObsBucketLifecycleRuleExpiration)[vs[1].(int)]
	}).(ObsBucketLifecycleRuleExpirationOutput)
}

type ObsBucketLifecycleRuleNoncurrentVersionExpiration struct {
	Days int `pulumi:"days"`
}

// ObsBucketLifecycleRuleNoncurrentVersionExpirationInput is an input type that accepts ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs and ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleNoncurrentVersionExpirationInput` via:
//
//	ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
type ObsBucketLifecycleRuleNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput
	ToObsBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Context) ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput
}

type ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs struct {
	Days pulumi.IntInput `pulumi:"days"`
}

func (ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObsBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return i.ToObsBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObsBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

// ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayInput is an input type that accepts ObsBucketLifecycleRuleNoncurrentVersionExpirationArray and ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayInput` via:
//
//	ObsBucketLifecycleRuleNoncurrentVersionExpirationArray{ ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs{...} }
type ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput() ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput
	ToObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(context.Context) ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput
}

type ObsBucketLifecycleRuleNoncurrentVersionExpirationArray []ObsBucketLifecycleRuleNoncurrentVersionExpirationInput

func (ObsBucketLifecycleRuleNoncurrentVersionExpirationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleNoncurrentVersionExpirationArray) ToObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput() ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return i.ToObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleNoncurrentVersionExpirationArray) ToObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput)
}

type ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObsBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObsBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRuleNoncurrentVersionExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) ToObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput() ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) ToObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) Index(i pulumi.IntInput) ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketLifecycleRuleNoncurrentVersionExpiration {
		return vs[0].([]ObsBucketLifecycleRuleNoncurrentVersionExpiration)[vs[1].(int)]
	}).(ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

type ObsBucketLifecycleRuleNoncurrentVersionTransition struct {
	Days         int    `pulumi:"days"`
	StorageClass string `pulumi:"storageClass"`
}

// ObsBucketLifecycleRuleNoncurrentVersionTransitionInput is an input type that accepts ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs and ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleNoncurrentVersionTransitionInput` via:
//
//	ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs{...}
type ObsBucketLifecycleRuleNoncurrentVersionTransitionInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleNoncurrentVersionTransitionOutput() ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput
	ToObsBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Context) ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput
}

type ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs struct {
	Days         pulumi.IntInput    `pulumi:"days"`
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs) ToObsBucketLifecycleRuleNoncurrentVersionTransitionOutput() ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return i.ToObsBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs) ToObsBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

// ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayInput is an input type that accepts ObsBucketLifecycleRuleNoncurrentVersionTransitionArray and ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayInput` via:
//
//	ObsBucketLifecycleRuleNoncurrentVersionTransitionArray{ ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs{...} }
type ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
	ToObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Context) ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
}

type ObsBucketLifecycleRuleNoncurrentVersionTransitionArray []ObsBucketLifecycleRuleNoncurrentVersionTransitionInput

func (ObsBucketLifecycleRuleNoncurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleNoncurrentVersionTransitionArray) ToObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return i.ToObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleNoncurrentVersionTransitionArray) ToObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

type ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput) ToObsBucketLifecycleRuleNoncurrentVersionTransitionOutput() ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput) ToObsBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRuleNoncurrentVersionTransition) int { return v.Days }).(pulumi.IntOutput)
}

func (o ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRuleNoncurrentVersionTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketLifecycleRuleNoncurrentVersionTransition {
		return vs[0].([]ObsBucketLifecycleRuleNoncurrentVersionTransition)[vs[1].(int)]
	}).(ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

type ObsBucketLifecycleRuleTransition struct {
	Days         int    `pulumi:"days"`
	StorageClass string `pulumi:"storageClass"`
}

// ObsBucketLifecycleRuleTransitionInput is an input type that accepts ObsBucketLifecycleRuleTransitionArgs and ObsBucketLifecycleRuleTransitionOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleTransitionInput` via:
//
//	ObsBucketLifecycleRuleTransitionArgs{...}
type ObsBucketLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleTransitionOutput() ObsBucketLifecycleRuleTransitionOutput
	ToObsBucketLifecycleRuleTransitionOutputWithContext(context.Context) ObsBucketLifecycleRuleTransitionOutput
}

type ObsBucketLifecycleRuleTransitionArgs struct {
	Days         pulumi.IntInput    `pulumi:"days"`
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (ObsBucketLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleTransitionArgs) ToObsBucketLifecycleRuleTransitionOutput() ObsBucketLifecycleRuleTransitionOutput {
	return i.ToObsBucketLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleTransitionArgs) ToObsBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleTransitionOutput)
}

// ObsBucketLifecycleRuleTransitionArrayInput is an input type that accepts ObsBucketLifecycleRuleTransitionArray and ObsBucketLifecycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `ObsBucketLifecycleRuleTransitionArrayInput` via:
//
//	ObsBucketLifecycleRuleTransitionArray{ ObsBucketLifecycleRuleTransitionArgs{...} }
type ObsBucketLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToObsBucketLifecycleRuleTransitionArrayOutput() ObsBucketLifecycleRuleTransitionArrayOutput
	ToObsBucketLifecycleRuleTransitionArrayOutputWithContext(context.Context) ObsBucketLifecycleRuleTransitionArrayOutput
}

type ObsBucketLifecycleRuleTransitionArray []ObsBucketLifecycleRuleTransitionInput

func (ObsBucketLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i ObsBucketLifecycleRuleTransitionArray) ToObsBucketLifecycleRuleTransitionArrayOutput() ObsBucketLifecycleRuleTransitionArrayOutput {
	return i.ToObsBucketLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i ObsBucketLifecycleRuleTransitionArray) ToObsBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLifecycleRuleTransitionArrayOutput)
}

type ObsBucketLifecycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleTransitionOutput) ToObsBucketLifecycleRuleTransitionOutput() ObsBucketLifecycleRuleTransitionOutput {
	return o
}

func (o ObsBucketLifecycleRuleTransitionOutput) ToObsBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleTransitionOutput {
	return o
}

func (o ObsBucketLifecycleRuleTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRuleTransition) int { return v.Days }).(pulumi.IntOutput)
}

func (o ObsBucketLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v ObsBucketLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type ObsBucketLifecycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o ObsBucketLifecycleRuleTransitionArrayOutput) ToObsBucketLifecycleRuleTransitionArrayOutput() ObsBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleTransitionArrayOutput) ToObsBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) ObsBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o ObsBucketLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) ObsBucketLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketLifecycleRuleTransition {
		return vs[0].([]ObsBucketLifecycleRuleTransition)[vs[1].(int)]
	}).(ObsBucketLifecycleRuleTransitionOutput)
}

type ObsBucketLogging struct {
	// schema: Required
	Agency       *string `pulumi:"agency"`
	TargetBucket string  `pulumi:"targetBucket"`
	TargetPrefix *string `pulumi:"targetPrefix"`
}

// ObsBucketLoggingInput is an input type that accepts ObsBucketLoggingArgs and ObsBucketLoggingOutput values.
// You can construct a concrete instance of `ObsBucketLoggingInput` via:
//
//	ObsBucketLoggingArgs{...}
type ObsBucketLoggingInput interface {
	pulumi.Input

	ToObsBucketLoggingOutput() ObsBucketLoggingOutput
	ToObsBucketLoggingOutputWithContext(context.Context) ObsBucketLoggingOutput
}

type ObsBucketLoggingArgs struct {
	// schema: Required
	Agency       pulumi.StringPtrInput `pulumi:"agency"`
	TargetBucket pulumi.StringInput    `pulumi:"targetBucket"`
	TargetPrefix pulumi.StringPtrInput `pulumi:"targetPrefix"`
}

func (ObsBucketLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLogging)(nil)).Elem()
}

func (i ObsBucketLoggingArgs) ToObsBucketLoggingOutput() ObsBucketLoggingOutput {
	return i.ToObsBucketLoggingOutputWithContext(context.Background())
}

func (i ObsBucketLoggingArgs) ToObsBucketLoggingOutputWithContext(ctx context.Context) ObsBucketLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLoggingOutput)
}

// ObsBucketLoggingArrayInput is an input type that accepts ObsBucketLoggingArray and ObsBucketLoggingArrayOutput values.
// You can construct a concrete instance of `ObsBucketLoggingArrayInput` via:
//
//	ObsBucketLoggingArray{ ObsBucketLoggingArgs{...} }
type ObsBucketLoggingArrayInput interface {
	pulumi.Input

	ToObsBucketLoggingArrayOutput() ObsBucketLoggingArrayOutput
	ToObsBucketLoggingArrayOutputWithContext(context.Context) ObsBucketLoggingArrayOutput
}

type ObsBucketLoggingArray []ObsBucketLoggingInput

func (ObsBucketLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLogging)(nil)).Elem()
}

func (i ObsBucketLoggingArray) ToObsBucketLoggingArrayOutput() ObsBucketLoggingArrayOutput {
	return i.ToObsBucketLoggingArrayOutputWithContext(context.Background())
}

func (i ObsBucketLoggingArray) ToObsBucketLoggingArrayOutputWithContext(ctx context.Context) ObsBucketLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketLoggingArrayOutput)
}

type ObsBucketLoggingOutput struct{ *pulumi.OutputState }

func (ObsBucketLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketLogging)(nil)).Elem()
}

func (o ObsBucketLoggingOutput) ToObsBucketLoggingOutput() ObsBucketLoggingOutput {
	return o
}

func (o ObsBucketLoggingOutput) ToObsBucketLoggingOutputWithContext(ctx context.Context) ObsBucketLoggingOutput {
	return o
}

// schema: Required
func (o ObsBucketLoggingOutput) Agency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObsBucketLogging) *string { return v.Agency }).(pulumi.StringPtrOutput)
}

func (o ObsBucketLoggingOutput) TargetBucket() pulumi.StringOutput {
	return o.ApplyT(func(v ObsBucketLogging) string { return v.TargetBucket }).(pulumi.StringOutput)
}

func (o ObsBucketLoggingOutput) TargetPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObsBucketLogging) *string { return v.TargetPrefix }).(pulumi.StringPtrOutput)
}

type ObsBucketLoggingArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketLogging)(nil)).Elem()
}

func (o ObsBucketLoggingArrayOutput) ToObsBucketLoggingArrayOutput() ObsBucketLoggingArrayOutput {
	return o
}

func (o ObsBucketLoggingArrayOutput) ToObsBucketLoggingArrayOutputWithContext(ctx context.Context) ObsBucketLoggingArrayOutput {
	return o
}

func (o ObsBucketLoggingArrayOutput) Index(i pulumi.IntInput) ObsBucketLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketLogging {
		return vs[0].([]ObsBucketLogging)[vs[1].(int)]
	}).(ObsBucketLoggingOutput)
}

type ObsBucketStorageInfo struct {
	ObjectNumber *int `pulumi:"objectNumber"`
	Size         *int `pulumi:"size"`
}

// ObsBucketStorageInfoInput is an input type that accepts ObsBucketStorageInfoArgs and ObsBucketStorageInfoOutput values.
// You can construct a concrete instance of `ObsBucketStorageInfoInput` via:
//
//	ObsBucketStorageInfoArgs{...}
type ObsBucketStorageInfoInput interface {
	pulumi.Input

	ToObsBucketStorageInfoOutput() ObsBucketStorageInfoOutput
	ToObsBucketStorageInfoOutputWithContext(context.Context) ObsBucketStorageInfoOutput
}

type ObsBucketStorageInfoArgs struct {
	ObjectNumber pulumi.IntPtrInput `pulumi:"objectNumber"`
	Size         pulumi.IntPtrInput `pulumi:"size"`
}

func (ObsBucketStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketStorageInfo)(nil)).Elem()
}

func (i ObsBucketStorageInfoArgs) ToObsBucketStorageInfoOutput() ObsBucketStorageInfoOutput {
	return i.ToObsBucketStorageInfoOutputWithContext(context.Background())
}

func (i ObsBucketStorageInfoArgs) ToObsBucketStorageInfoOutputWithContext(ctx context.Context) ObsBucketStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketStorageInfoOutput)
}

// ObsBucketStorageInfoArrayInput is an input type that accepts ObsBucketStorageInfoArray and ObsBucketStorageInfoArrayOutput values.
// You can construct a concrete instance of `ObsBucketStorageInfoArrayInput` via:
//
//	ObsBucketStorageInfoArray{ ObsBucketStorageInfoArgs{...} }
type ObsBucketStorageInfoArrayInput interface {
	pulumi.Input

	ToObsBucketStorageInfoArrayOutput() ObsBucketStorageInfoArrayOutput
	ToObsBucketStorageInfoArrayOutputWithContext(context.Context) ObsBucketStorageInfoArrayOutput
}

type ObsBucketStorageInfoArray []ObsBucketStorageInfoInput

func (ObsBucketStorageInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketStorageInfo)(nil)).Elem()
}

func (i ObsBucketStorageInfoArray) ToObsBucketStorageInfoArrayOutput() ObsBucketStorageInfoArrayOutput {
	return i.ToObsBucketStorageInfoArrayOutputWithContext(context.Background())
}

func (i ObsBucketStorageInfoArray) ToObsBucketStorageInfoArrayOutputWithContext(ctx context.Context) ObsBucketStorageInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketStorageInfoArrayOutput)
}

type ObsBucketStorageInfoOutput struct{ *pulumi.OutputState }

func (ObsBucketStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketStorageInfo)(nil)).Elem()
}

func (o ObsBucketStorageInfoOutput) ToObsBucketStorageInfoOutput() ObsBucketStorageInfoOutput {
	return o
}

func (o ObsBucketStorageInfoOutput) ToObsBucketStorageInfoOutputWithContext(ctx context.Context) ObsBucketStorageInfoOutput {
	return o
}

func (o ObsBucketStorageInfoOutput) ObjectNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObsBucketStorageInfo) *int { return v.ObjectNumber }).(pulumi.IntPtrOutput)
}

func (o ObsBucketStorageInfoOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObsBucketStorageInfo) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ObsBucketStorageInfoArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketStorageInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObsBucketStorageInfo)(nil)).Elem()
}

func (o ObsBucketStorageInfoArrayOutput) ToObsBucketStorageInfoArrayOutput() ObsBucketStorageInfoArrayOutput {
	return o
}

func (o ObsBucketStorageInfoArrayOutput) ToObsBucketStorageInfoArrayOutputWithContext(ctx context.Context) ObsBucketStorageInfoArrayOutput {
	return o
}

func (o ObsBucketStorageInfoArrayOutput) Index(i pulumi.IntInput) ObsBucketStorageInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObsBucketStorageInfo {
		return vs[0].([]ObsBucketStorageInfo)[vs[1].(int)]
	}).(ObsBucketStorageInfoOutput)
}

type ObsBucketWebsite struct {
	ErrorDocument         *string `pulumi:"errorDocument"`
	IndexDocument         *string `pulumi:"indexDocument"`
	RedirectAllRequestsTo *string `pulumi:"redirectAllRequestsTo"`
	RoutingRules          *string `pulumi:"routingRules"`
}

// ObsBucketWebsiteInput is an input type that accepts ObsBucketWebsiteArgs and ObsBucketWebsiteOutput values.
// You can construct a concrete instance of `ObsBucketWebsiteInput` via:
//
//	ObsBucketWebsiteArgs{...}
type ObsBucketWebsiteInput interface {
	pulumi.Input

	ToObsBucketWebsiteOutput() ObsBucketWebsiteOutput
	ToObsBucketWebsiteOutputWithContext(context.Context) ObsBucketWebsiteOutput
}

type ObsBucketWebsiteArgs struct {
	ErrorDocument         pulumi.StringPtrInput `pulumi:"errorDocument"`
	IndexDocument         pulumi.StringPtrInput `pulumi:"indexDocument"`
	RedirectAllRequestsTo pulumi.StringPtrInput `pulumi:"redirectAllRequestsTo"`
	RoutingRules          pulumi.StringPtrInput `pulumi:"routingRules"`
}

func (ObsBucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketWebsite)(nil)).Elem()
}

func (i ObsBucketWebsiteArgs) ToObsBucketWebsiteOutput() ObsBucketWebsiteOutput {
	return i.ToObsBucketWebsiteOutputWithContext(context.Background())
}

func (i ObsBucketWebsiteArgs) ToObsBucketWebsiteOutputWithContext(ctx context.Context) ObsBucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketWebsiteOutput)
}

func (i ObsBucketWebsiteArgs) ToObsBucketWebsitePtrOutput() ObsBucketWebsitePtrOutput {
	return i.ToObsBucketWebsitePtrOutputWithContext(context.Background())
}

func (i ObsBucketWebsiteArgs) ToObsBucketWebsitePtrOutputWithContext(ctx context.Context) ObsBucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketWebsiteOutput).ToObsBucketWebsitePtrOutputWithContext(ctx)
}

// ObsBucketWebsitePtrInput is an input type that accepts ObsBucketWebsiteArgs, ObsBucketWebsitePtr and ObsBucketWebsitePtrOutput values.
// You can construct a concrete instance of `ObsBucketWebsitePtrInput` via:
//
//	        ObsBucketWebsiteArgs{...}
//
//	or:
//
//	        nil
type ObsBucketWebsitePtrInput interface {
	pulumi.Input

	ToObsBucketWebsitePtrOutput() ObsBucketWebsitePtrOutput
	ToObsBucketWebsitePtrOutputWithContext(context.Context) ObsBucketWebsitePtrOutput
}

type obsBucketWebsitePtrType ObsBucketWebsiteArgs

func ObsBucketWebsitePtr(v *ObsBucketWebsiteArgs) ObsBucketWebsitePtrInput {
	return (*obsBucketWebsitePtrType)(v)
}

func (*obsBucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketWebsite)(nil)).Elem()
}

func (i *obsBucketWebsitePtrType) ToObsBucketWebsitePtrOutput() ObsBucketWebsitePtrOutput {
	return i.ToObsBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *obsBucketWebsitePtrType) ToObsBucketWebsitePtrOutputWithContext(ctx context.Context) ObsBucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketWebsitePtrOutput)
}

type ObsBucketWebsiteOutput struct{ *pulumi.OutputState }

func (ObsBucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObsBucketWebsite)(nil)).Elem()
}

func (o ObsBucketWebsiteOutput) ToObsBucketWebsiteOutput() ObsBucketWebsiteOutput {
	return o
}

func (o ObsBucketWebsiteOutput) ToObsBucketWebsiteOutputWithContext(ctx context.Context) ObsBucketWebsiteOutput {
	return o
}

func (o ObsBucketWebsiteOutput) ToObsBucketWebsitePtrOutput() ObsBucketWebsitePtrOutput {
	return o.ToObsBucketWebsitePtrOutputWithContext(context.Background())
}

func (o ObsBucketWebsiteOutput) ToObsBucketWebsitePtrOutputWithContext(ctx context.Context) ObsBucketWebsitePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObsBucketWebsite) *ObsBucketWebsite {
		return &v
	}).(ObsBucketWebsitePtrOutput)
}

func (o ObsBucketWebsiteOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObsBucketWebsite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

func (o ObsBucketWebsiteOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObsBucketWebsite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

func (o ObsBucketWebsiteOutput) RedirectAllRequestsTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObsBucketWebsite) *string { return v.RedirectAllRequestsTo }).(pulumi.StringPtrOutput)
}

func (o ObsBucketWebsiteOutput) RoutingRules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObsBucketWebsite) *string { return v.RoutingRules }).(pulumi.StringPtrOutput)
}

type ObsBucketWebsitePtrOutput struct{ *pulumi.OutputState }

func (ObsBucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketWebsite)(nil)).Elem()
}

func (o ObsBucketWebsitePtrOutput) ToObsBucketWebsitePtrOutput() ObsBucketWebsitePtrOutput {
	return o
}

func (o ObsBucketWebsitePtrOutput) ToObsBucketWebsitePtrOutputWithContext(ctx context.Context) ObsBucketWebsitePtrOutput {
	return o
}

func (o ObsBucketWebsitePtrOutput) Elem() ObsBucketWebsiteOutput {
	return o.ApplyT(func(v *ObsBucketWebsite) ObsBucketWebsite {
		if v != nil {
			return *v
		}
		var ret ObsBucketWebsite
		return ret
	}).(ObsBucketWebsiteOutput)
}

func (o ObsBucketWebsitePtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.ErrorDocument
	}).(pulumi.StringPtrOutput)
}

func (o ObsBucketWebsitePtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.IndexDocument
	}).(pulumi.StringPtrOutput)
}

func (o ObsBucketWebsitePtrOutput) RedirectAllRequestsTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.RedirectAllRequestsTo
	}).(pulumi.StringPtrOutput)
}

func (o ObsBucketWebsitePtrOutput) RoutingRules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsBucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRules
	}).(pulumi.StringPtrOutput)
}

type ProviderAssumeRole struct {
	AgencyName string `pulumi:"agencyName"`
	DomainName string `pulumi:"domainName"`
}

// ProviderAssumeRoleInput is an input type that accepts ProviderAssumeRoleArgs and ProviderAssumeRoleOutput values.
// You can construct a concrete instance of `ProviderAssumeRoleInput` via:
//
//	ProviderAssumeRoleArgs{...}
type ProviderAssumeRoleInput interface {
	pulumi.Input

	ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput
	ToProviderAssumeRoleOutputWithContext(context.Context) ProviderAssumeRoleOutput
}

type ProviderAssumeRoleArgs struct {
	AgencyName pulumi.StringInput `pulumi:"agencyName"`
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return i.ToProviderAssumeRoleOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput)
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput).ToProviderAssumeRolePtrOutputWithContext(ctx)
}

// ProviderAssumeRolePtrInput is an input type that accepts ProviderAssumeRoleArgs, ProviderAssumeRolePtr and ProviderAssumeRolePtrOutput values.
// You can construct a concrete instance of `ProviderAssumeRolePtrInput` via:
//
//	        ProviderAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type ProviderAssumeRolePtrInput interface {
	pulumi.Input

	ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput
	ToProviderAssumeRolePtrOutputWithContext(context.Context) ProviderAssumeRolePtrOutput
}

type providerAssumeRolePtrType ProviderAssumeRoleArgs

func ProviderAssumeRolePtr(v *ProviderAssumeRoleArgs) ProviderAssumeRolePtrInput {
	return (*providerAssumeRolePtrType)(v)
}

func (*providerAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRolePtrOutput)
}

type ProviderAssumeRoleOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAssumeRole) *ProviderAssumeRole {
		return &v
	}).(ProviderAssumeRolePtrOutput)
}

func (o ProviderAssumeRoleOutput) AgencyName() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderAssumeRole) string { return v.AgencyName }).(pulumi.StringOutput)
}

func (o ProviderAssumeRoleOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderAssumeRole) string { return v.DomainName }).(pulumi.StringOutput)
}

type ProviderAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) Elem() ProviderAssumeRoleOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) ProviderAssumeRole {
		if v != nil {
			return *v
		}
		var ret ProviderAssumeRole
		return ret
	}).(ProviderAssumeRoleOutput)
}

func (o ProviderAssumeRolePtrOutput) AgencyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.AgencyName
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

type RdsBackupDatabase struct {
	// Database to be backed up for Microsoft SQL Server.
	Name string `pulumi:"name"`
}

// RdsBackupDatabaseInput is an input type that accepts RdsBackupDatabaseArgs and RdsBackupDatabaseOutput values.
// You can construct a concrete instance of `RdsBackupDatabaseInput` via:
//
//	RdsBackupDatabaseArgs{...}
type RdsBackupDatabaseInput interface {
	pulumi.Input

	ToRdsBackupDatabaseOutput() RdsBackupDatabaseOutput
	ToRdsBackupDatabaseOutputWithContext(context.Context) RdsBackupDatabaseOutput
}

type RdsBackupDatabaseArgs struct {
	// Database to be backed up for Microsoft SQL Server.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RdsBackupDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsBackupDatabase)(nil)).Elem()
}

func (i RdsBackupDatabaseArgs) ToRdsBackupDatabaseOutput() RdsBackupDatabaseOutput {
	return i.ToRdsBackupDatabaseOutputWithContext(context.Background())
}

func (i RdsBackupDatabaseArgs) ToRdsBackupDatabaseOutputWithContext(ctx context.Context) RdsBackupDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsBackupDatabaseOutput)
}

// RdsBackupDatabaseArrayInput is an input type that accepts RdsBackupDatabaseArray and RdsBackupDatabaseArrayOutput values.
// You can construct a concrete instance of `RdsBackupDatabaseArrayInput` via:
//
//	RdsBackupDatabaseArray{ RdsBackupDatabaseArgs{...} }
type RdsBackupDatabaseArrayInput interface {
	pulumi.Input

	ToRdsBackupDatabaseArrayOutput() RdsBackupDatabaseArrayOutput
	ToRdsBackupDatabaseArrayOutputWithContext(context.Context) RdsBackupDatabaseArrayOutput
}

type RdsBackupDatabaseArray []RdsBackupDatabaseInput

func (RdsBackupDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsBackupDatabase)(nil)).Elem()
}

func (i RdsBackupDatabaseArray) ToRdsBackupDatabaseArrayOutput() RdsBackupDatabaseArrayOutput {
	return i.ToRdsBackupDatabaseArrayOutputWithContext(context.Background())
}

func (i RdsBackupDatabaseArray) ToRdsBackupDatabaseArrayOutputWithContext(ctx context.Context) RdsBackupDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsBackupDatabaseArrayOutput)
}

type RdsBackupDatabaseOutput struct{ *pulumi.OutputState }

func (RdsBackupDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsBackupDatabase)(nil)).Elem()
}

func (o RdsBackupDatabaseOutput) ToRdsBackupDatabaseOutput() RdsBackupDatabaseOutput {
	return o
}

func (o RdsBackupDatabaseOutput) ToRdsBackupDatabaseOutputWithContext(ctx context.Context) RdsBackupDatabaseOutput {
	return o
}

// Database to be backed up for Microsoft SQL Server.
func (o RdsBackupDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RdsBackupDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type RdsBackupDatabaseArrayOutput struct{ *pulumi.OutputState }

func (RdsBackupDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsBackupDatabase)(nil)).Elem()
}

func (o RdsBackupDatabaseArrayOutput) ToRdsBackupDatabaseArrayOutput() RdsBackupDatabaseArrayOutput {
	return o
}

func (o RdsBackupDatabaseArrayOutput) ToRdsBackupDatabaseArrayOutputWithContext(ctx context.Context) RdsBackupDatabaseArrayOutput {
	return o
}

func (o RdsBackupDatabaseArrayOutput) Index(i pulumi.IntInput) RdsBackupDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsBackupDatabase {
		return vs[0].([]RdsBackupDatabase)[vs[1].(int)]
	}).(RdsBackupDatabaseOutput)
}

type RdsInstanceBackupStrategy struct {
	// schema: Required
	KeepDays  *int    `pulumi:"keepDays"`
	Period    *string `pulumi:"period"`
	StartTime string  `pulumi:"startTime"`
}

// RdsInstanceBackupStrategyInput is an input type that accepts RdsInstanceBackupStrategyArgs and RdsInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `RdsInstanceBackupStrategyInput` via:
//
//	RdsInstanceBackupStrategyArgs{...}
type RdsInstanceBackupStrategyInput interface {
	pulumi.Input

	ToRdsInstanceBackupStrategyOutput() RdsInstanceBackupStrategyOutput
	ToRdsInstanceBackupStrategyOutputWithContext(context.Context) RdsInstanceBackupStrategyOutput
}

type RdsInstanceBackupStrategyArgs struct {
	// schema: Required
	KeepDays  pulumi.IntPtrInput    `pulumi:"keepDays"`
	Period    pulumi.StringPtrInput `pulumi:"period"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (RdsInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceBackupStrategy)(nil)).Elem()
}

func (i RdsInstanceBackupStrategyArgs) ToRdsInstanceBackupStrategyOutput() RdsInstanceBackupStrategyOutput {
	return i.ToRdsInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i RdsInstanceBackupStrategyArgs) ToRdsInstanceBackupStrategyOutputWithContext(ctx context.Context) RdsInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceBackupStrategyOutput)
}

func (i RdsInstanceBackupStrategyArgs) ToRdsInstanceBackupStrategyPtrOutput() RdsInstanceBackupStrategyPtrOutput {
	return i.ToRdsInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i RdsInstanceBackupStrategyArgs) ToRdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RdsInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceBackupStrategyOutput).ToRdsInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// RdsInstanceBackupStrategyPtrInput is an input type that accepts RdsInstanceBackupStrategyArgs, RdsInstanceBackupStrategyPtr and RdsInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `RdsInstanceBackupStrategyPtrInput` via:
//
//	        RdsInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type RdsInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToRdsInstanceBackupStrategyPtrOutput() RdsInstanceBackupStrategyPtrOutput
	ToRdsInstanceBackupStrategyPtrOutputWithContext(context.Context) RdsInstanceBackupStrategyPtrOutput
}

type rdsInstanceBackupStrategyPtrType RdsInstanceBackupStrategyArgs

func RdsInstanceBackupStrategyPtr(v *RdsInstanceBackupStrategyArgs) RdsInstanceBackupStrategyPtrInput {
	return (*rdsInstanceBackupStrategyPtrType)(v)
}

func (*rdsInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceBackupStrategy)(nil)).Elem()
}

func (i *rdsInstanceBackupStrategyPtrType) ToRdsInstanceBackupStrategyPtrOutput() RdsInstanceBackupStrategyPtrOutput {
	return i.ToRdsInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *rdsInstanceBackupStrategyPtrType) ToRdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RdsInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceBackupStrategyPtrOutput)
}

type RdsInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (RdsInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceBackupStrategy)(nil)).Elem()
}

func (o RdsInstanceBackupStrategyOutput) ToRdsInstanceBackupStrategyOutput() RdsInstanceBackupStrategyOutput {
	return o
}

func (o RdsInstanceBackupStrategyOutput) ToRdsInstanceBackupStrategyOutputWithContext(ctx context.Context) RdsInstanceBackupStrategyOutput {
	return o
}

func (o RdsInstanceBackupStrategyOutput) ToRdsInstanceBackupStrategyPtrOutput() RdsInstanceBackupStrategyPtrOutput {
	return o.ToRdsInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o RdsInstanceBackupStrategyOutput) ToRdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RdsInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsInstanceBackupStrategy) *RdsInstanceBackupStrategy {
		return &v
	}).(RdsInstanceBackupStrategyPtrOutput)
}

// schema: Required
func (o RdsInstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsInstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

func (o RdsInstanceBackupStrategyOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceBackupStrategy) *string { return v.Period }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type RdsInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (RdsInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceBackupStrategy)(nil)).Elem()
}

func (o RdsInstanceBackupStrategyPtrOutput) ToRdsInstanceBackupStrategyPtrOutput() RdsInstanceBackupStrategyPtrOutput {
	return o
}

func (o RdsInstanceBackupStrategyPtrOutput) ToRdsInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RdsInstanceBackupStrategyPtrOutput {
	return o
}

func (o RdsInstanceBackupStrategyPtrOutput) Elem() RdsInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *RdsInstanceBackupStrategy) RdsInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret RdsInstanceBackupStrategy
		return ret
	}).(RdsInstanceBackupStrategyOutput)
}

// schema: Required
func (o RdsInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

func (o RdsInstanceBackupStrategyPtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

func (o RdsInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type RdsInstanceDb struct {
	Password *string `pulumi:"password"`
	Port     *int    `pulumi:"port"`
	Type     string  `pulumi:"type"`
	UserName *string `pulumi:"userName"`
	Version  string  `pulumi:"version"`
}

// RdsInstanceDbInput is an input type that accepts RdsInstanceDbArgs and RdsInstanceDbOutput values.
// You can construct a concrete instance of `RdsInstanceDbInput` via:
//
//	RdsInstanceDbArgs{...}
type RdsInstanceDbInput interface {
	pulumi.Input

	ToRdsInstanceDbOutput() RdsInstanceDbOutput
	ToRdsInstanceDbOutputWithContext(context.Context) RdsInstanceDbOutput
}

type RdsInstanceDbArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	Port     pulumi.IntPtrInput    `pulumi:"port"`
	Type     pulumi.StringInput    `pulumi:"type"`
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	Version  pulumi.StringInput    `pulumi:"version"`
}

func (RdsInstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceDb)(nil)).Elem()
}

func (i RdsInstanceDbArgs) ToRdsInstanceDbOutput() RdsInstanceDbOutput {
	return i.ToRdsInstanceDbOutputWithContext(context.Background())
}

func (i RdsInstanceDbArgs) ToRdsInstanceDbOutputWithContext(ctx context.Context) RdsInstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceDbOutput)
}

func (i RdsInstanceDbArgs) ToRdsInstanceDbPtrOutput() RdsInstanceDbPtrOutput {
	return i.ToRdsInstanceDbPtrOutputWithContext(context.Background())
}

func (i RdsInstanceDbArgs) ToRdsInstanceDbPtrOutputWithContext(ctx context.Context) RdsInstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceDbOutput).ToRdsInstanceDbPtrOutputWithContext(ctx)
}

// RdsInstanceDbPtrInput is an input type that accepts RdsInstanceDbArgs, RdsInstanceDbPtr and RdsInstanceDbPtrOutput values.
// You can construct a concrete instance of `RdsInstanceDbPtrInput` via:
//
//	        RdsInstanceDbArgs{...}
//
//	or:
//
//	        nil
type RdsInstanceDbPtrInput interface {
	pulumi.Input

	ToRdsInstanceDbPtrOutput() RdsInstanceDbPtrOutput
	ToRdsInstanceDbPtrOutputWithContext(context.Context) RdsInstanceDbPtrOutput
}

type rdsInstanceDbPtrType RdsInstanceDbArgs

func RdsInstanceDbPtr(v *RdsInstanceDbArgs) RdsInstanceDbPtrInput {
	return (*rdsInstanceDbPtrType)(v)
}

func (*rdsInstanceDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceDb)(nil)).Elem()
}

func (i *rdsInstanceDbPtrType) ToRdsInstanceDbPtrOutput() RdsInstanceDbPtrOutput {
	return i.ToRdsInstanceDbPtrOutputWithContext(context.Background())
}

func (i *rdsInstanceDbPtrType) ToRdsInstanceDbPtrOutputWithContext(ctx context.Context) RdsInstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceDbPtrOutput)
}

type RdsInstanceDbOutput struct{ *pulumi.OutputState }

func (RdsInstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceDb)(nil)).Elem()
}

func (o RdsInstanceDbOutput) ToRdsInstanceDbOutput() RdsInstanceDbOutput {
	return o
}

func (o RdsInstanceDbOutput) ToRdsInstanceDbOutputWithContext(ctx context.Context) RdsInstanceDbOutput {
	return o
}

func (o RdsInstanceDbOutput) ToRdsInstanceDbPtrOutput() RdsInstanceDbPtrOutput {
	return o.ToRdsInstanceDbPtrOutputWithContext(context.Background())
}

func (o RdsInstanceDbOutput) ToRdsInstanceDbPtrOutputWithContext(ctx context.Context) RdsInstanceDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsInstanceDb) *RdsInstanceDb {
		return &v
	}).(RdsInstanceDbPtrOutput)
}

func (o RdsInstanceDbOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceDb) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceDbOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsInstanceDb) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o RdsInstanceDbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceDb) string { return v.Type }).(pulumi.StringOutput)
}

func (o RdsInstanceDbOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceDb) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceDbOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceDb) string { return v.Version }).(pulumi.StringOutput)
}

type RdsInstanceDbPtrOutput struct{ *pulumi.OutputState }

func (RdsInstanceDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceDb)(nil)).Elem()
}

func (o RdsInstanceDbPtrOutput) ToRdsInstanceDbPtrOutput() RdsInstanceDbPtrOutput {
	return o
}

func (o RdsInstanceDbPtrOutput) ToRdsInstanceDbPtrOutputWithContext(ctx context.Context) RdsInstanceDbPtrOutput {
	return o
}

func (o RdsInstanceDbPtrOutput) Elem() RdsInstanceDbOutput {
	return o.ApplyT(func(v *RdsInstanceDb) RdsInstanceDb {
		if v != nil {
			return *v
		}
		var ret RdsInstanceDb
		return ret
	}).(RdsInstanceDbOutput)
}

func (o RdsInstanceDbPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o RdsInstanceDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsInstanceDb) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o RdsInstanceDbPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o RdsInstanceDbPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

func (o RdsInstanceDbPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type RdsInstanceMsdtcHost struct {
	HostName string  `pulumi:"hostName"`
	Id       *string `pulumi:"id"`
	Ip       string  `pulumi:"ip"`
}

// RdsInstanceMsdtcHostInput is an input type that accepts RdsInstanceMsdtcHostArgs and RdsInstanceMsdtcHostOutput values.
// You can construct a concrete instance of `RdsInstanceMsdtcHostInput` via:
//
//	RdsInstanceMsdtcHostArgs{...}
type RdsInstanceMsdtcHostInput interface {
	pulumi.Input

	ToRdsInstanceMsdtcHostOutput() RdsInstanceMsdtcHostOutput
	ToRdsInstanceMsdtcHostOutputWithContext(context.Context) RdsInstanceMsdtcHostOutput
}

type RdsInstanceMsdtcHostArgs struct {
	HostName pulumi.StringInput    `pulumi:"hostName"`
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Ip       pulumi.StringInput    `pulumi:"ip"`
}

func (RdsInstanceMsdtcHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceMsdtcHost)(nil)).Elem()
}

func (i RdsInstanceMsdtcHostArgs) ToRdsInstanceMsdtcHostOutput() RdsInstanceMsdtcHostOutput {
	return i.ToRdsInstanceMsdtcHostOutputWithContext(context.Background())
}

func (i RdsInstanceMsdtcHostArgs) ToRdsInstanceMsdtcHostOutputWithContext(ctx context.Context) RdsInstanceMsdtcHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceMsdtcHostOutput)
}

// RdsInstanceMsdtcHostArrayInput is an input type that accepts RdsInstanceMsdtcHostArray and RdsInstanceMsdtcHostArrayOutput values.
// You can construct a concrete instance of `RdsInstanceMsdtcHostArrayInput` via:
//
//	RdsInstanceMsdtcHostArray{ RdsInstanceMsdtcHostArgs{...} }
type RdsInstanceMsdtcHostArrayInput interface {
	pulumi.Input

	ToRdsInstanceMsdtcHostArrayOutput() RdsInstanceMsdtcHostArrayOutput
	ToRdsInstanceMsdtcHostArrayOutputWithContext(context.Context) RdsInstanceMsdtcHostArrayOutput
}

type RdsInstanceMsdtcHostArray []RdsInstanceMsdtcHostInput

func (RdsInstanceMsdtcHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsInstanceMsdtcHost)(nil)).Elem()
}

func (i RdsInstanceMsdtcHostArray) ToRdsInstanceMsdtcHostArrayOutput() RdsInstanceMsdtcHostArrayOutput {
	return i.ToRdsInstanceMsdtcHostArrayOutputWithContext(context.Background())
}

func (i RdsInstanceMsdtcHostArray) ToRdsInstanceMsdtcHostArrayOutputWithContext(ctx context.Context) RdsInstanceMsdtcHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceMsdtcHostArrayOutput)
}

type RdsInstanceMsdtcHostOutput struct{ *pulumi.OutputState }

func (RdsInstanceMsdtcHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceMsdtcHost)(nil)).Elem()
}

func (o RdsInstanceMsdtcHostOutput) ToRdsInstanceMsdtcHostOutput() RdsInstanceMsdtcHostOutput {
	return o
}

func (o RdsInstanceMsdtcHostOutput) ToRdsInstanceMsdtcHostOutputWithContext(ctx context.Context) RdsInstanceMsdtcHostOutput {
	return o
}

func (o RdsInstanceMsdtcHostOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceMsdtcHost) string { return v.HostName }).(pulumi.StringOutput)
}

func (o RdsInstanceMsdtcHostOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceMsdtcHost) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceMsdtcHostOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceMsdtcHost) string { return v.Ip }).(pulumi.StringOutput)
}

type RdsInstanceMsdtcHostArrayOutput struct{ *pulumi.OutputState }

func (RdsInstanceMsdtcHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsInstanceMsdtcHost)(nil)).Elem()
}

func (o RdsInstanceMsdtcHostArrayOutput) ToRdsInstanceMsdtcHostArrayOutput() RdsInstanceMsdtcHostArrayOutput {
	return o
}

func (o RdsInstanceMsdtcHostArrayOutput) ToRdsInstanceMsdtcHostArrayOutputWithContext(ctx context.Context) RdsInstanceMsdtcHostArrayOutput {
	return o
}

func (o RdsInstanceMsdtcHostArrayOutput) Index(i pulumi.IntInput) RdsInstanceMsdtcHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsInstanceMsdtcHost {
		return vs[0].([]RdsInstanceMsdtcHost)[vs[1].(int)]
	}).(RdsInstanceMsdtcHostOutput)
}

type RdsInstanceNode struct {
	AvailabilityZone *string `pulumi:"availabilityZone"`
	Id               *string `pulumi:"id"`
	Name             *string `pulumi:"name"`
	Role             *string `pulumi:"role"`
	Status           *string `pulumi:"status"`
}

// RdsInstanceNodeInput is an input type that accepts RdsInstanceNodeArgs and RdsInstanceNodeOutput values.
// You can construct a concrete instance of `RdsInstanceNodeInput` via:
//
//	RdsInstanceNodeArgs{...}
type RdsInstanceNodeInput interface {
	pulumi.Input

	ToRdsInstanceNodeOutput() RdsInstanceNodeOutput
	ToRdsInstanceNodeOutputWithContext(context.Context) RdsInstanceNodeOutput
}

type RdsInstanceNodeArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	Role             pulumi.StringPtrInput `pulumi:"role"`
	Status           pulumi.StringPtrInput `pulumi:"status"`
}

func (RdsInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceNode)(nil)).Elem()
}

func (i RdsInstanceNodeArgs) ToRdsInstanceNodeOutput() RdsInstanceNodeOutput {
	return i.ToRdsInstanceNodeOutputWithContext(context.Background())
}

func (i RdsInstanceNodeArgs) ToRdsInstanceNodeOutputWithContext(ctx context.Context) RdsInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceNodeOutput)
}

// RdsInstanceNodeArrayInput is an input type that accepts RdsInstanceNodeArray and RdsInstanceNodeArrayOutput values.
// You can construct a concrete instance of `RdsInstanceNodeArrayInput` via:
//
//	RdsInstanceNodeArray{ RdsInstanceNodeArgs{...} }
type RdsInstanceNodeArrayInput interface {
	pulumi.Input

	ToRdsInstanceNodeArrayOutput() RdsInstanceNodeArrayOutput
	ToRdsInstanceNodeArrayOutputWithContext(context.Context) RdsInstanceNodeArrayOutput
}

type RdsInstanceNodeArray []RdsInstanceNodeInput

func (RdsInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsInstanceNode)(nil)).Elem()
}

func (i RdsInstanceNodeArray) ToRdsInstanceNodeArrayOutput() RdsInstanceNodeArrayOutput {
	return i.ToRdsInstanceNodeArrayOutputWithContext(context.Background())
}

func (i RdsInstanceNodeArray) ToRdsInstanceNodeArrayOutputWithContext(ctx context.Context) RdsInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceNodeArrayOutput)
}

type RdsInstanceNodeOutput struct{ *pulumi.OutputState }

func (RdsInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceNode)(nil)).Elem()
}

func (o RdsInstanceNodeOutput) ToRdsInstanceNodeOutput() RdsInstanceNodeOutput {
	return o
}

func (o RdsInstanceNodeOutput) ToRdsInstanceNodeOutputWithContext(ctx context.Context) RdsInstanceNodeOutput {
	return o
}

func (o RdsInstanceNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceNodeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceNode) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RdsInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (RdsInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsInstanceNode)(nil)).Elem()
}

func (o RdsInstanceNodeArrayOutput) ToRdsInstanceNodeArrayOutput() RdsInstanceNodeArrayOutput {
	return o
}

func (o RdsInstanceNodeArrayOutput) ToRdsInstanceNodeArrayOutputWithContext(ctx context.Context) RdsInstanceNodeArrayOutput {
	return o
}

func (o RdsInstanceNodeArrayOutput) Index(i pulumi.IntInput) RdsInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsInstanceNode {
		return vs[0].([]RdsInstanceNode)[vs[1].(int)]
	}).(RdsInstanceNodeOutput)
}

type RdsInstanceParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// RdsInstanceParameterInput is an input type that accepts RdsInstanceParameterArgs and RdsInstanceParameterOutput values.
// You can construct a concrete instance of `RdsInstanceParameterInput` via:
//
//	RdsInstanceParameterArgs{...}
type RdsInstanceParameterInput interface {
	pulumi.Input

	ToRdsInstanceParameterOutput() RdsInstanceParameterOutput
	ToRdsInstanceParameterOutputWithContext(context.Context) RdsInstanceParameterOutput
}

type RdsInstanceParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (RdsInstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceParameter)(nil)).Elem()
}

func (i RdsInstanceParameterArgs) ToRdsInstanceParameterOutput() RdsInstanceParameterOutput {
	return i.ToRdsInstanceParameterOutputWithContext(context.Background())
}

func (i RdsInstanceParameterArgs) ToRdsInstanceParameterOutputWithContext(ctx context.Context) RdsInstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceParameterOutput)
}

// RdsInstanceParameterArrayInput is an input type that accepts RdsInstanceParameterArray and RdsInstanceParameterArrayOutput values.
// You can construct a concrete instance of `RdsInstanceParameterArrayInput` via:
//
//	RdsInstanceParameterArray{ RdsInstanceParameterArgs{...} }
type RdsInstanceParameterArrayInput interface {
	pulumi.Input

	ToRdsInstanceParameterArrayOutput() RdsInstanceParameterArrayOutput
	ToRdsInstanceParameterArrayOutputWithContext(context.Context) RdsInstanceParameterArrayOutput
}

type RdsInstanceParameterArray []RdsInstanceParameterInput

func (RdsInstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsInstanceParameter)(nil)).Elem()
}

func (i RdsInstanceParameterArray) ToRdsInstanceParameterArrayOutput() RdsInstanceParameterArrayOutput {
	return i.ToRdsInstanceParameterArrayOutputWithContext(context.Background())
}

func (i RdsInstanceParameterArray) ToRdsInstanceParameterArrayOutputWithContext(ctx context.Context) RdsInstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceParameterArrayOutput)
}

type RdsInstanceParameterOutput struct{ *pulumi.OutputState }

func (RdsInstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceParameter)(nil)).Elem()
}

func (o RdsInstanceParameterOutput) ToRdsInstanceParameterOutput() RdsInstanceParameterOutput {
	return o
}

func (o RdsInstanceParameterOutput) ToRdsInstanceParameterOutputWithContext(ctx context.Context) RdsInstanceParameterOutput {
	return o
}

func (o RdsInstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RdsInstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type RdsInstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (RdsInstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsInstanceParameter)(nil)).Elem()
}

func (o RdsInstanceParameterArrayOutput) ToRdsInstanceParameterArrayOutput() RdsInstanceParameterArrayOutput {
	return o
}

func (o RdsInstanceParameterArrayOutput) ToRdsInstanceParameterArrayOutputWithContext(ctx context.Context) RdsInstanceParameterArrayOutput {
	return o
}

func (o RdsInstanceParameterArrayOutput) Index(i pulumi.IntInput) RdsInstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsInstanceParameter {
		return vs[0].([]RdsInstanceParameter)[vs[1].(int)]
	}).(RdsInstanceParameterOutput)
}

type RdsInstanceRestore struct {
	BackupId     string            `pulumi:"backupId"`
	DatabaseName map[string]string `pulumi:"databaseName"`
	InstanceId   string            `pulumi:"instanceId"`
}

// RdsInstanceRestoreInput is an input type that accepts RdsInstanceRestoreArgs and RdsInstanceRestoreOutput values.
// You can construct a concrete instance of `RdsInstanceRestoreInput` via:
//
//	RdsInstanceRestoreArgs{...}
type RdsInstanceRestoreInput interface {
	pulumi.Input

	ToRdsInstanceRestoreOutput() RdsInstanceRestoreOutput
	ToRdsInstanceRestoreOutputWithContext(context.Context) RdsInstanceRestoreOutput
}

type RdsInstanceRestoreArgs struct {
	BackupId     pulumi.StringInput    `pulumi:"backupId"`
	DatabaseName pulumi.StringMapInput `pulumi:"databaseName"`
	InstanceId   pulumi.StringInput    `pulumi:"instanceId"`
}

func (RdsInstanceRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceRestore)(nil)).Elem()
}

func (i RdsInstanceRestoreArgs) ToRdsInstanceRestoreOutput() RdsInstanceRestoreOutput {
	return i.ToRdsInstanceRestoreOutputWithContext(context.Background())
}

func (i RdsInstanceRestoreArgs) ToRdsInstanceRestoreOutputWithContext(ctx context.Context) RdsInstanceRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceRestoreOutput)
}

func (i RdsInstanceRestoreArgs) ToRdsInstanceRestorePtrOutput() RdsInstanceRestorePtrOutput {
	return i.ToRdsInstanceRestorePtrOutputWithContext(context.Background())
}

func (i RdsInstanceRestoreArgs) ToRdsInstanceRestorePtrOutputWithContext(ctx context.Context) RdsInstanceRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceRestoreOutput).ToRdsInstanceRestorePtrOutputWithContext(ctx)
}

// RdsInstanceRestorePtrInput is an input type that accepts RdsInstanceRestoreArgs, RdsInstanceRestorePtr and RdsInstanceRestorePtrOutput values.
// You can construct a concrete instance of `RdsInstanceRestorePtrInput` via:
//
//	        RdsInstanceRestoreArgs{...}
//
//	or:
//
//	        nil
type RdsInstanceRestorePtrInput interface {
	pulumi.Input

	ToRdsInstanceRestorePtrOutput() RdsInstanceRestorePtrOutput
	ToRdsInstanceRestorePtrOutputWithContext(context.Context) RdsInstanceRestorePtrOutput
}

type rdsInstanceRestorePtrType RdsInstanceRestoreArgs

func RdsInstanceRestorePtr(v *RdsInstanceRestoreArgs) RdsInstanceRestorePtrInput {
	return (*rdsInstanceRestorePtrType)(v)
}

func (*rdsInstanceRestorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceRestore)(nil)).Elem()
}

func (i *rdsInstanceRestorePtrType) ToRdsInstanceRestorePtrOutput() RdsInstanceRestorePtrOutput {
	return i.ToRdsInstanceRestorePtrOutputWithContext(context.Background())
}

func (i *rdsInstanceRestorePtrType) ToRdsInstanceRestorePtrOutputWithContext(ctx context.Context) RdsInstanceRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceRestorePtrOutput)
}

type RdsInstanceRestoreOutput struct{ *pulumi.OutputState }

func (RdsInstanceRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceRestore)(nil)).Elem()
}

func (o RdsInstanceRestoreOutput) ToRdsInstanceRestoreOutput() RdsInstanceRestoreOutput {
	return o
}

func (o RdsInstanceRestoreOutput) ToRdsInstanceRestoreOutputWithContext(ctx context.Context) RdsInstanceRestoreOutput {
	return o
}

func (o RdsInstanceRestoreOutput) ToRdsInstanceRestorePtrOutput() RdsInstanceRestorePtrOutput {
	return o.ToRdsInstanceRestorePtrOutputWithContext(context.Background())
}

func (o RdsInstanceRestoreOutput) ToRdsInstanceRestorePtrOutputWithContext(ctx context.Context) RdsInstanceRestorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsInstanceRestore) *RdsInstanceRestore {
		return &v
	}).(RdsInstanceRestorePtrOutput)
}

func (o RdsInstanceRestoreOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceRestore) string { return v.BackupId }).(pulumi.StringOutput)
}

func (o RdsInstanceRestoreOutput) DatabaseName() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsInstanceRestore) map[string]string { return v.DatabaseName }).(pulumi.StringMapOutput)
}

func (o RdsInstanceRestoreOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceRestore) string { return v.InstanceId }).(pulumi.StringOutput)
}

type RdsInstanceRestorePtrOutput struct{ *pulumi.OutputState }

func (RdsInstanceRestorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceRestore)(nil)).Elem()
}

func (o RdsInstanceRestorePtrOutput) ToRdsInstanceRestorePtrOutput() RdsInstanceRestorePtrOutput {
	return o
}

func (o RdsInstanceRestorePtrOutput) ToRdsInstanceRestorePtrOutputWithContext(ctx context.Context) RdsInstanceRestorePtrOutput {
	return o
}

func (o RdsInstanceRestorePtrOutput) Elem() RdsInstanceRestoreOutput {
	return o.ApplyT(func(v *RdsInstanceRestore) RdsInstanceRestore {
		if v != nil {
			return *v
		}
		var ret RdsInstanceRestore
		return ret
	}).(RdsInstanceRestoreOutput)
}

func (o RdsInstanceRestorePtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceRestore) *string {
		if v == nil {
			return nil
		}
		return &v.BackupId
	}).(pulumi.StringPtrOutput)
}

func (o RdsInstanceRestorePtrOutput) DatabaseName() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsInstanceRestore) map[string]string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringMapOutput)
}

func (o RdsInstanceRestorePtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceRestore) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceId
	}).(pulumi.StringPtrOutput)
}

type RdsInstanceVolume struct {
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	LimitSize        *int    `pulumi:"limitSize"`
	Size             int     `pulumi:"size"`
	TriggerThreshold *int    `pulumi:"triggerThreshold"`
	Type             string  `pulumi:"type"`
}

// RdsInstanceVolumeInput is an input type that accepts RdsInstanceVolumeArgs and RdsInstanceVolumeOutput values.
// You can construct a concrete instance of `RdsInstanceVolumeInput` via:
//
//	RdsInstanceVolumeArgs{...}
type RdsInstanceVolumeInput interface {
	pulumi.Input

	ToRdsInstanceVolumeOutput() RdsInstanceVolumeOutput
	ToRdsInstanceVolumeOutputWithContext(context.Context) RdsInstanceVolumeOutput
}

type RdsInstanceVolumeArgs struct {
	DiskEncryptionId pulumi.StringPtrInput `pulumi:"diskEncryptionId"`
	LimitSize        pulumi.IntPtrInput    `pulumi:"limitSize"`
	Size             pulumi.IntInput       `pulumi:"size"`
	TriggerThreshold pulumi.IntPtrInput    `pulumi:"triggerThreshold"`
	Type             pulumi.StringInput    `pulumi:"type"`
}

func (RdsInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceVolume)(nil)).Elem()
}

func (i RdsInstanceVolumeArgs) ToRdsInstanceVolumeOutput() RdsInstanceVolumeOutput {
	return i.ToRdsInstanceVolumeOutputWithContext(context.Background())
}

func (i RdsInstanceVolumeArgs) ToRdsInstanceVolumeOutputWithContext(ctx context.Context) RdsInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceVolumeOutput)
}

func (i RdsInstanceVolumeArgs) ToRdsInstanceVolumePtrOutput() RdsInstanceVolumePtrOutput {
	return i.ToRdsInstanceVolumePtrOutputWithContext(context.Background())
}

func (i RdsInstanceVolumeArgs) ToRdsInstanceVolumePtrOutputWithContext(ctx context.Context) RdsInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceVolumeOutput).ToRdsInstanceVolumePtrOutputWithContext(ctx)
}

// RdsInstanceVolumePtrInput is an input type that accepts RdsInstanceVolumeArgs, RdsInstanceVolumePtr and RdsInstanceVolumePtrOutput values.
// You can construct a concrete instance of `RdsInstanceVolumePtrInput` via:
//
//	        RdsInstanceVolumeArgs{...}
//
//	or:
//
//	        nil
type RdsInstanceVolumePtrInput interface {
	pulumi.Input

	ToRdsInstanceVolumePtrOutput() RdsInstanceVolumePtrOutput
	ToRdsInstanceVolumePtrOutputWithContext(context.Context) RdsInstanceVolumePtrOutput
}

type rdsInstanceVolumePtrType RdsInstanceVolumeArgs

func RdsInstanceVolumePtr(v *RdsInstanceVolumeArgs) RdsInstanceVolumePtrInput {
	return (*rdsInstanceVolumePtrType)(v)
}

func (*rdsInstanceVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceVolume)(nil)).Elem()
}

func (i *rdsInstanceVolumePtrType) ToRdsInstanceVolumePtrOutput() RdsInstanceVolumePtrOutput {
	return i.ToRdsInstanceVolumePtrOutputWithContext(context.Background())
}

func (i *rdsInstanceVolumePtrType) ToRdsInstanceVolumePtrOutputWithContext(ctx context.Context) RdsInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsInstanceVolumePtrOutput)
}

type RdsInstanceVolumeOutput struct{ *pulumi.OutputState }

func (RdsInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsInstanceVolume)(nil)).Elem()
}

func (o RdsInstanceVolumeOutput) ToRdsInstanceVolumeOutput() RdsInstanceVolumeOutput {
	return o
}

func (o RdsInstanceVolumeOutput) ToRdsInstanceVolumeOutputWithContext(ctx context.Context) RdsInstanceVolumeOutput {
	return o
}

func (o RdsInstanceVolumeOutput) ToRdsInstanceVolumePtrOutput() RdsInstanceVolumePtrOutput {
	return o.ToRdsInstanceVolumePtrOutputWithContext(context.Background())
}

func (o RdsInstanceVolumeOutput) ToRdsInstanceVolumePtrOutputWithContext(ctx context.Context) RdsInstanceVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsInstanceVolume) *RdsInstanceVolume {
		return &v
	}).(RdsInstanceVolumePtrOutput)
}

func (o RdsInstanceVolumeOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsInstanceVolume) *string { return v.DiskEncryptionId }).(pulumi.StringPtrOutput)
}

func (o RdsInstanceVolumeOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsInstanceVolume) *int { return v.LimitSize }).(pulumi.IntPtrOutput)
}

func (o RdsInstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v RdsInstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o RdsInstanceVolumeOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsInstanceVolume) *int { return v.TriggerThreshold }).(pulumi.IntPtrOutput)
}

func (o RdsInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RdsInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type RdsInstanceVolumePtrOutput struct{ *pulumi.OutputState }

func (RdsInstanceVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsInstanceVolume)(nil)).Elem()
}

func (o RdsInstanceVolumePtrOutput) ToRdsInstanceVolumePtrOutput() RdsInstanceVolumePtrOutput {
	return o
}

func (o RdsInstanceVolumePtrOutput) ToRdsInstanceVolumePtrOutputWithContext(ctx context.Context) RdsInstanceVolumePtrOutput {
	return o
}

func (o RdsInstanceVolumePtrOutput) Elem() RdsInstanceVolumeOutput {
	return o.ApplyT(func(v *RdsInstanceVolume) RdsInstanceVolume {
		if v != nil {
			return *v
		}
		var ret RdsInstanceVolume
		return ret
	}).(RdsInstanceVolumeOutput)
}

func (o RdsInstanceVolumePtrOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionId
	}).(pulumi.StringPtrOutput)
}

func (o RdsInstanceVolumePtrOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.LimitSize
	}).(pulumi.IntPtrOutput)
}

func (o RdsInstanceVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

func (o RdsInstanceVolumePtrOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.TriggerThreshold
	}).(pulumi.IntPtrOutput)
}

func (o RdsInstanceVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type RdsMysqlDatabasePrivilegeUser struct {
	// Specifies the username of the database account.
	Name string `pulumi:"name"`
	// Specifies the read-only permission.
	Readonly *bool `pulumi:"readonly"`
}

// RdsMysqlDatabasePrivilegeUserInput is an input type that accepts RdsMysqlDatabasePrivilegeUserArgs and RdsMysqlDatabasePrivilegeUserOutput values.
// You can construct a concrete instance of `RdsMysqlDatabasePrivilegeUserInput` via:
//
//	RdsMysqlDatabasePrivilegeUserArgs{...}
type RdsMysqlDatabasePrivilegeUserInput interface {
	pulumi.Input

	ToRdsMysqlDatabasePrivilegeUserOutput() RdsMysqlDatabasePrivilegeUserOutput
	ToRdsMysqlDatabasePrivilegeUserOutputWithContext(context.Context) RdsMysqlDatabasePrivilegeUserOutput
}

type RdsMysqlDatabasePrivilegeUserArgs struct {
	// Specifies the username of the database account.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the read-only permission.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (RdsMysqlDatabasePrivilegeUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (i RdsMysqlDatabasePrivilegeUserArgs) ToRdsMysqlDatabasePrivilegeUserOutput() RdsMysqlDatabasePrivilegeUserOutput {
	return i.ToRdsMysqlDatabasePrivilegeUserOutputWithContext(context.Background())
}

func (i RdsMysqlDatabasePrivilegeUserArgs) ToRdsMysqlDatabasePrivilegeUserOutputWithContext(ctx context.Context) RdsMysqlDatabasePrivilegeUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabasePrivilegeUserOutput)
}

// RdsMysqlDatabasePrivilegeUserArrayInput is an input type that accepts RdsMysqlDatabasePrivilegeUserArray and RdsMysqlDatabasePrivilegeUserArrayOutput values.
// You can construct a concrete instance of `RdsMysqlDatabasePrivilegeUserArrayInput` via:
//
//	RdsMysqlDatabasePrivilegeUserArray{ RdsMysqlDatabasePrivilegeUserArgs{...} }
type RdsMysqlDatabasePrivilegeUserArrayInput interface {
	pulumi.Input

	ToRdsMysqlDatabasePrivilegeUserArrayOutput() RdsMysqlDatabasePrivilegeUserArrayOutput
	ToRdsMysqlDatabasePrivilegeUserArrayOutputWithContext(context.Context) RdsMysqlDatabasePrivilegeUserArrayOutput
}

type RdsMysqlDatabasePrivilegeUserArray []RdsMysqlDatabasePrivilegeUserInput

func (RdsMysqlDatabasePrivilegeUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (i RdsMysqlDatabasePrivilegeUserArray) ToRdsMysqlDatabasePrivilegeUserArrayOutput() RdsMysqlDatabasePrivilegeUserArrayOutput {
	return i.ToRdsMysqlDatabasePrivilegeUserArrayOutputWithContext(context.Background())
}

func (i RdsMysqlDatabasePrivilegeUserArray) ToRdsMysqlDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) RdsMysqlDatabasePrivilegeUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabasePrivilegeUserArrayOutput)
}

type RdsMysqlDatabasePrivilegeUserOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabasePrivilegeUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (o RdsMysqlDatabasePrivilegeUserOutput) ToRdsMysqlDatabasePrivilegeUserOutput() RdsMysqlDatabasePrivilegeUserOutput {
	return o
}

func (o RdsMysqlDatabasePrivilegeUserOutput) ToRdsMysqlDatabasePrivilegeUserOutputWithContext(ctx context.Context) RdsMysqlDatabasePrivilegeUserOutput {
	return o
}

// Specifies the username of the database account.
func (o RdsMysqlDatabasePrivilegeUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RdsMysqlDatabasePrivilegeUser) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the read-only permission.
func (o RdsMysqlDatabasePrivilegeUserOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsMysqlDatabasePrivilegeUser) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type RdsMysqlDatabasePrivilegeUserArrayOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabasePrivilegeUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (o RdsMysqlDatabasePrivilegeUserArrayOutput) ToRdsMysqlDatabasePrivilegeUserArrayOutput() RdsMysqlDatabasePrivilegeUserArrayOutput {
	return o
}

func (o RdsMysqlDatabasePrivilegeUserArrayOutput) ToRdsMysqlDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) RdsMysqlDatabasePrivilegeUserArrayOutput {
	return o
}

func (o RdsMysqlDatabasePrivilegeUserArrayOutput) Index(i pulumi.IntInput) RdsMysqlDatabasePrivilegeUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsMysqlDatabasePrivilegeUser {
		return vs[0].([]RdsMysqlDatabasePrivilegeUser)[vs[1].(int)]
	}).(RdsMysqlDatabasePrivilegeUserOutput)
}

type RdsMysqlDatabaseTableRestoreDatabase struct {
	// Specifies the name of the database after restoration.
	NewName string `pulumi:"newName"`
	// Specifies the name of the database before restoration.
	OldName string `pulumi:"oldName"`
}

// RdsMysqlDatabaseTableRestoreDatabaseInput is an input type that accepts RdsMysqlDatabaseTableRestoreDatabaseArgs and RdsMysqlDatabaseTableRestoreDatabaseOutput values.
// You can construct a concrete instance of `RdsMysqlDatabaseTableRestoreDatabaseInput` via:
//
//	RdsMysqlDatabaseTableRestoreDatabaseArgs{...}
type RdsMysqlDatabaseTableRestoreDatabaseInput interface {
	pulumi.Input

	ToRdsMysqlDatabaseTableRestoreDatabaseOutput() RdsMysqlDatabaseTableRestoreDatabaseOutput
	ToRdsMysqlDatabaseTableRestoreDatabaseOutputWithContext(context.Context) RdsMysqlDatabaseTableRestoreDatabaseOutput
}

type RdsMysqlDatabaseTableRestoreDatabaseArgs struct {
	// Specifies the name of the database after restoration.
	NewName pulumi.StringInput `pulumi:"newName"`
	// Specifies the name of the database before restoration.
	OldName pulumi.StringInput `pulumi:"oldName"`
}

func (RdsMysqlDatabaseTableRestoreDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (i RdsMysqlDatabaseTableRestoreDatabaseArgs) ToRdsMysqlDatabaseTableRestoreDatabaseOutput() RdsMysqlDatabaseTableRestoreDatabaseOutput {
	return i.ToRdsMysqlDatabaseTableRestoreDatabaseOutputWithContext(context.Background())
}

func (i RdsMysqlDatabaseTableRestoreDatabaseArgs) ToRdsMysqlDatabaseTableRestoreDatabaseOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabaseTableRestoreDatabaseOutput)
}

// RdsMysqlDatabaseTableRestoreDatabaseArrayInput is an input type that accepts RdsMysqlDatabaseTableRestoreDatabaseArray and RdsMysqlDatabaseTableRestoreDatabaseArrayOutput values.
// You can construct a concrete instance of `RdsMysqlDatabaseTableRestoreDatabaseArrayInput` via:
//
//	RdsMysqlDatabaseTableRestoreDatabaseArray{ RdsMysqlDatabaseTableRestoreDatabaseArgs{...} }
type RdsMysqlDatabaseTableRestoreDatabaseArrayInput interface {
	pulumi.Input

	ToRdsMysqlDatabaseTableRestoreDatabaseArrayOutput() RdsMysqlDatabaseTableRestoreDatabaseArrayOutput
	ToRdsMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(context.Context) RdsMysqlDatabaseTableRestoreDatabaseArrayOutput
}

type RdsMysqlDatabaseTableRestoreDatabaseArray []RdsMysqlDatabaseTableRestoreDatabaseInput

func (RdsMysqlDatabaseTableRestoreDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (i RdsMysqlDatabaseTableRestoreDatabaseArray) ToRdsMysqlDatabaseTableRestoreDatabaseArrayOutput() RdsMysqlDatabaseTableRestoreDatabaseArrayOutput {
	return i.ToRdsMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(context.Background())
}

func (i RdsMysqlDatabaseTableRestoreDatabaseArray) ToRdsMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabaseTableRestoreDatabaseArrayOutput)
}

type RdsMysqlDatabaseTableRestoreDatabaseOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabaseTableRestoreDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (o RdsMysqlDatabaseTableRestoreDatabaseOutput) ToRdsMysqlDatabaseTableRestoreDatabaseOutput() RdsMysqlDatabaseTableRestoreDatabaseOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreDatabaseOutput) ToRdsMysqlDatabaseTableRestoreDatabaseOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreDatabaseOutput {
	return o
}

// Specifies the name of the database after restoration.
func (o RdsMysqlDatabaseTableRestoreDatabaseOutput) NewName() pulumi.StringOutput {
	return o.ApplyT(func(v RdsMysqlDatabaseTableRestoreDatabase) string { return v.NewName }).(pulumi.StringOutput)
}

// Specifies the name of the database before restoration.
func (o RdsMysqlDatabaseTableRestoreDatabaseOutput) OldName() pulumi.StringOutput {
	return o.ApplyT(func(v RdsMysqlDatabaseTableRestoreDatabase) string { return v.OldName }).(pulumi.StringOutput)
}

type RdsMysqlDatabaseTableRestoreDatabaseArrayOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabaseTableRestoreDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (o RdsMysqlDatabaseTableRestoreDatabaseArrayOutput) ToRdsMysqlDatabaseTableRestoreDatabaseArrayOutput() RdsMysqlDatabaseTableRestoreDatabaseArrayOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreDatabaseArrayOutput) ToRdsMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreDatabaseArrayOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreDatabaseArrayOutput) Index(i pulumi.IntInput) RdsMysqlDatabaseTableRestoreDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsMysqlDatabaseTableRestoreDatabase {
		return vs[0].([]RdsMysqlDatabaseTableRestoreDatabase)[vs[1].(int)]
	}).(RdsMysqlDatabaseTableRestoreDatabaseOutput)
}

type RdsMysqlDatabaseTableRestoreRestoreTable struct {
	// Specifies the database name.
	Database string `pulumi:"database"`
	// Specifies the tables.
	Tables []RdsMysqlDatabaseTableRestoreRestoreTableTable `pulumi:"tables"`
}

// RdsMysqlDatabaseTableRestoreRestoreTableInput is an input type that accepts RdsMysqlDatabaseTableRestoreRestoreTableArgs and RdsMysqlDatabaseTableRestoreRestoreTableOutput values.
// You can construct a concrete instance of `RdsMysqlDatabaseTableRestoreRestoreTableInput` via:
//
//	RdsMysqlDatabaseTableRestoreRestoreTableArgs{...}
type RdsMysqlDatabaseTableRestoreRestoreTableInput interface {
	pulumi.Input

	ToRdsMysqlDatabaseTableRestoreRestoreTableOutput() RdsMysqlDatabaseTableRestoreRestoreTableOutput
	ToRdsMysqlDatabaseTableRestoreRestoreTableOutputWithContext(context.Context) RdsMysqlDatabaseTableRestoreRestoreTableOutput
}

type RdsMysqlDatabaseTableRestoreRestoreTableArgs struct {
	// Specifies the database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Specifies the tables.
	Tables RdsMysqlDatabaseTableRestoreRestoreTableTableArrayInput `pulumi:"tables"`
}

func (RdsMysqlDatabaseTableRestoreRestoreTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableArgs) ToRdsMysqlDatabaseTableRestoreRestoreTableOutput() RdsMysqlDatabaseTableRestoreRestoreTableOutput {
	return i.ToRdsMysqlDatabaseTableRestoreRestoreTableOutputWithContext(context.Background())
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableArgs) ToRdsMysqlDatabaseTableRestoreRestoreTableOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabaseTableRestoreRestoreTableOutput)
}

// RdsMysqlDatabaseTableRestoreRestoreTableArrayInput is an input type that accepts RdsMysqlDatabaseTableRestoreRestoreTableArray and RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput values.
// You can construct a concrete instance of `RdsMysqlDatabaseTableRestoreRestoreTableArrayInput` via:
//
//	RdsMysqlDatabaseTableRestoreRestoreTableArray{ RdsMysqlDatabaseTableRestoreRestoreTableArgs{...} }
type RdsMysqlDatabaseTableRestoreRestoreTableArrayInput interface {
	pulumi.Input

	ToRdsMysqlDatabaseTableRestoreRestoreTableArrayOutput() RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput
	ToRdsMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(context.Context) RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput
}

type RdsMysqlDatabaseTableRestoreRestoreTableArray []RdsMysqlDatabaseTableRestoreRestoreTableInput

func (RdsMysqlDatabaseTableRestoreRestoreTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableArray) ToRdsMysqlDatabaseTableRestoreRestoreTableArrayOutput() RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return i.ToRdsMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(context.Background())
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableArray) ToRdsMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput)
}

type RdsMysqlDatabaseTableRestoreRestoreTableOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabaseTableRestoreRestoreTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableOutput() RdsMysqlDatabaseTableRestoreRestoreTableOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableOutput {
	return o
}

// Specifies the database name.
func (o RdsMysqlDatabaseTableRestoreRestoreTableOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v RdsMysqlDatabaseTableRestoreRestoreTable) string { return v.Database }).(pulumi.StringOutput)
}

// Specifies the tables.
func (o RdsMysqlDatabaseTableRestoreRestoreTableOutput) Tables() RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return o.ApplyT(func(v RdsMysqlDatabaseTableRestoreRestoreTable) []RdsMysqlDatabaseTableRestoreRestoreTableTable {
		return v.Tables
	}).(RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput)
}

type RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableArrayOutput() RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput) Index(i pulumi.IntInput) RdsMysqlDatabaseTableRestoreRestoreTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsMysqlDatabaseTableRestoreRestoreTable {
		return vs[0].([]RdsMysqlDatabaseTableRestoreRestoreTable)[vs[1].(int)]
	}).(RdsMysqlDatabaseTableRestoreRestoreTableOutput)
}

type RdsMysqlDatabaseTableRestoreRestoreTableTable struct {
	// Specifies the name of the table after restoration.
	NewName string `pulumi:"newName"`
	// Specifies the name of the table before restoration.
	OldName string `pulumi:"oldName"`
}

// RdsMysqlDatabaseTableRestoreRestoreTableTableInput is an input type that accepts RdsMysqlDatabaseTableRestoreRestoreTableTableArgs and RdsMysqlDatabaseTableRestoreRestoreTableTableOutput values.
// You can construct a concrete instance of `RdsMysqlDatabaseTableRestoreRestoreTableTableInput` via:
//
//	RdsMysqlDatabaseTableRestoreRestoreTableTableArgs{...}
type RdsMysqlDatabaseTableRestoreRestoreTableTableInput interface {
	pulumi.Input

	ToRdsMysqlDatabaseTableRestoreRestoreTableTableOutput() RdsMysqlDatabaseTableRestoreRestoreTableTableOutput
	ToRdsMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(context.Context) RdsMysqlDatabaseTableRestoreRestoreTableTableOutput
}

type RdsMysqlDatabaseTableRestoreRestoreTableTableArgs struct {
	// Specifies the name of the table after restoration.
	NewName pulumi.StringInput `pulumi:"newName"`
	// Specifies the name of the table before restoration.
	OldName pulumi.StringInput `pulumi:"oldName"`
}

func (RdsMysqlDatabaseTableRestoreRestoreTableTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableTableArgs) ToRdsMysqlDatabaseTableRestoreRestoreTableTableOutput() RdsMysqlDatabaseTableRestoreRestoreTableTableOutput {
	return i.ToRdsMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(context.Background())
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableTableArgs) ToRdsMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabaseTableRestoreRestoreTableTableOutput)
}

// RdsMysqlDatabaseTableRestoreRestoreTableTableArrayInput is an input type that accepts RdsMysqlDatabaseTableRestoreRestoreTableTableArray and RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput values.
// You can construct a concrete instance of `RdsMysqlDatabaseTableRestoreRestoreTableTableArrayInput` via:
//
//	RdsMysqlDatabaseTableRestoreRestoreTableTableArray{ RdsMysqlDatabaseTableRestoreRestoreTableTableArgs{...} }
type RdsMysqlDatabaseTableRestoreRestoreTableTableArrayInput interface {
	pulumi.Input

	ToRdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput() RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput
	ToRdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(context.Context) RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput
}

type RdsMysqlDatabaseTableRestoreRestoreTableTableArray []RdsMysqlDatabaseTableRestoreRestoreTableTableInput

func (RdsMysqlDatabaseTableRestoreRestoreTableTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableTableArray) ToRdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput() RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return i.ToRdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(context.Background())
}

func (i RdsMysqlDatabaseTableRestoreRestoreTableTableArray) ToRdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput)
}

type RdsMysqlDatabaseTableRestoreRestoreTableTableOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabaseTableRestoreRestoreTableTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableTableOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableTableOutput() RdsMysqlDatabaseTableRestoreRestoreTableTableOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableTableOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableTableOutput {
	return o
}

// Specifies the name of the table after restoration.
func (o RdsMysqlDatabaseTableRestoreRestoreTableTableOutput) NewName() pulumi.StringOutput {
	return o.ApplyT(func(v RdsMysqlDatabaseTableRestoreRestoreTableTable) string { return v.NewName }).(pulumi.StringOutput)
}

// Specifies the name of the table before restoration.
func (o RdsMysqlDatabaseTableRestoreRestoreTableTableOutput) OldName() pulumi.StringOutput {
	return o.ApplyT(func(v RdsMysqlDatabaseTableRestoreRestoreTableTable) string { return v.OldName }).(pulumi.StringOutput)
}

type RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput struct{ *pulumi.OutputState }

func (RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsMysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput() RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput) ToRdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(ctx context.Context) RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return o
}

func (o RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput) Index(i pulumi.IntInput) RdsMysqlDatabaseTableRestoreRestoreTableTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsMysqlDatabaseTableRestoreRestoreTableTable {
		return vs[0].([]RdsMysqlDatabaseTableRestoreRestoreTableTable)[vs[1].(int)]
	}).(RdsMysqlDatabaseTableRestoreRestoreTableTableOutput)
}

type RdsParametergroupConfigurationParameter struct {
	Description     *string `pulumi:"description"`
	Name            *string `pulumi:"name"`
	Readonly        *bool   `pulumi:"readonly"`
	RestartRequired *bool   `pulumi:"restartRequired"`
	Type            *string `pulumi:"type"`
	Value           *string `pulumi:"value"`
	ValueRange      *string `pulumi:"valueRange"`
}

// RdsParametergroupConfigurationParameterInput is an input type that accepts RdsParametergroupConfigurationParameterArgs and RdsParametergroupConfigurationParameterOutput values.
// You can construct a concrete instance of `RdsParametergroupConfigurationParameterInput` via:
//
//	RdsParametergroupConfigurationParameterArgs{...}
type RdsParametergroupConfigurationParameterInput interface {
	pulumi.Input

	ToRdsParametergroupConfigurationParameterOutput() RdsParametergroupConfigurationParameterOutput
	ToRdsParametergroupConfigurationParameterOutputWithContext(context.Context) RdsParametergroupConfigurationParameterOutput
}

type RdsParametergroupConfigurationParameterArgs struct {
	Description     pulumi.StringPtrInput `pulumi:"description"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
	Readonly        pulumi.BoolPtrInput   `pulumi:"readonly"`
	RestartRequired pulumi.BoolPtrInput   `pulumi:"restartRequired"`
	Type            pulumi.StringPtrInput `pulumi:"type"`
	Value           pulumi.StringPtrInput `pulumi:"value"`
	ValueRange      pulumi.StringPtrInput `pulumi:"valueRange"`
}

func (RdsParametergroupConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsParametergroupConfigurationParameter)(nil)).Elem()
}

func (i RdsParametergroupConfigurationParameterArgs) ToRdsParametergroupConfigurationParameterOutput() RdsParametergroupConfigurationParameterOutput {
	return i.ToRdsParametergroupConfigurationParameterOutputWithContext(context.Background())
}

func (i RdsParametergroupConfigurationParameterArgs) ToRdsParametergroupConfigurationParameterOutputWithContext(ctx context.Context) RdsParametergroupConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsParametergroupConfigurationParameterOutput)
}

// RdsParametergroupConfigurationParameterArrayInput is an input type that accepts RdsParametergroupConfigurationParameterArray and RdsParametergroupConfigurationParameterArrayOutput values.
// You can construct a concrete instance of `RdsParametergroupConfigurationParameterArrayInput` via:
//
//	RdsParametergroupConfigurationParameterArray{ RdsParametergroupConfigurationParameterArgs{...} }
type RdsParametergroupConfigurationParameterArrayInput interface {
	pulumi.Input

	ToRdsParametergroupConfigurationParameterArrayOutput() RdsParametergroupConfigurationParameterArrayOutput
	ToRdsParametergroupConfigurationParameterArrayOutputWithContext(context.Context) RdsParametergroupConfigurationParameterArrayOutput
}

type RdsParametergroupConfigurationParameterArray []RdsParametergroupConfigurationParameterInput

func (RdsParametergroupConfigurationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsParametergroupConfigurationParameter)(nil)).Elem()
}

func (i RdsParametergroupConfigurationParameterArray) ToRdsParametergroupConfigurationParameterArrayOutput() RdsParametergroupConfigurationParameterArrayOutput {
	return i.ToRdsParametergroupConfigurationParameterArrayOutputWithContext(context.Background())
}

func (i RdsParametergroupConfigurationParameterArray) ToRdsParametergroupConfigurationParameterArrayOutputWithContext(ctx context.Context) RdsParametergroupConfigurationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsParametergroupConfigurationParameterArrayOutput)
}

type RdsParametergroupConfigurationParameterOutput struct{ *pulumi.OutputState }

func (RdsParametergroupConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsParametergroupConfigurationParameter)(nil)).Elem()
}

func (o RdsParametergroupConfigurationParameterOutput) ToRdsParametergroupConfigurationParameterOutput() RdsParametergroupConfigurationParameterOutput {
	return o
}

func (o RdsParametergroupConfigurationParameterOutput) ToRdsParametergroupConfigurationParameterOutputWithContext(ctx context.Context) RdsParametergroupConfigurationParameterOutput {
	return o
}

func (o RdsParametergroupConfigurationParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsParametergroupConfigurationParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RdsParametergroupConfigurationParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsParametergroupConfigurationParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RdsParametergroupConfigurationParameterOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsParametergroupConfigurationParameter) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

func (o RdsParametergroupConfigurationParameterOutput) RestartRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsParametergroupConfigurationParameter) *bool { return v.RestartRequired }).(pulumi.BoolPtrOutput)
}

func (o RdsParametergroupConfigurationParameterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsParametergroupConfigurationParameter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o RdsParametergroupConfigurationParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsParametergroupConfigurationParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RdsParametergroupConfigurationParameterOutput) ValueRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsParametergroupConfigurationParameter) *string { return v.ValueRange }).(pulumi.StringPtrOutput)
}

type RdsParametergroupConfigurationParameterArrayOutput struct{ *pulumi.OutputState }

func (RdsParametergroupConfigurationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsParametergroupConfigurationParameter)(nil)).Elem()
}

func (o RdsParametergroupConfigurationParameterArrayOutput) ToRdsParametergroupConfigurationParameterArrayOutput() RdsParametergroupConfigurationParameterArrayOutput {
	return o
}

func (o RdsParametergroupConfigurationParameterArrayOutput) ToRdsParametergroupConfigurationParameterArrayOutputWithContext(ctx context.Context) RdsParametergroupConfigurationParameterArrayOutput {
	return o
}

func (o RdsParametergroupConfigurationParameterArrayOutput) Index(i pulumi.IntInput) RdsParametergroupConfigurationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsParametergroupConfigurationParameter {
		return vs[0].([]RdsParametergroupConfigurationParameter)[vs[1].(int)]
	}).(RdsParametergroupConfigurationParameterOutput)
}

type RdsParametergroupDatastore struct {
	Type    string `pulumi:"type"`
	Version string `pulumi:"version"`
}

// RdsParametergroupDatastoreInput is an input type that accepts RdsParametergroupDatastoreArgs and RdsParametergroupDatastoreOutput values.
// You can construct a concrete instance of `RdsParametergroupDatastoreInput` via:
//
//	RdsParametergroupDatastoreArgs{...}
type RdsParametergroupDatastoreInput interface {
	pulumi.Input

	ToRdsParametergroupDatastoreOutput() RdsParametergroupDatastoreOutput
	ToRdsParametergroupDatastoreOutputWithContext(context.Context) RdsParametergroupDatastoreOutput
}

type RdsParametergroupDatastoreArgs struct {
	Type    pulumi.StringInput `pulumi:"type"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (RdsParametergroupDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsParametergroupDatastore)(nil)).Elem()
}

func (i RdsParametergroupDatastoreArgs) ToRdsParametergroupDatastoreOutput() RdsParametergroupDatastoreOutput {
	return i.ToRdsParametergroupDatastoreOutputWithContext(context.Background())
}

func (i RdsParametergroupDatastoreArgs) ToRdsParametergroupDatastoreOutputWithContext(ctx context.Context) RdsParametergroupDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsParametergroupDatastoreOutput)
}

func (i RdsParametergroupDatastoreArgs) ToRdsParametergroupDatastorePtrOutput() RdsParametergroupDatastorePtrOutput {
	return i.ToRdsParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (i RdsParametergroupDatastoreArgs) ToRdsParametergroupDatastorePtrOutputWithContext(ctx context.Context) RdsParametergroupDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsParametergroupDatastoreOutput).ToRdsParametergroupDatastorePtrOutputWithContext(ctx)
}

// RdsParametergroupDatastorePtrInput is an input type that accepts RdsParametergroupDatastoreArgs, RdsParametergroupDatastorePtr and RdsParametergroupDatastorePtrOutput values.
// You can construct a concrete instance of `RdsParametergroupDatastorePtrInput` via:
//
//	        RdsParametergroupDatastoreArgs{...}
//
//	or:
//
//	        nil
type RdsParametergroupDatastorePtrInput interface {
	pulumi.Input

	ToRdsParametergroupDatastorePtrOutput() RdsParametergroupDatastorePtrOutput
	ToRdsParametergroupDatastorePtrOutputWithContext(context.Context) RdsParametergroupDatastorePtrOutput
}

type rdsParametergroupDatastorePtrType RdsParametergroupDatastoreArgs

func RdsParametergroupDatastorePtr(v *RdsParametergroupDatastoreArgs) RdsParametergroupDatastorePtrInput {
	return (*rdsParametergroupDatastorePtrType)(v)
}

func (*rdsParametergroupDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsParametergroupDatastore)(nil)).Elem()
}

func (i *rdsParametergroupDatastorePtrType) ToRdsParametergroupDatastorePtrOutput() RdsParametergroupDatastorePtrOutput {
	return i.ToRdsParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (i *rdsParametergroupDatastorePtrType) ToRdsParametergroupDatastorePtrOutputWithContext(ctx context.Context) RdsParametergroupDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsParametergroupDatastorePtrOutput)
}

type RdsParametergroupDatastoreOutput struct{ *pulumi.OutputState }

func (RdsParametergroupDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsParametergroupDatastore)(nil)).Elem()
}

func (o RdsParametergroupDatastoreOutput) ToRdsParametergroupDatastoreOutput() RdsParametergroupDatastoreOutput {
	return o
}

func (o RdsParametergroupDatastoreOutput) ToRdsParametergroupDatastoreOutputWithContext(ctx context.Context) RdsParametergroupDatastoreOutput {
	return o
}

func (o RdsParametergroupDatastoreOutput) ToRdsParametergroupDatastorePtrOutput() RdsParametergroupDatastorePtrOutput {
	return o.ToRdsParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (o RdsParametergroupDatastoreOutput) ToRdsParametergroupDatastorePtrOutputWithContext(ctx context.Context) RdsParametergroupDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsParametergroupDatastore) *RdsParametergroupDatastore {
		return &v
	}).(RdsParametergroupDatastorePtrOutput)
}

func (o RdsParametergroupDatastoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RdsParametergroupDatastore) string { return v.Type }).(pulumi.StringOutput)
}

func (o RdsParametergroupDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v RdsParametergroupDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type RdsParametergroupDatastorePtrOutput struct{ *pulumi.OutputState }

func (RdsParametergroupDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsParametergroupDatastore)(nil)).Elem()
}

func (o RdsParametergroupDatastorePtrOutput) ToRdsParametergroupDatastorePtrOutput() RdsParametergroupDatastorePtrOutput {
	return o
}

func (o RdsParametergroupDatastorePtrOutput) ToRdsParametergroupDatastorePtrOutputWithContext(ctx context.Context) RdsParametergroupDatastorePtrOutput {
	return o
}

func (o RdsParametergroupDatastorePtrOutput) Elem() RdsParametergroupDatastoreOutput {
	return o.ApplyT(func(v *RdsParametergroupDatastore) RdsParametergroupDatastore {
		if v != nil {
			return *v
		}
		var ret RdsParametergroupDatastore
		return ret
	}).(RdsParametergroupDatastoreOutput)
}

func (o RdsParametergroupDatastorePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsParametergroupDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o RdsParametergroupDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsParametergroupDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type RdsPgAccountAttribute struct {
	// Indicates whether a user bypasses each row-level security policy.
	RolBypassRls *bool `pulumi:"rolBypassRls"`
	// Indicates whether a user can log in to the database.
	RolCanLogin *bool `pulumi:"rolCanLogin"`
	// Indicates the maximum number of concurrent connections to a DB instance.
	RolConnLimit *int `pulumi:"rolConnLimit"`
	// Indicates whether a user can create a database.
	RolCreateDb *bool `pulumi:"rolCreateDb"`
	// Indicates whether a user can create other sub-users.
	RolCreateRole *bool `pulumi:"rolCreateRole"`
	// Indicates whether a user automatically inherits the permissions of the role to which the
	// user belongs.
	RolInherit *bool `pulumi:"rolInherit"`
	// Indicates whether the user is a replication role.
	RolReplication *bool `pulumi:"rolReplication"`
	// Indicates whether a user has the super-user permission.
	RolSuper *bool `pulumi:"rolSuper"`
}

// RdsPgAccountAttributeInput is an input type that accepts RdsPgAccountAttributeArgs and RdsPgAccountAttributeOutput values.
// You can construct a concrete instance of `RdsPgAccountAttributeInput` via:
//
//	RdsPgAccountAttributeArgs{...}
type RdsPgAccountAttributeInput interface {
	pulumi.Input

	ToRdsPgAccountAttributeOutput() RdsPgAccountAttributeOutput
	ToRdsPgAccountAttributeOutputWithContext(context.Context) RdsPgAccountAttributeOutput
}

type RdsPgAccountAttributeArgs struct {
	// Indicates whether a user bypasses each row-level security policy.
	RolBypassRls pulumi.BoolPtrInput `pulumi:"rolBypassRls"`
	// Indicates whether a user can log in to the database.
	RolCanLogin pulumi.BoolPtrInput `pulumi:"rolCanLogin"`
	// Indicates the maximum number of concurrent connections to a DB instance.
	RolConnLimit pulumi.IntPtrInput `pulumi:"rolConnLimit"`
	// Indicates whether a user can create a database.
	RolCreateDb pulumi.BoolPtrInput `pulumi:"rolCreateDb"`
	// Indicates whether a user can create other sub-users.
	RolCreateRole pulumi.BoolPtrInput `pulumi:"rolCreateRole"`
	// Indicates whether a user automatically inherits the permissions of the role to which the
	// user belongs.
	RolInherit pulumi.BoolPtrInput `pulumi:"rolInherit"`
	// Indicates whether the user is a replication role.
	RolReplication pulumi.BoolPtrInput `pulumi:"rolReplication"`
	// Indicates whether a user has the super-user permission.
	RolSuper pulumi.BoolPtrInput `pulumi:"rolSuper"`
}

func (RdsPgAccountAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsPgAccountAttribute)(nil)).Elem()
}

func (i RdsPgAccountAttributeArgs) ToRdsPgAccountAttributeOutput() RdsPgAccountAttributeOutput {
	return i.ToRdsPgAccountAttributeOutputWithContext(context.Background())
}

func (i RdsPgAccountAttributeArgs) ToRdsPgAccountAttributeOutputWithContext(ctx context.Context) RdsPgAccountAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountAttributeOutput)
}

// RdsPgAccountAttributeArrayInput is an input type that accepts RdsPgAccountAttributeArray and RdsPgAccountAttributeArrayOutput values.
// You can construct a concrete instance of `RdsPgAccountAttributeArrayInput` via:
//
//	RdsPgAccountAttributeArray{ RdsPgAccountAttributeArgs{...} }
type RdsPgAccountAttributeArrayInput interface {
	pulumi.Input

	ToRdsPgAccountAttributeArrayOutput() RdsPgAccountAttributeArrayOutput
	ToRdsPgAccountAttributeArrayOutputWithContext(context.Context) RdsPgAccountAttributeArrayOutput
}

type RdsPgAccountAttributeArray []RdsPgAccountAttributeInput

func (RdsPgAccountAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsPgAccountAttribute)(nil)).Elem()
}

func (i RdsPgAccountAttributeArray) ToRdsPgAccountAttributeArrayOutput() RdsPgAccountAttributeArrayOutput {
	return i.ToRdsPgAccountAttributeArrayOutputWithContext(context.Background())
}

func (i RdsPgAccountAttributeArray) ToRdsPgAccountAttributeArrayOutputWithContext(ctx context.Context) RdsPgAccountAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountAttributeArrayOutput)
}

type RdsPgAccountAttributeOutput struct{ *pulumi.OutputState }

func (RdsPgAccountAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsPgAccountAttribute)(nil)).Elem()
}

func (o RdsPgAccountAttributeOutput) ToRdsPgAccountAttributeOutput() RdsPgAccountAttributeOutput {
	return o
}

func (o RdsPgAccountAttributeOutput) ToRdsPgAccountAttributeOutputWithContext(ctx context.Context) RdsPgAccountAttributeOutput {
	return o
}

// Indicates whether a user bypasses each row-level security policy.
func (o RdsPgAccountAttributeOutput) RolBypassRls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *bool { return v.RolBypassRls }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user can log in to the database.
func (o RdsPgAccountAttributeOutput) RolCanLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *bool { return v.RolCanLogin }).(pulumi.BoolPtrOutput)
}

// Indicates the maximum number of concurrent connections to a DB instance.
func (o RdsPgAccountAttributeOutput) RolConnLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *int { return v.RolConnLimit }).(pulumi.IntPtrOutput)
}

// Indicates whether a user can create a database.
func (o RdsPgAccountAttributeOutput) RolCreateDb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *bool { return v.RolCreateDb }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user can create other sub-users.
func (o RdsPgAccountAttributeOutput) RolCreateRole() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *bool { return v.RolCreateRole }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user automatically inherits the permissions of the role to which the
// user belongs.
func (o RdsPgAccountAttributeOutput) RolInherit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *bool { return v.RolInherit }).(pulumi.BoolPtrOutput)
}

// Indicates whether the user is a replication role.
func (o RdsPgAccountAttributeOutput) RolReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *bool { return v.RolReplication }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user has the super-user permission.
func (o RdsPgAccountAttributeOutput) RolSuper() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsPgAccountAttribute) *bool { return v.RolSuper }).(pulumi.BoolPtrOutput)
}

type RdsPgAccountAttributeArrayOutput struct{ *pulumi.OutputState }

func (RdsPgAccountAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsPgAccountAttribute)(nil)).Elem()
}

func (o RdsPgAccountAttributeArrayOutput) ToRdsPgAccountAttributeArrayOutput() RdsPgAccountAttributeArrayOutput {
	return o
}

func (o RdsPgAccountAttributeArrayOutput) ToRdsPgAccountAttributeArrayOutputWithContext(ctx context.Context) RdsPgAccountAttributeArrayOutput {
	return o
}

func (o RdsPgAccountAttributeArrayOutput) Index(i pulumi.IntInput) RdsPgAccountAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsPgAccountAttribute {
		return vs[0].([]RdsPgAccountAttribute)[vs[1].(int)]
	}).(RdsPgAccountAttributeOutput)
}

type RdsPgHbaHostBasedAuthentication struct {
	// Specifies the client IP address.
	Address string `pulumi:"address"`
	// Specifies the database name.
	Database string `pulumi:"database"`
	// Specifies the subnet mask.
	Mask *string `pulumi:"mask"`
	// Specifies the authentication mode.
	Method string `pulumi:"method"`
	// Specifies the connection type.
	Type string `pulumi:"type"`
	// Specifies the Name of a user.
	User string `pulumi:"user"`
}

// RdsPgHbaHostBasedAuthenticationInput is an input type that accepts RdsPgHbaHostBasedAuthenticationArgs and RdsPgHbaHostBasedAuthenticationOutput values.
// You can construct a concrete instance of `RdsPgHbaHostBasedAuthenticationInput` via:
//
//	RdsPgHbaHostBasedAuthenticationArgs{...}
type RdsPgHbaHostBasedAuthenticationInput interface {
	pulumi.Input

	ToRdsPgHbaHostBasedAuthenticationOutput() RdsPgHbaHostBasedAuthenticationOutput
	ToRdsPgHbaHostBasedAuthenticationOutputWithContext(context.Context) RdsPgHbaHostBasedAuthenticationOutput
}

type RdsPgHbaHostBasedAuthenticationArgs struct {
	// Specifies the client IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// Specifies the database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Specifies the subnet mask.
	Mask pulumi.StringPtrInput `pulumi:"mask"`
	// Specifies the authentication mode.
	Method pulumi.StringInput `pulumi:"method"`
	// Specifies the connection type.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the Name of a user.
	User pulumi.StringInput `pulumi:"user"`
}

func (RdsPgHbaHostBasedAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsPgHbaHostBasedAuthentication)(nil)).Elem()
}

func (i RdsPgHbaHostBasedAuthenticationArgs) ToRdsPgHbaHostBasedAuthenticationOutput() RdsPgHbaHostBasedAuthenticationOutput {
	return i.ToRdsPgHbaHostBasedAuthenticationOutputWithContext(context.Background())
}

func (i RdsPgHbaHostBasedAuthenticationArgs) ToRdsPgHbaHostBasedAuthenticationOutputWithContext(ctx context.Context) RdsPgHbaHostBasedAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgHbaHostBasedAuthenticationOutput)
}

// RdsPgHbaHostBasedAuthenticationArrayInput is an input type that accepts RdsPgHbaHostBasedAuthenticationArray and RdsPgHbaHostBasedAuthenticationArrayOutput values.
// You can construct a concrete instance of `RdsPgHbaHostBasedAuthenticationArrayInput` via:
//
//	RdsPgHbaHostBasedAuthenticationArray{ RdsPgHbaHostBasedAuthenticationArgs{...} }
type RdsPgHbaHostBasedAuthenticationArrayInput interface {
	pulumi.Input

	ToRdsPgHbaHostBasedAuthenticationArrayOutput() RdsPgHbaHostBasedAuthenticationArrayOutput
	ToRdsPgHbaHostBasedAuthenticationArrayOutputWithContext(context.Context) RdsPgHbaHostBasedAuthenticationArrayOutput
}

type RdsPgHbaHostBasedAuthenticationArray []RdsPgHbaHostBasedAuthenticationInput

func (RdsPgHbaHostBasedAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsPgHbaHostBasedAuthentication)(nil)).Elem()
}

func (i RdsPgHbaHostBasedAuthenticationArray) ToRdsPgHbaHostBasedAuthenticationArrayOutput() RdsPgHbaHostBasedAuthenticationArrayOutput {
	return i.ToRdsPgHbaHostBasedAuthenticationArrayOutputWithContext(context.Background())
}

func (i RdsPgHbaHostBasedAuthenticationArray) ToRdsPgHbaHostBasedAuthenticationArrayOutputWithContext(ctx context.Context) RdsPgHbaHostBasedAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgHbaHostBasedAuthenticationArrayOutput)
}

type RdsPgHbaHostBasedAuthenticationOutput struct{ *pulumi.OutputState }

func (RdsPgHbaHostBasedAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsPgHbaHostBasedAuthentication)(nil)).Elem()
}

func (o RdsPgHbaHostBasedAuthenticationOutput) ToRdsPgHbaHostBasedAuthenticationOutput() RdsPgHbaHostBasedAuthenticationOutput {
	return o
}

func (o RdsPgHbaHostBasedAuthenticationOutput) ToRdsPgHbaHostBasedAuthenticationOutputWithContext(ctx context.Context) RdsPgHbaHostBasedAuthenticationOutput {
	return o
}

// Specifies the client IP address.
func (o RdsPgHbaHostBasedAuthenticationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v RdsPgHbaHostBasedAuthentication) string { return v.Address }).(pulumi.StringOutput)
}

// Specifies the database name.
func (o RdsPgHbaHostBasedAuthenticationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v RdsPgHbaHostBasedAuthentication) string { return v.Database }).(pulumi.StringOutput)
}

// Specifies the subnet mask.
func (o RdsPgHbaHostBasedAuthenticationOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsPgHbaHostBasedAuthentication) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

// Specifies the authentication mode.
func (o RdsPgHbaHostBasedAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RdsPgHbaHostBasedAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// Specifies the connection type.
func (o RdsPgHbaHostBasedAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RdsPgHbaHostBasedAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the Name of a user.
func (o RdsPgHbaHostBasedAuthenticationOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v RdsPgHbaHostBasedAuthentication) string { return v.User }).(pulumi.StringOutput)
}

type RdsPgHbaHostBasedAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (RdsPgHbaHostBasedAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsPgHbaHostBasedAuthentication)(nil)).Elem()
}

func (o RdsPgHbaHostBasedAuthenticationArrayOutput) ToRdsPgHbaHostBasedAuthenticationArrayOutput() RdsPgHbaHostBasedAuthenticationArrayOutput {
	return o
}

func (o RdsPgHbaHostBasedAuthenticationArrayOutput) ToRdsPgHbaHostBasedAuthenticationArrayOutputWithContext(ctx context.Context) RdsPgHbaHostBasedAuthenticationArrayOutput {
	return o
}

func (o RdsPgHbaHostBasedAuthenticationArrayOutput) Index(i pulumi.IntInput) RdsPgHbaHostBasedAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsPgHbaHostBasedAuthentication {
		return vs[0].([]RdsPgHbaHostBasedAuthentication)[vs[1].(int)]
	}).(RdsPgHbaHostBasedAuthenticationOutput)
}

type RdsReadReplicaInstanceDb struct {
	Port     *int    `pulumi:"port"`
	Type     *string `pulumi:"type"`
	UserName *string `pulumi:"userName"`
	Version  *string `pulumi:"version"`
}

// RdsReadReplicaInstanceDbInput is an input type that accepts RdsReadReplicaInstanceDbArgs and RdsReadReplicaInstanceDbOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceDbInput` via:
//
//	RdsReadReplicaInstanceDbArgs{...}
type RdsReadReplicaInstanceDbInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceDbOutput() RdsReadReplicaInstanceDbOutput
	ToRdsReadReplicaInstanceDbOutputWithContext(context.Context) RdsReadReplicaInstanceDbOutput
}

type RdsReadReplicaInstanceDbArgs struct {
	Port     pulumi.IntPtrInput    `pulumi:"port"`
	Type     pulumi.StringPtrInput `pulumi:"type"`
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (RdsReadReplicaInstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsReadReplicaInstanceDb)(nil)).Elem()
}

func (i RdsReadReplicaInstanceDbArgs) ToRdsReadReplicaInstanceDbOutput() RdsReadReplicaInstanceDbOutput {
	return i.ToRdsReadReplicaInstanceDbOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceDbArgs) ToRdsReadReplicaInstanceDbOutputWithContext(ctx context.Context) RdsReadReplicaInstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceDbOutput)
}

func (i RdsReadReplicaInstanceDbArgs) ToRdsReadReplicaInstanceDbPtrOutput() RdsReadReplicaInstanceDbPtrOutput {
	return i.ToRdsReadReplicaInstanceDbPtrOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceDbArgs) ToRdsReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceDbOutput).ToRdsReadReplicaInstanceDbPtrOutputWithContext(ctx)
}

// RdsReadReplicaInstanceDbPtrInput is an input type that accepts RdsReadReplicaInstanceDbArgs, RdsReadReplicaInstanceDbPtr and RdsReadReplicaInstanceDbPtrOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceDbPtrInput` via:
//
//	        RdsReadReplicaInstanceDbArgs{...}
//
//	or:
//
//	        nil
type RdsReadReplicaInstanceDbPtrInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceDbPtrOutput() RdsReadReplicaInstanceDbPtrOutput
	ToRdsReadReplicaInstanceDbPtrOutputWithContext(context.Context) RdsReadReplicaInstanceDbPtrOutput
}

type rdsReadReplicaInstanceDbPtrType RdsReadReplicaInstanceDbArgs

func RdsReadReplicaInstanceDbPtr(v *RdsReadReplicaInstanceDbArgs) RdsReadReplicaInstanceDbPtrInput {
	return (*rdsReadReplicaInstanceDbPtrType)(v)
}

func (*rdsReadReplicaInstanceDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplicaInstanceDb)(nil)).Elem()
}

func (i *rdsReadReplicaInstanceDbPtrType) ToRdsReadReplicaInstanceDbPtrOutput() RdsReadReplicaInstanceDbPtrOutput {
	return i.ToRdsReadReplicaInstanceDbPtrOutputWithContext(context.Background())
}

func (i *rdsReadReplicaInstanceDbPtrType) ToRdsReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceDbPtrOutput)
}

type RdsReadReplicaInstanceDbOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsReadReplicaInstanceDb)(nil)).Elem()
}

func (o RdsReadReplicaInstanceDbOutput) ToRdsReadReplicaInstanceDbOutput() RdsReadReplicaInstanceDbOutput {
	return o
}

func (o RdsReadReplicaInstanceDbOutput) ToRdsReadReplicaInstanceDbOutputWithContext(ctx context.Context) RdsReadReplicaInstanceDbOutput {
	return o
}

func (o RdsReadReplicaInstanceDbOutput) ToRdsReadReplicaInstanceDbPtrOutput() RdsReadReplicaInstanceDbPtrOutput {
	return o.ToRdsReadReplicaInstanceDbPtrOutputWithContext(context.Background())
}

func (o RdsReadReplicaInstanceDbOutput) ToRdsReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsReadReplicaInstanceDb) *RdsReadReplicaInstanceDb {
		return &v
	}).(RdsReadReplicaInstanceDbPtrOutput)
}

func (o RdsReadReplicaInstanceDbOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceDb) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceDbOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceDb) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceDbOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceDb) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceDbOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceDb) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type RdsReadReplicaInstanceDbPtrOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplicaInstanceDb)(nil)).Elem()
}

func (o RdsReadReplicaInstanceDbPtrOutput) ToRdsReadReplicaInstanceDbPtrOutput() RdsReadReplicaInstanceDbPtrOutput {
	return o
}

func (o RdsReadReplicaInstanceDbPtrOutput) ToRdsReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceDbPtrOutput {
	return o
}

func (o RdsReadReplicaInstanceDbPtrOutput) Elem() RdsReadReplicaInstanceDbOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceDb) RdsReadReplicaInstanceDb {
		if v != nil {
			return *v
		}
		var ret RdsReadReplicaInstanceDb
		return ret
	}).(RdsReadReplicaInstanceDbOutput)
}

func (o RdsReadReplicaInstanceDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceDb) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceDbPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceDbPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceDbPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type RdsReadReplicaInstanceParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// RdsReadReplicaInstanceParameterInput is an input type that accepts RdsReadReplicaInstanceParameterArgs and RdsReadReplicaInstanceParameterOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceParameterInput` via:
//
//	RdsReadReplicaInstanceParameterArgs{...}
type RdsReadReplicaInstanceParameterInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceParameterOutput() RdsReadReplicaInstanceParameterOutput
	ToRdsReadReplicaInstanceParameterOutputWithContext(context.Context) RdsReadReplicaInstanceParameterOutput
}

type RdsReadReplicaInstanceParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (RdsReadReplicaInstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsReadReplicaInstanceParameter)(nil)).Elem()
}

func (i RdsReadReplicaInstanceParameterArgs) ToRdsReadReplicaInstanceParameterOutput() RdsReadReplicaInstanceParameterOutput {
	return i.ToRdsReadReplicaInstanceParameterOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceParameterArgs) ToRdsReadReplicaInstanceParameterOutputWithContext(ctx context.Context) RdsReadReplicaInstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceParameterOutput)
}

// RdsReadReplicaInstanceParameterArrayInput is an input type that accepts RdsReadReplicaInstanceParameterArray and RdsReadReplicaInstanceParameterArrayOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceParameterArrayInput` via:
//
//	RdsReadReplicaInstanceParameterArray{ RdsReadReplicaInstanceParameterArgs{...} }
type RdsReadReplicaInstanceParameterArrayInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceParameterArrayOutput() RdsReadReplicaInstanceParameterArrayOutput
	ToRdsReadReplicaInstanceParameterArrayOutputWithContext(context.Context) RdsReadReplicaInstanceParameterArrayOutput
}

type RdsReadReplicaInstanceParameterArray []RdsReadReplicaInstanceParameterInput

func (RdsReadReplicaInstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsReadReplicaInstanceParameter)(nil)).Elem()
}

func (i RdsReadReplicaInstanceParameterArray) ToRdsReadReplicaInstanceParameterArrayOutput() RdsReadReplicaInstanceParameterArrayOutput {
	return i.ToRdsReadReplicaInstanceParameterArrayOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceParameterArray) ToRdsReadReplicaInstanceParameterArrayOutputWithContext(ctx context.Context) RdsReadReplicaInstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceParameterArrayOutput)
}

type RdsReadReplicaInstanceParameterOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsReadReplicaInstanceParameter)(nil)).Elem()
}

func (o RdsReadReplicaInstanceParameterOutput) ToRdsReadReplicaInstanceParameterOutput() RdsReadReplicaInstanceParameterOutput {
	return o
}

func (o RdsReadReplicaInstanceParameterOutput) ToRdsReadReplicaInstanceParameterOutputWithContext(ctx context.Context) RdsReadReplicaInstanceParameterOutput {
	return o
}

func (o RdsReadReplicaInstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type RdsReadReplicaInstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsReadReplicaInstanceParameter)(nil)).Elem()
}

func (o RdsReadReplicaInstanceParameterArrayOutput) ToRdsReadReplicaInstanceParameterArrayOutput() RdsReadReplicaInstanceParameterArrayOutput {
	return o
}

func (o RdsReadReplicaInstanceParameterArrayOutput) ToRdsReadReplicaInstanceParameterArrayOutputWithContext(ctx context.Context) RdsReadReplicaInstanceParameterArrayOutput {
	return o
}

func (o RdsReadReplicaInstanceParameterArrayOutput) Index(i pulumi.IntInput) RdsReadReplicaInstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsReadReplicaInstanceParameter {
		return vs[0].([]RdsReadReplicaInstanceParameter)[vs[1].(int)]
	}).(RdsReadReplicaInstanceParameterOutput)
}

type RdsReadReplicaInstanceVolume struct {
	// schema: Computed
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	LimitSize        *int    `pulumi:"limitSize"`
	Size             *int    `pulumi:"size"`
	TriggerThreshold *int    `pulumi:"triggerThreshold"`
	Type             string  `pulumi:"type"`
}

// RdsReadReplicaInstanceVolumeInput is an input type that accepts RdsReadReplicaInstanceVolumeArgs and RdsReadReplicaInstanceVolumeOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceVolumeInput` via:
//
//	RdsReadReplicaInstanceVolumeArgs{...}
type RdsReadReplicaInstanceVolumeInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceVolumeOutput() RdsReadReplicaInstanceVolumeOutput
	ToRdsReadReplicaInstanceVolumeOutputWithContext(context.Context) RdsReadReplicaInstanceVolumeOutput
}

type RdsReadReplicaInstanceVolumeArgs struct {
	// schema: Computed
	DiskEncryptionId pulumi.StringPtrInput `pulumi:"diskEncryptionId"`
	LimitSize        pulumi.IntPtrInput    `pulumi:"limitSize"`
	Size             pulumi.IntPtrInput    `pulumi:"size"`
	TriggerThreshold pulumi.IntPtrInput    `pulumi:"triggerThreshold"`
	Type             pulumi.StringInput    `pulumi:"type"`
}

func (RdsReadReplicaInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsReadReplicaInstanceVolume)(nil)).Elem()
}

func (i RdsReadReplicaInstanceVolumeArgs) ToRdsReadReplicaInstanceVolumeOutput() RdsReadReplicaInstanceVolumeOutput {
	return i.ToRdsReadReplicaInstanceVolumeOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceVolumeArgs) ToRdsReadReplicaInstanceVolumeOutputWithContext(ctx context.Context) RdsReadReplicaInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceVolumeOutput)
}

func (i RdsReadReplicaInstanceVolumeArgs) ToRdsReadReplicaInstanceVolumePtrOutput() RdsReadReplicaInstanceVolumePtrOutput {
	return i.ToRdsReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceVolumeArgs) ToRdsReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceVolumeOutput).ToRdsReadReplicaInstanceVolumePtrOutputWithContext(ctx)
}

// RdsReadReplicaInstanceVolumePtrInput is an input type that accepts RdsReadReplicaInstanceVolumeArgs, RdsReadReplicaInstanceVolumePtr and RdsReadReplicaInstanceVolumePtrOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceVolumePtrInput` via:
//
//	        RdsReadReplicaInstanceVolumeArgs{...}
//
//	or:
//
//	        nil
type RdsReadReplicaInstanceVolumePtrInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceVolumePtrOutput() RdsReadReplicaInstanceVolumePtrOutput
	ToRdsReadReplicaInstanceVolumePtrOutputWithContext(context.Context) RdsReadReplicaInstanceVolumePtrOutput
}

type rdsReadReplicaInstanceVolumePtrType RdsReadReplicaInstanceVolumeArgs

func RdsReadReplicaInstanceVolumePtr(v *RdsReadReplicaInstanceVolumeArgs) RdsReadReplicaInstanceVolumePtrInput {
	return (*rdsReadReplicaInstanceVolumePtrType)(v)
}

func (*rdsReadReplicaInstanceVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplicaInstanceVolume)(nil)).Elem()
}

func (i *rdsReadReplicaInstanceVolumePtrType) ToRdsReadReplicaInstanceVolumePtrOutput() RdsReadReplicaInstanceVolumePtrOutput {
	return i.ToRdsReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (i *rdsReadReplicaInstanceVolumePtrType) ToRdsReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceVolumePtrOutput)
}

type RdsReadReplicaInstanceVolumeOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsReadReplicaInstanceVolume)(nil)).Elem()
}

func (o RdsReadReplicaInstanceVolumeOutput) ToRdsReadReplicaInstanceVolumeOutput() RdsReadReplicaInstanceVolumeOutput {
	return o
}

func (o RdsReadReplicaInstanceVolumeOutput) ToRdsReadReplicaInstanceVolumeOutputWithContext(ctx context.Context) RdsReadReplicaInstanceVolumeOutput {
	return o
}

func (o RdsReadReplicaInstanceVolumeOutput) ToRdsReadReplicaInstanceVolumePtrOutput() RdsReadReplicaInstanceVolumePtrOutput {
	return o.ToRdsReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (o RdsReadReplicaInstanceVolumeOutput) ToRdsReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsReadReplicaInstanceVolume) *RdsReadReplicaInstanceVolume {
		return &v
	}).(RdsReadReplicaInstanceVolumePtrOutput)
}

// schema: Computed
func (o RdsReadReplicaInstanceVolumeOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceVolume) *string { return v.DiskEncryptionId }).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceVolumeOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceVolume) *int { return v.LimitSize }).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceVolumeOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceVolume) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceVolumeOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceVolume) *int { return v.TriggerThreshold }).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RdsReadReplicaInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type RdsReadReplicaInstanceVolumePtrOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplicaInstanceVolume)(nil)).Elem()
}

func (o RdsReadReplicaInstanceVolumePtrOutput) ToRdsReadReplicaInstanceVolumePtrOutput() RdsReadReplicaInstanceVolumePtrOutput {
	return o
}

func (o RdsReadReplicaInstanceVolumePtrOutput) ToRdsReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) RdsReadReplicaInstanceVolumePtrOutput {
	return o
}

func (o RdsReadReplicaInstanceVolumePtrOutput) Elem() RdsReadReplicaInstanceVolumeOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceVolume) RdsReadReplicaInstanceVolume {
		if v != nil {
			return *v
		}
		var ret RdsReadReplicaInstanceVolume
		return ret
	}).(RdsReadReplicaInstanceVolumeOutput)
}

// schema: Computed
func (o RdsReadReplicaInstanceVolumePtrOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionId
	}).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceVolumePtrOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.LimitSize
	}).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceVolumePtrOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.TriggerThreshold
	}).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type RdsSqlserverDatabasePrivilegeUser struct {
	// Specifies the username of the database account.
	Name string `pulumi:"name"`
	// Specifies the read-only permission.
	Readonly *bool `pulumi:"readonly"`
}

// RdsSqlserverDatabasePrivilegeUserInput is an input type that accepts RdsSqlserverDatabasePrivilegeUserArgs and RdsSqlserverDatabasePrivilegeUserOutput values.
// You can construct a concrete instance of `RdsSqlserverDatabasePrivilegeUserInput` via:
//
//	RdsSqlserverDatabasePrivilegeUserArgs{...}
type RdsSqlserverDatabasePrivilegeUserInput interface {
	pulumi.Input

	ToRdsSqlserverDatabasePrivilegeUserOutput() RdsSqlserverDatabasePrivilegeUserOutput
	ToRdsSqlserverDatabasePrivilegeUserOutputWithContext(context.Context) RdsSqlserverDatabasePrivilegeUserOutput
}

type RdsSqlserverDatabasePrivilegeUserArgs struct {
	// Specifies the username of the database account.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the read-only permission.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (RdsSqlserverDatabasePrivilegeUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsSqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (i RdsSqlserverDatabasePrivilegeUserArgs) ToRdsSqlserverDatabasePrivilegeUserOutput() RdsSqlserverDatabasePrivilegeUserOutput {
	return i.ToRdsSqlserverDatabasePrivilegeUserOutputWithContext(context.Background())
}

func (i RdsSqlserverDatabasePrivilegeUserArgs) ToRdsSqlserverDatabasePrivilegeUserOutputWithContext(ctx context.Context) RdsSqlserverDatabasePrivilegeUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsSqlserverDatabasePrivilegeUserOutput)
}

// RdsSqlserverDatabasePrivilegeUserArrayInput is an input type that accepts RdsSqlserverDatabasePrivilegeUserArray and RdsSqlserverDatabasePrivilegeUserArrayOutput values.
// You can construct a concrete instance of `RdsSqlserverDatabasePrivilegeUserArrayInput` via:
//
//	RdsSqlserverDatabasePrivilegeUserArray{ RdsSqlserverDatabasePrivilegeUserArgs{...} }
type RdsSqlserverDatabasePrivilegeUserArrayInput interface {
	pulumi.Input

	ToRdsSqlserverDatabasePrivilegeUserArrayOutput() RdsSqlserverDatabasePrivilegeUserArrayOutput
	ToRdsSqlserverDatabasePrivilegeUserArrayOutputWithContext(context.Context) RdsSqlserverDatabasePrivilegeUserArrayOutput
}

type RdsSqlserverDatabasePrivilegeUserArray []RdsSqlserverDatabasePrivilegeUserInput

func (RdsSqlserverDatabasePrivilegeUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsSqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (i RdsSqlserverDatabasePrivilegeUserArray) ToRdsSqlserverDatabasePrivilegeUserArrayOutput() RdsSqlserverDatabasePrivilegeUserArrayOutput {
	return i.ToRdsSqlserverDatabasePrivilegeUserArrayOutputWithContext(context.Background())
}

func (i RdsSqlserverDatabasePrivilegeUserArray) ToRdsSqlserverDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) RdsSqlserverDatabasePrivilegeUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsSqlserverDatabasePrivilegeUserArrayOutput)
}

type RdsSqlserverDatabasePrivilegeUserOutput struct{ *pulumi.OutputState }

func (RdsSqlserverDatabasePrivilegeUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsSqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (o RdsSqlserverDatabasePrivilegeUserOutput) ToRdsSqlserverDatabasePrivilegeUserOutput() RdsSqlserverDatabasePrivilegeUserOutput {
	return o
}

func (o RdsSqlserverDatabasePrivilegeUserOutput) ToRdsSqlserverDatabasePrivilegeUserOutputWithContext(ctx context.Context) RdsSqlserverDatabasePrivilegeUserOutput {
	return o
}

// Specifies the username of the database account.
func (o RdsSqlserverDatabasePrivilegeUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RdsSqlserverDatabasePrivilegeUser) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the read-only permission.
func (o RdsSqlserverDatabasePrivilegeUserOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdsSqlserverDatabasePrivilegeUser) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type RdsSqlserverDatabasePrivilegeUserArrayOutput struct{ *pulumi.OutputState }

func (RdsSqlserverDatabasePrivilegeUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsSqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (o RdsSqlserverDatabasePrivilegeUserArrayOutput) ToRdsSqlserverDatabasePrivilegeUserArrayOutput() RdsSqlserverDatabasePrivilegeUserArrayOutput {
	return o
}

func (o RdsSqlserverDatabasePrivilegeUserArrayOutput) ToRdsSqlserverDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) RdsSqlserverDatabasePrivilegeUserArrayOutput {
	return o
}

func (o RdsSqlserverDatabasePrivilegeUserArrayOutput) Index(i pulumi.IntInput) RdsSqlserverDatabasePrivilegeUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsSqlserverDatabasePrivilegeUser {
		return vs[0].([]RdsSqlserverDatabasePrivilegeUser)[vs[1].(int)]
	}).(RdsSqlserverDatabasePrivilegeUserOutput)
}

type SfsFileSystemAccessRule struct {
	AccessLevel  *string `pulumi:"accessLevel"`
	AccessRuleId *string `pulumi:"accessRuleId"`
	AccessTo     *string `pulumi:"accessTo"`
	AccessType   *string `pulumi:"accessType"`
	Status       *string `pulumi:"status"`
}

// SfsFileSystemAccessRuleInput is an input type that accepts SfsFileSystemAccessRuleArgs and SfsFileSystemAccessRuleOutput values.
// You can construct a concrete instance of `SfsFileSystemAccessRuleInput` via:
//
//	SfsFileSystemAccessRuleArgs{...}
type SfsFileSystemAccessRuleInput interface {
	pulumi.Input

	ToSfsFileSystemAccessRuleOutput() SfsFileSystemAccessRuleOutput
	ToSfsFileSystemAccessRuleOutputWithContext(context.Context) SfsFileSystemAccessRuleOutput
}

type SfsFileSystemAccessRuleArgs struct {
	AccessLevel  pulumi.StringPtrInput `pulumi:"accessLevel"`
	AccessRuleId pulumi.StringPtrInput `pulumi:"accessRuleId"`
	AccessTo     pulumi.StringPtrInput `pulumi:"accessTo"`
	AccessType   pulumi.StringPtrInput `pulumi:"accessType"`
	Status       pulumi.StringPtrInput `pulumi:"status"`
}

func (SfsFileSystemAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsFileSystemAccessRule)(nil)).Elem()
}

func (i SfsFileSystemAccessRuleArgs) ToSfsFileSystemAccessRuleOutput() SfsFileSystemAccessRuleOutput {
	return i.ToSfsFileSystemAccessRuleOutputWithContext(context.Background())
}

func (i SfsFileSystemAccessRuleArgs) ToSfsFileSystemAccessRuleOutputWithContext(ctx context.Context) SfsFileSystemAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsFileSystemAccessRuleOutput)
}

// SfsFileSystemAccessRuleArrayInput is an input type that accepts SfsFileSystemAccessRuleArray and SfsFileSystemAccessRuleArrayOutput values.
// You can construct a concrete instance of `SfsFileSystemAccessRuleArrayInput` via:
//
//	SfsFileSystemAccessRuleArray{ SfsFileSystemAccessRuleArgs{...} }
type SfsFileSystemAccessRuleArrayInput interface {
	pulumi.Input

	ToSfsFileSystemAccessRuleArrayOutput() SfsFileSystemAccessRuleArrayOutput
	ToSfsFileSystemAccessRuleArrayOutputWithContext(context.Context) SfsFileSystemAccessRuleArrayOutput
}

type SfsFileSystemAccessRuleArray []SfsFileSystemAccessRuleInput

func (SfsFileSystemAccessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SfsFileSystemAccessRule)(nil)).Elem()
}

func (i SfsFileSystemAccessRuleArray) ToSfsFileSystemAccessRuleArrayOutput() SfsFileSystemAccessRuleArrayOutput {
	return i.ToSfsFileSystemAccessRuleArrayOutputWithContext(context.Background())
}

func (i SfsFileSystemAccessRuleArray) ToSfsFileSystemAccessRuleArrayOutputWithContext(ctx context.Context) SfsFileSystemAccessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsFileSystemAccessRuleArrayOutput)
}

type SfsFileSystemAccessRuleOutput struct{ *pulumi.OutputState }

func (SfsFileSystemAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsFileSystemAccessRule)(nil)).Elem()
}

func (o SfsFileSystemAccessRuleOutput) ToSfsFileSystemAccessRuleOutput() SfsFileSystemAccessRuleOutput {
	return o
}

func (o SfsFileSystemAccessRuleOutput) ToSfsFileSystemAccessRuleOutputWithContext(ctx context.Context) SfsFileSystemAccessRuleOutput {
	return o
}

func (o SfsFileSystemAccessRuleOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SfsFileSystemAccessRule) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o SfsFileSystemAccessRuleOutput) AccessRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SfsFileSystemAccessRule) *string { return v.AccessRuleId }).(pulumi.StringPtrOutput)
}

func (o SfsFileSystemAccessRuleOutput) AccessTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SfsFileSystemAccessRule) *string { return v.AccessTo }).(pulumi.StringPtrOutput)
}

func (o SfsFileSystemAccessRuleOutput) AccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SfsFileSystemAccessRule) *string { return v.AccessType }).(pulumi.StringPtrOutput)
}

func (o SfsFileSystemAccessRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SfsFileSystemAccessRule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SfsFileSystemAccessRuleArrayOutput struct{ *pulumi.OutputState }

func (SfsFileSystemAccessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SfsFileSystemAccessRule)(nil)).Elem()
}

func (o SfsFileSystemAccessRuleArrayOutput) ToSfsFileSystemAccessRuleArrayOutput() SfsFileSystemAccessRuleArrayOutput {
	return o
}

func (o SfsFileSystemAccessRuleArrayOutput) ToSfsFileSystemAccessRuleArrayOutputWithContext(ctx context.Context) SfsFileSystemAccessRuleArrayOutput {
	return o
}

func (o SfsFileSystemAccessRuleArrayOutput) Index(i pulumi.IntInput) SfsFileSystemAccessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SfsFileSystemAccessRule {
		return vs[0].([]SfsFileSystemAccessRule)[vs[1].(int)]
	}).(SfsFileSystemAccessRuleOutput)
}

type SfsTurboDuTaskDirUsage struct {
	FileCounts   []SfsTurboDuTaskDirUsageFileCount `pulumi:"fileCounts"`
	Message      *string                           `pulumi:"message"`
	Path         *string                           `pulumi:"path"`
	UsedCapacity *int                              `pulumi:"usedCapacity"`
}

// SfsTurboDuTaskDirUsageInput is an input type that accepts SfsTurboDuTaskDirUsageArgs and SfsTurboDuTaskDirUsageOutput values.
// You can construct a concrete instance of `SfsTurboDuTaskDirUsageInput` via:
//
//	SfsTurboDuTaskDirUsageArgs{...}
type SfsTurboDuTaskDirUsageInput interface {
	pulumi.Input

	ToSfsTurboDuTaskDirUsageOutput() SfsTurboDuTaskDirUsageOutput
	ToSfsTurboDuTaskDirUsageOutputWithContext(context.Context) SfsTurboDuTaskDirUsageOutput
}

type SfsTurboDuTaskDirUsageArgs struct {
	FileCounts   SfsTurboDuTaskDirUsageFileCountArrayInput `pulumi:"fileCounts"`
	Message      pulumi.StringPtrInput                     `pulumi:"message"`
	Path         pulumi.StringPtrInput                     `pulumi:"path"`
	UsedCapacity pulumi.IntPtrInput                        `pulumi:"usedCapacity"`
}

func (SfsTurboDuTaskDirUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsTurboDuTaskDirUsage)(nil)).Elem()
}

func (i SfsTurboDuTaskDirUsageArgs) ToSfsTurboDuTaskDirUsageOutput() SfsTurboDuTaskDirUsageOutput {
	return i.ToSfsTurboDuTaskDirUsageOutputWithContext(context.Background())
}

func (i SfsTurboDuTaskDirUsageArgs) ToSfsTurboDuTaskDirUsageOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboDuTaskDirUsageOutput)
}

// SfsTurboDuTaskDirUsageArrayInput is an input type that accepts SfsTurboDuTaskDirUsageArray and SfsTurboDuTaskDirUsageArrayOutput values.
// You can construct a concrete instance of `SfsTurboDuTaskDirUsageArrayInput` via:
//
//	SfsTurboDuTaskDirUsageArray{ SfsTurboDuTaskDirUsageArgs{...} }
type SfsTurboDuTaskDirUsageArrayInput interface {
	pulumi.Input

	ToSfsTurboDuTaskDirUsageArrayOutput() SfsTurboDuTaskDirUsageArrayOutput
	ToSfsTurboDuTaskDirUsageArrayOutputWithContext(context.Context) SfsTurboDuTaskDirUsageArrayOutput
}

type SfsTurboDuTaskDirUsageArray []SfsTurboDuTaskDirUsageInput

func (SfsTurboDuTaskDirUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SfsTurboDuTaskDirUsage)(nil)).Elem()
}

func (i SfsTurboDuTaskDirUsageArray) ToSfsTurboDuTaskDirUsageArrayOutput() SfsTurboDuTaskDirUsageArrayOutput {
	return i.ToSfsTurboDuTaskDirUsageArrayOutputWithContext(context.Background())
}

func (i SfsTurboDuTaskDirUsageArray) ToSfsTurboDuTaskDirUsageArrayOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboDuTaskDirUsageArrayOutput)
}

type SfsTurboDuTaskDirUsageOutput struct{ *pulumi.OutputState }

func (SfsTurboDuTaskDirUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsTurboDuTaskDirUsage)(nil)).Elem()
}

func (o SfsTurboDuTaskDirUsageOutput) ToSfsTurboDuTaskDirUsageOutput() SfsTurboDuTaskDirUsageOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageOutput) ToSfsTurboDuTaskDirUsageOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageOutput) FileCounts() SfsTurboDuTaskDirUsageFileCountArrayOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsage) []SfsTurboDuTaskDirUsageFileCount { return v.FileCounts }).(SfsTurboDuTaskDirUsageFileCountArrayOutput)
}

func (o SfsTurboDuTaskDirUsageOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsage) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o SfsTurboDuTaskDirUsageOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsage) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o SfsTurboDuTaskDirUsageOutput) UsedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsage) *int { return v.UsedCapacity }).(pulumi.IntPtrOutput)
}

type SfsTurboDuTaskDirUsageArrayOutput struct{ *pulumi.OutputState }

func (SfsTurboDuTaskDirUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SfsTurboDuTaskDirUsage)(nil)).Elem()
}

func (o SfsTurboDuTaskDirUsageArrayOutput) ToSfsTurboDuTaskDirUsageArrayOutput() SfsTurboDuTaskDirUsageArrayOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageArrayOutput) ToSfsTurboDuTaskDirUsageArrayOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageArrayOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageArrayOutput) Index(i pulumi.IntInput) SfsTurboDuTaskDirUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SfsTurboDuTaskDirUsage {
		return vs[0].([]SfsTurboDuTaskDirUsage)[vs[1].(int)]
	}).(SfsTurboDuTaskDirUsageOutput)
}

type SfsTurboDuTaskDirUsageFileCount struct {
	Block   *int `pulumi:"block"`
	Char    *int `pulumi:"char"`
	Dir     *int `pulumi:"dir"`
	Pipe    *int `pulumi:"pipe"`
	Regular *int `pulumi:"regular"`
	Socket  *int `pulumi:"socket"`
	Symlink *int `pulumi:"symlink"`
}

// SfsTurboDuTaskDirUsageFileCountInput is an input type that accepts SfsTurboDuTaskDirUsageFileCountArgs and SfsTurboDuTaskDirUsageFileCountOutput values.
// You can construct a concrete instance of `SfsTurboDuTaskDirUsageFileCountInput` via:
//
//	SfsTurboDuTaskDirUsageFileCountArgs{...}
type SfsTurboDuTaskDirUsageFileCountInput interface {
	pulumi.Input

	ToSfsTurboDuTaskDirUsageFileCountOutput() SfsTurboDuTaskDirUsageFileCountOutput
	ToSfsTurboDuTaskDirUsageFileCountOutputWithContext(context.Context) SfsTurboDuTaskDirUsageFileCountOutput
}

type SfsTurboDuTaskDirUsageFileCountArgs struct {
	Block   pulumi.IntPtrInput `pulumi:"block"`
	Char    pulumi.IntPtrInput `pulumi:"char"`
	Dir     pulumi.IntPtrInput `pulumi:"dir"`
	Pipe    pulumi.IntPtrInput `pulumi:"pipe"`
	Regular pulumi.IntPtrInput `pulumi:"regular"`
	Socket  pulumi.IntPtrInput `pulumi:"socket"`
	Symlink pulumi.IntPtrInput `pulumi:"symlink"`
}

func (SfsTurboDuTaskDirUsageFileCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsTurboDuTaskDirUsageFileCount)(nil)).Elem()
}

func (i SfsTurboDuTaskDirUsageFileCountArgs) ToSfsTurboDuTaskDirUsageFileCountOutput() SfsTurboDuTaskDirUsageFileCountOutput {
	return i.ToSfsTurboDuTaskDirUsageFileCountOutputWithContext(context.Background())
}

func (i SfsTurboDuTaskDirUsageFileCountArgs) ToSfsTurboDuTaskDirUsageFileCountOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageFileCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboDuTaskDirUsageFileCountOutput)
}

// SfsTurboDuTaskDirUsageFileCountArrayInput is an input type that accepts SfsTurboDuTaskDirUsageFileCountArray and SfsTurboDuTaskDirUsageFileCountArrayOutput values.
// You can construct a concrete instance of `SfsTurboDuTaskDirUsageFileCountArrayInput` via:
//
//	SfsTurboDuTaskDirUsageFileCountArray{ SfsTurboDuTaskDirUsageFileCountArgs{...} }
type SfsTurboDuTaskDirUsageFileCountArrayInput interface {
	pulumi.Input

	ToSfsTurboDuTaskDirUsageFileCountArrayOutput() SfsTurboDuTaskDirUsageFileCountArrayOutput
	ToSfsTurboDuTaskDirUsageFileCountArrayOutputWithContext(context.Context) SfsTurboDuTaskDirUsageFileCountArrayOutput
}

type SfsTurboDuTaskDirUsageFileCountArray []SfsTurboDuTaskDirUsageFileCountInput

func (SfsTurboDuTaskDirUsageFileCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SfsTurboDuTaskDirUsageFileCount)(nil)).Elem()
}

func (i SfsTurboDuTaskDirUsageFileCountArray) ToSfsTurboDuTaskDirUsageFileCountArrayOutput() SfsTurboDuTaskDirUsageFileCountArrayOutput {
	return i.ToSfsTurboDuTaskDirUsageFileCountArrayOutputWithContext(context.Background())
}

func (i SfsTurboDuTaskDirUsageFileCountArray) ToSfsTurboDuTaskDirUsageFileCountArrayOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageFileCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboDuTaskDirUsageFileCountArrayOutput)
}

type SfsTurboDuTaskDirUsageFileCountOutput struct{ *pulumi.OutputState }

func (SfsTurboDuTaskDirUsageFileCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsTurboDuTaskDirUsageFileCount)(nil)).Elem()
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) ToSfsTurboDuTaskDirUsageFileCountOutput() SfsTurboDuTaskDirUsageFileCountOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) ToSfsTurboDuTaskDirUsageFileCountOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageFileCountOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) Block() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsageFileCount) *int { return v.Block }).(pulumi.IntPtrOutput)
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) Char() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsageFileCount) *int { return v.Char }).(pulumi.IntPtrOutput)
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) Dir() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsageFileCount) *int { return v.Dir }).(pulumi.IntPtrOutput)
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) Pipe() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsageFileCount) *int { return v.Pipe }).(pulumi.IntPtrOutput)
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) Regular() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsageFileCount) *int { return v.Regular }).(pulumi.IntPtrOutput)
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) Socket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsageFileCount) *int { return v.Socket }).(pulumi.IntPtrOutput)
}

func (o SfsTurboDuTaskDirUsageFileCountOutput) Symlink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SfsTurboDuTaskDirUsageFileCount) *int { return v.Symlink }).(pulumi.IntPtrOutput)
}

type SfsTurboDuTaskDirUsageFileCountArrayOutput struct{ *pulumi.OutputState }

func (SfsTurboDuTaskDirUsageFileCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SfsTurboDuTaskDirUsageFileCount)(nil)).Elem()
}

func (o SfsTurboDuTaskDirUsageFileCountArrayOutput) ToSfsTurboDuTaskDirUsageFileCountArrayOutput() SfsTurboDuTaskDirUsageFileCountArrayOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageFileCountArrayOutput) ToSfsTurboDuTaskDirUsageFileCountArrayOutputWithContext(ctx context.Context) SfsTurboDuTaskDirUsageFileCountArrayOutput {
	return o
}

func (o SfsTurboDuTaskDirUsageFileCountArrayOutput) Index(i pulumi.IntInput) SfsTurboDuTaskDirUsageFileCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SfsTurboDuTaskDirUsageFileCount {
		return vs[0].([]SfsTurboDuTaskDirUsageFileCount)[vs[1].(int)]
	}).(SfsTurboDuTaskDirUsageFileCountOutput)
}

type SfsTurboObsTargetObs struct {
	Bucket   string `pulumi:"bucket"`
	Endpoint string `pulumi:"endpoint"`
}

// SfsTurboObsTargetObsInput is an input type that accepts SfsTurboObsTargetObsArgs and SfsTurboObsTargetObsOutput values.
// You can construct a concrete instance of `SfsTurboObsTargetObsInput` via:
//
//	SfsTurboObsTargetObsArgs{...}
type SfsTurboObsTargetObsInput interface {
	pulumi.Input

	ToSfsTurboObsTargetObsOutput() SfsTurboObsTargetObsOutput
	ToSfsTurboObsTargetObsOutputWithContext(context.Context) SfsTurboObsTargetObsOutput
}

type SfsTurboObsTargetObsArgs struct {
	Bucket   pulumi.StringInput `pulumi:"bucket"`
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (SfsTurboObsTargetObsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsTurboObsTargetObs)(nil)).Elem()
}

func (i SfsTurboObsTargetObsArgs) ToSfsTurboObsTargetObsOutput() SfsTurboObsTargetObsOutput {
	return i.ToSfsTurboObsTargetObsOutputWithContext(context.Background())
}

func (i SfsTurboObsTargetObsArgs) ToSfsTurboObsTargetObsOutputWithContext(ctx context.Context) SfsTurboObsTargetObsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboObsTargetObsOutput)
}

func (i SfsTurboObsTargetObsArgs) ToSfsTurboObsTargetObsPtrOutput() SfsTurboObsTargetObsPtrOutput {
	return i.ToSfsTurboObsTargetObsPtrOutputWithContext(context.Background())
}

func (i SfsTurboObsTargetObsArgs) ToSfsTurboObsTargetObsPtrOutputWithContext(ctx context.Context) SfsTurboObsTargetObsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboObsTargetObsOutput).ToSfsTurboObsTargetObsPtrOutputWithContext(ctx)
}

// SfsTurboObsTargetObsPtrInput is an input type that accepts SfsTurboObsTargetObsArgs, SfsTurboObsTargetObsPtr and SfsTurboObsTargetObsPtrOutput values.
// You can construct a concrete instance of `SfsTurboObsTargetObsPtrInput` via:
//
//	        SfsTurboObsTargetObsArgs{...}
//
//	or:
//
//	        nil
type SfsTurboObsTargetObsPtrInput interface {
	pulumi.Input

	ToSfsTurboObsTargetObsPtrOutput() SfsTurboObsTargetObsPtrOutput
	ToSfsTurboObsTargetObsPtrOutputWithContext(context.Context) SfsTurboObsTargetObsPtrOutput
}

type sfsTurboObsTargetObsPtrType SfsTurboObsTargetObsArgs

func SfsTurboObsTargetObsPtr(v *SfsTurboObsTargetObsArgs) SfsTurboObsTargetObsPtrInput {
	return (*sfsTurboObsTargetObsPtrType)(v)
}

func (*sfsTurboObsTargetObsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SfsTurboObsTargetObs)(nil)).Elem()
}

func (i *sfsTurboObsTargetObsPtrType) ToSfsTurboObsTargetObsPtrOutput() SfsTurboObsTargetObsPtrOutput {
	return i.ToSfsTurboObsTargetObsPtrOutputWithContext(context.Background())
}

func (i *sfsTurboObsTargetObsPtrType) ToSfsTurboObsTargetObsPtrOutputWithContext(ctx context.Context) SfsTurboObsTargetObsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboObsTargetObsPtrOutput)
}

type SfsTurboObsTargetObsOutput struct{ *pulumi.OutputState }

func (SfsTurboObsTargetObsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SfsTurboObsTargetObs)(nil)).Elem()
}

func (o SfsTurboObsTargetObsOutput) ToSfsTurboObsTargetObsOutput() SfsTurboObsTargetObsOutput {
	return o
}

func (o SfsTurboObsTargetObsOutput) ToSfsTurboObsTargetObsOutputWithContext(ctx context.Context) SfsTurboObsTargetObsOutput {
	return o
}

func (o SfsTurboObsTargetObsOutput) ToSfsTurboObsTargetObsPtrOutput() SfsTurboObsTargetObsPtrOutput {
	return o.ToSfsTurboObsTargetObsPtrOutputWithContext(context.Background())
}

func (o SfsTurboObsTargetObsOutput) ToSfsTurboObsTargetObsPtrOutputWithContext(ctx context.Context) SfsTurboObsTargetObsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SfsTurboObsTargetObs) *SfsTurboObsTargetObs {
		return &v
	}).(SfsTurboObsTargetObsPtrOutput)
}

func (o SfsTurboObsTargetObsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v SfsTurboObsTargetObs) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o SfsTurboObsTargetObsOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SfsTurboObsTargetObs) string { return v.Endpoint }).(pulumi.StringOutput)
}

type SfsTurboObsTargetObsPtrOutput struct{ *pulumi.OutputState }

func (SfsTurboObsTargetObsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SfsTurboObsTargetObs)(nil)).Elem()
}

func (o SfsTurboObsTargetObsPtrOutput) ToSfsTurboObsTargetObsPtrOutput() SfsTurboObsTargetObsPtrOutput {
	return o
}

func (o SfsTurboObsTargetObsPtrOutput) ToSfsTurboObsTargetObsPtrOutputWithContext(ctx context.Context) SfsTurboObsTargetObsPtrOutput {
	return o
}

func (o SfsTurboObsTargetObsPtrOutput) Elem() SfsTurboObsTargetObsOutput {
	return o.ApplyT(func(v *SfsTurboObsTargetObs) SfsTurboObsTargetObs {
		if v != nil {
			return *v
		}
		var ret SfsTurboObsTargetObs
		return ret
	}).(SfsTurboObsTargetObsOutput)
}

func (o SfsTurboObsTargetObsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SfsTurboObsTargetObs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o SfsTurboObsTargetObsPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SfsTurboObsTargetObs) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type SmnSubscriptionExtension struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	Keyword      *string `pulumi:"keyword"`
	SignSecret   *string `pulumi:"signSecret"`
}

// SmnSubscriptionExtensionInput is an input type that accepts SmnSubscriptionExtensionArgs and SmnSubscriptionExtensionOutput values.
// You can construct a concrete instance of `SmnSubscriptionExtensionInput` via:
//
//	SmnSubscriptionExtensionArgs{...}
type SmnSubscriptionExtensionInput interface {
	pulumi.Input

	ToSmnSubscriptionExtensionOutput() SmnSubscriptionExtensionOutput
	ToSmnSubscriptionExtensionOutputWithContext(context.Context) SmnSubscriptionExtensionOutput
}

type SmnSubscriptionExtensionArgs struct {
	ClientId     pulumi.StringPtrInput `pulumi:"clientId"`
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	Keyword      pulumi.StringPtrInput `pulumi:"keyword"`
	SignSecret   pulumi.StringPtrInput `pulumi:"signSecret"`
}

func (SmnSubscriptionExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmnSubscriptionExtension)(nil)).Elem()
}

func (i SmnSubscriptionExtensionArgs) ToSmnSubscriptionExtensionOutput() SmnSubscriptionExtensionOutput {
	return i.ToSmnSubscriptionExtensionOutputWithContext(context.Background())
}

func (i SmnSubscriptionExtensionArgs) ToSmnSubscriptionExtensionOutputWithContext(ctx context.Context) SmnSubscriptionExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmnSubscriptionExtensionOutput)
}

func (i SmnSubscriptionExtensionArgs) ToSmnSubscriptionExtensionPtrOutput() SmnSubscriptionExtensionPtrOutput {
	return i.ToSmnSubscriptionExtensionPtrOutputWithContext(context.Background())
}

func (i SmnSubscriptionExtensionArgs) ToSmnSubscriptionExtensionPtrOutputWithContext(ctx context.Context) SmnSubscriptionExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmnSubscriptionExtensionOutput).ToSmnSubscriptionExtensionPtrOutputWithContext(ctx)
}

// SmnSubscriptionExtensionPtrInput is an input type that accepts SmnSubscriptionExtensionArgs, SmnSubscriptionExtensionPtr and SmnSubscriptionExtensionPtrOutput values.
// You can construct a concrete instance of `SmnSubscriptionExtensionPtrInput` via:
//
//	        SmnSubscriptionExtensionArgs{...}
//
//	or:
//
//	        nil
type SmnSubscriptionExtensionPtrInput interface {
	pulumi.Input

	ToSmnSubscriptionExtensionPtrOutput() SmnSubscriptionExtensionPtrOutput
	ToSmnSubscriptionExtensionPtrOutputWithContext(context.Context) SmnSubscriptionExtensionPtrOutput
}

type smnSubscriptionExtensionPtrType SmnSubscriptionExtensionArgs

func SmnSubscriptionExtensionPtr(v *SmnSubscriptionExtensionArgs) SmnSubscriptionExtensionPtrInput {
	return (*smnSubscriptionExtensionPtrType)(v)
}

func (*smnSubscriptionExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmnSubscriptionExtension)(nil)).Elem()
}

func (i *smnSubscriptionExtensionPtrType) ToSmnSubscriptionExtensionPtrOutput() SmnSubscriptionExtensionPtrOutput {
	return i.ToSmnSubscriptionExtensionPtrOutputWithContext(context.Background())
}

func (i *smnSubscriptionExtensionPtrType) ToSmnSubscriptionExtensionPtrOutputWithContext(ctx context.Context) SmnSubscriptionExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmnSubscriptionExtensionPtrOutput)
}

type SmnSubscriptionExtensionOutput struct{ *pulumi.OutputState }

func (SmnSubscriptionExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmnSubscriptionExtension)(nil)).Elem()
}

func (o SmnSubscriptionExtensionOutput) ToSmnSubscriptionExtensionOutput() SmnSubscriptionExtensionOutput {
	return o
}

func (o SmnSubscriptionExtensionOutput) ToSmnSubscriptionExtensionOutputWithContext(ctx context.Context) SmnSubscriptionExtensionOutput {
	return o
}

func (o SmnSubscriptionExtensionOutput) ToSmnSubscriptionExtensionPtrOutput() SmnSubscriptionExtensionPtrOutput {
	return o.ToSmnSubscriptionExtensionPtrOutputWithContext(context.Background())
}

func (o SmnSubscriptionExtensionOutput) ToSmnSubscriptionExtensionPtrOutputWithContext(ctx context.Context) SmnSubscriptionExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmnSubscriptionExtension) *SmnSubscriptionExtension {
		return &v
	}).(SmnSubscriptionExtensionPtrOutput)
}

func (o SmnSubscriptionExtensionOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmnSubscriptionExtension) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o SmnSubscriptionExtensionOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmnSubscriptionExtension) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o SmnSubscriptionExtensionOutput) Keyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmnSubscriptionExtension) *string { return v.Keyword }).(pulumi.StringPtrOutput)
}

func (o SmnSubscriptionExtensionOutput) SignSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmnSubscriptionExtension) *string { return v.SignSecret }).(pulumi.StringPtrOutput)
}

type SmnSubscriptionExtensionPtrOutput struct{ *pulumi.OutputState }

func (SmnSubscriptionExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmnSubscriptionExtension)(nil)).Elem()
}

func (o SmnSubscriptionExtensionPtrOutput) ToSmnSubscriptionExtensionPtrOutput() SmnSubscriptionExtensionPtrOutput {
	return o
}

func (o SmnSubscriptionExtensionPtrOutput) ToSmnSubscriptionExtensionPtrOutputWithContext(ctx context.Context) SmnSubscriptionExtensionPtrOutput {
	return o
}

func (o SmnSubscriptionExtensionPtrOutput) Elem() SmnSubscriptionExtensionOutput {
	return o.ApplyT(func(v *SmnSubscriptionExtension) SmnSubscriptionExtension {
		if v != nil {
			return *v
		}
		var ret SmnSubscriptionExtension
		return ret
	}).(SmnSubscriptionExtensionOutput)
}

func (o SmnSubscriptionExtensionPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmnSubscriptionExtension) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o SmnSubscriptionExtensionPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmnSubscriptionExtension) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o SmnSubscriptionExtensionPtrOutput) Keyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmnSubscriptionExtension) *string {
		if v == nil {
			return nil
		}
		return v.Keyword
	}).(pulumi.StringPtrOutput)
}

func (o SmnSubscriptionExtensionPtrOutput) SignSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmnSubscriptionExtension) *string {
		if v == nil {
			return nil
		}
		return v.SignSecret
	}).(pulumi.StringPtrOutput)
}

type SmnSubscriptionFilterPolicy struct {
	// The filter policy name. The policy name must be unique.
	Name *string `pulumi:"name"`
	// The string array for exact match.
	StringEquals []string `pulumi:"stringEquals"`
}

// SmnSubscriptionFilterPolicyInput is an input type that accepts SmnSubscriptionFilterPolicyArgs and SmnSubscriptionFilterPolicyOutput values.
// You can construct a concrete instance of `SmnSubscriptionFilterPolicyInput` via:
//
//	SmnSubscriptionFilterPolicyArgs{...}
type SmnSubscriptionFilterPolicyInput interface {
	pulumi.Input

	ToSmnSubscriptionFilterPolicyOutput() SmnSubscriptionFilterPolicyOutput
	ToSmnSubscriptionFilterPolicyOutputWithContext(context.Context) SmnSubscriptionFilterPolicyOutput
}

type SmnSubscriptionFilterPolicyArgs struct {
	// The filter policy name. The policy name must be unique.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The string array for exact match.
	StringEquals pulumi.StringArrayInput `pulumi:"stringEquals"`
}

func (SmnSubscriptionFilterPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmnSubscriptionFilterPolicy)(nil)).Elem()
}

func (i SmnSubscriptionFilterPolicyArgs) ToSmnSubscriptionFilterPolicyOutput() SmnSubscriptionFilterPolicyOutput {
	return i.ToSmnSubscriptionFilterPolicyOutputWithContext(context.Background())
}

func (i SmnSubscriptionFilterPolicyArgs) ToSmnSubscriptionFilterPolicyOutputWithContext(ctx context.Context) SmnSubscriptionFilterPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmnSubscriptionFilterPolicyOutput)
}

// SmnSubscriptionFilterPolicyArrayInput is an input type that accepts SmnSubscriptionFilterPolicyArray and SmnSubscriptionFilterPolicyArrayOutput values.
// You can construct a concrete instance of `SmnSubscriptionFilterPolicyArrayInput` via:
//
//	SmnSubscriptionFilterPolicyArray{ SmnSubscriptionFilterPolicyArgs{...} }
type SmnSubscriptionFilterPolicyArrayInput interface {
	pulumi.Input

	ToSmnSubscriptionFilterPolicyArrayOutput() SmnSubscriptionFilterPolicyArrayOutput
	ToSmnSubscriptionFilterPolicyArrayOutputWithContext(context.Context) SmnSubscriptionFilterPolicyArrayOutput
}

type SmnSubscriptionFilterPolicyArray []SmnSubscriptionFilterPolicyInput

func (SmnSubscriptionFilterPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmnSubscriptionFilterPolicy)(nil)).Elem()
}

func (i SmnSubscriptionFilterPolicyArray) ToSmnSubscriptionFilterPolicyArrayOutput() SmnSubscriptionFilterPolicyArrayOutput {
	return i.ToSmnSubscriptionFilterPolicyArrayOutputWithContext(context.Background())
}

func (i SmnSubscriptionFilterPolicyArray) ToSmnSubscriptionFilterPolicyArrayOutputWithContext(ctx context.Context) SmnSubscriptionFilterPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmnSubscriptionFilterPolicyArrayOutput)
}

type SmnSubscriptionFilterPolicyOutput struct{ *pulumi.OutputState }

func (SmnSubscriptionFilterPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmnSubscriptionFilterPolicy)(nil)).Elem()
}

func (o SmnSubscriptionFilterPolicyOutput) ToSmnSubscriptionFilterPolicyOutput() SmnSubscriptionFilterPolicyOutput {
	return o
}

func (o SmnSubscriptionFilterPolicyOutput) ToSmnSubscriptionFilterPolicyOutputWithContext(ctx context.Context) SmnSubscriptionFilterPolicyOutput {
	return o
}

// The filter policy name. The policy name must be unique.
func (o SmnSubscriptionFilterPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmnSubscriptionFilterPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The string array for exact match.
func (o SmnSubscriptionFilterPolicyOutput) StringEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SmnSubscriptionFilterPolicy) []string { return v.StringEquals }).(pulumi.StringArrayOutput)
}

type SmnSubscriptionFilterPolicyArrayOutput struct{ *pulumi.OutputState }

func (SmnSubscriptionFilterPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmnSubscriptionFilterPolicy)(nil)).Elem()
}

func (o SmnSubscriptionFilterPolicyArrayOutput) ToSmnSubscriptionFilterPolicyArrayOutput() SmnSubscriptionFilterPolicyArrayOutput {
	return o
}

func (o SmnSubscriptionFilterPolicyArrayOutput) ToSmnSubscriptionFilterPolicyArrayOutputWithContext(ctx context.Context) SmnSubscriptionFilterPolicyArrayOutput {
	return o
}

func (o SmnSubscriptionFilterPolicyArrayOutput) Index(i pulumi.IntInput) SmnSubscriptionFilterPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmnSubscriptionFilterPolicy {
		return vs[0].([]SmnSubscriptionFilterPolicy)[vs[1].(int)]
	}).(SmnSubscriptionFilterPolicyOutput)
}

type SwrOrganizationPermissionsSelfPermission struct {
	Permission *string `pulumi:"permission"`
	UserId     *string `pulumi:"userId"`
	UserName   *string `pulumi:"userName"`
}

// SwrOrganizationPermissionsSelfPermissionInput is an input type that accepts SwrOrganizationPermissionsSelfPermissionArgs and SwrOrganizationPermissionsSelfPermissionOutput values.
// You can construct a concrete instance of `SwrOrganizationPermissionsSelfPermissionInput` via:
//
//	SwrOrganizationPermissionsSelfPermissionArgs{...}
type SwrOrganizationPermissionsSelfPermissionInput interface {
	pulumi.Input

	ToSwrOrganizationPermissionsSelfPermissionOutput() SwrOrganizationPermissionsSelfPermissionOutput
	ToSwrOrganizationPermissionsSelfPermissionOutputWithContext(context.Context) SwrOrganizationPermissionsSelfPermissionOutput
}

type SwrOrganizationPermissionsSelfPermissionArgs struct {
	Permission pulumi.StringPtrInput `pulumi:"permission"`
	UserId     pulumi.StringPtrInput `pulumi:"userId"`
	UserName   pulumi.StringPtrInput `pulumi:"userName"`
}

func (SwrOrganizationPermissionsSelfPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwrOrganizationPermissionsSelfPermission)(nil)).Elem()
}

func (i SwrOrganizationPermissionsSelfPermissionArgs) ToSwrOrganizationPermissionsSelfPermissionOutput() SwrOrganizationPermissionsSelfPermissionOutput {
	return i.ToSwrOrganizationPermissionsSelfPermissionOutputWithContext(context.Background())
}

func (i SwrOrganizationPermissionsSelfPermissionArgs) ToSwrOrganizationPermissionsSelfPermissionOutputWithContext(ctx context.Context) SwrOrganizationPermissionsSelfPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwrOrganizationPermissionsSelfPermissionOutput)
}

// SwrOrganizationPermissionsSelfPermissionArrayInput is an input type that accepts SwrOrganizationPermissionsSelfPermissionArray and SwrOrganizationPermissionsSelfPermissionArrayOutput values.
// You can construct a concrete instance of `SwrOrganizationPermissionsSelfPermissionArrayInput` via:
//
//	SwrOrganizationPermissionsSelfPermissionArray{ SwrOrganizationPermissionsSelfPermissionArgs{...} }
type SwrOrganizationPermissionsSelfPermissionArrayInput interface {
	pulumi.Input

	ToSwrOrganizationPermissionsSelfPermissionArrayOutput() SwrOrganizationPermissionsSelfPermissionArrayOutput
	ToSwrOrganizationPermissionsSelfPermissionArrayOutputWithContext(context.Context) SwrOrganizationPermissionsSelfPermissionArrayOutput
}

type SwrOrganizationPermissionsSelfPermissionArray []SwrOrganizationPermissionsSelfPermissionInput

func (SwrOrganizationPermissionsSelfPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwrOrganizationPermissionsSelfPermission)(nil)).Elem()
}

func (i SwrOrganizationPermissionsSelfPermissionArray) ToSwrOrganizationPermissionsSelfPermissionArrayOutput() SwrOrganizationPermissionsSelfPermissionArrayOutput {
	return i.ToSwrOrganizationPermissionsSelfPermissionArrayOutputWithContext(context.Background())
}

func (i SwrOrganizationPermissionsSelfPermissionArray) ToSwrOrganizationPermissionsSelfPermissionArrayOutputWithContext(ctx context.Context) SwrOrganizationPermissionsSelfPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwrOrganizationPermissionsSelfPermissionArrayOutput)
}

type SwrOrganizationPermissionsSelfPermissionOutput struct{ *pulumi.OutputState }

func (SwrOrganizationPermissionsSelfPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwrOrganizationPermissionsSelfPermission)(nil)).Elem()
}

func (o SwrOrganizationPermissionsSelfPermissionOutput) ToSwrOrganizationPermissionsSelfPermissionOutput() SwrOrganizationPermissionsSelfPermissionOutput {
	return o
}

func (o SwrOrganizationPermissionsSelfPermissionOutput) ToSwrOrganizationPermissionsSelfPermissionOutputWithContext(ctx context.Context) SwrOrganizationPermissionsSelfPermissionOutput {
	return o
}

func (o SwrOrganizationPermissionsSelfPermissionOutput) Permission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwrOrganizationPermissionsSelfPermission) *string { return v.Permission }).(pulumi.StringPtrOutput)
}

func (o SwrOrganizationPermissionsSelfPermissionOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwrOrganizationPermissionsSelfPermission) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

func (o SwrOrganizationPermissionsSelfPermissionOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwrOrganizationPermissionsSelfPermission) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type SwrOrganizationPermissionsSelfPermissionArrayOutput struct{ *pulumi.OutputState }

func (SwrOrganizationPermissionsSelfPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwrOrganizationPermissionsSelfPermission)(nil)).Elem()
}

func (o SwrOrganizationPermissionsSelfPermissionArrayOutput) ToSwrOrganizationPermissionsSelfPermissionArrayOutput() SwrOrganizationPermissionsSelfPermissionArrayOutput {
	return o
}

func (o SwrOrganizationPermissionsSelfPermissionArrayOutput) ToSwrOrganizationPermissionsSelfPermissionArrayOutputWithContext(ctx context.Context) SwrOrganizationPermissionsSelfPermissionArrayOutput {
	return o
}

func (o SwrOrganizationPermissionsSelfPermissionArrayOutput) Index(i pulumi.IntInput) SwrOrganizationPermissionsSelfPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwrOrganizationPermissionsSelfPermission {
		return vs[0].([]SwrOrganizationPermissionsSelfPermission)[vs[1].(int)]
	}).(SwrOrganizationPermissionsSelfPermissionOutput)
}

type SwrOrganizationPermissionsUser struct {
	Permission string  `pulumi:"permission"`
	UserId     string  `pulumi:"userId"`
	UserName   *string `pulumi:"userName"`
}

// SwrOrganizationPermissionsUserInput is an input type that accepts SwrOrganizationPermissionsUserArgs and SwrOrganizationPermissionsUserOutput values.
// You can construct a concrete instance of `SwrOrganizationPermissionsUserInput` via:
//
//	SwrOrganizationPermissionsUserArgs{...}
type SwrOrganizationPermissionsUserInput interface {
	pulumi.Input

	ToSwrOrganizationPermissionsUserOutput() SwrOrganizationPermissionsUserOutput
	ToSwrOrganizationPermissionsUserOutputWithContext(context.Context) SwrOrganizationPermissionsUserOutput
}

type SwrOrganizationPermissionsUserArgs struct {
	Permission pulumi.StringInput    `pulumi:"permission"`
	UserId     pulumi.StringInput    `pulumi:"userId"`
	UserName   pulumi.StringPtrInput `pulumi:"userName"`
}

func (SwrOrganizationPermissionsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwrOrganizationPermissionsUser)(nil)).Elem()
}

func (i SwrOrganizationPermissionsUserArgs) ToSwrOrganizationPermissionsUserOutput() SwrOrganizationPermissionsUserOutput {
	return i.ToSwrOrganizationPermissionsUserOutputWithContext(context.Background())
}

func (i SwrOrganizationPermissionsUserArgs) ToSwrOrganizationPermissionsUserOutputWithContext(ctx context.Context) SwrOrganizationPermissionsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwrOrganizationPermissionsUserOutput)
}

// SwrOrganizationPermissionsUserArrayInput is an input type that accepts SwrOrganizationPermissionsUserArray and SwrOrganizationPermissionsUserArrayOutput values.
// You can construct a concrete instance of `SwrOrganizationPermissionsUserArrayInput` via:
//
//	SwrOrganizationPermissionsUserArray{ SwrOrganizationPermissionsUserArgs{...} }
type SwrOrganizationPermissionsUserArrayInput interface {
	pulumi.Input

	ToSwrOrganizationPermissionsUserArrayOutput() SwrOrganizationPermissionsUserArrayOutput
	ToSwrOrganizationPermissionsUserArrayOutputWithContext(context.Context) SwrOrganizationPermissionsUserArrayOutput
}

type SwrOrganizationPermissionsUserArray []SwrOrganizationPermissionsUserInput

func (SwrOrganizationPermissionsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwrOrganizationPermissionsUser)(nil)).Elem()
}

func (i SwrOrganizationPermissionsUserArray) ToSwrOrganizationPermissionsUserArrayOutput() SwrOrganizationPermissionsUserArrayOutput {
	return i.ToSwrOrganizationPermissionsUserArrayOutputWithContext(context.Background())
}

func (i SwrOrganizationPermissionsUserArray) ToSwrOrganizationPermissionsUserArrayOutputWithContext(ctx context.Context) SwrOrganizationPermissionsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwrOrganizationPermissionsUserArrayOutput)
}

type SwrOrganizationPermissionsUserOutput struct{ *pulumi.OutputState }

func (SwrOrganizationPermissionsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwrOrganizationPermissionsUser)(nil)).Elem()
}

func (o SwrOrganizationPermissionsUserOutput) ToSwrOrganizationPermissionsUserOutput() SwrOrganizationPermissionsUserOutput {
	return o
}

func (o SwrOrganizationPermissionsUserOutput) ToSwrOrganizationPermissionsUserOutputWithContext(ctx context.Context) SwrOrganizationPermissionsUserOutput {
	return o
}

func (o SwrOrganizationPermissionsUserOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v SwrOrganizationPermissionsUser) string { return v.Permission }).(pulumi.StringOutput)
}

func (o SwrOrganizationPermissionsUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v SwrOrganizationPermissionsUser) string { return v.UserId }).(pulumi.StringOutput)
}

func (o SwrOrganizationPermissionsUserOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwrOrganizationPermissionsUser) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type SwrOrganizationPermissionsUserArrayOutput struct{ *pulumi.OutputState }

func (SwrOrganizationPermissionsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwrOrganizationPermissionsUser)(nil)).Elem()
}

func (o SwrOrganizationPermissionsUserArrayOutput) ToSwrOrganizationPermissionsUserArrayOutput() SwrOrganizationPermissionsUserArrayOutput {
	return o
}

func (o SwrOrganizationPermissionsUserArrayOutput) ToSwrOrganizationPermissionsUserArrayOutputWithContext(ctx context.Context) SwrOrganizationPermissionsUserArrayOutput {
	return o
}

func (o SwrOrganizationPermissionsUserArrayOutput) Index(i pulumi.IntInput) SwrOrganizationPermissionsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwrOrganizationPermissionsUser {
		return vs[0].([]SwrOrganizationPermissionsUser)[vs[1].(int)]
	}).(SwrOrganizationPermissionsUserOutput)
}

type VpcAddressGroupIpExtraSet struct {
	Ip      string  `pulumi:"ip"`
	Remarks *string `pulumi:"remarks"`
}

// VpcAddressGroupIpExtraSetInput is an input type that accepts VpcAddressGroupIpExtraSetArgs and VpcAddressGroupIpExtraSetOutput values.
// You can construct a concrete instance of `VpcAddressGroupIpExtraSetInput` via:
//
//	VpcAddressGroupIpExtraSetArgs{...}
type VpcAddressGroupIpExtraSetInput interface {
	pulumi.Input

	ToVpcAddressGroupIpExtraSetOutput() VpcAddressGroupIpExtraSetOutput
	ToVpcAddressGroupIpExtraSetOutputWithContext(context.Context) VpcAddressGroupIpExtraSetOutput
}

type VpcAddressGroupIpExtraSetArgs struct {
	Ip      pulumi.StringInput    `pulumi:"ip"`
	Remarks pulumi.StringPtrInput `pulumi:"remarks"`
}

func (VpcAddressGroupIpExtraSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAddressGroupIpExtraSet)(nil)).Elem()
}

func (i VpcAddressGroupIpExtraSetArgs) ToVpcAddressGroupIpExtraSetOutput() VpcAddressGroupIpExtraSetOutput {
	return i.ToVpcAddressGroupIpExtraSetOutputWithContext(context.Background())
}

func (i VpcAddressGroupIpExtraSetArgs) ToVpcAddressGroupIpExtraSetOutputWithContext(ctx context.Context) VpcAddressGroupIpExtraSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressGroupIpExtraSetOutput)
}

// VpcAddressGroupIpExtraSetArrayInput is an input type that accepts VpcAddressGroupIpExtraSetArray and VpcAddressGroupIpExtraSetArrayOutput values.
// You can construct a concrete instance of `VpcAddressGroupIpExtraSetArrayInput` via:
//
//	VpcAddressGroupIpExtraSetArray{ VpcAddressGroupIpExtraSetArgs{...} }
type VpcAddressGroupIpExtraSetArrayInput interface {
	pulumi.Input

	ToVpcAddressGroupIpExtraSetArrayOutput() VpcAddressGroupIpExtraSetArrayOutput
	ToVpcAddressGroupIpExtraSetArrayOutputWithContext(context.Context) VpcAddressGroupIpExtraSetArrayOutput
}

type VpcAddressGroupIpExtraSetArray []VpcAddressGroupIpExtraSetInput

func (VpcAddressGroupIpExtraSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAddressGroupIpExtraSet)(nil)).Elem()
}

func (i VpcAddressGroupIpExtraSetArray) ToVpcAddressGroupIpExtraSetArrayOutput() VpcAddressGroupIpExtraSetArrayOutput {
	return i.ToVpcAddressGroupIpExtraSetArrayOutputWithContext(context.Background())
}

func (i VpcAddressGroupIpExtraSetArray) ToVpcAddressGroupIpExtraSetArrayOutputWithContext(ctx context.Context) VpcAddressGroupIpExtraSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressGroupIpExtraSetArrayOutput)
}

type VpcAddressGroupIpExtraSetOutput struct{ *pulumi.OutputState }

func (VpcAddressGroupIpExtraSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAddressGroupIpExtraSet)(nil)).Elem()
}

func (o VpcAddressGroupIpExtraSetOutput) ToVpcAddressGroupIpExtraSetOutput() VpcAddressGroupIpExtraSetOutput {
	return o
}

func (o VpcAddressGroupIpExtraSetOutput) ToVpcAddressGroupIpExtraSetOutputWithContext(ctx context.Context) VpcAddressGroupIpExtraSetOutput {
	return o
}

func (o VpcAddressGroupIpExtraSetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAddressGroupIpExtraSet) string { return v.Ip }).(pulumi.StringOutput)
}

func (o VpcAddressGroupIpExtraSetOutput) Remarks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAddressGroupIpExtraSet) *string { return v.Remarks }).(pulumi.StringPtrOutput)
}

type VpcAddressGroupIpExtraSetArrayOutput struct{ *pulumi.OutputState }

func (VpcAddressGroupIpExtraSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAddressGroupIpExtraSet)(nil)).Elem()
}

func (o VpcAddressGroupIpExtraSetArrayOutput) ToVpcAddressGroupIpExtraSetArrayOutput() VpcAddressGroupIpExtraSetArrayOutput {
	return o
}

func (o VpcAddressGroupIpExtraSetArrayOutput) ToVpcAddressGroupIpExtraSetArrayOutputWithContext(ctx context.Context) VpcAddressGroupIpExtraSetArrayOutput {
	return o
}

func (o VpcAddressGroupIpExtraSetArrayOutput) Index(i pulumi.IntInput) VpcAddressGroupIpExtraSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAddressGroupIpExtraSet {
		return vs[0].([]VpcAddressGroupIpExtraSet)[vs[1].(int)]
	}).(VpcAddressGroupIpExtraSetOutput)
}

type VpcBandwidthPublicip struct {
	Id        *string `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
	IpVersion *int    `pulumi:"ipVersion"`
	Type      *string `pulumi:"type"`
}

// VpcBandwidthPublicipInput is an input type that accepts VpcBandwidthPublicipArgs and VpcBandwidthPublicipOutput values.
// You can construct a concrete instance of `VpcBandwidthPublicipInput` via:
//
//	VpcBandwidthPublicipArgs{...}
type VpcBandwidthPublicipInput interface {
	pulumi.Input

	ToVpcBandwidthPublicipOutput() VpcBandwidthPublicipOutput
	ToVpcBandwidthPublicipOutputWithContext(context.Context) VpcBandwidthPublicipOutput
}

type VpcBandwidthPublicipArgs struct {
	Id        pulumi.StringPtrInput `pulumi:"id"`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	IpVersion pulumi.IntPtrInput    `pulumi:"ipVersion"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
}

func (VpcBandwidthPublicipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcBandwidthPublicip)(nil)).Elem()
}

func (i VpcBandwidthPublicipArgs) ToVpcBandwidthPublicipOutput() VpcBandwidthPublicipOutput {
	return i.ToVpcBandwidthPublicipOutputWithContext(context.Background())
}

func (i VpcBandwidthPublicipArgs) ToVpcBandwidthPublicipOutputWithContext(ctx context.Context) VpcBandwidthPublicipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBandwidthPublicipOutput)
}

// VpcBandwidthPublicipArrayInput is an input type that accepts VpcBandwidthPublicipArray and VpcBandwidthPublicipArrayOutput values.
// You can construct a concrete instance of `VpcBandwidthPublicipArrayInput` via:
//
//	VpcBandwidthPublicipArray{ VpcBandwidthPublicipArgs{...} }
type VpcBandwidthPublicipArrayInput interface {
	pulumi.Input

	ToVpcBandwidthPublicipArrayOutput() VpcBandwidthPublicipArrayOutput
	ToVpcBandwidthPublicipArrayOutputWithContext(context.Context) VpcBandwidthPublicipArrayOutput
}

type VpcBandwidthPublicipArray []VpcBandwidthPublicipInput

func (VpcBandwidthPublicipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcBandwidthPublicip)(nil)).Elem()
}

func (i VpcBandwidthPublicipArray) ToVpcBandwidthPublicipArrayOutput() VpcBandwidthPublicipArrayOutput {
	return i.ToVpcBandwidthPublicipArrayOutputWithContext(context.Background())
}

func (i VpcBandwidthPublicipArray) ToVpcBandwidthPublicipArrayOutputWithContext(ctx context.Context) VpcBandwidthPublicipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBandwidthPublicipArrayOutput)
}

type VpcBandwidthPublicipOutput struct{ *pulumi.OutputState }

func (VpcBandwidthPublicipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcBandwidthPublicip)(nil)).Elem()
}

func (o VpcBandwidthPublicipOutput) ToVpcBandwidthPublicipOutput() VpcBandwidthPublicipOutput {
	return o
}

func (o VpcBandwidthPublicipOutput) ToVpcBandwidthPublicipOutputWithContext(ctx context.Context) VpcBandwidthPublicipOutput {
	return o
}

func (o VpcBandwidthPublicipOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcBandwidthPublicip) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o VpcBandwidthPublicipOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcBandwidthPublicip) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o VpcBandwidthPublicipOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcBandwidthPublicip) *int { return v.IpVersion }).(pulumi.IntPtrOutput)
}

func (o VpcBandwidthPublicipOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcBandwidthPublicip) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpcBandwidthPublicipArrayOutput struct{ *pulumi.OutputState }

func (VpcBandwidthPublicipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcBandwidthPublicip)(nil)).Elem()
}

func (o VpcBandwidthPublicipArrayOutput) ToVpcBandwidthPublicipArrayOutput() VpcBandwidthPublicipArrayOutput {
	return o
}

func (o VpcBandwidthPublicipArrayOutput) ToVpcBandwidthPublicipArrayOutputWithContext(ctx context.Context) VpcBandwidthPublicipArrayOutput {
	return o
}

func (o VpcBandwidthPublicipArrayOutput) Index(i pulumi.IntInput) VpcBandwidthPublicipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcBandwidthPublicip {
		return vs[0].([]VpcBandwidthPublicip)[vs[1].(int)]
	}).(VpcBandwidthPublicipOutput)
}

type VpcEipBandwidth struct {
	// Whether the bandwidth is billed by traffic or by bandwidth size.
	ChargeMode *string `pulumi:"chargeMode"`
	// The shared bandwidth ID.
	Id *string `pulumi:"id"`
	// The dedicated bandwidth name.
	Name *string `pulumi:"name"`
	// Whether the bandwidth is dedicated or shared.
	ShareType string `pulumi:"shareType"`
	// The dedicated bandwidth size.
	Size *int `pulumi:"size"`
}

// VpcEipBandwidthInput is an input type that accepts VpcEipBandwidthArgs and VpcEipBandwidthOutput values.
// You can construct a concrete instance of `VpcEipBandwidthInput` via:
//
//	VpcEipBandwidthArgs{...}
type VpcEipBandwidthInput interface {
	pulumi.Input

	ToVpcEipBandwidthOutput() VpcEipBandwidthOutput
	ToVpcEipBandwidthOutputWithContext(context.Context) VpcEipBandwidthOutput
}

type VpcEipBandwidthArgs struct {
	// Whether the bandwidth is billed by traffic or by bandwidth size.
	ChargeMode pulumi.StringPtrInput `pulumi:"chargeMode"`
	// The shared bandwidth ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The dedicated bandwidth name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the bandwidth is dedicated or shared.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// The dedicated bandwidth size.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (VpcEipBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEipBandwidth)(nil)).Elem()
}

func (i VpcEipBandwidthArgs) ToVpcEipBandwidthOutput() VpcEipBandwidthOutput {
	return i.ToVpcEipBandwidthOutputWithContext(context.Background())
}

func (i VpcEipBandwidthArgs) ToVpcEipBandwidthOutputWithContext(ctx context.Context) VpcEipBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipBandwidthOutput)
}

func (i VpcEipBandwidthArgs) ToVpcEipBandwidthPtrOutput() VpcEipBandwidthPtrOutput {
	return i.ToVpcEipBandwidthPtrOutputWithContext(context.Background())
}

func (i VpcEipBandwidthArgs) ToVpcEipBandwidthPtrOutputWithContext(ctx context.Context) VpcEipBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipBandwidthOutput).ToVpcEipBandwidthPtrOutputWithContext(ctx)
}

// VpcEipBandwidthPtrInput is an input type that accepts VpcEipBandwidthArgs, VpcEipBandwidthPtr and VpcEipBandwidthPtrOutput values.
// You can construct a concrete instance of `VpcEipBandwidthPtrInput` via:
//
//	        VpcEipBandwidthArgs{...}
//
//	or:
//
//	        nil
type VpcEipBandwidthPtrInput interface {
	pulumi.Input

	ToVpcEipBandwidthPtrOutput() VpcEipBandwidthPtrOutput
	ToVpcEipBandwidthPtrOutputWithContext(context.Context) VpcEipBandwidthPtrOutput
}

type vpcEipBandwidthPtrType VpcEipBandwidthArgs

func VpcEipBandwidthPtr(v *VpcEipBandwidthArgs) VpcEipBandwidthPtrInput {
	return (*vpcEipBandwidthPtrType)(v)
}

func (*vpcEipBandwidthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEipBandwidth)(nil)).Elem()
}

func (i *vpcEipBandwidthPtrType) ToVpcEipBandwidthPtrOutput() VpcEipBandwidthPtrOutput {
	return i.ToVpcEipBandwidthPtrOutputWithContext(context.Background())
}

func (i *vpcEipBandwidthPtrType) ToVpcEipBandwidthPtrOutputWithContext(ctx context.Context) VpcEipBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipBandwidthPtrOutput)
}

type VpcEipBandwidthOutput struct{ *pulumi.OutputState }

func (VpcEipBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEipBandwidth)(nil)).Elem()
}

func (o VpcEipBandwidthOutput) ToVpcEipBandwidthOutput() VpcEipBandwidthOutput {
	return o
}

func (o VpcEipBandwidthOutput) ToVpcEipBandwidthOutputWithContext(ctx context.Context) VpcEipBandwidthOutput {
	return o
}

func (o VpcEipBandwidthOutput) ToVpcEipBandwidthPtrOutput() VpcEipBandwidthPtrOutput {
	return o.ToVpcEipBandwidthPtrOutputWithContext(context.Background())
}

func (o VpcEipBandwidthOutput) ToVpcEipBandwidthPtrOutputWithContext(ctx context.Context) VpcEipBandwidthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcEipBandwidth) *VpcEipBandwidth {
		return &v
	}).(VpcEipBandwidthPtrOutput)
}

// Whether the bandwidth is billed by traffic or by bandwidth size.
func (o VpcEipBandwidthOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEipBandwidth) *string { return v.ChargeMode }).(pulumi.StringPtrOutput)
}

// The shared bandwidth ID.
func (o VpcEipBandwidthOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEipBandwidth) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The dedicated bandwidth name.
func (o VpcEipBandwidthOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEipBandwidth) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the bandwidth is dedicated or shared.
func (o VpcEipBandwidthOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v VpcEipBandwidth) string { return v.ShareType }).(pulumi.StringOutput)
}

// The dedicated bandwidth size.
func (o VpcEipBandwidthOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcEipBandwidth) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type VpcEipBandwidthPtrOutput struct{ *pulumi.OutputState }

func (VpcEipBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEipBandwidth)(nil)).Elem()
}

func (o VpcEipBandwidthPtrOutput) ToVpcEipBandwidthPtrOutput() VpcEipBandwidthPtrOutput {
	return o
}

func (o VpcEipBandwidthPtrOutput) ToVpcEipBandwidthPtrOutputWithContext(ctx context.Context) VpcEipBandwidthPtrOutput {
	return o
}

func (o VpcEipBandwidthPtrOutput) Elem() VpcEipBandwidthOutput {
	return o.ApplyT(func(v *VpcEipBandwidth) VpcEipBandwidth {
		if v != nil {
			return *v
		}
		var ret VpcEipBandwidth
		return ret
	}).(VpcEipBandwidthOutput)
}

// Whether the bandwidth is billed by traffic or by bandwidth size.
func (o VpcEipBandwidthPtrOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.ChargeMode
	}).(pulumi.StringPtrOutput)
}

// The shared bandwidth ID.
func (o VpcEipBandwidthPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The dedicated bandwidth name.
func (o VpcEipBandwidthPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether the bandwidth is dedicated or shared.
func (o VpcEipBandwidthPtrOutput) ShareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return &v.ShareType
	}).(pulumi.StringPtrOutput)
}

// The dedicated bandwidth size.
func (o VpcEipBandwidthPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcEipBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type VpcEipPublicip struct {
	// The EIP address to be assigned.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP version.
	IpVersion *int `pulumi:"ipVersion"`
	// schema: Deprecated
	PortId *string `pulumi:"portId"`
	// The EIP type.
	Type *string `pulumi:"type"`
}

// VpcEipPublicipInput is an input type that accepts VpcEipPublicipArgs and VpcEipPublicipOutput values.
// You can construct a concrete instance of `VpcEipPublicipInput` via:
//
//	VpcEipPublicipArgs{...}
type VpcEipPublicipInput interface {
	pulumi.Input

	ToVpcEipPublicipOutput() VpcEipPublicipOutput
	ToVpcEipPublicipOutputWithContext(context.Context) VpcEipPublicipOutput
}

type VpcEipPublicipArgs struct {
	// The EIP address to be assigned.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The IP version.
	IpVersion pulumi.IntPtrInput `pulumi:"ipVersion"`
	// schema: Deprecated
	PortId pulumi.StringPtrInput `pulumi:"portId"`
	// The EIP type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpcEipPublicipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEipPublicip)(nil)).Elem()
}

func (i VpcEipPublicipArgs) ToVpcEipPublicipOutput() VpcEipPublicipOutput {
	return i.ToVpcEipPublicipOutputWithContext(context.Background())
}

func (i VpcEipPublicipArgs) ToVpcEipPublicipOutputWithContext(ctx context.Context) VpcEipPublicipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipPublicipOutput)
}

func (i VpcEipPublicipArgs) ToVpcEipPublicipPtrOutput() VpcEipPublicipPtrOutput {
	return i.ToVpcEipPublicipPtrOutputWithContext(context.Background())
}

func (i VpcEipPublicipArgs) ToVpcEipPublicipPtrOutputWithContext(ctx context.Context) VpcEipPublicipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipPublicipOutput).ToVpcEipPublicipPtrOutputWithContext(ctx)
}

// VpcEipPublicipPtrInput is an input type that accepts VpcEipPublicipArgs, VpcEipPublicipPtr and VpcEipPublicipPtrOutput values.
// You can construct a concrete instance of `VpcEipPublicipPtrInput` via:
//
//	        VpcEipPublicipArgs{...}
//
//	or:
//
//	        nil
type VpcEipPublicipPtrInput interface {
	pulumi.Input

	ToVpcEipPublicipPtrOutput() VpcEipPublicipPtrOutput
	ToVpcEipPublicipPtrOutputWithContext(context.Context) VpcEipPublicipPtrOutput
}

type vpcEipPublicipPtrType VpcEipPublicipArgs

func VpcEipPublicipPtr(v *VpcEipPublicipArgs) VpcEipPublicipPtrInput {
	return (*vpcEipPublicipPtrType)(v)
}

func (*vpcEipPublicipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEipPublicip)(nil)).Elem()
}

func (i *vpcEipPublicipPtrType) ToVpcEipPublicipPtrOutput() VpcEipPublicipPtrOutput {
	return i.ToVpcEipPublicipPtrOutputWithContext(context.Background())
}

func (i *vpcEipPublicipPtrType) ToVpcEipPublicipPtrOutputWithContext(ctx context.Context) VpcEipPublicipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEipPublicipPtrOutput)
}

type VpcEipPublicipOutput struct{ *pulumi.OutputState }

func (VpcEipPublicipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEipPublicip)(nil)).Elem()
}

func (o VpcEipPublicipOutput) ToVpcEipPublicipOutput() VpcEipPublicipOutput {
	return o
}

func (o VpcEipPublicipOutput) ToVpcEipPublicipOutputWithContext(ctx context.Context) VpcEipPublicipOutput {
	return o
}

func (o VpcEipPublicipOutput) ToVpcEipPublicipPtrOutput() VpcEipPublicipPtrOutput {
	return o.ToVpcEipPublicipPtrOutputWithContext(context.Background())
}

func (o VpcEipPublicipOutput) ToVpcEipPublicipPtrOutputWithContext(ctx context.Context) VpcEipPublicipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcEipPublicip) *VpcEipPublicip {
		return &v
	}).(VpcEipPublicipPtrOutput)
}

// The EIP address to be assigned.
func (o VpcEipPublicipOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEipPublicip) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The IP version.
func (o VpcEipPublicipOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcEipPublicip) *int { return v.IpVersion }).(pulumi.IntPtrOutput)
}

// schema: Deprecated
func (o VpcEipPublicipOutput) PortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEipPublicip) *string { return v.PortId }).(pulumi.StringPtrOutput)
}

// The EIP type.
func (o VpcEipPublicipOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEipPublicip) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpcEipPublicipPtrOutput struct{ *pulumi.OutputState }

func (VpcEipPublicipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEipPublicip)(nil)).Elem()
}

func (o VpcEipPublicipPtrOutput) ToVpcEipPublicipPtrOutput() VpcEipPublicipPtrOutput {
	return o
}

func (o VpcEipPublicipPtrOutput) ToVpcEipPublicipPtrOutputWithContext(ctx context.Context) VpcEipPublicipPtrOutput {
	return o
}

func (o VpcEipPublicipPtrOutput) Elem() VpcEipPublicipOutput {
	return o.ApplyT(func(v *VpcEipPublicip) VpcEipPublicip {
		if v != nil {
			return *v
		}
		var ret VpcEipPublicip
		return ret
	}).(VpcEipPublicipOutput)
}

// The EIP address to be assigned.
func (o VpcEipPublicipPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEipPublicip) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The IP version.
func (o VpcEipPublicipPtrOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcEipPublicip) *int {
		if v == nil {
			return nil
		}
		return v.IpVersion
	}).(pulumi.IntPtrOutput)
}

// schema: Deprecated
func (o VpcEipPublicipPtrOutput) PortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEipPublicip) *string {
		if v == nil {
			return nil
		}
		return v.PortId
	}).(pulumi.StringPtrOutput)
}

// The EIP type.
func (o VpcEipPublicipPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEipPublicip) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type VpcRouteType struct {
	Destination *string `pulumi:"destination"`
	Nexthop     *string `pulumi:"nexthop"`
}

// VpcRouteTypeInput is an input type that accepts VpcRouteTypeArgs and VpcRouteTypeOutput values.
// You can construct a concrete instance of `VpcRouteTypeInput` via:
//
//	VpcRouteTypeArgs{...}
type VpcRouteTypeInput interface {
	pulumi.Input

	ToVpcRouteTypeOutput() VpcRouteTypeOutput
	ToVpcRouteTypeOutputWithContext(context.Context) VpcRouteTypeOutput
}

type VpcRouteTypeArgs struct {
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	Nexthop     pulumi.StringPtrInput `pulumi:"nexthop"`
}

func (VpcRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteType)(nil)).Elem()
}

func (i VpcRouteTypeArgs) ToVpcRouteTypeOutput() VpcRouteTypeOutput {
	return i.ToVpcRouteTypeOutputWithContext(context.Background())
}

func (i VpcRouteTypeArgs) ToVpcRouteTypeOutputWithContext(ctx context.Context) VpcRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcRouteTypeOutput)
}

// VpcRouteTypeArrayInput is an input type that accepts VpcRouteTypeArray and VpcRouteTypeArrayOutput values.
// You can construct a concrete instance of `VpcRouteTypeArrayInput` via:
//
//	VpcRouteTypeArray{ VpcRouteTypeArgs{...} }
type VpcRouteTypeArrayInput interface {
	pulumi.Input

	ToVpcRouteTypeArrayOutput() VpcRouteTypeArrayOutput
	ToVpcRouteTypeArrayOutputWithContext(context.Context) VpcRouteTypeArrayOutput
}

type VpcRouteTypeArray []VpcRouteTypeInput

func (VpcRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcRouteType)(nil)).Elem()
}

func (i VpcRouteTypeArray) ToVpcRouteTypeArrayOutput() VpcRouteTypeArrayOutput {
	return i.ToVpcRouteTypeArrayOutputWithContext(context.Background())
}

func (i VpcRouteTypeArray) ToVpcRouteTypeArrayOutputWithContext(ctx context.Context) VpcRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcRouteTypeArrayOutput)
}

type VpcRouteTypeOutput struct{ *pulumi.OutputState }

func (VpcRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteType)(nil)).Elem()
}

func (o VpcRouteTypeOutput) ToVpcRouteTypeOutput() VpcRouteTypeOutput {
	return o
}

func (o VpcRouteTypeOutput) ToVpcRouteTypeOutputWithContext(ctx context.Context) VpcRouteTypeOutput {
	return o
}

func (o VpcRouteTypeOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcRouteType) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o VpcRouteTypeOutput) Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcRouteType) *string { return v.Nexthop }).(pulumi.StringPtrOutput)
}

type VpcRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (VpcRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcRouteType)(nil)).Elem()
}

func (o VpcRouteTypeArrayOutput) ToVpcRouteTypeArrayOutput() VpcRouteTypeArrayOutput {
	return o
}

func (o VpcRouteTypeArrayOutput) ToVpcRouteTypeArrayOutputWithContext(ctx context.Context) VpcRouteTypeArrayOutput {
	return o
}

func (o VpcRouteTypeArrayOutput) Index(i pulumi.IntInput) VpcRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcRouteType {
		return vs[0].([]VpcRouteType)[vs[1].(int)]
	}).(VpcRouteTypeOutput)
}

type VpcRouteTableRoute struct {
	Description *string `pulumi:"description"`
	Destination string  `pulumi:"destination"`
	Nexthop     string  `pulumi:"nexthop"`
	Type        string  `pulumi:"type"`
}

// VpcRouteTableRouteInput is an input type that accepts VpcRouteTableRouteArgs and VpcRouteTableRouteOutput values.
// You can construct a concrete instance of `VpcRouteTableRouteInput` via:
//
//	VpcRouteTableRouteArgs{...}
type VpcRouteTableRouteInput interface {
	pulumi.Input

	ToVpcRouteTableRouteOutput() VpcRouteTableRouteOutput
	ToVpcRouteTableRouteOutputWithContext(context.Context) VpcRouteTableRouteOutput
}

type VpcRouteTableRouteArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Destination pulumi.StringInput    `pulumi:"destination"`
	Nexthop     pulumi.StringInput    `pulumi:"nexthop"`
	Type        pulumi.StringInput    `pulumi:"type"`
}

func (VpcRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteTableRoute)(nil)).Elem()
}

func (i VpcRouteTableRouteArgs) ToVpcRouteTableRouteOutput() VpcRouteTableRouteOutput {
	return i.ToVpcRouteTableRouteOutputWithContext(context.Background())
}

func (i VpcRouteTableRouteArgs) ToVpcRouteTableRouteOutputWithContext(ctx context.Context) VpcRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcRouteTableRouteOutput)
}

// VpcRouteTableRouteArrayInput is an input type that accepts VpcRouteTableRouteArray and VpcRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `VpcRouteTableRouteArrayInput` via:
//
//	VpcRouteTableRouteArray{ VpcRouteTableRouteArgs{...} }
type VpcRouteTableRouteArrayInput interface {
	pulumi.Input

	ToVpcRouteTableRouteArrayOutput() VpcRouteTableRouteArrayOutput
	ToVpcRouteTableRouteArrayOutputWithContext(context.Context) VpcRouteTableRouteArrayOutput
}

type VpcRouteTableRouteArray []VpcRouteTableRouteInput

func (VpcRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcRouteTableRoute)(nil)).Elem()
}

func (i VpcRouteTableRouteArray) ToVpcRouteTableRouteArrayOutput() VpcRouteTableRouteArrayOutput {
	return i.ToVpcRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i VpcRouteTableRouteArray) ToVpcRouteTableRouteArrayOutputWithContext(ctx context.Context) VpcRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcRouteTableRouteArrayOutput)
}

type VpcRouteTableRouteOutput struct{ *pulumi.OutputState }

func (VpcRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteTableRoute)(nil)).Elem()
}

func (o VpcRouteTableRouteOutput) ToVpcRouteTableRouteOutput() VpcRouteTableRouteOutput {
	return o
}

func (o VpcRouteTableRouteOutput) ToVpcRouteTableRouteOutputWithContext(ctx context.Context) VpcRouteTableRouteOutput {
	return o
}

func (o VpcRouteTableRouteOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcRouteTableRoute) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcRouteTableRouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v VpcRouteTableRoute) string { return v.Destination }).(pulumi.StringOutput)
}

func (o VpcRouteTableRouteOutput) Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v VpcRouteTableRoute) string { return v.Nexthop }).(pulumi.StringOutput)
}

func (o VpcRouteTableRouteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpcRouteTableRoute) string { return v.Type }).(pulumi.StringOutput)
}

type VpcRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (VpcRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcRouteTableRoute)(nil)).Elem()
}

func (o VpcRouteTableRouteArrayOutput) ToVpcRouteTableRouteArrayOutput() VpcRouteTableRouteArrayOutput {
	return o
}

func (o VpcRouteTableRouteArrayOutput) ToVpcRouteTableRouteArrayOutputWithContext(ctx context.Context) VpcRouteTableRouteArrayOutput {
	return o
}

func (o VpcRouteTableRouteArrayOutput) Index(i pulumi.IntInput) VpcRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcRouteTableRoute {
		return vs[0].([]VpcRouteTableRoute)[vs[1].(int)]
	}).(VpcRouteTableRouteOutput)
}

type VpcepServiceConnection struct {
	Description *string `pulumi:"description"`
	DomainId    *string `pulumi:"domainId"`
	EndpointId  *string `pulumi:"endpointId"`
	PacketId    *int    `pulumi:"packetId"`
	Status      *string `pulumi:"status"`
}

// VpcepServiceConnectionInput is an input type that accepts VpcepServiceConnectionArgs and VpcepServiceConnectionOutput values.
// You can construct a concrete instance of `VpcepServiceConnectionInput` via:
//
//	VpcepServiceConnectionArgs{...}
type VpcepServiceConnectionInput interface {
	pulumi.Input

	ToVpcepServiceConnectionOutput() VpcepServiceConnectionOutput
	ToVpcepServiceConnectionOutputWithContext(context.Context) VpcepServiceConnectionOutput
}

type VpcepServiceConnectionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	DomainId    pulumi.StringPtrInput `pulumi:"domainId"`
	EndpointId  pulumi.StringPtrInput `pulumi:"endpointId"`
	PacketId    pulumi.IntPtrInput    `pulumi:"packetId"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
}

func (VpcepServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcepServiceConnection)(nil)).Elem()
}

func (i VpcepServiceConnectionArgs) ToVpcepServiceConnectionOutput() VpcepServiceConnectionOutput {
	return i.ToVpcepServiceConnectionOutputWithContext(context.Background())
}

func (i VpcepServiceConnectionArgs) ToVpcepServiceConnectionOutputWithContext(ctx context.Context) VpcepServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcepServiceConnectionOutput)
}

// VpcepServiceConnectionArrayInput is an input type that accepts VpcepServiceConnectionArray and VpcepServiceConnectionArrayOutput values.
// You can construct a concrete instance of `VpcepServiceConnectionArrayInput` via:
//
//	VpcepServiceConnectionArray{ VpcepServiceConnectionArgs{...} }
type VpcepServiceConnectionArrayInput interface {
	pulumi.Input

	ToVpcepServiceConnectionArrayOutput() VpcepServiceConnectionArrayOutput
	ToVpcepServiceConnectionArrayOutputWithContext(context.Context) VpcepServiceConnectionArrayOutput
}

type VpcepServiceConnectionArray []VpcepServiceConnectionInput

func (VpcepServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcepServiceConnection)(nil)).Elem()
}

func (i VpcepServiceConnectionArray) ToVpcepServiceConnectionArrayOutput() VpcepServiceConnectionArrayOutput {
	return i.ToVpcepServiceConnectionArrayOutputWithContext(context.Background())
}

func (i VpcepServiceConnectionArray) ToVpcepServiceConnectionArrayOutputWithContext(ctx context.Context) VpcepServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcepServiceConnectionArrayOutput)
}

type VpcepServiceConnectionOutput struct{ *pulumi.OutputState }

func (VpcepServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcepServiceConnection)(nil)).Elem()
}

func (o VpcepServiceConnectionOutput) ToVpcepServiceConnectionOutput() VpcepServiceConnectionOutput {
	return o
}

func (o VpcepServiceConnectionOutput) ToVpcepServiceConnectionOutputWithContext(ctx context.Context) VpcepServiceConnectionOutput {
	return o
}

func (o VpcepServiceConnectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcepServiceConnection) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcepServiceConnectionOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcepServiceConnection) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

func (o VpcepServiceConnectionOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcepServiceConnection) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

func (o VpcepServiceConnectionOutput) PacketId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcepServiceConnection) *int { return v.PacketId }).(pulumi.IntPtrOutput)
}

func (o VpcepServiceConnectionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcepServiceConnection) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VpcepServiceConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpcepServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcepServiceConnection)(nil)).Elem()
}

func (o VpcepServiceConnectionArrayOutput) ToVpcepServiceConnectionArrayOutput() VpcepServiceConnectionArrayOutput {
	return o
}

func (o VpcepServiceConnectionArrayOutput) ToVpcepServiceConnectionArrayOutputWithContext(ctx context.Context) VpcepServiceConnectionArrayOutput {
	return o
}

func (o VpcepServiceConnectionArrayOutput) Index(i pulumi.IntInput) VpcepServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcepServiceConnection {
		return vs[0].([]VpcepServiceConnection)[vs[1].(int)]
	}).(VpcepServiceConnectionOutput)
}

type VpcepServicePortMapping struct {
	Protocol *string `pulumi:"protocol"`
	// schema: Required
	ServicePort *int `pulumi:"servicePort"`
	// schema: Required
	TerminalPort *int `pulumi:"terminalPort"`
}

// VpcepServicePortMappingInput is an input type that accepts VpcepServicePortMappingArgs and VpcepServicePortMappingOutput values.
// You can construct a concrete instance of `VpcepServicePortMappingInput` via:
//
//	VpcepServicePortMappingArgs{...}
type VpcepServicePortMappingInput interface {
	pulumi.Input

	ToVpcepServicePortMappingOutput() VpcepServicePortMappingOutput
	ToVpcepServicePortMappingOutputWithContext(context.Context) VpcepServicePortMappingOutput
}

type VpcepServicePortMappingArgs struct {
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// schema: Required
	ServicePort pulumi.IntPtrInput `pulumi:"servicePort"`
	// schema: Required
	TerminalPort pulumi.IntPtrInput `pulumi:"terminalPort"`
}

func (VpcepServicePortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcepServicePortMapping)(nil)).Elem()
}

func (i VpcepServicePortMappingArgs) ToVpcepServicePortMappingOutput() VpcepServicePortMappingOutput {
	return i.ToVpcepServicePortMappingOutputWithContext(context.Background())
}

func (i VpcepServicePortMappingArgs) ToVpcepServicePortMappingOutputWithContext(ctx context.Context) VpcepServicePortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcepServicePortMappingOutput)
}

// VpcepServicePortMappingArrayInput is an input type that accepts VpcepServicePortMappingArray and VpcepServicePortMappingArrayOutput values.
// You can construct a concrete instance of `VpcepServicePortMappingArrayInput` via:
//
//	VpcepServicePortMappingArray{ VpcepServicePortMappingArgs{...} }
type VpcepServicePortMappingArrayInput interface {
	pulumi.Input

	ToVpcepServicePortMappingArrayOutput() VpcepServicePortMappingArrayOutput
	ToVpcepServicePortMappingArrayOutputWithContext(context.Context) VpcepServicePortMappingArrayOutput
}

type VpcepServicePortMappingArray []VpcepServicePortMappingInput

func (VpcepServicePortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcepServicePortMapping)(nil)).Elem()
}

func (i VpcepServicePortMappingArray) ToVpcepServicePortMappingArrayOutput() VpcepServicePortMappingArrayOutput {
	return i.ToVpcepServicePortMappingArrayOutputWithContext(context.Background())
}

func (i VpcepServicePortMappingArray) ToVpcepServicePortMappingArrayOutputWithContext(ctx context.Context) VpcepServicePortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcepServicePortMappingArrayOutput)
}

type VpcepServicePortMappingOutput struct{ *pulumi.OutputState }

func (VpcepServicePortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcepServicePortMapping)(nil)).Elem()
}

func (o VpcepServicePortMappingOutput) ToVpcepServicePortMappingOutput() VpcepServicePortMappingOutput {
	return o
}

func (o VpcepServicePortMappingOutput) ToVpcepServicePortMappingOutputWithContext(ctx context.Context) VpcepServicePortMappingOutput {
	return o
}

func (o VpcepServicePortMappingOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcepServicePortMapping) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// schema: Required
func (o VpcepServicePortMappingOutput) ServicePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcepServicePortMapping) *int { return v.ServicePort }).(pulumi.IntPtrOutput)
}

// schema: Required
func (o VpcepServicePortMappingOutput) TerminalPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcepServicePortMapping) *int { return v.TerminalPort }).(pulumi.IntPtrOutput)
}

type VpcepServicePortMappingArrayOutput struct{ *pulumi.OutputState }

func (VpcepServicePortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcepServicePortMapping)(nil)).Elem()
}

func (o VpcepServicePortMappingArrayOutput) ToVpcepServicePortMappingArrayOutput() VpcepServicePortMappingArrayOutput {
	return o
}

func (o VpcepServicePortMappingArrayOutput) ToVpcepServicePortMappingArrayOutputWithContext(ctx context.Context) VpcepServicePortMappingArrayOutput {
	return o
}

func (o VpcepServicePortMappingArrayOutput) Index(i pulumi.IntInput) VpcepServicePortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcepServicePortMapping {
		return vs[0].([]VpcepServicePortMapping)[vs[1].(int)]
	}).(VpcepServicePortMappingOutput)
}

type VpnConnectionIkepolicy struct {
	// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
	AuthenticationAlgorithm *string `pulumi:"authenticationAlgorithm"`
	// The authentication method during IKE negotiation.
	AuthenticationMethod *string `pulumi:"authenticationMethod"`
	// Specifies the DH group used for key exchange in phase 1.
	DhGroup *string `pulumi:"dhGroup"`
	// Specifies the dead peer detection (DPD) object.
	Dpd *VpnConnectionIkepolicyDpd `pulumi:"dpd"`
	// The encryption algorithm, 3DES is less secure, please use them with caution.
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The IKE negotiation version.
	IkeVersion *string `pulumi:"ikeVersion"`
	// The life cycle of SA in seconds, when the life cycle expires, IKE SA will be automatically updated.
	LifetimeSeconds *int `pulumi:"lifetimeSeconds"`
	// The local ID.
	LocalId *string `pulumi:"localId"`
	// The local ID type.
	LocalIdType *string `pulumi:"localIdType"`
	// The peer ID.
	PeerId *string `pulumi:"peerId"`
	// The peer ID type.
	PeerIdType *string `pulumi:"peerIdType"`
	// The DH key group used by PFS.
	Pfs *string `pulumi:"pfs"`
	// The negotiation mode, only works when the ikeVersion is v1.
	Phase1NegotiationMode *string `pulumi:"phase1NegotiationMode"`
}

// VpnConnectionIkepolicyInput is an input type that accepts VpnConnectionIkepolicyArgs and VpnConnectionIkepolicyOutput values.
// You can construct a concrete instance of `VpnConnectionIkepolicyInput` via:
//
//	VpnConnectionIkepolicyArgs{...}
type VpnConnectionIkepolicyInput interface {
	pulumi.Input

	ToVpnConnectionIkepolicyOutput() VpnConnectionIkepolicyOutput
	ToVpnConnectionIkepolicyOutputWithContext(context.Context) VpnConnectionIkepolicyOutput
}

type VpnConnectionIkepolicyArgs struct {
	// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
	AuthenticationAlgorithm pulumi.StringPtrInput `pulumi:"authenticationAlgorithm"`
	// The authentication method during IKE negotiation.
	AuthenticationMethod pulumi.StringPtrInput `pulumi:"authenticationMethod"`
	// Specifies the DH group used for key exchange in phase 1.
	DhGroup pulumi.StringPtrInput `pulumi:"dhGroup"`
	// Specifies the dead peer detection (DPD) object.
	Dpd VpnConnectionIkepolicyDpdPtrInput `pulumi:"dpd"`
	// The encryption algorithm, 3DES is less secure, please use them with caution.
	EncryptionAlgorithm pulumi.StringPtrInput `pulumi:"encryptionAlgorithm"`
	// The IKE negotiation version.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The life cycle of SA in seconds, when the life cycle expires, IKE SA will be automatically updated.
	LifetimeSeconds pulumi.IntPtrInput `pulumi:"lifetimeSeconds"`
	// The local ID.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// The local ID type.
	LocalIdType pulumi.StringPtrInput `pulumi:"localIdType"`
	// The peer ID.
	PeerId pulumi.StringPtrInput `pulumi:"peerId"`
	// The peer ID type.
	PeerIdType pulumi.StringPtrInput `pulumi:"peerIdType"`
	// The DH key group used by PFS.
	Pfs pulumi.StringPtrInput `pulumi:"pfs"`
	// The negotiation mode, only works when the ikeVersion is v1.
	Phase1NegotiationMode pulumi.StringPtrInput `pulumi:"phase1NegotiationMode"`
}

func (VpnConnectionIkepolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIkepolicy)(nil)).Elem()
}

func (i VpnConnectionIkepolicyArgs) ToVpnConnectionIkepolicyOutput() VpnConnectionIkepolicyOutput {
	return i.ToVpnConnectionIkepolicyOutputWithContext(context.Background())
}

func (i VpnConnectionIkepolicyArgs) ToVpnConnectionIkepolicyOutputWithContext(ctx context.Context) VpnConnectionIkepolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkepolicyOutput)
}

func (i VpnConnectionIkepolicyArgs) ToVpnConnectionIkepolicyPtrOutput() VpnConnectionIkepolicyPtrOutput {
	return i.ToVpnConnectionIkepolicyPtrOutputWithContext(context.Background())
}

func (i VpnConnectionIkepolicyArgs) ToVpnConnectionIkepolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkepolicyOutput).ToVpnConnectionIkepolicyPtrOutputWithContext(ctx)
}

// VpnConnectionIkepolicyPtrInput is an input type that accepts VpnConnectionIkepolicyArgs, VpnConnectionIkepolicyPtr and VpnConnectionIkepolicyPtrOutput values.
// You can construct a concrete instance of `VpnConnectionIkepolicyPtrInput` via:
//
//	        VpnConnectionIkepolicyArgs{...}
//
//	or:
//
//	        nil
type VpnConnectionIkepolicyPtrInput interface {
	pulumi.Input

	ToVpnConnectionIkepolicyPtrOutput() VpnConnectionIkepolicyPtrOutput
	ToVpnConnectionIkepolicyPtrOutputWithContext(context.Context) VpnConnectionIkepolicyPtrOutput
}

type vpnConnectionIkepolicyPtrType VpnConnectionIkepolicyArgs

func VpnConnectionIkepolicyPtr(v *VpnConnectionIkepolicyArgs) VpnConnectionIkepolicyPtrInput {
	return (*vpnConnectionIkepolicyPtrType)(v)
}

func (*vpnConnectionIkepolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIkepolicy)(nil)).Elem()
}

func (i *vpnConnectionIkepolicyPtrType) ToVpnConnectionIkepolicyPtrOutput() VpnConnectionIkepolicyPtrOutput {
	return i.ToVpnConnectionIkepolicyPtrOutputWithContext(context.Background())
}

func (i *vpnConnectionIkepolicyPtrType) ToVpnConnectionIkepolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkepolicyPtrOutput)
}

type VpnConnectionIkepolicyOutput struct{ *pulumi.OutputState }

func (VpnConnectionIkepolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIkepolicy)(nil)).Elem()
}

func (o VpnConnectionIkepolicyOutput) ToVpnConnectionIkepolicyOutput() VpnConnectionIkepolicyOutput {
	return o
}

func (o VpnConnectionIkepolicyOutput) ToVpnConnectionIkepolicyOutputWithContext(ctx context.Context) VpnConnectionIkepolicyOutput {
	return o
}

func (o VpnConnectionIkepolicyOutput) ToVpnConnectionIkepolicyPtrOutput() VpnConnectionIkepolicyPtrOutput {
	return o.ToVpnConnectionIkepolicyPtrOutputWithContext(context.Background())
}

func (o VpnConnectionIkepolicyOutput) ToVpnConnectionIkepolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnConnectionIkepolicy) *VpnConnectionIkepolicy {
		return &v
	}).(VpnConnectionIkepolicyPtrOutput)
}

// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
func (o VpnConnectionIkepolicyOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The authentication method during IKE negotiation.
func (o VpnConnectionIkepolicyOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.AuthenticationMethod }).(pulumi.StringPtrOutput)
}

// Specifies the DH group used for key exchange in phase 1.
func (o VpnConnectionIkepolicyOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.DhGroup }).(pulumi.StringPtrOutput)
}

// Specifies the dead peer detection (DPD) object.
func (o VpnConnectionIkepolicyOutput) Dpd() VpnConnectionIkepolicyDpdPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *VpnConnectionIkepolicyDpd { return v.Dpd }).(VpnConnectionIkepolicyDpdPtrOutput)
}

// The encryption algorithm, 3DES is less secure, please use them with caution.
func (o VpnConnectionIkepolicyOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The IKE negotiation version.
func (o VpnConnectionIkepolicyOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The life cycle of SA in seconds, when the life cycle expires, IKE SA will be automatically updated.
func (o VpnConnectionIkepolicyOutput) LifetimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *int { return v.LifetimeSeconds }).(pulumi.IntPtrOutput)
}

// The local ID.
func (o VpnConnectionIkepolicyOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The local ID type.
func (o VpnConnectionIkepolicyOutput) LocalIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.LocalIdType }).(pulumi.StringPtrOutput)
}

// The peer ID.
func (o VpnConnectionIkepolicyOutput) PeerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.PeerId }).(pulumi.StringPtrOutput)
}

// The peer ID type.
func (o VpnConnectionIkepolicyOutput) PeerIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.PeerIdType }).(pulumi.StringPtrOutput)
}

// The DH key group used by PFS.
func (o VpnConnectionIkepolicyOutput) Pfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.Pfs }).(pulumi.StringPtrOutput)
}

// The negotiation mode, only works when the ikeVersion is v1.
func (o VpnConnectionIkepolicyOutput) Phase1NegotiationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicy) *string { return v.Phase1NegotiationMode }).(pulumi.StringPtrOutput)
}

type VpnConnectionIkepolicyPtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionIkepolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIkepolicy)(nil)).Elem()
}

func (o VpnConnectionIkepolicyPtrOutput) ToVpnConnectionIkepolicyPtrOutput() VpnConnectionIkepolicyPtrOutput {
	return o
}

func (o VpnConnectionIkepolicyPtrOutput) ToVpnConnectionIkepolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyPtrOutput {
	return o
}

func (o VpnConnectionIkepolicyPtrOutput) Elem() VpnConnectionIkepolicyOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) VpnConnectionIkepolicy {
		if v != nil {
			return *v
		}
		var ret VpnConnectionIkepolicy
		return ret
	}).(VpnConnectionIkepolicyOutput)
}

// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
func (o VpnConnectionIkepolicyPtrOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The authentication method during IKE negotiation.
func (o VpnConnectionIkepolicyPtrOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethod
	}).(pulumi.StringPtrOutput)
}

// Specifies the DH group used for key exchange in phase 1.
func (o VpnConnectionIkepolicyPtrOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.DhGroup
	}).(pulumi.StringPtrOutput)
}

// Specifies the dead peer detection (DPD) object.
func (o VpnConnectionIkepolicyPtrOutput) Dpd() VpnConnectionIkepolicyDpdPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *VpnConnectionIkepolicyDpd {
		if v == nil {
			return nil
		}
		return v.Dpd
	}).(VpnConnectionIkepolicyDpdPtrOutput)
}

// The encryption algorithm, 3DES is less secure, please use them with caution.
func (o VpnConnectionIkepolicyPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The IKE negotiation version.
func (o VpnConnectionIkepolicyPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// The life cycle of SA in seconds, when the life cycle expires, IKE SA will be automatically updated.
func (o VpnConnectionIkepolicyPtrOutput) LifetimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeSeconds
	}).(pulumi.IntPtrOutput)
}

// The local ID.
func (o VpnConnectionIkepolicyPtrOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.LocalId
	}).(pulumi.StringPtrOutput)
}

// The local ID type.
func (o VpnConnectionIkepolicyPtrOutput) LocalIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.LocalIdType
	}).(pulumi.StringPtrOutput)
}

// The peer ID.
func (o VpnConnectionIkepolicyPtrOutput) PeerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.PeerId
	}).(pulumi.StringPtrOutput)
}

// The peer ID type.
func (o VpnConnectionIkepolicyPtrOutput) PeerIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.PeerIdType
	}).(pulumi.StringPtrOutput)
}

// The DH key group used by PFS.
func (o VpnConnectionIkepolicyPtrOutput) Pfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.Pfs
	}).(pulumi.StringPtrOutput)
}

// The negotiation mode, only works when the ikeVersion is v1.
func (o VpnConnectionIkepolicyPtrOutput) Phase1NegotiationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicy) *string {
		if v == nil {
			return nil
		}
		return v.Phase1NegotiationMode
	}).(pulumi.StringPtrOutput)
}

type VpnConnectionIkepolicyDpd struct {
	// Specifies the DPD idle timeout period.
	Interval *int `pulumi:"interval"`
	// Specifies the format of DPD packets.
	Msg *string `pulumi:"msg"`
	// Specifies the interval for retransmitting DPD packets.
	Timeout *int `pulumi:"timeout"`
}

// VpnConnectionIkepolicyDpdInput is an input type that accepts VpnConnectionIkepolicyDpdArgs and VpnConnectionIkepolicyDpdOutput values.
// You can construct a concrete instance of `VpnConnectionIkepolicyDpdInput` via:
//
//	VpnConnectionIkepolicyDpdArgs{...}
type VpnConnectionIkepolicyDpdInput interface {
	pulumi.Input

	ToVpnConnectionIkepolicyDpdOutput() VpnConnectionIkepolicyDpdOutput
	ToVpnConnectionIkepolicyDpdOutputWithContext(context.Context) VpnConnectionIkepolicyDpdOutput
}

type VpnConnectionIkepolicyDpdArgs struct {
	// Specifies the DPD idle timeout period.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Specifies the format of DPD packets.
	Msg pulumi.StringPtrInput `pulumi:"msg"`
	// Specifies the interval for retransmitting DPD packets.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (VpnConnectionIkepolicyDpdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIkepolicyDpd)(nil)).Elem()
}

func (i VpnConnectionIkepolicyDpdArgs) ToVpnConnectionIkepolicyDpdOutput() VpnConnectionIkepolicyDpdOutput {
	return i.ToVpnConnectionIkepolicyDpdOutputWithContext(context.Background())
}

func (i VpnConnectionIkepolicyDpdArgs) ToVpnConnectionIkepolicyDpdOutputWithContext(ctx context.Context) VpnConnectionIkepolicyDpdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkepolicyDpdOutput)
}

func (i VpnConnectionIkepolicyDpdArgs) ToVpnConnectionIkepolicyDpdPtrOutput() VpnConnectionIkepolicyDpdPtrOutput {
	return i.ToVpnConnectionIkepolicyDpdPtrOutputWithContext(context.Background())
}

func (i VpnConnectionIkepolicyDpdArgs) ToVpnConnectionIkepolicyDpdPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyDpdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkepolicyDpdOutput).ToVpnConnectionIkepolicyDpdPtrOutputWithContext(ctx)
}

// VpnConnectionIkepolicyDpdPtrInput is an input type that accepts VpnConnectionIkepolicyDpdArgs, VpnConnectionIkepolicyDpdPtr and VpnConnectionIkepolicyDpdPtrOutput values.
// You can construct a concrete instance of `VpnConnectionIkepolicyDpdPtrInput` via:
//
//	        VpnConnectionIkepolicyDpdArgs{...}
//
//	or:
//
//	        nil
type VpnConnectionIkepolicyDpdPtrInput interface {
	pulumi.Input

	ToVpnConnectionIkepolicyDpdPtrOutput() VpnConnectionIkepolicyDpdPtrOutput
	ToVpnConnectionIkepolicyDpdPtrOutputWithContext(context.Context) VpnConnectionIkepolicyDpdPtrOutput
}

type vpnConnectionIkepolicyDpdPtrType VpnConnectionIkepolicyDpdArgs

func VpnConnectionIkepolicyDpdPtr(v *VpnConnectionIkepolicyDpdArgs) VpnConnectionIkepolicyDpdPtrInput {
	return (*vpnConnectionIkepolicyDpdPtrType)(v)
}

func (*vpnConnectionIkepolicyDpdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIkepolicyDpd)(nil)).Elem()
}

func (i *vpnConnectionIkepolicyDpdPtrType) ToVpnConnectionIkepolicyDpdPtrOutput() VpnConnectionIkepolicyDpdPtrOutput {
	return i.ToVpnConnectionIkepolicyDpdPtrOutputWithContext(context.Background())
}

func (i *vpnConnectionIkepolicyDpdPtrType) ToVpnConnectionIkepolicyDpdPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyDpdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkepolicyDpdPtrOutput)
}

type VpnConnectionIkepolicyDpdOutput struct{ *pulumi.OutputState }

func (VpnConnectionIkepolicyDpdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIkepolicyDpd)(nil)).Elem()
}

func (o VpnConnectionIkepolicyDpdOutput) ToVpnConnectionIkepolicyDpdOutput() VpnConnectionIkepolicyDpdOutput {
	return o
}

func (o VpnConnectionIkepolicyDpdOutput) ToVpnConnectionIkepolicyDpdOutputWithContext(ctx context.Context) VpnConnectionIkepolicyDpdOutput {
	return o
}

func (o VpnConnectionIkepolicyDpdOutput) ToVpnConnectionIkepolicyDpdPtrOutput() VpnConnectionIkepolicyDpdPtrOutput {
	return o.ToVpnConnectionIkepolicyDpdPtrOutputWithContext(context.Background())
}

func (o VpnConnectionIkepolicyDpdOutput) ToVpnConnectionIkepolicyDpdPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyDpdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnConnectionIkepolicyDpd) *VpnConnectionIkepolicyDpd {
		return &v
	}).(VpnConnectionIkepolicyDpdPtrOutput)
}

// Specifies the DPD idle timeout period.
func (o VpnConnectionIkepolicyDpdOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicyDpd) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Specifies the format of DPD packets.
func (o VpnConnectionIkepolicyDpdOutput) Msg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicyDpd) *string { return v.Msg }).(pulumi.StringPtrOutput)
}

// Specifies the interval for retransmitting DPD packets.
func (o VpnConnectionIkepolicyDpdOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkepolicyDpd) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type VpnConnectionIkepolicyDpdPtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionIkepolicyDpdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIkepolicyDpd)(nil)).Elem()
}

func (o VpnConnectionIkepolicyDpdPtrOutput) ToVpnConnectionIkepolicyDpdPtrOutput() VpnConnectionIkepolicyDpdPtrOutput {
	return o
}

func (o VpnConnectionIkepolicyDpdPtrOutput) ToVpnConnectionIkepolicyDpdPtrOutputWithContext(ctx context.Context) VpnConnectionIkepolicyDpdPtrOutput {
	return o
}

func (o VpnConnectionIkepolicyDpdPtrOutput) Elem() VpnConnectionIkepolicyDpdOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicyDpd) VpnConnectionIkepolicyDpd {
		if v != nil {
			return *v
		}
		var ret VpnConnectionIkepolicyDpd
		return ret
	}).(VpnConnectionIkepolicyDpdOutput)
}

// Specifies the DPD idle timeout period.
func (o VpnConnectionIkepolicyDpdPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicyDpd) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Specifies the format of DPD packets.
func (o VpnConnectionIkepolicyDpdPtrOutput) Msg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicyDpd) *string {
		if v == nil {
			return nil
		}
		return v.Msg
	}).(pulumi.StringPtrOutput)
}

// Specifies the interval for retransmitting DPD packets.
func (o VpnConnectionIkepolicyDpdPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIkepolicyDpd) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type VpnConnectionIpsecpolicy struct {
	// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
	AuthenticationAlgorithm *string `pulumi:"authenticationAlgorithm"`
	// The encapsulation mode, only **tunnel** supported for now.
	EncapsulationMode *string `pulumi:"encapsulationMode"`
	// The encryption algorithm, 3DES is less secure, please use them with caution.
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The lifecycle time of Ipsec tunnel in seconds.
	LifetimeSeconds *int `pulumi:"lifetimeSeconds"`
	// The DH key group used by PFS.
	Pfs *string `pulumi:"pfs"`
	// The transform protocol. Only **esp** supported for now.
	TransformProtocol *string `pulumi:"transformProtocol"`
}

// VpnConnectionIpsecpolicyInput is an input type that accepts VpnConnectionIpsecpolicyArgs and VpnConnectionIpsecpolicyOutput values.
// You can construct a concrete instance of `VpnConnectionIpsecpolicyInput` via:
//
//	VpnConnectionIpsecpolicyArgs{...}
type VpnConnectionIpsecpolicyInput interface {
	pulumi.Input

	ToVpnConnectionIpsecpolicyOutput() VpnConnectionIpsecpolicyOutput
	ToVpnConnectionIpsecpolicyOutputWithContext(context.Context) VpnConnectionIpsecpolicyOutput
}

type VpnConnectionIpsecpolicyArgs struct {
	// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
	AuthenticationAlgorithm pulumi.StringPtrInput `pulumi:"authenticationAlgorithm"`
	// The encapsulation mode, only **tunnel** supported for now.
	EncapsulationMode pulumi.StringPtrInput `pulumi:"encapsulationMode"`
	// The encryption algorithm, 3DES is less secure, please use them with caution.
	EncryptionAlgorithm pulumi.StringPtrInput `pulumi:"encryptionAlgorithm"`
	// The lifecycle time of Ipsec tunnel in seconds.
	LifetimeSeconds pulumi.IntPtrInput `pulumi:"lifetimeSeconds"`
	// The DH key group used by PFS.
	Pfs pulumi.StringPtrInput `pulumi:"pfs"`
	// The transform protocol. Only **esp** supported for now.
	TransformProtocol pulumi.StringPtrInput `pulumi:"transformProtocol"`
}

func (VpnConnectionIpsecpolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIpsecpolicy)(nil)).Elem()
}

func (i VpnConnectionIpsecpolicyArgs) ToVpnConnectionIpsecpolicyOutput() VpnConnectionIpsecpolicyOutput {
	return i.ToVpnConnectionIpsecpolicyOutputWithContext(context.Background())
}

func (i VpnConnectionIpsecpolicyArgs) ToVpnConnectionIpsecpolicyOutputWithContext(ctx context.Context) VpnConnectionIpsecpolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIpsecpolicyOutput)
}

func (i VpnConnectionIpsecpolicyArgs) ToVpnConnectionIpsecpolicyPtrOutput() VpnConnectionIpsecpolicyPtrOutput {
	return i.ToVpnConnectionIpsecpolicyPtrOutputWithContext(context.Background())
}

func (i VpnConnectionIpsecpolicyArgs) ToVpnConnectionIpsecpolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecpolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIpsecpolicyOutput).ToVpnConnectionIpsecpolicyPtrOutputWithContext(ctx)
}

// VpnConnectionIpsecpolicyPtrInput is an input type that accepts VpnConnectionIpsecpolicyArgs, VpnConnectionIpsecpolicyPtr and VpnConnectionIpsecpolicyPtrOutput values.
// You can construct a concrete instance of `VpnConnectionIpsecpolicyPtrInput` via:
//
//	        VpnConnectionIpsecpolicyArgs{...}
//
//	or:
//
//	        nil
type VpnConnectionIpsecpolicyPtrInput interface {
	pulumi.Input

	ToVpnConnectionIpsecpolicyPtrOutput() VpnConnectionIpsecpolicyPtrOutput
	ToVpnConnectionIpsecpolicyPtrOutputWithContext(context.Context) VpnConnectionIpsecpolicyPtrOutput
}

type vpnConnectionIpsecpolicyPtrType VpnConnectionIpsecpolicyArgs

func VpnConnectionIpsecpolicyPtr(v *VpnConnectionIpsecpolicyArgs) VpnConnectionIpsecpolicyPtrInput {
	return (*vpnConnectionIpsecpolicyPtrType)(v)
}

func (*vpnConnectionIpsecpolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIpsecpolicy)(nil)).Elem()
}

func (i *vpnConnectionIpsecpolicyPtrType) ToVpnConnectionIpsecpolicyPtrOutput() VpnConnectionIpsecpolicyPtrOutput {
	return i.ToVpnConnectionIpsecpolicyPtrOutputWithContext(context.Background())
}

func (i *vpnConnectionIpsecpolicyPtrType) ToVpnConnectionIpsecpolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecpolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIpsecpolicyPtrOutput)
}

type VpnConnectionIpsecpolicyOutput struct{ *pulumi.OutputState }

func (VpnConnectionIpsecpolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIpsecpolicy)(nil)).Elem()
}

func (o VpnConnectionIpsecpolicyOutput) ToVpnConnectionIpsecpolicyOutput() VpnConnectionIpsecpolicyOutput {
	return o
}

func (o VpnConnectionIpsecpolicyOutput) ToVpnConnectionIpsecpolicyOutputWithContext(ctx context.Context) VpnConnectionIpsecpolicyOutput {
	return o
}

func (o VpnConnectionIpsecpolicyOutput) ToVpnConnectionIpsecpolicyPtrOutput() VpnConnectionIpsecpolicyPtrOutput {
	return o.ToVpnConnectionIpsecpolicyPtrOutputWithContext(context.Background())
}

func (o VpnConnectionIpsecpolicyOutput) ToVpnConnectionIpsecpolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecpolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnConnectionIpsecpolicy) *VpnConnectionIpsecpolicy {
		return &v
	}).(VpnConnectionIpsecpolicyPtrOutput)
}

// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
func (o VpnConnectionIpsecpolicyOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecpolicy) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The encapsulation mode, only **tunnel** supported for now.
func (o VpnConnectionIpsecpolicyOutput) EncapsulationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecpolicy) *string { return v.EncapsulationMode }).(pulumi.StringPtrOutput)
}

// The encryption algorithm, 3DES is less secure, please use them with caution.
func (o VpnConnectionIpsecpolicyOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecpolicy) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The lifecycle time of Ipsec tunnel in seconds.
func (o VpnConnectionIpsecpolicyOutput) LifetimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecpolicy) *int { return v.LifetimeSeconds }).(pulumi.IntPtrOutput)
}

// The DH key group used by PFS.
func (o VpnConnectionIpsecpolicyOutput) Pfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecpolicy) *string { return v.Pfs }).(pulumi.StringPtrOutput)
}

// The transform protocol. Only **esp** supported for now.
func (o VpnConnectionIpsecpolicyOutput) TransformProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecpolicy) *string { return v.TransformProtocol }).(pulumi.StringPtrOutput)
}

type VpnConnectionIpsecpolicyPtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionIpsecpolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIpsecpolicy)(nil)).Elem()
}

func (o VpnConnectionIpsecpolicyPtrOutput) ToVpnConnectionIpsecpolicyPtrOutput() VpnConnectionIpsecpolicyPtrOutput {
	return o
}

func (o VpnConnectionIpsecpolicyPtrOutput) ToVpnConnectionIpsecpolicyPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecpolicyPtrOutput {
	return o
}

func (o VpnConnectionIpsecpolicyPtrOutput) Elem() VpnConnectionIpsecpolicyOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecpolicy) VpnConnectionIpsecpolicy {
		if v != nil {
			return *v
		}
		var ret VpnConnectionIpsecpolicy
		return ret
	}).(VpnConnectionIpsecpolicyOutput)
}

// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
func (o VpnConnectionIpsecpolicyPtrOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecpolicy) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The encapsulation mode, only **tunnel** supported for now.
func (o VpnConnectionIpsecpolicyPtrOutput) EncapsulationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecpolicy) *string {
		if v == nil {
			return nil
		}
		return v.EncapsulationMode
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm, 3DES is less secure, please use them with caution.
func (o VpnConnectionIpsecpolicyPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecpolicy) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The lifecycle time of Ipsec tunnel in seconds.
func (o VpnConnectionIpsecpolicyPtrOutput) LifetimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecpolicy) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeSeconds
	}).(pulumi.IntPtrOutput)
}

// The DH key group used by PFS.
func (o VpnConnectionIpsecpolicyPtrOutput) Pfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecpolicy) *string {
		if v == nil {
			return nil
		}
		return v.Pfs
	}).(pulumi.StringPtrOutput)
}

// The transform protocol. Only **esp** supported for now.
func (o VpnConnectionIpsecpolicyPtrOutput) TransformProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecpolicy) *string {
		if v == nil {
			return nil
		}
		return v.TransformProtocol
	}).(pulumi.StringPtrOutput)
}

type VpnConnectionPolicyRule struct {
	// The list of destination CIDRs.
	Destinations []string `pulumi:"destinations"`
	// The rule index.
	RuleIndex *int `pulumi:"ruleIndex"`
	// The source CIDR.
	Source *string `pulumi:"source"`
}

// VpnConnectionPolicyRuleInput is an input type that accepts VpnConnectionPolicyRuleArgs and VpnConnectionPolicyRuleOutput values.
// You can construct a concrete instance of `VpnConnectionPolicyRuleInput` via:
//
//	VpnConnectionPolicyRuleArgs{...}
type VpnConnectionPolicyRuleInput interface {
	pulumi.Input

	ToVpnConnectionPolicyRuleOutput() VpnConnectionPolicyRuleOutput
	ToVpnConnectionPolicyRuleOutputWithContext(context.Context) VpnConnectionPolicyRuleOutput
}

type VpnConnectionPolicyRuleArgs struct {
	// The list of destination CIDRs.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The rule index.
	RuleIndex pulumi.IntPtrInput `pulumi:"ruleIndex"`
	// The source CIDR.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (VpnConnectionPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionPolicyRule)(nil)).Elem()
}

func (i VpnConnectionPolicyRuleArgs) ToVpnConnectionPolicyRuleOutput() VpnConnectionPolicyRuleOutput {
	return i.ToVpnConnectionPolicyRuleOutputWithContext(context.Background())
}

func (i VpnConnectionPolicyRuleArgs) ToVpnConnectionPolicyRuleOutputWithContext(ctx context.Context) VpnConnectionPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPolicyRuleOutput)
}

// VpnConnectionPolicyRuleArrayInput is an input type that accepts VpnConnectionPolicyRuleArray and VpnConnectionPolicyRuleArrayOutput values.
// You can construct a concrete instance of `VpnConnectionPolicyRuleArrayInput` via:
//
//	VpnConnectionPolicyRuleArray{ VpnConnectionPolicyRuleArgs{...} }
type VpnConnectionPolicyRuleArrayInput interface {
	pulumi.Input

	ToVpnConnectionPolicyRuleArrayOutput() VpnConnectionPolicyRuleArrayOutput
	ToVpnConnectionPolicyRuleArrayOutputWithContext(context.Context) VpnConnectionPolicyRuleArrayOutput
}

type VpnConnectionPolicyRuleArray []VpnConnectionPolicyRuleInput

func (VpnConnectionPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionPolicyRule)(nil)).Elem()
}

func (i VpnConnectionPolicyRuleArray) ToVpnConnectionPolicyRuleArrayOutput() VpnConnectionPolicyRuleArrayOutput {
	return i.ToVpnConnectionPolicyRuleArrayOutputWithContext(context.Background())
}

func (i VpnConnectionPolicyRuleArray) ToVpnConnectionPolicyRuleArrayOutputWithContext(ctx context.Context) VpnConnectionPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPolicyRuleArrayOutput)
}

type VpnConnectionPolicyRuleOutput struct{ *pulumi.OutputState }

func (VpnConnectionPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionPolicyRule)(nil)).Elem()
}

func (o VpnConnectionPolicyRuleOutput) ToVpnConnectionPolicyRuleOutput() VpnConnectionPolicyRuleOutput {
	return o
}

func (o VpnConnectionPolicyRuleOutput) ToVpnConnectionPolicyRuleOutputWithContext(ctx context.Context) VpnConnectionPolicyRuleOutput {
	return o
}

// The list of destination CIDRs.
func (o VpnConnectionPolicyRuleOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnConnectionPolicyRule) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The rule index.
func (o VpnConnectionPolicyRuleOutput) RuleIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionPolicyRule) *int { return v.RuleIndex }).(pulumi.IntPtrOutput)
}

// The source CIDR.
func (o VpnConnectionPolicyRuleOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionPolicyRule) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type VpnConnectionPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionPolicyRule)(nil)).Elem()
}

func (o VpnConnectionPolicyRuleArrayOutput) ToVpnConnectionPolicyRuleArrayOutput() VpnConnectionPolicyRuleArrayOutput {
	return o
}

func (o VpnConnectionPolicyRuleArrayOutput) ToVpnConnectionPolicyRuleArrayOutputWithContext(ctx context.Context) VpnConnectionPolicyRuleArrayOutput {
	return o
}

func (o VpnConnectionPolicyRuleArrayOutput) Index(i pulumi.IntInput) VpnConnectionPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionPolicyRule {
		return vs[0].([]VpnConnectionPolicyRule)[vs[1].(int)]
	}).(VpnConnectionPolicyRuleOutput)
}

type VpnGatewayCertificate struct {
	CertificateChain             string  `pulumi:"certificateChain"`
	CertificateChainExpireTime   *string `pulumi:"certificateChainExpireTime"`
	CertificateChainSerialNumber *string `pulumi:"certificateChainSerialNumber"`
	CertificateChainSubject      *string `pulumi:"certificateChainSubject"`
	CertificateExpireTime        *string `pulumi:"certificateExpireTime"`
	CertificateId                *string `pulumi:"certificateId"`
	CertificateSerialNumber      *string `pulumi:"certificateSerialNumber"`
	CertificateSubject           *string `pulumi:"certificateSubject"`
	Content                      string  `pulumi:"content"`
	CreatedAt                    *string `pulumi:"createdAt"`
	EncCertificate               string  `pulumi:"encCertificate"`
	EncCertificateExpireTime     *string `pulumi:"encCertificateExpireTime"`
	EncCertificateSerialNumber   *string `pulumi:"encCertificateSerialNumber"`
	EncCertificateSubject        *string `pulumi:"encCertificateSubject"`
	EncPrivateKey                string  `pulumi:"encPrivateKey"`
	Issuer                       *string `pulumi:"issuer"`
	Name                         string  `pulumi:"name"`
	PrivateKey                   string  `pulumi:"privateKey"`
	SignatureAlgorithm           *string `pulumi:"signatureAlgorithm"`
	Status                       *string `pulumi:"status"`
	UpdatedAt                    *string `pulumi:"updatedAt"`
}

// VpnGatewayCertificateInput is an input type that accepts VpnGatewayCertificateArgs and VpnGatewayCertificateOutput values.
// You can construct a concrete instance of `VpnGatewayCertificateInput` via:
//
//	VpnGatewayCertificateArgs{...}
type VpnGatewayCertificateInput interface {
	pulumi.Input

	ToVpnGatewayCertificateOutput() VpnGatewayCertificateOutput
	ToVpnGatewayCertificateOutputWithContext(context.Context) VpnGatewayCertificateOutput
}

type VpnGatewayCertificateArgs struct {
	CertificateChain             pulumi.StringInput    `pulumi:"certificateChain"`
	CertificateChainExpireTime   pulumi.StringPtrInput `pulumi:"certificateChainExpireTime"`
	CertificateChainSerialNumber pulumi.StringPtrInput `pulumi:"certificateChainSerialNumber"`
	CertificateChainSubject      pulumi.StringPtrInput `pulumi:"certificateChainSubject"`
	CertificateExpireTime        pulumi.StringPtrInput `pulumi:"certificateExpireTime"`
	CertificateId                pulumi.StringPtrInput `pulumi:"certificateId"`
	CertificateSerialNumber      pulumi.StringPtrInput `pulumi:"certificateSerialNumber"`
	CertificateSubject           pulumi.StringPtrInput `pulumi:"certificateSubject"`
	Content                      pulumi.StringInput    `pulumi:"content"`
	CreatedAt                    pulumi.StringPtrInput `pulumi:"createdAt"`
	EncCertificate               pulumi.StringInput    `pulumi:"encCertificate"`
	EncCertificateExpireTime     pulumi.StringPtrInput `pulumi:"encCertificateExpireTime"`
	EncCertificateSerialNumber   pulumi.StringPtrInput `pulumi:"encCertificateSerialNumber"`
	EncCertificateSubject        pulumi.StringPtrInput `pulumi:"encCertificateSubject"`
	EncPrivateKey                pulumi.StringInput    `pulumi:"encPrivateKey"`
	Issuer                       pulumi.StringPtrInput `pulumi:"issuer"`
	Name                         pulumi.StringInput    `pulumi:"name"`
	PrivateKey                   pulumi.StringInput    `pulumi:"privateKey"`
	SignatureAlgorithm           pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	Status                       pulumi.StringPtrInput `pulumi:"status"`
	UpdatedAt                    pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (VpnGatewayCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayCertificate)(nil)).Elem()
}

func (i VpnGatewayCertificateArgs) ToVpnGatewayCertificateOutput() VpnGatewayCertificateOutput {
	return i.ToVpnGatewayCertificateOutputWithContext(context.Background())
}

func (i VpnGatewayCertificateArgs) ToVpnGatewayCertificateOutputWithContext(ctx context.Context) VpnGatewayCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayCertificateOutput)
}

func (i VpnGatewayCertificateArgs) ToVpnGatewayCertificatePtrOutput() VpnGatewayCertificatePtrOutput {
	return i.ToVpnGatewayCertificatePtrOutputWithContext(context.Background())
}

func (i VpnGatewayCertificateArgs) ToVpnGatewayCertificatePtrOutputWithContext(ctx context.Context) VpnGatewayCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayCertificateOutput).ToVpnGatewayCertificatePtrOutputWithContext(ctx)
}

// VpnGatewayCertificatePtrInput is an input type that accepts VpnGatewayCertificateArgs, VpnGatewayCertificatePtr and VpnGatewayCertificatePtrOutput values.
// You can construct a concrete instance of `VpnGatewayCertificatePtrInput` via:
//
//	        VpnGatewayCertificateArgs{...}
//
//	or:
//
//	        nil
type VpnGatewayCertificatePtrInput interface {
	pulumi.Input

	ToVpnGatewayCertificatePtrOutput() VpnGatewayCertificatePtrOutput
	ToVpnGatewayCertificatePtrOutputWithContext(context.Context) VpnGatewayCertificatePtrOutput
}

type vpnGatewayCertificatePtrType VpnGatewayCertificateArgs

func VpnGatewayCertificatePtr(v *VpnGatewayCertificateArgs) VpnGatewayCertificatePtrInput {
	return (*vpnGatewayCertificatePtrType)(v)
}

func (*vpnGatewayCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayCertificate)(nil)).Elem()
}

func (i *vpnGatewayCertificatePtrType) ToVpnGatewayCertificatePtrOutput() VpnGatewayCertificatePtrOutput {
	return i.ToVpnGatewayCertificatePtrOutputWithContext(context.Background())
}

func (i *vpnGatewayCertificatePtrType) ToVpnGatewayCertificatePtrOutputWithContext(ctx context.Context) VpnGatewayCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayCertificatePtrOutput)
}

type VpnGatewayCertificateOutput struct{ *pulumi.OutputState }

func (VpnGatewayCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayCertificate)(nil)).Elem()
}

func (o VpnGatewayCertificateOutput) ToVpnGatewayCertificateOutput() VpnGatewayCertificateOutput {
	return o
}

func (o VpnGatewayCertificateOutput) ToVpnGatewayCertificateOutputWithContext(ctx context.Context) VpnGatewayCertificateOutput {
	return o
}

func (o VpnGatewayCertificateOutput) ToVpnGatewayCertificatePtrOutput() VpnGatewayCertificatePtrOutput {
	return o.ToVpnGatewayCertificatePtrOutputWithContext(context.Background())
}

func (o VpnGatewayCertificateOutput) ToVpnGatewayCertificatePtrOutputWithContext(ctx context.Context) VpnGatewayCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayCertificate) *VpnGatewayCertificate {
		return &v
	}).(VpnGatewayCertificatePtrOutput)
}

func (o VpnGatewayCertificateOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) string { return v.CertificateChain }).(pulumi.StringOutput)
}

func (o VpnGatewayCertificateOutput) CertificateChainExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CertificateChainExpireTime }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) CertificateChainSerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CertificateChainSerialNumber }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) CertificateChainSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CertificateChainSubject }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) CertificateExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CertificateExpireTime }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) CertificateSerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CertificateSerialNumber }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) CertificateSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CertificateSubject }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) string { return v.Content }).(pulumi.StringOutput)
}

func (o VpnGatewayCertificateOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) EncCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) string { return v.EncCertificate }).(pulumi.StringOutput)
}

func (o VpnGatewayCertificateOutput) EncCertificateExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.EncCertificateExpireTime }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) EncCertificateSerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.EncCertificateSerialNumber }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) EncCertificateSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.EncCertificateSubject }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) EncPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) string { return v.EncPrivateKey }).(pulumi.StringOutput)
}

func (o VpnGatewayCertificateOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) string { return v.Name }).(pulumi.StringOutput)
}

func (o VpnGatewayCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o VpnGatewayCertificateOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificateOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayCertificate) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type VpnGatewayCertificatePtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayCertificate)(nil)).Elem()
}

func (o VpnGatewayCertificatePtrOutput) ToVpnGatewayCertificatePtrOutput() VpnGatewayCertificatePtrOutput {
	return o
}

func (o VpnGatewayCertificatePtrOutput) ToVpnGatewayCertificatePtrOutputWithContext(ctx context.Context) VpnGatewayCertificatePtrOutput {
	return o
}

func (o VpnGatewayCertificatePtrOutput) Elem() VpnGatewayCertificateOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) VpnGatewayCertificate {
		if v != nil {
			return *v
		}
		var ret VpnGatewayCertificate
		return ret
	}).(VpnGatewayCertificateOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateChainExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateChainExpireTime
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateChainSerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateChainSerialNumber
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateChainSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateChainSubject
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateExpireTime
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateId
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateSerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateSerialNumber
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CertificateSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateSubject
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) EncCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.EncCertificate
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) EncCertificateExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.EncCertificateExpireTime
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) EncCertificateSerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.EncCertificateSerialNumber
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) EncCertificateSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.EncCertificateSubject
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) EncPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.EncPrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o VpnGatewayCertificatePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayCertificate) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type VpnGatewayEip1 struct {
	// The bandwidth ID.
	BandwidthId *string `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName *string `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize *int `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode *string `pulumi:"chargeMode"`
	// The public IP ID.
	Id *string `pulumi:"id"`
	// The public IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion *int `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type *string `pulumi:"type"`
}

// VpnGatewayEip1Input is an input type that accepts VpnGatewayEip1Args and VpnGatewayEip1Output values.
// You can construct a concrete instance of `VpnGatewayEip1Input` via:
//
//	VpnGatewayEip1Args{...}
type VpnGatewayEip1Input interface {
	pulumi.Input

	ToVpnGatewayEip1Output() VpnGatewayEip1Output
	ToVpnGatewayEip1OutputWithContext(context.Context) VpnGatewayEip1Output
}

type VpnGatewayEip1Args struct {
	// The bandwidth ID.
	BandwidthId pulumi.StringPtrInput `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName pulumi.StringPtrInput `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize pulumi.IntPtrInput `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode pulumi.StringPtrInput `pulumi:"chargeMode"`
	// The public IP ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The public IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion pulumi.IntPtrInput `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpnGatewayEip1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayEip1)(nil)).Elem()
}

func (i VpnGatewayEip1Args) ToVpnGatewayEip1Output() VpnGatewayEip1Output {
	return i.ToVpnGatewayEip1OutputWithContext(context.Background())
}

func (i VpnGatewayEip1Args) ToVpnGatewayEip1OutputWithContext(ctx context.Context) VpnGatewayEip1Output {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayEip1Output)
}

func (i VpnGatewayEip1Args) ToVpnGatewayEip1PtrOutput() VpnGatewayEip1PtrOutput {
	return i.ToVpnGatewayEip1PtrOutputWithContext(context.Background())
}

func (i VpnGatewayEip1Args) ToVpnGatewayEip1PtrOutputWithContext(ctx context.Context) VpnGatewayEip1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayEip1Output).ToVpnGatewayEip1PtrOutputWithContext(ctx)
}

// VpnGatewayEip1PtrInput is an input type that accepts VpnGatewayEip1Args, VpnGatewayEip1Ptr and VpnGatewayEip1PtrOutput values.
// You can construct a concrete instance of `VpnGatewayEip1PtrInput` via:
//
//	        VpnGatewayEip1Args{...}
//
//	or:
//
//	        nil
type VpnGatewayEip1PtrInput interface {
	pulumi.Input

	ToVpnGatewayEip1PtrOutput() VpnGatewayEip1PtrOutput
	ToVpnGatewayEip1PtrOutputWithContext(context.Context) VpnGatewayEip1PtrOutput
}

type vpnGatewayEip1PtrType VpnGatewayEip1Args

func VpnGatewayEip1Ptr(v *VpnGatewayEip1Args) VpnGatewayEip1PtrInput {
	return (*vpnGatewayEip1PtrType)(v)
}

func (*vpnGatewayEip1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayEip1)(nil)).Elem()
}

func (i *vpnGatewayEip1PtrType) ToVpnGatewayEip1PtrOutput() VpnGatewayEip1PtrOutput {
	return i.ToVpnGatewayEip1PtrOutputWithContext(context.Background())
}

func (i *vpnGatewayEip1PtrType) ToVpnGatewayEip1PtrOutputWithContext(ctx context.Context) VpnGatewayEip1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayEip1PtrOutput)
}

type VpnGatewayEip1Output struct{ *pulumi.OutputState }

func (VpnGatewayEip1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayEip1)(nil)).Elem()
}

func (o VpnGatewayEip1Output) ToVpnGatewayEip1Output() VpnGatewayEip1Output {
	return o
}

func (o VpnGatewayEip1Output) ToVpnGatewayEip1OutputWithContext(ctx context.Context) VpnGatewayEip1Output {
	return o
}

func (o VpnGatewayEip1Output) ToVpnGatewayEip1PtrOutput() VpnGatewayEip1PtrOutput {
	return o.ToVpnGatewayEip1PtrOutputWithContext(context.Background())
}

func (o VpnGatewayEip1Output) ToVpnGatewayEip1PtrOutputWithContext(ctx context.Context) VpnGatewayEip1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayEip1) *VpnGatewayEip1 {
		return &v
	}).(VpnGatewayEip1PtrOutput)
}

// The bandwidth ID.
func (o VpnGatewayEip1Output) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *string { return v.BandwidthId }).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewayEip1Output) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *string { return v.BandwidthName }).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewayEip1Output) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *int { return v.BandwidthSize }).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewayEip1Output) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *string { return v.ChargeMode }).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewayEip1Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewayEip1Output) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewayEip1Output) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *int { return v.IpVersion }).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewayEip1Output) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip1) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpnGatewayEip1PtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayEip1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayEip1)(nil)).Elem()
}

func (o VpnGatewayEip1PtrOutput) ToVpnGatewayEip1PtrOutput() VpnGatewayEip1PtrOutput {
	return o
}

func (o VpnGatewayEip1PtrOutput) ToVpnGatewayEip1PtrOutputWithContext(ctx context.Context) VpnGatewayEip1PtrOutput {
	return o
}

func (o VpnGatewayEip1PtrOutput) Elem() VpnGatewayEip1Output {
	return o.ApplyT(func(v *VpnGatewayEip1) VpnGatewayEip1 {
		if v != nil {
			return *v
		}
		var ret VpnGatewayEip1
		return ret
	}).(VpnGatewayEip1Output)
}

// The bandwidth ID.
func (o VpnGatewayEip1PtrOutput) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthId
	}).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewayEip1PtrOutput) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthName
	}).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewayEip1PtrOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthSize
	}).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewayEip1PtrOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *string {
		if v == nil {
			return nil
		}
		return v.ChargeMode
	}).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewayEip1PtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewayEip1PtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewayEip1PtrOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *int {
		if v == nil {
			return nil
		}
		return v.IpVersion
	}).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewayEip1PtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip1) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type VpnGatewayEip2 struct {
	// The bandwidth ID.
	BandwidthId *string `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName *string `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize *int `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode *string `pulumi:"chargeMode"`
	// The public IP ID.
	Id *string `pulumi:"id"`
	// The public IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion *int `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type *string `pulumi:"type"`
}

// VpnGatewayEip2Input is an input type that accepts VpnGatewayEip2Args and VpnGatewayEip2Output values.
// You can construct a concrete instance of `VpnGatewayEip2Input` via:
//
//	VpnGatewayEip2Args{...}
type VpnGatewayEip2Input interface {
	pulumi.Input

	ToVpnGatewayEip2Output() VpnGatewayEip2Output
	ToVpnGatewayEip2OutputWithContext(context.Context) VpnGatewayEip2Output
}

type VpnGatewayEip2Args struct {
	// The bandwidth ID.
	BandwidthId pulumi.StringPtrInput `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName pulumi.StringPtrInput `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize pulumi.IntPtrInput `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode pulumi.StringPtrInput `pulumi:"chargeMode"`
	// The public IP ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The public IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion pulumi.IntPtrInput `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpnGatewayEip2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayEip2)(nil)).Elem()
}

func (i VpnGatewayEip2Args) ToVpnGatewayEip2Output() VpnGatewayEip2Output {
	return i.ToVpnGatewayEip2OutputWithContext(context.Background())
}

func (i VpnGatewayEip2Args) ToVpnGatewayEip2OutputWithContext(ctx context.Context) VpnGatewayEip2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayEip2Output)
}

func (i VpnGatewayEip2Args) ToVpnGatewayEip2PtrOutput() VpnGatewayEip2PtrOutput {
	return i.ToVpnGatewayEip2PtrOutputWithContext(context.Background())
}

func (i VpnGatewayEip2Args) ToVpnGatewayEip2PtrOutputWithContext(ctx context.Context) VpnGatewayEip2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayEip2Output).ToVpnGatewayEip2PtrOutputWithContext(ctx)
}

// VpnGatewayEip2PtrInput is an input type that accepts VpnGatewayEip2Args, VpnGatewayEip2Ptr and VpnGatewayEip2PtrOutput values.
// You can construct a concrete instance of `VpnGatewayEip2PtrInput` via:
//
//	        VpnGatewayEip2Args{...}
//
//	or:
//
//	        nil
type VpnGatewayEip2PtrInput interface {
	pulumi.Input

	ToVpnGatewayEip2PtrOutput() VpnGatewayEip2PtrOutput
	ToVpnGatewayEip2PtrOutputWithContext(context.Context) VpnGatewayEip2PtrOutput
}

type vpnGatewayEip2PtrType VpnGatewayEip2Args

func VpnGatewayEip2Ptr(v *VpnGatewayEip2Args) VpnGatewayEip2PtrInput {
	return (*vpnGatewayEip2PtrType)(v)
}

func (*vpnGatewayEip2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayEip2)(nil)).Elem()
}

func (i *vpnGatewayEip2PtrType) ToVpnGatewayEip2PtrOutput() VpnGatewayEip2PtrOutput {
	return i.ToVpnGatewayEip2PtrOutputWithContext(context.Background())
}

func (i *vpnGatewayEip2PtrType) ToVpnGatewayEip2PtrOutputWithContext(ctx context.Context) VpnGatewayEip2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayEip2PtrOutput)
}

type VpnGatewayEip2Output struct{ *pulumi.OutputState }

func (VpnGatewayEip2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayEip2)(nil)).Elem()
}

func (o VpnGatewayEip2Output) ToVpnGatewayEip2Output() VpnGatewayEip2Output {
	return o
}

func (o VpnGatewayEip2Output) ToVpnGatewayEip2OutputWithContext(ctx context.Context) VpnGatewayEip2Output {
	return o
}

func (o VpnGatewayEip2Output) ToVpnGatewayEip2PtrOutput() VpnGatewayEip2PtrOutput {
	return o.ToVpnGatewayEip2PtrOutputWithContext(context.Background())
}

func (o VpnGatewayEip2Output) ToVpnGatewayEip2PtrOutputWithContext(ctx context.Context) VpnGatewayEip2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayEip2) *VpnGatewayEip2 {
		return &v
	}).(VpnGatewayEip2PtrOutput)
}

// The bandwidth ID.
func (o VpnGatewayEip2Output) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *string { return v.BandwidthId }).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewayEip2Output) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *string { return v.BandwidthName }).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewayEip2Output) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *int { return v.BandwidthSize }).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewayEip2Output) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *string { return v.ChargeMode }).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewayEip2Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewayEip2Output) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewayEip2Output) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *int { return v.IpVersion }).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewayEip2Output) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayEip2) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpnGatewayEip2PtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayEip2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayEip2)(nil)).Elem()
}

func (o VpnGatewayEip2PtrOutput) ToVpnGatewayEip2PtrOutput() VpnGatewayEip2PtrOutput {
	return o
}

func (o VpnGatewayEip2PtrOutput) ToVpnGatewayEip2PtrOutputWithContext(ctx context.Context) VpnGatewayEip2PtrOutput {
	return o
}

func (o VpnGatewayEip2PtrOutput) Elem() VpnGatewayEip2Output {
	return o.ApplyT(func(v *VpnGatewayEip2) VpnGatewayEip2 {
		if v != nil {
			return *v
		}
		var ret VpnGatewayEip2
		return ret
	}).(VpnGatewayEip2Output)
}

// The bandwidth ID.
func (o VpnGatewayEip2PtrOutput) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthId
	}).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewayEip2PtrOutput) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthName
	}).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewayEip2PtrOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthSize
	}).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewayEip2PtrOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *string {
		if v == nil {
			return nil
		}
		return v.ChargeMode
	}).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewayEip2PtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewayEip2PtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewayEip2PtrOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *int {
		if v == nil {
			return nil
		}
		return v.IpVersion
	}).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewayEip2PtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayEip2) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type VpnGatewayMasterEip struct {
	// The bandwidth ID.
	BandwidthId *string `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName *string `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize *int `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode *string `pulumi:"chargeMode"`
	// The public IP ID.
	Id *string `pulumi:"id"`
	// The public IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion *int `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type *string `pulumi:"type"`
}

// VpnGatewayMasterEipInput is an input type that accepts VpnGatewayMasterEipArgs and VpnGatewayMasterEipOutput values.
// You can construct a concrete instance of `VpnGatewayMasterEipInput` via:
//
//	VpnGatewayMasterEipArgs{...}
type VpnGatewayMasterEipInput interface {
	pulumi.Input

	ToVpnGatewayMasterEipOutput() VpnGatewayMasterEipOutput
	ToVpnGatewayMasterEipOutputWithContext(context.Context) VpnGatewayMasterEipOutput
}

type VpnGatewayMasterEipArgs struct {
	// The bandwidth ID.
	BandwidthId pulumi.StringPtrInput `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName pulumi.StringPtrInput `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize pulumi.IntPtrInput `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode pulumi.StringPtrInput `pulumi:"chargeMode"`
	// The public IP ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The public IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion pulumi.IntPtrInput `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpnGatewayMasterEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayMasterEip)(nil)).Elem()
}

func (i VpnGatewayMasterEipArgs) ToVpnGatewayMasterEipOutput() VpnGatewayMasterEipOutput {
	return i.ToVpnGatewayMasterEipOutputWithContext(context.Background())
}

func (i VpnGatewayMasterEipArgs) ToVpnGatewayMasterEipOutputWithContext(ctx context.Context) VpnGatewayMasterEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayMasterEipOutput)
}

func (i VpnGatewayMasterEipArgs) ToVpnGatewayMasterEipPtrOutput() VpnGatewayMasterEipPtrOutput {
	return i.ToVpnGatewayMasterEipPtrOutputWithContext(context.Background())
}

func (i VpnGatewayMasterEipArgs) ToVpnGatewayMasterEipPtrOutputWithContext(ctx context.Context) VpnGatewayMasterEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayMasterEipOutput).ToVpnGatewayMasterEipPtrOutputWithContext(ctx)
}

// VpnGatewayMasterEipPtrInput is an input type that accepts VpnGatewayMasterEipArgs, VpnGatewayMasterEipPtr and VpnGatewayMasterEipPtrOutput values.
// You can construct a concrete instance of `VpnGatewayMasterEipPtrInput` via:
//
//	        VpnGatewayMasterEipArgs{...}
//
//	or:
//
//	        nil
type VpnGatewayMasterEipPtrInput interface {
	pulumi.Input

	ToVpnGatewayMasterEipPtrOutput() VpnGatewayMasterEipPtrOutput
	ToVpnGatewayMasterEipPtrOutputWithContext(context.Context) VpnGatewayMasterEipPtrOutput
}

type vpnGatewayMasterEipPtrType VpnGatewayMasterEipArgs

func VpnGatewayMasterEipPtr(v *VpnGatewayMasterEipArgs) VpnGatewayMasterEipPtrInput {
	return (*vpnGatewayMasterEipPtrType)(v)
}

func (*vpnGatewayMasterEipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayMasterEip)(nil)).Elem()
}

func (i *vpnGatewayMasterEipPtrType) ToVpnGatewayMasterEipPtrOutput() VpnGatewayMasterEipPtrOutput {
	return i.ToVpnGatewayMasterEipPtrOutputWithContext(context.Background())
}

func (i *vpnGatewayMasterEipPtrType) ToVpnGatewayMasterEipPtrOutputWithContext(ctx context.Context) VpnGatewayMasterEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayMasterEipPtrOutput)
}

type VpnGatewayMasterEipOutput struct{ *pulumi.OutputState }

func (VpnGatewayMasterEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayMasterEip)(nil)).Elem()
}

func (o VpnGatewayMasterEipOutput) ToVpnGatewayMasterEipOutput() VpnGatewayMasterEipOutput {
	return o
}

func (o VpnGatewayMasterEipOutput) ToVpnGatewayMasterEipOutputWithContext(ctx context.Context) VpnGatewayMasterEipOutput {
	return o
}

func (o VpnGatewayMasterEipOutput) ToVpnGatewayMasterEipPtrOutput() VpnGatewayMasterEipPtrOutput {
	return o.ToVpnGatewayMasterEipPtrOutputWithContext(context.Background())
}

func (o VpnGatewayMasterEipOutput) ToVpnGatewayMasterEipPtrOutputWithContext(ctx context.Context) VpnGatewayMasterEipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayMasterEip) *VpnGatewayMasterEip {
		return &v
	}).(VpnGatewayMasterEipPtrOutput)
}

// The bandwidth ID.
func (o VpnGatewayMasterEipOutput) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *string { return v.BandwidthId }).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewayMasterEipOutput) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *string { return v.BandwidthName }).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewayMasterEipOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *int { return v.BandwidthSize }).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewayMasterEipOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *string { return v.ChargeMode }).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewayMasterEipOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewayMasterEipOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewayMasterEipOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *int { return v.IpVersion }).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewayMasterEipOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayMasterEip) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpnGatewayMasterEipPtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayMasterEipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayMasterEip)(nil)).Elem()
}

func (o VpnGatewayMasterEipPtrOutput) ToVpnGatewayMasterEipPtrOutput() VpnGatewayMasterEipPtrOutput {
	return o
}

func (o VpnGatewayMasterEipPtrOutput) ToVpnGatewayMasterEipPtrOutputWithContext(ctx context.Context) VpnGatewayMasterEipPtrOutput {
	return o
}

func (o VpnGatewayMasterEipPtrOutput) Elem() VpnGatewayMasterEipOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) VpnGatewayMasterEip {
		if v != nil {
			return *v
		}
		var ret VpnGatewayMasterEip
		return ret
	}).(VpnGatewayMasterEipOutput)
}

// The bandwidth ID.
func (o VpnGatewayMasterEipPtrOutput) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthId
	}).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewayMasterEipPtrOutput) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthName
	}).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewayMasterEipPtrOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthSize
	}).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewayMasterEipPtrOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *string {
		if v == nil {
			return nil
		}
		return v.ChargeMode
	}).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewayMasterEipPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewayMasterEipPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewayMasterEipPtrOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *int {
		if v == nil {
			return nil
		}
		return v.IpVersion
	}).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewayMasterEipPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayMasterEip) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type VpnGatewaySlaveEip struct {
	// The bandwidth ID.
	BandwidthId *string `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName *string `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize *int `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode *string `pulumi:"chargeMode"`
	// The public IP ID.
	Id *string `pulumi:"id"`
	// The public IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion *int `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type *string `pulumi:"type"`
}

// VpnGatewaySlaveEipInput is an input type that accepts VpnGatewaySlaveEipArgs and VpnGatewaySlaveEipOutput values.
// You can construct a concrete instance of `VpnGatewaySlaveEipInput` via:
//
//	VpnGatewaySlaveEipArgs{...}
type VpnGatewaySlaveEipInput interface {
	pulumi.Input

	ToVpnGatewaySlaveEipOutput() VpnGatewaySlaveEipOutput
	ToVpnGatewaySlaveEipOutputWithContext(context.Context) VpnGatewaySlaveEipOutput
}

type VpnGatewaySlaveEipArgs struct {
	// The bandwidth ID.
	BandwidthId pulumi.StringPtrInput `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName pulumi.StringPtrInput `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
	BandwidthSize pulumi.IntPtrInput `pulumi:"bandwidthSize"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode pulumi.StringPtrInput `pulumi:"chargeMode"`
	// The public IP ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The public IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion pulumi.IntPtrInput `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpnGatewaySlaveEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewaySlaveEip)(nil)).Elem()
}

func (i VpnGatewaySlaveEipArgs) ToVpnGatewaySlaveEipOutput() VpnGatewaySlaveEipOutput {
	return i.ToVpnGatewaySlaveEipOutputWithContext(context.Background())
}

func (i VpnGatewaySlaveEipArgs) ToVpnGatewaySlaveEipOutputWithContext(ctx context.Context) VpnGatewaySlaveEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewaySlaveEipOutput)
}

func (i VpnGatewaySlaveEipArgs) ToVpnGatewaySlaveEipPtrOutput() VpnGatewaySlaveEipPtrOutput {
	return i.ToVpnGatewaySlaveEipPtrOutputWithContext(context.Background())
}

func (i VpnGatewaySlaveEipArgs) ToVpnGatewaySlaveEipPtrOutputWithContext(ctx context.Context) VpnGatewaySlaveEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewaySlaveEipOutput).ToVpnGatewaySlaveEipPtrOutputWithContext(ctx)
}

// VpnGatewaySlaveEipPtrInput is an input type that accepts VpnGatewaySlaveEipArgs, VpnGatewaySlaveEipPtr and VpnGatewaySlaveEipPtrOutput values.
// You can construct a concrete instance of `VpnGatewaySlaveEipPtrInput` via:
//
//	        VpnGatewaySlaveEipArgs{...}
//
//	or:
//
//	        nil
type VpnGatewaySlaveEipPtrInput interface {
	pulumi.Input

	ToVpnGatewaySlaveEipPtrOutput() VpnGatewaySlaveEipPtrOutput
	ToVpnGatewaySlaveEipPtrOutputWithContext(context.Context) VpnGatewaySlaveEipPtrOutput
}

type vpnGatewaySlaveEipPtrType VpnGatewaySlaveEipArgs

func VpnGatewaySlaveEipPtr(v *VpnGatewaySlaveEipArgs) VpnGatewaySlaveEipPtrInput {
	return (*vpnGatewaySlaveEipPtrType)(v)
}

func (*vpnGatewaySlaveEipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewaySlaveEip)(nil)).Elem()
}

func (i *vpnGatewaySlaveEipPtrType) ToVpnGatewaySlaveEipPtrOutput() VpnGatewaySlaveEipPtrOutput {
	return i.ToVpnGatewaySlaveEipPtrOutputWithContext(context.Background())
}

func (i *vpnGatewaySlaveEipPtrType) ToVpnGatewaySlaveEipPtrOutputWithContext(ctx context.Context) VpnGatewaySlaveEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewaySlaveEipPtrOutput)
}

type VpnGatewaySlaveEipOutput struct{ *pulumi.OutputState }

func (VpnGatewaySlaveEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewaySlaveEip)(nil)).Elem()
}

func (o VpnGatewaySlaveEipOutput) ToVpnGatewaySlaveEipOutput() VpnGatewaySlaveEipOutput {
	return o
}

func (o VpnGatewaySlaveEipOutput) ToVpnGatewaySlaveEipOutputWithContext(ctx context.Context) VpnGatewaySlaveEipOutput {
	return o
}

func (o VpnGatewaySlaveEipOutput) ToVpnGatewaySlaveEipPtrOutput() VpnGatewaySlaveEipPtrOutput {
	return o.ToVpnGatewaySlaveEipPtrOutputWithContext(context.Background())
}

func (o VpnGatewaySlaveEipOutput) ToVpnGatewaySlaveEipPtrOutputWithContext(ctx context.Context) VpnGatewaySlaveEipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewaySlaveEip) *VpnGatewaySlaveEip {
		return &v
	}).(VpnGatewaySlaveEipPtrOutput)
}

// The bandwidth ID.
func (o VpnGatewaySlaveEipOutput) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *string { return v.BandwidthId }).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewaySlaveEipOutput) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *string { return v.BandwidthName }).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewaySlaveEipOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *int { return v.BandwidthSize }).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewaySlaveEipOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *string { return v.ChargeMode }).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewaySlaveEipOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewaySlaveEipOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewaySlaveEipOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *int { return v.IpVersion }).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewaySlaveEipOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewaySlaveEip) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpnGatewaySlaveEipPtrOutput struct{ *pulumi.OutputState }

func (VpnGatewaySlaveEipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewaySlaveEip)(nil)).Elem()
}

func (o VpnGatewaySlaveEipPtrOutput) ToVpnGatewaySlaveEipPtrOutput() VpnGatewaySlaveEipPtrOutput {
	return o
}

func (o VpnGatewaySlaveEipPtrOutput) ToVpnGatewaySlaveEipPtrOutputWithContext(ctx context.Context) VpnGatewaySlaveEipPtrOutput {
	return o
}

func (o VpnGatewaySlaveEipPtrOutput) Elem() VpnGatewaySlaveEipOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) VpnGatewaySlaveEip {
		if v != nil {
			return *v
		}
		var ret VpnGatewaySlaveEip
		return ret
	}).(VpnGatewaySlaveEipOutput)
}

// The bandwidth ID.
func (o VpnGatewaySlaveEipPtrOutput) BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthId
	}).(pulumi.StringPtrOutput)
}

// The bandwidth name.
func (o VpnGatewaySlaveEipPtrOutput) BandwidthName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthName
	}).(pulumi.StringPtrOutput)
}

// Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.
func (o VpnGatewaySlaveEipPtrOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthSize
	}).(pulumi.IntPtrOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o VpnGatewaySlaveEipPtrOutput) ChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *string {
		if v == nil {
			return nil
		}
		return v.ChargeMode
	}).(pulumi.StringPtrOutput)
}

// The public IP ID.
func (o VpnGatewaySlaveEipPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o VpnGatewaySlaveEipPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The public IP version.
func (o VpnGatewaySlaveEipPtrOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *int {
		if v == nil {
			return nil
		}
		return v.IpVersion
	}).(pulumi.IntPtrOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o VpnGatewaySlaveEipPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewaySlaveEip) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GetApigAclPoliciesPolicy struct {
	// The number of bound APIs.
	BindNum int `pulumi:"bindNum"`
	// The entity type of the ACL policy.
	EntityType string `pulumi:"entityType"`
	// The ID of the ACL policy.
	Id string `pulumi:"id"`
	// The name of the ACL policy.
	Name string `pulumi:"name"`
	// The type of the ACL policy.
	Type string `pulumi:"type"`
	// The latest update time of the policy.
	UpdatedAt string `pulumi:"updatedAt"`
	// The value of the ACL policy.
	Value string `pulumi:"value"`
}

// GetApigAclPoliciesPolicyInput is an input type that accepts GetApigAclPoliciesPolicyArgs and GetApigAclPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetApigAclPoliciesPolicyInput` via:
//
//	GetApigAclPoliciesPolicyArgs{...}
type GetApigAclPoliciesPolicyInput interface {
	pulumi.Input

	ToGetApigAclPoliciesPolicyOutput() GetApigAclPoliciesPolicyOutput
	ToGetApigAclPoliciesPolicyOutputWithContext(context.Context) GetApigAclPoliciesPolicyOutput
}

type GetApigAclPoliciesPolicyArgs struct {
	// The number of bound APIs.
	BindNum pulumi.IntInput `pulumi:"bindNum"`
	// The entity type of the ACL policy.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The ID of the ACL policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the ACL policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the ACL policy.
	Type pulumi.StringInput `pulumi:"type"`
	// The latest update time of the policy.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The value of the ACL policy.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigAclPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigAclPoliciesPolicy)(nil)).Elem()
}

func (i GetApigAclPoliciesPolicyArgs) ToGetApigAclPoliciesPolicyOutput() GetApigAclPoliciesPolicyOutput {
	return i.ToGetApigAclPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetApigAclPoliciesPolicyArgs) ToGetApigAclPoliciesPolicyOutputWithContext(ctx context.Context) GetApigAclPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigAclPoliciesPolicyOutput)
}

// GetApigAclPoliciesPolicyArrayInput is an input type that accepts GetApigAclPoliciesPolicyArray and GetApigAclPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetApigAclPoliciesPolicyArrayInput` via:
//
//	GetApigAclPoliciesPolicyArray{ GetApigAclPoliciesPolicyArgs{...} }
type GetApigAclPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetApigAclPoliciesPolicyArrayOutput() GetApigAclPoliciesPolicyArrayOutput
	ToGetApigAclPoliciesPolicyArrayOutputWithContext(context.Context) GetApigAclPoliciesPolicyArrayOutput
}

type GetApigAclPoliciesPolicyArray []GetApigAclPoliciesPolicyInput

func (GetApigAclPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigAclPoliciesPolicy)(nil)).Elem()
}

func (i GetApigAclPoliciesPolicyArray) ToGetApigAclPoliciesPolicyArrayOutput() GetApigAclPoliciesPolicyArrayOutput {
	return i.ToGetApigAclPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetApigAclPoliciesPolicyArray) ToGetApigAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigAclPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigAclPoliciesPolicyArrayOutput)
}

type GetApigAclPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetApigAclPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigAclPoliciesPolicy)(nil)).Elem()
}

func (o GetApigAclPoliciesPolicyOutput) ToGetApigAclPoliciesPolicyOutput() GetApigAclPoliciesPolicyOutput {
	return o
}

func (o GetApigAclPoliciesPolicyOutput) ToGetApigAclPoliciesPolicyOutputWithContext(ctx context.Context) GetApigAclPoliciesPolicyOutput {
	return o
}

// The number of bound APIs.
func (o GetApigAclPoliciesPolicyOutput) BindNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigAclPoliciesPolicy) int { return v.BindNum }).(pulumi.IntOutput)
}

// The entity type of the ACL policy.
func (o GetApigAclPoliciesPolicyOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAclPoliciesPolicy) string { return v.EntityType }).(pulumi.StringOutput)
}

// The ID of the ACL policy.
func (o GetApigAclPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAclPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the ACL policy.
func (o GetApigAclPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAclPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the ACL policy.
func (o GetApigAclPoliciesPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAclPoliciesPolicy) string { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the policy.
func (o GetApigAclPoliciesPolicyOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAclPoliciesPolicy) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The value of the ACL policy.
func (o GetApigAclPoliciesPolicyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAclPoliciesPolicy) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigAclPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApigAclPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigAclPoliciesPolicy)(nil)).Elem()
}

func (o GetApigAclPoliciesPolicyArrayOutput) ToGetApigAclPoliciesPolicyArrayOutput() GetApigAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigAclPoliciesPolicyArrayOutput) ToGetApigAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigAclPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetApigAclPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigAclPoliciesPolicy {
		return vs[0].([]GetApigAclPoliciesPolicy)[vs[1].(int)]
	}).(GetApigAclPoliciesPolicyOutput)
}

type GetApigApiAssociatedAclPoliciesPolicy struct {
	// The bind ID.
	BindId string `pulumi:"bindId"`
	// The time that the ACL policy is bound to the API.
	BindTime string `pulumi:"bindTime"`
	// The entity type of the ACL policy.
	EntityType string `pulumi:"entityType"`
	// The ID of the environment where the API is published.
	EnvId string `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName string `pulumi:"envName"`
	// The ID of the ACL policy.
	Id string `pulumi:"id"`
	// The name of the ACL policy.
	Name string `pulumi:"name"`
	// The type of the ACL policy.
	Type string `pulumi:"type"`
	// One or more objects from which the access will be controlled.
	Value string `pulumi:"value"`
}

// GetApigApiAssociatedAclPoliciesPolicyInput is an input type that accepts GetApigApiAssociatedAclPoliciesPolicyArgs and GetApigApiAssociatedAclPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedAclPoliciesPolicyInput` via:
//
//	GetApigApiAssociatedAclPoliciesPolicyArgs{...}
type GetApigApiAssociatedAclPoliciesPolicyInput interface {
	pulumi.Input

	ToGetApigApiAssociatedAclPoliciesPolicyOutput() GetApigApiAssociatedAclPoliciesPolicyOutput
	ToGetApigApiAssociatedAclPoliciesPolicyOutputWithContext(context.Context) GetApigApiAssociatedAclPoliciesPolicyOutput
}

type GetApigApiAssociatedAclPoliciesPolicyArgs struct {
	// The bind ID.
	BindId pulumi.StringInput `pulumi:"bindId"`
	// The time that the ACL policy is bound to the API.
	BindTime pulumi.StringInput `pulumi:"bindTime"`
	// The entity type of the ACL policy.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The ID of the environment where the API is published.
	EnvId pulumi.StringInput `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName pulumi.StringInput `pulumi:"envName"`
	// The ID of the ACL policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the ACL policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the ACL policy.
	Type pulumi.StringInput `pulumi:"type"`
	// One or more objects from which the access will be controlled.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiAssociatedAclPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedAclPoliciesPolicy)(nil)).Elem()
}

func (i GetApigApiAssociatedAclPoliciesPolicyArgs) ToGetApigApiAssociatedAclPoliciesPolicyOutput() GetApigApiAssociatedAclPoliciesPolicyOutput {
	return i.ToGetApigApiAssociatedAclPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedAclPoliciesPolicyArgs) ToGetApigApiAssociatedAclPoliciesPolicyOutputWithContext(ctx context.Context) GetApigApiAssociatedAclPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedAclPoliciesPolicyOutput)
}

// GetApigApiAssociatedAclPoliciesPolicyArrayInput is an input type that accepts GetApigApiAssociatedAclPoliciesPolicyArray and GetApigApiAssociatedAclPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedAclPoliciesPolicyArrayInput` via:
//
//	GetApigApiAssociatedAclPoliciesPolicyArray{ GetApigApiAssociatedAclPoliciesPolicyArgs{...} }
type GetApigApiAssociatedAclPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetApigApiAssociatedAclPoliciesPolicyArrayOutput() GetApigApiAssociatedAclPoliciesPolicyArrayOutput
	ToGetApigApiAssociatedAclPoliciesPolicyArrayOutputWithContext(context.Context) GetApigApiAssociatedAclPoliciesPolicyArrayOutput
}

type GetApigApiAssociatedAclPoliciesPolicyArray []GetApigApiAssociatedAclPoliciesPolicyInput

func (GetApigApiAssociatedAclPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedAclPoliciesPolicy)(nil)).Elem()
}

func (i GetApigApiAssociatedAclPoliciesPolicyArray) ToGetApigApiAssociatedAclPoliciesPolicyArrayOutput() GetApigApiAssociatedAclPoliciesPolicyArrayOutput {
	return i.ToGetApigApiAssociatedAclPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedAclPoliciesPolicyArray) ToGetApigApiAssociatedAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedAclPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedAclPoliciesPolicyArrayOutput)
}

type GetApigApiAssociatedAclPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedAclPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedAclPoliciesPolicy)(nil)).Elem()
}

func (o GetApigApiAssociatedAclPoliciesPolicyOutput) ToGetApigApiAssociatedAclPoliciesPolicyOutput() GetApigApiAssociatedAclPoliciesPolicyOutput {
	return o
}

func (o GetApigApiAssociatedAclPoliciesPolicyOutput) ToGetApigApiAssociatedAclPoliciesPolicyOutputWithContext(ctx context.Context) GetApigApiAssociatedAclPoliciesPolicyOutput {
	return o
}

// The bind ID.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) BindId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.BindId }).(pulumi.StringOutput)
}

// The time that the ACL policy is bound to the API.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) BindTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.BindTime }).(pulumi.StringOutput)
}

// The entity type of the ACL policy.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.EntityType }).(pulumi.StringOutput)
}

// The ID of the environment where the API is published.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.EnvId }).(pulumi.StringOutput)
}

// The name of the environment where the API is published.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.EnvName }).(pulumi.StringOutput)
}

// The ID of the ACL policy.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the ACL policy.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the ACL policy.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.Type }).(pulumi.StringOutput)
}

// One or more objects from which the access will be controlled.
func (o GetApigApiAssociatedAclPoliciesPolicyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedAclPoliciesPolicy) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiAssociatedAclPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedAclPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedAclPoliciesPolicy)(nil)).Elem()
}

func (o GetApigApiAssociatedAclPoliciesPolicyArrayOutput) ToGetApigApiAssociatedAclPoliciesPolicyArrayOutput() GetApigApiAssociatedAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigApiAssociatedAclPoliciesPolicyArrayOutput) ToGetApigApiAssociatedAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigApiAssociatedAclPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetApigApiAssociatedAclPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiAssociatedAclPoliciesPolicy {
		return vs[0].([]GetApigApiAssociatedAclPoliciesPolicy)[vs[1].(int)]
	}).(GetApigApiAssociatedAclPoliciesPolicyOutput)
}

type GetApigApiAssociatedApplicationsApplication struct {
	// The bind ID.
	BindId string `pulumi:"bindId"`
	// The time that the application is bound to the API.
	BindTime string `pulumi:"bindTime"`
	// The description of the application.
	Description string `pulumi:"description"`
	// The ID of the environment where the API is published.
	EnvId string `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName string `pulumi:"envName"`
	// The ID of the application.
	Id string `pulumi:"id"`
	// The name of the application.
	Name string `pulumi:"name"`
}

// GetApigApiAssociatedApplicationsApplicationInput is an input type that accepts GetApigApiAssociatedApplicationsApplicationArgs and GetApigApiAssociatedApplicationsApplicationOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedApplicationsApplicationInput` via:
//
//	GetApigApiAssociatedApplicationsApplicationArgs{...}
type GetApigApiAssociatedApplicationsApplicationInput interface {
	pulumi.Input

	ToGetApigApiAssociatedApplicationsApplicationOutput() GetApigApiAssociatedApplicationsApplicationOutput
	ToGetApigApiAssociatedApplicationsApplicationOutputWithContext(context.Context) GetApigApiAssociatedApplicationsApplicationOutput
}

type GetApigApiAssociatedApplicationsApplicationArgs struct {
	// The bind ID.
	BindId pulumi.StringInput `pulumi:"bindId"`
	// The time that the application is bound to the API.
	BindTime pulumi.StringInput `pulumi:"bindTime"`
	// The description of the application.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the environment where the API is published.
	EnvId pulumi.StringInput `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName pulumi.StringInput `pulumi:"envName"`
	// The ID of the application.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the application.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApigApiAssociatedApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedApplicationsApplication)(nil)).Elem()
}

func (i GetApigApiAssociatedApplicationsApplicationArgs) ToGetApigApiAssociatedApplicationsApplicationOutput() GetApigApiAssociatedApplicationsApplicationOutput {
	return i.ToGetApigApiAssociatedApplicationsApplicationOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedApplicationsApplicationArgs) ToGetApigApiAssociatedApplicationsApplicationOutputWithContext(ctx context.Context) GetApigApiAssociatedApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedApplicationsApplicationOutput)
}

// GetApigApiAssociatedApplicationsApplicationArrayInput is an input type that accepts GetApigApiAssociatedApplicationsApplicationArray and GetApigApiAssociatedApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedApplicationsApplicationArrayInput` via:
//
//	GetApigApiAssociatedApplicationsApplicationArray{ GetApigApiAssociatedApplicationsApplicationArgs{...} }
type GetApigApiAssociatedApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGetApigApiAssociatedApplicationsApplicationArrayOutput() GetApigApiAssociatedApplicationsApplicationArrayOutput
	ToGetApigApiAssociatedApplicationsApplicationArrayOutputWithContext(context.Context) GetApigApiAssociatedApplicationsApplicationArrayOutput
}

type GetApigApiAssociatedApplicationsApplicationArray []GetApigApiAssociatedApplicationsApplicationInput

func (GetApigApiAssociatedApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedApplicationsApplication)(nil)).Elem()
}

func (i GetApigApiAssociatedApplicationsApplicationArray) ToGetApigApiAssociatedApplicationsApplicationArrayOutput() GetApigApiAssociatedApplicationsApplicationArrayOutput {
	return i.ToGetApigApiAssociatedApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedApplicationsApplicationArray) ToGetApigApiAssociatedApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedApplicationsApplicationArrayOutput)
}

type GetApigApiAssociatedApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedApplicationsApplication)(nil)).Elem()
}

func (o GetApigApiAssociatedApplicationsApplicationOutput) ToGetApigApiAssociatedApplicationsApplicationOutput() GetApigApiAssociatedApplicationsApplicationOutput {
	return o
}

func (o GetApigApiAssociatedApplicationsApplicationOutput) ToGetApigApiAssociatedApplicationsApplicationOutputWithContext(ctx context.Context) GetApigApiAssociatedApplicationsApplicationOutput {
	return o
}

// The bind ID.
func (o GetApigApiAssociatedApplicationsApplicationOutput) BindId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedApplicationsApplication) string { return v.BindId }).(pulumi.StringOutput)
}

// The time that the application is bound to the API.
func (o GetApigApiAssociatedApplicationsApplicationOutput) BindTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedApplicationsApplication) string { return v.BindTime }).(pulumi.StringOutput)
}

// The description of the application.
func (o GetApigApiAssociatedApplicationsApplicationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedApplicationsApplication) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the environment where the API is published.
func (o GetApigApiAssociatedApplicationsApplicationOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedApplicationsApplication) string { return v.EnvId }).(pulumi.StringOutput)
}

// The name of the environment where the API is published.
func (o GetApigApiAssociatedApplicationsApplicationOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedApplicationsApplication) string { return v.EnvName }).(pulumi.StringOutput)
}

// The ID of the application.
func (o GetApigApiAssociatedApplicationsApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedApplicationsApplication) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the application.
func (o GetApigApiAssociatedApplicationsApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedApplicationsApplication) string { return v.Name }).(pulumi.StringOutput)
}

type GetApigApiAssociatedApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedApplicationsApplication)(nil)).Elem()
}

func (o GetApigApiAssociatedApplicationsApplicationArrayOutput) ToGetApigApiAssociatedApplicationsApplicationArrayOutput() GetApigApiAssociatedApplicationsApplicationArrayOutput {
	return o
}

func (o GetApigApiAssociatedApplicationsApplicationArrayOutput) ToGetApigApiAssociatedApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedApplicationsApplicationArrayOutput {
	return o
}

func (o GetApigApiAssociatedApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GetApigApiAssociatedApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiAssociatedApplicationsApplication {
		return vs[0].([]GetApigApiAssociatedApplicationsApplication)[vs[1].(int)]
	}).(GetApigApiAssociatedApplicationsApplicationOutput)
}

type GetApigApiAssociatedPluginsPlugin struct {
	// The bind ID.
	BindId string `pulumi:"bindId"`
	// The time that the plugin is bound to the API.
	BindTime string `pulumi:"bindTime"`
	// The configuration details for the plugin.
	Content string `pulumi:"content"`
	// The description of the plugin.
	Description string `pulumi:"description"`
	// The ID of the environment where the API is published.
	EnvId string `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName string `pulumi:"envName"`
	// The ID of the plugin.
	Id string `pulumi:"id"`
	// The name of the plugin.
	Name string `pulumi:"name"`
	// The type of the plugin.
	Type string `pulumi:"type"`
}

// GetApigApiAssociatedPluginsPluginInput is an input type that accepts GetApigApiAssociatedPluginsPluginArgs and GetApigApiAssociatedPluginsPluginOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedPluginsPluginInput` via:
//
//	GetApigApiAssociatedPluginsPluginArgs{...}
type GetApigApiAssociatedPluginsPluginInput interface {
	pulumi.Input

	ToGetApigApiAssociatedPluginsPluginOutput() GetApigApiAssociatedPluginsPluginOutput
	ToGetApigApiAssociatedPluginsPluginOutputWithContext(context.Context) GetApigApiAssociatedPluginsPluginOutput
}

type GetApigApiAssociatedPluginsPluginArgs struct {
	// The bind ID.
	BindId pulumi.StringInput `pulumi:"bindId"`
	// The time that the plugin is bound to the API.
	BindTime pulumi.StringInput `pulumi:"bindTime"`
	// The configuration details for the plugin.
	Content pulumi.StringInput `pulumi:"content"`
	// The description of the plugin.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the environment where the API is published.
	EnvId pulumi.StringInput `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName pulumi.StringInput `pulumi:"envName"`
	// The ID of the plugin.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the plugin.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the plugin.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApigApiAssociatedPluginsPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedPluginsPlugin)(nil)).Elem()
}

func (i GetApigApiAssociatedPluginsPluginArgs) ToGetApigApiAssociatedPluginsPluginOutput() GetApigApiAssociatedPluginsPluginOutput {
	return i.ToGetApigApiAssociatedPluginsPluginOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedPluginsPluginArgs) ToGetApigApiAssociatedPluginsPluginOutputWithContext(ctx context.Context) GetApigApiAssociatedPluginsPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedPluginsPluginOutput)
}

// GetApigApiAssociatedPluginsPluginArrayInput is an input type that accepts GetApigApiAssociatedPluginsPluginArray and GetApigApiAssociatedPluginsPluginArrayOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedPluginsPluginArrayInput` via:
//
//	GetApigApiAssociatedPluginsPluginArray{ GetApigApiAssociatedPluginsPluginArgs{...} }
type GetApigApiAssociatedPluginsPluginArrayInput interface {
	pulumi.Input

	ToGetApigApiAssociatedPluginsPluginArrayOutput() GetApigApiAssociatedPluginsPluginArrayOutput
	ToGetApigApiAssociatedPluginsPluginArrayOutputWithContext(context.Context) GetApigApiAssociatedPluginsPluginArrayOutput
}

type GetApigApiAssociatedPluginsPluginArray []GetApigApiAssociatedPluginsPluginInput

func (GetApigApiAssociatedPluginsPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedPluginsPlugin)(nil)).Elem()
}

func (i GetApigApiAssociatedPluginsPluginArray) ToGetApigApiAssociatedPluginsPluginArrayOutput() GetApigApiAssociatedPluginsPluginArrayOutput {
	return i.ToGetApigApiAssociatedPluginsPluginArrayOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedPluginsPluginArray) ToGetApigApiAssociatedPluginsPluginArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedPluginsPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedPluginsPluginArrayOutput)
}

type GetApigApiAssociatedPluginsPluginOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedPluginsPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedPluginsPlugin)(nil)).Elem()
}

func (o GetApigApiAssociatedPluginsPluginOutput) ToGetApigApiAssociatedPluginsPluginOutput() GetApigApiAssociatedPluginsPluginOutput {
	return o
}

func (o GetApigApiAssociatedPluginsPluginOutput) ToGetApigApiAssociatedPluginsPluginOutputWithContext(ctx context.Context) GetApigApiAssociatedPluginsPluginOutput {
	return o
}

// The bind ID.
func (o GetApigApiAssociatedPluginsPluginOutput) BindId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.BindId }).(pulumi.StringOutput)
}

// The time that the plugin is bound to the API.
func (o GetApigApiAssociatedPluginsPluginOutput) BindTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.BindTime }).(pulumi.StringOutput)
}

// The configuration details for the plugin.
func (o GetApigApiAssociatedPluginsPluginOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.Content }).(pulumi.StringOutput)
}

// The description of the plugin.
func (o GetApigApiAssociatedPluginsPluginOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the environment where the API is published.
func (o GetApigApiAssociatedPluginsPluginOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.EnvId }).(pulumi.StringOutput)
}

// The name of the environment where the API is published.
func (o GetApigApiAssociatedPluginsPluginOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.EnvName }).(pulumi.StringOutput)
}

// The ID of the plugin.
func (o GetApigApiAssociatedPluginsPluginOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the plugin.
func (o GetApigApiAssociatedPluginsPluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the plugin.
func (o GetApigApiAssociatedPluginsPluginOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedPluginsPlugin) string { return v.Type }).(pulumi.StringOutput)
}

type GetApigApiAssociatedPluginsPluginArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedPluginsPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedPluginsPlugin)(nil)).Elem()
}

func (o GetApigApiAssociatedPluginsPluginArrayOutput) ToGetApigApiAssociatedPluginsPluginArrayOutput() GetApigApiAssociatedPluginsPluginArrayOutput {
	return o
}

func (o GetApigApiAssociatedPluginsPluginArrayOutput) ToGetApigApiAssociatedPluginsPluginArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedPluginsPluginArrayOutput {
	return o
}

func (o GetApigApiAssociatedPluginsPluginArrayOutput) Index(i pulumi.IntInput) GetApigApiAssociatedPluginsPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiAssociatedPluginsPlugin {
		return vs[0].([]GetApigApiAssociatedPluginsPlugin)[vs[1].(int)]
	}).(GetApigApiAssociatedPluginsPluginOutput)
}

type GetApigApiAssociatedSignaturesSignature struct {
	// The bind ID.
	BindId string `pulumi:"bindId"`
	// The time that the signature is bound to the API.
	BindTime string `pulumi:"bindTime"`
	// The ID of the environment where the API is published.
	EnvId string `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName string `pulumi:"envName"`
	// The ID of the signature.
	Id string `pulumi:"id"`
	// The signature key.
	Key string `pulumi:"key"`
	// The name of the signature.
	Name string `pulumi:"name"`
	// The signature secret.
	Secret string `pulumi:"secret"`
	// The type of the signature.
	Type string `pulumi:"type"`
}

// GetApigApiAssociatedSignaturesSignatureInput is an input type that accepts GetApigApiAssociatedSignaturesSignatureArgs and GetApigApiAssociatedSignaturesSignatureOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedSignaturesSignatureInput` via:
//
//	GetApigApiAssociatedSignaturesSignatureArgs{...}
type GetApigApiAssociatedSignaturesSignatureInput interface {
	pulumi.Input

	ToGetApigApiAssociatedSignaturesSignatureOutput() GetApigApiAssociatedSignaturesSignatureOutput
	ToGetApigApiAssociatedSignaturesSignatureOutputWithContext(context.Context) GetApigApiAssociatedSignaturesSignatureOutput
}

type GetApigApiAssociatedSignaturesSignatureArgs struct {
	// The bind ID.
	BindId pulumi.StringInput `pulumi:"bindId"`
	// The time that the signature is bound to the API.
	BindTime pulumi.StringInput `pulumi:"bindTime"`
	// The ID of the environment where the API is published.
	EnvId pulumi.StringInput `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName pulumi.StringInput `pulumi:"envName"`
	// The ID of the signature.
	Id pulumi.StringInput `pulumi:"id"`
	// The signature key.
	Key pulumi.StringInput `pulumi:"key"`
	// The name of the signature.
	Name pulumi.StringInput `pulumi:"name"`
	// The signature secret.
	Secret pulumi.StringInput `pulumi:"secret"`
	// The type of the signature.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApigApiAssociatedSignaturesSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedSignaturesSignature)(nil)).Elem()
}

func (i GetApigApiAssociatedSignaturesSignatureArgs) ToGetApigApiAssociatedSignaturesSignatureOutput() GetApigApiAssociatedSignaturesSignatureOutput {
	return i.ToGetApigApiAssociatedSignaturesSignatureOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedSignaturesSignatureArgs) ToGetApigApiAssociatedSignaturesSignatureOutputWithContext(ctx context.Context) GetApigApiAssociatedSignaturesSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedSignaturesSignatureOutput)
}

// GetApigApiAssociatedSignaturesSignatureArrayInput is an input type that accepts GetApigApiAssociatedSignaturesSignatureArray and GetApigApiAssociatedSignaturesSignatureArrayOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedSignaturesSignatureArrayInput` via:
//
//	GetApigApiAssociatedSignaturesSignatureArray{ GetApigApiAssociatedSignaturesSignatureArgs{...} }
type GetApigApiAssociatedSignaturesSignatureArrayInput interface {
	pulumi.Input

	ToGetApigApiAssociatedSignaturesSignatureArrayOutput() GetApigApiAssociatedSignaturesSignatureArrayOutput
	ToGetApigApiAssociatedSignaturesSignatureArrayOutputWithContext(context.Context) GetApigApiAssociatedSignaturesSignatureArrayOutput
}

type GetApigApiAssociatedSignaturesSignatureArray []GetApigApiAssociatedSignaturesSignatureInput

func (GetApigApiAssociatedSignaturesSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedSignaturesSignature)(nil)).Elem()
}

func (i GetApigApiAssociatedSignaturesSignatureArray) ToGetApigApiAssociatedSignaturesSignatureArrayOutput() GetApigApiAssociatedSignaturesSignatureArrayOutput {
	return i.ToGetApigApiAssociatedSignaturesSignatureArrayOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedSignaturesSignatureArray) ToGetApigApiAssociatedSignaturesSignatureArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedSignaturesSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedSignaturesSignatureArrayOutput)
}

type GetApigApiAssociatedSignaturesSignatureOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedSignaturesSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedSignaturesSignature)(nil)).Elem()
}

func (o GetApigApiAssociatedSignaturesSignatureOutput) ToGetApigApiAssociatedSignaturesSignatureOutput() GetApigApiAssociatedSignaturesSignatureOutput {
	return o
}

func (o GetApigApiAssociatedSignaturesSignatureOutput) ToGetApigApiAssociatedSignaturesSignatureOutputWithContext(ctx context.Context) GetApigApiAssociatedSignaturesSignatureOutput {
	return o
}

// The bind ID.
func (o GetApigApiAssociatedSignaturesSignatureOutput) BindId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.BindId }).(pulumi.StringOutput)
}

// The time that the signature is bound to the API.
func (o GetApigApiAssociatedSignaturesSignatureOutput) BindTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.BindTime }).(pulumi.StringOutput)
}

// The ID of the environment where the API is published.
func (o GetApigApiAssociatedSignaturesSignatureOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.EnvId }).(pulumi.StringOutput)
}

// The name of the environment where the API is published.
func (o GetApigApiAssociatedSignaturesSignatureOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.EnvName }).(pulumi.StringOutput)
}

// The ID of the signature.
func (o GetApigApiAssociatedSignaturesSignatureOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.Id }).(pulumi.StringOutput)
}

// The signature key.
func (o GetApigApiAssociatedSignaturesSignatureOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the signature.
func (o GetApigApiAssociatedSignaturesSignatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.Name }).(pulumi.StringOutput)
}

// The signature secret.
func (o GetApigApiAssociatedSignaturesSignatureOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.Secret }).(pulumi.StringOutput)
}

// The type of the signature.
func (o GetApigApiAssociatedSignaturesSignatureOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedSignaturesSignature) string { return v.Type }).(pulumi.StringOutput)
}

type GetApigApiAssociatedSignaturesSignatureArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedSignaturesSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedSignaturesSignature)(nil)).Elem()
}

func (o GetApigApiAssociatedSignaturesSignatureArrayOutput) ToGetApigApiAssociatedSignaturesSignatureArrayOutput() GetApigApiAssociatedSignaturesSignatureArrayOutput {
	return o
}

func (o GetApigApiAssociatedSignaturesSignatureArrayOutput) ToGetApigApiAssociatedSignaturesSignatureArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedSignaturesSignatureArrayOutput {
	return o
}

func (o GetApigApiAssociatedSignaturesSignatureArrayOutput) Index(i pulumi.IntInput) GetApigApiAssociatedSignaturesSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiAssociatedSignaturesSignature {
		return vs[0].([]GetApigApiAssociatedSignaturesSignature)[vs[1].(int)]
	}).(GetApigApiAssociatedSignaturesSignatureOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicy struct {
	// The array of one or more special throttling policies for APP limit.
	AppThrottles []GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle `pulumi:"appThrottles"`
	// The bind ID.
	BindId string `pulumi:"bindId"`
	// The time that the throttling policy is bound to the API, in RFC3339 format.
	BindTime string `pulumi:"bindTime"`
	// The creation time of the throttling policy, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the throttling policy.
	Description string `pulumi:"description"`
	// The name of the environment where the API is published.
	EnvName string `pulumi:"envName"`
	// The ID of the throttling policy.
	Id string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The maximum number of times the API can be accessed by an app within the same period.
	MaxAppRequests int `pulumi:"maxAppRequests"`
	// The maximum number of times the API can be accessed by an IP address within the same period.
	MaxIpRequests int `pulumi:"maxIpRequests"`
	// The maximum number of times the API can be accessed by a user within the same period.
	MaxUserRequests int `pulumi:"maxUserRequests"`
	// The name of the throttling policy.
	Name string `pulumi:"name"`
	// The period of time for limiting the number of API calls.
	Period int `pulumi:"period"`
	// The time unit for limiting the number of API calls.
	PeriodUnit string `pulumi:"periodUnit"`
	// The type of the throttling policy.
	Type string `pulumi:"type"`
	// The array of one or more special throttling policies for IAM user limit.
	UserThrottles []GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle `pulumi:"userThrottles"`
}

// GetApigApiAssociatedThrottlingPoliciesPolicyInput is an input type that accepts GetApigApiAssociatedThrottlingPoliciesPolicyArgs and GetApigApiAssociatedThrottlingPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedThrottlingPoliciesPolicyInput` via:
//
//	GetApigApiAssociatedThrottlingPoliciesPolicyArgs{...}
type GetApigApiAssociatedThrottlingPoliciesPolicyInput interface {
	pulumi.Input

	ToGetApigApiAssociatedThrottlingPoliciesPolicyOutput() GetApigApiAssociatedThrottlingPoliciesPolicyOutput
	ToGetApigApiAssociatedThrottlingPoliciesPolicyOutputWithContext(context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyOutput
}

type GetApigApiAssociatedThrottlingPoliciesPolicyArgs struct {
	// The array of one or more special throttling policies for APP limit.
	AppThrottles GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayInput `pulumi:"appThrottles"`
	// The bind ID.
	BindId pulumi.StringInput `pulumi:"bindId"`
	// The time that the throttling policy is bound to the API, in RFC3339 format.
	BindTime pulumi.StringInput `pulumi:"bindTime"`
	// The creation time of the throttling policy, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the throttling policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the environment where the API is published.
	EnvName pulumi.StringInput `pulumi:"envName"`
	// The ID of the throttling policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The maximum number of times the API can be accessed by an app within the same period.
	MaxAppRequests pulumi.IntInput `pulumi:"maxAppRequests"`
	// The maximum number of times the API can be accessed by an IP address within the same period.
	MaxIpRequests pulumi.IntInput `pulumi:"maxIpRequests"`
	// The maximum number of times the API can be accessed by a user within the same period.
	MaxUserRequests pulumi.IntInput `pulumi:"maxUserRequests"`
	// The name of the throttling policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The period of time for limiting the number of API calls.
	Period pulumi.IntInput `pulumi:"period"`
	// The time unit for limiting the number of API calls.
	PeriodUnit pulumi.StringInput `pulumi:"periodUnit"`
	// The type of the throttling policy.
	Type pulumi.StringInput `pulumi:"type"`
	// The array of one or more special throttling policies for IAM user limit.
	UserThrottles GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayInput `pulumi:"userThrottles"`
}

func (GetApigApiAssociatedThrottlingPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicy)(nil)).Elem()
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyArgs) ToGetApigApiAssociatedThrottlingPoliciesPolicyOutput() GetApigApiAssociatedThrottlingPoliciesPolicyOutput {
	return i.ToGetApigApiAssociatedThrottlingPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyArgs) ToGetApigApiAssociatedThrottlingPoliciesPolicyOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedThrottlingPoliciesPolicyOutput)
}

// GetApigApiAssociatedThrottlingPoliciesPolicyArrayInput is an input type that accepts GetApigApiAssociatedThrottlingPoliciesPolicyArray and GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedThrottlingPoliciesPolicyArrayInput` via:
//
//	GetApigApiAssociatedThrottlingPoliciesPolicyArray{ GetApigApiAssociatedThrottlingPoliciesPolicyArgs{...} }
type GetApigApiAssociatedThrottlingPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput
	ToGetApigApiAssociatedThrottlingPoliciesPolicyArrayOutputWithContext(context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput
}

type GetApigApiAssociatedThrottlingPoliciesPolicyArray []GetApigApiAssociatedThrottlingPoliciesPolicyInput

func (GetApigApiAssociatedThrottlingPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedThrottlingPoliciesPolicy)(nil)).Elem()
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyArray) ToGetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput {
	return i.ToGetApigApiAssociatedThrottlingPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyArray) ToGetApigApiAssociatedThrottlingPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedThrottlingPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicy)(nil)).Elem()
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyOutput() GetApigApiAssociatedThrottlingPoliciesPolicyOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyOutput {
	return o
}

// The array of one or more special throttling policies for APP limit.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) AppThrottles() GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) []GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle {
		return v.AppThrottles
	}).(GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput)
}

// The bind ID.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) BindId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.BindId }).(pulumi.StringOutput)
}

// The time that the throttling policy is bound to the API, in RFC3339 format.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) BindTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.BindTime }).(pulumi.StringOutput)
}

// The creation time of the throttling policy, in RFC3339 format.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the throttling policy.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the environment where the API is published.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.EnvName }).(pulumi.StringOutput)
}

// The ID of the throttling policy.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The maximum number of times the API can be accessed by an app within the same period.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) MaxAppRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) int { return v.MaxAppRequests }).(pulumi.IntOutput)
}

// The maximum number of times the API can be accessed by an IP address within the same period.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) MaxIpRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) int { return v.MaxIpRequests }).(pulumi.IntOutput)
}

// The maximum number of times the API can be accessed by a user within the same period.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) MaxUserRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) int { return v.MaxUserRequests }).(pulumi.IntOutput)
}

// The name of the throttling policy.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The period of time for limiting the number of API calls.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) int { return v.Period }).(pulumi.IntOutput)
}

// The time unit for limiting the number of API calls.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) PeriodUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.PeriodUnit }).(pulumi.StringOutput)
}

// The type of the throttling policy.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) string { return v.Type }).(pulumi.StringOutput)
}

// The array of one or more special throttling policies for IAM user limit.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyOutput) UserThrottles() GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicy) []GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle {
		return v.UserThrottles
	}).(GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedThrottlingPoliciesPolicy)(nil)).Elem()
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetApigApiAssociatedThrottlingPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiAssociatedThrottlingPoliciesPolicy {
		return vs[0].([]GetApigApiAssociatedThrottlingPoliciesPolicy)[vs[1].(int)]
	}).(GetApigApiAssociatedThrottlingPoliciesPolicyOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle struct {
	// The ID of the special user/application throttling policy.
	Id string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId string `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName string `pulumi:"throttlingObjectName"`
}

// GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleInput is an input type that accepts GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs and GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleInput` via:
//
//	GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs{...}
type GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleInput interface {
	pulumi.Input

	ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput() GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput
	ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutputWithContext(context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput
}

type GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs struct {
	// The ID of the special user/application throttling policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId pulumi.StringInput `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName pulumi.StringInput `pulumi:"throttlingObjectName"`
}

func (GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput() GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput {
	return i.ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput)
}

// GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayInput is an input type that accepts GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArray and GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayInput` via:
//
//	GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArray{ GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs{...} }
type GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayInput interface {
	pulumi.Input

	ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput
	ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput
}

type GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArray []GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleInput

func (GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArray) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return i.ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArray) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput() GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput {
	return o
}

// The ID of the special user/application throttling policy.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The object ID which the special user/application throttling policy belongs.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput) ThrottlingObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle) string { return v.ThrottlingObjectId }).(pulumi.StringOutput)
}

// The object name which the special user/application throttling policy belongs.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput) ThrottlingObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle) string { return v.ThrottlingObjectName }).(pulumi.StringOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput) Index(i pulumi.IntInput) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle {
		return vs[0].([]GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottle)[vs[1].(int)]
	}).(GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle struct {
	// The ID of the special user/application throttling policy.
	Id string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId string `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName string `pulumi:"throttlingObjectName"`
}

// GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleInput is an input type that accepts GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs and GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleInput` via:
//
//	GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs{...}
type GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleInput interface {
	pulumi.Input

	ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput() GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput
	ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutputWithContext(context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput
}

type GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs struct {
	// The ID of the special user/application throttling policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId pulumi.StringInput `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName pulumi.StringInput `pulumi:"throttlingObjectName"`
}

func (GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput() GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput {
	return i.ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput)
}

// GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayInput is an input type that accepts GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArray and GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput values.
// You can construct a concrete instance of `GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayInput` via:
//
//	GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArray{ GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs{...} }
type GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayInput interface {
	pulumi.Input

	ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput
	ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput
}

type GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArray []GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleInput

func (GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArray) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return i.ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(context.Background())
}

func (i GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArray) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput() GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput {
	return o
}

// The ID of the special user/application throttling policy.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The object ID which the special user/application throttling policy belongs.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput) ThrottlingObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle) string { return v.ThrottlingObjectId }).(pulumi.StringOutput)
}

// The object name which the special user/application throttling policy belongs.
func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput) ThrottlingObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle) string { return v.ThrottlingObjectName }).(pulumi.StringOutput)
}

type GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput() GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput) ToGetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(ctx context.Context) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return o
}

func (o GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput) Index(i pulumi.IntInput) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle {
		return vs[0].([]GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottle)[vs[1].(int)]
	}).(GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput)
}

type GetApigApiBackendParam struct {
	// The description of the constant or system parameter.
	Description string `pulumi:"description"`
	// The ID of the backend parameter.
	Id string `pulumi:"id"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The name of parameter.
	Name string `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId string `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType string `pulumi:"systemParamType"`
	// The name of parameter.
	Type string `pulumi:"type"`
	// The value of the parameter.
	Value string `pulumi:"value"`
}

// GetApigApiBackendParamInput is an input type that accepts GetApigApiBackendParamArgs and GetApigApiBackendParamOutput values.
// You can construct a concrete instance of `GetApigApiBackendParamInput` via:
//
//	GetApigApiBackendParamArgs{...}
type GetApigApiBackendParamInput interface {
	pulumi.Input

	ToGetApigApiBackendParamOutput() GetApigApiBackendParamOutput
	ToGetApigApiBackendParamOutputWithContext(context.Context) GetApigApiBackendParamOutput
}

type GetApigApiBackendParamArgs struct {
	// The description of the constant or system parameter.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the backend parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType pulumi.StringInput `pulumi:"systemParamType"`
	// The name of parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiBackendParam)(nil)).Elem()
}

func (i GetApigApiBackendParamArgs) ToGetApigApiBackendParamOutput() GetApigApiBackendParamOutput {
	return i.ToGetApigApiBackendParamOutputWithContext(context.Background())
}

func (i GetApigApiBackendParamArgs) ToGetApigApiBackendParamOutputWithContext(ctx context.Context) GetApigApiBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiBackendParamOutput)
}

// GetApigApiBackendParamArrayInput is an input type that accepts GetApigApiBackendParamArray and GetApigApiBackendParamArrayOutput values.
// You can construct a concrete instance of `GetApigApiBackendParamArrayInput` via:
//
//	GetApigApiBackendParamArray{ GetApigApiBackendParamArgs{...} }
type GetApigApiBackendParamArrayInput interface {
	pulumi.Input

	ToGetApigApiBackendParamArrayOutput() GetApigApiBackendParamArrayOutput
	ToGetApigApiBackendParamArrayOutputWithContext(context.Context) GetApigApiBackendParamArrayOutput
}

type GetApigApiBackendParamArray []GetApigApiBackendParamInput

func (GetApigApiBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiBackendParam)(nil)).Elem()
}

func (i GetApigApiBackendParamArray) ToGetApigApiBackendParamArrayOutput() GetApigApiBackendParamArrayOutput {
	return i.ToGetApigApiBackendParamArrayOutputWithContext(context.Background())
}

func (i GetApigApiBackendParamArray) ToGetApigApiBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiBackendParamArrayOutput)
}

type GetApigApiBackendParamOutput struct{ *pulumi.OutputState }

func (GetApigApiBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiBackendParam)(nil)).Elem()
}

func (o GetApigApiBackendParamOutput) ToGetApigApiBackendParamOutput() GetApigApiBackendParamOutput {
	return o
}

func (o GetApigApiBackendParamOutput) ToGetApigApiBackendParamOutputWithContext(ctx context.Context) GetApigApiBackendParamOutput {
	return o
}

// The description of the constant or system parameter.
func (o GetApigApiBackendParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the backend parameter.
func (o GetApigApiBackendParamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.Id }).(pulumi.StringOutput)
}

// Where the parameter is located.
func (o GetApigApiBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the corresponding request parameter.
func (o GetApigApiBackendParamOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.RequestId }).(pulumi.StringOutput)
}

// The type of the system parameter.
func (o GetApigApiBackendParamOutput) SystemParamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.SystemParamType }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter.
func (o GetApigApiBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiBackendParamArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiBackendParam)(nil)).Elem()
}

func (o GetApigApiBackendParamArrayOutput) ToGetApigApiBackendParamArrayOutput() GetApigApiBackendParamArrayOutput {
	return o
}

func (o GetApigApiBackendParamArrayOutput) ToGetApigApiBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiBackendParamArrayOutput {
	return o
}

func (o GetApigApiBackendParamArrayOutput) Index(i pulumi.IntInput) GetApigApiBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiBackendParam {
		return vs[0].([]GetApigApiBackendParam)[vs[1].(int)]
	}).(GetApigApiBackendParamOutput)
}

type GetApigApiBasicConfigurationsConfiguration struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId string `pulumi:"authorizerId"`
	// The backend type of the API.
	BackendType string `pulumi:"backendType"`
	// Whether CORS is supported.
	Cors bool `pulumi:"cors"`
	// The description of the API.
	Description string `pulumi:"description"`
	// The ID of the environment where the API is published.
	EnvId string `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName string `pulumi:"envName"`
	// The ID of group corresponding to the API.
	GroupId string `pulumi:"groupId"`
	// The name of group corresponding to the API.
	GroupName string `pulumi:"groupName"`
	// The version of group corresponding to the API.
	GroupVersion string `pulumi:"groupVersion"`
	// The ID of the API.
	Id string `pulumi:"id"`
	// The matching mode of the API.
	Matching string `pulumi:"matching"`
	// The name of the API.
	Name string `pulumi:"name"`
	// The ID of publish corresponding to the API.
	PublishId string `pulumi:"publishId"`
	// The published time of the API, in RFC3339 format.
	PublishedAt string `pulumi:"publishedAt"`
	// The registered time of the API, in RFC3339 format.
	RegisteredAt string `pulumi:"registeredAt"`
	// The request method of the API.
	RequestMethod string `pulumi:"requestMethod"`
	// The request address of the API.
	RequestPath string `pulumi:"requestPath"`
	// The request protocol of the API.
	RequestProtocol string `pulumi:"requestProtocol"`
	// The security authentication mode of the API request.
	SecurityAuthentication string `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication bool `pulumi:"simpleAuthentication"`
	// The list of tags configuration.
	Tags []string `pulumi:"tags"`
	// The type of the API.
	Type string `pulumi:"type"`
	// The latest update time of the API, in RFC3339 format.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetApigApiBasicConfigurationsConfigurationInput is an input type that accepts GetApigApiBasicConfigurationsConfigurationArgs and GetApigApiBasicConfigurationsConfigurationOutput values.
// You can construct a concrete instance of `GetApigApiBasicConfigurationsConfigurationInput` via:
//
//	GetApigApiBasicConfigurationsConfigurationArgs{...}
type GetApigApiBasicConfigurationsConfigurationInput interface {
	pulumi.Input

	ToGetApigApiBasicConfigurationsConfigurationOutput() GetApigApiBasicConfigurationsConfigurationOutput
	ToGetApigApiBasicConfigurationsConfigurationOutputWithContext(context.Context) GetApigApiBasicConfigurationsConfigurationOutput
}

type GetApigApiBasicConfigurationsConfigurationArgs struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The backend type of the API.
	BackendType pulumi.StringInput `pulumi:"backendType"`
	// Whether CORS is supported.
	Cors pulumi.BoolInput `pulumi:"cors"`
	// The description of the API.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the environment where the API is published.
	EnvId pulumi.StringInput `pulumi:"envId"`
	// The name of the environment where the API is published.
	EnvName pulumi.StringInput `pulumi:"envName"`
	// The ID of group corresponding to the API.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of group corresponding to the API.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The version of group corresponding to the API.
	GroupVersion pulumi.StringInput `pulumi:"groupVersion"`
	// The ID of the API.
	Id pulumi.StringInput `pulumi:"id"`
	// The matching mode of the API.
	Matching pulumi.StringInput `pulumi:"matching"`
	// The name of the API.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of publish corresponding to the API.
	PublishId pulumi.StringInput `pulumi:"publishId"`
	// The published time of the API, in RFC3339 format.
	PublishedAt pulumi.StringInput `pulumi:"publishedAt"`
	// The registered time of the API, in RFC3339 format.
	RegisteredAt pulumi.StringInput `pulumi:"registeredAt"`
	// The request method of the API.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// The request address of the API.
	RequestPath pulumi.StringInput `pulumi:"requestPath"`
	// The request protocol of the API.
	RequestProtocol pulumi.StringInput `pulumi:"requestProtocol"`
	// The security authentication mode of the API request.
	SecurityAuthentication pulumi.StringInput `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication pulumi.BoolInput `pulumi:"simpleAuthentication"`
	// The list of tags configuration.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The type of the API.
	Type pulumi.StringInput `pulumi:"type"`
	// The latest update time of the API, in RFC3339 format.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetApigApiBasicConfigurationsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiBasicConfigurationsConfiguration)(nil)).Elem()
}

func (i GetApigApiBasicConfigurationsConfigurationArgs) ToGetApigApiBasicConfigurationsConfigurationOutput() GetApigApiBasicConfigurationsConfigurationOutput {
	return i.ToGetApigApiBasicConfigurationsConfigurationOutputWithContext(context.Background())
}

func (i GetApigApiBasicConfigurationsConfigurationArgs) ToGetApigApiBasicConfigurationsConfigurationOutputWithContext(ctx context.Context) GetApigApiBasicConfigurationsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiBasicConfigurationsConfigurationOutput)
}

// GetApigApiBasicConfigurationsConfigurationArrayInput is an input type that accepts GetApigApiBasicConfigurationsConfigurationArray and GetApigApiBasicConfigurationsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApigApiBasicConfigurationsConfigurationArrayInput` via:
//
//	GetApigApiBasicConfigurationsConfigurationArray{ GetApigApiBasicConfigurationsConfigurationArgs{...} }
type GetApigApiBasicConfigurationsConfigurationArrayInput interface {
	pulumi.Input

	ToGetApigApiBasicConfigurationsConfigurationArrayOutput() GetApigApiBasicConfigurationsConfigurationArrayOutput
	ToGetApigApiBasicConfigurationsConfigurationArrayOutputWithContext(context.Context) GetApigApiBasicConfigurationsConfigurationArrayOutput
}

type GetApigApiBasicConfigurationsConfigurationArray []GetApigApiBasicConfigurationsConfigurationInput

func (GetApigApiBasicConfigurationsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiBasicConfigurationsConfiguration)(nil)).Elem()
}

func (i GetApigApiBasicConfigurationsConfigurationArray) ToGetApigApiBasicConfigurationsConfigurationArrayOutput() GetApigApiBasicConfigurationsConfigurationArrayOutput {
	return i.ToGetApigApiBasicConfigurationsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApigApiBasicConfigurationsConfigurationArray) ToGetApigApiBasicConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetApigApiBasicConfigurationsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiBasicConfigurationsConfigurationArrayOutput)
}

type GetApigApiBasicConfigurationsConfigurationOutput struct{ *pulumi.OutputState }

func (GetApigApiBasicConfigurationsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiBasicConfigurationsConfiguration)(nil)).Elem()
}

func (o GetApigApiBasicConfigurationsConfigurationOutput) ToGetApigApiBasicConfigurationsConfigurationOutput() GetApigApiBasicConfigurationsConfigurationOutput {
	return o
}

func (o GetApigApiBasicConfigurationsConfigurationOutput) ToGetApigApiBasicConfigurationsConfigurationOutputWithContext(ctx context.Context) GetApigApiBasicConfigurationsConfigurationOutput {
	return o
}

// The ID of the authorizer to which the API request used.
func (o GetApigApiBasicConfigurationsConfigurationOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The backend type of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) BackendType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.BackendType }).(pulumi.StringOutput)
}

// Whether CORS is supported.
func (o GetApigApiBasicConfigurationsConfigurationOutput) Cors() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) bool { return v.Cors }).(pulumi.BoolOutput)
}

// The description of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the environment where the API is published.
func (o GetApigApiBasicConfigurationsConfigurationOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.EnvId }).(pulumi.StringOutput)
}

// The name of the environment where the API is published.
func (o GetApigApiBasicConfigurationsConfigurationOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.EnvName }).(pulumi.StringOutput)
}

// The ID of group corresponding to the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of group corresponding to the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.GroupName }).(pulumi.StringOutput)
}

// The version of group corresponding to the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) GroupVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.GroupVersion }).(pulumi.StringOutput)
}

// The ID of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The matching mode of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) Matching() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.Matching }).(pulumi.StringOutput)
}

// The name of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of publish corresponding to the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) PublishId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.PublishId }).(pulumi.StringOutput)
}

// The published time of the API, in RFC3339 format.
func (o GetApigApiBasicConfigurationsConfigurationOutput) PublishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.PublishedAt }).(pulumi.StringOutput)
}

// The registered time of the API, in RFC3339 format.
func (o GetApigApiBasicConfigurationsConfigurationOutput) RegisteredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.RegisteredAt }).(pulumi.StringOutput)
}

// The request method of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// The request address of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) RequestPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.RequestPath }).(pulumi.StringOutput)
}

// The request protocol of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.RequestProtocol }).(pulumi.StringOutput)
}

// The security authentication mode of the API request.
func (o GetApigApiBasicConfigurationsConfigurationOutput) SecurityAuthentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.SecurityAuthentication }).(pulumi.StringOutput)
}

// Whether the authentication of the application code is enabled.
func (o GetApigApiBasicConfigurationsConfigurationOutput) SimpleAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) bool { return v.SimpleAuthentication }).(pulumi.BoolOutput)
}

// The list of tags configuration.
func (o GetApigApiBasicConfigurationsConfigurationOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of the API.
func (o GetApigApiBasicConfigurationsConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the API, in RFC3339 format.
func (o GetApigApiBasicConfigurationsConfigurationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiBasicConfigurationsConfiguration) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetApigApiBasicConfigurationsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiBasicConfigurationsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiBasicConfigurationsConfiguration)(nil)).Elem()
}

func (o GetApigApiBasicConfigurationsConfigurationArrayOutput) ToGetApigApiBasicConfigurationsConfigurationArrayOutput() GetApigApiBasicConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetApigApiBasicConfigurationsConfigurationArrayOutput) ToGetApigApiBasicConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetApigApiBasicConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetApigApiBasicConfigurationsConfigurationArrayOutput) Index(i pulumi.IntInput) GetApigApiBasicConfigurationsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiBasicConfigurationsConfiguration {
		return vs[0].([]GetApigApiBasicConfigurationsConfiguration)[vs[1].(int)]
	}).(GetApigApiBasicConfigurationsConfigurationOutput)
}

type GetApigApiFuncGraph struct {
	// The ID of the backend custom authorization.
	AuthorizerId string `pulumi:"authorizerId"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn string `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The ID of the FunctionGraph backend configuration.
	Id string `pulumi:"id"`
	// The invocation type.
	InvocationType string `pulumi:"invocationType"`
	// The network architecture (framework) type of the FunctionGraph function.
	NetworkType string `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol string `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout int `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version string `pulumi:"version"`
}

// GetApigApiFuncGraphInput is an input type that accepts GetApigApiFuncGraphArgs and GetApigApiFuncGraphOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphInput` via:
//
//	GetApigApiFuncGraphArgs{...}
type GetApigApiFuncGraphInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphOutput() GetApigApiFuncGraphOutput
	ToGetApigApiFuncGraphOutputWithContext(context.Context) GetApigApiFuncGraphOutput
}

type GetApigApiFuncGraphArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn pulumi.StringInput `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn pulumi.StringInput `pulumi:"functionUrn"`
	// The ID of the FunctionGraph backend configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The invocation type.
	InvocationType pulumi.StringInput `pulumi:"invocationType"`
	// The network architecture (framework) type of the FunctionGraph function.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol pulumi.StringInput `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetApigApiFuncGraphArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraph)(nil)).Elem()
}

func (i GetApigApiFuncGraphArgs) ToGetApigApiFuncGraphOutput() GetApigApiFuncGraphOutput {
	return i.ToGetApigApiFuncGraphOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphArgs) ToGetApigApiFuncGraphOutputWithContext(ctx context.Context) GetApigApiFuncGraphOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphOutput)
}

// GetApigApiFuncGraphArrayInput is an input type that accepts GetApigApiFuncGraphArray and GetApigApiFuncGraphArrayOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphArrayInput` via:
//
//	GetApigApiFuncGraphArray{ GetApigApiFuncGraphArgs{...} }
type GetApigApiFuncGraphArrayInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphArrayOutput() GetApigApiFuncGraphArrayOutput
	ToGetApigApiFuncGraphArrayOutputWithContext(context.Context) GetApigApiFuncGraphArrayOutput
}

type GetApigApiFuncGraphArray []GetApigApiFuncGraphInput

func (GetApigApiFuncGraphArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraph)(nil)).Elem()
}

func (i GetApigApiFuncGraphArray) ToGetApigApiFuncGraphArrayOutput() GetApigApiFuncGraphArrayOutput {
	return i.ToGetApigApiFuncGraphArrayOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphArray) ToGetApigApiFuncGraphArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphArrayOutput)
}

type GetApigApiFuncGraphOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraph)(nil)).Elem()
}

func (o GetApigApiFuncGraphOutput) ToGetApigApiFuncGraphOutput() GetApigApiFuncGraphOutput {
	return o
}

func (o GetApigApiFuncGraphOutput) ToGetApigApiFuncGraphOutputWithContext(ctx context.Context) GetApigApiFuncGraphOutput {
	return o
}

// The ID of the backend custom authorization.
func (o GetApigApiFuncGraphOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The alias URN of the FunctionGraph function.
func (o GetApigApiFuncGraphOutput) FunctionAliasUrn() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.FunctionAliasUrn }).(pulumi.StringOutput)
}

// The URN of the FunctionGraph function.
func (o GetApigApiFuncGraphOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The ID of the FunctionGraph backend configuration.
func (o GetApigApiFuncGraphOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.Id }).(pulumi.StringOutput)
}

// The invocation type.
func (o GetApigApiFuncGraphOutput) InvocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.InvocationType }).(pulumi.StringOutput)
}

// The network architecture (framework) type of the FunctionGraph function.
func (o GetApigApiFuncGraphOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The request protocol of the FunctionGraph function.
func (o GetApigApiFuncGraphOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.RequestProtocol }).(pulumi.StringOutput)
}

// The timeout for API requests to backend service.
func (o GetApigApiFuncGraphOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) int { return v.Timeout }).(pulumi.IntOutput)
}

// The version of the FunctionGraph function.
func (o GetApigApiFuncGraphOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraph) string { return v.Version }).(pulumi.StringOutput)
}

type GetApigApiFuncGraphArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraph)(nil)).Elem()
}

func (o GetApigApiFuncGraphArrayOutput) ToGetApigApiFuncGraphArrayOutput() GetApigApiFuncGraphArrayOutput {
	return o
}

func (o GetApigApiFuncGraphArrayOutput) ToGetApigApiFuncGraphArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphArrayOutput {
	return o
}

func (o GetApigApiFuncGraphArrayOutput) Index(i pulumi.IntInput) GetApigApiFuncGraphOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiFuncGraph {
		return vs[0].([]GetApigApiFuncGraph)[vs[1].(int)]
	}).(GetApigApiFuncGraphOutput)
}

type GetApigApiFuncGraphPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId string `pulumi:"authorizerId"`
	// The configaiton list of the backend parameters.
	BackendParams []GetApigApiFuncGraphPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []GetApigApiFuncGraphPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode string `pulumi:"effectiveMode"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn string `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The ID of the FunctionGraph backend policy.
	Id string `pulumi:"id"`
	// The invocation mode of the FunctionGraph function.
	InvocationType string `pulumi:"invocationType"`
	// The name of the backend policy.
	Name string `pulumi:"name"`
	// The network (framework) type of the FunctionGraph function.
	NetworkType string `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol string `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout int `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version string `pulumi:"version"`
}

// GetApigApiFuncGraphPolicyInput is an input type that accepts GetApigApiFuncGraphPolicyArgs and GetApigApiFuncGraphPolicyOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphPolicyInput` via:
//
//	GetApigApiFuncGraphPolicyArgs{...}
type GetApigApiFuncGraphPolicyInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphPolicyOutput() GetApigApiFuncGraphPolicyOutput
	ToGetApigApiFuncGraphPolicyOutputWithContext(context.Context) GetApigApiFuncGraphPolicyOutput
}

type GetApigApiFuncGraphPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The configaiton list of the backend parameters.
	BackendParams GetApigApiFuncGraphPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions GetApigApiFuncGraphPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringInput `pulumi:"effectiveMode"`
	// The alias URN of the FunctionGraph function.
	FunctionAliasUrn pulumi.StringInput `pulumi:"functionAliasUrn"`
	// The URN of the FunctionGraph function.
	FunctionUrn pulumi.StringInput `pulumi:"functionUrn"`
	// The ID of the FunctionGraph backend policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The invocation mode of the FunctionGraph function.
	InvocationType pulumi.StringInput `pulumi:"invocationType"`
	// The name of the backend policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The network (framework) type of the FunctionGraph function.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The request protocol of the FunctionGraph function.
	RequestProtocol pulumi.StringInput `pulumi:"requestProtocol"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The version of the FunctionGraph function.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetApigApiFuncGraphPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraphPolicy)(nil)).Elem()
}

func (i GetApigApiFuncGraphPolicyArgs) ToGetApigApiFuncGraphPolicyOutput() GetApigApiFuncGraphPolicyOutput {
	return i.ToGetApigApiFuncGraphPolicyOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphPolicyArgs) ToGetApigApiFuncGraphPolicyOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphPolicyOutput)
}

// GetApigApiFuncGraphPolicyArrayInput is an input type that accepts GetApigApiFuncGraphPolicyArray and GetApigApiFuncGraphPolicyArrayOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphPolicyArrayInput` via:
//
//	GetApigApiFuncGraphPolicyArray{ GetApigApiFuncGraphPolicyArgs{...} }
type GetApigApiFuncGraphPolicyArrayInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphPolicyArrayOutput() GetApigApiFuncGraphPolicyArrayOutput
	ToGetApigApiFuncGraphPolicyArrayOutputWithContext(context.Context) GetApigApiFuncGraphPolicyArrayOutput
}

type GetApigApiFuncGraphPolicyArray []GetApigApiFuncGraphPolicyInput

func (GetApigApiFuncGraphPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraphPolicy)(nil)).Elem()
}

func (i GetApigApiFuncGraphPolicyArray) ToGetApigApiFuncGraphPolicyArrayOutput() GetApigApiFuncGraphPolicyArrayOutput {
	return i.ToGetApigApiFuncGraphPolicyArrayOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphPolicyArray) ToGetApigApiFuncGraphPolicyArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphPolicyArrayOutput)
}

type GetApigApiFuncGraphPolicyOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraphPolicy)(nil)).Elem()
}

func (o GetApigApiFuncGraphPolicyOutput) ToGetApigApiFuncGraphPolicyOutput() GetApigApiFuncGraphPolicyOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyOutput) ToGetApigApiFuncGraphPolicyOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o GetApigApiFuncGraphPolicyOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The configaiton list of the backend parameters.
func (o GetApigApiFuncGraphPolicyOutput) BackendParams() GetApigApiFuncGraphPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) []GetApigApiFuncGraphPolicyBackendParam { return v.BackendParams }).(GetApigApiFuncGraphPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o GetApigApiFuncGraphPolicyOutput) Conditions() GetApigApiFuncGraphPolicyConditionArrayOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) []GetApigApiFuncGraphPolicyCondition { return v.Conditions }).(GetApigApiFuncGraphPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o GetApigApiFuncGraphPolicyOutput) EffectiveMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.EffectiveMode }).(pulumi.StringOutput)
}

// The alias URN of the FunctionGraph function.
func (o GetApigApiFuncGraphPolicyOutput) FunctionAliasUrn() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.FunctionAliasUrn }).(pulumi.StringOutput)
}

// The URN of the FunctionGraph function.
func (o GetApigApiFuncGraphPolicyOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The ID of the FunctionGraph backend policy.
func (o GetApigApiFuncGraphPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The invocation mode of the FunctionGraph function.
func (o GetApigApiFuncGraphPolicyOutput) InvocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.InvocationType }).(pulumi.StringOutput)
}

// The name of the backend policy.
func (o GetApigApiFuncGraphPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The network (framework) type of the FunctionGraph function.
func (o GetApigApiFuncGraphPolicyOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The request protocol of the FunctionGraph function.
func (o GetApigApiFuncGraphPolicyOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.RequestProtocol }).(pulumi.StringOutput)
}

// The timeout for API requests to backend service.
func (o GetApigApiFuncGraphPolicyOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) int { return v.Timeout }).(pulumi.IntOutput)
}

// The version of the FunctionGraph function.
func (o GetApigApiFuncGraphPolicyOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicy) string { return v.Version }).(pulumi.StringOutput)
}

type GetApigApiFuncGraphPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraphPolicy)(nil)).Elem()
}

func (o GetApigApiFuncGraphPolicyArrayOutput) ToGetApigApiFuncGraphPolicyArrayOutput() GetApigApiFuncGraphPolicyArrayOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyArrayOutput) ToGetApigApiFuncGraphPolicyArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyArrayOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyArrayOutput) Index(i pulumi.IntInput) GetApigApiFuncGraphPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiFuncGraphPolicy {
		return vs[0].([]GetApigApiFuncGraphPolicy)[vs[1].(int)]
	}).(GetApigApiFuncGraphPolicyOutput)
}

type GetApigApiFuncGraphPolicyBackendParam struct {
	// The description of the constant or system parameter.
	Description string `pulumi:"description"`
	// The ID of the backend parameter.
	Id string `pulumi:"id"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The name of parameter.
	Name string `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId string `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType string `pulumi:"systemParamType"`
	// The name of parameter.
	Type string `pulumi:"type"`
	// The value of the parameter.
	Value string `pulumi:"value"`
}

// GetApigApiFuncGraphPolicyBackendParamInput is an input type that accepts GetApigApiFuncGraphPolicyBackendParamArgs and GetApigApiFuncGraphPolicyBackendParamOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphPolicyBackendParamInput` via:
//
//	GetApigApiFuncGraphPolicyBackendParamArgs{...}
type GetApigApiFuncGraphPolicyBackendParamInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphPolicyBackendParamOutput() GetApigApiFuncGraphPolicyBackendParamOutput
	ToGetApigApiFuncGraphPolicyBackendParamOutputWithContext(context.Context) GetApigApiFuncGraphPolicyBackendParamOutput
}

type GetApigApiFuncGraphPolicyBackendParamArgs struct {
	// The description of the constant or system parameter.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the backend parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType pulumi.StringInput `pulumi:"systemParamType"`
	// The name of parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiFuncGraphPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (i GetApigApiFuncGraphPolicyBackendParamArgs) ToGetApigApiFuncGraphPolicyBackendParamOutput() GetApigApiFuncGraphPolicyBackendParamOutput {
	return i.ToGetApigApiFuncGraphPolicyBackendParamOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphPolicyBackendParamArgs) ToGetApigApiFuncGraphPolicyBackendParamOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphPolicyBackendParamOutput)
}

// GetApigApiFuncGraphPolicyBackendParamArrayInput is an input type that accepts GetApigApiFuncGraphPolicyBackendParamArray and GetApigApiFuncGraphPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphPolicyBackendParamArrayInput` via:
//
//	GetApigApiFuncGraphPolicyBackendParamArray{ GetApigApiFuncGraphPolicyBackendParamArgs{...} }
type GetApigApiFuncGraphPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphPolicyBackendParamArrayOutput() GetApigApiFuncGraphPolicyBackendParamArrayOutput
	ToGetApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(context.Context) GetApigApiFuncGraphPolicyBackendParamArrayOutput
}

type GetApigApiFuncGraphPolicyBackendParamArray []GetApigApiFuncGraphPolicyBackendParamInput

func (GetApigApiFuncGraphPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (i GetApigApiFuncGraphPolicyBackendParamArray) ToGetApigApiFuncGraphPolicyBackendParamArrayOutput() GetApigApiFuncGraphPolicyBackendParamArrayOutput {
	return i.ToGetApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphPolicyBackendParamArray) ToGetApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphPolicyBackendParamArrayOutput)
}

type GetApigApiFuncGraphPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (o GetApigApiFuncGraphPolicyBackendParamOutput) ToGetApigApiFuncGraphPolicyBackendParamOutput() GetApigApiFuncGraphPolicyBackendParamOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyBackendParamOutput) ToGetApigApiFuncGraphPolicyBackendParamOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyBackendParamOutput {
	return o
}

// The description of the constant or system parameter.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the backend parameter.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.Id }).(pulumi.StringOutput)
}

// Where the parameter is located.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the corresponding request parameter.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.RequestId }).(pulumi.StringOutput)
}

// The type of the system parameter.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) SystemParamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.SystemParamType }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter.
func (o GetApigApiFuncGraphPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiFuncGraphPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraphPolicyBackendParam)(nil)).Elem()
}

func (o GetApigApiFuncGraphPolicyBackendParamArrayOutput) ToGetApigApiFuncGraphPolicyBackendParamArrayOutput() GetApigApiFuncGraphPolicyBackendParamArrayOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyBackendParamArrayOutput) ToGetApigApiFuncGraphPolicyBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyBackendParamArrayOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) GetApigApiFuncGraphPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiFuncGraphPolicyBackendParam {
		return vs[0].([]GetApigApiFuncGraphPolicyBackendParam)[vs[1].(int)]
	}).(GetApigApiFuncGraphPolicyBackendParamOutput)
}

type GetApigApiFuncGraphPolicyCondition struct {
	// The cookie parameter name.
	CookieName string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName string `pulumi:"frontendAuthorizerName"`
	// The ID of the backend policy condition.
	Id string `pulumi:"id"`
	// The request parameter name.
	ParamName string `pulumi:"paramName"`
	// The ID of the corresponding request parameter.
	RequestId string `pulumi:"requestId"`
	// The location of the corresponding request parameter.
	RequestLocation string `pulumi:"requestLocation"`
	// The type of the backend policy.
	Source string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName string `pulumi:"sysName"`
	// The condition type of the backend policy.
	Type string `pulumi:"type"`
	// The value corresponding to the parameter name.
	Value string `pulumi:"value"`
}

// GetApigApiFuncGraphPolicyConditionInput is an input type that accepts GetApigApiFuncGraphPolicyConditionArgs and GetApigApiFuncGraphPolicyConditionOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphPolicyConditionInput` via:
//
//	GetApigApiFuncGraphPolicyConditionArgs{...}
type GetApigApiFuncGraphPolicyConditionInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphPolicyConditionOutput() GetApigApiFuncGraphPolicyConditionOutput
	ToGetApigApiFuncGraphPolicyConditionOutputWithContext(context.Context) GetApigApiFuncGraphPolicyConditionOutput
}

type GetApigApiFuncGraphPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringInput `pulumi:"frontendAuthorizerName"`
	// The ID of the backend policy condition.
	Id pulumi.StringInput `pulumi:"id"`
	// The request parameter name.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The ID of the corresponding request parameter.
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The location of the corresponding request parameter.
	RequestLocation pulumi.StringInput `pulumi:"requestLocation"`
	// The type of the backend policy.
	Source pulumi.StringInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringInput `pulumi:"sysName"`
	// The condition type of the backend policy.
	Type pulumi.StringInput `pulumi:"type"`
	// The value corresponding to the parameter name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiFuncGraphPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (i GetApigApiFuncGraphPolicyConditionArgs) ToGetApigApiFuncGraphPolicyConditionOutput() GetApigApiFuncGraphPolicyConditionOutput {
	return i.ToGetApigApiFuncGraphPolicyConditionOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphPolicyConditionArgs) ToGetApigApiFuncGraphPolicyConditionOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphPolicyConditionOutput)
}

// GetApigApiFuncGraphPolicyConditionArrayInput is an input type that accepts GetApigApiFuncGraphPolicyConditionArray and GetApigApiFuncGraphPolicyConditionArrayOutput values.
// You can construct a concrete instance of `GetApigApiFuncGraphPolicyConditionArrayInput` via:
//
//	GetApigApiFuncGraphPolicyConditionArray{ GetApigApiFuncGraphPolicyConditionArgs{...} }
type GetApigApiFuncGraphPolicyConditionArrayInput interface {
	pulumi.Input

	ToGetApigApiFuncGraphPolicyConditionArrayOutput() GetApigApiFuncGraphPolicyConditionArrayOutput
	ToGetApigApiFuncGraphPolicyConditionArrayOutputWithContext(context.Context) GetApigApiFuncGraphPolicyConditionArrayOutput
}

type GetApigApiFuncGraphPolicyConditionArray []GetApigApiFuncGraphPolicyConditionInput

func (GetApigApiFuncGraphPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (i GetApigApiFuncGraphPolicyConditionArray) ToGetApigApiFuncGraphPolicyConditionArrayOutput() GetApigApiFuncGraphPolicyConditionArrayOutput {
	return i.ToGetApigApiFuncGraphPolicyConditionArrayOutputWithContext(context.Background())
}

func (i GetApigApiFuncGraphPolicyConditionArray) ToGetApigApiFuncGraphPolicyConditionArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiFuncGraphPolicyConditionArrayOutput)
}

type GetApigApiFuncGraphPolicyConditionOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (o GetApigApiFuncGraphPolicyConditionOutput) ToGetApigApiFuncGraphPolicyConditionOutput() GetApigApiFuncGraphPolicyConditionOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyConditionOutput) ToGetApigApiFuncGraphPolicyConditionOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o GetApigApiFuncGraphPolicyConditionOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.CookieName }).(pulumi.StringOutput)
}

// The frontend authentication parameter name.
func (o GetApigApiFuncGraphPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.FrontendAuthorizerName }).(pulumi.StringOutput)
}

// The ID of the backend policy condition.
func (o GetApigApiFuncGraphPolicyConditionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.Id }).(pulumi.StringOutput)
}

// The request parameter name.
func (o GetApigApiFuncGraphPolicyConditionOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.ParamName }).(pulumi.StringOutput)
}

// The ID of the corresponding request parameter.
func (o GetApigApiFuncGraphPolicyConditionOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.RequestId }).(pulumi.StringOutput)
}

// The location of the corresponding request parameter.
func (o GetApigApiFuncGraphPolicyConditionOutput) RequestLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.RequestLocation }).(pulumi.StringOutput)
}

// The type of the backend policy.
func (o GetApigApiFuncGraphPolicyConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.Source }).(pulumi.StringOutput)
}

// The gateway built-in parameter name.
func (o GetApigApiFuncGraphPolicyConditionOutput) SysName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.SysName }).(pulumi.StringOutput)
}

// The condition type of the backend policy.
func (o GetApigApiFuncGraphPolicyConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.Type }).(pulumi.StringOutput)
}

// The value corresponding to the parameter name.
func (o GetApigApiFuncGraphPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiFuncGraphPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiFuncGraphPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiFuncGraphPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiFuncGraphPolicyCondition)(nil)).Elem()
}

func (o GetApigApiFuncGraphPolicyConditionArrayOutput) ToGetApigApiFuncGraphPolicyConditionArrayOutput() GetApigApiFuncGraphPolicyConditionArrayOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyConditionArrayOutput) ToGetApigApiFuncGraphPolicyConditionArrayOutputWithContext(ctx context.Context) GetApigApiFuncGraphPolicyConditionArrayOutput {
	return o
}

func (o GetApigApiFuncGraphPolicyConditionArrayOutput) Index(i pulumi.IntInput) GetApigApiFuncGraphPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiFuncGraphPolicyCondition {
		return vs[0].([]GetApigApiFuncGraphPolicyCondition)[vs[1].(int)]
	}).(GetApigApiFuncGraphPolicyConditionOutput)
}

type GetApigApiMock struct {
	// The ID of the backend custom authorization.
	AuthorizerId string `pulumi:"authorizerId"`
	// The ID of the mock backend configuration.
	Id string `pulumi:"id"`
	// The response of the mock backend configuration.
	Response string `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode int `pulumi:"statusCode"`
}

// GetApigApiMockInput is an input type that accepts GetApigApiMockArgs and GetApigApiMockOutput values.
// You can construct a concrete instance of `GetApigApiMockInput` via:
//
//	GetApigApiMockArgs{...}
type GetApigApiMockInput interface {
	pulumi.Input

	ToGetApigApiMockOutput() GetApigApiMockOutput
	ToGetApigApiMockOutputWithContext(context.Context) GetApigApiMockOutput
}

type GetApigApiMockArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The ID of the mock backend configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The response of the mock backend configuration.
	Response pulumi.StringInput `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (GetApigApiMockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMock)(nil)).Elem()
}

func (i GetApigApiMockArgs) ToGetApigApiMockOutput() GetApigApiMockOutput {
	return i.ToGetApigApiMockOutputWithContext(context.Background())
}

func (i GetApigApiMockArgs) ToGetApigApiMockOutputWithContext(ctx context.Context) GetApigApiMockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockOutput)
}

// GetApigApiMockArrayInput is an input type that accepts GetApigApiMockArray and GetApigApiMockArrayOutput values.
// You can construct a concrete instance of `GetApigApiMockArrayInput` via:
//
//	GetApigApiMockArray{ GetApigApiMockArgs{...} }
type GetApigApiMockArrayInput interface {
	pulumi.Input

	ToGetApigApiMockArrayOutput() GetApigApiMockArrayOutput
	ToGetApigApiMockArrayOutputWithContext(context.Context) GetApigApiMockArrayOutput
}

type GetApigApiMockArray []GetApigApiMockInput

func (GetApigApiMockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMock)(nil)).Elem()
}

func (i GetApigApiMockArray) ToGetApigApiMockArrayOutput() GetApigApiMockArrayOutput {
	return i.ToGetApigApiMockArrayOutputWithContext(context.Background())
}

func (i GetApigApiMockArray) ToGetApigApiMockArrayOutputWithContext(ctx context.Context) GetApigApiMockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockArrayOutput)
}

type GetApigApiMockOutput struct{ *pulumi.OutputState }

func (GetApigApiMockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMock)(nil)).Elem()
}

func (o GetApigApiMockOutput) ToGetApigApiMockOutput() GetApigApiMockOutput {
	return o
}

func (o GetApigApiMockOutput) ToGetApigApiMockOutputWithContext(ctx context.Context) GetApigApiMockOutput {
	return o
}

// The ID of the backend custom authorization.
func (o GetApigApiMockOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMock) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The ID of the mock backend configuration.
func (o GetApigApiMockOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMock) string { return v.Id }).(pulumi.StringOutput)
}

// The response of the mock backend configuration.
func (o GetApigApiMockOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMock) string { return v.Response }).(pulumi.StringOutput)
}

// The custom status code of the mock response.
func (o GetApigApiMockOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiMock) int { return v.StatusCode }).(pulumi.IntOutput)
}

type GetApigApiMockArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiMockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMock)(nil)).Elem()
}

func (o GetApigApiMockArrayOutput) ToGetApigApiMockArrayOutput() GetApigApiMockArrayOutput {
	return o
}

func (o GetApigApiMockArrayOutput) ToGetApigApiMockArrayOutputWithContext(ctx context.Context) GetApigApiMockArrayOutput {
	return o
}

func (o GetApigApiMockArrayOutput) Index(i pulumi.IntInput) GetApigApiMockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiMock {
		return vs[0].([]GetApigApiMock)[vs[1].(int)]
	}).(GetApigApiMockOutput)
}

type GetApigApiMockPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId string `pulumi:"authorizerId"`
	// The configuration list of backend parameters.
	BackendParams []GetApigApiMockPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []GetApigApiMockPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode string `pulumi:"effectiveMode"`
	// The ID of the mock backend policy.
	Id string `pulumi:"id"`
	// The backend policy name.
	Name string `pulumi:"name"`
	// The response of the backend policy.
	Response string `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode int `pulumi:"statusCode"`
}

// GetApigApiMockPolicyInput is an input type that accepts GetApigApiMockPolicyArgs and GetApigApiMockPolicyOutput values.
// You can construct a concrete instance of `GetApigApiMockPolicyInput` via:
//
//	GetApigApiMockPolicyArgs{...}
type GetApigApiMockPolicyInput interface {
	pulumi.Input

	ToGetApigApiMockPolicyOutput() GetApigApiMockPolicyOutput
	ToGetApigApiMockPolicyOutputWithContext(context.Context) GetApigApiMockPolicyOutput
}

type GetApigApiMockPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The configuration list of backend parameters.
	BackendParams GetApigApiMockPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions GetApigApiMockPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringInput `pulumi:"effectiveMode"`
	// The ID of the mock backend policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The backend policy name.
	Name pulumi.StringInput `pulumi:"name"`
	// The response of the backend policy.
	Response pulumi.StringInput `pulumi:"response"`
	// The custom status code of the mock response.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (GetApigApiMockPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMockPolicy)(nil)).Elem()
}

func (i GetApigApiMockPolicyArgs) ToGetApigApiMockPolicyOutput() GetApigApiMockPolicyOutput {
	return i.ToGetApigApiMockPolicyOutputWithContext(context.Background())
}

func (i GetApigApiMockPolicyArgs) ToGetApigApiMockPolicyOutputWithContext(ctx context.Context) GetApigApiMockPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockPolicyOutput)
}

// GetApigApiMockPolicyArrayInput is an input type that accepts GetApigApiMockPolicyArray and GetApigApiMockPolicyArrayOutput values.
// You can construct a concrete instance of `GetApigApiMockPolicyArrayInput` via:
//
//	GetApigApiMockPolicyArray{ GetApigApiMockPolicyArgs{...} }
type GetApigApiMockPolicyArrayInput interface {
	pulumi.Input

	ToGetApigApiMockPolicyArrayOutput() GetApigApiMockPolicyArrayOutput
	ToGetApigApiMockPolicyArrayOutputWithContext(context.Context) GetApigApiMockPolicyArrayOutput
}

type GetApigApiMockPolicyArray []GetApigApiMockPolicyInput

func (GetApigApiMockPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMockPolicy)(nil)).Elem()
}

func (i GetApigApiMockPolicyArray) ToGetApigApiMockPolicyArrayOutput() GetApigApiMockPolicyArrayOutput {
	return i.ToGetApigApiMockPolicyArrayOutputWithContext(context.Background())
}

func (i GetApigApiMockPolicyArray) ToGetApigApiMockPolicyArrayOutputWithContext(ctx context.Context) GetApigApiMockPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockPolicyArrayOutput)
}

type GetApigApiMockPolicyOutput struct{ *pulumi.OutputState }

func (GetApigApiMockPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMockPolicy)(nil)).Elem()
}

func (o GetApigApiMockPolicyOutput) ToGetApigApiMockPolicyOutput() GetApigApiMockPolicyOutput {
	return o
}

func (o GetApigApiMockPolicyOutput) ToGetApigApiMockPolicyOutputWithContext(ctx context.Context) GetApigApiMockPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o GetApigApiMockPolicyOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The configuration list of backend parameters.
func (o GetApigApiMockPolicyOutput) BackendParams() GetApigApiMockPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) []GetApigApiMockPolicyBackendParam { return v.BackendParams }).(GetApigApiMockPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o GetApigApiMockPolicyOutput) Conditions() GetApigApiMockPolicyConditionArrayOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) []GetApigApiMockPolicyCondition { return v.Conditions }).(GetApigApiMockPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o GetApigApiMockPolicyOutput) EffectiveMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) string { return v.EffectiveMode }).(pulumi.StringOutput)
}

// The ID of the mock backend policy.
func (o GetApigApiMockPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The backend policy name.
func (o GetApigApiMockPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The response of the backend policy.
func (o GetApigApiMockPolicyOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) string { return v.Response }).(pulumi.StringOutput)
}

// The custom status code of the mock response.
func (o GetApigApiMockPolicyOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiMockPolicy) int { return v.StatusCode }).(pulumi.IntOutput)
}

type GetApigApiMockPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiMockPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMockPolicy)(nil)).Elem()
}

func (o GetApigApiMockPolicyArrayOutput) ToGetApigApiMockPolicyArrayOutput() GetApigApiMockPolicyArrayOutput {
	return o
}

func (o GetApigApiMockPolicyArrayOutput) ToGetApigApiMockPolicyArrayOutputWithContext(ctx context.Context) GetApigApiMockPolicyArrayOutput {
	return o
}

func (o GetApigApiMockPolicyArrayOutput) Index(i pulumi.IntInput) GetApigApiMockPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiMockPolicy {
		return vs[0].([]GetApigApiMockPolicy)[vs[1].(int)]
	}).(GetApigApiMockPolicyOutput)
}

type GetApigApiMockPolicyBackendParam struct {
	// The description of the constant or system parameter.
	Description string `pulumi:"description"`
	// The ID of the backend parameter.
	Id string `pulumi:"id"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The name of parameter.
	Name string `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId string `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType string `pulumi:"systemParamType"`
	// The name of parameter.
	Type string `pulumi:"type"`
	// The value of the parameter.
	Value string `pulumi:"value"`
}

// GetApigApiMockPolicyBackendParamInput is an input type that accepts GetApigApiMockPolicyBackendParamArgs and GetApigApiMockPolicyBackendParamOutput values.
// You can construct a concrete instance of `GetApigApiMockPolicyBackendParamInput` via:
//
//	GetApigApiMockPolicyBackendParamArgs{...}
type GetApigApiMockPolicyBackendParamInput interface {
	pulumi.Input

	ToGetApigApiMockPolicyBackendParamOutput() GetApigApiMockPolicyBackendParamOutput
	ToGetApigApiMockPolicyBackendParamOutputWithContext(context.Context) GetApigApiMockPolicyBackendParamOutput
}

type GetApigApiMockPolicyBackendParamArgs struct {
	// The description of the constant or system parameter.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the backend parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType pulumi.StringInput `pulumi:"systemParamType"`
	// The name of parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiMockPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (i GetApigApiMockPolicyBackendParamArgs) ToGetApigApiMockPolicyBackendParamOutput() GetApigApiMockPolicyBackendParamOutput {
	return i.ToGetApigApiMockPolicyBackendParamOutputWithContext(context.Background())
}

func (i GetApigApiMockPolicyBackendParamArgs) ToGetApigApiMockPolicyBackendParamOutputWithContext(ctx context.Context) GetApigApiMockPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockPolicyBackendParamOutput)
}

// GetApigApiMockPolicyBackendParamArrayInput is an input type that accepts GetApigApiMockPolicyBackendParamArray and GetApigApiMockPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `GetApigApiMockPolicyBackendParamArrayInput` via:
//
//	GetApigApiMockPolicyBackendParamArray{ GetApigApiMockPolicyBackendParamArgs{...} }
type GetApigApiMockPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToGetApigApiMockPolicyBackendParamArrayOutput() GetApigApiMockPolicyBackendParamArrayOutput
	ToGetApigApiMockPolicyBackendParamArrayOutputWithContext(context.Context) GetApigApiMockPolicyBackendParamArrayOutput
}

type GetApigApiMockPolicyBackendParamArray []GetApigApiMockPolicyBackendParamInput

func (GetApigApiMockPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (i GetApigApiMockPolicyBackendParamArray) ToGetApigApiMockPolicyBackendParamArrayOutput() GetApigApiMockPolicyBackendParamArrayOutput {
	return i.ToGetApigApiMockPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i GetApigApiMockPolicyBackendParamArray) ToGetApigApiMockPolicyBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiMockPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockPolicyBackendParamArrayOutput)
}

type GetApigApiMockPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (GetApigApiMockPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (o GetApigApiMockPolicyBackendParamOutput) ToGetApigApiMockPolicyBackendParamOutput() GetApigApiMockPolicyBackendParamOutput {
	return o
}

func (o GetApigApiMockPolicyBackendParamOutput) ToGetApigApiMockPolicyBackendParamOutputWithContext(ctx context.Context) GetApigApiMockPolicyBackendParamOutput {
	return o
}

// The description of the constant or system parameter.
func (o GetApigApiMockPolicyBackendParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the backend parameter.
func (o GetApigApiMockPolicyBackendParamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.Id }).(pulumi.StringOutput)
}

// Where the parameter is located.
func (o GetApigApiMockPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiMockPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the corresponding request parameter.
func (o GetApigApiMockPolicyBackendParamOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.RequestId }).(pulumi.StringOutput)
}

// The type of the system parameter.
func (o GetApigApiMockPolicyBackendParamOutput) SystemParamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.SystemParamType }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiMockPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter.
func (o GetApigApiMockPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiMockPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiMockPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMockPolicyBackendParam)(nil)).Elem()
}

func (o GetApigApiMockPolicyBackendParamArrayOutput) ToGetApigApiMockPolicyBackendParamArrayOutput() GetApigApiMockPolicyBackendParamArrayOutput {
	return o
}

func (o GetApigApiMockPolicyBackendParamArrayOutput) ToGetApigApiMockPolicyBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiMockPolicyBackendParamArrayOutput {
	return o
}

func (o GetApigApiMockPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) GetApigApiMockPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiMockPolicyBackendParam {
		return vs[0].([]GetApigApiMockPolicyBackendParam)[vs[1].(int)]
	}).(GetApigApiMockPolicyBackendParamOutput)
}

type GetApigApiMockPolicyCondition struct {
	// The cookie parameter name.
	CookieName string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName string `pulumi:"frontendAuthorizerName"`
	// The ID of the backend policy condition.
	Id string `pulumi:"id"`
	// The request parameter name.
	ParamName string `pulumi:"paramName"`
	// The ID of the corresponding request parameter.
	RequestId string `pulumi:"requestId"`
	// The location of the corresponding request parameter.
	RequestLocation string `pulumi:"requestLocation"`
	// The type of the backend policy.
	Source string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName string `pulumi:"sysName"`
	// The condition type of the backend policy.
	Type string `pulumi:"type"`
	// The value corresponding to the parameter name.
	Value string `pulumi:"value"`
}

// GetApigApiMockPolicyConditionInput is an input type that accepts GetApigApiMockPolicyConditionArgs and GetApigApiMockPolicyConditionOutput values.
// You can construct a concrete instance of `GetApigApiMockPolicyConditionInput` via:
//
//	GetApigApiMockPolicyConditionArgs{...}
type GetApigApiMockPolicyConditionInput interface {
	pulumi.Input

	ToGetApigApiMockPolicyConditionOutput() GetApigApiMockPolicyConditionOutput
	ToGetApigApiMockPolicyConditionOutputWithContext(context.Context) GetApigApiMockPolicyConditionOutput
}

type GetApigApiMockPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringInput `pulumi:"frontendAuthorizerName"`
	// The ID of the backend policy condition.
	Id pulumi.StringInput `pulumi:"id"`
	// The request parameter name.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The ID of the corresponding request parameter.
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The location of the corresponding request parameter.
	RequestLocation pulumi.StringInput `pulumi:"requestLocation"`
	// The type of the backend policy.
	Source pulumi.StringInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringInput `pulumi:"sysName"`
	// The condition type of the backend policy.
	Type pulumi.StringInput `pulumi:"type"`
	// The value corresponding to the parameter name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiMockPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMockPolicyCondition)(nil)).Elem()
}

func (i GetApigApiMockPolicyConditionArgs) ToGetApigApiMockPolicyConditionOutput() GetApigApiMockPolicyConditionOutput {
	return i.ToGetApigApiMockPolicyConditionOutputWithContext(context.Background())
}

func (i GetApigApiMockPolicyConditionArgs) ToGetApigApiMockPolicyConditionOutputWithContext(ctx context.Context) GetApigApiMockPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockPolicyConditionOutput)
}

// GetApigApiMockPolicyConditionArrayInput is an input type that accepts GetApigApiMockPolicyConditionArray and GetApigApiMockPolicyConditionArrayOutput values.
// You can construct a concrete instance of `GetApigApiMockPolicyConditionArrayInput` via:
//
//	GetApigApiMockPolicyConditionArray{ GetApigApiMockPolicyConditionArgs{...} }
type GetApigApiMockPolicyConditionArrayInput interface {
	pulumi.Input

	ToGetApigApiMockPolicyConditionArrayOutput() GetApigApiMockPolicyConditionArrayOutput
	ToGetApigApiMockPolicyConditionArrayOutputWithContext(context.Context) GetApigApiMockPolicyConditionArrayOutput
}

type GetApigApiMockPolicyConditionArray []GetApigApiMockPolicyConditionInput

func (GetApigApiMockPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMockPolicyCondition)(nil)).Elem()
}

func (i GetApigApiMockPolicyConditionArray) ToGetApigApiMockPolicyConditionArrayOutput() GetApigApiMockPolicyConditionArrayOutput {
	return i.ToGetApigApiMockPolicyConditionArrayOutputWithContext(context.Background())
}

func (i GetApigApiMockPolicyConditionArray) ToGetApigApiMockPolicyConditionArrayOutputWithContext(ctx context.Context) GetApigApiMockPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiMockPolicyConditionArrayOutput)
}

type GetApigApiMockPolicyConditionOutput struct{ *pulumi.OutputState }

func (GetApigApiMockPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiMockPolicyCondition)(nil)).Elem()
}

func (o GetApigApiMockPolicyConditionOutput) ToGetApigApiMockPolicyConditionOutput() GetApigApiMockPolicyConditionOutput {
	return o
}

func (o GetApigApiMockPolicyConditionOutput) ToGetApigApiMockPolicyConditionOutputWithContext(ctx context.Context) GetApigApiMockPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o GetApigApiMockPolicyConditionOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.CookieName }).(pulumi.StringOutput)
}

// The frontend authentication parameter name.
func (o GetApigApiMockPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.FrontendAuthorizerName }).(pulumi.StringOutput)
}

// The ID of the backend policy condition.
func (o GetApigApiMockPolicyConditionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.Id }).(pulumi.StringOutput)
}

// The request parameter name.
func (o GetApigApiMockPolicyConditionOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.ParamName }).(pulumi.StringOutput)
}

// The ID of the corresponding request parameter.
func (o GetApigApiMockPolicyConditionOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.RequestId }).(pulumi.StringOutput)
}

// The location of the corresponding request parameter.
func (o GetApigApiMockPolicyConditionOutput) RequestLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.RequestLocation }).(pulumi.StringOutput)
}

// The type of the backend policy.
func (o GetApigApiMockPolicyConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.Source }).(pulumi.StringOutput)
}

// The gateway built-in parameter name.
func (o GetApigApiMockPolicyConditionOutput) SysName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.SysName }).(pulumi.StringOutput)
}

// The condition type of the backend policy.
func (o GetApigApiMockPolicyConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.Type }).(pulumi.StringOutput)
}

// The value corresponding to the parameter name.
func (o GetApigApiMockPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiMockPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiMockPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiMockPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiMockPolicyCondition)(nil)).Elem()
}

func (o GetApigApiMockPolicyConditionArrayOutput) ToGetApigApiMockPolicyConditionArrayOutput() GetApigApiMockPolicyConditionArrayOutput {
	return o
}

func (o GetApigApiMockPolicyConditionArrayOutput) ToGetApigApiMockPolicyConditionArrayOutputWithContext(ctx context.Context) GetApigApiMockPolicyConditionArrayOutput {
	return o
}

func (o GetApigApiMockPolicyConditionArrayOutput) Index(i pulumi.IntInput) GetApigApiMockPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiMockPolicyCondition {
		return vs[0].([]GetApigApiMockPolicyCondition)[vs[1].(int)]
	}).(GetApigApiMockPolicyConditionOutput)
}

type GetApigApiRequestParam struct {
	// The default value of the parameter.
	Default string `pulumi:"default"`
	// The parameter description.
	Description string `pulumi:"description"`
	// The enumerated value.
	Enumeration string `pulumi:"enumeration"`
	// The parameter example.
	Example string `pulumi:"example"`
	// The ID of the request parameter.
	Id string `pulumi:"id"`
	// Where this parameter is located.
	Location string `pulumi:"location"`
	// The maximum value or length (string parameter) for parameter.
	Maximum int `pulumi:"maximum"`
	// The minimum value or length (string parameter) for parameter.
	Minimum int `pulumi:"minimum"`
	// The name of the request parameter.
	Name string `pulumi:"name"`
	// Whether to transparently transfer the parameter.
	Passthrough bool `pulumi:"passthrough"`
	// Whether this parameter is required.
	Required bool `pulumi:"required"`
	// The parameter type.
	Type string `pulumi:"type"`
	// Whether to enable the parameter validation.
	ValidEnable int `pulumi:"validEnable"`
}

// GetApigApiRequestParamInput is an input type that accepts GetApigApiRequestParamArgs and GetApigApiRequestParamOutput values.
// You can construct a concrete instance of `GetApigApiRequestParamInput` via:
//
//	GetApigApiRequestParamArgs{...}
type GetApigApiRequestParamInput interface {
	pulumi.Input

	ToGetApigApiRequestParamOutput() GetApigApiRequestParamOutput
	ToGetApigApiRequestParamOutputWithContext(context.Context) GetApigApiRequestParamOutput
}

type GetApigApiRequestParamArgs struct {
	// The default value of the parameter.
	Default pulumi.StringInput `pulumi:"default"`
	// The parameter description.
	Description pulumi.StringInput `pulumi:"description"`
	// The enumerated value.
	Enumeration pulumi.StringInput `pulumi:"enumeration"`
	// The parameter example.
	Example pulumi.StringInput `pulumi:"example"`
	// The ID of the request parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// Where this parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The maximum value or length (string parameter) for parameter.
	Maximum pulumi.IntInput `pulumi:"maximum"`
	// The minimum value or length (string parameter) for parameter.
	Minimum pulumi.IntInput `pulumi:"minimum"`
	// The name of the request parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether to transparently transfer the parameter.
	Passthrough pulumi.BoolInput `pulumi:"passthrough"`
	// Whether this parameter is required.
	Required pulumi.BoolInput `pulumi:"required"`
	// The parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// Whether to enable the parameter validation.
	ValidEnable pulumi.IntInput `pulumi:"validEnable"`
}

func (GetApigApiRequestParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiRequestParam)(nil)).Elem()
}

func (i GetApigApiRequestParamArgs) ToGetApigApiRequestParamOutput() GetApigApiRequestParamOutput {
	return i.ToGetApigApiRequestParamOutputWithContext(context.Background())
}

func (i GetApigApiRequestParamArgs) ToGetApigApiRequestParamOutputWithContext(ctx context.Context) GetApigApiRequestParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiRequestParamOutput)
}

// GetApigApiRequestParamArrayInput is an input type that accepts GetApigApiRequestParamArray and GetApigApiRequestParamArrayOutput values.
// You can construct a concrete instance of `GetApigApiRequestParamArrayInput` via:
//
//	GetApigApiRequestParamArray{ GetApigApiRequestParamArgs{...} }
type GetApigApiRequestParamArrayInput interface {
	pulumi.Input

	ToGetApigApiRequestParamArrayOutput() GetApigApiRequestParamArrayOutput
	ToGetApigApiRequestParamArrayOutputWithContext(context.Context) GetApigApiRequestParamArrayOutput
}

type GetApigApiRequestParamArray []GetApigApiRequestParamInput

func (GetApigApiRequestParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiRequestParam)(nil)).Elem()
}

func (i GetApigApiRequestParamArray) ToGetApigApiRequestParamArrayOutput() GetApigApiRequestParamArrayOutput {
	return i.ToGetApigApiRequestParamArrayOutputWithContext(context.Background())
}

func (i GetApigApiRequestParamArray) ToGetApigApiRequestParamArrayOutputWithContext(ctx context.Context) GetApigApiRequestParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiRequestParamArrayOutput)
}

type GetApigApiRequestParamOutput struct{ *pulumi.OutputState }

func (GetApigApiRequestParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiRequestParam)(nil)).Elem()
}

func (o GetApigApiRequestParamOutput) ToGetApigApiRequestParamOutput() GetApigApiRequestParamOutput {
	return o
}

func (o GetApigApiRequestParamOutput) ToGetApigApiRequestParamOutputWithContext(ctx context.Context) GetApigApiRequestParamOutput {
	return o
}

// The default value of the parameter.
func (o GetApigApiRequestParamOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Default }).(pulumi.StringOutput)
}

// The parameter description.
func (o GetApigApiRequestParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Description }).(pulumi.StringOutput)
}

// The enumerated value.
func (o GetApigApiRequestParamOutput) Enumeration() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Enumeration }).(pulumi.StringOutput)
}

// The parameter example.
func (o GetApigApiRequestParamOutput) Example() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Example }).(pulumi.StringOutput)
}

// The ID of the request parameter.
func (o GetApigApiRequestParamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Id }).(pulumi.StringOutput)
}

// Where this parameter is located.
func (o GetApigApiRequestParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Location }).(pulumi.StringOutput)
}

// The maximum value or length (string parameter) for parameter.
func (o GetApigApiRequestParamOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) int { return v.Maximum }).(pulumi.IntOutput)
}

// The minimum value or length (string parameter) for parameter.
func (o GetApigApiRequestParamOutput) Minimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) int { return v.Minimum }).(pulumi.IntOutput)
}

// The name of the request parameter.
func (o GetApigApiRequestParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Name }).(pulumi.StringOutput)
}

// Whether to transparently transfer the parameter.
func (o GetApigApiRequestParamOutput) Passthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) bool { return v.Passthrough }).(pulumi.BoolOutput)
}

// Whether this parameter is required.
func (o GetApigApiRequestParamOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) bool { return v.Required }).(pulumi.BoolOutput)
}

// The parameter type.
func (o GetApigApiRequestParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) string { return v.Type }).(pulumi.StringOutput)
}

// Whether to enable the parameter validation.
func (o GetApigApiRequestParamOutput) ValidEnable() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiRequestParam) int { return v.ValidEnable }).(pulumi.IntOutput)
}

type GetApigApiRequestParamArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiRequestParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiRequestParam)(nil)).Elem()
}

func (o GetApigApiRequestParamArrayOutput) ToGetApigApiRequestParamArrayOutput() GetApigApiRequestParamArrayOutput {
	return o
}

func (o GetApigApiRequestParamArrayOutput) ToGetApigApiRequestParamArrayOutputWithContext(ctx context.Context) GetApigApiRequestParamArrayOutput {
	return o
}

func (o GetApigApiRequestParamArrayOutput) Index(i pulumi.IntInput) GetApigApiRequestParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiRequestParam {
		return vs[0].([]GetApigApiRequestParam)[vs[1].(int)]
	}).(GetApigApiRequestParamOutput)
}

type GetApigApiWeb struct {
	// The ID of the backend custom authorization.
	AuthorizerId string `pulumi:"authorizerId"`
	// The backend service address.
	BackendAddress string `pulumi:"backendAddress"`
	// The proxy host header.
	HostHeader string `pulumi:"hostHeader"`
	// The ID of the backend configuration.
	Id string `pulumi:"id"`
	// The backend request path.
	Path string `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod string `pulumi:"requestMethod"`
	// The web protocol type of the API request.
	RequestProtocol string `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount int `pulumi:"retryCount"`
	// Whether to enable two-way authentication.
	SslEnable bool `pulumi:"sslEnable"`
	// The timeout for API requests to backend service.
	Timeout int `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId string `pulumi:"vpcChannelId"`
}

// GetApigApiWebInput is an input type that accepts GetApigApiWebArgs and GetApigApiWebOutput values.
// You can construct a concrete instance of `GetApigApiWebInput` via:
//
//	GetApigApiWebArgs{...}
type GetApigApiWebInput interface {
	pulumi.Input

	ToGetApigApiWebOutput() GetApigApiWebOutput
	ToGetApigApiWebOutputWithContext(context.Context) GetApigApiWebOutput
}

type GetApigApiWebArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The backend service address.
	BackendAddress pulumi.StringInput `pulumi:"backendAddress"`
	// The proxy host header.
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	// The ID of the backend configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The backend request path.
	Path pulumi.StringInput `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// The web protocol type of the API request.
	RequestProtocol pulumi.StringInput `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
	// Whether to enable two-way authentication.
	SslEnable pulumi.BoolInput `pulumi:"sslEnable"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId pulumi.StringInput `pulumi:"vpcChannelId"`
}

func (GetApigApiWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWeb)(nil)).Elem()
}

func (i GetApigApiWebArgs) ToGetApigApiWebOutput() GetApigApiWebOutput {
	return i.ToGetApigApiWebOutputWithContext(context.Background())
}

func (i GetApigApiWebArgs) ToGetApigApiWebOutputWithContext(ctx context.Context) GetApigApiWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebOutput)
}

// GetApigApiWebArrayInput is an input type that accepts GetApigApiWebArray and GetApigApiWebArrayOutput values.
// You can construct a concrete instance of `GetApigApiWebArrayInput` via:
//
//	GetApigApiWebArray{ GetApigApiWebArgs{...} }
type GetApigApiWebArrayInput interface {
	pulumi.Input

	ToGetApigApiWebArrayOutput() GetApigApiWebArrayOutput
	ToGetApigApiWebArrayOutputWithContext(context.Context) GetApigApiWebArrayOutput
}

type GetApigApiWebArray []GetApigApiWebInput

func (GetApigApiWebArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWeb)(nil)).Elem()
}

func (i GetApigApiWebArray) ToGetApigApiWebArrayOutput() GetApigApiWebArrayOutput {
	return i.ToGetApigApiWebArrayOutputWithContext(context.Background())
}

func (i GetApigApiWebArray) ToGetApigApiWebArrayOutputWithContext(ctx context.Context) GetApigApiWebArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebArrayOutput)
}

type GetApigApiWebOutput struct{ *pulumi.OutputState }

func (GetApigApiWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWeb)(nil)).Elem()
}

func (o GetApigApiWebOutput) ToGetApigApiWebOutput() GetApigApiWebOutput {
	return o
}

func (o GetApigApiWebOutput) ToGetApigApiWebOutputWithContext(ctx context.Context) GetApigApiWebOutput {
	return o
}

// The ID of the backend custom authorization.
func (o GetApigApiWebOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The backend service address.
func (o GetApigApiWebOutput) BackendAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.BackendAddress }).(pulumi.StringOutput)
}

// The proxy host header.
func (o GetApigApiWebOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.HostHeader }).(pulumi.StringOutput)
}

// The ID of the backend configuration.
func (o GetApigApiWebOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.Id }).(pulumi.StringOutput)
}

// The backend request path.
func (o GetApigApiWebOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.Path }).(pulumi.StringOutput)
}

// The backend request method of the API.
func (o GetApigApiWebOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// The web protocol type of the API request.
func (o GetApigApiWebOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.RequestProtocol }).(pulumi.StringOutput)
}

// The number of retry attempts to request the backend service.
func (o GetApigApiWebOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiWeb) int { return v.RetryCount }).(pulumi.IntOutput)
}

// Whether to enable two-way authentication.
func (o GetApigApiWebOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigApiWeb) bool { return v.SslEnable }).(pulumi.BoolOutput)
}

// The timeout for API requests to backend service.
func (o GetApigApiWebOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiWeb) int { return v.Timeout }).(pulumi.IntOutput)
}

// The VPC channel ID.
func (o GetApigApiWebOutput) VpcChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWeb) string { return v.VpcChannelId }).(pulumi.StringOutput)
}

type GetApigApiWebArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiWebArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWeb)(nil)).Elem()
}

func (o GetApigApiWebArrayOutput) ToGetApigApiWebArrayOutput() GetApigApiWebArrayOutput {
	return o
}

func (o GetApigApiWebArrayOutput) ToGetApigApiWebArrayOutputWithContext(ctx context.Context) GetApigApiWebArrayOutput {
	return o
}

func (o GetApigApiWebArrayOutput) Index(i pulumi.IntInput) GetApigApiWebOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiWeb {
		return vs[0].([]GetApigApiWeb)[vs[1].(int)]
	}).(GetApigApiWebOutput)
}

type GetApigApiWebPolicy struct {
	// The ID of the backend custom authorization.
	AuthorizerId string `pulumi:"authorizerId"`
	// The backend service address
	BackendAddress string `pulumi:"backendAddress"`
	// The configuration list of the backend parameters.
	BackendParams []GetApigApiWebPolicyBackendParam `pulumi:"backendParams"`
	// The policy conditions.
	Conditions []GetApigApiWebPolicyCondition `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode string `pulumi:"effectiveMode"`
	// The proxy host header.
	HostHeader string `pulumi:"hostHeader"`
	// The ID of the web policy.
	Id string `pulumi:"id"`
	// The name of the web policy.
	Name string `pulumi:"name"`
	// The backend request address.
	Path string `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod string `pulumi:"requestMethod"`
	// The backend request protocol.
	RequestProtocol string `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount int `pulumi:"retryCount"`
	// The timeout for API requests to backend service.
	Timeout int `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId string `pulumi:"vpcChannelId"`
}

// GetApigApiWebPolicyInput is an input type that accepts GetApigApiWebPolicyArgs and GetApigApiWebPolicyOutput values.
// You can construct a concrete instance of `GetApigApiWebPolicyInput` via:
//
//	GetApigApiWebPolicyArgs{...}
type GetApigApiWebPolicyInput interface {
	pulumi.Input

	ToGetApigApiWebPolicyOutput() GetApigApiWebPolicyOutput
	ToGetApigApiWebPolicyOutputWithContext(context.Context) GetApigApiWebPolicyOutput
}

type GetApigApiWebPolicyArgs struct {
	// The ID of the backend custom authorization.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The backend service address
	BackendAddress pulumi.StringInput `pulumi:"backendAddress"`
	// The configuration list of the backend parameters.
	BackendParams GetApigApiWebPolicyBackendParamArrayInput `pulumi:"backendParams"`
	// The policy conditions.
	Conditions GetApigApiWebPolicyConditionArrayInput `pulumi:"conditions"`
	// The effective mode of the backend policy.
	EffectiveMode pulumi.StringInput `pulumi:"effectiveMode"`
	// The proxy host header.
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	// The ID of the web policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the web policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The backend request address.
	Path pulumi.StringInput `pulumi:"path"`
	// The backend request method of the API.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// The backend request protocol.
	RequestProtocol pulumi.StringInput `pulumi:"requestProtocol"`
	// The number of retry attempts to request the backend service.
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
	// The timeout for API requests to backend service.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The VPC channel ID.
	VpcChannelId pulumi.StringInput `pulumi:"vpcChannelId"`
}

func (GetApigApiWebPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWebPolicy)(nil)).Elem()
}

func (i GetApigApiWebPolicyArgs) ToGetApigApiWebPolicyOutput() GetApigApiWebPolicyOutput {
	return i.ToGetApigApiWebPolicyOutputWithContext(context.Background())
}

func (i GetApigApiWebPolicyArgs) ToGetApigApiWebPolicyOutputWithContext(ctx context.Context) GetApigApiWebPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebPolicyOutput)
}

// GetApigApiWebPolicyArrayInput is an input type that accepts GetApigApiWebPolicyArray and GetApigApiWebPolicyArrayOutput values.
// You can construct a concrete instance of `GetApigApiWebPolicyArrayInput` via:
//
//	GetApigApiWebPolicyArray{ GetApigApiWebPolicyArgs{...} }
type GetApigApiWebPolicyArrayInput interface {
	pulumi.Input

	ToGetApigApiWebPolicyArrayOutput() GetApigApiWebPolicyArrayOutput
	ToGetApigApiWebPolicyArrayOutputWithContext(context.Context) GetApigApiWebPolicyArrayOutput
}

type GetApigApiWebPolicyArray []GetApigApiWebPolicyInput

func (GetApigApiWebPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWebPolicy)(nil)).Elem()
}

func (i GetApigApiWebPolicyArray) ToGetApigApiWebPolicyArrayOutput() GetApigApiWebPolicyArrayOutput {
	return i.ToGetApigApiWebPolicyArrayOutputWithContext(context.Background())
}

func (i GetApigApiWebPolicyArray) ToGetApigApiWebPolicyArrayOutputWithContext(ctx context.Context) GetApigApiWebPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebPolicyArrayOutput)
}

type GetApigApiWebPolicyOutput struct{ *pulumi.OutputState }

func (GetApigApiWebPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWebPolicy)(nil)).Elem()
}

func (o GetApigApiWebPolicyOutput) ToGetApigApiWebPolicyOutput() GetApigApiWebPolicyOutput {
	return o
}

func (o GetApigApiWebPolicyOutput) ToGetApigApiWebPolicyOutputWithContext(ctx context.Context) GetApigApiWebPolicyOutput {
	return o
}

// The ID of the backend custom authorization.
func (o GetApigApiWebPolicyOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The backend service address
func (o GetApigApiWebPolicyOutput) BackendAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.BackendAddress }).(pulumi.StringOutput)
}

// The configuration list of the backend parameters.
func (o GetApigApiWebPolicyOutput) BackendParams() GetApigApiWebPolicyBackendParamArrayOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) []GetApigApiWebPolicyBackendParam { return v.BackendParams }).(GetApigApiWebPolicyBackendParamArrayOutput)
}

// The policy conditions.
func (o GetApigApiWebPolicyOutput) Conditions() GetApigApiWebPolicyConditionArrayOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) []GetApigApiWebPolicyCondition { return v.Conditions }).(GetApigApiWebPolicyConditionArrayOutput)
}

// The effective mode of the backend policy.
func (o GetApigApiWebPolicyOutput) EffectiveMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.EffectiveMode }).(pulumi.StringOutput)
}

// The proxy host header.
func (o GetApigApiWebPolicyOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.HostHeader }).(pulumi.StringOutput)
}

// The ID of the web policy.
func (o GetApigApiWebPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the web policy.
func (o GetApigApiWebPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The backend request address.
func (o GetApigApiWebPolicyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.Path }).(pulumi.StringOutput)
}

// The backend request method of the API.
func (o GetApigApiWebPolicyOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// The backend request protocol.
func (o GetApigApiWebPolicyOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.RequestProtocol }).(pulumi.StringOutput)
}

// The number of retry attempts to request the backend service.
func (o GetApigApiWebPolicyOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) int { return v.RetryCount }).(pulumi.IntOutput)
}

// The timeout for API requests to backend service.
func (o GetApigApiWebPolicyOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) int { return v.Timeout }).(pulumi.IntOutput)
}

// The VPC channel ID.
func (o GetApigApiWebPolicyOutput) VpcChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicy) string { return v.VpcChannelId }).(pulumi.StringOutput)
}

type GetApigApiWebPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiWebPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWebPolicy)(nil)).Elem()
}

func (o GetApigApiWebPolicyArrayOutput) ToGetApigApiWebPolicyArrayOutput() GetApigApiWebPolicyArrayOutput {
	return o
}

func (o GetApigApiWebPolicyArrayOutput) ToGetApigApiWebPolicyArrayOutputWithContext(ctx context.Context) GetApigApiWebPolicyArrayOutput {
	return o
}

func (o GetApigApiWebPolicyArrayOutput) Index(i pulumi.IntInput) GetApigApiWebPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiWebPolicy {
		return vs[0].([]GetApigApiWebPolicy)[vs[1].(int)]
	}).(GetApigApiWebPolicyOutput)
}

type GetApigApiWebPolicyBackendParam struct {
	// The description of the constant or system parameter.
	Description string `pulumi:"description"`
	// The ID of the backend parameter.
	Id string `pulumi:"id"`
	// Where the parameter is located.
	Location string `pulumi:"location"`
	// The name of parameter.
	Name string `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId string `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType string `pulumi:"systemParamType"`
	// The name of parameter.
	Type string `pulumi:"type"`
	// The value of the parameter.
	Value string `pulumi:"value"`
}

// GetApigApiWebPolicyBackendParamInput is an input type that accepts GetApigApiWebPolicyBackendParamArgs and GetApigApiWebPolicyBackendParamOutput values.
// You can construct a concrete instance of `GetApigApiWebPolicyBackendParamInput` via:
//
//	GetApigApiWebPolicyBackendParamArgs{...}
type GetApigApiWebPolicyBackendParamInput interface {
	pulumi.Input

	ToGetApigApiWebPolicyBackendParamOutput() GetApigApiWebPolicyBackendParamOutput
	ToGetApigApiWebPolicyBackendParamOutputWithContext(context.Context) GetApigApiWebPolicyBackendParamOutput
}

type GetApigApiWebPolicyBackendParamArgs struct {
	// The description of the constant or system parameter.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the backend parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// Where the parameter is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the corresponding request parameter.
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The type of the system parameter.
	SystemParamType pulumi.StringInput `pulumi:"systemParamType"`
	// The name of parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiWebPolicyBackendParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (i GetApigApiWebPolicyBackendParamArgs) ToGetApigApiWebPolicyBackendParamOutput() GetApigApiWebPolicyBackendParamOutput {
	return i.ToGetApigApiWebPolicyBackendParamOutputWithContext(context.Background())
}

func (i GetApigApiWebPolicyBackendParamArgs) ToGetApigApiWebPolicyBackendParamOutputWithContext(ctx context.Context) GetApigApiWebPolicyBackendParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebPolicyBackendParamOutput)
}

// GetApigApiWebPolicyBackendParamArrayInput is an input type that accepts GetApigApiWebPolicyBackendParamArray and GetApigApiWebPolicyBackendParamArrayOutput values.
// You can construct a concrete instance of `GetApigApiWebPolicyBackendParamArrayInput` via:
//
//	GetApigApiWebPolicyBackendParamArray{ GetApigApiWebPolicyBackendParamArgs{...} }
type GetApigApiWebPolicyBackendParamArrayInput interface {
	pulumi.Input

	ToGetApigApiWebPolicyBackendParamArrayOutput() GetApigApiWebPolicyBackendParamArrayOutput
	ToGetApigApiWebPolicyBackendParamArrayOutputWithContext(context.Context) GetApigApiWebPolicyBackendParamArrayOutput
}

type GetApigApiWebPolicyBackendParamArray []GetApigApiWebPolicyBackendParamInput

func (GetApigApiWebPolicyBackendParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (i GetApigApiWebPolicyBackendParamArray) ToGetApigApiWebPolicyBackendParamArrayOutput() GetApigApiWebPolicyBackendParamArrayOutput {
	return i.ToGetApigApiWebPolicyBackendParamArrayOutputWithContext(context.Background())
}

func (i GetApigApiWebPolicyBackendParamArray) ToGetApigApiWebPolicyBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiWebPolicyBackendParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebPolicyBackendParamArrayOutput)
}

type GetApigApiWebPolicyBackendParamOutput struct{ *pulumi.OutputState }

func (GetApigApiWebPolicyBackendParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (o GetApigApiWebPolicyBackendParamOutput) ToGetApigApiWebPolicyBackendParamOutput() GetApigApiWebPolicyBackendParamOutput {
	return o
}

func (o GetApigApiWebPolicyBackendParamOutput) ToGetApigApiWebPolicyBackendParamOutputWithContext(ctx context.Context) GetApigApiWebPolicyBackendParamOutput {
	return o
}

// The description of the constant or system parameter.
func (o GetApigApiWebPolicyBackendParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the backend parameter.
func (o GetApigApiWebPolicyBackendParamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.Id }).(pulumi.StringOutput)
}

// Where the parameter is located.
func (o GetApigApiWebPolicyBackendParamOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.Location }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiWebPolicyBackendParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the corresponding request parameter.
func (o GetApigApiWebPolicyBackendParamOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.RequestId }).(pulumi.StringOutput)
}

// The type of the system parameter.
func (o GetApigApiWebPolicyBackendParamOutput) SystemParamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.SystemParamType }).(pulumi.StringOutput)
}

// The name of parameter.
func (o GetApigApiWebPolicyBackendParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the parameter.
func (o GetApigApiWebPolicyBackendParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyBackendParam) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiWebPolicyBackendParamArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiWebPolicyBackendParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWebPolicyBackendParam)(nil)).Elem()
}

func (o GetApigApiWebPolicyBackendParamArrayOutput) ToGetApigApiWebPolicyBackendParamArrayOutput() GetApigApiWebPolicyBackendParamArrayOutput {
	return o
}

func (o GetApigApiWebPolicyBackendParamArrayOutput) ToGetApigApiWebPolicyBackendParamArrayOutputWithContext(ctx context.Context) GetApigApiWebPolicyBackendParamArrayOutput {
	return o
}

func (o GetApigApiWebPolicyBackendParamArrayOutput) Index(i pulumi.IntInput) GetApigApiWebPolicyBackendParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiWebPolicyBackendParam {
		return vs[0].([]GetApigApiWebPolicyBackendParam)[vs[1].(int)]
	}).(GetApigApiWebPolicyBackendParamOutput)
}

type GetApigApiWebPolicyCondition struct {
	// The cookie parameter name.
	CookieName string `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName string `pulumi:"frontendAuthorizerName"`
	// The ID of the backend policy condition.
	Id string `pulumi:"id"`
	// The request parameter name.
	ParamName string `pulumi:"paramName"`
	// The ID of the corresponding request parameter.
	RequestId string `pulumi:"requestId"`
	// The location of the corresponding request parameter.
	RequestLocation string `pulumi:"requestLocation"`
	// The type of the backend policy.
	Source string `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName string `pulumi:"sysName"`
	// The condition type of the backend policy.
	Type string `pulumi:"type"`
	// The value corresponding to the parameter name.
	Value string `pulumi:"value"`
}

// GetApigApiWebPolicyConditionInput is an input type that accepts GetApigApiWebPolicyConditionArgs and GetApigApiWebPolicyConditionOutput values.
// You can construct a concrete instance of `GetApigApiWebPolicyConditionInput` via:
//
//	GetApigApiWebPolicyConditionArgs{...}
type GetApigApiWebPolicyConditionInput interface {
	pulumi.Input

	ToGetApigApiWebPolicyConditionOutput() GetApigApiWebPolicyConditionOutput
	ToGetApigApiWebPolicyConditionOutputWithContext(context.Context) GetApigApiWebPolicyConditionOutput
}

type GetApigApiWebPolicyConditionArgs struct {
	// The cookie parameter name.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The frontend authentication parameter name.
	FrontendAuthorizerName pulumi.StringInput `pulumi:"frontendAuthorizerName"`
	// The ID of the backend policy condition.
	Id pulumi.StringInput `pulumi:"id"`
	// The request parameter name.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The ID of the corresponding request parameter.
	RequestId pulumi.StringInput `pulumi:"requestId"`
	// The location of the corresponding request parameter.
	RequestLocation pulumi.StringInput `pulumi:"requestLocation"`
	// The type of the backend policy.
	Source pulumi.StringInput `pulumi:"source"`
	// The gateway built-in parameter name.
	SysName pulumi.StringInput `pulumi:"sysName"`
	// The condition type of the backend policy.
	Type pulumi.StringInput `pulumi:"type"`
	// The value corresponding to the parameter name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigApiWebPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWebPolicyCondition)(nil)).Elem()
}

func (i GetApigApiWebPolicyConditionArgs) ToGetApigApiWebPolicyConditionOutput() GetApigApiWebPolicyConditionOutput {
	return i.ToGetApigApiWebPolicyConditionOutputWithContext(context.Background())
}

func (i GetApigApiWebPolicyConditionArgs) ToGetApigApiWebPolicyConditionOutputWithContext(ctx context.Context) GetApigApiWebPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebPolicyConditionOutput)
}

// GetApigApiWebPolicyConditionArrayInput is an input type that accepts GetApigApiWebPolicyConditionArray and GetApigApiWebPolicyConditionArrayOutput values.
// You can construct a concrete instance of `GetApigApiWebPolicyConditionArrayInput` via:
//
//	GetApigApiWebPolicyConditionArray{ GetApigApiWebPolicyConditionArgs{...} }
type GetApigApiWebPolicyConditionArrayInput interface {
	pulumi.Input

	ToGetApigApiWebPolicyConditionArrayOutput() GetApigApiWebPolicyConditionArrayOutput
	ToGetApigApiWebPolicyConditionArrayOutputWithContext(context.Context) GetApigApiWebPolicyConditionArrayOutput
}

type GetApigApiWebPolicyConditionArray []GetApigApiWebPolicyConditionInput

func (GetApigApiWebPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWebPolicyCondition)(nil)).Elem()
}

func (i GetApigApiWebPolicyConditionArray) ToGetApigApiWebPolicyConditionArrayOutput() GetApigApiWebPolicyConditionArrayOutput {
	return i.ToGetApigApiWebPolicyConditionArrayOutputWithContext(context.Background())
}

func (i GetApigApiWebPolicyConditionArray) ToGetApigApiWebPolicyConditionArrayOutputWithContext(ctx context.Context) GetApigApiWebPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApiWebPolicyConditionArrayOutput)
}

type GetApigApiWebPolicyConditionOutput struct{ *pulumi.OutputState }

func (GetApigApiWebPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApiWebPolicyCondition)(nil)).Elem()
}

func (o GetApigApiWebPolicyConditionOutput) ToGetApigApiWebPolicyConditionOutput() GetApigApiWebPolicyConditionOutput {
	return o
}

func (o GetApigApiWebPolicyConditionOutput) ToGetApigApiWebPolicyConditionOutputWithContext(ctx context.Context) GetApigApiWebPolicyConditionOutput {
	return o
}

// The cookie parameter name.
func (o GetApigApiWebPolicyConditionOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.CookieName }).(pulumi.StringOutput)
}

// The frontend authentication parameter name.
func (o GetApigApiWebPolicyConditionOutput) FrontendAuthorizerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.FrontendAuthorizerName }).(pulumi.StringOutput)
}

// The ID of the backend policy condition.
func (o GetApigApiWebPolicyConditionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.Id }).(pulumi.StringOutput)
}

// The request parameter name.
func (o GetApigApiWebPolicyConditionOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.ParamName }).(pulumi.StringOutput)
}

// The ID of the corresponding request parameter.
func (o GetApigApiWebPolicyConditionOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.RequestId }).(pulumi.StringOutput)
}

// The location of the corresponding request parameter.
func (o GetApigApiWebPolicyConditionOutput) RequestLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.RequestLocation }).(pulumi.StringOutput)
}

// The type of the backend policy.
func (o GetApigApiWebPolicyConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.Source }).(pulumi.StringOutput)
}

// The gateway built-in parameter name.
func (o GetApigApiWebPolicyConditionOutput) SysName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.SysName }).(pulumi.StringOutput)
}

// The condition type of the backend policy.
func (o GetApigApiWebPolicyConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.Type }).(pulumi.StringOutput)
}

// The value corresponding to the parameter name.
func (o GetApigApiWebPolicyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApiWebPolicyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigApiWebPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (GetApigApiWebPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApiWebPolicyCondition)(nil)).Elem()
}

func (o GetApigApiWebPolicyConditionArrayOutput) ToGetApigApiWebPolicyConditionArrayOutput() GetApigApiWebPolicyConditionArrayOutput {
	return o
}

func (o GetApigApiWebPolicyConditionArrayOutput) ToGetApigApiWebPolicyConditionArrayOutputWithContext(ctx context.Context) GetApigApiWebPolicyConditionArrayOutput {
	return o
}

func (o GetApigApiWebPolicyConditionArrayOutput) Index(i pulumi.IntInput) GetApigApiWebPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApiWebPolicyCondition {
		return vs[0].([]GetApigApiWebPolicyCondition)[vs[1].(int)]
	}).(GetApigApiWebPolicyConditionOutput)
}

type GetApigAppcodesAppcode struct {
	// The ID of the application.
	ApplicationId string `pulumi:"applicationId"`
	// The creation time of the APPCODE, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the APPCODE.
	Id string `pulumi:"id"`
	// The APPCODE value (content).
	Value string `pulumi:"value"`
}

// GetApigAppcodesAppcodeInput is an input type that accepts GetApigAppcodesAppcodeArgs and GetApigAppcodesAppcodeOutput values.
// You can construct a concrete instance of `GetApigAppcodesAppcodeInput` via:
//
//	GetApigAppcodesAppcodeArgs{...}
type GetApigAppcodesAppcodeInput interface {
	pulumi.Input

	ToGetApigAppcodesAppcodeOutput() GetApigAppcodesAppcodeOutput
	ToGetApigAppcodesAppcodeOutputWithContext(context.Context) GetApigAppcodesAppcodeOutput
}

type GetApigAppcodesAppcodeArgs struct {
	// The ID of the application.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The creation time of the APPCODE, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the APPCODE.
	Id pulumi.StringInput `pulumi:"id"`
	// The APPCODE value (content).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigAppcodesAppcodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigAppcodesAppcode)(nil)).Elem()
}

func (i GetApigAppcodesAppcodeArgs) ToGetApigAppcodesAppcodeOutput() GetApigAppcodesAppcodeOutput {
	return i.ToGetApigAppcodesAppcodeOutputWithContext(context.Background())
}

func (i GetApigAppcodesAppcodeArgs) ToGetApigAppcodesAppcodeOutputWithContext(ctx context.Context) GetApigAppcodesAppcodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigAppcodesAppcodeOutput)
}

// GetApigAppcodesAppcodeArrayInput is an input type that accepts GetApigAppcodesAppcodeArray and GetApigAppcodesAppcodeArrayOutput values.
// You can construct a concrete instance of `GetApigAppcodesAppcodeArrayInput` via:
//
//	GetApigAppcodesAppcodeArray{ GetApigAppcodesAppcodeArgs{...} }
type GetApigAppcodesAppcodeArrayInput interface {
	pulumi.Input

	ToGetApigAppcodesAppcodeArrayOutput() GetApigAppcodesAppcodeArrayOutput
	ToGetApigAppcodesAppcodeArrayOutputWithContext(context.Context) GetApigAppcodesAppcodeArrayOutput
}

type GetApigAppcodesAppcodeArray []GetApigAppcodesAppcodeInput

func (GetApigAppcodesAppcodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigAppcodesAppcode)(nil)).Elem()
}

func (i GetApigAppcodesAppcodeArray) ToGetApigAppcodesAppcodeArrayOutput() GetApigAppcodesAppcodeArrayOutput {
	return i.ToGetApigAppcodesAppcodeArrayOutputWithContext(context.Background())
}

func (i GetApigAppcodesAppcodeArray) ToGetApigAppcodesAppcodeArrayOutputWithContext(ctx context.Context) GetApigAppcodesAppcodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigAppcodesAppcodeArrayOutput)
}

type GetApigAppcodesAppcodeOutput struct{ *pulumi.OutputState }

func (GetApigAppcodesAppcodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigAppcodesAppcode)(nil)).Elem()
}

func (o GetApigAppcodesAppcodeOutput) ToGetApigAppcodesAppcodeOutput() GetApigAppcodesAppcodeOutput {
	return o
}

func (o GetApigAppcodesAppcodeOutput) ToGetApigAppcodesAppcodeOutputWithContext(ctx context.Context) GetApigAppcodesAppcodeOutput {
	return o
}

// The ID of the application.
func (o GetApigAppcodesAppcodeOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAppcodesAppcode) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The creation time of the APPCODE, in RFC3339 format.
func (o GetApigAppcodesAppcodeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAppcodesAppcode) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the APPCODE.
func (o GetApigAppcodesAppcodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAppcodesAppcode) string { return v.Id }).(pulumi.StringOutput)
}

// The APPCODE value (content).
func (o GetApigAppcodesAppcodeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigAppcodesAppcode) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigAppcodesAppcodeArrayOutput struct{ *pulumi.OutputState }

func (GetApigAppcodesAppcodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigAppcodesAppcode)(nil)).Elem()
}

func (o GetApigAppcodesAppcodeArrayOutput) ToGetApigAppcodesAppcodeArrayOutput() GetApigAppcodesAppcodeArrayOutput {
	return o
}

func (o GetApigAppcodesAppcodeArrayOutput) ToGetApigAppcodesAppcodeArrayOutputWithContext(ctx context.Context) GetApigAppcodesAppcodeArrayOutput {
	return o
}

func (o GetApigAppcodesAppcodeArrayOutput) Index(i pulumi.IntInput) GetApigAppcodesAppcodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigAppcodesAppcode {
		return vs[0].([]GetApigAppcodesAppcode)[vs[1].(int)]
	}).(GetApigAppcodesAppcodeOutput)
}

type GetApigApplicationQuotasQuota struct {
	// The number of applications bound to the quota policy.
	BoundAppNum int `pulumi:"boundAppNum"`
	// The maximum number of times a application quota can be called.
	CallLimits int `pulumi:"callLimits"`
	// The creation time of the application quota, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the application quota.
	Description string `pulumi:"description"`
	// The ID of the application quota.
	Id string `pulumi:"id"`
	// The name of the application quota.
	Name string `pulumi:"name"`
	// The time limit of a quota.
	TimeInterval int `pulumi:"timeInterval"`
	// The time unit.
	TimeUnit string `pulumi:"timeUnit"`
}

// GetApigApplicationQuotasQuotaInput is an input type that accepts GetApigApplicationQuotasQuotaArgs and GetApigApplicationQuotasQuotaOutput values.
// You can construct a concrete instance of `GetApigApplicationQuotasQuotaInput` via:
//
//	GetApigApplicationQuotasQuotaArgs{...}
type GetApigApplicationQuotasQuotaInput interface {
	pulumi.Input

	ToGetApigApplicationQuotasQuotaOutput() GetApigApplicationQuotasQuotaOutput
	ToGetApigApplicationQuotasQuotaOutputWithContext(context.Context) GetApigApplicationQuotasQuotaOutput
}

type GetApigApplicationQuotasQuotaArgs struct {
	// The number of applications bound to the quota policy.
	BoundAppNum pulumi.IntInput `pulumi:"boundAppNum"`
	// The maximum number of times a application quota can be called.
	CallLimits pulumi.IntInput `pulumi:"callLimits"`
	// The creation time of the application quota, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the application quota.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the application quota.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the application quota.
	Name pulumi.StringInput `pulumi:"name"`
	// The time limit of a quota.
	TimeInterval pulumi.IntInput `pulumi:"timeInterval"`
	// The time unit.
	TimeUnit pulumi.StringInput `pulumi:"timeUnit"`
}

func (GetApigApplicationQuotasQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApplicationQuotasQuota)(nil)).Elem()
}

func (i GetApigApplicationQuotasQuotaArgs) ToGetApigApplicationQuotasQuotaOutput() GetApigApplicationQuotasQuotaOutput {
	return i.ToGetApigApplicationQuotasQuotaOutputWithContext(context.Background())
}

func (i GetApigApplicationQuotasQuotaArgs) ToGetApigApplicationQuotasQuotaOutputWithContext(ctx context.Context) GetApigApplicationQuotasQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApplicationQuotasQuotaOutput)
}

// GetApigApplicationQuotasQuotaArrayInput is an input type that accepts GetApigApplicationQuotasQuotaArray and GetApigApplicationQuotasQuotaArrayOutput values.
// You can construct a concrete instance of `GetApigApplicationQuotasQuotaArrayInput` via:
//
//	GetApigApplicationQuotasQuotaArray{ GetApigApplicationQuotasQuotaArgs{...} }
type GetApigApplicationQuotasQuotaArrayInput interface {
	pulumi.Input

	ToGetApigApplicationQuotasQuotaArrayOutput() GetApigApplicationQuotasQuotaArrayOutput
	ToGetApigApplicationQuotasQuotaArrayOutputWithContext(context.Context) GetApigApplicationQuotasQuotaArrayOutput
}

type GetApigApplicationQuotasQuotaArray []GetApigApplicationQuotasQuotaInput

func (GetApigApplicationQuotasQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApplicationQuotasQuota)(nil)).Elem()
}

func (i GetApigApplicationQuotasQuotaArray) ToGetApigApplicationQuotasQuotaArrayOutput() GetApigApplicationQuotasQuotaArrayOutput {
	return i.ToGetApigApplicationQuotasQuotaArrayOutputWithContext(context.Background())
}

func (i GetApigApplicationQuotasQuotaArray) ToGetApigApplicationQuotasQuotaArrayOutputWithContext(ctx context.Context) GetApigApplicationQuotasQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApplicationQuotasQuotaArrayOutput)
}

type GetApigApplicationQuotasQuotaOutput struct{ *pulumi.OutputState }

func (GetApigApplicationQuotasQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApplicationQuotasQuota)(nil)).Elem()
}

func (o GetApigApplicationQuotasQuotaOutput) ToGetApigApplicationQuotasQuotaOutput() GetApigApplicationQuotasQuotaOutput {
	return o
}

func (o GetApigApplicationQuotasQuotaOutput) ToGetApigApplicationQuotasQuotaOutputWithContext(ctx context.Context) GetApigApplicationQuotasQuotaOutput {
	return o
}

// The number of applications bound to the quota policy.
func (o GetApigApplicationQuotasQuotaOutput) BoundAppNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) int { return v.BoundAppNum }).(pulumi.IntOutput)
}

// The maximum number of times a application quota can be called.
func (o GetApigApplicationQuotasQuotaOutput) CallLimits() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) int { return v.CallLimits }).(pulumi.IntOutput)
}

// The creation time of the application quota, in RFC3339 format.
func (o GetApigApplicationQuotasQuotaOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the application quota.
func (o GetApigApplicationQuotasQuotaOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the application quota.
func (o GetApigApplicationQuotasQuotaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the application quota.
func (o GetApigApplicationQuotasQuotaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) string { return v.Name }).(pulumi.StringOutput)
}

// The time limit of a quota.
func (o GetApigApplicationQuotasQuotaOutput) TimeInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) int { return v.TimeInterval }).(pulumi.IntOutput)
}

// The time unit.
func (o GetApigApplicationQuotasQuotaOutput) TimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationQuotasQuota) string { return v.TimeUnit }).(pulumi.StringOutput)
}

type GetApigApplicationQuotasQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetApigApplicationQuotasQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApplicationQuotasQuota)(nil)).Elem()
}

func (o GetApigApplicationQuotasQuotaArrayOutput) ToGetApigApplicationQuotasQuotaArrayOutput() GetApigApplicationQuotasQuotaArrayOutput {
	return o
}

func (o GetApigApplicationQuotasQuotaArrayOutput) ToGetApigApplicationQuotasQuotaArrayOutputWithContext(ctx context.Context) GetApigApplicationQuotasQuotaArrayOutput {
	return o
}

func (o GetApigApplicationQuotasQuotaArrayOutput) Index(i pulumi.IntInput) GetApigApplicationQuotasQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApplicationQuotasQuota {
		return vs[0].([]GetApigApplicationQuotasQuota)[vs[1].(int)]
	}).(GetApigApplicationQuotasQuotaOutput)
}

type GetApigApplicationsApplication struct {
	// The key of the application.
	AppKey string `pulumi:"appKey"`
	// The secret of the application.
	AppSecret string `pulumi:"appSecret"`
	// The type of the application.
	AppType string `pulumi:"appType"`
	// The number of bound APIs.
	BindNum int `pulumi:"bindNum"`
	// The creation time of the application.
	CreatedAt string `pulumi:"createdAt"`
	// The creator of the application.
	CreatedBy string `pulumi:"createdBy"`
	// The description of the application.
	Description string `pulumi:"description"`
	// The ID of the application.
	Id string `pulumi:"id"`
	// The name of the application.
	Name string `pulumi:"name"`
	// The status of the application.
	Status int `pulumi:"status"`
	// The latest update time of the application.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetApigApplicationsApplicationInput is an input type that accepts GetApigApplicationsApplicationArgs and GetApigApplicationsApplicationOutput values.
// You can construct a concrete instance of `GetApigApplicationsApplicationInput` via:
//
//	GetApigApplicationsApplicationArgs{...}
type GetApigApplicationsApplicationInput interface {
	pulumi.Input

	ToGetApigApplicationsApplicationOutput() GetApigApplicationsApplicationOutput
	ToGetApigApplicationsApplicationOutputWithContext(context.Context) GetApigApplicationsApplicationOutput
}

type GetApigApplicationsApplicationArgs struct {
	// The key of the application.
	AppKey pulumi.StringInput `pulumi:"appKey"`
	// The secret of the application.
	AppSecret pulumi.StringInput `pulumi:"appSecret"`
	// The type of the application.
	AppType pulumi.StringInput `pulumi:"appType"`
	// The number of bound APIs.
	BindNum pulumi.IntInput `pulumi:"bindNum"`
	// The creation time of the application.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The creator of the application.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The description of the application.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the application.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the application.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the application.
	Status pulumi.IntInput `pulumi:"status"`
	// The latest update time of the application.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetApigApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApplicationsApplication)(nil)).Elem()
}

func (i GetApigApplicationsApplicationArgs) ToGetApigApplicationsApplicationOutput() GetApigApplicationsApplicationOutput {
	return i.ToGetApigApplicationsApplicationOutputWithContext(context.Background())
}

func (i GetApigApplicationsApplicationArgs) ToGetApigApplicationsApplicationOutputWithContext(ctx context.Context) GetApigApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApplicationsApplicationOutput)
}

// GetApigApplicationsApplicationArrayInput is an input type that accepts GetApigApplicationsApplicationArray and GetApigApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GetApigApplicationsApplicationArrayInput` via:
//
//	GetApigApplicationsApplicationArray{ GetApigApplicationsApplicationArgs{...} }
type GetApigApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGetApigApplicationsApplicationArrayOutput() GetApigApplicationsApplicationArrayOutput
	ToGetApigApplicationsApplicationArrayOutputWithContext(context.Context) GetApigApplicationsApplicationArrayOutput
}

type GetApigApplicationsApplicationArray []GetApigApplicationsApplicationInput

func (GetApigApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApplicationsApplication)(nil)).Elem()
}

func (i GetApigApplicationsApplicationArray) ToGetApigApplicationsApplicationArrayOutput() GetApigApplicationsApplicationArrayOutput {
	return i.ToGetApigApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GetApigApplicationsApplicationArray) ToGetApigApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApigApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigApplicationsApplicationArrayOutput)
}

type GetApigApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GetApigApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigApplicationsApplication)(nil)).Elem()
}

func (o GetApigApplicationsApplicationOutput) ToGetApigApplicationsApplicationOutput() GetApigApplicationsApplicationOutput {
	return o
}

func (o GetApigApplicationsApplicationOutput) ToGetApigApplicationsApplicationOutputWithContext(ctx context.Context) GetApigApplicationsApplicationOutput {
	return o
}

// The key of the application.
func (o GetApigApplicationsApplicationOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.AppKey }).(pulumi.StringOutput)
}

// The secret of the application.
func (o GetApigApplicationsApplicationOutput) AppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.AppSecret }).(pulumi.StringOutput)
}

// The type of the application.
func (o GetApigApplicationsApplicationOutput) AppType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.AppType }).(pulumi.StringOutput)
}

// The number of bound APIs.
func (o GetApigApplicationsApplicationOutput) BindNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) int { return v.BindNum }).(pulumi.IntOutput)
}

// The creation time of the application.
func (o GetApigApplicationsApplicationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The creator of the application.
func (o GetApigApplicationsApplicationOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of the application.
func (o GetApigApplicationsApplicationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the application.
func (o GetApigApplicationsApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the application.
func (o GetApigApplicationsApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the application.
func (o GetApigApplicationsApplicationOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) int { return v.Status }).(pulumi.IntOutput)
}

// The latest update time of the application.
func (o GetApigApplicationsApplicationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigApplicationsApplication) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetApigApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetApigApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigApplicationsApplication)(nil)).Elem()
}

func (o GetApigApplicationsApplicationArrayOutput) ToGetApigApplicationsApplicationArrayOutput() GetApigApplicationsApplicationArrayOutput {
	return o
}

func (o GetApigApplicationsApplicationArrayOutput) ToGetApigApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApigApplicationsApplicationArrayOutput {
	return o
}

func (o GetApigApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GetApigApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigApplicationsApplication {
		return vs[0].([]GetApigApplicationsApplication)[vs[1].(int)]
	}).(GetApigApplicationsApplicationOutput)
}

type GetApigChannelsVpcChannel struct {
	// The distribution algorithm.
	BalanceStrategy int `pulumi:"balanceStrategy"`
	// The creation time of channel, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the VPC channel.
	Id string `pulumi:"id"`
	// The parameter member groups of the VPC channels.
	MemberGroups []GetApigChannelsVpcChannelMemberGroup `pulumi:"memberGroups"`
	// The member type of the VPC channel.
	MemberType string `pulumi:"memberType"`
	// The name of the VPC channel.
	Name string `pulumi:"name"`
	// The port of the backend server.
	Port int `pulumi:"port"`
	// The type of the VPC channel.
	Type int `pulumi:"type"`
}

// GetApigChannelsVpcChannelInput is an input type that accepts GetApigChannelsVpcChannelArgs and GetApigChannelsVpcChannelOutput values.
// You can construct a concrete instance of `GetApigChannelsVpcChannelInput` via:
//
//	GetApigChannelsVpcChannelArgs{...}
type GetApigChannelsVpcChannelInput interface {
	pulumi.Input

	ToGetApigChannelsVpcChannelOutput() GetApigChannelsVpcChannelOutput
	ToGetApigChannelsVpcChannelOutputWithContext(context.Context) GetApigChannelsVpcChannelOutput
}

type GetApigChannelsVpcChannelArgs struct {
	// The distribution algorithm.
	BalanceStrategy pulumi.IntInput `pulumi:"balanceStrategy"`
	// The creation time of channel, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the VPC channel.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameter member groups of the VPC channels.
	MemberGroups GetApigChannelsVpcChannelMemberGroupArrayInput `pulumi:"memberGroups"`
	// The member type of the VPC channel.
	MemberType pulumi.StringInput `pulumi:"memberType"`
	// The name of the VPC channel.
	Name pulumi.StringInput `pulumi:"name"`
	// The port of the backend server.
	Port pulumi.IntInput `pulumi:"port"`
	// The type of the VPC channel.
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetApigChannelsVpcChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigChannelsVpcChannel)(nil)).Elem()
}

func (i GetApigChannelsVpcChannelArgs) ToGetApigChannelsVpcChannelOutput() GetApigChannelsVpcChannelOutput {
	return i.ToGetApigChannelsVpcChannelOutputWithContext(context.Background())
}

func (i GetApigChannelsVpcChannelArgs) ToGetApigChannelsVpcChannelOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigChannelsVpcChannelOutput)
}

// GetApigChannelsVpcChannelArrayInput is an input type that accepts GetApigChannelsVpcChannelArray and GetApigChannelsVpcChannelArrayOutput values.
// You can construct a concrete instance of `GetApigChannelsVpcChannelArrayInput` via:
//
//	GetApigChannelsVpcChannelArray{ GetApigChannelsVpcChannelArgs{...} }
type GetApigChannelsVpcChannelArrayInput interface {
	pulumi.Input

	ToGetApigChannelsVpcChannelArrayOutput() GetApigChannelsVpcChannelArrayOutput
	ToGetApigChannelsVpcChannelArrayOutputWithContext(context.Context) GetApigChannelsVpcChannelArrayOutput
}

type GetApigChannelsVpcChannelArray []GetApigChannelsVpcChannelInput

func (GetApigChannelsVpcChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigChannelsVpcChannel)(nil)).Elem()
}

func (i GetApigChannelsVpcChannelArray) ToGetApigChannelsVpcChannelArrayOutput() GetApigChannelsVpcChannelArrayOutput {
	return i.ToGetApigChannelsVpcChannelArrayOutputWithContext(context.Background())
}

func (i GetApigChannelsVpcChannelArray) ToGetApigChannelsVpcChannelArrayOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigChannelsVpcChannelArrayOutput)
}

type GetApigChannelsVpcChannelOutput struct{ *pulumi.OutputState }

func (GetApigChannelsVpcChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigChannelsVpcChannel)(nil)).Elem()
}

func (o GetApigChannelsVpcChannelOutput) ToGetApigChannelsVpcChannelOutput() GetApigChannelsVpcChannelOutput {
	return o
}

func (o GetApigChannelsVpcChannelOutput) ToGetApigChannelsVpcChannelOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelOutput {
	return o
}

// The distribution algorithm.
func (o GetApigChannelsVpcChannelOutput) BalanceStrategy() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) int { return v.BalanceStrategy }).(pulumi.IntOutput)
}

// The creation time of channel, in RFC3339 format.
func (o GetApigChannelsVpcChannelOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the VPC channel.
func (o GetApigChannelsVpcChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) string { return v.Id }).(pulumi.StringOutput)
}

// The parameter member groups of the VPC channels.
func (o GetApigChannelsVpcChannelOutput) MemberGroups() GetApigChannelsVpcChannelMemberGroupArrayOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) []GetApigChannelsVpcChannelMemberGroup { return v.MemberGroups }).(GetApigChannelsVpcChannelMemberGroupArrayOutput)
}

// The member type of the VPC channel.
func (o GetApigChannelsVpcChannelOutput) MemberType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) string { return v.MemberType }).(pulumi.StringOutput)
}

// The name of the VPC channel.
func (o GetApigChannelsVpcChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) string { return v.Name }).(pulumi.StringOutput)
}

// The port of the backend server.
func (o GetApigChannelsVpcChannelOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) int { return v.Port }).(pulumi.IntOutput)
}

// The type of the VPC channel.
func (o GetApigChannelsVpcChannelOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannel) int { return v.Type }).(pulumi.IntOutput)
}

type GetApigChannelsVpcChannelArrayOutput struct{ *pulumi.OutputState }

func (GetApigChannelsVpcChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigChannelsVpcChannel)(nil)).Elem()
}

func (o GetApigChannelsVpcChannelArrayOutput) ToGetApigChannelsVpcChannelArrayOutput() GetApigChannelsVpcChannelArrayOutput {
	return o
}

func (o GetApigChannelsVpcChannelArrayOutput) ToGetApigChannelsVpcChannelArrayOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelArrayOutput {
	return o
}

func (o GetApigChannelsVpcChannelArrayOutput) Index(i pulumi.IntInput) GetApigChannelsVpcChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigChannelsVpcChannel {
		return vs[0].([]GetApigChannelsVpcChannel)[vs[1].(int)]
	}).(GetApigChannelsVpcChannelOutput)
}

type GetApigChannelsVpcChannelMemberGroup struct {
	// The description of the member group.
	Description string `pulumi:"description"`
	// The ID of the member group.
	Id string `pulumi:"id"`
	// The microservice tags of the backend server group.
	MicroserviceLabels []GetApigChannelsVpcChannelMemberGroupMicroserviceLabel `pulumi:"microserviceLabels"`
	// The microservice port of the backend server group.
	MicroservicePort int `pulumi:"microservicePort"`
	// The microservice version of the backend server group.
	MicroserviceVersion string `pulumi:"microserviceVersion"`
	// The name of the member group.
	Name string `pulumi:"name"`
	// The weight of the current member group.
	Weight int `pulumi:"weight"`
}

// GetApigChannelsVpcChannelMemberGroupInput is an input type that accepts GetApigChannelsVpcChannelMemberGroupArgs and GetApigChannelsVpcChannelMemberGroupOutput values.
// You can construct a concrete instance of `GetApigChannelsVpcChannelMemberGroupInput` via:
//
//	GetApigChannelsVpcChannelMemberGroupArgs{...}
type GetApigChannelsVpcChannelMemberGroupInput interface {
	pulumi.Input

	ToGetApigChannelsVpcChannelMemberGroupOutput() GetApigChannelsVpcChannelMemberGroupOutput
	ToGetApigChannelsVpcChannelMemberGroupOutputWithContext(context.Context) GetApigChannelsVpcChannelMemberGroupOutput
}

type GetApigChannelsVpcChannelMemberGroupArgs struct {
	// The description of the member group.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the member group.
	Id pulumi.StringInput `pulumi:"id"`
	// The microservice tags of the backend server group.
	MicroserviceLabels GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayInput `pulumi:"microserviceLabels"`
	// The microservice port of the backend server group.
	MicroservicePort pulumi.IntInput `pulumi:"microservicePort"`
	// The microservice version of the backend server group.
	MicroserviceVersion pulumi.StringInput `pulumi:"microserviceVersion"`
	// The name of the member group.
	Name pulumi.StringInput `pulumi:"name"`
	// The weight of the current member group.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetApigChannelsVpcChannelMemberGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroup)(nil)).Elem()
}

func (i GetApigChannelsVpcChannelMemberGroupArgs) ToGetApigChannelsVpcChannelMemberGroupOutput() GetApigChannelsVpcChannelMemberGroupOutput {
	return i.ToGetApigChannelsVpcChannelMemberGroupOutputWithContext(context.Background())
}

func (i GetApigChannelsVpcChannelMemberGroupArgs) ToGetApigChannelsVpcChannelMemberGroupOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigChannelsVpcChannelMemberGroupOutput)
}

// GetApigChannelsVpcChannelMemberGroupArrayInput is an input type that accepts GetApigChannelsVpcChannelMemberGroupArray and GetApigChannelsVpcChannelMemberGroupArrayOutput values.
// You can construct a concrete instance of `GetApigChannelsVpcChannelMemberGroupArrayInput` via:
//
//	GetApigChannelsVpcChannelMemberGroupArray{ GetApigChannelsVpcChannelMemberGroupArgs{...} }
type GetApigChannelsVpcChannelMemberGroupArrayInput interface {
	pulumi.Input

	ToGetApigChannelsVpcChannelMemberGroupArrayOutput() GetApigChannelsVpcChannelMemberGroupArrayOutput
	ToGetApigChannelsVpcChannelMemberGroupArrayOutputWithContext(context.Context) GetApigChannelsVpcChannelMemberGroupArrayOutput
}

type GetApigChannelsVpcChannelMemberGroupArray []GetApigChannelsVpcChannelMemberGroupInput

func (GetApigChannelsVpcChannelMemberGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigChannelsVpcChannelMemberGroup)(nil)).Elem()
}

func (i GetApigChannelsVpcChannelMemberGroupArray) ToGetApigChannelsVpcChannelMemberGroupArrayOutput() GetApigChannelsVpcChannelMemberGroupArrayOutput {
	return i.ToGetApigChannelsVpcChannelMemberGroupArrayOutputWithContext(context.Background())
}

func (i GetApigChannelsVpcChannelMemberGroupArray) ToGetApigChannelsVpcChannelMemberGroupArrayOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigChannelsVpcChannelMemberGroupArrayOutput)
}

type GetApigChannelsVpcChannelMemberGroupOutput struct{ *pulumi.OutputState }

func (GetApigChannelsVpcChannelMemberGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroup)(nil)).Elem()
}

func (o GetApigChannelsVpcChannelMemberGroupOutput) ToGetApigChannelsVpcChannelMemberGroupOutput() GetApigChannelsVpcChannelMemberGroupOutput {
	return o
}

func (o GetApigChannelsVpcChannelMemberGroupOutput) ToGetApigChannelsVpcChannelMemberGroupOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupOutput {
	return o
}

// The description of the member group.
func (o GetApigChannelsVpcChannelMemberGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the member group.
func (o GetApigChannelsVpcChannelMemberGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The microservice tags of the backend server group.
func (o GetApigChannelsVpcChannelMemberGroupOutput) MicroserviceLabels() GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroup) []GetApigChannelsVpcChannelMemberGroupMicroserviceLabel {
		return v.MicroserviceLabels
	}).(GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput)
}

// The microservice port of the backend server group.
func (o GetApigChannelsVpcChannelMemberGroupOutput) MicroservicePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroup) int { return v.MicroservicePort }).(pulumi.IntOutput)
}

// The microservice version of the backend server group.
func (o GetApigChannelsVpcChannelMemberGroupOutput) MicroserviceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroup) string { return v.MicroserviceVersion }).(pulumi.StringOutput)
}

// The name of the member group.
func (o GetApigChannelsVpcChannelMemberGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The weight of the current member group.
func (o GetApigChannelsVpcChannelMemberGroupOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroup) int { return v.Weight }).(pulumi.IntOutput)
}

type GetApigChannelsVpcChannelMemberGroupArrayOutput struct{ *pulumi.OutputState }

func (GetApigChannelsVpcChannelMemberGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigChannelsVpcChannelMemberGroup)(nil)).Elem()
}

func (o GetApigChannelsVpcChannelMemberGroupArrayOutput) ToGetApigChannelsVpcChannelMemberGroupArrayOutput() GetApigChannelsVpcChannelMemberGroupArrayOutput {
	return o
}

func (o GetApigChannelsVpcChannelMemberGroupArrayOutput) ToGetApigChannelsVpcChannelMemberGroupArrayOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupArrayOutput {
	return o
}

func (o GetApigChannelsVpcChannelMemberGroupArrayOutput) Index(i pulumi.IntInput) GetApigChannelsVpcChannelMemberGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigChannelsVpcChannelMemberGroup {
		return vs[0].([]GetApigChannelsVpcChannelMemberGroup)[vs[1].(int)]
	}).(GetApigChannelsVpcChannelMemberGroupOutput)
}

type GetApigChannelsVpcChannelMemberGroupMicroserviceLabel struct {
	// The name of the microservice label.
	Name string `pulumi:"name"`
	// The value of the microservice label.
	Value string `pulumi:"value"`
}

// GetApigChannelsVpcChannelMemberGroupMicroserviceLabelInput is an input type that accepts GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs and GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput values.
// You can construct a concrete instance of `GetApigChannelsVpcChannelMemberGroupMicroserviceLabelInput` via:
//
//	GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs{...}
type GetApigChannelsVpcChannelMemberGroupMicroserviceLabelInput interface {
	pulumi.Input

	ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput() GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput
	ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutputWithContext(context.Context) GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput
}

type GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs struct {
	// The name of the microservice label.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the microservice label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroupMicroserviceLabel)(nil)).Elem()
}

func (i GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput() GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput {
	return i.ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutputWithContext(context.Background())
}

func (i GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput)
}

// GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayInput is an input type that accepts GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArray and GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput values.
// You can construct a concrete instance of `GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayInput` via:
//
//	GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArray{ GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs{...} }
type GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayInput interface {
	pulumi.Input

	ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput() GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput
	ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutputWithContext(context.Context) GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput
}

type GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArray []GetApigChannelsVpcChannelMemberGroupMicroserviceLabelInput

func (GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigChannelsVpcChannelMemberGroupMicroserviceLabel)(nil)).Elem()
}

func (i GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArray) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput() GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput {
	return i.ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutputWithContext(context.Background())
}

func (i GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArray) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput)
}

type GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput struct{ *pulumi.OutputState }

func (GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroupMicroserviceLabel)(nil)).Elem()
}

func (o GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput() GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput {
	return o
}

func (o GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput {
	return o
}

// The name of the microservice label.
func (o GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroupMicroserviceLabel) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the microservice label.
func (o GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigChannelsVpcChannelMemberGroupMicroserviceLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput struct{ *pulumi.OutputState }

func (GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigChannelsVpcChannelMemberGroupMicroserviceLabel)(nil)).Elem()
}

func (o GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput() GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput {
	return o
}

func (o GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput) ToGetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutputWithContext(ctx context.Context) GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput {
	return o
}

func (o GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput) Index(i pulumi.IntInput) GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigChannelsVpcChannelMemberGroupMicroserviceLabel {
		return vs[0].([]GetApigChannelsVpcChannelMemberGroupMicroserviceLabel)[vs[1].(int)]
	}).(GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput)
}

type GetApigCustomAuthorizersAuthorizer struct {
	// The maximum cache age of custom authorizer.
	CacheAge int `pulumi:"cacheAge"`
	// The creation time of custom authorizer.
	CreatedAt string `pulumi:"createdAt"`
	// The version alias URI of the FGS function.
	FunctionAliasUri string `pulumi:"functionAliasUri"`
	// The type of the FGS function.
	FunctionType string `pulumi:"functionType"`
	// The URN of the FGS function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The version of the FGS function.
	FunctionVersion string `pulumi:"functionVersion"`
	// The ID of the custom authorizer.
	Id string `pulumi:"id"`
	// The parameter identities of the custom authorizer.
	Identities []GetApigCustomAuthorizersAuthorizerIdentity `pulumi:"identities"`
	// Whether to send the body of custom authorizer.
	IsBodySend bool `pulumi:"isBodySend"`
	// The name of the custom authorizer.
	Name string `pulumi:"name"`
	// The network architecture types of function.
	NetworkType string `pulumi:"networkType"`
	// The type of the custom authorizer.
	Type string `pulumi:"type"`
	// The user data of custom authorizer.
	UserData string `pulumi:"userData"`
}

// GetApigCustomAuthorizersAuthorizerInput is an input type that accepts GetApigCustomAuthorizersAuthorizerArgs and GetApigCustomAuthorizersAuthorizerOutput values.
// You can construct a concrete instance of `GetApigCustomAuthorizersAuthorizerInput` via:
//
//	GetApigCustomAuthorizersAuthorizerArgs{...}
type GetApigCustomAuthorizersAuthorizerInput interface {
	pulumi.Input

	ToGetApigCustomAuthorizersAuthorizerOutput() GetApigCustomAuthorizersAuthorizerOutput
	ToGetApigCustomAuthorizersAuthorizerOutputWithContext(context.Context) GetApigCustomAuthorizersAuthorizerOutput
}

type GetApigCustomAuthorizersAuthorizerArgs struct {
	// The maximum cache age of custom authorizer.
	CacheAge pulumi.IntInput `pulumi:"cacheAge"`
	// The creation time of custom authorizer.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The version alias URI of the FGS function.
	FunctionAliasUri pulumi.StringInput `pulumi:"functionAliasUri"`
	// The type of the FGS function.
	FunctionType pulumi.StringInput `pulumi:"functionType"`
	// The URN of the FGS function.
	FunctionUrn pulumi.StringInput `pulumi:"functionUrn"`
	// The version of the FGS function.
	FunctionVersion pulumi.StringInput `pulumi:"functionVersion"`
	// The ID of the custom authorizer.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameter identities of the custom authorizer.
	Identities GetApigCustomAuthorizersAuthorizerIdentityArrayInput `pulumi:"identities"`
	// Whether to send the body of custom authorizer.
	IsBodySend pulumi.BoolInput `pulumi:"isBodySend"`
	// The name of the custom authorizer.
	Name pulumi.StringInput `pulumi:"name"`
	// The network architecture types of function.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The type of the custom authorizer.
	Type pulumi.StringInput `pulumi:"type"`
	// The user data of custom authorizer.
	UserData pulumi.StringInput `pulumi:"userData"`
}

func (GetApigCustomAuthorizersAuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigCustomAuthorizersAuthorizer)(nil)).Elem()
}

func (i GetApigCustomAuthorizersAuthorizerArgs) ToGetApigCustomAuthorizersAuthorizerOutput() GetApigCustomAuthorizersAuthorizerOutput {
	return i.ToGetApigCustomAuthorizersAuthorizerOutputWithContext(context.Background())
}

func (i GetApigCustomAuthorizersAuthorizerArgs) ToGetApigCustomAuthorizersAuthorizerOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigCustomAuthorizersAuthorizerOutput)
}

// GetApigCustomAuthorizersAuthorizerArrayInput is an input type that accepts GetApigCustomAuthorizersAuthorizerArray and GetApigCustomAuthorizersAuthorizerArrayOutput values.
// You can construct a concrete instance of `GetApigCustomAuthorizersAuthorizerArrayInput` via:
//
//	GetApigCustomAuthorizersAuthorizerArray{ GetApigCustomAuthorizersAuthorizerArgs{...} }
type GetApigCustomAuthorizersAuthorizerArrayInput interface {
	pulumi.Input

	ToGetApigCustomAuthorizersAuthorizerArrayOutput() GetApigCustomAuthorizersAuthorizerArrayOutput
	ToGetApigCustomAuthorizersAuthorizerArrayOutputWithContext(context.Context) GetApigCustomAuthorizersAuthorizerArrayOutput
}

type GetApigCustomAuthorizersAuthorizerArray []GetApigCustomAuthorizersAuthorizerInput

func (GetApigCustomAuthorizersAuthorizerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigCustomAuthorizersAuthorizer)(nil)).Elem()
}

func (i GetApigCustomAuthorizersAuthorizerArray) ToGetApigCustomAuthorizersAuthorizerArrayOutput() GetApigCustomAuthorizersAuthorizerArrayOutput {
	return i.ToGetApigCustomAuthorizersAuthorizerArrayOutputWithContext(context.Background())
}

func (i GetApigCustomAuthorizersAuthorizerArray) ToGetApigCustomAuthorizersAuthorizerArrayOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigCustomAuthorizersAuthorizerArrayOutput)
}

type GetApigCustomAuthorizersAuthorizerOutput struct{ *pulumi.OutputState }

func (GetApigCustomAuthorizersAuthorizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigCustomAuthorizersAuthorizer)(nil)).Elem()
}

func (o GetApigCustomAuthorizersAuthorizerOutput) ToGetApigCustomAuthorizersAuthorizerOutput() GetApigCustomAuthorizersAuthorizerOutput {
	return o
}

func (o GetApigCustomAuthorizersAuthorizerOutput) ToGetApigCustomAuthorizersAuthorizerOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerOutput {
	return o
}

// The maximum cache age of custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) CacheAge() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) int { return v.CacheAge }).(pulumi.IntOutput)
}

// The creation time of custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The version alias URI of the FGS function.
func (o GetApigCustomAuthorizersAuthorizerOutput) FunctionAliasUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.FunctionAliasUri }).(pulumi.StringOutput)
}

// The type of the FGS function.
func (o GetApigCustomAuthorizersAuthorizerOutput) FunctionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.FunctionType }).(pulumi.StringOutput)
}

// The URN of the FGS function.
func (o GetApigCustomAuthorizersAuthorizerOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The version of the FGS function.
func (o GetApigCustomAuthorizersAuthorizerOutput) FunctionVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.FunctionVersion }).(pulumi.StringOutput)
}

// The ID of the custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.Id }).(pulumi.StringOutput)
}

// The parameter identities of the custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) Identities() GetApigCustomAuthorizersAuthorizerIdentityArrayOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) []GetApigCustomAuthorizersAuthorizerIdentity {
		return v.Identities
	}).(GetApigCustomAuthorizersAuthorizerIdentityArrayOutput)
}

// Whether to send the body of custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) IsBodySend() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) bool { return v.IsBodySend }).(pulumi.BoolOutput)
}

// The name of the custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.Name }).(pulumi.StringOutput)
}

// The network architecture types of function.
func (o GetApigCustomAuthorizersAuthorizerOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The type of the custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.Type }).(pulumi.StringOutput)
}

// The user data of custom authorizer.
func (o GetApigCustomAuthorizersAuthorizerOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizer) string { return v.UserData }).(pulumi.StringOutput)
}

type GetApigCustomAuthorizersAuthorizerArrayOutput struct{ *pulumi.OutputState }

func (GetApigCustomAuthorizersAuthorizerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigCustomAuthorizersAuthorizer)(nil)).Elem()
}

func (o GetApigCustomAuthorizersAuthorizerArrayOutput) ToGetApigCustomAuthorizersAuthorizerArrayOutput() GetApigCustomAuthorizersAuthorizerArrayOutput {
	return o
}

func (o GetApigCustomAuthorizersAuthorizerArrayOutput) ToGetApigCustomAuthorizersAuthorizerArrayOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerArrayOutput {
	return o
}

func (o GetApigCustomAuthorizersAuthorizerArrayOutput) Index(i pulumi.IntInput) GetApigCustomAuthorizersAuthorizerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigCustomAuthorizersAuthorizer {
		return vs[0].([]GetApigCustomAuthorizersAuthorizer)[vs[1].(int)]
	}).(GetApigCustomAuthorizersAuthorizerOutput)
}

type GetApigCustomAuthorizersAuthorizerIdentity struct {
	// The parameter location of identity.
	Location string `pulumi:"location"`
	// The name of the parameter to be verified.
	Name string `pulumi:"name"`
	// The parameter verification expression of identity.
	Validation string `pulumi:"validation"`
}

// GetApigCustomAuthorizersAuthorizerIdentityInput is an input type that accepts GetApigCustomAuthorizersAuthorizerIdentityArgs and GetApigCustomAuthorizersAuthorizerIdentityOutput values.
// You can construct a concrete instance of `GetApigCustomAuthorizersAuthorizerIdentityInput` via:
//
//	GetApigCustomAuthorizersAuthorizerIdentityArgs{...}
type GetApigCustomAuthorizersAuthorizerIdentityInput interface {
	pulumi.Input

	ToGetApigCustomAuthorizersAuthorizerIdentityOutput() GetApigCustomAuthorizersAuthorizerIdentityOutput
	ToGetApigCustomAuthorizersAuthorizerIdentityOutputWithContext(context.Context) GetApigCustomAuthorizersAuthorizerIdentityOutput
}

type GetApigCustomAuthorizersAuthorizerIdentityArgs struct {
	// The parameter location of identity.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the parameter to be verified.
	Name pulumi.StringInput `pulumi:"name"`
	// The parameter verification expression of identity.
	Validation pulumi.StringInput `pulumi:"validation"`
}

func (GetApigCustomAuthorizersAuthorizerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigCustomAuthorizersAuthorizerIdentity)(nil)).Elem()
}

func (i GetApigCustomAuthorizersAuthorizerIdentityArgs) ToGetApigCustomAuthorizersAuthorizerIdentityOutput() GetApigCustomAuthorizersAuthorizerIdentityOutput {
	return i.ToGetApigCustomAuthorizersAuthorizerIdentityOutputWithContext(context.Background())
}

func (i GetApigCustomAuthorizersAuthorizerIdentityArgs) ToGetApigCustomAuthorizersAuthorizerIdentityOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigCustomAuthorizersAuthorizerIdentityOutput)
}

// GetApigCustomAuthorizersAuthorizerIdentityArrayInput is an input type that accepts GetApigCustomAuthorizersAuthorizerIdentityArray and GetApigCustomAuthorizersAuthorizerIdentityArrayOutput values.
// You can construct a concrete instance of `GetApigCustomAuthorizersAuthorizerIdentityArrayInput` via:
//
//	GetApigCustomAuthorizersAuthorizerIdentityArray{ GetApigCustomAuthorizersAuthorizerIdentityArgs{...} }
type GetApigCustomAuthorizersAuthorizerIdentityArrayInput interface {
	pulumi.Input

	ToGetApigCustomAuthorizersAuthorizerIdentityArrayOutput() GetApigCustomAuthorizersAuthorizerIdentityArrayOutput
	ToGetApigCustomAuthorizersAuthorizerIdentityArrayOutputWithContext(context.Context) GetApigCustomAuthorizersAuthorizerIdentityArrayOutput
}

type GetApigCustomAuthorizersAuthorizerIdentityArray []GetApigCustomAuthorizersAuthorizerIdentityInput

func (GetApigCustomAuthorizersAuthorizerIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigCustomAuthorizersAuthorizerIdentity)(nil)).Elem()
}

func (i GetApigCustomAuthorizersAuthorizerIdentityArray) ToGetApigCustomAuthorizersAuthorizerIdentityArrayOutput() GetApigCustomAuthorizersAuthorizerIdentityArrayOutput {
	return i.ToGetApigCustomAuthorizersAuthorizerIdentityArrayOutputWithContext(context.Background())
}

func (i GetApigCustomAuthorizersAuthorizerIdentityArray) ToGetApigCustomAuthorizersAuthorizerIdentityArrayOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigCustomAuthorizersAuthorizerIdentityArrayOutput)
}

type GetApigCustomAuthorizersAuthorizerIdentityOutput struct{ *pulumi.OutputState }

func (GetApigCustomAuthorizersAuthorizerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigCustomAuthorizersAuthorizerIdentity)(nil)).Elem()
}

func (o GetApigCustomAuthorizersAuthorizerIdentityOutput) ToGetApigCustomAuthorizersAuthorizerIdentityOutput() GetApigCustomAuthorizersAuthorizerIdentityOutput {
	return o
}

func (o GetApigCustomAuthorizersAuthorizerIdentityOutput) ToGetApigCustomAuthorizersAuthorizerIdentityOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerIdentityOutput {
	return o
}

// The parameter location of identity.
func (o GetApigCustomAuthorizersAuthorizerIdentityOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizerIdentity) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the parameter to be verified.
func (o GetApigCustomAuthorizersAuthorizerIdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizerIdentity) string { return v.Name }).(pulumi.StringOutput)
}

// The parameter verification expression of identity.
func (o GetApigCustomAuthorizersAuthorizerIdentityOutput) Validation() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigCustomAuthorizersAuthorizerIdentity) string { return v.Validation }).(pulumi.StringOutput)
}

type GetApigCustomAuthorizersAuthorizerIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetApigCustomAuthorizersAuthorizerIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigCustomAuthorizersAuthorizerIdentity)(nil)).Elem()
}

func (o GetApigCustomAuthorizersAuthorizerIdentityArrayOutput) ToGetApigCustomAuthorizersAuthorizerIdentityArrayOutput() GetApigCustomAuthorizersAuthorizerIdentityArrayOutput {
	return o
}

func (o GetApigCustomAuthorizersAuthorizerIdentityArrayOutput) ToGetApigCustomAuthorizersAuthorizerIdentityArrayOutputWithContext(ctx context.Context) GetApigCustomAuthorizersAuthorizerIdentityArrayOutput {
	return o
}

func (o GetApigCustomAuthorizersAuthorizerIdentityArrayOutput) Index(i pulumi.IntInput) GetApigCustomAuthorizersAuthorizerIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigCustomAuthorizersAuthorizerIdentity {
		return vs[0].([]GetApigCustomAuthorizersAuthorizerIdentity)[vs[1].(int)]
	}).(GetApigCustomAuthorizersAuthorizerIdentityOutput)
}

type GetApigEndpointConnectionsConnection struct {
	// The creation time of the endpoint connection, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The IAM account ID of the endpoint connection creator.
	DomainId string `pulumi:"domainId"`
	// The ID of the endpoint connection.
	Id string `pulumi:"id"`
	// The packet ID of the endpoint connection.
	PacketId int `pulumi:"packetId"`
	// The current status of the endpoint connection.
	Status string `pulumi:"status"`
	// The latest time of the endpoint connection, in RFC3339 format.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetApigEndpointConnectionsConnectionInput is an input type that accepts GetApigEndpointConnectionsConnectionArgs and GetApigEndpointConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetApigEndpointConnectionsConnectionInput` via:
//
//	GetApigEndpointConnectionsConnectionArgs{...}
type GetApigEndpointConnectionsConnectionInput interface {
	pulumi.Input

	ToGetApigEndpointConnectionsConnectionOutput() GetApigEndpointConnectionsConnectionOutput
	ToGetApigEndpointConnectionsConnectionOutputWithContext(context.Context) GetApigEndpointConnectionsConnectionOutput
}

type GetApigEndpointConnectionsConnectionArgs struct {
	// The creation time of the endpoint connection, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The IAM account ID of the endpoint connection creator.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// The ID of the endpoint connection.
	Id pulumi.StringInput `pulumi:"id"`
	// The packet ID of the endpoint connection.
	PacketId pulumi.IntInput `pulumi:"packetId"`
	// The current status of the endpoint connection.
	Status pulumi.StringInput `pulumi:"status"`
	// The latest time of the endpoint connection, in RFC3339 format.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetApigEndpointConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigEndpointConnectionsConnection)(nil)).Elem()
}

func (i GetApigEndpointConnectionsConnectionArgs) ToGetApigEndpointConnectionsConnectionOutput() GetApigEndpointConnectionsConnectionOutput {
	return i.ToGetApigEndpointConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetApigEndpointConnectionsConnectionArgs) ToGetApigEndpointConnectionsConnectionOutputWithContext(ctx context.Context) GetApigEndpointConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigEndpointConnectionsConnectionOutput)
}

// GetApigEndpointConnectionsConnectionArrayInput is an input type that accepts GetApigEndpointConnectionsConnectionArray and GetApigEndpointConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetApigEndpointConnectionsConnectionArrayInput` via:
//
//	GetApigEndpointConnectionsConnectionArray{ GetApigEndpointConnectionsConnectionArgs{...} }
type GetApigEndpointConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetApigEndpointConnectionsConnectionArrayOutput() GetApigEndpointConnectionsConnectionArrayOutput
	ToGetApigEndpointConnectionsConnectionArrayOutputWithContext(context.Context) GetApigEndpointConnectionsConnectionArrayOutput
}

type GetApigEndpointConnectionsConnectionArray []GetApigEndpointConnectionsConnectionInput

func (GetApigEndpointConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigEndpointConnectionsConnection)(nil)).Elem()
}

func (i GetApigEndpointConnectionsConnectionArray) ToGetApigEndpointConnectionsConnectionArrayOutput() GetApigEndpointConnectionsConnectionArrayOutput {
	return i.ToGetApigEndpointConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetApigEndpointConnectionsConnectionArray) ToGetApigEndpointConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetApigEndpointConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigEndpointConnectionsConnectionArrayOutput)
}

type GetApigEndpointConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetApigEndpointConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigEndpointConnectionsConnection)(nil)).Elem()
}

func (o GetApigEndpointConnectionsConnectionOutput) ToGetApigEndpointConnectionsConnectionOutput() GetApigEndpointConnectionsConnectionOutput {
	return o
}

func (o GetApigEndpointConnectionsConnectionOutput) ToGetApigEndpointConnectionsConnectionOutputWithContext(ctx context.Context) GetApigEndpointConnectionsConnectionOutput {
	return o
}

// The creation time of the endpoint connection, in RFC3339 format.
func (o GetApigEndpointConnectionsConnectionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEndpointConnectionsConnection) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The IAM account ID of the endpoint connection creator.
func (o GetApigEndpointConnectionsConnectionOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEndpointConnectionsConnection) string { return v.DomainId }).(pulumi.StringOutput)
}

// The ID of the endpoint connection.
func (o GetApigEndpointConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEndpointConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

// The packet ID of the endpoint connection.
func (o GetApigEndpointConnectionsConnectionOutput) PacketId() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigEndpointConnectionsConnection) int { return v.PacketId }).(pulumi.IntOutput)
}

// The current status of the endpoint connection.
func (o GetApigEndpointConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEndpointConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

// The latest time of the endpoint connection, in RFC3339 format.
func (o GetApigEndpointConnectionsConnectionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEndpointConnectionsConnection) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetApigEndpointConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetApigEndpointConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigEndpointConnectionsConnection)(nil)).Elem()
}

func (o GetApigEndpointConnectionsConnectionArrayOutput) ToGetApigEndpointConnectionsConnectionArrayOutput() GetApigEndpointConnectionsConnectionArrayOutput {
	return o
}

func (o GetApigEndpointConnectionsConnectionArrayOutput) ToGetApigEndpointConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetApigEndpointConnectionsConnectionArrayOutput {
	return o
}

func (o GetApigEndpointConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetApigEndpointConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigEndpointConnectionsConnection {
		return vs[0].([]GetApigEndpointConnectionsConnection)[vs[1].(int)]
	}).(GetApigEndpointConnectionsConnectionOutput)
}

type GetApigEnvironmentVariablesVariable struct {
	// The environment ID corresponding to the environment variable.
	EnvId string `pulumi:"envId"`
	// The group ID corresponding to the environment variable.
	GroupId string `pulumi:"groupId"`
	// The ID of the environment variable.
	Id string `pulumi:"id"`
	// The name of the environment variable.
	Name string `pulumi:"name"`
	// The value of the environment variable.
	Value string `pulumi:"value"`
}

// GetApigEnvironmentVariablesVariableInput is an input type that accepts GetApigEnvironmentVariablesVariableArgs and GetApigEnvironmentVariablesVariableOutput values.
// You can construct a concrete instance of `GetApigEnvironmentVariablesVariableInput` via:
//
//	GetApigEnvironmentVariablesVariableArgs{...}
type GetApigEnvironmentVariablesVariableInput interface {
	pulumi.Input

	ToGetApigEnvironmentVariablesVariableOutput() GetApigEnvironmentVariablesVariableOutput
	ToGetApigEnvironmentVariablesVariableOutputWithContext(context.Context) GetApigEnvironmentVariablesVariableOutput
}

type GetApigEnvironmentVariablesVariableArgs struct {
	// The environment ID corresponding to the environment variable.
	EnvId pulumi.StringInput `pulumi:"envId"`
	// The group ID corresponding to the environment variable.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the environment variable.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigEnvironmentVariablesVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigEnvironmentVariablesVariable)(nil)).Elem()
}

func (i GetApigEnvironmentVariablesVariableArgs) ToGetApigEnvironmentVariablesVariableOutput() GetApigEnvironmentVariablesVariableOutput {
	return i.ToGetApigEnvironmentVariablesVariableOutputWithContext(context.Background())
}

func (i GetApigEnvironmentVariablesVariableArgs) ToGetApigEnvironmentVariablesVariableOutputWithContext(ctx context.Context) GetApigEnvironmentVariablesVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigEnvironmentVariablesVariableOutput)
}

// GetApigEnvironmentVariablesVariableArrayInput is an input type that accepts GetApigEnvironmentVariablesVariableArray and GetApigEnvironmentVariablesVariableArrayOutput values.
// You can construct a concrete instance of `GetApigEnvironmentVariablesVariableArrayInput` via:
//
//	GetApigEnvironmentVariablesVariableArray{ GetApigEnvironmentVariablesVariableArgs{...} }
type GetApigEnvironmentVariablesVariableArrayInput interface {
	pulumi.Input

	ToGetApigEnvironmentVariablesVariableArrayOutput() GetApigEnvironmentVariablesVariableArrayOutput
	ToGetApigEnvironmentVariablesVariableArrayOutputWithContext(context.Context) GetApigEnvironmentVariablesVariableArrayOutput
}

type GetApigEnvironmentVariablesVariableArray []GetApigEnvironmentVariablesVariableInput

func (GetApigEnvironmentVariablesVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigEnvironmentVariablesVariable)(nil)).Elem()
}

func (i GetApigEnvironmentVariablesVariableArray) ToGetApigEnvironmentVariablesVariableArrayOutput() GetApigEnvironmentVariablesVariableArrayOutput {
	return i.ToGetApigEnvironmentVariablesVariableArrayOutputWithContext(context.Background())
}

func (i GetApigEnvironmentVariablesVariableArray) ToGetApigEnvironmentVariablesVariableArrayOutputWithContext(ctx context.Context) GetApigEnvironmentVariablesVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigEnvironmentVariablesVariableArrayOutput)
}

type GetApigEnvironmentVariablesVariableOutput struct{ *pulumi.OutputState }

func (GetApigEnvironmentVariablesVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigEnvironmentVariablesVariable)(nil)).Elem()
}

func (o GetApigEnvironmentVariablesVariableOutput) ToGetApigEnvironmentVariablesVariableOutput() GetApigEnvironmentVariablesVariableOutput {
	return o
}

func (o GetApigEnvironmentVariablesVariableOutput) ToGetApigEnvironmentVariablesVariableOutputWithContext(ctx context.Context) GetApigEnvironmentVariablesVariableOutput {
	return o
}

// The environment ID corresponding to the environment variable.
func (o GetApigEnvironmentVariablesVariableOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentVariablesVariable) string { return v.EnvId }).(pulumi.StringOutput)
}

// The group ID corresponding to the environment variable.
func (o GetApigEnvironmentVariablesVariableOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentVariablesVariable) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the environment variable.
func (o GetApigEnvironmentVariablesVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentVariablesVariable) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the environment variable.
func (o GetApigEnvironmentVariablesVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentVariablesVariable) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetApigEnvironmentVariablesVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentVariablesVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigEnvironmentVariablesVariableArrayOutput struct{ *pulumi.OutputState }

func (GetApigEnvironmentVariablesVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigEnvironmentVariablesVariable)(nil)).Elem()
}

func (o GetApigEnvironmentVariablesVariableArrayOutput) ToGetApigEnvironmentVariablesVariableArrayOutput() GetApigEnvironmentVariablesVariableArrayOutput {
	return o
}

func (o GetApigEnvironmentVariablesVariableArrayOutput) ToGetApigEnvironmentVariablesVariableArrayOutputWithContext(ctx context.Context) GetApigEnvironmentVariablesVariableArrayOutput {
	return o
}

func (o GetApigEnvironmentVariablesVariableArrayOutput) Index(i pulumi.IntInput) GetApigEnvironmentVariablesVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigEnvironmentVariablesVariable {
		return vs[0].([]GetApigEnvironmentVariablesVariable)[vs[1].(int)]
	}).(GetApigEnvironmentVariablesVariableOutput)
}

type GetApigEnvironmentsEnvironment struct {
	CreateTime  string `pulumi:"createTime"`
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
}

// GetApigEnvironmentsEnvironmentInput is an input type that accepts GetApigEnvironmentsEnvironmentArgs and GetApigEnvironmentsEnvironmentOutput values.
// You can construct a concrete instance of `GetApigEnvironmentsEnvironmentInput` via:
//
//	GetApigEnvironmentsEnvironmentArgs{...}
type GetApigEnvironmentsEnvironmentInput interface {
	pulumi.Input

	ToGetApigEnvironmentsEnvironmentOutput() GetApigEnvironmentsEnvironmentOutput
	ToGetApigEnvironmentsEnvironmentOutputWithContext(context.Context) GetApigEnvironmentsEnvironmentOutput
}

type GetApigEnvironmentsEnvironmentArgs struct {
	CreateTime  pulumi.StringInput `pulumi:"createTime"`
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
}

func (GetApigEnvironmentsEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetApigEnvironmentsEnvironmentArgs) ToGetApigEnvironmentsEnvironmentOutput() GetApigEnvironmentsEnvironmentOutput {
	return i.ToGetApigEnvironmentsEnvironmentOutputWithContext(context.Background())
}

func (i GetApigEnvironmentsEnvironmentArgs) ToGetApigEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetApigEnvironmentsEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigEnvironmentsEnvironmentOutput)
}

// GetApigEnvironmentsEnvironmentArrayInput is an input type that accepts GetApigEnvironmentsEnvironmentArray and GetApigEnvironmentsEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetApigEnvironmentsEnvironmentArrayInput` via:
//
//	GetApigEnvironmentsEnvironmentArray{ GetApigEnvironmentsEnvironmentArgs{...} }
type GetApigEnvironmentsEnvironmentArrayInput interface {
	pulumi.Input

	ToGetApigEnvironmentsEnvironmentArrayOutput() GetApigEnvironmentsEnvironmentArrayOutput
	ToGetApigEnvironmentsEnvironmentArrayOutputWithContext(context.Context) GetApigEnvironmentsEnvironmentArrayOutput
}

type GetApigEnvironmentsEnvironmentArray []GetApigEnvironmentsEnvironmentInput

func (GetApigEnvironmentsEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetApigEnvironmentsEnvironmentArray) ToGetApigEnvironmentsEnvironmentArrayOutput() GetApigEnvironmentsEnvironmentArrayOutput {
	return i.ToGetApigEnvironmentsEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetApigEnvironmentsEnvironmentArray) ToGetApigEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetApigEnvironmentsEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigEnvironmentsEnvironmentArrayOutput)
}

type GetApigEnvironmentsEnvironmentOutput struct{ *pulumi.OutputState }

func (GetApigEnvironmentsEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetApigEnvironmentsEnvironmentOutput) ToGetApigEnvironmentsEnvironmentOutput() GetApigEnvironmentsEnvironmentOutput {
	return o
}

func (o GetApigEnvironmentsEnvironmentOutput) ToGetApigEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetApigEnvironmentsEnvironmentOutput {
	return o
}

func (o GetApigEnvironmentsEnvironmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentsEnvironment) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetApigEnvironmentsEnvironmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentsEnvironment) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetApigEnvironmentsEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentsEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetApigEnvironmentsEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigEnvironmentsEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

type GetApigEnvironmentsEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetApigEnvironmentsEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetApigEnvironmentsEnvironmentArrayOutput) ToGetApigEnvironmentsEnvironmentArrayOutput() GetApigEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetApigEnvironmentsEnvironmentArrayOutput) ToGetApigEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetApigEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetApigEnvironmentsEnvironmentArrayOutput) Index(i pulumi.IntInput) GetApigEnvironmentsEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigEnvironmentsEnvironment {
		return vs[0].([]GetApigEnvironmentsEnvironment)[vs[1].(int)]
	}).(GetApigEnvironmentsEnvironmentOutput)
}

type GetApigGroupsGroup struct {
	CreatedAt   string `pulumi:"createdAt"`
	Description string `pulumi:"description"`
	// The array of one or more environments of the associated group.
	Environments []GetApigGroupsGroupEnvironment `pulumi:"environments"`
	Id           string                          `pulumi:"id"`
	IsDefault    int                             `pulumi:"isDefault"`
	Name         string                          `pulumi:"name"`
	OnSellStatus int                             `pulumi:"onSellStatus"`
	SlDomain     string                          `pulumi:"slDomain"`
	SlDomains    []string                        `pulumi:"slDomains"`
	Status       int                             `pulumi:"status"`
	UpdatedAt    string                          `pulumi:"updatedAt"`
	UrlDomains   []GetApigGroupsGroupUrlDomain   `pulumi:"urlDomains"`
}

// GetApigGroupsGroupInput is an input type that accepts GetApigGroupsGroupArgs and GetApigGroupsGroupOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupInput` via:
//
//	GetApigGroupsGroupArgs{...}
type GetApigGroupsGroupInput interface {
	pulumi.Input

	ToGetApigGroupsGroupOutput() GetApigGroupsGroupOutput
	ToGetApigGroupsGroupOutputWithContext(context.Context) GetApigGroupsGroupOutput
}

type GetApigGroupsGroupArgs struct {
	CreatedAt   pulumi.StringInput `pulumi:"createdAt"`
	Description pulumi.StringInput `pulumi:"description"`
	// The array of one or more environments of the associated group.
	Environments GetApigGroupsGroupEnvironmentArrayInput `pulumi:"environments"`
	Id           pulumi.StringInput                      `pulumi:"id"`
	IsDefault    pulumi.IntInput                         `pulumi:"isDefault"`
	Name         pulumi.StringInput                      `pulumi:"name"`
	OnSellStatus pulumi.IntInput                         `pulumi:"onSellStatus"`
	SlDomain     pulumi.StringInput                      `pulumi:"slDomain"`
	SlDomains    pulumi.StringArrayInput                 `pulumi:"slDomains"`
	Status       pulumi.IntInput                         `pulumi:"status"`
	UpdatedAt    pulumi.StringInput                      `pulumi:"updatedAt"`
	UrlDomains   GetApigGroupsGroupUrlDomainArrayInput   `pulumi:"urlDomains"`
}

func (GetApigGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroup)(nil)).Elem()
}

func (i GetApigGroupsGroupArgs) ToGetApigGroupsGroupOutput() GetApigGroupsGroupOutput {
	return i.ToGetApigGroupsGroupOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupArgs) ToGetApigGroupsGroupOutputWithContext(ctx context.Context) GetApigGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupOutput)
}

// GetApigGroupsGroupArrayInput is an input type that accepts GetApigGroupsGroupArray and GetApigGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupArrayInput` via:
//
//	GetApigGroupsGroupArray{ GetApigGroupsGroupArgs{...} }
type GetApigGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetApigGroupsGroupArrayOutput() GetApigGroupsGroupArrayOutput
	ToGetApigGroupsGroupArrayOutputWithContext(context.Context) GetApigGroupsGroupArrayOutput
}

type GetApigGroupsGroupArray []GetApigGroupsGroupInput

func (GetApigGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroup)(nil)).Elem()
}

func (i GetApigGroupsGroupArray) ToGetApigGroupsGroupArrayOutput() GetApigGroupsGroupArrayOutput {
	return i.ToGetApigGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupArray) ToGetApigGroupsGroupArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupArrayOutput)
}

type GetApigGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroup)(nil)).Elem()
}

func (o GetApigGroupsGroupOutput) ToGetApigGroupsGroupOutput() GetApigGroupsGroupOutput {
	return o
}

func (o GetApigGroupsGroupOutput) ToGetApigGroupsGroupOutputWithContext(ctx context.Context) GetApigGroupsGroupOutput {
	return o
}

func (o GetApigGroupsGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The array of one or more environments of the associated group.
func (o GetApigGroupsGroupOutput) Environments() GetApigGroupsGroupEnvironmentArrayOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) []GetApigGroupsGroupEnvironment { return v.Environments }).(GetApigGroupsGroupEnvironmentArrayOutput)
}

func (o GetApigGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupOutput) IsDefault() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) int { return v.IsDefault }).(pulumi.IntOutput)
}

func (o GetApigGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupOutput) OnSellStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) int { return v.OnSellStatus }).(pulumi.IntOutput)
}

func (o GetApigGroupsGroupOutput) SlDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) string { return v.SlDomain }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupOutput) SlDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) []string { return v.SlDomains }).(pulumi.StringArrayOutput)
}

func (o GetApigGroupsGroupOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) int { return v.Status }).(pulumi.IntOutput)
}

func (o GetApigGroupsGroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupOutput) UrlDomains() GetApigGroupsGroupUrlDomainArrayOutput {
	return o.ApplyT(func(v GetApigGroupsGroup) []GetApigGroupsGroupUrlDomain { return v.UrlDomains }).(GetApigGroupsGroupUrlDomainArrayOutput)
}

type GetApigGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroup)(nil)).Elem()
}

func (o GetApigGroupsGroupArrayOutput) ToGetApigGroupsGroupArrayOutput() GetApigGroupsGroupArrayOutput {
	return o
}

func (o GetApigGroupsGroupArrayOutput) ToGetApigGroupsGroupArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupArrayOutput {
	return o
}

func (o GetApigGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetApigGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigGroupsGroup {
		return vs[0].([]GetApigGroupsGroup)[vs[1].(int)]
	}).(GetApigGroupsGroupOutput)
}

type GetApigGroupsGroupEnvironment struct {
	// The ID of the environment to which the variables belongs.
	EnvironmentId string `pulumi:"environmentId"`
	// The array of one or more environment variables.
	Variables []GetApigGroupsGroupEnvironmentVariable `pulumi:"variables"`
}

// GetApigGroupsGroupEnvironmentInput is an input type that accepts GetApigGroupsGroupEnvironmentArgs and GetApigGroupsGroupEnvironmentOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupEnvironmentInput` via:
//
//	GetApigGroupsGroupEnvironmentArgs{...}
type GetApigGroupsGroupEnvironmentInput interface {
	pulumi.Input

	ToGetApigGroupsGroupEnvironmentOutput() GetApigGroupsGroupEnvironmentOutput
	ToGetApigGroupsGroupEnvironmentOutputWithContext(context.Context) GetApigGroupsGroupEnvironmentOutput
}

type GetApigGroupsGroupEnvironmentArgs struct {
	// The ID of the environment to which the variables belongs.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// The array of one or more environment variables.
	Variables GetApigGroupsGroupEnvironmentVariableArrayInput `pulumi:"variables"`
}

func (GetApigGroupsGroupEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroupEnvironment)(nil)).Elem()
}

func (i GetApigGroupsGroupEnvironmentArgs) ToGetApigGroupsGroupEnvironmentOutput() GetApigGroupsGroupEnvironmentOutput {
	return i.ToGetApigGroupsGroupEnvironmentOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupEnvironmentArgs) ToGetApigGroupsGroupEnvironmentOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupEnvironmentOutput)
}

// GetApigGroupsGroupEnvironmentArrayInput is an input type that accepts GetApigGroupsGroupEnvironmentArray and GetApigGroupsGroupEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupEnvironmentArrayInput` via:
//
//	GetApigGroupsGroupEnvironmentArray{ GetApigGroupsGroupEnvironmentArgs{...} }
type GetApigGroupsGroupEnvironmentArrayInput interface {
	pulumi.Input

	ToGetApigGroupsGroupEnvironmentArrayOutput() GetApigGroupsGroupEnvironmentArrayOutput
	ToGetApigGroupsGroupEnvironmentArrayOutputWithContext(context.Context) GetApigGroupsGroupEnvironmentArrayOutput
}

type GetApigGroupsGroupEnvironmentArray []GetApigGroupsGroupEnvironmentInput

func (GetApigGroupsGroupEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroupEnvironment)(nil)).Elem()
}

func (i GetApigGroupsGroupEnvironmentArray) ToGetApigGroupsGroupEnvironmentArrayOutput() GetApigGroupsGroupEnvironmentArrayOutput {
	return i.ToGetApigGroupsGroupEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupEnvironmentArray) ToGetApigGroupsGroupEnvironmentArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupEnvironmentArrayOutput)
}

type GetApigGroupsGroupEnvironmentOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroupEnvironment)(nil)).Elem()
}

func (o GetApigGroupsGroupEnvironmentOutput) ToGetApigGroupsGroupEnvironmentOutput() GetApigGroupsGroupEnvironmentOutput {
	return o
}

func (o GetApigGroupsGroupEnvironmentOutput) ToGetApigGroupsGroupEnvironmentOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentOutput {
	return o
}

// The ID of the environment to which the variables belongs.
func (o GetApigGroupsGroupEnvironmentOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupEnvironment) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The array of one or more environment variables.
func (o GetApigGroupsGroupEnvironmentOutput) Variables() GetApigGroupsGroupEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v GetApigGroupsGroupEnvironment) []GetApigGroupsGroupEnvironmentVariable { return v.Variables }).(GetApigGroupsGroupEnvironmentVariableArrayOutput)
}

type GetApigGroupsGroupEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroupEnvironment)(nil)).Elem()
}

func (o GetApigGroupsGroupEnvironmentArrayOutput) ToGetApigGroupsGroupEnvironmentArrayOutput() GetApigGroupsGroupEnvironmentArrayOutput {
	return o
}

func (o GetApigGroupsGroupEnvironmentArrayOutput) ToGetApigGroupsGroupEnvironmentArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentArrayOutput {
	return o
}

func (o GetApigGroupsGroupEnvironmentArrayOutput) Index(i pulumi.IntInput) GetApigGroupsGroupEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigGroupsGroupEnvironment {
		return vs[0].([]GetApigGroupsGroupEnvironment)[vs[1].(int)]
	}).(GetApigGroupsGroupEnvironmentOutput)
}

type GetApigGroupsGroupEnvironmentVariable struct {
	// The ID of the variable that the group has.
	Id string `pulumi:"id"`
	// The variable name.
	Name string `pulumi:"name"`
	// The variable value.
	Value string `pulumi:"value"`
}

// GetApigGroupsGroupEnvironmentVariableInput is an input type that accepts GetApigGroupsGroupEnvironmentVariableArgs and GetApigGroupsGroupEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupEnvironmentVariableInput` via:
//
//	GetApigGroupsGroupEnvironmentVariableArgs{...}
type GetApigGroupsGroupEnvironmentVariableInput interface {
	pulumi.Input

	ToGetApigGroupsGroupEnvironmentVariableOutput() GetApigGroupsGroupEnvironmentVariableOutput
	ToGetApigGroupsGroupEnvironmentVariableOutputWithContext(context.Context) GetApigGroupsGroupEnvironmentVariableOutput
}

type GetApigGroupsGroupEnvironmentVariableArgs struct {
	// The ID of the variable that the group has.
	Id pulumi.StringInput `pulumi:"id"`
	// The variable name.
	Name pulumi.StringInput `pulumi:"name"`
	// The variable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApigGroupsGroupEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroupEnvironmentVariable)(nil)).Elem()
}

func (i GetApigGroupsGroupEnvironmentVariableArgs) ToGetApigGroupsGroupEnvironmentVariableOutput() GetApigGroupsGroupEnvironmentVariableOutput {
	return i.ToGetApigGroupsGroupEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupEnvironmentVariableArgs) ToGetApigGroupsGroupEnvironmentVariableOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupEnvironmentVariableOutput)
}

// GetApigGroupsGroupEnvironmentVariableArrayInput is an input type that accepts GetApigGroupsGroupEnvironmentVariableArray and GetApigGroupsGroupEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupEnvironmentVariableArrayInput` via:
//
//	GetApigGroupsGroupEnvironmentVariableArray{ GetApigGroupsGroupEnvironmentVariableArgs{...} }
type GetApigGroupsGroupEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetApigGroupsGroupEnvironmentVariableArrayOutput() GetApigGroupsGroupEnvironmentVariableArrayOutput
	ToGetApigGroupsGroupEnvironmentVariableArrayOutputWithContext(context.Context) GetApigGroupsGroupEnvironmentVariableArrayOutput
}

type GetApigGroupsGroupEnvironmentVariableArray []GetApigGroupsGroupEnvironmentVariableInput

func (GetApigGroupsGroupEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroupEnvironmentVariable)(nil)).Elem()
}

func (i GetApigGroupsGroupEnvironmentVariableArray) ToGetApigGroupsGroupEnvironmentVariableArrayOutput() GetApigGroupsGroupEnvironmentVariableArrayOutput {
	return i.ToGetApigGroupsGroupEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupEnvironmentVariableArray) ToGetApigGroupsGroupEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupEnvironmentVariableArrayOutput)
}

type GetApigGroupsGroupEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroupEnvironmentVariable)(nil)).Elem()
}

func (o GetApigGroupsGroupEnvironmentVariableOutput) ToGetApigGroupsGroupEnvironmentVariableOutput() GetApigGroupsGroupEnvironmentVariableOutput {
	return o
}

func (o GetApigGroupsGroupEnvironmentVariableOutput) ToGetApigGroupsGroupEnvironmentVariableOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentVariableOutput {
	return o
}

// The ID of the variable that the group has.
func (o GetApigGroupsGroupEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// The variable name.
func (o GetApigGroupsGroupEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// The variable value.
func (o GetApigGroupsGroupEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetApigGroupsGroupEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroupEnvironmentVariable)(nil)).Elem()
}

func (o GetApigGroupsGroupEnvironmentVariableArrayOutput) ToGetApigGroupsGroupEnvironmentVariableArrayOutput() GetApigGroupsGroupEnvironmentVariableArrayOutput {
	return o
}

func (o GetApigGroupsGroupEnvironmentVariableArrayOutput) ToGetApigGroupsGroupEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupEnvironmentVariableArrayOutput {
	return o
}

func (o GetApigGroupsGroupEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetApigGroupsGroupEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigGroupsGroupEnvironmentVariable {
		return vs[0].([]GetApigGroupsGroupEnvironmentVariable)[vs[1].(int)]
	}).(GetApigGroupsGroupEnvironmentVariableOutput)
}

type GetApigGroupsGroupUrlDomain struct {
	CnameStatus                      int    `pulumi:"cnameStatus"`
	Id                               string `pulumi:"id"`
	IsHasTrustedRootCa               bool   `pulumi:"isHasTrustedRootCa"`
	MinSslVersion                    string `pulumi:"minSslVersion"`
	Name                             string `pulumi:"name"`
	SslId                            string `pulumi:"sslId"`
	SslName                          string `pulumi:"sslName"`
	VerifiedClientCertificateEnabled bool   `pulumi:"verifiedClientCertificateEnabled"`
}

// GetApigGroupsGroupUrlDomainInput is an input type that accepts GetApigGroupsGroupUrlDomainArgs and GetApigGroupsGroupUrlDomainOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupUrlDomainInput` via:
//
//	GetApigGroupsGroupUrlDomainArgs{...}
type GetApigGroupsGroupUrlDomainInput interface {
	pulumi.Input

	ToGetApigGroupsGroupUrlDomainOutput() GetApigGroupsGroupUrlDomainOutput
	ToGetApigGroupsGroupUrlDomainOutputWithContext(context.Context) GetApigGroupsGroupUrlDomainOutput
}

type GetApigGroupsGroupUrlDomainArgs struct {
	CnameStatus                      pulumi.IntInput    `pulumi:"cnameStatus"`
	Id                               pulumi.StringInput `pulumi:"id"`
	IsHasTrustedRootCa               pulumi.BoolInput   `pulumi:"isHasTrustedRootCa"`
	MinSslVersion                    pulumi.StringInput `pulumi:"minSslVersion"`
	Name                             pulumi.StringInput `pulumi:"name"`
	SslId                            pulumi.StringInput `pulumi:"sslId"`
	SslName                          pulumi.StringInput `pulumi:"sslName"`
	VerifiedClientCertificateEnabled pulumi.BoolInput   `pulumi:"verifiedClientCertificateEnabled"`
}

func (GetApigGroupsGroupUrlDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroupUrlDomain)(nil)).Elem()
}

func (i GetApigGroupsGroupUrlDomainArgs) ToGetApigGroupsGroupUrlDomainOutput() GetApigGroupsGroupUrlDomainOutput {
	return i.ToGetApigGroupsGroupUrlDomainOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupUrlDomainArgs) ToGetApigGroupsGroupUrlDomainOutputWithContext(ctx context.Context) GetApigGroupsGroupUrlDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupUrlDomainOutput)
}

// GetApigGroupsGroupUrlDomainArrayInput is an input type that accepts GetApigGroupsGroupUrlDomainArray and GetApigGroupsGroupUrlDomainArrayOutput values.
// You can construct a concrete instance of `GetApigGroupsGroupUrlDomainArrayInput` via:
//
//	GetApigGroupsGroupUrlDomainArray{ GetApigGroupsGroupUrlDomainArgs{...} }
type GetApigGroupsGroupUrlDomainArrayInput interface {
	pulumi.Input

	ToGetApigGroupsGroupUrlDomainArrayOutput() GetApigGroupsGroupUrlDomainArrayOutput
	ToGetApigGroupsGroupUrlDomainArrayOutputWithContext(context.Context) GetApigGroupsGroupUrlDomainArrayOutput
}

type GetApigGroupsGroupUrlDomainArray []GetApigGroupsGroupUrlDomainInput

func (GetApigGroupsGroupUrlDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroupUrlDomain)(nil)).Elem()
}

func (i GetApigGroupsGroupUrlDomainArray) ToGetApigGroupsGroupUrlDomainArrayOutput() GetApigGroupsGroupUrlDomainArrayOutput {
	return i.ToGetApigGroupsGroupUrlDomainArrayOutputWithContext(context.Background())
}

func (i GetApigGroupsGroupUrlDomainArray) ToGetApigGroupsGroupUrlDomainArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupUrlDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigGroupsGroupUrlDomainArrayOutput)
}

type GetApigGroupsGroupUrlDomainOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupUrlDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigGroupsGroupUrlDomain)(nil)).Elem()
}

func (o GetApigGroupsGroupUrlDomainOutput) ToGetApigGroupsGroupUrlDomainOutput() GetApigGroupsGroupUrlDomainOutput {
	return o
}

func (o GetApigGroupsGroupUrlDomainOutput) ToGetApigGroupsGroupUrlDomainOutputWithContext(ctx context.Context) GetApigGroupsGroupUrlDomainOutput {
	return o
}

func (o GetApigGroupsGroupUrlDomainOutput) CnameStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) int { return v.CnameStatus }).(pulumi.IntOutput)
}

func (o GetApigGroupsGroupUrlDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupUrlDomainOutput) IsHasTrustedRootCa() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) bool { return v.IsHasTrustedRootCa }).(pulumi.BoolOutput)
}

func (o GetApigGroupsGroupUrlDomainOutput) MinSslVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) string { return v.MinSslVersion }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupUrlDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupUrlDomainOutput) SslId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) string { return v.SslId }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupUrlDomainOutput) SslName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) string { return v.SslName }).(pulumi.StringOutput)
}

func (o GetApigGroupsGroupUrlDomainOutput) VerifiedClientCertificateEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigGroupsGroupUrlDomain) bool { return v.VerifiedClientCertificateEnabled }).(pulumi.BoolOutput)
}

type GetApigGroupsGroupUrlDomainArrayOutput struct{ *pulumi.OutputState }

func (GetApigGroupsGroupUrlDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigGroupsGroupUrlDomain)(nil)).Elem()
}

func (o GetApigGroupsGroupUrlDomainArrayOutput) ToGetApigGroupsGroupUrlDomainArrayOutput() GetApigGroupsGroupUrlDomainArrayOutput {
	return o
}

func (o GetApigGroupsGroupUrlDomainArrayOutput) ToGetApigGroupsGroupUrlDomainArrayOutputWithContext(ctx context.Context) GetApigGroupsGroupUrlDomainArrayOutput {
	return o
}

func (o GetApigGroupsGroupUrlDomainArrayOutput) Index(i pulumi.IntInput) GetApigGroupsGroupUrlDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigGroupsGroupUrlDomain {
		return vs[0].([]GetApigGroupsGroupUrlDomain)[vs[1].(int)]
	}).(GetApigGroupsGroupUrlDomainOutput)
}

type GetApigInstanceFeaturesFeature struct {
	// The detailed configuration of the instance feature.
	Config string `pulumi:"config"`
	// Whether the feature is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of the feature.
	Id string `pulumi:"id"`
	// The name of the feature.
	Name string `pulumi:"name"`
	// The latest update time of the feature, in RFC3339 format.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetApigInstanceFeaturesFeatureInput is an input type that accepts GetApigInstanceFeaturesFeatureArgs and GetApigInstanceFeaturesFeatureOutput values.
// You can construct a concrete instance of `GetApigInstanceFeaturesFeatureInput` via:
//
//	GetApigInstanceFeaturesFeatureArgs{...}
type GetApigInstanceFeaturesFeatureInput interface {
	pulumi.Input

	ToGetApigInstanceFeaturesFeatureOutput() GetApigInstanceFeaturesFeatureOutput
	ToGetApigInstanceFeaturesFeatureOutputWithContext(context.Context) GetApigInstanceFeaturesFeatureOutput
}

type GetApigInstanceFeaturesFeatureArgs struct {
	// The detailed configuration of the instance feature.
	Config pulumi.StringInput `pulumi:"config"`
	// Whether the feature is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the feature.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the feature.
	Name pulumi.StringInput `pulumi:"name"`
	// The latest update time of the feature, in RFC3339 format.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetApigInstanceFeaturesFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigInstanceFeaturesFeature)(nil)).Elem()
}

func (i GetApigInstanceFeaturesFeatureArgs) ToGetApigInstanceFeaturesFeatureOutput() GetApigInstanceFeaturesFeatureOutput {
	return i.ToGetApigInstanceFeaturesFeatureOutputWithContext(context.Background())
}

func (i GetApigInstanceFeaturesFeatureArgs) ToGetApigInstanceFeaturesFeatureOutputWithContext(ctx context.Context) GetApigInstanceFeaturesFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigInstanceFeaturesFeatureOutput)
}

// GetApigInstanceFeaturesFeatureArrayInput is an input type that accepts GetApigInstanceFeaturesFeatureArray and GetApigInstanceFeaturesFeatureArrayOutput values.
// You can construct a concrete instance of `GetApigInstanceFeaturesFeatureArrayInput` via:
//
//	GetApigInstanceFeaturesFeatureArray{ GetApigInstanceFeaturesFeatureArgs{...} }
type GetApigInstanceFeaturesFeatureArrayInput interface {
	pulumi.Input

	ToGetApigInstanceFeaturesFeatureArrayOutput() GetApigInstanceFeaturesFeatureArrayOutput
	ToGetApigInstanceFeaturesFeatureArrayOutputWithContext(context.Context) GetApigInstanceFeaturesFeatureArrayOutput
}

type GetApigInstanceFeaturesFeatureArray []GetApigInstanceFeaturesFeatureInput

func (GetApigInstanceFeaturesFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigInstanceFeaturesFeature)(nil)).Elem()
}

func (i GetApigInstanceFeaturesFeatureArray) ToGetApigInstanceFeaturesFeatureArrayOutput() GetApigInstanceFeaturesFeatureArrayOutput {
	return i.ToGetApigInstanceFeaturesFeatureArrayOutputWithContext(context.Background())
}

func (i GetApigInstanceFeaturesFeatureArray) ToGetApigInstanceFeaturesFeatureArrayOutputWithContext(ctx context.Context) GetApigInstanceFeaturesFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigInstanceFeaturesFeatureArrayOutput)
}

type GetApigInstanceFeaturesFeatureOutput struct{ *pulumi.OutputState }

func (GetApigInstanceFeaturesFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigInstanceFeaturesFeature)(nil)).Elem()
}

func (o GetApigInstanceFeaturesFeatureOutput) ToGetApigInstanceFeaturesFeatureOutput() GetApigInstanceFeaturesFeatureOutput {
	return o
}

func (o GetApigInstanceFeaturesFeatureOutput) ToGetApigInstanceFeaturesFeatureOutputWithContext(ctx context.Context) GetApigInstanceFeaturesFeatureOutput {
	return o
}

// The detailed configuration of the instance feature.
func (o GetApigInstanceFeaturesFeatureOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstanceFeaturesFeature) string { return v.Config }).(pulumi.StringOutput)
}

// Whether the feature is enabled.
func (o GetApigInstanceFeaturesFeatureOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApigInstanceFeaturesFeature) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the feature.
func (o GetApigInstanceFeaturesFeatureOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstanceFeaturesFeature) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the feature.
func (o GetApigInstanceFeaturesFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstanceFeaturesFeature) string { return v.Name }).(pulumi.StringOutput)
}

// The latest update time of the feature, in RFC3339 format.
func (o GetApigInstanceFeaturesFeatureOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstanceFeaturesFeature) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetApigInstanceFeaturesFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetApigInstanceFeaturesFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigInstanceFeaturesFeature)(nil)).Elem()
}

func (o GetApigInstanceFeaturesFeatureArrayOutput) ToGetApigInstanceFeaturesFeatureArrayOutput() GetApigInstanceFeaturesFeatureArrayOutput {
	return o
}

func (o GetApigInstanceFeaturesFeatureArrayOutput) ToGetApigInstanceFeaturesFeatureArrayOutputWithContext(ctx context.Context) GetApigInstanceFeaturesFeatureArrayOutput {
	return o
}

func (o GetApigInstanceFeaturesFeatureArrayOutput) Index(i pulumi.IntInput) GetApigInstanceFeaturesFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigInstanceFeaturesFeature {
		return vs[0].([]GetApigInstanceFeaturesFeature)[vs[1].(int)]
	}).(GetApigInstanceFeaturesFeatureOutput)
}

type GetApigInstancesInstance struct {
	// The creation time of the instance, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The edition of instance.
	Edition string `pulumi:"edition"`
	// The elastic IP address of instance binding.
	EipAddress string `pulumi:"eipAddress"`
	// The enterprise project ID of the instance.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The ID of instance.
	Id string `pulumi:"id"`
	// The type of load balancer used by the instance.
	LoadbalancerProvider string `pulumi:"loadbalancerProvider"`
	// The name of instance.
	Name string `pulumi:"name"`
	// The status of instance.
	Status string `pulumi:"status"`
	// The type of instance.
	Type string `pulumi:"type"`
}

// GetApigInstancesInstanceInput is an input type that accepts GetApigInstancesInstanceArgs and GetApigInstancesInstanceOutput values.
// You can construct a concrete instance of `GetApigInstancesInstanceInput` via:
//
//	GetApigInstancesInstanceArgs{...}
type GetApigInstancesInstanceInput interface {
	pulumi.Input

	ToGetApigInstancesInstanceOutput() GetApigInstancesInstanceOutput
	ToGetApigInstancesInstanceOutputWithContext(context.Context) GetApigInstancesInstanceOutput
}

type GetApigInstancesInstanceArgs struct {
	// The creation time of the instance, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The edition of instance.
	Edition pulumi.StringInput `pulumi:"edition"`
	// The elastic IP address of instance binding.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
	// The enterprise project ID of the instance.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The ID of instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of load balancer used by the instance.
	LoadbalancerProvider pulumi.StringInput `pulumi:"loadbalancerProvider"`
	// The name of instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of instance.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of instance.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApigInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigInstancesInstance)(nil)).Elem()
}

func (i GetApigInstancesInstanceArgs) ToGetApigInstancesInstanceOutput() GetApigInstancesInstanceOutput {
	return i.ToGetApigInstancesInstanceOutputWithContext(context.Background())
}

func (i GetApigInstancesInstanceArgs) ToGetApigInstancesInstanceOutputWithContext(ctx context.Context) GetApigInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigInstancesInstanceOutput)
}

// GetApigInstancesInstanceArrayInput is an input type that accepts GetApigInstancesInstanceArray and GetApigInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetApigInstancesInstanceArrayInput` via:
//
//	GetApigInstancesInstanceArray{ GetApigInstancesInstanceArgs{...} }
type GetApigInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetApigInstancesInstanceArrayOutput() GetApigInstancesInstanceArrayOutput
	ToGetApigInstancesInstanceArrayOutputWithContext(context.Context) GetApigInstancesInstanceArrayOutput
}

type GetApigInstancesInstanceArray []GetApigInstancesInstanceInput

func (GetApigInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigInstancesInstance)(nil)).Elem()
}

func (i GetApigInstancesInstanceArray) ToGetApigInstancesInstanceArrayOutput() GetApigInstancesInstanceArrayOutput {
	return i.ToGetApigInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetApigInstancesInstanceArray) ToGetApigInstancesInstanceArrayOutputWithContext(ctx context.Context) GetApigInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigInstancesInstanceArrayOutput)
}

type GetApigInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetApigInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigInstancesInstance)(nil)).Elem()
}

func (o GetApigInstancesInstanceOutput) ToGetApigInstancesInstanceOutput() GetApigInstancesInstanceOutput {
	return o
}

func (o GetApigInstancesInstanceOutput) ToGetApigInstancesInstanceOutputWithContext(ctx context.Context) GetApigInstancesInstanceOutput {
	return o
}

// The creation time of the instance, in RFC3339 format.
func (o GetApigInstancesInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The edition of instance.
func (o GetApigInstancesInstanceOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.Edition }).(pulumi.StringOutput)
}

// The elastic IP address of instance binding.
func (o GetApigInstancesInstanceOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.EipAddress }).(pulumi.StringOutput)
}

// The enterprise project ID of the instance.
func (o GetApigInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The ID of instance.
func (o GetApigInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The type of load balancer used by the instance.
func (o GetApigInstancesInstanceOutput) LoadbalancerProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.LoadbalancerProvider }).(pulumi.StringOutput)
}

// The name of instance.
func (o GetApigInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// The status of instance.
func (o GetApigInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The type of instance.
func (o GetApigInstancesInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigInstancesInstance) string { return v.Type }).(pulumi.StringOutput)
}

type GetApigInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetApigInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigInstancesInstance)(nil)).Elem()
}

func (o GetApigInstancesInstanceArrayOutput) ToGetApigInstancesInstanceArrayOutput() GetApigInstancesInstanceArrayOutput {
	return o
}

func (o GetApigInstancesInstanceArrayOutput) ToGetApigInstancesInstanceArrayOutputWithContext(ctx context.Context) GetApigInstancesInstanceArrayOutput {
	return o
}

func (o GetApigInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetApigInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigInstancesInstance {
		return vs[0].([]GetApigInstancesInstance)[vs[1].(int)]
	}).(GetApigInstancesInstanceOutput)
}

type GetApigSignaturesSignature struct {
	// The algorithm of the signature.
	Algorithm string `pulumi:"algorithm"`
	// The number of bound APIs.
	BindNum int `pulumi:"bindNum"`
	// The creation time of the signature.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the signature.
	Id string `pulumi:"id"`
	// The key of the signature.
	Key string `pulumi:"key"`
	// The name of the signature.
	Name string `pulumi:"name"`
	// The secret of the signature.
	Secret string `pulumi:"secret"`
	// The type of the signature.
	Type string `pulumi:"type"`
	// The latest update time of the signature.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetApigSignaturesSignatureInput is an input type that accepts GetApigSignaturesSignatureArgs and GetApigSignaturesSignatureOutput values.
// You can construct a concrete instance of `GetApigSignaturesSignatureInput` via:
//
//	GetApigSignaturesSignatureArgs{...}
type GetApigSignaturesSignatureInput interface {
	pulumi.Input

	ToGetApigSignaturesSignatureOutput() GetApigSignaturesSignatureOutput
	ToGetApigSignaturesSignatureOutputWithContext(context.Context) GetApigSignaturesSignatureOutput
}

type GetApigSignaturesSignatureArgs struct {
	// The algorithm of the signature.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The number of bound APIs.
	BindNum pulumi.IntInput `pulumi:"bindNum"`
	// The creation time of the signature.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the signature.
	Id pulumi.StringInput `pulumi:"id"`
	// The key of the signature.
	Key pulumi.StringInput `pulumi:"key"`
	// The name of the signature.
	Name pulumi.StringInput `pulumi:"name"`
	// The secret of the signature.
	Secret pulumi.StringInput `pulumi:"secret"`
	// The type of the signature.
	Type pulumi.StringInput `pulumi:"type"`
	// The latest update time of the signature.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetApigSignaturesSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigSignaturesSignature)(nil)).Elem()
}

func (i GetApigSignaturesSignatureArgs) ToGetApigSignaturesSignatureOutput() GetApigSignaturesSignatureOutput {
	return i.ToGetApigSignaturesSignatureOutputWithContext(context.Background())
}

func (i GetApigSignaturesSignatureArgs) ToGetApigSignaturesSignatureOutputWithContext(ctx context.Context) GetApigSignaturesSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigSignaturesSignatureOutput)
}

// GetApigSignaturesSignatureArrayInput is an input type that accepts GetApigSignaturesSignatureArray and GetApigSignaturesSignatureArrayOutput values.
// You can construct a concrete instance of `GetApigSignaturesSignatureArrayInput` via:
//
//	GetApigSignaturesSignatureArray{ GetApigSignaturesSignatureArgs{...} }
type GetApigSignaturesSignatureArrayInput interface {
	pulumi.Input

	ToGetApigSignaturesSignatureArrayOutput() GetApigSignaturesSignatureArrayOutput
	ToGetApigSignaturesSignatureArrayOutputWithContext(context.Context) GetApigSignaturesSignatureArrayOutput
}

type GetApigSignaturesSignatureArray []GetApigSignaturesSignatureInput

func (GetApigSignaturesSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigSignaturesSignature)(nil)).Elem()
}

func (i GetApigSignaturesSignatureArray) ToGetApigSignaturesSignatureArrayOutput() GetApigSignaturesSignatureArrayOutput {
	return i.ToGetApigSignaturesSignatureArrayOutputWithContext(context.Background())
}

func (i GetApigSignaturesSignatureArray) ToGetApigSignaturesSignatureArrayOutputWithContext(ctx context.Context) GetApigSignaturesSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigSignaturesSignatureArrayOutput)
}

type GetApigSignaturesSignatureOutput struct{ *pulumi.OutputState }

func (GetApigSignaturesSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigSignaturesSignature)(nil)).Elem()
}

func (o GetApigSignaturesSignatureOutput) ToGetApigSignaturesSignatureOutput() GetApigSignaturesSignatureOutput {
	return o
}

func (o GetApigSignaturesSignatureOutput) ToGetApigSignaturesSignatureOutputWithContext(ctx context.Context) GetApigSignaturesSignatureOutput {
	return o
}

// The algorithm of the signature.
func (o GetApigSignaturesSignatureOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The number of bound APIs.
func (o GetApigSignaturesSignatureOutput) BindNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) int { return v.BindNum }).(pulumi.IntOutput)
}

// The creation time of the signature.
func (o GetApigSignaturesSignatureOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the signature.
func (o GetApigSignaturesSignatureOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.Id }).(pulumi.StringOutput)
}

// The key of the signature.
func (o GetApigSignaturesSignatureOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the signature.
func (o GetApigSignaturesSignatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.Name }).(pulumi.StringOutput)
}

// The secret of the signature.
func (o GetApigSignaturesSignatureOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.Secret }).(pulumi.StringOutput)
}

// The type of the signature.
func (o GetApigSignaturesSignatureOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the signature.
func (o GetApigSignaturesSignatureOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigSignaturesSignature) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetApigSignaturesSignatureArrayOutput struct{ *pulumi.OutputState }

func (GetApigSignaturesSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigSignaturesSignature)(nil)).Elem()
}

func (o GetApigSignaturesSignatureArrayOutput) ToGetApigSignaturesSignatureArrayOutput() GetApigSignaturesSignatureArrayOutput {
	return o
}

func (o GetApigSignaturesSignatureArrayOutput) ToGetApigSignaturesSignatureArrayOutputWithContext(ctx context.Context) GetApigSignaturesSignatureArrayOutput {
	return o
}

func (o GetApigSignaturesSignatureArrayOutput) Index(i pulumi.IntInput) GetApigSignaturesSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigSignaturesSignature {
		return vs[0].([]GetApigSignaturesSignature)[vs[1].(int)]
	}).(GetApigSignaturesSignatureOutput)
}

type GetApigThrottlingPoliciesPolicy struct {
	// The array of one or more special throttling policies for APP limit.
	AppThrottles []GetApigThrottlingPoliciesPolicyAppThrottle `pulumi:"appThrottles"`
	// The number of APIs bound to the throttling policy.
	BindNum int `pulumi:"bindNum"`
	// The creation time of the throttling policy, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The description of throttling policy.
	Description string `pulumi:"description"`
	// The ID of the throttling policy.
	Id string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The maximum number of times the API can be accessed by an app within the same period.
	MaxAppRequests int `pulumi:"maxAppRequests"`
	// The maximum number of times the API can be accessed by an IP address within the same period.
	MaxIpRequests int `pulumi:"maxIpRequests"`
	// The maximum number of times the API can be accessed by a user within the same period.
	MaxUserRequests int `pulumi:"maxUserRequests"`
	// The name of the throttling policy.
	Name string `pulumi:"name"`
	// The period of time for limiting the number of API calls.
	Period int `pulumi:"period"`
	// The time unit for limiting the number of API calls.
	PeriodUnit string `pulumi:"periodUnit"`
	// The type of the throttling policy.
	Type string `pulumi:"type"`
	// The array of one or more special throttling policies for IAM user limit.
	UserThrottles []GetApigThrottlingPoliciesPolicyUserThrottle `pulumi:"userThrottles"`
}

// GetApigThrottlingPoliciesPolicyInput is an input type that accepts GetApigThrottlingPoliciesPolicyArgs and GetApigThrottlingPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetApigThrottlingPoliciesPolicyInput` via:
//
//	GetApigThrottlingPoliciesPolicyArgs{...}
type GetApigThrottlingPoliciesPolicyInput interface {
	pulumi.Input

	ToGetApigThrottlingPoliciesPolicyOutput() GetApigThrottlingPoliciesPolicyOutput
	ToGetApigThrottlingPoliciesPolicyOutputWithContext(context.Context) GetApigThrottlingPoliciesPolicyOutput
}

type GetApigThrottlingPoliciesPolicyArgs struct {
	// The array of one or more special throttling policies for APP limit.
	AppThrottles GetApigThrottlingPoliciesPolicyAppThrottleArrayInput `pulumi:"appThrottles"`
	// The number of APIs bound to the throttling policy.
	BindNum pulumi.IntInput `pulumi:"bindNum"`
	// The creation time of the throttling policy, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of throttling policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the throttling policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The maximum number of times the API can be accessed by an app within the same period.
	MaxAppRequests pulumi.IntInput `pulumi:"maxAppRequests"`
	// The maximum number of times the API can be accessed by an IP address within the same period.
	MaxIpRequests pulumi.IntInput `pulumi:"maxIpRequests"`
	// The maximum number of times the API can be accessed by a user within the same period.
	MaxUserRequests pulumi.IntInput `pulumi:"maxUserRequests"`
	// The name of the throttling policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The period of time for limiting the number of API calls.
	Period pulumi.IntInput `pulumi:"period"`
	// The time unit for limiting the number of API calls.
	PeriodUnit pulumi.StringInput `pulumi:"periodUnit"`
	// The type of the throttling policy.
	Type pulumi.StringInput `pulumi:"type"`
	// The array of one or more special throttling policies for IAM user limit.
	UserThrottles GetApigThrottlingPoliciesPolicyUserThrottleArrayInput `pulumi:"userThrottles"`
}

func (GetApigThrottlingPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigThrottlingPoliciesPolicy)(nil)).Elem()
}

func (i GetApigThrottlingPoliciesPolicyArgs) ToGetApigThrottlingPoliciesPolicyOutput() GetApigThrottlingPoliciesPolicyOutput {
	return i.ToGetApigThrottlingPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetApigThrottlingPoliciesPolicyArgs) ToGetApigThrottlingPoliciesPolicyOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigThrottlingPoliciesPolicyOutput)
}

// GetApigThrottlingPoliciesPolicyArrayInput is an input type that accepts GetApigThrottlingPoliciesPolicyArray and GetApigThrottlingPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetApigThrottlingPoliciesPolicyArrayInput` via:
//
//	GetApigThrottlingPoliciesPolicyArray{ GetApigThrottlingPoliciesPolicyArgs{...} }
type GetApigThrottlingPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetApigThrottlingPoliciesPolicyArrayOutput() GetApigThrottlingPoliciesPolicyArrayOutput
	ToGetApigThrottlingPoliciesPolicyArrayOutputWithContext(context.Context) GetApigThrottlingPoliciesPolicyArrayOutput
}

type GetApigThrottlingPoliciesPolicyArray []GetApigThrottlingPoliciesPolicyInput

func (GetApigThrottlingPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigThrottlingPoliciesPolicy)(nil)).Elem()
}

func (i GetApigThrottlingPoliciesPolicyArray) ToGetApigThrottlingPoliciesPolicyArrayOutput() GetApigThrottlingPoliciesPolicyArrayOutput {
	return i.ToGetApigThrottlingPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetApigThrottlingPoliciesPolicyArray) ToGetApigThrottlingPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigThrottlingPoliciesPolicyArrayOutput)
}

type GetApigThrottlingPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetApigThrottlingPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigThrottlingPoliciesPolicy)(nil)).Elem()
}

func (o GetApigThrottlingPoliciesPolicyOutput) ToGetApigThrottlingPoliciesPolicyOutput() GetApigThrottlingPoliciesPolicyOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyOutput) ToGetApigThrottlingPoliciesPolicyOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyOutput {
	return o
}

// The array of one or more special throttling policies for APP limit.
func (o GetApigThrottlingPoliciesPolicyOutput) AppThrottles() GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) []GetApigThrottlingPoliciesPolicyAppThrottle {
		return v.AppThrottles
	}).(GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput)
}

// The number of APIs bound to the throttling policy.
func (o GetApigThrottlingPoliciesPolicyOutput) BindNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) int { return v.BindNum }).(pulumi.IntOutput)
}

// The creation time of the throttling policy, in RFC3339 format.
func (o GetApigThrottlingPoliciesPolicyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of throttling policy.
func (o GetApigThrottlingPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the throttling policy.
func (o GetApigThrottlingPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o GetApigThrottlingPoliciesPolicyOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The maximum number of times the API can be accessed by an app within the same period.
func (o GetApigThrottlingPoliciesPolicyOutput) MaxAppRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) int { return v.MaxAppRequests }).(pulumi.IntOutput)
}

// The maximum number of times the API can be accessed by an IP address within the same period.
func (o GetApigThrottlingPoliciesPolicyOutput) MaxIpRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) int { return v.MaxIpRequests }).(pulumi.IntOutput)
}

// The maximum number of times the API can be accessed by a user within the same period.
func (o GetApigThrottlingPoliciesPolicyOutput) MaxUserRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) int { return v.MaxUserRequests }).(pulumi.IntOutput)
}

// The name of the throttling policy.
func (o GetApigThrottlingPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The period of time for limiting the number of API calls.
func (o GetApigThrottlingPoliciesPolicyOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) int { return v.Period }).(pulumi.IntOutput)
}

// The time unit for limiting the number of API calls.
func (o GetApigThrottlingPoliciesPolicyOutput) PeriodUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) string { return v.PeriodUnit }).(pulumi.StringOutput)
}

// The type of the throttling policy.
func (o GetApigThrottlingPoliciesPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) string { return v.Type }).(pulumi.StringOutput)
}

// The array of one or more special throttling policies for IAM user limit.
func (o GetApigThrottlingPoliciesPolicyOutput) UserThrottles() GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicy) []GetApigThrottlingPoliciesPolicyUserThrottle {
		return v.UserThrottles
	}).(GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput)
}

type GetApigThrottlingPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApigThrottlingPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigThrottlingPoliciesPolicy)(nil)).Elem()
}

func (o GetApigThrottlingPoliciesPolicyArrayOutput) ToGetApigThrottlingPoliciesPolicyArrayOutput() GetApigThrottlingPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyArrayOutput) ToGetApigThrottlingPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyArrayOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetApigThrottlingPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigThrottlingPoliciesPolicy {
		return vs[0].([]GetApigThrottlingPoliciesPolicy)[vs[1].(int)]
	}).(GetApigThrottlingPoliciesPolicyOutput)
}

type GetApigThrottlingPoliciesPolicyAppThrottle struct {
	// The ID of the special user/application throttling policy.
	Id string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId string `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName string `pulumi:"throttlingObjectName"`
}

// GetApigThrottlingPoliciesPolicyAppThrottleInput is an input type that accepts GetApigThrottlingPoliciesPolicyAppThrottleArgs and GetApigThrottlingPoliciesPolicyAppThrottleOutput values.
// You can construct a concrete instance of `GetApigThrottlingPoliciesPolicyAppThrottleInput` via:
//
//	GetApigThrottlingPoliciesPolicyAppThrottleArgs{...}
type GetApigThrottlingPoliciesPolicyAppThrottleInput interface {
	pulumi.Input

	ToGetApigThrottlingPoliciesPolicyAppThrottleOutput() GetApigThrottlingPoliciesPolicyAppThrottleOutput
	ToGetApigThrottlingPoliciesPolicyAppThrottleOutputWithContext(context.Context) GetApigThrottlingPoliciesPolicyAppThrottleOutput
}

type GetApigThrottlingPoliciesPolicyAppThrottleArgs struct {
	// The ID of the special user/application throttling policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId pulumi.StringInput `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName pulumi.StringInput `pulumi:"throttlingObjectName"`
}

func (GetApigThrottlingPoliciesPolicyAppThrottleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (i GetApigThrottlingPoliciesPolicyAppThrottleArgs) ToGetApigThrottlingPoliciesPolicyAppThrottleOutput() GetApigThrottlingPoliciesPolicyAppThrottleOutput {
	return i.ToGetApigThrottlingPoliciesPolicyAppThrottleOutputWithContext(context.Background())
}

func (i GetApigThrottlingPoliciesPolicyAppThrottleArgs) ToGetApigThrottlingPoliciesPolicyAppThrottleOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyAppThrottleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigThrottlingPoliciesPolicyAppThrottleOutput)
}

// GetApigThrottlingPoliciesPolicyAppThrottleArrayInput is an input type that accepts GetApigThrottlingPoliciesPolicyAppThrottleArray and GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput values.
// You can construct a concrete instance of `GetApigThrottlingPoliciesPolicyAppThrottleArrayInput` via:
//
//	GetApigThrottlingPoliciesPolicyAppThrottleArray{ GetApigThrottlingPoliciesPolicyAppThrottleArgs{...} }
type GetApigThrottlingPoliciesPolicyAppThrottleArrayInput interface {
	pulumi.Input

	ToGetApigThrottlingPoliciesPolicyAppThrottleArrayOutput() GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput
	ToGetApigThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(context.Context) GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput
}

type GetApigThrottlingPoliciesPolicyAppThrottleArray []GetApigThrottlingPoliciesPolicyAppThrottleInput

func (GetApigThrottlingPoliciesPolicyAppThrottleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (i GetApigThrottlingPoliciesPolicyAppThrottleArray) ToGetApigThrottlingPoliciesPolicyAppThrottleArrayOutput() GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return i.ToGetApigThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(context.Background())
}

func (i GetApigThrottlingPoliciesPolicyAppThrottleArray) ToGetApigThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput)
}

type GetApigThrottlingPoliciesPolicyAppThrottleOutput struct{ *pulumi.OutputState }

func (GetApigThrottlingPoliciesPolicyAppThrottleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (o GetApigThrottlingPoliciesPolicyAppThrottleOutput) ToGetApigThrottlingPoliciesPolicyAppThrottleOutput() GetApigThrottlingPoliciesPolicyAppThrottleOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyAppThrottleOutput) ToGetApigThrottlingPoliciesPolicyAppThrottleOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyAppThrottleOutput {
	return o
}

// The ID of the special user/application throttling policy.
func (o GetApigThrottlingPoliciesPolicyAppThrottleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyAppThrottle) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o GetApigThrottlingPoliciesPolicyAppThrottleOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyAppThrottle) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The object ID which the special user/application throttling policy belongs.
func (o GetApigThrottlingPoliciesPolicyAppThrottleOutput) ThrottlingObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyAppThrottle) string { return v.ThrottlingObjectId }).(pulumi.StringOutput)
}

// The object name which the special user/application throttling policy belongs.
func (o GetApigThrottlingPoliciesPolicyAppThrottleOutput) ThrottlingObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyAppThrottle) string { return v.ThrottlingObjectName }).(pulumi.StringOutput)
}

type GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput struct{ *pulumi.OutputState }

func (GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigThrottlingPoliciesPolicyAppThrottle)(nil)).Elem()
}

func (o GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput) ToGetApigThrottlingPoliciesPolicyAppThrottleArrayOutput() GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput) ToGetApigThrottlingPoliciesPolicyAppThrottleArrayOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput) Index(i pulumi.IntInput) GetApigThrottlingPoliciesPolicyAppThrottleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigThrottlingPoliciesPolicyAppThrottle {
		return vs[0].([]GetApigThrottlingPoliciesPolicyAppThrottle)[vs[1].(int)]
	}).(GetApigThrottlingPoliciesPolicyAppThrottleOutput)
}

type GetApigThrottlingPoliciesPolicyUserThrottle struct {
	// The ID of the special user/application throttling policy.
	Id string `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests int `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId string `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName string `pulumi:"throttlingObjectName"`
}

// GetApigThrottlingPoliciesPolicyUserThrottleInput is an input type that accepts GetApigThrottlingPoliciesPolicyUserThrottleArgs and GetApigThrottlingPoliciesPolicyUserThrottleOutput values.
// You can construct a concrete instance of `GetApigThrottlingPoliciesPolicyUserThrottleInput` via:
//
//	GetApigThrottlingPoliciesPolicyUserThrottleArgs{...}
type GetApigThrottlingPoliciesPolicyUserThrottleInput interface {
	pulumi.Input

	ToGetApigThrottlingPoliciesPolicyUserThrottleOutput() GetApigThrottlingPoliciesPolicyUserThrottleOutput
	ToGetApigThrottlingPoliciesPolicyUserThrottleOutputWithContext(context.Context) GetApigThrottlingPoliciesPolicyUserThrottleOutput
}

type GetApigThrottlingPoliciesPolicyUserThrottleArgs struct {
	// The ID of the special user/application throttling policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum number of times an API can be accessed within a specified period.
	MaxApiRequests pulumi.IntInput `pulumi:"maxApiRequests"`
	// The object ID which the special user/application throttling policy belongs.
	ThrottlingObjectId pulumi.StringInput `pulumi:"throttlingObjectId"`
	// The object name which the special user/application throttling policy belongs.
	ThrottlingObjectName pulumi.StringInput `pulumi:"throttlingObjectName"`
}

func (GetApigThrottlingPoliciesPolicyUserThrottleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (i GetApigThrottlingPoliciesPolicyUserThrottleArgs) ToGetApigThrottlingPoliciesPolicyUserThrottleOutput() GetApigThrottlingPoliciesPolicyUserThrottleOutput {
	return i.ToGetApigThrottlingPoliciesPolicyUserThrottleOutputWithContext(context.Background())
}

func (i GetApigThrottlingPoliciesPolicyUserThrottleArgs) ToGetApigThrottlingPoliciesPolicyUserThrottleOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyUserThrottleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigThrottlingPoliciesPolicyUserThrottleOutput)
}

// GetApigThrottlingPoliciesPolicyUserThrottleArrayInput is an input type that accepts GetApigThrottlingPoliciesPolicyUserThrottleArray and GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput values.
// You can construct a concrete instance of `GetApigThrottlingPoliciesPolicyUserThrottleArrayInput` via:
//
//	GetApigThrottlingPoliciesPolicyUserThrottleArray{ GetApigThrottlingPoliciesPolicyUserThrottleArgs{...} }
type GetApigThrottlingPoliciesPolicyUserThrottleArrayInput interface {
	pulumi.Input

	ToGetApigThrottlingPoliciesPolicyUserThrottleArrayOutput() GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput
	ToGetApigThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(context.Context) GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput
}

type GetApigThrottlingPoliciesPolicyUserThrottleArray []GetApigThrottlingPoliciesPolicyUserThrottleInput

func (GetApigThrottlingPoliciesPolicyUserThrottleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (i GetApigThrottlingPoliciesPolicyUserThrottleArray) ToGetApigThrottlingPoliciesPolicyUserThrottleArrayOutput() GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return i.ToGetApigThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(context.Background())
}

func (i GetApigThrottlingPoliciesPolicyUserThrottleArray) ToGetApigThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput)
}

type GetApigThrottlingPoliciesPolicyUserThrottleOutput struct{ *pulumi.OutputState }

func (GetApigThrottlingPoliciesPolicyUserThrottleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (o GetApigThrottlingPoliciesPolicyUserThrottleOutput) ToGetApigThrottlingPoliciesPolicyUserThrottleOutput() GetApigThrottlingPoliciesPolicyUserThrottleOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyUserThrottleOutput) ToGetApigThrottlingPoliciesPolicyUserThrottleOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyUserThrottleOutput {
	return o
}

// The ID of the special user/application throttling policy.
func (o GetApigThrottlingPoliciesPolicyUserThrottleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyUserThrottle) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum number of times an API can be accessed within a specified period.
func (o GetApigThrottlingPoliciesPolicyUserThrottleOutput) MaxApiRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyUserThrottle) int { return v.MaxApiRequests }).(pulumi.IntOutput)
}

// The object ID which the special user/application throttling policy belongs.
func (o GetApigThrottlingPoliciesPolicyUserThrottleOutput) ThrottlingObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyUserThrottle) string { return v.ThrottlingObjectId }).(pulumi.StringOutput)
}

// The object name which the special user/application throttling policy belongs.
func (o GetApigThrottlingPoliciesPolicyUserThrottleOutput) ThrottlingObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigThrottlingPoliciesPolicyUserThrottle) string { return v.ThrottlingObjectName }).(pulumi.StringOutput)
}

type GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput struct{ *pulumi.OutputState }

func (GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigThrottlingPoliciesPolicyUserThrottle)(nil)).Elem()
}

func (o GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput) ToGetApigThrottlingPoliciesPolicyUserThrottleArrayOutput() GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput) ToGetApigThrottlingPoliciesPolicyUserThrottleArrayOutputWithContext(ctx context.Context) GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput {
	return o
}

func (o GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput) Index(i pulumi.IntInput) GetApigThrottlingPoliciesPolicyUserThrottleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigThrottlingPoliciesPolicyUserThrottle {
		return vs[0].([]GetApigThrottlingPoliciesPolicyUserThrottle)[vs[1].(int)]
	}).(GetApigThrottlingPoliciesPolicyUserThrottleOutput)
}

type GetCbhAvailabilityZonesAvailabilityZone struct {
	DisplayName string `pulumi:"displayName"`
	Name        string `pulumi:"name"`
	RegionId    string `pulumi:"regionId"`
	Status      string `pulumi:"status"`
	Type        string `pulumi:"type"`
}

// GetCbhAvailabilityZonesAvailabilityZoneInput is an input type that accepts GetCbhAvailabilityZonesAvailabilityZoneArgs and GetCbhAvailabilityZonesAvailabilityZoneOutput values.
// You can construct a concrete instance of `GetCbhAvailabilityZonesAvailabilityZoneInput` via:
//
//	GetCbhAvailabilityZonesAvailabilityZoneArgs{...}
type GetCbhAvailabilityZonesAvailabilityZoneInput interface {
	pulumi.Input

	ToGetCbhAvailabilityZonesAvailabilityZoneOutput() GetCbhAvailabilityZonesAvailabilityZoneOutput
	ToGetCbhAvailabilityZonesAvailabilityZoneOutputWithContext(context.Context) GetCbhAvailabilityZonesAvailabilityZoneOutput
}

type GetCbhAvailabilityZonesAvailabilityZoneArgs struct {
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	Name        pulumi.StringInput `pulumi:"name"`
	RegionId    pulumi.StringInput `pulumi:"regionId"`
	Status      pulumi.StringInput `pulumi:"status"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (GetCbhAvailabilityZonesAvailabilityZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbhAvailabilityZonesAvailabilityZone)(nil)).Elem()
}

func (i GetCbhAvailabilityZonesAvailabilityZoneArgs) ToGetCbhAvailabilityZonesAvailabilityZoneOutput() GetCbhAvailabilityZonesAvailabilityZoneOutput {
	return i.ToGetCbhAvailabilityZonesAvailabilityZoneOutputWithContext(context.Background())
}

func (i GetCbhAvailabilityZonesAvailabilityZoneArgs) ToGetCbhAvailabilityZonesAvailabilityZoneOutputWithContext(ctx context.Context) GetCbhAvailabilityZonesAvailabilityZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbhAvailabilityZonesAvailabilityZoneOutput)
}

// GetCbhAvailabilityZonesAvailabilityZoneArrayInput is an input type that accepts GetCbhAvailabilityZonesAvailabilityZoneArray and GetCbhAvailabilityZonesAvailabilityZoneArrayOutput values.
// You can construct a concrete instance of `GetCbhAvailabilityZonesAvailabilityZoneArrayInput` via:
//
//	GetCbhAvailabilityZonesAvailabilityZoneArray{ GetCbhAvailabilityZonesAvailabilityZoneArgs{...} }
type GetCbhAvailabilityZonesAvailabilityZoneArrayInput interface {
	pulumi.Input

	ToGetCbhAvailabilityZonesAvailabilityZoneArrayOutput() GetCbhAvailabilityZonesAvailabilityZoneArrayOutput
	ToGetCbhAvailabilityZonesAvailabilityZoneArrayOutputWithContext(context.Context) GetCbhAvailabilityZonesAvailabilityZoneArrayOutput
}

type GetCbhAvailabilityZonesAvailabilityZoneArray []GetCbhAvailabilityZonesAvailabilityZoneInput

func (GetCbhAvailabilityZonesAvailabilityZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbhAvailabilityZonesAvailabilityZone)(nil)).Elem()
}

func (i GetCbhAvailabilityZonesAvailabilityZoneArray) ToGetCbhAvailabilityZonesAvailabilityZoneArrayOutput() GetCbhAvailabilityZonesAvailabilityZoneArrayOutput {
	return i.ToGetCbhAvailabilityZonesAvailabilityZoneArrayOutputWithContext(context.Background())
}

func (i GetCbhAvailabilityZonesAvailabilityZoneArray) ToGetCbhAvailabilityZonesAvailabilityZoneArrayOutputWithContext(ctx context.Context) GetCbhAvailabilityZonesAvailabilityZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbhAvailabilityZonesAvailabilityZoneArrayOutput)
}

type GetCbhAvailabilityZonesAvailabilityZoneOutput struct{ *pulumi.OutputState }

func (GetCbhAvailabilityZonesAvailabilityZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbhAvailabilityZonesAvailabilityZone)(nil)).Elem()
}

func (o GetCbhAvailabilityZonesAvailabilityZoneOutput) ToGetCbhAvailabilityZonesAvailabilityZoneOutput() GetCbhAvailabilityZonesAvailabilityZoneOutput {
	return o
}

func (o GetCbhAvailabilityZonesAvailabilityZoneOutput) ToGetCbhAvailabilityZonesAvailabilityZoneOutputWithContext(ctx context.Context) GetCbhAvailabilityZonesAvailabilityZoneOutput {
	return o
}

func (o GetCbhAvailabilityZonesAvailabilityZoneOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhAvailabilityZonesAvailabilityZone) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetCbhAvailabilityZonesAvailabilityZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhAvailabilityZonesAvailabilityZone) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCbhAvailabilityZonesAvailabilityZoneOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhAvailabilityZonesAvailabilityZone) string { return v.RegionId }).(pulumi.StringOutput)
}

func (o GetCbhAvailabilityZonesAvailabilityZoneOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhAvailabilityZonesAvailabilityZone) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetCbhAvailabilityZonesAvailabilityZoneOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhAvailabilityZonesAvailabilityZone) string { return v.Type }).(pulumi.StringOutput)
}

type GetCbhAvailabilityZonesAvailabilityZoneArrayOutput struct{ *pulumi.OutputState }

func (GetCbhAvailabilityZonesAvailabilityZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbhAvailabilityZonesAvailabilityZone)(nil)).Elem()
}

func (o GetCbhAvailabilityZonesAvailabilityZoneArrayOutput) ToGetCbhAvailabilityZonesAvailabilityZoneArrayOutput() GetCbhAvailabilityZonesAvailabilityZoneArrayOutput {
	return o
}

func (o GetCbhAvailabilityZonesAvailabilityZoneArrayOutput) ToGetCbhAvailabilityZonesAvailabilityZoneArrayOutputWithContext(ctx context.Context) GetCbhAvailabilityZonesAvailabilityZoneArrayOutput {
	return o
}

func (o GetCbhAvailabilityZonesAvailabilityZoneArrayOutput) Index(i pulumi.IntInput) GetCbhAvailabilityZonesAvailabilityZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbhAvailabilityZonesAvailabilityZone {
		return vs[0].([]GetCbhAvailabilityZonesAvailabilityZone)[vs[1].(int)]
	}).(GetCbhAvailabilityZonesAvailabilityZoneOutput)
}

type GetCbhFlavorsFlavor struct {
	Asset             int     `pulumi:"asset"`
	DataDiskSize      float64 `pulumi:"dataDiskSize"`
	EcsSystemDataSize int     `pulumi:"ecsSystemDataSize"`
	Id                string  `pulumi:"id"`
	MaxConnection     int     `pulumi:"maxConnection"`
	Memory            int     `pulumi:"memory"`
	Type              string  `pulumi:"type"`
	Vcpus             int     `pulumi:"vcpus"`
}

// GetCbhFlavorsFlavorInput is an input type that accepts GetCbhFlavorsFlavorArgs and GetCbhFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetCbhFlavorsFlavorInput` via:
//
//	GetCbhFlavorsFlavorArgs{...}
type GetCbhFlavorsFlavorInput interface {
	pulumi.Input

	ToGetCbhFlavorsFlavorOutput() GetCbhFlavorsFlavorOutput
	ToGetCbhFlavorsFlavorOutputWithContext(context.Context) GetCbhFlavorsFlavorOutput
}

type GetCbhFlavorsFlavorArgs struct {
	Asset             pulumi.IntInput     `pulumi:"asset"`
	DataDiskSize      pulumi.Float64Input `pulumi:"dataDiskSize"`
	EcsSystemDataSize pulumi.IntInput     `pulumi:"ecsSystemDataSize"`
	Id                pulumi.StringInput  `pulumi:"id"`
	MaxConnection     pulumi.IntInput     `pulumi:"maxConnection"`
	Memory            pulumi.IntInput     `pulumi:"memory"`
	Type              pulumi.StringInput  `pulumi:"type"`
	Vcpus             pulumi.IntInput     `pulumi:"vcpus"`
}

func (GetCbhFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbhFlavorsFlavor)(nil)).Elem()
}

func (i GetCbhFlavorsFlavorArgs) ToGetCbhFlavorsFlavorOutput() GetCbhFlavorsFlavorOutput {
	return i.ToGetCbhFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetCbhFlavorsFlavorArgs) ToGetCbhFlavorsFlavorOutputWithContext(ctx context.Context) GetCbhFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbhFlavorsFlavorOutput)
}

// GetCbhFlavorsFlavorArrayInput is an input type that accepts GetCbhFlavorsFlavorArray and GetCbhFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetCbhFlavorsFlavorArrayInput` via:
//
//	GetCbhFlavorsFlavorArray{ GetCbhFlavorsFlavorArgs{...} }
type GetCbhFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetCbhFlavorsFlavorArrayOutput() GetCbhFlavorsFlavorArrayOutput
	ToGetCbhFlavorsFlavorArrayOutputWithContext(context.Context) GetCbhFlavorsFlavorArrayOutput
}

type GetCbhFlavorsFlavorArray []GetCbhFlavorsFlavorInput

func (GetCbhFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbhFlavorsFlavor)(nil)).Elem()
}

func (i GetCbhFlavorsFlavorArray) ToGetCbhFlavorsFlavorArrayOutput() GetCbhFlavorsFlavorArrayOutput {
	return i.ToGetCbhFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetCbhFlavorsFlavorArray) ToGetCbhFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCbhFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbhFlavorsFlavorArrayOutput)
}

type GetCbhFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetCbhFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbhFlavorsFlavor)(nil)).Elem()
}

func (o GetCbhFlavorsFlavorOutput) ToGetCbhFlavorsFlavorOutput() GetCbhFlavorsFlavorOutput {
	return o
}

func (o GetCbhFlavorsFlavorOutput) ToGetCbhFlavorsFlavorOutputWithContext(ctx context.Context) GetCbhFlavorsFlavorOutput {
	return o
}

func (o GetCbhFlavorsFlavorOutput) Asset() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) int { return v.Asset }).(pulumi.IntOutput)
}

func (o GetCbhFlavorsFlavorOutput) DataDiskSize() pulumi.Float64Output {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) float64 { return v.DataDiskSize }).(pulumi.Float64Output)
}

func (o GetCbhFlavorsFlavorOutput) EcsSystemDataSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) int { return v.EcsSystemDataSize }).(pulumi.IntOutput)
}

func (o GetCbhFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCbhFlavorsFlavorOutput) MaxConnection() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) int { return v.MaxConnection }).(pulumi.IntOutput)
}

func (o GetCbhFlavorsFlavorOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetCbhFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetCbhFlavorsFlavorOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbhFlavorsFlavor) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetCbhFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetCbhFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbhFlavorsFlavor)(nil)).Elem()
}

func (o GetCbhFlavorsFlavorArrayOutput) ToGetCbhFlavorsFlavorArrayOutput() GetCbhFlavorsFlavorArrayOutput {
	return o
}

func (o GetCbhFlavorsFlavorArrayOutput) ToGetCbhFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCbhFlavorsFlavorArrayOutput {
	return o
}

func (o GetCbhFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetCbhFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbhFlavorsFlavor {
		return vs[0].([]GetCbhFlavorsFlavor)[vs[1].(int)]
	}).(GetCbhFlavorsFlavorOutput)
}

type GetCbhInstancesInstance struct {
	// Indicates the availability zone name.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the specification of the instance.
	FlavorId string `pulumi:"flavorId"`
	// Indicates the ID of the instance.
	Id string `pulumi:"id"`
	// Indicates the instance name.
	Name string `pulumi:"name"`
	// Indicates the private IP address of the instance.
	PrivateIp string `pulumi:"privateIp"`
	// Indicates the elastic IP address.
	PublicIp string `pulumi:"publicIp"`
	// Indicates the ID of the elastic IP.
	PublicIpId string `pulumi:"publicIpId"`
	// Indicates the ID of a security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Indicates the status of the instance.
	Status string `pulumi:"status"`
	// Indicates the ID of a subnet.
	SubnetId string `pulumi:"subnetId"`
	// Indicates the current version of the instance image.
	Version string `pulumi:"version"`
	// Indicates the ID of a VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetCbhInstancesInstanceInput is an input type that accepts GetCbhInstancesInstanceArgs and GetCbhInstancesInstanceOutput values.
// You can construct a concrete instance of `GetCbhInstancesInstanceInput` via:
//
//	GetCbhInstancesInstanceArgs{...}
type GetCbhInstancesInstanceInput interface {
	pulumi.Input

	ToGetCbhInstancesInstanceOutput() GetCbhInstancesInstanceOutput
	ToGetCbhInstancesInstanceOutputWithContext(context.Context) GetCbhInstancesInstanceOutput
}

type GetCbhInstancesInstanceArgs struct {
	// Indicates the availability zone name.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the specification of the instance.
	FlavorId pulumi.StringInput `pulumi:"flavorId"`
	// Indicates the ID of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates the instance name.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the private IP address of the instance.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// Indicates the elastic IP address.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Indicates the ID of the elastic IP.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
	// Indicates the ID of a security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Indicates the status of the instance.
	Status pulumi.StringInput `pulumi:"status"`
	// Indicates the ID of a subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Indicates the current version of the instance image.
	Version pulumi.StringInput `pulumi:"version"`
	// Indicates the ID of a VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetCbhInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbhInstancesInstance)(nil)).Elem()
}

func (i GetCbhInstancesInstanceArgs) ToGetCbhInstancesInstanceOutput() GetCbhInstancesInstanceOutput {
	return i.ToGetCbhInstancesInstanceOutputWithContext(context.Background())
}

func (i GetCbhInstancesInstanceArgs) ToGetCbhInstancesInstanceOutputWithContext(ctx context.Context) GetCbhInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbhInstancesInstanceOutput)
}

// GetCbhInstancesInstanceArrayInput is an input type that accepts GetCbhInstancesInstanceArray and GetCbhInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetCbhInstancesInstanceArrayInput` via:
//
//	GetCbhInstancesInstanceArray{ GetCbhInstancesInstanceArgs{...} }
type GetCbhInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetCbhInstancesInstanceArrayOutput() GetCbhInstancesInstanceArrayOutput
	ToGetCbhInstancesInstanceArrayOutputWithContext(context.Context) GetCbhInstancesInstanceArrayOutput
}

type GetCbhInstancesInstanceArray []GetCbhInstancesInstanceInput

func (GetCbhInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbhInstancesInstance)(nil)).Elem()
}

func (i GetCbhInstancesInstanceArray) ToGetCbhInstancesInstanceArrayOutput() GetCbhInstancesInstanceArrayOutput {
	return i.ToGetCbhInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetCbhInstancesInstanceArray) ToGetCbhInstancesInstanceArrayOutputWithContext(ctx context.Context) GetCbhInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbhInstancesInstanceArrayOutput)
}

type GetCbhInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetCbhInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbhInstancesInstance)(nil)).Elem()
}

func (o GetCbhInstancesInstanceOutput) ToGetCbhInstancesInstanceOutput() GetCbhInstancesInstanceOutput {
	return o
}

func (o GetCbhInstancesInstanceOutput) ToGetCbhInstancesInstanceOutputWithContext(ctx context.Context) GetCbhInstancesInstanceOutput {
	return o
}

// Indicates the availability zone name.
func (o GetCbhInstancesInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the specification of the instance.
func (o GetCbhInstancesInstanceOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.FlavorId }).(pulumi.StringOutput)
}

// Indicates the ID of the instance.
func (o GetCbhInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates the instance name.
func (o GetCbhInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the private IP address of the instance.
func (o GetCbhInstancesInstanceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// Indicates the elastic IP address.
func (o GetCbhInstancesInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Indicates the ID of the elastic IP.
func (o GetCbhInstancesInstanceOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.PublicIpId }).(pulumi.StringOutput)
}

// Indicates the ID of a security group.
func (o GetCbhInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Indicates the status of the instance.
func (o GetCbhInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Indicates the ID of a subnet.
func (o GetCbhInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the current version of the instance image.
func (o GetCbhInstancesInstanceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.Version }).(pulumi.StringOutput)
}

// Indicates the ID of a VPC.
func (o GetCbhInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbhInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetCbhInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetCbhInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbhInstancesInstance)(nil)).Elem()
}

func (o GetCbhInstancesInstanceArrayOutput) ToGetCbhInstancesInstanceArrayOutput() GetCbhInstancesInstanceArrayOutput {
	return o
}

func (o GetCbhInstancesInstanceArrayOutput) ToGetCbhInstancesInstanceArrayOutputWithContext(ctx context.Context) GetCbhInstancesInstanceArrayOutput {
	return o
}

func (o GetCbhInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetCbhInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbhInstancesInstance {
		return vs[0].([]GetCbhInstancesInstance)[vs[1].(int)]
	}).(GetCbhInstancesInstanceOutput)
}

type GetCbrBackupChildren struct {
	// The restore point ID of the sub-backup resource.
	CheckpointId string `pulumi:"checkpointId"`
	// The creation time of the sub-backup.
	CreatedAt string `pulumi:"createdAt"`
	// The sub-backup description.
	Description string `pulumi:"description"`
	// The enterprise project to which the backup sub-backup resource belongs.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The expiration time of the sub-backup.
	ExpiredAt string `pulumi:"expiredAt"`
	// The extended information.
	ExtendInfos []GetCbrBackupChildrenExtendInfo `pulumi:"extendInfos"`
	// The sub-backup ID.
	Id string `pulumi:"id"`
	// The sub-backup name.
	Name string `pulumi:"name"`
	// The replication records.
	ReplicationRecords []GetCbrBackupChildrenReplicationRecord `pulumi:"replicationRecords"`
	// The availability zone where the backup sub-backup resource is located.
	ResourceAz string `pulumi:"resourceAz"`
	// The sub-backup resource ID.
	ResourceId string `pulumi:"resourceId"`
	// The sub-backup resource name.
	ResourceName string `pulumi:"resourceName"`
	// The sub-backup resource size, in GB.
	ResourceSize int `pulumi:"resourceSize"`
	// The sub-backup resource type.
	ResourceType string `pulumi:"resourceType"`
	// The sub-backup status.
	Status string `pulumi:"status"`
	// The sub-backup type.
	Type string `pulumi:"type"`
	// The latest update time of the sub-backup.
	UpdatedAt string `pulumi:"updatedAt"`
	// The vault to which the backup sub-backup resource belongs.
	VaultId string `pulumi:"vaultId"`
}

// GetCbrBackupChildrenInput is an input type that accepts GetCbrBackupChildrenArgs and GetCbrBackupChildrenOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenInput` via:
//
//	GetCbrBackupChildrenArgs{...}
type GetCbrBackupChildrenInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenOutput() GetCbrBackupChildrenOutput
	ToGetCbrBackupChildrenOutputWithContext(context.Context) GetCbrBackupChildrenOutput
}

type GetCbrBackupChildrenArgs struct {
	// The restore point ID of the sub-backup resource.
	CheckpointId pulumi.StringInput `pulumi:"checkpointId"`
	// The creation time of the sub-backup.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The sub-backup description.
	Description pulumi.StringInput `pulumi:"description"`
	// The enterprise project to which the backup sub-backup resource belongs.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The expiration time of the sub-backup.
	ExpiredAt pulumi.StringInput `pulumi:"expiredAt"`
	// The extended information.
	ExtendInfos GetCbrBackupChildrenExtendInfoArrayInput `pulumi:"extendInfos"`
	// The sub-backup ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The sub-backup name.
	Name pulumi.StringInput `pulumi:"name"`
	// The replication records.
	ReplicationRecords GetCbrBackupChildrenReplicationRecordArrayInput `pulumi:"replicationRecords"`
	// The availability zone where the backup sub-backup resource is located.
	ResourceAz pulumi.StringInput `pulumi:"resourceAz"`
	// The sub-backup resource ID.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The sub-backup resource name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// The sub-backup resource size, in GB.
	ResourceSize pulumi.IntInput `pulumi:"resourceSize"`
	// The sub-backup resource type.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The sub-backup status.
	Status pulumi.StringInput `pulumi:"status"`
	// The sub-backup type.
	Type pulumi.StringInput `pulumi:"type"`
	// The latest update time of the sub-backup.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The vault to which the backup sub-backup resource belongs.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetCbrBackupChildrenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildren)(nil)).Elem()
}

func (i GetCbrBackupChildrenArgs) ToGetCbrBackupChildrenOutput() GetCbrBackupChildrenOutput {
	return i.ToGetCbrBackupChildrenOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenArgs) ToGetCbrBackupChildrenOutputWithContext(ctx context.Context) GetCbrBackupChildrenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenOutput)
}

// GetCbrBackupChildrenArrayInput is an input type that accepts GetCbrBackupChildrenArray and GetCbrBackupChildrenArrayOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenArrayInput` via:
//
//	GetCbrBackupChildrenArray{ GetCbrBackupChildrenArgs{...} }
type GetCbrBackupChildrenArrayInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenArrayOutput() GetCbrBackupChildrenArrayOutput
	ToGetCbrBackupChildrenArrayOutputWithContext(context.Context) GetCbrBackupChildrenArrayOutput
}

type GetCbrBackupChildrenArray []GetCbrBackupChildrenInput

func (GetCbrBackupChildrenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildren)(nil)).Elem()
}

func (i GetCbrBackupChildrenArray) ToGetCbrBackupChildrenArrayOutput() GetCbrBackupChildrenArrayOutput {
	return i.ToGetCbrBackupChildrenArrayOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenArray) ToGetCbrBackupChildrenArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenArrayOutput)
}

type GetCbrBackupChildrenOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildren)(nil)).Elem()
}

func (o GetCbrBackupChildrenOutput) ToGetCbrBackupChildrenOutput() GetCbrBackupChildrenOutput {
	return o
}

func (o GetCbrBackupChildrenOutput) ToGetCbrBackupChildrenOutputWithContext(ctx context.Context) GetCbrBackupChildrenOutput {
	return o
}

// The restore point ID of the sub-backup resource.
func (o GetCbrBackupChildrenOutput) CheckpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.CheckpointId }).(pulumi.StringOutput)
}

// The creation time of the sub-backup.
func (o GetCbrBackupChildrenOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The sub-backup description.
func (o GetCbrBackupChildrenOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.Description }).(pulumi.StringOutput)
}

// The enterprise project to which the backup sub-backup resource belongs.
func (o GetCbrBackupChildrenOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The expiration time of the sub-backup.
func (o GetCbrBackupChildrenOutput) ExpiredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.ExpiredAt }).(pulumi.StringOutput)
}

// The extended information.
func (o GetCbrBackupChildrenOutput) ExtendInfos() GetCbrBackupChildrenExtendInfoArrayOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) []GetCbrBackupChildrenExtendInfo { return v.ExtendInfos }).(GetCbrBackupChildrenExtendInfoArrayOutput)
}

// The sub-backup ID.
func (o GetCbrBackupChildrenOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.Id }).(pulumi.StringOutput)
}

// The sub-backup name.
func (o GetCbrBackupChildrenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.Name }).(pulumi.StringOutput)
}

// The replication records.
func (o GetCbrBackupChildrenOutput) ReplicationRecords() GetCbrBackupChildrenReplicationRecordArrayOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) []GetCbrBackupChildrenReplicationRecord { return v.ReplicationRecords }).(GetCbrBackupChildrenReplicationRecordArrayOutput)
}

// The availability zone where the backup sub-backup resource is located.
func (o GetCbrBackupChildrenOutput) ResourceAz() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.ResourceAz }).(pulumi.StringOutput)
}

// The sub-backup resource ID.
func (o GetCbrBackupChildrenOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The sub-backup resource name.
func (o GetCbrBackupChildrenOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.ResourceName }).(pulumi.StringOutput)
}

// The sub-backup resource size, in GB.
func (o GetCbrBackupChildrenOutput) ResourceSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) int { return v.ResourceSize }).(pulumi.IntOutput)
}

// The sub-backup resource type.
func (o GetCbrBackupChildrenOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The sub-backup status.
func (o GetCbrBackupChildrenOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.Status }).(pulumi.StringOutput)
}

// The sub-backup type.
func (o GetCbrBackupChildrenOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the sub-backup.
func (o GetCbrBackupChildrenOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The vault to which the backup sub-backup resource belongs.
func (o GetCbrBackupChildrenOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildren) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetCbrBackupChildrenArrayOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildren)(nil)).Elem()
}

func (o GetCbrBackupChildrenArrayOutput) ToGetCbrBackupChildrenArrayOutput() GetCbrBackupChildrenArrayOutput {
	return o
}

func (o GetCbrBackupChildrenArrayOutput) ToGetCbrBackupChildrenArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenArrayOutput {
	return o
}

func (o GetCbrBackupChildrenArrayOutput) Index(i pulumi.IntInput) GetCbrBackupChildrenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrBackupChildren {
		return vs[0].([]GetCbrBackupChildren)[vs[1].(int)]
	}).(GetCbrBackupChildrenOutput)
}

type GetCbrBackupChildrenExtendInfo struct {
	// Whether the backup is automatically generated.
	AutoTrigger bool `pulumi:"autoTrigger"`
	// Whether the backup is a system disk backup.
	Bootable bool `pulumi:"bootable"`
	// Whether the VM backup data contains system disk data.
	ContainSystemDisk bool `pulumi:"containSystemDisk"`
	// Whether the backup is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// Whether the backup is an incremental backup.
	Incremental bool `pulumi:"incremental"`
	// Whether the disk is a system disk.
	IsSystemDisk bool `pulumi:"isSystemDisk"`
	// The ID list of images created using backups.
	OsRegistryImages []string `pulumi:"osRegistryImages"`
	// Snapshot ID of the disk backup.
	SnapshotId string `pulumi:"snapshotId"`
	// Whether to allow lazyloading for fast restoration.
	SupportLld bool `pulumi:"supportLld"`
	// The restoration mode.
	SupportedRestoreMode string `pulumi:"supportedRestoreMode"`
}

// GetCbrBackupChildrenExtendInfoInput is an input type that accepts GetCbrBackupChildrenExtendInfoArgs and GetCbrBackupChildrenExtendInfoOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenExtendInfoInput` via:
//
//	GetCbrBackupChildrenExtendInfoArgs{...}
type GetCbrBackupChildrenExtendInfoInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenExtendInfoOutput() GetCbrBackupChildrenExtendInfoOutput
	ToGetCbrBackupChildrenExtendInfoOutputWithContext(context.Context) GetCbrBackupChildrenExtendInfoOutput
}

type GetCbrBackupChildrenExtendInfoArgs struct {
	// Whether the backup is automatically generated.
	AutoTrigger pulumi.BoolInput `pulumi:"autoTrigger"`
	// Whether the backup is a system disk backup.
	Bootable pulumi.BoolInput `pulumi:"bootable"`
	// Whether the VM backup data contains system disk data.
	ContainSystemDisk pulumi.BoolInput `pulumi:"containSystemDisk"`
	// Whether the backup is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// Whether the backup is an incremental backup.
	Incremental pulumi.BoolInput `pulumi:"incremental"`
	// Whether the disk is a system disk.
	IsSystemDisk pulumi.BoolInput `pulumi:"isSystemDisk"`
	// The ID list of images created using backups.
	OsRegistryImages pulumi.StringArrayInput `pulumi:"osRegistryImages"`
	// Snapshot ID of the disk backup.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Whether to allow lazyloading for fast restoration.
	SupportLld pulumi.BoolInput `pulumi:"supportLld"`
	// The restoration mode.
	SupportedRestoreMode pulumi.StringInput `pulumi:"supportedRestoreMode"`
}

func (GetCbrBackupChildrenExtendInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildrenExtendInfo)(nil)).Elem()
}

func (i GetCbrBackupChildrenExtendInfoArgs) ToGetCbrBackupChildrenExtendInfoOutput() GetCbrBackupChildrenExtendInfoOutput {
	return i.ToGetCbrBackupChildrenExtendInfoOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenExtendInfoArgs) ToGetCbrBackupChildrenExtendInfoOutputWithContext(ctx context.Context) GetCbrBackupChildrenExtendInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenExtendInfoOutput)
}

// GetCbrBackupChildrenExtendInfoArrayInput is an input type that accepts GetCbrBackupChildrenExtendInfoArray and GetCbrBackupChildrenExtendInfoArrayOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenExtendInfoArrayInput` via:
//
//	GetCbrBackupChildrenExtendInfoArray{ GetCbrBackupChildrenExtendInfoArgs{...} }
type GetCbrBackupChildrenExtendInfoArrayInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenExtendInfoArrayOutput() GetCbrBackupChildrenExtendInfoArrayOutput
	ToGetCbrBackupChildrenExtendInfoArrayOutputWithContext(context.Context) GetCbrBackupChildrenExtendInfoArrayOutput
}

type GetCbrBackupChildrenExtendInfoArray []GetCbrBackupChildrenExtendInfoInput

func (GetCbrBackupChildrenExtendInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildrenExtendInfo)(nil)).Elem()
}

func (i GetCbrBackupChildrenExtendInfoArray) ToGetCbrBackupChildrenExtendInfoArrayOutput() GetCbrBackupChildrenExtendInfoArrayOutput {
	return i.ToGetCbrBackupChildrenExtendInfoArrayOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenExtendInfoArray) ToGetCbrBackupChildrenExtendInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenExtendInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenExtendInfoArrayOutput)
}

type GetCbrBackupChildrenExtendInfoOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenExtendInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildrenExtendInfo)(nil)).Elem()
}

func (o GetCbrBackupChildrenExtendInfoOutput) ToGetCbrBackupChildrenExtendInfoOutput() GetCbrBackupChildrenExtendInfoOutput {
	return o
}

func (o GetCbrBackupChildrenExtendInfoOutput) ToGetCbrBackupChildrenExtendInfoOutputWithContext(ctx context.Context) GetCbrBackupChildrenExtendInfoOutput {
	return o
}

// Whether the backup is automatically generated.
func (o GetCbrBackupChildrenExtendInfoOutput) AutoTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) bool { return v.AutoTrigger }).(pulumi.BoolOutput)
}

// Whether the backup is a system disk backup.
func (o GetCbrBackupChildrenExtendInfoOutput) Bootable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) bool { return v.Bootable }).(pulumi.BoolOutput)
}

// Whether the VM backup data contains system disk data.
func (o GetCbrBackupChildrenExtendInfoOutput) ContainSystemDisk() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) bool { return v.ContainSystemDisk }).(pulumi.BoolOutput)
}

// Whether the backup is encrypted.
func (o GetCbrBackupChildrenExtendInfoOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// Whether the backup is an incremental backup.
func (o GetCbrBackupChildrenExtendInfoOutput) Incremental() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) bool { return v.Incremental }).(pulumi.BoolOutput)
}

// Whether the disk is a system disk.
func (o GetCbrBackupChildrenExtendInfoOutput) IsSystemDisk() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) bool { return v.IsSystemDisk }).(pulumi.BoolOutput)
}

// The ID list of images created using backups.
func (o GetCbrBackupChildrenExtendInfoOutput) OsRegistryImages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) []string { return v.OsRegistryImages }).(pulumi.StringArrayOutput)
}

// Snapshot ID of the disk backup.
func (o GetCbrBackupChildrenExtendInfoOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Whether to allow lazyloading for fast restoration.
func (o GetCbrBackupChildrenExtendInfoOutput) SupportLld() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) bool { return v.SupportLld }).(pulumi.BoolOutput)
}

// The restoration mode.
func (o GetCbrBackupChildrenExtendInfoOutput) SupportedRestoreMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenExtendInfo) string { return v.SupportedRestoreMode }).(pulumi.StringOutput)
}

type GetCbrBackupChildrenExtendInfoArrayOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenExtendInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildrenExtendInfo)(nil)).Elem()
}

func (o GetCbrBackupChildrenExtendInfoArrayOutput) ToGetCbrBackupChildrenExtendInfoArrayOutput() GetCbrBackupChildrenExtendInfoArrayOutput {
	return o
}

func (o GetCbrBackupChildrenExtendInfoArrayOutput) ToGetCbrBackupChildrenExtendInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenExtendInfoArrayOutput {
	return o
}

func (o GetCbrBackupChildrenExtendInfoArrayOutput) Index(i pulumi.IntInput) GetCbrBackupChildrenExtendInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrBackupChildrenExtendInfo {
		return vs[0].([]GetCbrBackupChildrenExtendInfo)[vs[1].(int)]
	}).(GetCbrBackupChildrenExtendInfoOutput)
}

type GetCbrBackupChildrenReplicationRecord struct {
	// The creation time of the replication.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the destination backup used for replication.
	DestinationBackupId string `pulumi:"destinationBackupId"`
	// The record ID of the destination backup used for replication.
	DestinationCheckpointId string `pulumi:"destinationCheckpointId"`
	// The ID of the replication destination project.
	DestinationProjectId string `pulumi:"destinationProjectId"`
	// The replication destination region.
	DestinationRegion string `pulumi:"destinationRegion"`
	// The destination vault ID.
	DestinationVaultId string `pulumi:"destinationVaultId"`
	// The additional information of the replication.
	ExtraInfos []GetCbrBackupChildrenReplicationRecordExtraInfo `pulumi:"extraInfos"`
	// The replication record ID.
	Id string `pulumi:"id"`
	// The ID of the source backup used for replication.
	SourceBackupId string `pulumi:"sourceBackupId"`
	// The ID of the source backup record used for replication.
	SourceCheckpointId string `pulumi:"sourceCheckpointId"`
	// The ID of the replication source project.
	SourceProjectId string `pulumi:"sourceProjectId"`
	// The replication source region.
	SourceRegion string `pulumi:"sourceRegion"`
	// The replication status.
	Status string `pulumi:"status"`
	// The ID of the vault where the backup resides.
	VaultId string `pulumi:"vaultId"`
}

// GetCbrBackupChildrenReplicationRecordInput is an input type that accepts GetCbrBackupChildrenReplicationRecordArgs and GetCbrBackupChildrenReplicationRecordOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenReplicationRecordInput` via:
//
//	GetCbrBackupChildrenReplicationRecordArgs{...}
type GetCbrBackupChildrenReplicationRecordInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenReplicationRecordOutput() GetCbrBackupChildrenReplicationRecordOutput
	ToGetCbrBackupChildrenReplicationRecordOutputWithContext(context.Context) GetCbrBackupChildrenReplicationRecordOutput
}

type GetCbrBackupChildrenReplicationRecordArgs struct {
	// The creation time of the replication.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the destination backup used for replication.
	DestinationBackupId pulumi.StringInput `pulumi:"destinationBackupId"`
	// The record ID of the destination backup used for replication.
	DestinationCheckpointId pulumi.StringInput `pulumi:"destinationCheckpointId"`
	// The ID of the replication destination project.
	DestinationProjectId pulumi.StringInput `pulumi:"destinationProjectId"`
	// The replication destination region.
	DestinationRegion pulumi.StringInput `pulumi:"destinationRegion"`
	// The destination vault ID.
	DestinationVaultId pulumi.StringInput `pulumi:"destinationVaultId"`
	// The additional information of the replication.
	ExtraInfos GetCbrBackupChildrenReplicationRecordExtraInfoArrayInput `pulumi:"extraInfos"`
	// The replication record ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the source backup used for replication.
	SourceBackupId pulumi.StringInput `pulumi:"sourceBackupId"`
	// The ID of the source backup record used for replication.
	SourceCheckpointId pulumi.StringInput `pulumi:"sourceCheckpointId"`
	// The ID of the replication source project.
	SourceProjectId pulumi.StringInput `pulumi:"sourceProjectId"`
	// The replication source region.
	SourceRegion pulumi.StringInput `pulumi:"sourceRegion"`
	// The replication status.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the vault where the backup resides.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetCbrBackupChildrenReplicationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildrenReplicationRecord)(nil)).Elem()
}

func (i GetCbrBackupChildrenReplicationRecordArgs) ToGetCbrBackupChildrenReplicationRecordOutput() GetCbrBackupChildrenReplicationRecordOutput {
	return i.ToGetCbrBackupChildrenReplicationRecordOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenReplicationRecordArgs) ToGetCbrBackupChildrenReplicationRecordOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenReplicationRecordOutput)
}

// GetCbrBackupChildrenReplicationRecordArrayInput is an input type that accepts GetCbrBackupChildrenReplicationRecordArray and GetCbrBackupChildrenReplicationRecordArrayOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenReplicationRecordArrayInput` via:
//
//	GetCbrBackupChildrenReplicationRecordArray{ GetCbrBackupChildrenReplicationRecordArgs{...} }
type GetCbrBackupChildrenReplicationRecordArrayInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenReplicationRecordArrayOutput() GetCbrBackupChildrenReplicationRecordArrayOutput
	ToGetCbrBackupChildrenReplicationRecordArrayOutputWithContext(context.Context) GetCbrBackupChildrenReplicationRecordArrayOutput
}

type GetCbrBackupChildrenReplicationRecordArray []GetCbrBackupChildrenReplicationRecordInput

func (GetCbrBackupChildrenReplicationRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildrenReplicationRecord)(nil)).Elem()
}

func (i GetCbrBackupChildrenReplicationRecordArray) ToGetCbrBackupChildrenReplicationRecordArrayOutput() GetCbrBackupChildrenReplicationRecordArrayOutput {
	return i.ToGetCbrBackupChildrenReplicationRecordArrayOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenReplicationRecordArray) ToGetCbrBackupChildrenReplicationRecordArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenReplicationRecordArrayOutput)
}

type GetCbrBackupChildrenReplicationRecordOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenReplicationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildrenReplicationRecord)(nil)).Elem()
}

func (o GetCbrBackupChildrenReplicationRecordOutput) ToGetCbrBackupChildrenReplicationRecordOutput() GetCbrBackupChildrenReplicationRecordOutput {
	return o
}

func (o GetCbrBackupChildrenReplicationRecordOutput) ToGetCbrBackupChildrenReplicationRecordOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordOutput {
	return o
}

// The creation time of the replication.
func (o GetCbrBackupChildrenReplicationRecordOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the destination backup used for replication.
func (o GetCbrBackupChildrenReplicationRecordOutput) DestinationBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.DestinationBackupId }).(pulumi.StringOutput)
}

// The record ID of the destination backup used for replication.
func (o GetCbrBackupChildrenReplicationRecordOutput) DestinationCheckpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.DestinationCheckpointId }).(pulumi.StringOutput)
}

// The ID of the replication destination project.
func (o GetCbrBackupChildrenReplicationRecordOutput) DestinationProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.DestinationProjectId }).(pulumi.StringOutput)
}

// The replication destination region.
func (o GetCbrBackupChildrenReplicationRecordOutput) DestinationRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.DestinationRegion }).(pulumi.StringOutput)
}

// The destination vault ID.
func (o GetCbrBackupChildrenReplicationRecordOutput) DestinationVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.DestinationVaultId }).(pulumi.StringOutput)
}

// The additional information of the replication.
func (o GetCbrBackupChildrenReplicationRecordOutput) ExtraInfos() GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) []GetCbrBackupChildrenReplicationRecordExtraInfo {
		return v.ExtraInfos
	}).(GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput)
}

// The replication record ID.
func (o GetCbrBackupChildrenReplicationRecordOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the source backup used for replication.
func (o GetCbrBackupChildrenReplicationRecordOutput) SourceBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.SourceBackupId }).(pulumi.StringOutput)
}

// The ID of the source backup record used for replication.
func (o GetCbrBackupChildrenReplicationRecordOutput) SourceCheckpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.SourceCheckpointId }).(pulumi.StringOutput)
}

// The ID of the replication source project.
func (o GetCbrBackupChildrenReplicationRecordOutput) SourceProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.SourceProjectId }).(pulumi.StringOutput)
}

// The replication source region.
func (o GetCbrBackupChildrenReplicationRecordOutput) SourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.SourceRegion }).(pulumi.StringOutput)
}

// The replication status.
func (o GetCbrBackupChildrenReplicationRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the vault where the backup resides.
func (o GetCbrBackupChildrenReplicationRecordOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecord) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetCbrBackupChildrenReplicationRecordArrayOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenReplicationRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildrenReplicationRecord)(nil)).Elem()
}

func (o GetCbrBackupChildrenReplicationRecordArrayOutput) ToGetCbrBackupChildrenReplicationRecordArrayOutput() GetCbrBackupChildrenReplicationRecordArrayOutput {
	return o
}

func (o GetCbrBackupChildrenReplicationRecordArrayOutput) ToGetCbrBackupChildrenReplicationRecordArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordArrayOutput {
	return o
}

func (o GetCbrBackupChildrenReplicationRecordArrayOutput) Index(i pulumi.IntInput) GetCbrBackupChildrenReplicationRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrBackupChildrenReplicationRecord {
		return vs[0].([]GetCbrBackupChildrenReplicationRecord)[vs[1].(int)]
	}).(GetCbrBackupChildrenReplicationRecordOutput)
}

type GetCbrBackupChildrenReplicationRecordExtraInfo struct {
	// Whether replication is automatically scheduled.
	AutoTrigger bool `pulumi:"autoTrigger"`
	// The destination vault ID.
	DestinationVaultId string `pulumi:"destinationVaultId"`
	// The error code.
	FailCode string `pulumi:"failCode"`
	// The error cause.
	FailReason string `pulumi:"failReason"`
	// The replication progress.
	Progress int `pulumi:"progress"`
}

// GetCbrBackupChildrenReplicationRecordExtraInfoInput is an input type that accepts GetCbrBackupChildrenReplicationRecordExtraInfoArgs and GetCbrBackupChildrenReplicationRecordExtraInfoOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenReplicationRecordExtraInfoInput` via:
//
//	GetCbrBackupChildrenReplicationRecordExtraInfoArgs{...}
type GetCbrBackupChildrenReplicationRecordExtraInfoInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenReplicationRecordExtraInfoOutput() GetCbrBackupChildrenReplicationRecordExtraInfoOutput
	ToGetCbrBackupChildrenReplicationRecordExtraInfoOutputWithContext(context.Context) GetCbrBackupChildrenReplicationRecordExtraInfoOutput
}

type GetCbrBackupChildrenReplicationRecordExtraInfoArgs struct {
	// Whether replication is automatically scheduled.
	AutoTrigger pulumi.BoolInput `pulumi:"autoTrigger"`
	// The destination vault ID.
	DestinationVaultId pulumi.StringInput `pulumi:"destinationVaultId"`
	// The error code.
	FailCode pulumi.StringInput `pulumi:"failCode"`
	// The error cause.
	FailReason pulumi.StringInput `pulumi:"failReason"`
	// The replication progress.
	Progress pulumi.IntInput `pulumi:"progress"`
}

func (GetCbrBackupChildrenReplicationRecordExtraInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildrenReplicationRecordExtraInfo)(nil)).Elem()
}

func (i GetCbrBackupChildrenReplicationRecordExtraInfoArgs) ToGetCbrBackupChildrenReplicationRecordExtraInfoOutput() GetCbrBackupChildrenReplicationRecordExtraInfoOutput {
	return i.ToGetCbrBackupChildrenReplicationRecordExtraInfoOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenReplicationRecordExtraInfoArgs) ToGetCbrBackupChildrenReplicationRecordExtraInfoOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordExtraInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenReplicationRecordExtraInfoOutput)
}

// GetCbrBackupChildrenReplicationRecordExtraInfoArrayInput is an input type that accepts GetCbrBackupChildrenReplicationRecordExtraInfoArray and GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput values.
// You can construct a concrete instance of `GetCbrBackupChildrenReplicationRecordExtraInfoArrayInput` via:
//
//	GetCbrBackupChildrenReplicationRecordExtraInfoArray{ GetCbrBackupChildrenReplicationRecordExtraInfoArgs{...} }
type GetCbrBackupChildrenReplicationRecordExtraInfoArrayInput interface {
	pulumi.Input

	ToGetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput() GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput
	ToGetCbrBackupChildrenReplicationRecordExtraInfoArrayOutputWithContext(context.Context) GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput
}

type GetCbrBackupChildrenReplicationRecordExtraInfoArray []GetCbrBackupChildrenReplicationRecordExtraInfoInput

func (GetCbrBackupChildrenReplicationRecordExtraInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildrenReplicationRecordExtraInfo)(nil)).Elem()
}

func (i GetCbrBackupChildrenReplicationRecordExtraInfoArray) ToGetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput() GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput {
	return i.ToGetCbrBackupChildrenReplicationRecordExtraInfoArrayOutputWithContext(context.Background())
}

func (i GetCbrBackupChildrenReplicationRecordExtraInfoArray) ToGetCbrBackupChildrenReplicationRecordExtraInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput)
}

type GetCbrBackupChildrenReplicationRecordExtraInfoOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenReplicationRecordExtraInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupChildrenReplicationRecordExtraInfo)(nil)).Elem()
}

func (o GetCbrBackupChildrenReplicationRecordExtraInfoOutput) ToGetCbrBackupChildrenReplicationRecordExtraInfoOutput() GetCbrBackupChildrenReplicationRecordExtraInfoOutput {
	return o
}

func (o GetCbrBackupChildrenReplicationRecordExtraInfoOutput) ToGetCbrBackupChildrenReplicationRecordExtraInfoOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordExtraInfoOutput {
	return o
}

// Whether replication is automatically scheduled.
func (o GetCbrBackupChildrenReplicationRecordExtraInfoOutput) AutoTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecordExtraInfo) bool { return v.AutoTrigger }).(pulumi.BoolOutput)
}

// The destination vault ID.
func (o GetCbrBackupChildrenReplicationRecordExtraInfoOutput) DestinationVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecordExtraInfo) string { return v.DestinationVaultId }).(pulumi.StringOutput)
}

// The error code.
func (o GetCbrBackupChildrenReplicationRecordExtraInfoOutput) FailCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecordExtraInfo) string { return v.FailCode }).(pulumi.StringOutput)
}

// The error cause.
func (o GetCbrBackupChildrenReplicationRecordExtraInfoOutput) FailReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecordExtraInfo) string { return v.FailReason }).(pulumi.StringOutput)
}

// The replication progress.
func (o GetCbrBackupChildrenReplicationRecordExtraInfoOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrBackupChildrenReplicationRecordExtraInfo) int { return v.Progress }).(pulumi.IntOutput)
}

type GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput struct{ *pulumi.OutputState }

func (GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupChildrenReplicationRecordExtraInfo)(nil)).Elem()
}

func (o GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput) ToGetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput() GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput {
	return o
}

func (o GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput) ToGetCbrBackupChildrenReplicationRecordExtraInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput {
	return o
}

func (o GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput) Index(i pulumi.IntInput) GetCbrBackupChildrenReplicationRecordExtraInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrBackupChildrenReplicationRecordExtraInfo {
		return vs[0].([]GetCbrBackupChildrenReplicationRecordExtraInfo)[vs[1].(int)]
	}).(GetCbrBackupChildrenReplicationRecordExtraInfoOutput)
}

type GetCbrBackupExtendInfo struct {
	// Whether the backup is automatically generated.
	AutoTrigger bool `pulumi:"autoTrigger"`
	// Whether the backup is a system disk backup.
	Bootable bool `pulumi:"bootable"`
	// Whether the VM backup data contains system disk data.
	ContainSystemDisk bool `pulumi:"containSystemDisk"`
	// Whether the backup is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// Whether the backup is an incremental backup.
	Incremental bool `pulumi:"incremental"`
	// Whether the disk is a system disk.
	IsSystemDisk bool `pulumi:"isSystemDisk"`
	// The ID list of images created using backups.
	OsRegistryImages []string `pulumi:"osRegistryImages"`
	// Snapshot ID of the disk backup.
	SnapshotId string `pulumi:"snapshotId"`
	// Whether to allow lazyloading for fast restoration.
	SupportLld bool `pulumi:"supportLld"`
	// The restoration mode.
	SupportedRestoreMode string `pulumi:"supportedRestoreMode"`
}

// GetCbrBackupExtendInfoInput is an input type that accepts GetCbrBackupExtendInfoArgs and GetCbrBackupExtendInfoOutput values.
// You can construct a concrete instance of `GetCbrBackupExtendInfoInput` via:
//
//	GetCbrBackupExtendInfoArgs{...}
type GetCbrBackupExtendInfoInput interface {
	pulumi.Input

	ToGetCbrBackupExtendInfoOutput() GetCbrBackupExtendInfoOutput
	ToGetCbrBackupExtendInfoOutputWithContext(context.Context) GetCbrBackupExtendInfoOutput
}

type GetCbrBackupExtendInfoArgs struct {
	// Whether the backup is automatically generated.
	AutoTrigger pulumi.BoolInput `pulumi:"autoTrigger"`
	// Whether the backup is a system disk backup.
	Bootable pulumi.BoolInput `pulumi:"bootable"`
	// Whether the VM backup data contains system disk data.
	ContainSystemDisk pulumi.BoolInput `pulumi:"containSystemDisk"`
	// Whether the backup is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// Whether the backup is an incremental backup.
	Incremental pulumi.BoolInput `pulumi:"incremental"`
	// Whether the disk is a system disk.
	IsSystemDisk pulumi.BoolInput `pulumi:"isSystemDisk"`
	// The ID list of images created using backups.
	OsRegistryImages pulumi.StringArrayInput `pulumi:"osRegistryImages"`
	// Snapshot ID of the disk backup.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Whether to allow lazyloading for fast restoration.
	SupportLld pulumi.BoolInput `pulumi:"supportLld"`
	// The restoration mode.
	SupportedRestoreMode pulumi.StringInput `pulumi:"supportedRestoreMode"`
}

func (GetCbrBackupExtendInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupExtendInfo)(nil)).Elem()
}

func (i GetCbrBackupExtendInfoArgs) ToGetCbrBackupExtendInfoOutput() GetCbrBackupExtendInfoOutput {
	return i.ToGetCbrBackupExtendInfoOutputWithContext(context.Background())
}

func (i GetCbrBackupExtendInfoArgs) ToGetCbrBackupExtendInfoOutputWithContext(ctx context.Context) GetCbrBackupExtendInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupExtendInfoOutput)
}

// GetCbrBackupExtendInfoArrayInput is an input type that accepts GetCbrBackupExtendInfoArray and GetCbrBackupExtendInfoArrayOutput values.
// You can construct a concrete instance of `GetCbrBackupExtendInfoArrayInput` via:
//
//	GetCbrBackupExtendInfoArray{ GetCbrBackupExtendInfoArgs{...} }
type GetCbrBackupExtendInfoArrayInput interface {
	pulumi.Input

	ToGetCbrBackupExtendInfoArrayOutput() GetCbrBackupExtendInfoArrayOutput
	ToGetCbrBackupExtendInfoArrayOutputWithContext(context.Context) GetCbrBackupExtendInfoArrayOutput
}

type GetCbrBackupExtendInfoArray []GetCbrBackupExtendInfoInput

func (GetCbrBackupExtendInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupExtendInfo)(nil)).Elem()
}

func (i GetCbrBackupExtendInfoArray) ToGetCbrBackupExtendInfoArrayOutput() GetCbrBackupExtendInfoArrayOutput {
	return i.ToGetCbrBackupExtendInfoArrayOutputWithContext(context.Background())
}

func (i GetCbrBackupExtendInfoArray) ToGetCbrBackupExtendInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupExtendInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupExtendInfoArrayOutput)
}

type GetCbrBackupExtendInfoOutput struct{ *pulumi.OutputState }

func (GetCbrBackupExtendInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupExtendInfo)(nil)).Elem()
}

func (o GetCbrBackupExtendInfoOutput) ToGetCbrBackupExtendInfoOutput() GetCbrBackupExtendInfoOutput {
	return o
}

func (o GetCbrBackupExtendInfoOutput) ToGetCbrBackupExtendInfoOutputWithContext(ctx context.Context) GetCbrBackupExtendInfoOutput {
	return o
}

// Whether the backup is automatically generated.
func (o GetCbrBackupExtendInfoOutput) AutoTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) bool { return v.AutoTrigger }).(pulumi.BoolOutput)
}

// Whether the backup is a system disk backup.
func (o GetCbrBackupExtendInfoOutput) Bootable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) bool { return v.Bootable }).(pulumi.BoolOutput)
}

// Whether the VM backup data contains system disk data.
func (o GetCbrBackupExtendInfoOutput) ContainSystemDisk() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) bool { return v.ContainSystemDisk }).(pulumi.BoolOutput)
}

// Whether the backup is encrypted.
func (o GetCbrBackupExtendInfoOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// Whether the backup is an incremental backup.
func (o GetCbrBackupExtendInfoOutput) Incremental() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) bool { return v.Incremental }).(pulumi.BoolOutput)
}

// Whether the disk is a system disk.
func (o GetCbrBackupExtendInfoOutput) IsSystemDisk() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) bool { return v.IsSystemDisk }).(pulumi.BoolOutput)
}

// The ID list of images created using backups.
func (o GetCbrBackupExtendInfoOutput) OsRegistryImages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) []string { return v.OsRegistryImages }).(pulumi.StringArrayOutput)
}

// Snapshot ID of the disk backup.
func (o GetCbrBackupExtendInfoOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Whether to allow lazyloading for fast restoration.
func (o GetCbrBackupExtendInfoOutput) SupportLld() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) bool { return v.SupportLld }).(pulumi.BoolOutput)
}

// The restoration mode.
func (o GetCbrBackupExtendInfoOutput) SupportedRestoreMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupExtendInfo) string { return v.SupportedRestoreMode }).(pulumi.StringOutput)
}

type GetCbrBackupExtendInfoArrayOutput struct{ *pulumi.OutputState }

func (GetCbrBackupExtendInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupExtendInfo)(nil)).Elem()
}

func (o GetCbrBackupExtendInfoArrayOutput) ToGetCbrBackupExtendInfoArrayOutput() GetCbrBackupExtendInfoArrayOutput {
	return o
}

func (o GetCbrBackupExtendInfoArrayOutput) ToGetCbrBackupExtendInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupExtendInfoArrayOutput {
	return o
}

func (o GetCbrBackupExtendInfoArrayOutput) Index(i pulumi.IntInput) GetCbrBackupExtendInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrBackupExtendInfo {
		return vs[0].([]GetCbrBackupExtendInfo)[vs[1].(int)]
	}).(GetCbrBackupExtendInfoOutput)
}

type GetCbrBackupReplicationRecord struct {
	// The creation time of the replication.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the destination backup used for replication.
	DestinationBackupId string `pulumi:"destinationBackupId"`
	// The record ID of the destination backup used for replication.
	DestinationCheckpointId string `pulumi:"destinationCheckpointId"`
	// The ID of the replication destination project.
	DestinationProjectId string `pulumi:"destinationProjectId"`
	// The replication destination region.
	DestinationRegion string `pulumi:"destinationRegion"`
	// The destination vault ID.
	DestinationVaultId string `pulumi:"destinationVaultId"`
	// The additional information of the replication.
	ExtraInfos []GetCbrBackupReplicationRecordExtraInfo `pulumi:"extraInfos"`
	// The replication record ID.
	Id string `pulumi:"id"`
	// The ID of the source backup used for replication.
	SourceBackupId string `pulumi:"sourceBackupId"`
	// The ID of the source backup record used for replication.
	SourceCheckpointId string `pulumi:"sourceCheckpointId"`
	// The ID of the replication source project.
	SourceProjectId string `pulumi:"sourceProjectId"`
	// The replication source region.
	SourceRegion string `pulumi:"sourceRegion"`
	// The replication status.
	Status string `pulumi:"status"`
	// The ID of the vault where the backup resides.
	VaultId string `pulumi:"vaultId"`
}

// GetCbrBackupReplicationRecordInput is an input type that accepts GetCbrBackupReplicationRecordArgs and GetCbrBackupReplicationRecordOutput values.
// You can construct a concrete instance of `GetCbrBackupReplicationRecordInput` via:
//
//	GetCbrBackupReplicationRecordArgs{...}
type GetCbrBackupReplicationRecordInput interface {
	pulumi.Input

	ToGetCbrBackupReplicationRecordOutput() GetCbrBackupReplicationRecordOutput
	ToGetCbrBackupReplicationRecordOutputWithContext(context.Context) GetCbrBackupReplicationRecordOutput
}

type GetCbrBackupReplicationRecordArgs struct {
	// The creation time of the replication.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the destination backup used for replication.
	DestinationBackupId pulumi.StringInput `pulumi:"destinationBackupId"`
	// The record ID of the destination backup used for replication.
	DestinationCheckpointId pulumi.StringInput `pulumi:"destinationCheckpointId"`
	// The ID of the replication destination project.
	DestinationProjectId pulumi.StringInput `pulumi:"destinationProjectId"`
	// The replication destination region.
	DestinationRegion pulumi.StringInput `pulumi:"destinationRegion"`
	// The destination vault ID.
	DestinationVaultId pulumi.StringInput `pulumi:"destinationVaultId"`
	// The additional information of the replication.
	ExtraInfos GetCbrBackupReplicationRecordExtraInfoArrayInput `pulumi:"extraInfos"`
	// The replication record ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the source backup used for replication.
	SourceBackupId pulumi.StringInput `pulumi:"sourceBackupId"`
	// The ID of the source backup record used for replication.
	SourceCheckpointId pulumi.StringInput `pulumi:"sourceCheckpointId"`
	// The ID of the replication source project.
	SourceProjectId pulumi.StringInput `pulumi:"sourceProjectId"`
	// The replication source region.
	SourceRegion pulumi.StringInput `pulumi:"sourceRegion"`
	// The replication status.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the vault where the backup resides.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetCbrBackupReplicationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupReplicationRecord)(nil)).Elem()
}

func (i GetCbrBackupReplicationRecordArgs) ToGetCbrBackupReplicationRecordOutput() GetCbrBackupReplicationRecordOutput {
	return i.ToGetCbrBackupReplicationRecordOutputWithContext(context.Background())
}

func (i GetCbrBackupReplicationRecordArgs) ToGetCbrBackupReplicationRecordOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupReplicationRecordOutput)
}

// GetCbrBackupReplicationRecordArrayInput is an input type that accepts GetCbrBackupReplicationRecordArray and GetCbrBackupReplicationRecordArrayOutput values.
// You can construct a concrete instance of `GetCbrBackupReplicationRecordArrayInput` via:
//
//	GetCbrBackupReplicationRecordArray{ GetCbrBackupReplicationRecordArgs{...} }
type GetCbrBackupReplicationRecordArrayInput interface {
	pulumi.Input

	ToGetCbrBackupReplicationRecordArrayOutput() GetCbrBackupReplicationRecordArrayOutput
	ToGetCbrBackupReplicationRecordArrayOutputWithContext(context.Context) GetCbrBackupReplicationRecordArrayOutput
}

type GetCbrBackupReplicationRecordArray []GetCbrBackupReplicationRecordInput

func (GetCbrBackupReplicationRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupReplicationRecord)(nil)).Elem()
}

func (i GetCbrBackupReplicationRecordArray) ToGetCbrBackupReplicationRecordArrayOutput() GetCbrBackupReplicationRecordArrayOutput {
	return i.ToGetCbrBackupReplicationRecordArrayOutputWithContext(context.Background())
}

func (i GetCbrBackupReplicationRecordArray) ToGetCbrBackupReplicationRecordArrayOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupReplicationRecordArrayOutput)
}

type GetCbrBackupReplicationRecordOutput struct{ *pulumi.OutputState }

func (GetCbrBackupReplicationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupReplicationRecord)(nil)).Elem()
}

func (o GetCbrBackupReplicationRecordOutput) ToGetCbrBackupReplicationRecordOutput() GetCbrBackupReplicationRecordOutput {
	return o
}

func (o GetCbrBackupReplicationRecordOutput) ToGetCbrBackupReplicationRecordOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordOutput {
	return o
}

// The creation time of the replication.
func (o GetCbrBackupReplicationRecordOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the destination backup used for replication.
func (o GetCbrBackupReplicationRecordOutput) DestinationBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.DestinationBackupId }).(pulumi.StringOutput)
}

// The record ID of the destination backup used for replication.
func (o GetCbrBackupReplicationRecordOutput) DestinationCheckpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.DestinationCheckpointId }).(pulumi.StringOutput)
}

// The ID of the replication destination project.
func (o GetCbrBackupReplicationRecordOutput) DestinationProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.DestinationProjectId }).(pulumi.StringOutput)
}

// The replication destination region.
func (o GetCbrBackupReplicationRecordOutput) DestinationRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.DestinationRegion }).(pulumi.StringOutput)
}

// The destination vault ID.
func (o GetCbrBackupReplicationRecordOutput) DestinationVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.DestinationVaultId }).(pulumi.StringOutput)
}

// The additional information of the replication.
func (o GetCbrBackupReplicationRecordOutput) ExtraInfos() GetCbrBackupReplicationRecordExtraInfoArrayOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) []GetCbrBackupReplicationRecordExtraInfo { return v.ExtraInfos }).(GetCbrBackupReplicationRecordExtraInfoArrayOutput)
}

// The replication record ID.
func (o GetCbrBackupReplicationRecordOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the source backup used for replication.
func (o GetCbrBackupReplicationRecordOutput) SourceBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.SourceBackupId }).(pulumi.StringOutput)
}

// The ID of the source backup record used for replication.
func (o GetCbrBackupReplicationRecordOutput) SourceCheckpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.SourceCheckpointId }).(pulumi.StringOutput)
}

// The ID of the replication source project.
func (o GetCbrBackupReplicationRecordOutput) SourceProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.SourceProjectId }).(pulumi.StringOutput)
}

// The replication source region.
func (o GetCbrBackupReplicationRecordOutput) SourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.SourceRegion }).(pulumi.StringOutput)
}

// The replication status.
func (o GetCbrBackupReplicationRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the vault where the backup resides.
func (o GetCbrBackupReplicationRecordOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecord) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetCbrBackupReplicationRecordArrayOutput struct{ *pulumi.OutputState }

func (GetCbrBackupReplicationRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupReplicationRecord)(nil)).Elem()
}

func (o GetCbrBackupReplicationRecordArrayOutput) ToGetCbrBackupReplicationRecordArrayOutput() GetCbrBackupReplicationRecordArrayOutput {
	return o
}

func (o GetCbrBackupReplicationRecordArrayOutput) ToGetCbrBackupReplicationRecordArrayOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordArrayOutput {
	return o
}

func (o GetCbrBackupReplicationRecordArrayOutput) Index(i pulumi.IntInput) GetCbrBackupReplicationRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrBackupReplicationRecord {
		return vs[0].([]GetCbrBackupReplicationRecord)[vs[1].(int)]
	}).(GetCbrBackupReplicationRecordOutput)
}

type GetCbrBackupReplicationRecordExtraInfo struct {
	// Whether replication is automatically scheduled.
	AutoTrigger bool `pulumi:"autoTrigger"`
	// The destination vault ID.
	DestinationVaultId string `pulumi:"destinationVaultId"`
	// The error code.
	FailCode string `pulumi:"failCode"`
	// The error cause.
	FailReason string `pulumi:"failReason"`
	// The replication progress.
	Progress int `pulumi:"progress"`
}

// GetCbrBackupReplicationRecordExtraInfoInput is an input type that accepts GetCbrBackupReplicationRecordExtraInfoArgs and GetCbrBackupReplicationRecordExtraInfoOutput values.
// You can construct a concrete instance of `GetCbrBackupReplicationRecordExtraInfoInput` via:
//
//	GetCbrBackupReplicationRecordExtraInfoArgs{...}
type GetCbrBackupReplicationRecordExtraInfoInput interface {
	pulumi.Input

	ToGetCbrBackupReplicationRecordExtraInfoOutput() GetCbrBackupReplicationRecordExtraInfoOutput
	ToGetCbrBackupReplicationRecordExtraInfoOutputWithContext(context.Context) GetCbrBackupReplicationRecordExtraInfoOutput
}

type GetCbrBackupReplicationRecordExtraInfoArgs struct {
	// Whether replication is automatically scheduled.
	AutoTrigger pulumi.BoolInput `pulumi:"autoTrigger"`
	// The destination vault ID.
	DestinationVaultId pulumi.StringInput `pulumi:"destinationVaultId"`
	// The error code.
	FailCode pulumi.StringInput `pulumi:"failCode"`
	// The error cause.
	FailReason pulumi.StringInput `pulumi:"failReason"`
	// The replication progress.
	Progress pulumi.IntInput `pulumi:"progress"`
}

func (GetCbrBackupReplicationRecordExtraInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupReplicationRecordExtraInfo)(nil)).Elem()
}

func (i GetCbrBackupReplicationRecordExtraInfoArgs) ToGetCbrBackupReplicationRecordExtraInfoOutput() GetCbrBackupReplicationRecordExtraInfoOutput {
	return i.ToGetCbrBackupReplicationRecordExtraInfoOutputWithContext(context.Background())
}

func (i GetCbrBackupReplicationRecordExtraInfoArgs) ToGetCbrBackupReplicationRecordExtraInfoOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordExtraInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupReplicationRecordExtraInfoOutput)
}

// GetCbrBackupReplicationRecordExtraInfoArrayInput is an input type that accepts GetCbrBackupReplicationRecordExtraInfoArray and GetCbrBackupReplicationRecordExtraInfoArrayOutput values.
// You can construct a concrete instance of `GetCbrBackupReplicationRecordExtraInfoArrayInput` via:
//
//	GetCbrBackupReplicationRecordExtraInfoArray{ GetCbrBackupReplicationRecordExtraInfoArgs{...} }
type GetCbrBackupReplicationRecordExtraInfoArrayInput interface {
	pulumi.Input

	ToGetCbrBackupReplicationRecordExtraInfoArrayOutput() GetCbrBackupReplicationRecordExtraInfoArrayOutput
	ToGetCbrBackupReplicationRecordExtraInfoArrayOutputWithContext(context.Context) GetCbrBackupReplicationRecordExtraInfoArrayOutput
}

type GetCbrBackupReplicationRecordExtraInfoArray []GetCbrBackupReplicationRecordExtraInfoInput

func (GetCbrBackupReplicationRecordExtraInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupReplicationRecordExtraInfo)(nil)).Elem()
}

func (i GetCbrBackupReplicationRecordExtraInfoArray) ToGetCbrBackupReplicationRecordExtraInfoArrayOutput() GetCbrBackupReplicationRecordExtraInfoArrayOutput {
	return i.ToGetCbrBackupReplicationRecordExtraInfoArrayOutputWithContext(context.Background())
}

func (i GetCbrBackupReplicationRecordExtraInfoArray) ToGetCbrBackupReplicationRecordExtraInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordExtraInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrBackupReplicationRecordExtraInfoArrayOutput)
}

type GetCbrBackupReplicationRecordExtraInfoOutput struct{ *pulumi.OutputState }

func (GetCbrBackupReplicationRecordExtraInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrBackupReplicationRecordExtraInfo)(nil)).Elem()
}

func (o GetCbrBackupReplicationRecordExtraInfoOutput) ToGetCbrBackupReplicationRecordExtraInfoOutput() GetCbrBackupReplicationRecordExtraInfoOutput {
	return o
}

func (o GetCbrBackupReplicationRecordExtraInfoOutput) ToGetCbrBackupReplicationRecordExtraInfoOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordExtraInfoOutput {
	return o
}

// Whether replication is automatically scheduled.
func (o GetCbrBackupReplicationRecordExtraInfoOutput) AutoTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecordExtraInfo) bool { return v.AutoTrigger }).(pulumi.BoolOutput)
}

// The destination vault ID.
func (o GetCbrBackupReplicationRecordExtraInfoOutput) DestinationVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecordExtraInfo) string { return v.DestinationVaultId }).(pulumi.StringOutput)
}

// The error code.
func (o GetCbrBackupReplicationRecordExtraInfoOutput) FailCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecordExtraInfo) string { return v.FailCode }).(pulumi.StringOutput)
}

// The error cause.
func (o GetCbrBackupReplicationRecordExtraInfoOutput) FailReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecordExtraInfo) string { return v.FailReason }).(pulumi.StringOutput)
}

// The replication progress.
func (o GetCbrBackupReplicationRecordExtraInfoOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrBackupReplicationRecordExtraInfo) int { return v.Progress }).(pulumi.IntOutput)
}

type GetCbrBackupReplicationRecordExtraInfoArrayOutput struct{ *pulumi.OutputState }

func (GetCbrBackupReplicationRecordExtraInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrBackupReplicationRecordExtraInfo)(nil)).Elem()
}

func (o GetCbrBackupReplicationRecordExtraInfoArrayOutput) ToGetCbrBackupReplicationRecordExtraInfoArrayOutput() GetCbrBackupReplicationRecordExtraInfoArrayOutput {
	return o
}

func (o GetCbrBackupReplicationRecordExtraInfoArrayOutput) ToGetCbrBackupReplicationRecordExtraInfoArrayOutputWithContext(ctx context.Context) GetCbrBackupReplicationRecordExtraInfoArrayOutput {
	return o
}

func (o GetCbrBackupReplicationRecordExtraInfoArrayOutput) Index(i pulumi.IntInput) GetCbrBackupReplicationRecordExtraInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrBackupReplicationRecordExtraInfo {
		return vs[0].([]GetCbrBackupReplicationRecordExtraInfo)[vs[1].(int)]
	}).(GetCbrBackupReplicationRecordExtraInfoOutput)
}

type GetCbrPoliciesPolicy struct {
	// The vault associated with the CBR policy
	AssociatedVaults []GetCbrPoliciesPolicyAssociatedVault `pulumi:"associatedVaults"`
	// The scheduling rule for the CBR policy backup execution.
	BackupCycles []GetCbrPoliciesPolicyBackupCycle `pulumi:"backupCycles"`
	// The maximum number of retained backups.
	BackupQuantity int `pulumi:"backupQuantity"`
	// The ID of the replication destination project.
	DestinationProjectId string `pulumi:"destinationProjectId"`
	// The name of the replication destination region.
	DestinationRegion string `pulumi:"destinationRegion"`
	// Whether to enable the acceleration function to shorten the replication time for cross-region
	EnableAcceleration bool `pulumi:"enableAcceleration"`
	// Whether to enable the CBR policy.
	Enabled bool `pulumi:"enabled"`
	// The policy ID.
	Id string `pulumi:"id"`
	// The long-term retention rules.
	LongTermRetentions []GetCbrPoliciesPolicyLongTermRetention `pulumi:"longTermRetentions"`
	// The policy name.
	Name string `pulumi:"name"`
	// The duration (in days) for retained backups.
	TimePeriod int `pulumi:"timePeriod"`
	// The UTC time zone.
	TimeZone string `pulumi:"timeZone"`
	// The protection type of the CBR policy.
	Type string `pulumi:"type"`
}

// GetCbrPoliciesPolicyInput is an input type that accepts GetCbrPoliciesPolicyArgs and GetCbrPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyInput` via:
//
//	GetCbrPoliciesPolicyArgs{...}
type GetCbrPoliciesPolicyInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyOutput() GetCbrPoliciesPolicyOutput
	ToGetCbrPoliciesPolicyOutputWithContext(context.Context) GetCbrPoliciesPolicyOutput
}

type GetCbrPoliciesPolicyArgs struct {
	// The vault associated with the CBR policy
	AssociatedVaults GetCbrPoliciesPolicyAssociatedVaultArrayInput `pulumi:"associatedVaults"`
	// The scheduling rule for the CBR policy backup execution.
	BackupCycles GetCbrPoliciesPolicyBackupCycleArrayInput `pulumi:"backupCycles"`
	// The maximum number of retained backups.
	BackupQuantity pulumi.IntInput `pulumi:"backupQuantity"`
	// The ID of the replication destination project.
	DestinationProjectId pulumi.StringInput `pulumi:"destinationProjectId"`
	// The name of the replication destination region.
	DestinationRegion pulumi.StringInput `pulumi:"destinationRegion"`
	// Whether to enable the acceleration function to shorten the replication time for cross-region
	EnableAcceleration pulumi.BoolInput `pulumi:"enableAcceleration"`
	// Whether to enable the CBR policy.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The policy ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The long-term retention rules.
	LongTermRetentions GetCbrPoliciesPolicyLongTermRetentionArrayInput `pulumi:"longTermRetentions"`
	// The policy name.
	Name pulumi.StringInput `pulumi:"name"`
	// The duration (in days) for retained backups.
	TimePeriod pulumi.IntInput `pulumi:"timePeriod"`
	// The UTC time zone.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// The protection type of the CBR policy.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCbrPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicy)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyArgs) ToGetCbrPoliciesPolicyOutput() GetCbrPoliciesPolicyOutput {
	return i.ToGetCbrPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyArgs) ToGetCbrPoliciesPolicyOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyOutput)
}

// GetCbrPoliciesPolicyArrayInput is an input type that accepts GetCbrPoliciesPolicyArray and GetCbrPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyArrayInput` via:
//
//	GetCbrPoliciesPolicyArray{ GetCbrPoliciesPolicyArgs{...} }
type GetCbrPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyArrayOutput() GetCbrPoliciesPolicyArrayOutput
	ToGetCbrPoliciesPolicyArrayOutputWithContext(context.Context) GetCbrPoliciesPolicyArrayOutput
}

type GetCbrPoliciesPolicyArray []GetCbrPoliciesPolicyInput

func (GetCbrPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicy)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyArray) ToGetCbrPoliciesPolicyArrayOutput() GetCbrPoliciesPolicyArrayOutput {
	return i.ToGetCbrPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyArray) ToGetCbrPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyArrayOutput)
}

type GetCbrPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicy)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyOutput) ToGetCbrPoliciesPolicyOutput() GetCbrPoliciesPolicyOutput {
	return o
}

func (o GetCbrPoliciesPolicyOutput) ToGetCbrPoliciesPolicyOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyOutput {
	return o
}

// The vault associated with the CBR policy
func (o GetCbrPoliciesPolicyOutput) AssociatedVaults() GetCbrPoliciesPolicyAssociatedVaultArrayOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) []GetCbrPoliciesPolicyAssociatedVault { return v.AssociatedVaults }).(GetCbrPoliciesPolicyAssociatedVaultArrayOutput)
}

// The scheduling rule for the CBR policy backup execution.
func (o GetCbrPoliciesPolicyOutput) BackupCycles() GetCbrPoliciesPolicyBackupCycleArrayOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) []GetCbrPoliciesPolicyBackupCycle { return v.BackupCycles }).(GetCbrPoliciesPolicyBackupCycleArrayOutput)
}

// The maximum number of retained backups.
func (o GetCbrPoliciesPolicyOutput) BackupQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) int { return v.BackupQuantity }).(pulumi.IntOutput)
}

// The ID of the replication destination project.
func (o GetCbrPoliciesPolicyOutput) DestinationProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) string { return v.DestinationProjectId }).(pulumi.StringOutput)
}

// The name of the replication destination region.
func (o GetCbrPoliciesPolicyOutput) DestinationRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) string { return v.DestinationRegion }).(pulumi.StringOutput)
}

// Whether to enable the acceleration function to shorten the replication time for cross-region
func (o GetCbrPoliciesPolicyOutput) EnableAcceleration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) bool { return v.EnableAcceleration }).(pulumi.BoolOutput)
}

// Whether to enable the CBR policy.
func (o GetCbrPoliciesPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The policy ID.
func (o GetCbrPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The long-term retention rules.
func (o GetCbrPoliciesPolicyOutput) LongTermRetentions() GetCbrPoliciesPolicyLongTermRetentionArrayOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) []GetCbrPoliciesPolicyLongTermRetention { return v.LongTermRetentions }).(GetCbrPoliciesPolicyLongTermRetentionArrayOutput)
}

// The policy name.
func (o GetCbrPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The duration (in days) for retained backups.
func (o GetCbrPoliciesPolicyOutput) TimePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) int { return v.TimePeriod }).(pulumi.IntOutput)
}

// The UTC time zone.
func (o GetCbrPoliciesPolicyOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The protection type of the CBR policy.
func (o GetCbrPoliciesPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicy) string { return v.Type }).(pulumi.StringOutput)
}

type GetCbrPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicy)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyArrayOutput) ToGetCbrPoliciesPolicyArrayOutput() GetCbrPoliciesPolicyArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyArrayOutput) ToGetCbrPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetCbrPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrPoliciesPolicy {
		return vs[0].([]GetCbrPoliciesPolicy)[vs[1].(int)]
	}).(GetCbrPoliciesPolicyOutput)
}

type GetCbrPoliciesPolicyAssociatedVault struct {
	// The destination vault ID associated with CBR policy
	DestinationVaultId string `pulumi:"destinationVaultId"`
	// The vault ID of the associated CBR policy
	VaultId string `pulumi:"vaultId"`
}

// GetCbrPoliciesPolicyAssociatedVaultInput is an input type that accepts GetCbrPoliciesPolicyAssociatedVaultArgs and GetCbrPoliciesPolicyAssociatedVaultOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyAssociatedVaultInput` via:
//
//	GetCbrPoliciesPolicyAssociatedVaultArgs{...}
type GetCbrPoliciesPolicyAssociatedVaultInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyAssociatedVaultOutput() GetCbrPoliciesPolicyAssociatedVaultOutput
	ToGetCbrPoliciesPolicyAssociatedVaultOutputWithContext(context.Context) GetCbrPoliciesPolicyAssociatedVaultOutput
}

type GetCbrPoliciesPolicyAssociatedVaultArgs struct {
	// The destination vault ID associated with CBR policy
	DestinationVaultId pulumi.StringInput `pulumi:"destinationVaultId"`
	// The vault ID of the associated CBR policy
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetCbrPoliciesPolicyAssociatedVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicyAssociatedVault)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyAssociatedVaultArgs) ToGetCbrPoliciesPolicyAssociatedVaultOutput() GetCbrPoliciesPolicyAssociatedVaultOutput {
	return i.ToGetCbrPoliciesPolicyAssociatedVaultOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyAssociatedVaultArgs) ToGetCbrPoliciesPolicyAssociatedVaultOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyAssociatedVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyAssociatedVaultOutput)
}

// GetCbrPoliciesPolicyAssociatedVaultArrayInput is an input type that accepts GetCbrPoliciesPolicyAssociatedVaultArray and GetCbrPoliciesPolicyAssociatedVaultArrayOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyAssociatedVaultArrayInput` via:
//
//	GetCbrPoliciesPolicyAssociatedVaultArray{ GetCbrPoliciesPolicyAssociatedVaultArgs{...} }
type GetCbrPoliciesPolicyAssociatedVaultArrayInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyAssociatedVaultArrayOutput() GetCbrPoliciesPolicyAssociatedVaultArrayOutput
	ToGetCbrPoliciesPolicyAssociatedVaultArrayOutputWithContext(context.Context) GetCbrPoliciesPolicyAssociatedVaultArrayOutput
}

type GetCbrPoliciesPolicyAssociatedVaultArray []GetCbrPoliciesPolicyAssociatedVaultInput

func (GetCbrPoliciesPolicyAssociatedVaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicyAssociatedVault)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyAssociatedVaultArray) ToGetCbrPoliciesPolicyAssociatedVaultArrayOutput() GetCbrPoliciesPolicyAssociatedVaultArrayOutput {
	return i.ToGetCbrPoliciesPolicyAssociatedVaultArrayOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyAssociatedVaultArray) ToGetCbrPoliciesPolicyAssociatedVaultArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyAssociatedVaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyAssociatedVaultArrayOutput)
}

type GetCbrPoliciesPolicyAssociatedVaultOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyAssociatedVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicyAssociatedVault)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyAssociatedVaultOutput) ToGetCbrPoliciesPolicyAssociatedVaultOutput() GetCbrPoliciesPolicyAssociatedVaultOutput {
	return o
}

func (o GetCbrPoliciesPolicyAssociatedVaultOutput) ToGetCbrPoliciesPolicyAssociatedVaultOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyAssociatedVaultOutput {
	return o
}

// The destination vault ID associated with CBR policy
func (o GetCbrPoliciesPolicyAssociatedVaultOutput) DestinationVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyAssociatedVault) string { return v.DestinationVaultId }).(pulumi.StringOutput)
}

// The vault ID of the associated CBR policy
func (o GetCbrPoliciesPolicyAssociatedVaultOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyAssociatedVault) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetCbrPoliciesPolicyAssociatedVaultArrayOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyAssociatedVaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicyAssociatedVault)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyAssociatedVaultArrayOutput) ToGetCbrPoliciesPolicyAssociatedVaultArrayOutput() GetCbrPoliciesPolicyAssociatedVaultArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyAssociatedVaultArrayOutput) ToGetCbrPoliciesPolicyAssociatedVaultArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyAssociatedVaultArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyAssociatedVaultArrayOutput) Index(i pulumi.IntInput) GetCbrPoliciesPolicyAssociatedVaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrPoliciesPolicyAssociatedVault {
		return vs[0].([]GetCbrPoliciesPolicyAssociatedVault)[vs[1].(int)]
	}).(GetCbrPoliciesPolicyAssociatedVaultOutput)
}

type GetCbrPoliciesPolicyBackupCycle struct {
	// The weekly backup time.
	Days string `pulumi:"days"`
	// The execution time of the policy.
	ExecutionTimes []string `pulumi:"executionTimes"`
	// The number of days between each backup.
	Interval int `pulumi:"interval"`
}

// GetCbrPoliciesPolicyBackupCycleInput is an input type that accepts GetCbrPoliciesPolicyBackupCycleArgs and GetCbrPoliciesPolicyBackupCycleOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyBackupCycleInput` via:
//
//	GetCbrPoliciesPolicyBackupCycleArgs{...}
type GetCbrPoliciesPolicyBackupCycleInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyBackupCycleOutput() GetCbrPoliciesPolicyBackupCycleOutput
	ToGetCbrPoliciesPolicyBackupCycleOutputWithContext(context.Context) GetCbrPoliciesPolicyBackupCycleOutput
}

type GetCbrPoliciesPolicyBackupCycleArgs struct {
	// The weekly backup time.
	Days pulumi.StringInput `pulumi:"days"`
	// The execution time of the policy.
	ExecutionTimes pulumi.StringArrayInput `pulumi:"executionTimes"`
	// The number of days between each backup.
	Interval pulumi.IntInput `pulumi:"interval"`
}

func (GetCbrPoliciesPolicyBackupCycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicyBackupCycle)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyBackupCycleArgs) ToGetCbrPoliciesPolicyBackupCycleOutput() GetCbrPoliciesPolicyBackupCycleOutput {
	return i.ToGetCbrPoliciesPolicyBackupCycleOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyBackupCycleArgs) ToGetCbrPoliciesPolicyBackupCycleOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyBackupCycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyBackupCycleOutput)
}

// GetCbrPoliciesPolicyBackupCycleArrayInput is an input type that accepts GetCbrPoliciesPolicyBackupCycleArray and GetCbrPoliciesPolicyBackupCycleArrayOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyBackupCycleArrayInput` via:
//
//	GetCbrPoliciesPolicyBackupCycleArray{ GetCbrPoliciesPolicyBackupCycleArgs{...} }
type GetCbrPoliciesPolicyBackupCycleArrayInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyBackupCycleArrayOutput() GetCbrPoliciesPolicyBackupCycleArrayOutput
	ToGetCbrPoliciesPolicyBackupCycleArrayOutputWithContext(context.Context) GetCbrPoliciesPolicyBackupCycleArrayOutput
}

type GetCbrPoliciesPolicyBackupCycleArray []GetCbrPoliciesPolicyBackupCycleInput

func (GetCbrPoliciesPolicyBackupCycleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicyBackupCycle)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyBackupCycleArray) ToGetCbrPoliciesPolicyBackupCycleArrayOutput() GetCbrPoliciesPolicyBackupCycleArrayOutput {
	return i.ToGetCbrPoliciesPolicyBackupCycleArrayOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyBackupCycleArray) ToGetCbrPoliciesPolicyBackupCycleArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyBackupCycleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyBackupCycleArrayOutput)
}

type GetCbrPoliciesPolicyBackupCycleOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyBackupCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicyBackupCycle)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyBackupCycleOutput) ToGetCbrPoliciesPolicyBackupCycleOutput() GetCbrPoliciesPolicyBackupCycleOutput {
	return o
}

func (o GetCbrPoliciesPolicyBackupCycleOutput) ToGetCbrPoliciesPolicyBackupCycleOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyBackupCycleOutput {
	return o
}

// The weekly backup time.
func (o GetCbrPoliciesPolicyBackupCycleOutput) Days() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyBackupCycle) string { return v.Days }).(pulumi.StringOutput)
}

// The execution time of the policy.
func (o GetCbrPoliciesPolicyBackupCycleOutput) ExecutionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyBackupCycle) []string { return v.ExecutionTimes }).(pulumi.StringArrayOutput)
}

// The number of days between each backup.
func (o GetCbrPoliciesPolicyBackupCycleOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyBackupCycle) int { return v.Interval }).(pulumi.IntOutput)
}

type GetCbrPoliciesPolicyBackupCycleArrayOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyBackupCycleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicyBackupCycle)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyBackupCycleArrayOutput) ToGetCbrPoliciesPolicyBackupCycleArrayOutput() GetCbrPoliciesPolicyBackupCycleArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyBackupCycleArrayOutput) ToGetCbrPoliciesPolicyBackupCycleArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyBackupCycleArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyBackupCycleArrayOutput) Index(i pulumi.IntInput) GetCbrPoliciesPolicyBackupCycleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrPoliciesPolicyBackupCycle {
		return vs[0].([]GetCbrPoliciesPolicyBackupCycle)[vs[1].(int)]
	}).(GetCbrPoliciesPolicyBackupCycleOutput)
}

type GetCbrPoliciesPolicyLongTermRetention struct {
	// The latest backup of each day is saved in the long term.
	Daily int `pulumi:"daily"`
	// How often (after how many incremental backups) a full backup is performed.
	FullBackupInterval int `pulumi:"fullBackupInterval"`
	// The latest backup of each month is saved in the long term.
	Monthly int `pulumi:"monthly"`
	// The latest backup of each week is saved in the long term.
	Weekly int `pulumi:"weekly"`
	// The latest backup of each year is saved in the long term.
	Yearly int `pulumi:"yearly"`
}

// GetCbrPoliciesPolicyLongTermRetentionInput is an input type that accepts GetCbrPoliciesPolicyLongTermRetentionArgs and GetCbrPoliciesPolicyLongTermRetentionOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyLongTermRetentionInput` via:
//
//	GetCbrPoliciesPolicyLongTermRetentionArgs{...}
type GetCbrPoliciesPolicyLongTermRetentionInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyLongTermRetentionOutput() GetCbrPoliciesPolicyLongTermRetentionOutput
	ToGetCbrPoliciesPolicyLongTermRetentionOutputWithContext(context.Context) GetCbrPoliciesPolicyLongTermRetentionOutput
}

type GetCbrPoliciesPolicyLongTermRetentionArgs struct {
	// The latest backup of each day is saved in the long term.
	Daily pulumi.IntInput `pulumi:"daily"`
	// How often (after how many incremental backups) a full backup is performed.
	FullBackupInterval pulumi.IntInput `pulumi:"fullBackupInterval"`
	// The latest backup of each month is saved in the long term.
	Monthly pulumi.IntInput `pulumi:"monthly"`
	// The latest backup of each week is saved in the long term.
	Weekly pulumi.IntInput `pulumi:"weekly"`
	// The latest backup of each year is saved in the long term.
	Yearly pulumi.IntInput `pulumi:"yearly"`
}

func (GetCbrPoliciesPolicyLongTermRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicyLongTermRetention)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyLongTermRetentionArgs) ToGetCbrPoliciesPolicyLongTermRetentionOutput() GetCbrPoliciesPolicyLongTermRetentionOutput {
	return i.ToGetCbrPoliciesPolicyLongTermRetentionOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyLongTermRetentionArgs) ToGetCbrPoliciesPolicyLongTermRetentionOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyLongTermRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyLongTermRetentionOutput)
}

// GetCbrPoliciesPolicyLongTermRetentionArrayInput is an input type that accepts GetCbrPoliciesPolicyLongTermRetentionArray and GetCbrPoliciesPolicyLongTermRetentionArrayOutput values.
// You can construct a concrete instance of `GetCbrPoliciesPolicyLongTermRetentionArrayInput` via:
//
//	GetCbrPoliciesPolicyLongTermRetentionArray{ GetCbrPoliciesPolicyLongTermRetentionArgs{...} }
type GetCbrPoliciesPolicyLongTermRetentionArrayInput interface {
	pulumi.Input

	ToGetCbrPoliciesPolicyLongTermRetentionArrayOutput() GetCbrPoliciesPolicyLongTermRetentionArrayOutput
	ToGetCbrPoliciesPolicyLongTermRetentionArrayOutputWithContext(context.Context) GetCbrPoliciesPolicyLongTermRetentionArrayOutput
}

type GetCbrPoliciesPolicyLongTermRetentionArray []GetCbrPoliciesPolicyLongTermRetentionInput

func (GetCbrPoliciesPolicyLongTermRetentionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicyLongTermRetention)(nil)).Elem()
}

func (i GetCbrPoliciesPolicyLongTermRetentionArray) ToGetCbrPoliciesPolicyLongTermRetentionArrayOutput() GetCbrPoliciesPolicyLongTermRetentionArrayOutput {
	return i.ToGetCbrPoliciesPolicyLongTermRetentionArrayOutputWithContext(context.Background())
}

func (i GetCbrPoliciesPolicyLongTermRetentionArray) ToGetCbrPoliciesPolicyLongTermRetentionArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyLongTermRetentionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrPoliciesPolicyLongTermRetentionArrayOutput)
}

type GetCbrPoliciesPolicyLongTermRetentionOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyLongTermRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrPoliciesPolicyLongTermRetention)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyLongTermRetentionOutput) ToGetCbrPoliciesPolicyLongTermRetentionOutput() GetCbrPoliciesPolicyLongTermRetentionOutput {
	return o
}

func (o GetCbrPoliciesPolicyLongTermRetentionOutput) ToGetCbrPoliciesPolicyLongTermRetentionOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyLongTermRetentionOutput {
	return o
}

// The latest backup of each day is saved in the long term.
func (o GetCbrPoliciesPolicyLongTermRetentionOutput) Daily() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyLongTermRetention) int { return v.Daily }).(pulumi.IntOutput)
}

// How often (after how many incremental backups) a full backup is performed.
func (o GetCbrPoliciesPolicyLongTermRetentionOutput) FullBackupInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyLongTermRetention) int { return v.FullBackupInterval }).(pulumi.IntOutput)
}

// The latest backup of each month is saved in the long term.
func (o GetCbrPoliciesPolicyLongTermRetentionOutput) Monthly() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyLongTermRetention) int { return v.Monthly }).(pulumi.IntOutput)
}

// The latest backup of each week is saved in the long term.
func (o GetCbrPoliciesPolicyLongTermRetentionOutput) Weekly() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyLongTermRetention) int { return v.Weekly }).(pulumi.IntOutput)
}

// The latest backup of each year is saved in the long term.
func (o GetCbrPoliciesPolicyLongTermRetentionOutput) Yearly() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrPoliciesPolicyLongTermRetention) int { return v.Yearly }).(pulumi.IntOutput)
}

type GetCbrPoliciesPolicyLongTermRetentionArrayOutput struct{ *pulumi.OutputState }

func (GetCbrPoliciesPolicyLongTermRetentionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrPoliciesPolicyLongTermRetention)(nil)).Elem()
}

func (o GetCbrPoliciesPolicyLongTermRetentionArrayOutput) ToGetCbrPoliciesPolicyLongTermRetentionArrayOutput() GetCbrPoliciesPolicyLongTermRetentionArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyLongTermRetentionArrayOutput) ToGetCbrPoliciesPolicyLongTermRetentionArrayOutputWithContext(ctx context.Context) GetCbrPoliciesPolicyLongTermRetentionArrayOutput {
	return o
}

func (o GetCbrPoliciesPolicyLongTermRetentionArrayOutput) Index(i pulumi.IntInput) GetCbrPoliciesPolicyLongTermRetentionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrPoliciesPolicyLongTermRetention {
		return vs[0].([]GetCbrPoliciesPolicyLongTermRetention)[vs[1].(int)]
	}).(GetCbrPoliciesPolicyLongTermRetentionOutput)
}

type GetCbrVaultsVault struct {
	// The allocated capacity of the vault, in GB.
	Allocated float64 `pulumi:"allocated"`
	// Whether automatic association is supported.
	AutoBind bool `pulumi:"autoBind"`
	// Whether to enable automatic expansion of the backup protection type vault.
	AutoExpandEnabled bool `pulumi:"autoExpandEnabled"`
	// The rules for automatic association.
	BindRules map[string]string `pulumi:"bindRules"`
	// The consistent level (specification) of the vault.
	ConsistentLevel string `pulumi:"consistentLevel"`
	// The enterprise project ID.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The vault ID in UUID format.
	Id string `pulumi:"id"`
	// The vault name.
	Name string `pulumi:"name"`
	// The ID of the policy associated with the vault.
	PolicyId string `pulumi:"policyId"`
	// The protection type of the vault.
	ProtectionType string `pulumi:"protectionType"`
	// The array of one or more resources to attach to the vault.
	Resources []GetCbrVaultsVaultResource `pulumi:"resources"`
	// The vault capacity, in GB.
	Size int `pulumi:"size"`
	// The specification code.
	SpecCode string `pulumi:"specCode"`
	// The vault status.
	Status string `pulumi:"status"`
	// The name of the bucket for the vault.
	Storage string `pulumi:"storage"`
	// The key/value pairs to associate with the vault.
	Tags map[string]string `pulumi:"tags"`
	// The object type of the vault.
	Type string `pulumi:"type"`
	// The used capacity, in GB.
	Used float64 `pulumi:"used"`
}

// GetCbrVaultsVaultInput is an input type that accepts GetCbrVaultsVaultArgs and GetCbrVaultsVaultOutput values.
// You can construct a concrete instance of `GetCbrVaultsVaultInput` via:
//
//	GetCbrVaultsVaultArgs{...}
type GetCbrVaultsVaultInput interface {
	pulumi.Input

	ToGetCbrVaultsVaultOutput() GetCbrVaultsVaultOutput
	ToGetCbrVaultsVaultOutputWithContext(context.Context) GetCbrVaultsVaultOutput
}

type GetCbrVaultsVaultArgs struct {
	// The allocated capacity of the vault, in GB.
	Allocated pulumi.Float64Input `pulumi:"allocated"`
	// Whether automatic association is supported.
	AutoBind pulumi.BoolInput `pulumi:"autoBind"`
	// Whether to enable automatic expansion of the backup protection type vault.
	AutoExpandEnabled pulumi.BoolInput `pulumi:"autoExpandEnabled"`
	// The rules for automatic association.
	BindRules pulumi.StringMapInput `pulumi:"bindRules"`
	// The consistent level (specification) of the vault.
	ConsistentLevel pulumi.StringInput `pulumi:"consistentLevel"`
	// The enterprise project ID.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The vault ID in UUID format.
	Id pulumi.StringInput `pulumi:"id"`
	// The vault name.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the policy associated with the vault.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The protection type of the vault.
	ProtectionType pulumi.StringInput `pulumi:"protectionType"`
	// The array of one or more resources to attach to the vault.
	Resources GetCbrVaultsVaultResourceArrayInput `pulumi:"resources"`
	// The vault capacity, in GB.
	Size pulumi.IntInput `pulumi:"size"`
	// The specification code.
	SpecCode pulumi.StringInput `pulumi:"specCode"`
	// The vault status.
	Status pulumi.StringInput `pulumi:"status"`
	// The name of the bucket for the vault.
	Storage pulumi.StringInput `pulumi:"storage"`
	// The key/value pairs to associate with the vault.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The object type of the vault.
	Type pulumi.StringInput `pulumi:"type"`
	// The used capacity, in GB.
	Used pulumi.Float64Input `pulumi:"used"`
}

func (GetCbrVaultsVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrVaultsVault)(nil)).Elem()
}

func (i GetCbrVaultsVaultArgs) ToGetCbrVaultsVaultOutput() GetCbrVaultsVaultOutput {
	return i.ToGetCbrVaultsVaultOutputWithContext(context.Background())
}

func (i GetCbrVaultsVaultArgs) ToGetCbrVaultsVaultOutputWithContext(ctx context.Context) GetCbrVaultsVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrVaultsVaultOutput)
}

// GetCbrVaultsVaultArrayInput is an input type that accepts GetCbrVaultsVaultArray and GetCbrVaultsVaultArrayOutput values.
// You can construct a concrete instance of `GetCbrVaultsVaultArrayInput` via:
//
//	GetCbrVaultsVaultArray{ GetCbrVaultsVaultArgs{...} }
type GetCbrVaultsVaultArrayInput interface {
	pulumi.Input

	ToGetCbrVaultsVaultArrayOutput() GetCbrVaultsVaultArrayOutput
	ToGetCbrVaultsVaultArrayOutputWithContext(context.Context) GetCbrVaultsVaultArrayOutput
}

type GetCbrVaultsVaultArray []GetCbrVaultsVaultInput

func (GetCbrVaultsVaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrVaultsVault)(nil)).Elem()
}

func (i GetCbrVaultsVaultArray) ToGetCbrVaultsVaultArrayOutput() GetCbrVaultsVaultArrayOutput {
	return i.ToGetCbrVaultsVaultArrayOutputWithContext(context.Background())
}

func (i GetCbrVaultsVaultArray) ToGetCbrVaultsVaultArrayOutputWithContext(ctx context.Context) GetCbrVaultsVaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrVaultsVaultArrayOutput)
}

type GetCbrVaultsVaultOutput struct{ *pulumi.OutputState }

func (GetCbrVaultsVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrVaultsVault)(nil)).Elem()
}

func (o GetCbrVaultsVaultOutput) ToGetCbrVaultsVaultOutput() GetCbrVaultsVaultOutput {
	return o
}

func (o GetCbrVaultsVaultOutput) ToGetCbrVaultsVaultOutputWithContext(ctx context.Context) GetCbrVaultsVaultOutput {
	return o
}

// The allocated capacity of the vault, in GB.
func (o GetCbrVaultsVaultOutput) Allocated() pulumi.Float64Output {
	return o.ApplyT(func(v GetCbrVaultsVault) float64 { return v.Allocated }).(pulumi.Float64Output)
}

// Whether automatic association is supported.
func (o GetCbrVaultsVaultOutput) AutoBind() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) bool { return v.AutoBind }).(pulumi.BoolOutput)
}

// Whether to enable automatic expansion of the backup protection type vault.
func (o GetCbrVaultsVaultOutput) AutoExpandEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) bool { return v.AutoExpandEnabled }).(pulumi.BoolOutput)
}

// The rules for automatic association.
func (o GetCbrVaultsVaultOutput) BindRules() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) map[string]string { return v.BindRules }).(pulumi.StringMapOutput)
}

// The consistent level (specification) of the vault.
func (o GetCbrVaultsVaultOutput) ConsistentLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.ConsistentLevel }).(pulumi.StringOutput)
}

// The enterprise project ID.
func (o GetCbrVaultsVaultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The vault ID in UUID format.
func (o GetCbrVaultsVaultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.Id }).(pulumi.StringOutput)
}

// The vault name.
func (o GetCbrVaultsVaultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the policy associated with the vault.
func (o GetCbrVaultsVaultOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The protection type of the vault.
func (o GetCbrVaultsVaultOutput) ProtectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.ProtectionType }).(pulumi.StringOutput)
}

// The array of one or more resources to attach to the vault.
func (o GetCbrVaultsVaultOutput) Resources() GetCbrVaultsVaultResourceArrayOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) []GetCbrVaultsVaultResource { return v.Resources }).(GetCbrVaultsVaultResourceArrayOutput)
}

// The vault capacity, in GB.
func (o GetCbrVaultsVaultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) int { return v.Size }).(pulumi.IntOutput)
}

// The specification code.
func (o GetCbrVaultsVaultOutput) SpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.SpecCode }).(pulumi.StringOutput)
}

// The vault status.
func (o GetCbrVaultsVaultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the bucket for the vault.
func (o GetCbrVaultsVaultOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.Storage }).(pulumi.StringOutput)
}

// The key/value pairs to associate with the vault.
func (o GetCbrVaultsVaultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The object type of the vault.
func (o GetCbrVaultsVaultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVault) string { return v.Type }).(pulumi.StringOutput)
}

// The used capacity, in GB.
func (o GetCbrVaultsVaultOutput) Used() pulumi.Float64Output {
	return o.ApplyT(func(v GetCbrVaultsVault) float64 { return v.Used }).(pulumi.Float64Output)
}

type GetCbrVaultsVaultArrayOutput struct{ *pulumi.OutputState }

func (GetCbrVaultsVaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrVaultsVault)(nil)).Elem()
}

func (o GetCbrVaultsVaultArrayOutput) ToGetCbrVaultsVaultArrayOutput() GetCbrVaultsVaultArrayOutput {
	return o
}

func (o GetCbrVaultsVaultArrayOutput) ToGetCbrVaultsVaultArrayOutputWithContext(ctx context.Context) GetCbrVaultsVaultArrayOutput {
	return o
}

func (o GetCbrVaultsVaultArrayOutput) Index(i pulumi.IntInput) GetCbrVaultsVaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrVaultsVault {
		return vs[0].([]GetCbrVaultsVault)[vs[1].(int)]
	}).(GetCbrVaultsVaultOutput)
}

type GetCbrVaultsVaultResource struct {
	// The array of disk IDs which will be excluded in the backup.
	Excludes []string `pulumi:"excludes"`
	// The array of disk or SFS file system IDs which will be included in the backup.
	Includes []string `pulumi:"includes"`
	// The ID of the ECS instance to be backed up.
	ServerId string `pulumi:"serverId"`
}

// GetCbrVaultsVaultResourceInput is an input type that accepts GetCbrVaultsVaultResourceArgs and GetCbrVaultsVaultResourceOutput values.
// You can construct a concrete instance of `GetCbrVaultsVaultResourceInput` via:
//
//	GetCbrVaultsVaultResourceArgs{...}
type GetCbrVaultsVaultResourceInput interface {
	pulumi.Input

	ToGetCbrVaultsVaultResourceOutput() GetCbrVaultsVaultResourceOutput
	ToGetCbrVaultsVaultResourceOutputWithContext(context.Context) GetCbrVaultsVaultResourceOutput
}

type GetCbrVaultsVaultResourceArgs struct {
	// The array of disk IDs which will be excluded in the backup.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// The array of disk or SFS file system IDs which will be included in the backup.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
	// The ID of the ECS instance to be backed up.
	ServerId pulumi.StringInput `pulumi:"serverId"`
}

func (GetCbrVaultsVaultResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrVaultsVaultResource)(nil)).Elem()
}

func (i GetCbrVaultsVaultResourceArgs) ToGetCbrVaultsVaultResourceOutput() GetCbrVaultsVaultResourceOutput {
	return i.ToGetCbrVaultsVaultResourceOutputWithContext(context.Background())
}

func (i GetCbrVaultsVaultResourceArgs) ToGetCbrVaultsVaultResourceOutputWithContext(ctx context.Context) GetCbrVaultsVaultResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrVaultsVaultResourceOutput)
}

// GetCbrVaultsVaultResourceArrayInput is an input type that accepts GetCbrVaultsVaultResourceArray and GetCbrVaultsVaultResourceArrayOutput values.
// You can construct a concrete instance of `GetCbrVaultsVaultResourceArrayInput` via:
//
//	GetCbrVaultsVaultResourceArray{ GetCbrVaultsVaultResourceArgs{...} }
type GetCbrVaultsVaultResourceArrayInput interface {
	pulumi.Input

	ToGetCbrVaultsVaultResourceArrayOutput() GetCbrVaultsVaultResourceArrayOutput
	ToGetCbrVaultsVaultResourceArrayOutputWithContext(context.Context) GetCbrVaultsVaultResourceArrayOutput
}

type GetCbrVaultsVaultResourceArray []GetCbrVaultsVaultResourceInput

func (GetCbrVaultsVaultResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrVaultsVaultResource)(nil)).Elem()
}

func (i GetCbrVaultsVaultResourceArray) ToGetCbrVaultsVaultResourceArrayOutput() GetCbrVaultsVaultResourceArrayOutput {
	return i.ToGetCbrVaultsVaultResourceArrayOutputWithContext(context.Background())
}

func (i GetCbrVaultsVaultResourceArray) ToGetCbrVaultsVaultResourceArrayOutputWithContext(ctx context.Context) GetCbrVaultsVaultResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCbrVaultsVaultResourceArrayOutput)
}

type GetCbrVaultsVaultResourceOutput struct{ *pulumi.OutputState }

func (GetCbrVaultsVaultResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCbrVaultsVaultResource)(nil)).Elem()
}

func (o GetCbrVaultsVaultResourceOutput) ToGetCbrVaultsVaultResourceOutput() GetCbrVaultsVaultResourceOutput {
	return o
}

func (o GetCbrVaultsVaultResourceOutput) ToGetCbrVaultsVaultResourceOutputWithContext(ctx context.Context) GetCbrVaultsVaultResourceOutput {
	return o
}

// The array of disk IDs which will be excluded in the backup.
func (o GetCbrVaultsVaultResourceOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCbrVaultsVaultResource) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// The array of disk or SFS file system IDs which will be included in the backup.
func (o GetCbrVaultsVaultResourceOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCbrVaultsVaultResource) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

// The ID of the ECS instance to be backed up.
func (o GetCbrVaultsVaultResourceOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCbrVaultsVaultResource) string { return v.ServerId }).(pulumi.StringOutput)
}

type GetCbrVaultsVaultResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCbrVaultsVaultResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCbrVaultsVaultResource)(nil)).Elem()
}

func (o GetCbrVaultsVaultResourceArrayOutput) ToGetCbrVaultsVaultResourceArrayOutput() GetCbrVaultsVaultResourceArrayOutput {
	return o
}

func (o GetCbrVaultsVaultResourceArrayOutput) ToGetCbrVaultsVaultResourceArrayOutputWithContext(ctx context.Context) GetCbrVaultsVaultResourceArrayOutput {
	return o
}

func (o GetCbrVaultsVaultResourceArrayOutput) Index(i pulumi.IntInput) GetCbrVaultsVaultResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCbrVaultsVaultResource {
		return vs[0].([]GetCbrVaultsVaultResource)[vs[1].(int)]
	}).(GetCbrVaultsVaultResourceOutput)
}

type GetCceAddonTemplateSupportVersion struct {
	BareMetals      []string `pulumi:"bareMetals"`
	VirtualMachines []string `pulumi:"virtualMachines"`
}

// GetCceAddonTemplateSupportVersionInput is an input type that accepts GetCceAddonTemplateSupportVersionArgs and GetCceAddonTemplateSupportVersionOutput values.
// You can construct a concrete instance of `GetCceAddonTemplateSupportVersionInput` via:
//
//	GetCceAddonTemplateSupportVersionArgs{...}
type GetCceAddonTemplateSupportVersionInput interface {
	pulumi.Input

	ToGetCceAddonTemplateSupportVersionOutput() GetCceAddonTemplateSupportVersionOutput
	ToGetCceAddonTemplateSupportVersionOutputWithContext(context.Context) GetCceAddonTemplateSupportVersionOutput
}

type GetCceAddonTemplateSupportVersionArgs struct {
	BareMetals      pulumi.StringArrayInput `pulumi:"bareMetals"`
	VirtualMachines pulumi.StringArrayInput `pulumi:"virtualMachines"`
}

func (GetCceAddonTemplateSupportVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceAddonTemplateSupportVersion)(nil)).Elem()
}

func (i GetCceAddonTemplateSupportVersionArgs) ToGetCceAddonTemplateSupportVersionOutput() GetCceAddonTemplateSupportVersionOutput {
	return i.ToGetCceAddonTemplateSupportVersionOutputWithContext(context.Background())
}

func (i GetCceAddonTemplateSupportVersionArgs) ToGetCceAddonTemplateSupportVersionOutputWithContext(ctx context.Context) GetCceAddonTemplateSupportVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceAddonTemplateSupportVersionOutput)
}

// GetCceAddonTemplateSupportVersionArrayInput is an input type that accepts GetCceAddonTemplateSupportVersionArray and GetCceAddonTemplateSupportVersionArrayOutput values.
// You can construct a concrete instance of `GetCceAddonTemplateSupportVersionArrayInput` via:
//
//	GetCceAddonTemplateSupportVersionArray{ GetCceAddonTemplateSupportVersionArgs{...} }
type GetCceAddonTemplateSupportVersionArrayInput interface {
	pulumi.Input

	ToGetCceAddonTemplateSupportVersionArrayOutput() GetCceAddonTemplateSupportVersionArrayOutput
	ToGetCceAddonTemplateSupportVersionArrayOutputWithContext(context.Context) GetCceAddonTemplateSupportVersionArrayOutput
}

type GetCceAddonTemplateSupportVersionArray []GetCceAddonTemplateSupportVersionInput

func (GetCceAddonTemplateSupportVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceAddonTemplateSupportVersion)(nil)).Elem()
}

func (i GetCceAddonTemplateSupportVersionArray) ToGetCceAddonTemplateSupportVersionArrayOutput() GetCceAddonTemplateSupportVersionArrayOutput {
	return i.ToGetCceAddonTemplateSupportVersionArrayOutputWithContext(context.Background())
}

func (i GetCceAddonTemplateSupportVersionArray) ToGetCceAddonTemplateSupportVersionArrayOutputWithContext(ctx context.Context) GetCceAddonTemplateSupportVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceAddonTemplateSupportVersionArrayOutput)
}

type GetCceAddonTemplateSupportVersionOutput struct{ *pulumi.OutputState }

func (GetCceAddonTemplateSupportVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceAddonTemplateSupportVersion)(nil)).Elem()
}

func (o GetCceAddonTemplateSupportVersionOutput) ToGetCceAddonTemplateSupportVersionOutput() GetCceAddonTemplateSupportVersionOutput {
	return o
}

func (o GetCceAddonTemplateSupportVersionOutput) ToGetCceAddonTemplateSupportVersionOutputWithContext(ctx context.Context) GetCceAddonTemplateSupportVersionOutput {
	return o
}

func (o GetCceAddonTemplateSupportVersionOutput) BareMetals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCceAddonTemplateSupportVersion) []string { return v.BareMetals }).(pulumi.StringArrayOutput)
}

func (o GetCceAddonTemplateSupportVersionOutput) VirtualMachines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCceAddonTemplateSupportVersion) []string { return v.VirtualMachines }).(pulumi.StringArrayOutput)
}

type GetCceAddonTemplateSupportVersionArrayOutput struct{ *pulumi.OutputState }

func (GetCceAddonTemplateSupportVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceAddonTemplateSupportVersion)(nil)).Elem()
}

func (o GetCceAddonTemplateSupportVersionArrayOutput) ToGetCceAddonTemplateSupportVersionArrayOutput() GetCceAddonTemplateSupportVersionArrayOutput {
	return o
}

func (o GetCceAddonTemplateSupportVersionArrayOutput) ToGetCceAddonTemplateSupportVersionArrayOutputWithContext(ctx context.Context) GetCceAddonTemplateSupportVersionArrayOutput {
	return o
}

func (o GetCceAddonTemplateSupportVersionArrayOutput) Index(i pulumi.IntInput) GetCceAddonTemplateSupportVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceAddonTemplateSupportVersion {
		return vs[0].([]GetCceAddonTemplateSupportVersion)[vs[1].(int)]
	}).(GetCceAddonTemplateSupportVersionOutput)
}

type GetCceClusterCertificateCluster struct {
	CertificateAuthorityData string `pulumi:"certificateAuthorityData"`
	InsecureSkipTlsVerify    bool   `pulumi:"insecureSkipTlsVerify"`
	Name                     string `pulumi:"name"`
	Server                   string `pulumi:"server"`
}

// GetCceClusterCertificateClusterInput is an input type that accepts GetCceClusterCertificateClusterArgs and GetCceClusterCertificateClusterOutput values.
// You can construct a concrete instance of `GetCceClusterCertificateClusterInput` via:
//
//	GetCceClusterCertificateClusterArgs{...}
type GetCceClusterCertificateClusterInput interface {
	pulumi.Input

	ToGetCceClusterCertificateClusterOutput() GetCceClusterCertificateClusterOutput
	ToGetCceClusterCertificateClusterOutputWithContext(context.Context) GetCceClusterCertificateClusterOutput
}

type GetCceClusterCertificateClusterArgs struct {
	CertificateAuthorityData pulumi.StringInput `pulumi:"certificateAuthorityData"`
	InsecureSkipTlsVerify    pulumi.BoolInput   `pulumi:"insecureSkipTlsVerify"`
	Name                     pulumi.StringInput `pulumi:"name"`
	Server                   pulumi.StringInput `pulumi:"server"`
}

func (GetCceClusterCertificateClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterCertificateCluster)(nil)).Elem()
}

func (i GetCceClusterCertificateClusterArgs) ToGetCceClusterCertificateClusterOutput() GetCceClusterCertificateClusterOutput {
	return i.ToGetCceClusterCertificateClusterOutputWithContext(context.Background())
}

func (i GetCceClusterCertificateClusterArgs) ToGetCceClusterCertificateClusterOutputWithContext(ctx context.Context) GetCceClusterCertificateClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterCertificateClusterOutput)
}

// GetCceClusterCertificateClusterArrayInput is an input type that accepts GetCceClusterCertificateClusterArray and GetCceClusterCertificateClusterArrayOutput values.
// You can construct a concrete instance of `GetCceClusterCertificateClusterArrayInput` via:
//
//	GetCceClusterCertificateClusterArray{ GetCceClusterCertificateClusterArgs{...} }
type GetCceClusterCertificateClusterArrayInput interface {
	pulumi.Input

	ToGetCceClusterCertificateClusterArrayOutput() GetCceClusterCertificateClusterArrayOutput
	ToGetCceClusterCertificateClusterArrayOutputWithContext(context.Context) GetCceClusterCertificateClusterArrayOutput
}

type GetCceClusterCertificateClusterArray []GetCceClusterCertificateClusterInput

func (GetCceClusterCertificateClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterCertificateCluster)(nil)).Elem()
}

func (i GetCceClusterCertificateClusterArray) ToGetCceClusterCertificateClusterArrayOutput() GetCceClusterCertificateClusterArrayOutput {
	return i.ToGetCceClusterCertificateClusterArrayOutputWithContext(context.Background())
}

func (i GetCceClusterCertificateClusterArray) ToGetCceClusterCertificateClusterArrayOutputWithContext(ctx context.Context) GetCceClusterCertificateClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterCertificateClusterArrayOutput)
}

type GetCceClusterCertificateClusterOutput struct{ *pulumi.OutputState }

func (GetCceClusterCertificateClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterCertificateCluster)(nil)).Elem()
}

func (o GetCceClusterCertificateClusterOutput) ToGetCceClusterCertificateClusterOutput() GetCceClusterCertificateClusterOutput {
	return o
}

func (o GetCceClusterCertificateClusterOutput) ToGetCceClusterCertificateClusterOutputWithContext(ctx context.Context) GetCceClusterCertificateClusterOutput {
	return o
}

func (o GetCceClusterCertificateClusterOutput) CertificateAuthorityData() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateCluster) string { return v.CertificateAuthorityData }).(pulumi.StringOutput)
}

func (o GetCceClusterCertificateClusterOutput) InsecureSkipTlsVerify() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCceClusterCertificateCluster) bool { return v.InsecureSkipTlsVerify }).(pulumi.BoolOutput)
}

func (o GetCceClusterCertificateClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateCluster) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCceClusterCertificateClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateCluster) string { return v.Server }).(pulumi.StringOutput)
}

type GetCceClusterCertificateClusterArrayOutput struct{ *pulumi.OutputState }

func (GetCceClusterCertificateClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterCertificateCluster)(nil)).Elem()
}

func (o GetCceClusterCertificateClusterArrayOutput) ToGetCceClusterCertificateClusterArrayOutput() GetCceClusterCertificateClusterArrayOutput {
	return o
}

func (o GetCceClusterCertificateClusterArrayOutput) ToGetCceClusterCertificateClusterArrayOutputWithContext(ctx context.Context) GetCceClusterCertificateClusterArrayOutput {
	return o
}

func (o GetCceClusterCertificateClusterArrayOutput) Index(i pulumi.IntInput) GetCceClusterCertificateClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClusterCertificateCluster {
		return vs[0].([]GetCceClusterCertificateCluster)[vs[1].(int)]
	}).(GetCceClusterCertificateClusterOutput)
}

type GetCceClusterCertificateContext struct {
	Cluster string `pulumi:"cluster"`
	Name    string `pulumi:"name"`
	User    string `pulumi:"user"`
}

// GetCceClusterCertificateContextInput is an input type that accepts GetCceClusterCertificateContextArgs and GetCceClusterCertificateContextOutput values.
// You can construct a concrete instance of `GetCceClusterCertificateContextInput` via:
//
//	GetCceClusterCertificateContextArgs{...}
type GetCceClusterCertificateContextInput interface {
	pulumi.Input

	ToGetCceClusterCertificateContextOutput() GetCceClusterCertificateContextOutput
	ToGetCceClusterCertificateContextOutputWithContext(context.Context) GetCceClusterCertificateContextOutput
}

type GetCceClusterCertificateContextArgs struct {
	Cluster pulumi.StringInput `pulumi:"cluster"`
	Name    pulumi.StringInput `pulumi:"name"`
	User    pulumi.StringInput `pulumi:"user"`
}

func (GetCceClusterCertificateContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterCertificateContext)(nil)).Elem()
}

func (i GetCceClusterCertificateContextArgs) ToGetCceClusterCertificateContextOutput() GetCceClusterCertificateContextOutput {
	return i.ToGetCceClusterCertificateContextOutputWithContext(context.Background())
}

func (i GetCceClusterCertificateContextArgs) ToGetCceClusterCertificateContextOutputWithContext(ctx context.Context) GetCceClusterCertificateContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterCertificateContextOutput)
}

// GetCceClusterCertificateContextArrayInput is an input type that accepts GetCceClusterCertificateContextArray and GetCceClusterCertificateContextArrayOutput values.
// You can construct a concrete instance of `GetCceClusterCertificateContextArrayInput` via:
//
//	GetCceClusterCertificateContextArray{ GetCceClusterCertificateContextArgs{...} }
type GetCceClusterCertificateContextArrayInput interface {
	pulumi.Input

	ToGetCceClusterCertificateContextArrayOutput() GetCceClusterCertificateContextArrayOutput
	ToGetCceClusterCertificateContextArrayOutputWithContext(context.Context) GetCceClusterCertificateContextArrayOutput
}

type GetCceClusterCertificateContextArray []GetCceClusterCertificateContextInput

func (GetCceClusterCertificateContextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterCertificateContext)(nil)).Elem()
}

func (i GetCceClusterCertificateContextArray) ToGetCceClusterCertificateContextArrayOutput() GetCceClusterCertificateContextArrayOutput {
	return i.ToGetCceClusterCertificateContextArrayOutputWithContext(context.Background())
}

func (i GetCceClusterCertificateContextArray) ToGetCceClusterCertificateContextArrayOutputWithContext(ctx context.Context) GetCceClusterCertificateContextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterCertificateContextArrayOutput)
}

type GetCceClusterCertificateContextOutput struct{ *pulumi.OutputState }

func (GetCceClusterCertificateContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterCertificateContext)(nil)).Elem()
}

func (o GetCceClusterCertificateContextOutput) ToGetCceClusterCertificateContextOutput() GetCceClusterCertificateContextOutput {
	return o
}

func (o GetCceClusterCertificateContextOutput) ToGetCceClusterCertificateContextOutputWithContext(ctx context.Context) GetCceClusterCertificateContextOutput {
	return o
}

func (o GetCceClusterCertificateContextOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateContext) string { return v.Cluster }).(pulumi.StringOutput)
}

func (o GetCceClusterCertificateContextOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateContext) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCceClusterCertificateContextOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateContext) string { return v.User }).(pulumi.StringOutput)
}

type GetCceClusterCertificateContextArrayOutput struct{ *pulumi.OutputState }

func (GetCceClusterCertificateContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterCertificateContext)(nil)).Elem()
}

func (o GetCceClusterCertificateContextArrayOutput) ToGetCceClusterCertificateContextArrayOutput() GetCceClusterCertificateContextArrayOutput {
	return o
}

func (o GetCceClusterCertificateContextArrayOutput) ToGetCceClusterCertificateContextArrayOutputWithContext(ctx context.Context) GetCceClusterCertificateContextArrayOutput {
	return o
}

func (o GetCceClusterCertificateContextArrayOutput) Index(i pulumi.IntInput) GetCceClusterCertificateContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClusterCertificateContext {
		return vs[0].([]GetCceClusterCertificateContext)[vs[1].(int)]
	}).(GetCceClusterCertificateContextOutput)
}

type GetCceClusterCertificateUser struct {
	ClientCertificateData string `pulumi:"clientCertificateData"`
	ClientKeyData         string `pulumi:"clientKeyData"`
	Name                  string `pulumi:"name"`
}

// GetCceClusterCertificateUserInput is an input type that accepts GetCceClusterCertificateUserArgs and GetCceClusterCertificateUserOutput values.
// You can construct a concrete instance of `GetCceClusterCertificateUserInput` via:
//
//	GetCceClusterCertificateUserArgs{...}
type GetCceClusterCertificateUserInput interface {
	pulumi.Input

	ToGetCceClusterCertificateUserOutput() GetCceClusterCertificateUserOutput
	ToGetCceClusterCertificateUserOutputWithContext(context.Context) GetCceClusterCertificateUserOutput
}

type GetCceClusterCertificateUserArgs struct {
	ClientCertificateData pulumi.StringInput `pulumi:"clientCertificateData"`
	ClientKeyData         pulumi.StringInput `pulumi:"clientKeyData"`
	Name                  pulumi.StringInput `pulumi:"name"`
}

func (GetCceClusterCertificateUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterCertificateUser)(nil)).Elem()
}

func (i GetCceClusterCertificateUserArgs) ToGetCceClusterCertificateUserOutput() GetCceClusterCertificateUserOutput {
	return i.ToGetCceClusterCertificateUserOutputWithContext(context.Background())
}

func (i GetCceClusterCertificateUserArgs) ToGetCceClusterCertificateUserOutputWithContext(ctx context.Context) GetCceClusterCertificateUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterCertificateUserOutput)
}

// GetCceClusterCertificateUserArrayInput is an input type that accepts GetCceClusterCertificateUserArray and GetCceClusterCertificateUserArrayOutput values.
// You can construct a concrete instance of `GetCceClusterCertificateUserArrayInput` via:
//
//	GetCceClusterCertificateUserArray{ GetCceClusterCertificateUserArgs{...} }
type GetCceClusterCertificateUserArrayInput interface {
	pulumi.Input

	ToGetCceClusterCertificateUserArrayOutput() GetCceClusterCertificateUserArrayOutput
	ToGetCceClusterCertificateUserArrayOutputWithContext(context.Context) GetCceClusterCertificateUserArrayOutput
}

type GetCceClusterCertificateUserArray []GetCceClusterCertificateUserInput

func (GetCceClusterCertificateUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterCertificateUser)(nil)).Elem()
}

func (i GetCceClusterCertificateUserArray) ToGetCceClusterCertificateUserArrayOutput() GetCceClusterCertificateUserArrayOutput {
	return i.ToGetCceClusterCertificateUserArrayOutputWithContext(context.Background())
}

func (i GetCceClusterCertificateUserArray) ToGetCceClusterCertificateUserArrayOutputWithContext(ctx context.Context) GetCceClusterCertificateUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterCertificateUserArrayOutput)
}

type GetCceClusterCertificateUserOutput struct{ *pulumi.OutputState }

func (GetCceClusterCertificateUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterCertificateUser)(nil)).Elem()
}

func (o GetCceClusterCertificateUserOutput) ToGetCceClusterCertificateUserOutput() GetCceClusterCertificateUserOutput {
	return o
}

func (o GetCceClusterCertificateUserOutput) ToGetCceClusterCertificateUserOutputWithContext(ctx context.Context) GetCceClusterCertificateUserOutput {
	return o
}

func (o GetCceClusterCertificateUserOutput) ClientCertificateData() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateUser) string { return v.ClientCertificateData }).(pulumi.StringOutput)
}

func (o GetCceClusterCertificateUserOutput) ClientKeyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateUser) string { return v.ClientKeyData }).(pulumi.StringOutput)
}

func (o GetCceClusterCertificateUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterCertificateUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetCceClusterCertificateUserArrayOutput struct{ *pulumi.OutputState }

func (GetCceClusterCertificateUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterCertificateUser)(nil)).Elem()
}

func (o GetCceClusterCertificateUserArrayOutput) ToGetCceClusterCertificateUserArrayOutput() GetCceClusterCertificateUserArrayOutput {
	return o
}

func (o GetCceClusterCertificateUserArrayOutput) ToGetCceClusterCertificateUserArrayOutputWithContext(ctx context.Context) GetCceClusterCertificateUserArrayOutput {
	return o
}

func (o GetCceClusterCertificateUserArrayOutput) Index(i pulumi.IntInput) GetCceClusterCertificateUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClusterCertificateUser {
		return vs[0].([]GetCceClusterCertificateUser)[vs[1].(int)]
	}).(GetCceClusterCertificateUserOutput)
}

type GetCceClusterEndpoint struct {
	Type string `pulumi:"type"`
	Url  string `pulumi:"url"`
}

// GetCceClusterEndpointInput is an input type that accepts GetCceClusterEndpointArgs and GetCceClusterEndpointOutput values.
// You can construct a concrete instance of `GetCceClusterEndpointInput` via:
//
//	GetCceClusterEndpointArgs{...}
type GetCceClusterEndpointInput interface {
	pulumi.Input

	ToGetCceClusterEndpointOutput() GetCceClusterEndpointOutput
	ToGetCceClusterEndpointOutputWithContext(context.Context) GetCceClusterEndpointOutput
}

type GetCceClusterEndpointArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
	Url  pulumi.StringInput `pulumi:"url"`
}

func (GetCceClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterEndpoint)(nil)).Elem()
}

func (i GetCceClusterEndpointArgs) ToGetCceClusterEndpointOutput() GetCceClusterEndpointOutput {
	return i.ToGetCceClusterEndpointOutputWithContext(context.Background())
}

func (i GetCceClusterEndpointArgs) ToGetCceClusterEndpointOutputWithContext(ctx context.Context) GetCceClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterEndpointOutput)
}

// GetCceClusterEndpointArrayInput is an input type that accepts GetCceClusterEndpointArray and GetCceClusterEndpointArrayOutput values.
// You can construct a concrete instance of `GetCceClusterEndpointArrayInput` via:
//
//	GetCceClusterEndpointArray{ GetCceClusterEndpointArgs{...} }
type GetCceClusterEndpointArrayInput interface {
	pulumi.Input

	ToGetCceClusterEndpointArrayOutput() GetCceClusterEndpointArrayOutput
	ToGetCceClusterEndpointArrayOutputWithContext(context.Context) GetCceClusterEndpointArrayOutput
}

type GetCceClusterEndpointArray []GetCceClusterEndpointInput

func (GetCceClusterEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterEndpoint)(nil)).Elem()
}

func (i GetCceClusterEndpointArray) ToGetCceClusterEndpointArrayOutput() GetCceClusterEndpointArrayOutput {
	return i.ToGetCceClusterEndpointArrayOutputWithContext(context.Background())
}

func (i GetCceClusterEndpointArray) ToGetCceClusterEndpointArrayOutputWithContext(ctx context.Context) GetCceClusterEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterEndpointArrayOutput)
}

type GetCceClusterEndpointOutput struct{ *pulumi.OutputState }

func (GetCceClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterEndpoint)(nil)).Elem()
}

func (o GetCceClusterEndpointOutput) ToGetCceClusterEndpointOutput() GetCceClusterEndpointOutput {
	return o
}

func (o GetCceClusterEndpointOutput) ToGetCceClusterEndpointOutputWithContext(ctx context.Context) GetCceClusterEndpointOutput {
	return o
}

func (o GetCceClusterEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetCceClusterEndpointOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterEndpoint) string { return v.Url }).(pulumi.StringOutput)
}

type GetCceClusterEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetCceClusterEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterEndpoint)(nil)).Elem()
}

func (o GetCceClusterEndpointArrayOutput) ToGetCceClusterEndpointArrayOutput() GetCceClusterEndpointArrayOutput {
	return o
}

func (o GetCceClusterEndpointArrayOutput) ToGetCceClusterEndpointArrayOutputWithContext(ctx context.Context) GetCceClusterEndpointArrayOutput {
	return o
}

func (o GetCceClusterEndpointArrayOutput) Index(i pulumi.IntInput) GetCceClusterEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClusterEndpoint {
		return vs[0].([]GetCceClusterEndpoint)[vs[1].(int)]
	}).(GetCceClusterEndpointOutput)
}

type GetCceClusterMaster struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
}

// GetCceClusterMasterInput is an input type that accepts GetCceClusterMasterArgs and GetCceClusterMasterOutput values.
// You can construct a concrete instance of `GetCceClusterMasterInput` via:
//
//	GetCceClusterMasterArgs{...}
type GetCceClusterMasterInput interface {
	pulumi.Input

	ToGetCceClusterMasterOutput() GetCceClusterMasterOutput
	ToGetCceClusterMasterOutputWithContext(context.Context) GetCceClusterMasterOutput
}

type GetCceClusterMasterArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
}

func (GetCceClusterMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterMaster)(nil)).Elem()
}

func (i GetCceClusterMasterArgs) ToGetCceClusterMasterOutput() GetCceClusterMasterOutput {
	return i.ToGetCceClusterMasterOutputWithContext(context.Background())
}

func (i GetCceClusterMasterArgs) ToGetCceClusterMasterOutputWithContext(ctx context.Context) GetCceClusterMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterMasterOutput)
}

// GetCceClusterMasterArrayInput is an input type that accepts GetCceClusterMasterArray and GetCceClusterMasterArrayOutput values.
// You can construct a concrete instance of `GetCceClusterMasterArrayInput` via:
//
//	GetCceClusterMasterArray{ GetCceClusterMasterArgs{...} }
type GetCceClusterMasterArrayInput interface {
	pulumi.Input

	ToGetCceClusterMasterArrayOutput() GetCceClusterMasterArrayOutput
	ToGetCceClusterMasterArrayOutputWithContext(context.Context) GetCceClusterMasterArrayOutput
}

type GetCceClusterMasterArray []GetCceClusterMasterInput

func (GetCceClusterMasterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterMaster)(nil)).Elem()
}

func (i GetCceClusterMasterArray) ToGetCceClusterMasterArrayOutput() GetCceClusterMasterArrayOutput {
	return i.ToGetCceClusterMasterArrayOutputWithContext(context.Background())
}

func (i GetCceClusterMasterArray) ToGetCceClusterMasterArrayOutputWithContext(ctx context.Context) GetCceClusterMasterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClusterMasterArrayOutput)
}

type GetCceClusterMasterOutput struct{ *pulumi.OutputState }

func (GetCceClusterMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClusterMaster)(nil)).Elem()
}

func (o GetCceClusterMasterOutput) ToGetCceClusterMasterOutput() GetCceClusterMasterOutput {
	return o
}

func (o GetCceClusterMasterOutput) ToGetCceClusterMasterOutputWithContext(ctx context.Context) GetCceClusterMasterOutput {
	return o
}

func (o GetCceClusterMasterOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClusterMaster) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

type GetCceClusterMasterArrayOutput struct{ *pulumi.OutputState }

func (GetCceClusterMasterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClusterMaster)(nil)).Elem()
}

func (o GetCceClusterMasterArrayOutput) ToGetCceClusterMasterArrayOutput() GetCceClusterMasterArrayOutput {
	return o
}

func (o GetCceClusterMasterArrayOutput) ToGetCceClusterMasterArrayOutputWithContext(ctx context.Context) GetCceClusterMasterArrayOutput {
	return o
}

func (o GetCceClusterMasterArrayOutput) Index(i pulumi.IntInput) GetCceClusterMasterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClusterMaster {
		return vs[0].([]GetCceClusterMaster)[vs[1].(int)]
	}).(GetCceClusterMasterOutput)
}

type GetCceClustersCluster struct {
	AuthenticationMode   string                                    `pulumi:"authenticationMode"`
	BillingMode          int                                       `pulumi:"billingMode"`
	CertificateClusters  []GetCceClustersClusterCertificateCluster `pulumi:"certificateClusters"`
	CertificateUsers     []GetCceClustersClusterCertificateUser    `pulumi:"certificateUsers"`
	ClusterType          string                                    `pulumi:"clusterType"`
	ClusterVersion       string                                    `pulumi:"clusterVersion"`
	ContainerNetworkCidr string                                    `pulumi:"containerNetworkCidr"`
	ContainerNetworkType string                                    `pulumi:"containerNetworkType"`
	Description          string                                    `pulumi:"description"`
	Endpoints            []GetCceClustersClusterEndpoint           `pulumi:"endpoints"`
	EniSubnetCidr        string                                    `pulumi:"eniSubnetCidr"`
	EniSubnetId          string                                    `pulumi:"eniSubnetId"`
	EnterpriseProjectId  string                                    `pulumi:"enterpriseProjectId"`
	FlavorId             string                                    `pulumi:"flavorId"`
	Id                   string                                    `pulumi:"id"`
	KubeConfigRaw        string                                    `pulumi:"kubeConfigRaw"`
	Masters              []GetCceClustersClusterMaster             `pulumi:"masters"`
	Name                 string                                    `pulumi:"name"`
	SecurityGroupId      string                                    `pulumi:"securityGroupId"`
	ServiceNetworkCidr   string                                    `pulumi:"serviceNetworkCidr"`
	Status               string                                    `pulumi:"status"`
	SubnetId             string                                    `pulumi:"subnetId"`
	VpcId                string                                    `pulumi:"vpcId"`
}

// GetCceClustersClusterInput is an input type that accepts GetCceClustersClusterArgs and GetCceClustersClusterOutput values.
// You can construct a concrete instance of `GetCceClustersClusterInput` via:
//
//	GetCceClustersClusterArgs{...}
type GetCceClustersClusterInput interface {
	pulumi.Input

	ToGetCceClustersClusterOutput() GetCceClustersClusterOutput
	ToGetCceClustersClusterOutputWithContext(context.Context) GetCceClustersClusterOutput
}

type GetCceClustersClusterArgs struct {
	AuthenticationMode   pulumi.StringInput                                `pulumi:"authenticationMode"`
	BillingMode          pulumi.IntInput                                   `pulumi:"billingMode"`
	CertificateClusters  GetCceClustersClusterCertificateClusterArrayInput `pulumi:"certificateClusters"`
	CertificateUsers     GetCceClustersClusterCertificateUserArrayInput    `pulumi:"certificateUsers"`
	ClusterType          pulumi.StringInput                                `pulumi:"clusterType"`
	ClusterVersion       pulumi.StringInput                                `pulumi:"clusterVersion"`
	ContainerNetworkCidr pulumi.StringInput                                `pulumi:"containerNetworkCidr"`
	ContainerNetworkType pulumi.StringInput                                `pulumi:"containerNetworkType"`
	Description          pulumi.StringInput                                `pulumi:"description"`
	Endpoints            GetCceClustersClusterEndpointArrayInput           `pulumi:"endpoints"`
	EniSubnetCidr        pulumi.StringInput                                `pulumi:"eniSubnetCidr"`
	EniSubnetId          pulumi.StringInput                                `pulumi:"eniSubnetId"`
	EnterpriseProjectId  pulumi.StringInput                                `pulumi:"enterpriseProjectId"`
	FlavorId             pulumi.StringInput                                `pulumi:"flavorId"`
	Id                   pulumi.StringInput                                `pulumi:"id"`
	KubeConfigRaw        pulumi.StringInput                                `pulumi:"kubeConfigRaw"`
	Masters              GetCceClustersClusterMasterArrayInput             `pulumi:"masters"`
	Name                 pulumi.StringInput                                `pulumi:"name"`
	SecurityGroupId      pulumi.StringInput                                `pulumi:"securityGroupId"`
	ServiceNetworkCidr   pulumi.StringInput                                `pulumi:"serviceNetworkCidr"`
	Status               pulumi.StringInput                                `pulumi:"status"`
	SubnetId             pulumi.StringInput                                `pulumi:"subnetId"`
	VpcId                pulumi.StringInput                                `pulumi:"vpcId"`
}

func (GetCceClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersCluster)(nil)).Elem()
}

func (i GetCceClustersClusterArgs) ToGetCceClustersClusterOutput() GetCceClustersClusterOutput {
	return i.ToGetCceClustersClusterOutputWithContext(context.Background())
}

func (i GetCceClustersClusterArgs) ToGetCceClustersClusterOutputWithContext(ctx context.Context) GetCceClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterOutput)
}

// GetCceClustersClusterArrayInput is an input type that accepts GetCceClustersClusterArray and GetCceClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetCceClustersClusterArrayInput` via:
//
//	GetCceClustersClusterArray{ GetCceClustersClusterArgs{...} }
type GetCceClustersClusterArrayInput interface {
	pulumi.Input

	ToGetCceClustersClusterArrayOutput() GetCceClustersClusterArrayOutput
	ToGetCceClustersClusterArrayOutputWithContext(context.Context) GetCceClustersClusterArrayOutput
}

type GetCceClustersClusterArray []GetCceClustersClusterInput

func (GetCceClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersCluster)(nil)).Elem()
}

func (i GetCceClustersClusterArray) ToGetCceClustersClusterArrayOutput() GetCceClustersClusterArrayOutput {
	return i.ToGetCceClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetCceClustersClusterArray) ToGetCceClustersClusterArrayOutputWithContext(ctx context.Context) GetCceClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterArrayOutput)
}

type GetCceClustersClusterOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersCluster)(nil)).Elem()
}

func (o GetCceClustersClusterOutput) ToGetCceClustersClusterOutput() GetCceClustersClusterOutput {
	return o
}

func (o GetCceClustersClusterOutput) ToGetCceClustersClusterOutputWithContext(ctx context.Context) GetCceClustersClusterOutput {
	return o
}

func (o GetCceClustersClusterOutput) AuthenticationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.AuthenticationMode }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceClustersCluster) int { return v.BillingMode }).(pulumi.IntOutput)
}

func (o GetCceClustersClusterOutput) CertificateClusters() GetCceClustersClusterCertificateClusterArrayOutput {
	return o.ApplyT(func(v GetCceClustersCluster) []GetCceClustersClusterCertificateCluster { return v.CertificateClusters }).(GetCceClustersClusterCertificateClusterArrayOutput)
}

func (o GetCceClustersClusterOutput) CertificateUsers() GetCceClustersClusterCertificateUserArrayOutput {
	return o.ApplyT(func(v GetCceClustersCluster) []GetCceClustersClusterCertificateUser { return v.CertificateUsers }).(GetCceClustersClusterCertificateUserArrayOutput)
}

func (o GetCceClustersClusterOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) ContainerNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.ContainerNetworkCidr }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) ContainerNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.ContainerNetworkType }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) Endpoints() GetCceClustersClusterEndpointArrayOutput {
	return o.ApplyT(func(v GetCceClustersCluster) []GetCceClustersClusterEndpoint { return v.Endpoints }).(GetCceClustersClusterEndpointArrayOutput)
}

func (o GetCceClustersClusterOutput) EniSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.EniSubnetCidr }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) EniSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.EniSubnetId }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.FlavorId }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) KubeConfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.KubeConfigRaw }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) Masters() GetCceClustersClusterMasterArrayOutput {
	return o.ApplyT(func(v GetCceClustersCluster) []GetCceClustersClusterMaster { return v.Masters }).(GetCceClustersClusterMasterArrayOutput)
}

func (o GetCceClustersClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) ServiceNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.ServiceNetworkCidr }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersCluster) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetCceClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersCluster)(nil)).Elem()
}

func (o GetCceClustersClusterArrayOutput) ToGetCceClustersClusterArrayOutput() GetCceClustersClusterArrayOutput {
	return o
}

func (o GetCceClustersClusterArrayOutput) ToGetCceClustersClusterArrayOutputWithContext(ctx context.Context) GetCceClustersClusterArrayOutput {
	return o
}

func (o GetCceClustersClusterArrayOutput) Index(i pulumi.IntInput) GetCceClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClustersCluster {
		return vs[0].([]GetCceClustersCluster)[vs[1].(int)]
	}).(GetCceClustersClusterOutput)
}

type GetCceClustersClusterCertificateCluster struct {
	CertificateAuthorityData string `pulumi:"certificateAuthorityData"`
	Name                     string `pulumi:"name"`
	Server                   string `pulumi:"server"`
}

// GetCceClustersClusterCertificateClusterInput is an input type that accepts GetCceClustersClusterCertificateClusterArgs and GetCceClustersClusterCertificateClusterOutput values.
// You can construct a concrete instance of `GetCceClustersClusterCertificateClusterInput` via:
//
//	GetCceClustersClusterCertificateClusterArgs{...}
type GetCceClustersClusterCertificateClusterInput interface {
	pulumi.Input

	ToGetCceClustersClusterCertificateClusterOutput() GetCceClustersClusterCertificateClusterOutput
	ToGetCceClustersClusterCertificateClusterOutputWithContext(context.Context) GetCceClustersClusterCertificateClusterOutput
}

type GetCceClustersClusterCertificateClusterArgs struct {
	CertificateAuthorityData pulumi.StringInput `pulumi:"certificateAuthorityData"`
	Name                     pulumi.StringInput `pulumi:"name"`
	Server                   pulumi.StringInput `pulumi:"server"`
}

func (GetCceClustersClusterCertificateClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterCertificateCluster)(nil)).Elem()
}

func (i GetCceClustersClusterCertificateClusterArgs) ToGetCceClustersClusterCertificateClusterOutput() GetCceClustersClusterCertificateClusterOutput {
	return i.ToGetCceClustersClusterCertificateClusterOutputWithContext(context.Background())
}

func (i GetCceClustersClusterCertificateClusterArgs) ToGetCceClustersClusterCertificateClusterOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterCertificateClusterOutput)
}

// GetCceClustersClusterCertificateClusterArrayInput is an input type that accepts GetCceClustersClusterCertificateClusterArray and GetCceClustersClusterCertificateClusterArrayOutput values.
// You can construct a concrete instance of `GetCceClustersClusterCertificateClusterArrayInput` via:
//
//	GetCceClustersClusterCertificateClusterArray{ GetCceClustersClusterCertificateClusterArgs{...} }
type GetCceClustersClusterCertificateClusterArrayInput interface {
	pulumi.Input

	ToGetCceClustersClusterCertificateClusterArrayOutput() GetCceClustersClusterCertificateClusterArrayOutput
	ToGetCceClustersClusterCertificateClusterArrayOutputWithContext(context.Context) GetCceClustersClusterCertificateClusterArrayOutput
}

type GetCceClustersClusterCertificateClusterArray []GetCceClustersClusterCertificateClusterInput

func (GetCceClustersClusterCertificateClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterCertificateCluster)(nil)).Elem()
}

func (i GetCceClustersClusterCertificateClusterArray) ToGetCceClustersClusterCertificateClusterArrayOutput() GetCceClustersClusterCertificateClusterArrayOutput {
	return i.ToGetCceClustersClusterCertificateClusterArrayOutputWithContext(context.Background())
}

func (i GetCceClustersClusterCertificateClusterArray) ToGetCceClustersClusterCertificateClusterArrayOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterCertificateClusterArrayOutput)
}

type GetCceClustersClusterCertificateClusterOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterCertificateClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterCertificateCluster)(nil)).Elem()
}

func (o GetCceClustersClusterCertificateClusterOutput) ToGetCceClustersClusterCertificateClusterOutput() GetCceClustersClusterCertificateClusterOutput {
	return o
}

func (o GetCceClustersClusterCertificateClusterOutput) ToGetCceClustersClusterCertificateClusterOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateClusterOutput {
	return o
}

func (o GetCceClustersClusterCertificateClusterOutput) CertificateAuthorityData() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterCertificateCluster) string { return v.CertificateAuthorityData }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterCertificateClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterCertificateCluster) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterCertificateClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterCertificateCluster) string { return v.Server }).(pulumi.StringOutput)
}

type GetCceClustersClusterCertificateClusterArrayOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterCertificateClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterCertificateCluster)(nil)).Elem()
}

func (o GetCceClustersClusterCertificateClusterArrayOutput) ToGetCceClustersClusterCertificateClusterArrayOutput() GetCceClustersClusterCertificateClusterArrayOutput {
	return o
}

func (o GetCceClustersClusterCertificateClusterArrayOutput) ToGetCceClustersClusterCertificateClusterArrayOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateClusterArrayOutput {
	return o
}

func (o GetCceClustersClusterCertificateClusterArrayOutput) Index(i pulumi.IntInput) GetCceClustersClusterCertificateClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClustersClusterCertificateCluster {
		return vs[0].([]GetCceClustersClusterCertificateCluster)[vs[1].(int)]
	}).(GetCceClustersClusterCertificateClusterOutput)
}

type GetCceClustersClusterCertificateUser struct {
	ClientCertificateData string `pulumi:"clientCertificateData"`
	ClientKeyData         string `pulumi:"clientKeyData"`
	Name                  string `pulumi:"name"`
}

// GetCceClustersClusterCertificateUserInput is an input type that accepts GetCceClustersClusterCertificateUserArgs and GetCceClustersClusterCertificateUserOutput values.
// You can construct a concrete instance of `GetCceClustersClusterCertificateUserInput` via:
//
//	GetCceClustersClusterCertificateUserArgs{...}
type GetCceClustersClusterCertificateUserInput interface {
	pulumi.Input

	ToGetCceClustersClusterCertificateUserOutput() GetCceClustersClusterCertificateUserOutput
	ToGetCceClustersClusterCertificateUserOutputWithContext(context.Context) GetCceClustersClusterCertificateUserOutput
}

type GetCceClustersClusterCertificateUserArgs struct {
	ClientCertificateData pulumi.StringInput `pulumi:"clientCertificateData"`
	ClientKeyData         pulumi.StringInput `pulumi:"clientKeyData"`
	Name                  pulumi.StringInput `pulumi:"name"`
}

func (GetCceClustersClusterCertificateUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterCertificateUser)(nil)).Elem()
}

func (i GetCceClustersClusterCertificateUserArgs) ToGetCceClustersClusterCertificateUserOutput() GetCceClustersClusterCertificateUserOutput {
	return i.ToGetCceClustersClusterCertificateUserOutputWithContext(context.Background())
}

func (i GetCceClustersClusterCertificateUserArgs) ToGetCceClustersClusterCertificateUserOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterCertificateUserOutput)
}

// GetCceClustersClusterCertificateUserArrayInput is an input type that accepts GetCceClustersClusterCertificateUserArray and GetCceClustersClusterCertificateUserArrayOutput values.
// You can construct a concrete instance of `GetCceClustersClusterCertificateUserArrayInput` via:
//
//	GetCceClustersClusterCertificateUserArray{ GetCceClustersClusterCertificateUserArgs{...} }
type GetCceClustersClusterCertificateUserArrayInput interface {
	pulumi.Input

	ToGetCceClustersClusterCertificateUserArrayOutput() GetCceClustersClusterCertificateUserArrayOutput
	ToGetCceClustersClusterCertificateUserArrayOutputWithContext(context.Context) GetCceClustersClusterCertificateUserArrayOutput
}

type GetCceClustersClusterCertificateUserArray []GetCceClustersClusterCertificateUserInput

func (GetCceClustersClusterCertificateUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterCertificateUser)(nil)).Elem()
}

func (i GetCceClustersClusterCertificateUserArray) ToGetCceClustersClusterCertificateUserArrayOutput() GetCceClustersClusterCertificateUserArrayOutput {
	return i.ToGetCceClustersClusterCertificateUserArrayOutputWithContext(context.Background())
}

func (i GetCceClustersClusterCertificateUserArray) ToGetCceClustersClusterCertificateUserArrayOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterCertificateUserArrayOutput)
}

type GetCceClustersClusterCertificateUserOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterCertificateUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterCertificateUser)(nil)).Elem()
}

func (o GetCceClustersClusterCertificateUserOutput) ToGetCceClustersClusterCertificateUserOutput() GetCceClustersClusterCertificateUserOutput {
	return o
}

func (o GetCceClustersClusterCertificateUserOutput) ToGetCceClustersClusterCertificateUserOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateUserOutput {
	return o
}

func (o GetCceClustersClusterCertificateUserOutput) ClientCertificateData() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterCertificateUser) string { return v.ClientCertificateData }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterCertificateUserOutput) ClientKeyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterCertificateUser) string { return v.ClientKeyData }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterCertificateUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterCertificateUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetCceClustersClusterCertificateUserArrayOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterCertificateUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterCertificateUser)(nil)).Elem()
}

func (o GetCceClustersClusterCertificateUserArrayOutput) ToGetCceClustersClusterCertificateUserArrayOutput() GetCceClustersClusterCertificateUserArrayOutput {
	return o
}

func (o GetCceClustersClusterCertificateUserArrayOutput) ToGetCceClustersClusterCertificateUserArrayOutputWithContext(ctx context.Context) GetCceClustersClusterCertificateUserArrayOutput {
	return o
}

func (o GetCceClustersClusterCertificateUserArrayOutput) Index(i pulumi.IntInput) GetCceClustersClusterCertificateUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClustersClusterCertificateUser {
		return vs[0].([]GetCceClustersClusterCertificateUser)[vs[1].(int)]
	}).(GetCceClustersClusterCertificateUserOutput)
}

type GetCceClustersClusterEndpoint struct {
	Type string `pulumi:"type"`
	Url  string `pulumi:"url"`
}

// GetCceClustersClusterEndpointInput is an input type that accepts GetCceClustersClusterEndpointArgs and GetCceClustersClusterEndpointOutput values.
// You can construct a concrete instance of `GetCceClustersClusterEndpointInput` via:
//
//	GetCceClustersClusterEndpointArgs{...}
type GetCceClustersClusterEndpointInput interface {
	pulumi.Input

	ToGetCceClustersClusterEndpointOutput() GetCceClustersClusterEndpointOutput
	ToGetCceClustersClusterEndpointOutputWithContext(context.Context) GetCceClustersClusterEndpointOutput
}

type GetCceClustersClusterEndpointArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
	Url  pulumi.StringInput `pulumi:"url"`
}

func (GetCceClustersClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterEndpoint)(nil)).Elem()
}

func (i GetCceClustersClusterEndpointArgs) ToGetCceClustersClusterEndpointOutput() GetCceClustersClusterEndpointOutput {
	return i.ToGetCceClustersClusterEndpointOutputWithContext(context.Background())
}

func (i GetCceClustersClusterEndpointArgs) ToGetCceClustersClusterEndpointOutputWithContext(ctx context.Context) GetCceClustersClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterEndpointOutput)
}

// GetCceClustersClusterEndpointArrayInput is an input type that accepts GetCceClustersClusterEndpointArray and GetCceClustersClusterEndpointArrayOutput values.
// You can construct a concrete instance of `GetCceClustersClusterEndpointArrayInput` via:
//
//	GetCceClustersClusterEndpointArray{ GetCceClustersClusterEndpointArgs{...} }
type GetCceClustersClusterEndpointArrayInput interface {
	pulumi.Input

	ToGetCceClustersClusterEndpointArrayOutput() GetCceClustersClusterEndpointArrayOutput
	ToGetCceClustersClusterEndpointArrayOutputWithContext(context.Context) GetCceClustersClusterEndpointArrayOutput
}

type GetCceClustersClusterEndpointArray []GetCceClustersClusterEndpointInput

func (GetCceClustersClusterEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterEndpoint)(nil)).Elem()
}

func (i GetCceClustersClusterEndpointArray) ToGetCceClustersClusterEndpointArrayOutput() GetCceClustersClusterEndpointArrayOutput {
	return i.ToGetCceClustersClusterEndpointArrayOutputWithContext(context.Background())
}

func (i GetCceClustersClusterEndpointArray) ToGetCceClustersClusterEndpointArrayOutputWithContext(ctx context.Context) GetCceClustersClusterEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterEndpointArrayOutput)
}

type GetCceClustersClusterEndpointOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterEndpoint)(nil)).Elem()
}

func (o GetCceClustersClusterEndpointOutput) ToGetCceClustersClusterEndpointOutput() GetCceClustersClusterEndpointOutput {
	return o
}

func (o GetCceClustersClusterEndpointOutput) ToGetCceClustersClusterEndpointOutputWithContext(ctx context.Context) GetCceClustersClusterEndpointOutput {
	return o
}

func (o GetCceClustersClusterEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetCceClustersClusterEndpointOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterEndpoint) string { return v.Url }).(pulumi.StringOutput)
}

type GetCceClustersClusterEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterEndpoint)(nil)).Elem()
}

func (o GetCceClustersClusterEndpointArrayOutput) ToGetCceClustersClusterEndpointArrayOutput() GetCceClustersClusterEndpointArrayOutput {
	return o
}

func (o GetCceClustersClusterEndpointArrayOutput) ToGetCceClustersClusterEndpointArrayOutputWithContext(ctx context.Context) GetCceClustersClusterEndpointArrayOutput {
	return o
}

func (o GetCceClustersClusterEndpointArrayOutput) Index(i pulumi.IntInput) GetCceClustersClusterEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClustersClusterEndpoint {
		return vs[0].([]GetCceClustersClusterEndpoint)[vs[1].(int)]
	}).(GetCceClustersClusterEndpointOutput)
}

type GetCceClustersClusterMaster struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
}

// GetCceClustersClusterMasterInput is an input type that accepts GetCceClustersClusterMasterArgs and GetCceClustersClusterMasterOutput values.
// You can construct a concrete instance of `GetCceClustersClusterMasterInput` via:
//
//	GetCceClustersClusterMasterArgs{...}
type GetCceClustersClusterMasterInput interface {
	pulumi.Input

	ToGetCceClustersClusterMasterOutput() GetCceClustersClusterMasterOutput
	ToGetCceClustersClusterMasterOutputWithContext(context.Context) GetCceClustersClusterMasterOutput
}

type GetCceClustersClusterMasterArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
}

func (GetCceClustersClusterMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterMaster)(nil)).Elem()
}

func (i GetCceClustersClusterMasterArgs) ToGetCceClustersClusterMasterOutput() GetCceClustersClusterMasterOutput {
	return i.ToGetCceClustersClusterMasterOutputWithContext(context.Background())
}

func (i GetCceClustersClusterMasterArgs) ToGetCceClustersClusterMasterOutputWithContext(ctx context.Context) GetCceClustersClusterMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterMasterOutput)
}

// GetCceClustersClusterMasterArrayInput is an input type that accepts GetCceClustersClusterMasterArray and GetCceClustersClusterMasterArrayOutput values.
// You can construct a concrete instance of `GetCceClustersClusterMasterArrayInput` via:
//
//	GetCceClustersClusterMasterArray{ GetCceClustersClusterMasterArgs{...} }
type GetCceClustersClusterMasterArrayInput interface {
	pulumi.Input

	ToGetCceClustersClusterMasterArrayOutput() GetCceClustersClusterMasterArrayOutput
	ToGetCceClustersClusterMasterArrayOutputWithContext(context.Context) GetCceClustersClusterMasterArrayOutput
}

type GetCceClustersClusterMasterArray []GetCceClustersClusterMasterInput

func (GetCceClustersClusterMasterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterMaster)(nil)).Elem()
}

func (i GetCceClustersClusterMasterArray) ToGetCceClustersClusterMasterArrayOutput() GetCceClustersClusterMasterArrayOutput {
	return i.ToGetCceClustersClusterMasterArrayOutputWithContext(context.Background())
}

func (i GetCceClustersClusterMasterArray) ToGetCceClustersClusterMasterArrayOutputWithContext(ctx context.Context) GetCceClustersClusterMasterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceClustersClusterMasterArrayOutput)
}

type GetCceClustersClusterMasterOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersClusterMaster)(nil)).Elem()
}

func (o GetCceClustersClusterMasterOutput) ToGetCceClustersClusterMasterOutput() GetCceClustersClusterMasterOutput {
	return o
}

func (o GetCceClustersClusterMasterOutput) ToGetCceClustersClusterMasterOutputWithContext(ctx context.Context) GetCceClustersClusterMasterOutput {
	return o
}

func (o GetCceClustersClusterMasterOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersClusterMaster) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

type GetCceClustersClusterMasterArrayOutput struct{ *pulumi.OutputState }

func (GetCceClustersClusterMasterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceClustersClusterMaster)(nil)).Elem()
}

func (o GetCceClustersClusterMasterArrayOutput) ToGetCceClustersClusterMasterArrayOutput() GetCceClustersClusterMasterArrayOutput {
	return o
}

func (o GetCceClustersClusterMasterArrayOutput) ToGetCceClustersClusterMasterArrayOutputWithContext(ctx context.Context) GetCceClustersClusterMasterArrayOutput {
	return o
}

func (o GetCceClustersClusterMasterArrayOutput) Index(i pulumi.IntInput) GetCceClustersClusterMasterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceClustersClusterMaster {
		return vs[0].([]GetCceClustersClusterMaster)[vs[1].(int)]
	}).(GetCceClustersClusterMasterOutput)
}

type GetCceNodeDataVolume struct {
	ExtendParams map[string]string `pulumi:"extendParams"`
	Size         int               `pulumi:"size"`
	Volumetype   string            `pulumi:"volumetype"`
}

// GetCceNodeDataVolumeInput is an input type that accepts GetCceNodeDataVolumeArgs and GetCceNodeDataVolumeOutput values.
// You can construct a concrete instance of `GetCceNodeDataVolumeInput` via:
//
//	GetCceNodeDataVolumeArgs{...}
type GetCceNodeDataVolumeInput interface {
	pulumi.Input

	ToGetCceNodeDataVolumeOutput() GetCceNodeDataVolumeOutput
	ToGetCceNodeDataVolumeOutputWithContext(context.Context) GetCceNodeDataVolumeOutput
}

type GetCceNodeDataVolumeArgs struct {
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	Size         pulumi.IntInput       `pulumi:"size"`
	Volumetype   pulumi.StringInput    `pulumi:"volumetype"`
}

func (GetCceNodeDataVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodeDataVolume)(nil)).Elem()
}

func (i GetCceNodeDataVolumeArgs) ToGetCceNodeDataVolumeOutput() GetCceNodeDataVolumeOutput {
	return i.ToGetCceNodeDataVolumeOutputWithContext(context.Background())
}

func (i GetCceNodeDataVolumeArgs) ToGetCceNodeDataVolumeOutputWithContext(ctx context.Context) GetCceNodeDataVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodeDataVolumeOutput)
}

// GetCceNodeDataVolumeArrayInput is an input type that accepts GetCceNodeDataVolumeArray and GetCceNodeDataVolumeArrayOutput values.
// You can construct a concrete instance of `GetCceNodeDataVolumeArrayInput` via:
//
//	GetCceNodeDataVolumeArray{ GetCceNodeDataVolumeArgs{...} }
type GetCceNodeDataVolumeArrayInput interface {
	pulumi.Input

	ToGetCceNodeDataVolumeArrayOutput() GetCceNodeDataVolumeArrayOutput
	ToGetCceNodeDataVolumeArrayOutputWithContext(context.Context) GetCceNodeDataVolumeArrayOutput
}

type GetCceNodeDataVolumeArray []GetCceNodeDataVolumeInput

func (GetCceNodeDataVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodeDataVolume)(nil)).Elem()
}

func (i GetCceNodeDataVolumeArray) ToGetCceNodeDataVolumeArrayOutput() GetCceNodeDataVolumeArrayOutput {
	return i.ToGetCceNodeDataVolumeArrayOutputWithContext(context.Background())
}

func (i GetCceNodeDataVolumeArray) ToGetCceNodeDataVolumeArrayOutputWithContext(ctx context.Context) GetCceNodeDataVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodeDataVolumeArrayOutput)
}

type GetCceNodeDataVolumeOutput struct{ *pulumi.OutputState }

func (GetCceNodeDataVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodeDataVolume)(nil)).Elem()
}

func (o GetCceNodeDataVolumeOutput) ToGetCceNodeDataVolumeOutput() GetCceNodeDataVolumeOutput {
	return o
}

func (o GetCceNodeDataVolumeOutput) ToGetCceNodeDataVolumeOutputWithContext(ctx context.Context) GetCceNodeDataVolumeOutput {
	return o
}

func (o GetCceNodeDataVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCceNodeDataVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

func (o GetCceNodeDataVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceNodeDataVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetCceNodeDataVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodeDataVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetCceNodeDataVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodeDataVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodeDataVolume)(nil)).Elem()
}

func (o GetCceNodeDataVolumeArrayOutput) ToGetCceNodeDataVolumeArrayOutput() GetCceNodeDataVolumeArrayOutput {
	return o
}

func (o GetCceNodeDataVolumeArrayOutput) ToGetCceNodeDataVolumeArrayOutputWithContext(ctx context.Context) GetCceNodeDataVolumeArrayOutput {
	return o
}

func (o GetCceNodeDataVolumeArrayOutput) Index(i pulumi.IntInput) GetCceNodeDataVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodeDataVolume {
		return vs[0].([]GetCceNodeDataVolume)[vs[1].(int)]
	}).(GetCceNodeDataVolumeOutput)
}

type GetCceNodeHostnameConfig struct {
	Type string `pulumi:"type"`
}

// GetCceNodeHostnameConfigInput is an input type that accepts GetCceNodeHostnameConfigArgs and GetCceNodeHostnameConfigOutput values.
// You can construct a concrete instance of `GetCceNodeHostnameConfigInput` via:
//
//	GetCceNodeHostnameConfigArgs{...}
type GetCceNodeHostnameConfigInput interface {
	pulumi.Input

	ToGetCceNodeHostnameConfigOutput() GetCceNodeHostnameConfigOutput
	ToGetCceNodeHostnameConfigOutputWithContext(context.Context) GetCceNodeHostnameConfigOutput
}

type GetCceNodeHostnameConfigArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCceNodeHostnameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodeHostnameConfig)(nil)).Elem()
}

func (i GetCceNodeHostnameConfigArgs) ToGetCceNodeHostnameConfigOutput() GetCceNodeHostnameConfigOutput {
	return i.ToGetCceNodeHostnameConfigOutputWithContext(context.Background())
}

func (i GetCceNodeHostnameConfigArgs) ToGetCceNodeHostnameConfigOutputWithContext(ctx context.Context) GetCceNodeHostnameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodeHostnameConfigOutput)
}

// GetCceNodeHostnameConfigArrayInput is an input type that accepts GetCceNodeHostnameConfigArray and GetCceNodeHostnameConfigArrayOutput values.
// You can construct a concrete instance of `GetCceNodeHostnameConfigArrayInput` via:
//
//	GetCceNodeHostnameConfigArray{ GetCceNodeHostnameConfigArgs{...} }
type GetCceNodeHostnameConfigArrayInput interface {
	pulumi.Input

	ToGetCceNodeHostnameConfigArrayOutput() GetCceNodeHostnameConfigArrayOutput
	ToGetCceNodeHostnameConfigArrayOutputWithContext(context.Context) GetCceNodeHostnameConfigArrayOutput
}

type GetCceNodeHostnameConfigArray []GetCceNodeHostnameConfigInput

func (GetCceNodeHostnameConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodeHostnameConfig)(nil)).Elem()
}

func (i GetCceNodeHostnameConfigArray) ToGetCceNodeHostnameConfigArrayOutput() GetCceNodeHostnameConfigArrayOutput {
	return i.ToGetCceNodeHostnameConfigArrayOutputWithContext(context.Background())
}

func (i GetCceNodeHostnameConfigArray) ToGetCceNodeHostnameConfigArrayOutputWithContext(ctx context.Context) GetCceNodeHostnameConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodeHostnameConfigArrayOutput)
}

type GetCceNodeHostnameConfigOutput struct{ *pulumi.OutputState }

func (GetCceNodeHostnameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodeHostnameConfig)(nil)).Elem()
}

func (o GetCceNodeHostnameConfigOutput) ToGetCceNodeHostnameConfigOutput() GetCceNodeHostnameConfigOutput {
	return o
}

func (o GetCceNodeHostnameConfigOutput) ToGetCceNodeHostnameConfigOutputWithContext(ctx context.Context) GetCceNodeHostnameConfigOutput {
	return o
}

func (o GetCceNodeHostnameConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodeHostnameConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetCceNodeHostnameConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodeHostnameConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodeHostnameConfig)(nil)).Elem()
}

func (o GetCceNodeHostnameConfigArrayOutput) ToGetCceNodeHostnameConfigArrayOutput() GetCceNodeHostnameConfigArrayOutput {
	return o
}

func (o GetCceNodeHostnameConfigArrayOutput) ToGetCceNodeHostnameConfigArrayOutputWithContext(ctx context.Context) GetCceNodeHostnameConfigArrayOutput {
	return o
}

func (o GetCceNodeHostnameConfigArrayOutput) Index(i pulumi.IntInput) GetCceNodeHostnameConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodeHostnameConfig {
		return vs[0].([]GetCceNodeHostnameConfig)[vs[1].(int)]
	}).(GetCceNodeHostnameConfigOutput)
}

type GetCceNodePoolDataVolume struct {
	ExtendParams map[string]string `pulumi:"extendParams"`
	Size         int               `pulumi:"size"`
	Volumetype   string            `pulumi:"volumetype"`
}

// GetCceNodePoolDataVolumeInput is an input type that accepts GetCceNodePoolDataVolumeArgs and GetCceNodePoolDataVolumeOutput values.
// You can construct a concrete instance of `GetCceNodePoolDataVolumeInput` via:
//
//	GetCceNodePoolDataVolumeArgs{...}
type GetCceNodePoolDataVolumeInput interface {
	pulumi.Input

	ToGetCceNodePoolDataVolumeOutput() GetCceNodePoolDataVolumeOutput
	ToGetCceNodePoolDataVolumeOutputWithContext(context.Context) GetCceNodePoolDataVolumeOutput
}

type GetCceNodePoolDataVolumeArgs struct {
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	Size         pulumi.IntInput       `pulumi:"size"`
	Volumetype   pulumi.StringInput    `pulumi:"volumetype"`
}

func (GetCceNodePoolDataVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodePoolDataVolume)(nil)).Elem()
}

func (i GetCceNodePoolDataVolumeArgs) ToGetCceNodePoolDataVolumeOutput() GetCceNodePoolDataVolumeOutput {
	return i.ToGetCceNodePoolDataVolumeOutputWithContext(context.Background())
}

func (i GetCceNodePoolDataVolumeArgs) ToGetCceNodePoolDataVolumeOutputWithContext(ctx context.Context) GetCceNodePoolDataVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodePoolDataVolumeOutput)
}

// GetCceNodePoolDataVolumeArrayInput is an input type that accepts GetCceNodePoolDataVolumeArray and GetCceNodePoolDataVolumeArrayOutput values.
// You can construct a concrete instance of `GetCceNodePoolDataVolumeArrayInput` via:
//
//	GetCceNodePoolDataVolumeArray{ GetCceNodePoolDataVolumeArgs{...} }
type GetCceNodePoolDataVolumeArrayInput interface {
	pulumi.Input

	ToGetCceNodePoolDataVolumeArrayOutput() GetCceNodePoolDataVolumeArrayOutput
	ToGetCceNodePoolDataVolumeArrayOutputWithContext(context.Context) GetCceNodePoolDataVolumeArrayOutput
}

type GetCceNodePoolDataVolumeArray []GetCceNodePoolDataVolumeInput

func (GetCceNodePoolDataVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodePoolDataVolume)(nil)).Elem()
}

func (i GetCceNodePoolDataVolumeArray) ToGetCceNodePoolDataVolumeArrayOutput() GetCceNodePoolDataVolumeArrayOutput {
	return i.ToGetCceNodePoolDataVolumeArrayOutputWithContext(context.Background())
}

func (i GetCceNodePoolDataVolumeArray) ToGetCceNodePoolDataVolumeArrayOutputWithContext(ctx context.Context) GetCceNodePoolDataVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodePoolDataVolumeArrayOutput)
}

type GetCceNodePoolDataVolumeOutput struct{ *pulumi.OutputState }

func (GetCceNodePoolDataVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodePoolDataVolume)(nil)).Elem()
}

func (o GetCceNodePoolDataVolumeOutput) ToGetCceNodePoolDataVolumeOutput() GetCceNodePoolDataVolumeOutput {
	return o
}

func (o GetCceNodePoolDataVolumeOutput) ToGetCceNodePoolDataVolumeOutputWithContext(ctx context.Context) GetCceNodePoolDataVolumeOutput {
	return o
}

func (o GetCceNodePoolDataVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCceNodePoolDataVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

func (o GetCceNodePoolDataVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceNodePoolDataVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetCceNodePoolDataVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodePoolDataVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetCceNodePoolDataVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodePoolDataVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodePoolDataVolume)(nil)).Elem()
}

func (o GetCceNodePoolDataVolumeArrayOutput) ToGetCceNodePoolDataVolumeArrayOutput() GetCceNodePoolDataVolumeArrayOutput {
	return o
}

func (o GetCceNodePoolDataVolumeArrayOutput) ToGetCceNodePoolDataVolumeArrayOutputWithContext(ctx context.Context) GetCceNodePoolDataVolumeArrayOutput {
	return o
}

func (o GetCceNodePoolDataVolumeArrayOutput) Index(i pulumi.IntInput) GetCceNodePoolDataVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodePoolDataVolume {
		return vs[0].([]GetCceNodePoolDataVolume)[vs[1].(int)]
	}).(GetCceNodePoolDataVolumeOutput)
}

type GetCceNodePoolHostnameConfig struct {
	Type string `pulumi:"type"`
}

// GetCceNodePoolHostnameConfigInput is an input type that accepts GetCceNodePoolHostnameConfigArgs and GetCceNodePoolHostnameConfigOutput values.
// You can construct a concrete instance of `GetCceNodePoolHostnameConfigInput` via:
//
//	GetCceNodePoolHostnameConfigArgs{...}
type GetCceNodePoolHostnameConfigInput interface {
	pulumi.Input

	ToGetCceNodePoolHostnameConfigOutput() GetCceNodePoolHostnameConfigOutput
	ToGetCceNodePoolHostnameConfigOutputWithContext(context.Context) GetCceNodePoolHostnameConfigOutput
}

type GetCceNodePoolHostnameConfigArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCceNodePoolHostnameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodePoolHostnameConfig)(nil)).Elem()
}

func (i GetCceNodePoolHostnameConfigArgs) ToGetCceNodePoolHostnameConfigOutput() GetCceNodePoolHostnameConfigOutput {
	return i.ToGetCceNodePoolHostnameConfigOutputWithContext(context.Background())
}

func (i GetCceNodePoolHostnameConfigArgs) ToGetCceNodePoolHostnameConfigOutputWithContext(ctx context.Context) GetCceNodePoolHostnameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodePoolHostnameConfigOutput)
}

// GetCceNodePoolHostnameConfigArrayInput is an input type that accepts GetCceNodePoolHostnameConfigArray and GetCceNodePoolHostnameConfigArrayOutput values.
// You can construct a concrete instance of `GetCceNodePoolHostnameConfigArrayInput` via:
//
//	GetCceNodePoolHostnameConfigArray{ GetCceNodePoolHostnameConfigArgs{...} }
type GetCceNodePoolHostnameConfigArrayInput interface {
	pulumi.Input

	ToGetCceNodePoolHostnameConfigArrayOutput() GetCceNodePoolHostnameConfigArrayOutput
	ToGetCceNodePoolHostnameConfigArrayOutputWithContext(context.Context) GetCceNodePoolHostnameConfigArrayOutput
}

type GetCceNodePoolHostnameConfigArray []GetCceNodePoolHostnameConfigInput

func (GetCceNodePoolHostnameConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodePoolHostnameConfig)(nil)).Elem()
}

func (i GetCceNodePoolHostnameConfigArray) ToGetCceNodePoolHostnameConfigArrayOutput() GetCceNodePoolHostnameConfigArrayOutput {
	return i.ToGetCceNodePoolHostnameConfigArrayOutputWithContext(context.Background())
}

func (i GetCceNodePoolHostnameConfigArray) ToGetCceNodePoolHostnameConfigArrayOutputWithContext(ctx context.Context) GetCceNodePoolHostnameConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodePoolHostnameConfigArrayOutput)
}

type GetCceNodePoolHostnameConfigOutput struct{ *pulumi.OutputState }

func (GetCceNodePoolHostnameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodePoolHostnameConfig)(nil)).Elem()
}

func (o GetCceNodePoolHostnameConfigOutput) ToGetCceNodePoolHostnameConfigOutput() GetCceNodePoolHostnameConfigOutput {
	return o
}

func (o GetCceNodePoolHostnameConfigOutput) ToGetCceNodePoolHostnameConfigOutputWithContext(ctx context.Context) GetCceNodePoolHostnameConfigOutput {
	return o
}

func (o GetCceNodePoolHostnameConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodePoolHostnameConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetCceNodePoolHostnameConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodePoolHostnameConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodePoolHostnameConfig)(nil)).Elem()
}

func (o GetCceNodePoolHostnameConfigArrayOutput) ToGetCceNodePoolHostnameConfigArrayOutput() GetCceNodePoolHostnameConfigArrayOutput {
	return o
}

func (o GetCceNodePoolHostnameConfigArrayOutput) ToGetCceNodePoolHostnameConfigArrayOutputWithContext(ctx context.Context) GetCceNodePoolHostnameConfigArrayOutput {
	return o
}

func (o GetCceNodePoolHostnameConfigArrayOutput) Index(i pulumi.IntInput) GetCceNodePoolHostnameConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodePoolHostnameConfig {
		return vs[0].([]GetCceNodePoolHostnameConfig)[vs[1].(int)]
	}).(GetCceNodePoolHostnameConfigOutput)
}

type GetCceNodePoolRootVolume struct {
	ExtendParams map[string]string `pulumi:"extendParams"`
	Size         int               `pulumi:"size"`
	Volumetype   string            `pulumi:"volumetype"`
}

// GetCceNodePoolRootVolumeInput is an input type that accepts GetCceNodePoolRootVolumeArgs and GetCceNodePoolRootVolumeOutput values.
// You can construct a concrete instance of `GetCceNodePoolRootVolumeInput` via:
//
//	GetCceNodePoolRootVolumeArgs{...}
type GetCceNodePoolRootVolumeInput interface {
	pulumi.Input

	ToGetCceNodePoolRootVolumeOutput() GetCceNodePoolRootVolumeOutput
	ToGetCceNodePoolRootVolumeOutputWithContext(context.Context) GetCceNodePoolRootVolumeOutput
}

type GetCceNodePoolRootVolumeArgs struct {
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	Size         pulumi.IntInput       `pulumi:"size"`
	Volumetype   pulumi.StringInput    `pulumi:"volumetype"`
}

func (GetCceNodePoolRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodePoolRootVolume)(nil)).Elem()
}

func (i GetCceNodePoolRootVolumeArgs) ToGetCceNodePoolRootVolumeOutput() GetCceNodePoolRootVolumeOutput {
	return i.ToGetCceNodePoolRootVolumeOutputWithContext(context.Background())
}

func (i GetCceNodePoolRootVolumeArgs) ToGetCceNodePoolRootVolumeOutputWithContext(ctx context.Context) GetCceNodePoolRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodePoolRootVolumeOutput)
}

// GetCceNodePoolRootVolumeArrayInput is an input type that accepts GetCceNodePoolRootVolumeArray and GetCceNodePoolRootVolumeArrayOutput values.
// You can construct a concrete instance of `GetCceNodePoolRootVolumeArrayInput` via:
//
//	GetCceNodePoolRootVolumeArray{ GetCceNodePoolRootVolumeArgs{...} }
type GetCceNodePoolRootVolumeArrayInput interface {
	pulumi.Input

	ToGetCceNodePoolRootVolumeArrayOutput() GetCceNodePoolRootVolumeArrayOutput
	ToGetCceNodePoolRootVolumeArrayOutputWithContext(context.Context) GetCceNodePoolRootVolumeArrayOutput
}

type GetCceNodePoolRootVolumeArray []GetCceNodePoolRootVolumeInput

func (GetCceNodePoolRootVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodePoolRootVolume)(nil)).Elem()
}

func (i GetCceNodePoolRootVolumeArray) ToGetCceNodePoolRootVolumeArrayOutput() GetCceNodePoolRootVolumeArrayOutput {
	return i.ToGetCceNodePoolRootVolumeArrayOutputWithContext(context.Background())
}

func (i GetCceNodePoolRootVolumeArray) ToGetCceNodePoolRootVolumeArrayOutputWithContext(ctx context.Context) GetCceNodePoolRootVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodePoolRootVolumeArrayOutput)
}

type GetCceNodePoolRootVolumeOutput struct{ *pulumi.OutputState }

func (GetCceNodePoolRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodePoolRootVolume)(nil)).Elem()
}

func (o GetCceNodePoolRootVolumeOutput) ToGetCceNodePoolRootVolumeOutput() GetCceNodePoolRootVolumeOutput {
	return o
}

func (o GetCceNodePoolRootVolumeOutput) ToGetCceNodePoolRootVolumeOutputWithContext(ctx context.Context) GetCceNodePoolRootVolumeOutput {
	return o
}

func (o GetCceNodePoolRootVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCceNodePoolRootVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

func (o GetCceNodePoolRootVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceNodePoolRootVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetCceNodePoolRootVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodePoolRootVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetCceNodePoolRootVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodePoolRootVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodePoolRootVolume)(nil)).Elem()
}

func (o GetCceNodePoolRootVolumeArrayOutput) ToGetCceNodePoolRootVolumeArrayOutput() GetCceNodePoolRootVolumeArrayOutput {
	return o
}

func (o GetCceNodePoolRootVolumeArrayOutput) ToGetCceNodePoolRootVolumeArrayOutputWithContext(ctx context.Context) GetCceNodePoolRootVolumeArrayOutput {
	return o
}

func (o GetCceNodePoolRootVolumeArrayOutput) Index(i pulumi.IntInput) GetCceNodePoolRootVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodePoolRootVolume {
		return vs[0].([]GetCceNodePoolRootVolume)[vs[1].(int)]
	}).(GetCceNodePoolRootVolumeOutput)
}

type GetCceNodeRootVolume struct {
	ExtendParams map[string]string `pulumi:"extendParams"`
	Size         int               `pulumi:"size"`
	Volumetype   string            `pulumi:"volumetype"`
}

// GetCceNodeRootVolumeInput is an input type that accepts GetCceNodeRootVolumeArgs and GetCceNodeRootVolumeOutput values.
// You can construct a concrete instance of `GetCceNodeRootVolumeInput` via:
//
//	GetCceNodeRootVolumeArgs{...}
type GetCceNodeRootVolumeInput interface {
	pulumi.Input

	ToGetCceNodeRootVolumeOutput() GetCceNodeRootVolumeOutput
	ToGetCceNodeRootVolumeOutputWithContext(context.Context) GetCceNodeRootVolumeOutput
}

type GetCceNodeRootVolumeArgs struct {
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	Size         pulumi.IntInput       `pulumi:"size"`
	Volumetype   pulumi.StringInput    `pulumi:"volumetype"`
}

func (GetCceNodeRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodeRootVolume)(nil)).Elem()
}

func (i GetCceNodeRootVolumeArgs) ToGetCceNodeRootVolumeOutput() GetCceNodeRootVolumeOutput {
	return i.ToGetCceNodeRootVolumeOutputWithContext(context.Background())
}

func (i GetCceNodeRootVolumeArgs) ToGetCceNodeRootVolumeOutputWithContext(ctx context.Context) GetCceNodeRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodeRootVolumeOutput)
}

// GetCceNodeRootVolumeArrayInput is an input type that accepts GetCceNodeRootVolumeArray and GetCceNodeRootVolumeArrayOutput values.
// You can construct a concrete instance of `GetCceNodeRootVolumeArrayInput` via:
//
//	GetCceNodeRootVolumeArray{ GetCceNodeRootVolumeArgs{...} }
type GetCceNodeRootVolumeArrayInput interface {
	pulumi.Input

	ToGetCceNodeRootVolumeArrayOutput() GetCceNodeRootVolumeArrayOutput
	ToGetCceNodeRootVolumeArrayOutputWithContext(context.Context) GetCceNodeRootVolumeArrayOutput
}

type GetCceNodeRootVolumeArray []GetCceNodeRootVolumeInput

func (GetCceNodeRootVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodeRootVolume)(nil)).Elem()
}

func (i GetCceNodeRootVolumeArray) ToGetCceNodeRootVolumeArrayOutput() GetCceNodeRootVolumeArrayOutput {
	return i.ToGetCceNodeRootVolumeArrayOutputWithContext(context.Background())
}

func (i GetCceNodeRootVolumeArray) ToGetCceNodeRootVolumeArrayOutputWithContext(ctx context.Context) GetCceNodeRootVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodeRootVolumeArrayOutput)
}

type GetCceNodeRootVolumeOutput struct{ *pulumi.OutputState }

func (GetCceNodeRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodeRootVolume)(nil)).Elem()
}

func (o GetCceNodeRootVolumeOutput) ToGetCceNodeRootVolumeOutput() GetCceNodeRootVolumeOutput {
	return o
}

func (o GetCceNodeRootVolumeOutput) ToGetCceNodeRootVolumeOutputWithContext(ctx context.Context) GetCceNodeRootVolumeOutput {
	return o
}

func (o GetCceNodeRootVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCceNodeRootVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

func (o GetCceNodeRootVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceNodeRootVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetCceNodeRootVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodeRootVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetCceNodeRootVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodeRootVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodeRootVolume)(nil)).Elem()
}

func (o GetCceNodeRootVolumeArrayOutput) ToGetCceNodeRootVolumeArrayOutput() GetCceNodeRootVolumeArrayOutput {
	return o
}

func (o GetCceNodeRootVolumeArrayOutput) ToGetCceNodeRootVolumeArrayOutputWithContext(ctx context.Context) GetCceNodeRootVolumeArrayOutput {
	return o
}

func (o GetCceNodeRootVolumeArrayOutput) Index(i pulumi.IntInput) GetCceNodeRootVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodeRootVolume {
		return vs[0].([]GetCceNodeRootVolume)[vs[1].(int)]
	}).(GetCceNodeRootVolumeOutput)
}

type GetCceNodesNode struct {
	AvailabilityZone    string                          `pulumi:"availabilityZone"`
	BillingMode         int                             `pulumi:"billingMode"`
	DataVolumes         []GetCceNodesNodeDataVolume     `pulumi:"dataVolumes"`
	EcsGroupId          string                          `pulumi:"ecsGroupId"`
	EnterpriseProjectId string                          `pulumi:"enterpriseProjectId"`
	FlavorId            string                          `pulumi:"flavorId"`
	HostnameConfigs     []GetCceNodesNodeHostnameConfig `pulumi:"hostnameConfigs"`
	Id                  string                          `pulumi:"id"`
	KeyPair             string                          `pulumi:"keyPair"`
	Name                string                          `pulumi:"name"`
	Os                  string                          `pulumi:"os"`
	PrivateIp           string                          `pulumi:"privateIp"`
	PublicIp            string                          `pulumi:"publicIp"`
	RootVolumes         []GetCceNodesNodeRootVolume     `pulumi:"rootVolumes"`
	ServerId            string                          `pulumi:"serverId"`
	Status              string                          `pulumi:"status"`
	SubnetId            string                          `pulumi:"subnetId"`
	Tags                map[string]string               `pulumi:"tags"`
}

// GetCceNodesNodeInput is an input type that accepts GetCceNodesNodeArgs and GetCceNodesNodeOutput values.
// You can construct a concrete instance of `GetCceNodesNodeInput` via:
//
//	GetCceNodesNodeArgs{...}
type GetCceNodesNodeInput interface {
	pulumi.Input

	ToGetCceNodesNodeOutput() GetCceNodesNodeOutput
	ToGetCceNodesNodeOutputWithContext(context.Context) GetCceNodesNodeOutput
}

type GetCceNodesNodeArgs struct {
	AvailabilityZone    pulumi.StringInput                      `pulumi:"availabilityZone"`
	BillingMode         pulumi.IntInput                         `pulumi:"billingMode"`
	DataVolumes         GetCceNodesNodeDataVolumeArrayInput     `pulumi:"dataVolumes"`
	EcsGroupId          pulumi.StringInput                      `pulumi:"ecsGroupId"`
	EnterpriseProjectId pulumi.StringInput                      `pulumi:"enterpriseProjectId"`
	FlavorId            pulumi.StringInput                      `pulumi:"flavorId"`
	HostnameConfigs     GetCceNodesNodeHostnameConfigArrayInput `pulumi:"hostnameConfigs"`
	Id                  pulumi.StringInput                      `pulumi:"id"`
	KeyPair             pulumi.StringInput                      `pulumi:"keyPair"`
	Name                pulumi.StringInput                      `pulumi:"name"`
	Os                  pulumi.StringInput                      `pulumi:"os"`
	PrivateIp           pulumi.StringInput                      `pulumi:"privateIp"`
	PublicIp            pulumi.StringInput                      `pulumi:"publicIp"`
	RootVolumes         GetCceNodesNodeRootVolumeArrayInput     `pulumi:"rootVolumes"`
	ServerId            pulumi.StringInput                      `pulumi:"serverId"`
	Status              pulumi.StringInput                      `pulumi:"status"`
	SubnetId            pulumi.StringInput                      `pulumi:"subnetId"`
	Tags                pulumi.StringMapInput                   `pulumi:"tags"`
}

func (GetCceNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNode)(nil)).Elem()
}

func (i GetCceNodesNodeArgs) ToGetCceNodesNodeOutput() GetCceNodesNodeOutput {
	return i.ToGetCceNodesNodeOutputWithContext(context.Background())
}

func (i GetCceNodesNodeArgs) ToGetCceNodesNodeOutputWithContext(ctx context.Context) GetCceNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeOutput)
}

// GetCceNodesNodeArrayInput is an input type that accepts GetCceNodesNodeArray and GetCceNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetCceNodesNodeArrayInput` via:
//
//	GetCceNodesNodeArray{ GetCceNodesNodeArgs{...} }
type GetCceNodesNodeArrayInput interface {
	pulumi.Input

	ToGetCceNodesNodeArrayOutput() GetCceNodesNodeArrayOutput
	ToGetCceNodesNodeArrayOutputWithContext(context.Context) GetCceNodesNodeArrayOutput
}

type GetCceNodesNodeArray []GetCceNodesNodeInput

func (GetCceNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNode)(nil)).Elem()
}

func (i GetCceNodesNodeArray) ToGetCceNodesNodeArrayOutput() GetCceNodesNodeArrayOutput {
	return i.ToGetCceNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetCceNodesNodeArray) ToGetCceNodesNodeArrayOutputWithContext(ctx context.Context) GetCceNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeArrayOutput)
}

type GetCceNodesNodeOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNode)(nil)).Elem()
}

func (o GetCceNodesNodeOutput) ToGetCceNodesNodeOutput() GetCceNodesNodeOutput {
	return o
}

func (o GetCceNodesNodeOutput) ToGetCceNodesNodeOutputWithContext(ctx context.Context) GetCceNodesNodeOutput {
	return o
}

func (o GetCceNodesNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceNodesNode) int { return v.BillingMode }).(pulumi.IntOutput)
}

func (o GetCceNodesNodeOutput) DataVolumes() GetCceNodesNodeDataVolumeArrayOutput {
	return o.ApplyT(func(v GetCceNodesNode) []GetCceNodesNodeDataVolume { return v.DataVolumes }).(GetCceNodesNodeDataVolumeArrayOutput)
}

func (o GetCceNodesNodeOutput) EcsGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.EcsGroupId }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.FlavorId }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) HostnameConfigs() GetCceNodesNodeHostnameConfigArrayOutput {
	return o.ApplyT(func(v GetCceNodesNode) []GetCceNodesNodeHostnameConfig { return v.HostnameConfigs }).(GetCceNodesNodeHostnameConfigArrayOutput)
}

func (o GetCceNodesNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) KeyPair() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.KeyPair }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.Os }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) RootVolumes() GetCceNodesNodeRootVolumeArrayOutput {
	return o.ApplyT(func(v GetCceNodesNode) []GetCceNodesNodeRootVolume { return v.RootVolumes }).(GetCceNodesNodeRootVolumeArrayOutput)
}

func (o GetCceNodesNodeOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNode) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetCceNodesNodeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCceNodesNode) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetCceNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNode)(nil)).Elem()
}

func (o GetCceNodesNodeArrayOutput) ToGetCceNodesNodeArrayOutput() GetCceNodesNodeArrayOutput {
	return o
}

func (o GetCceNodesNodeArrayOutput) ToGetCceNodesNodeArrayOutputWithContext(ctx context.Context) GetCceNodesNodeArrayOutput {
	return o
}

func (o GetCceNodesNodeArrayOutput) Index(i pulumi.IntInput) GetCceNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodesNode {
		return vs[0].([]GetCceNodesNode)[vs[1].(int)]
	}).(GetCceNodesNodeOutput)
}

type GetCceNodesNodeDataVolume struct {
	ExtendParams map[string]string `pulumi:"extendParams"`
	Size         int               `pulumi:"size"`
	Volumetype   string            `pulumi:"volumetype"`
}

// GetCceNodesNodeDataVolumeInput is an input type that accepts GetCceNodesNodeDataVolumeArgs and GetCceNodesNodeDataVolumeOutput values.
// You can construct a concrete instance of `GetCceNodesNodeDataVolumeInput` via:
//
//	GetCceNodesNodeDataVolumeArgs{...}
type GetCceNodesNodeDataVolumeInput interface {
	pulumi.Input

	ToGetCceNodesNodeDataVolumeOutput() GetCceNodesNodeDataVolumeOutput
	ToGetCceNodesNodeDataVolumeOutputWithContext(context.Context) GetCceNodesNodeDataVolumeOutput
}

type GetCceNodesNodeDataVolumeArgs struct {
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	Size         pulumi.IntInput       `pulumi:"size"`
	Volumetype   pulumi.StringInput    `pulumi:"volumetype"`
}

func (GetCceNodesNodeDataVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNodeDataVolume)(nil)).Elem()
}

func (i GetCceNodesNodeDataVolumeArgs) ToGetCceNodesNodeDataVolumeOutput() GetCceNodesNodeDataVolumeOutput {
	return i.ToGetCceNodesNodeDataVolumeOutputWithContext(context.Background())
}

func (i GetCceNodesNodeDataVolumeArgs) ToGetCceNodesNodeDataVolumeOutputWithContext(ctx context.Context) GetCceNodesNodeDataVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeDataVolumeOutput)
}

// GetCceNodesNodeDataVolumeArrayInput is an input type that accepts GetCceNodesNodeDataVolumeArray and GetCceNodesNodeDataVolumeArrayOutput values.
// You can construct a concrete instance of `GetCceNodesNodeDataVolumeArrayInput` via:
//
//	GetCceNodesNodeDataVolumeArray{ GetCceNodesNodeDataVolumeArgs{...} }
type GetCceNodesNodeDataVolumeArrayInput interface {
	pulumi.Input

	ToGetCceNodesNodeDataVolumeArrayOutput() GetCceNodesNodeDataVolumeArrayOutput
	ToGetCceNodesNodeDataVolumeArrayOutputWithContext(context.Context) GetCceNodesNodeDataVolumeArrayOutput
}

type GetCceNodesNodeDataVolumeArray []GetCceNodesNodeDataVolumeInput

func (GetCceNodesNodeDataVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNodeDataVolume)(nil)).Elem()
}

func (i GetCceNodesNodeDataVolumeArray) ToGetCceNodesNodeDataVolumeArrayOutput() GetCceNodesNodeDataVolumeArrayOutput {
	return i.ToGetCceNodesNodeDataVolumeArrayOutputWithContext(context.Background())
}

func (i GetCceNodesNodeDataVolumeArray) ToGetCceNodesNodeDataVolumeArrayOutputWithContext(ctx context.Context) GetCceNodesNodeDataVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeDataVolumeArrayOutput)
}

type GetCceNodesNodeDataVolumeOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeDataVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNodeDataVolume)(nil)).Elem()
}

func (o GetCceNodesNodeDataVolumeOutput) ToGetCceNodesNodeDataVolumeOutput() GetCceNodesNodeDataVolumeOutput {
	return o
}

func (o GetCceNodesNodeDataVolumeOutput) ToGetCceNodesNodeDataVolumeOutputWithContext(ctx context.Context) GetCceNodesNodeDataVolumeOutput {
	return o
}

func (o GetCceNodesNodeDataVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCceNodesNodeDataVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

func (o GetCceNodesNodeDataVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceNodesNodeDataVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetCceNodesNodeDataVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNodeDataVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetCceNodesNodeDataVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeDataVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNodeDataVolume)(nil)).Elem()
}

func (o GetCceNodesNodeDataVolumeArrayOutput) ToGetCceNodesNodeDataVolumeArrayOutput() GetCceNodesNodeDataVolumeArrayOutput {
	return o
}

func (o GetCceNodesNodeDataVolumeArrayOutput) ToGetCceNodesNodeDataVolumeArrayOutputWithContext(ctx context.Context) GetCceNodesNodeDataVolumeArrayOutput {
	return o
}

func (o GetCceNodesNodeDataVolumeArrayOutput) Index(i pulumi.IntInput) GetCceNodesNodeDataVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodesNodeDataVolume {
		return vs[0].([]GetCceNodesNodeDataVolume)[vs[1].(int)]
	}).(GetCceNodesNodeDataVolumeOutput)
}

type GetCceNodesNodeHostnameConfig struct {
	Type string `pulumi:"type"`
}

// GetCceNodesNodeHostnameConfigInput is an input type that accepts GetCceNodesNodeHostnameConfigArgs and GetCceNodesNodeHostnameConfigOutput values.
// You can construct a concrete instance of `GetCceNodesNodeHostnameConfigInput` via:
//
//	GetCceNodesNodeHostnameConfigArgs{...}
type GetCceNodesNodeHostnameConfigInput interface {
	pulumi.Input

	ToGetCceNodesNodeHostnameConfigOutput() GetCceNodesNodeHostnameConfigOutput
	ToGetCceNodesNodeHostnameConfigOutputWithContext(context.Context) GetCceNodesNodeHostnameConfigOutput
}

type GetCceNodesNodeHostnameConfigArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCceNodesNodeHostnameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNodeHostnameConfig)(nil)).Elem()
}

func (i GetCceNodesNodeHostnameConfigArgs) ToGetCceNodesNodeHostnameConfigOutput() GetCceNodesNodeHostnameConfigOutput {
	return i.ToGetCceNodesNodeHostnameConfigOutputWithContext(context.Background())
}

func (i GetCceNodesNodeHostnameConfigArgs) ToGetCceNodesNodeHostnameConfigOutputWithContext(ctx context.Context) GetCceNodesNodeHostnameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeHostnameConfigOutput)
}

// GetCceNodesNodeHostnameConfigArrayInput is an input type that accepts GetCceNodesNodeHostnameConfigArray and GetCceNodesNodeHostnameConfigArrayOutput values.
// You can construct a concrete instance of `GetCceNodesNodeHostnameConfigArrayInput` via:
//
//	GetCceNodesNodeHostnameConfigArray{ GetCceNodesNodeHostnameConfigArgs{...} }
type GetCceNodesNodeHostnameConfigArrayInput interface {
	pulumi.Input

	ToGetCceNodesNodeHostnameConfigArrayOutput() GetCceNodesNodeHostnameConfigArrayOutput
	ToGetCceNodesNodeHostnameConfigArrayOutputWithContext(context.Context) GetCceNodesNodeHostnameConfigArrayOutput
}

type GetCceNodesNodeHostnameConfigArray []GetCceNodesNodeHostnameConfigInput

func (GetCceNodesNodeHostnameConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNodeHostnameConfig)(nil)).Elem()
}

func (i GetCceNodesNodeHostnameConfigArray) ToGetCceNodesNodeHostnameConfigArrayOutput() GetCceNodesNodeHostnameConfigArrayOutput {
	return i.ToGetCceNodesNodeHostnameConfigArrayOutputWithContext(context.Background())
}

func (i GetCceNodesNodeHostnameConfigArray) ToGetCceNodesNodeHostnameConfigArrayOutputWithContext(ctx context.Context) GetCceNodesNodeHostnameConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeHostnameConfigArrayOutput)
}

type GetCceNodesNodeHostnameConfigOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeHostnameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNodeHostnameConfig)(nil)).Elem()
}

func (o GetCceNodesNodeHostnameConfigOutput) ToGetCceNodesNodeHostnameConfigOutput() GetCceNodesNodeHostnameConfigOutput {
	return o
}

func (o GetCceNodesNodeHostnameConfigOutput) ToGetCceNodesNodeHostnameConfigOutputWithContext(ctx context.Context) GetCceNodesNodeHostnameConfigOutput {
	return o
}

func (o GetCceNodesNodeHostnameConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNodeHostnameConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetCceNodesNodeHostnameConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeHostnameConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNodeHostnameConfig)(nil)).Elem()
}

func (o GetCceNodesNodeHostnameConfigArrayOutput) ToGetCceNodesNodeHostnameConfigArrayOutput() GetCceNodesNodeHostnameConfigArrayOutput {
	return o
}

func (o GetCceNodesNodeHostnameConfigArrayOutput) ToGetCceNodesNodeHostnameConfigArrayOutputWithContext(ctx context.Context) GetCceNodesNodeHostnameConfigArrayOutput {
	return o
}

func (o GetCceNodesNodeHostnameConfigArrayOutput) Index(i pulumi.IntInput) GetCceNodesNodeHostnameConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodesNodeHostnameConfig {
		return vs[0].([]GetCceNodesNodeHostnameConfig)[vs[1].(int)]
	}).(GetCceNodesNodeHostnameConfigOutput)
}

type GetCceNodesNodeRootVolume struct {
	ExtendParams map[string]string `pulumi:"extendParams"`
	Size         int               `pulumi:"size"`
	Volumetype   string            `pulumi:"volumetype"`
}

// GetCceNodesNodeRootVolumeInput is an input type that accepts GetCceNodesNodeRootVolumeArgs and GetCceNodesNodeRootVolumeOutput values.
// You can construct a concrete instance of `GetCceNodesNodeRootVolumeInput` via:
//
//	GetCceNodesNodeRootVolumeArgs{...}
type GetCceNodesNodeRootVolumeInput interface {
	pulumi.Input

	ToGetCceNodesNodeRootVolumeOutput() GetCceNodesNodeRootVolumeOutput
	ToGetCceNodesNodeRootVolumeOutputWithContext(context.Context) GetCceNodesNodeRootVolumeOutput
}

type GetCceNodesNodeRootVolumeArgs struct {
	ExtendParams pulumi.StringMapInput `pulumi:"extendParams"`
	Size         pulumi.IntInput       `pulumi:"size"`
	Volumetype   pulumi.StringInput    `pulumi:"volumetype"`
}

func (GetCceNodesNodeRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNodeRootVolume)(nil)).Elem()
}

func (i GetCceNodesNodeRootVolumeArgs) ToGetCceNodesNodeRootVolumeOutput() GetCceNodesNodeRootVolumeOutput {
	return i.ToGetCceNodesNodeRootVolumeOutputWithContext(context.Background())
}

func (i GetCceNodesNodeRootVolumeArgs) ToGetCceNodesNodeRootVolumeOutputWithContext(ctx context.Context) GetCceNodesNodeRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeRootVolumeOutput)
}

// GetCceNodesNodeRootVolumeArrayInput is an input type that accepts GetCceNodesNodeRootVolumeArray and GetCceNodesNodeRootVolumeArrayOutput values.
// You can construct a concrete instance of `GetCceNodesNodeRootVolumeArrayInput` via:
//
//	GetCceNodesNodeRootVolumeArray{ GetCceNodesNodeRootVolumeArgs{...} }
type GetCceNodesNodeRootVolumeArrayInput interface {
	pulumi.Input

	ToGetCceNodesNodeRootVolumeArrayOutput() GetCceNodesNodeRootVolumeArrayOutput
	ToGetCceNodesNodeRootVolumeArrayOutputWithContext(context.Context) GetCceNodesNodeRootVolumeArrayOutput
}

type GetCceNodesNodeRootVolumeArray []GetCceNodesNodeRootVolumeInput

func (GetCceNodesNodeRootVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNodeRootVolume)(nil)).Elem()
}

func (i GetCceNodesNodeRootVolumeArray) ToGetCceNodesNodeRootVolumeArrayOutput() GetCceNodesNodeRootVolumeArrayOutput {
	return i.ToGetCceNodesNodeRootVolumeArrayOutputWithContext(context.Background())
}

func (i GetCceNodesNodeRootVolumeArray) ToGetCceNodesNodeRootVolumeArrayOutputWithContext(ctx context.Context) GetCceNodesNodeRootVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCceNodesNodeRootVolumeArrayOutput)
}

type GetCceNodesNodeRootVolumeOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceNodesNodeRootVolume)(nil)).Elem()
}

func (o GetCceNodesNodeRootVolumeOutput) ToGetCceNodesNodeRootVolumeOutput() GetCceNodesNodeRootVolumeOutput {
	return o
}

func (o GetCceNodesNodeRootVolumeOutput) ToGetCceNodesNodeRootVolumeOutputWithContext(ctx context.Context) GetCceNodesNodeRootVolumeOutput {
	return o
}

func (o GetCceNodesNodeRootVolumeOutput) ExtendParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCceNodesNodeRootVolume) map[string]string { return v.ExtendParams }).(pulumi.StringMapOutput)
}

func (o GetCceNodesNodeRootVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetCceNodesNodeRootVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetCceNodesNodeRootVolumeOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceNodesNodeRootVolume) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetCceNodesNodeRootVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetCceNodesNodeRootVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCceNodesNodeRootVolume)(nil)).Elem()
}

func (o GetCceNodesNodeRootVolumeArrayOutput) ToGetCceNodesNodeRootVolumeArrayOutput() GetCceNodesNodeRootVolumeArrayOutput {
	return o
}

func (o GetCceNodesNodeRootVolumeArrayOutput) ToGetCceNodesNodeRootVolumeArrayOutputWithContext(ctx context.Context) GetCceNodesNodeRootVolumeArrayOutput {
	return o
}

func (o GetCceNodesNodeRootVolumeArrayOutput) Index(i pulumi.IntInput) GetCceNodesNodeRootVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCceNodesNodeRootVolume {
		return vs[0].([]GetCceNodesNodeRootVolume)[vs[1].(int)]
	}).(GetCceNodesNodeRootVolumeOutput)
}

type GetCdmFlavorsFlavor struct {
	Cpu    string `pulumi:"cpu"`
	Id     string `pulumi:"id"`
	Memory string `pulumi:"memory"`
	Name   string `pulumi:"name"`
}

// GetCdmFlavorsFlavorInput is an input type that accepts GetCdmFlavorsFlavorArgs and GetCdmFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetCdmFlavorsFlavorInput` via:
//
//	GetCdmFlavorsFlavorArgs{...}
type GetCdmFlavorsFlavorInput interface {
	pulumi.Input

	ToGetCdmFlavorsFlavorOutput() GetCdmFlavorsFlavorOutput
	ToGetCdmFlavorsFlavorOutputWithContext(context.Context) GetCdmFlavorsFlavorOutput
}

type GetCdmFlavorsFlavorArgs struct {
	Cpu    pulumi.StringInput `pulumi:"cpu"`
	Id     pulumi.StringInput `pulumi:"id"`
	Memory pulumi.StringInput `pulumi:"memory"`
	Name   pulumi.StringInput `pulumi:"name"`
}

func (GetCdmFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdmFlavorsFlavor)(nil)).Elem()
}

func (i GetCdmFlavorsFlavorArgs) ToGetCdmFlavorsFlavorOutput() GetCdmFlavorsFlavorOutput {
	return i.ToGetCdmFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetCdmFlavorsFlavorArgs) ToGetCdmFlavorsFlavorOutputWithContext(ctx context.Context) GetCdmFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdmFlavorsFlavorOutput)
}

// GetCdmFlavorsFlavorArrayInput is an input type that accepts GetCdmFlavorsFlavorArray and GetCdmFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetCdmFlavorsFlavorArrayInput` via:
//
//	GetCdmFlavorsFlavorArray{ GetCdmFlavorsFlavorArgs{...} }
type GetCdmFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetCdmFlavorsFlavorArrayOutput() GetCdmFlavorsFlavorArrayOutput
	ToGetCdmFlavorsFlavorArrayOutputWithContext(context.Context) GetCdmFlavorsFlavorArrayOutput
}

type GetCdmFlavorsFlavorArray []GetCdmFlavorsFlavorInput

func (GetCdmFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdmFlavorsFlavor)(nil)).Elem()
}

func (i GetCdmFlavorsFlavorArray) ToGetCdmFlavorsFlavorArrayOutput() GetCdmFlavorsFlavorArrayOutput {
	return i.ToGetCdmFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetCdmFlavorsFlavorArray) ToGetCdmFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCdmFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdmFlavorsFlavorArrayOutput)
}

type GetCdmFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetCdmFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdmFlavorsFlavor)(nil)).Elem()
}

func (o GetCdmFlavorsFlavorOutput) ToGetCdmFlavorsFlavorOutput() GetCdmFlavorsFlavorOutput {
	return o
}

func (o GetCdmFlavorsFlavorOutput) ToGetCdmFlavorsFlavorOutputWithContext(ctx context.Context) GetCdmFlavorsFlavorOutput {
	return o
}

func (o GetCdmFlavorsFlavorOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdmFlavorsFlavor) string { return v.Cpu }).(pulumi.StringOutput)
}

func (o GetCdmFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdmFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCdmFlavorsFlavorOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdmFlavorsFlavor) string { return v.Memory }).(pulumi.StringOutput)
}

func (o GetCdmFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdmFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

type GetCdmFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetCdmFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdmFlavorsFlavor)(nil)).Elem()
}

func (o GetCdmFlavorsFlavorArrayOutput) ToGetCdmFlavorsFlavorArrayOutput() GetCdmFlavorsFlavorArrayOutput {
	return o
}

func (o GetCdmFlavorsFlavorArrayOutput) ToGetCdmFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCdmFlavorsFlavorArrayOutput {
	return o
}

func (o GetCdmFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetCdmFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCdmFlavorsFlavor {
		return vs[0].([]GetCdmFlavorsFlavor)[vs[1].(int)]
	}).(GetCdmFlavorsFlavorOutput)
}

type GetComputeFlavorsFlavor struct {
	CpuCoreCount    int    `pulumi:"cpuCoreCount"`
	Generation      string `pulumi:"generation"`
	Id              string `pulumi:"id"`
	MemorySize      int    `pulumi:"memorySize"`
	PerformanceType string `pulumi:"performanceType"`
	StorageType     string `pulumi:"storageType"`
}

// GetComputeFlavorsFlavorInput is an input type that accepts GetComputeFlavorsFlavorArgs and GetComputeFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetComputeFlavorsFlavorInput` via:
//
//	GetComputeFlavorsFlavorArgs{...}
type GetComputeFlavorsFlavorInput interface {
	pulumi.Input

	ToGetComputeFlavorsFlavorOutput() GetComputeFlavorsFlavorOutput
	ToGetComputeFlavorsFlavorOutputWithContext(context.Context) GetComputeFlavorsFlavorOutput
}

type GetComputeFlavorsFlavorArgs struct {
	CpuCoreCount    pulumi.IntInput    `pulumi:"cpuCoreCount"`
	Generation      pulumi.StringInput `pulumi:"generation"`
	Id              pulumi.StringInput `pulumi:"id"`
	MemorySize      pulumi.IntInput    `pulumi:"memorySize"`
	PerformanceType pulumi.StringInput `pulumi:"performanceType"`
	StorageType     pulumi.StringInput `pulumi:"storageType"`
}

func (GetComputeFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeFlavorsFlavor)(nil)).Elem()
}

func (i GetComputeFlavorsFlavorArgs) ToGetComputeFlavorsFlavorOutput() GetComputeFlavorsFlavorOutput {
	return i.ToGetComputeFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetComputeFlavorsFlavorArgs) ToGetComputeFlavorsFlavorOutputWithContext(ctx context.Context) GetComputeFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeFlavorsFlavorOutput)
}

// GetComputeFlavorsFlavorArrayInput is an input type that accepts GetComputeFlavorsFlavorArray and GetComputeFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetComputeFlavorsFlavorArrayInput` via:
//
//	GetComputeFlavorsFlavorArray{ GetComputeFlavorsFlavorArgs{...} }
type GetComputeFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetComputeFlavorsFlavorArrayOutput() GetComputeFlavorsFlavorArrayOutput
	ToGetComputeFlavorsFlavorArrayOutputWithContext(context.Context) GetComputeFlavorsFlavorArrayOutput
}

type GetComputeFlavorsFlavorArray []GetComputeFlavorsFlavorInput

func (GetComputeFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeFlavorsFlavor)(nil)).Elem()
}

func (i GetComputeFlavorsFlavorArray) ToGetComputeFlavorsFlavorArrayOutput() GetComputeFlavorsFlavorArrayOutput {
	return i.ToGetComputeFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetComputeFlavorsFlavorArray) ToGetComputeFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetComputeFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeFlavorsFlavorArrayOutput)
}

type GetComputeFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetComputeFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeFlavorsFlavor)(nil)).Elem()
}

func (o GetComputeFlavorsFlavorOutput) ToGetComputeFlavorsFlavorOutput() GetComputeFlavorsFlavorOutput {
	return o
}

func (o GetComputeFlavorsFlavorOutput) ToGetComputeFlavorsFlavorOutputWithContext(ctx context.Context) GetComputeFlavorsFlavorOutput {
	return o
}

func (o GetComputeFlavorsFlavorOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeFlavorsFlavor) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

func (o GetComputeFlavorsFlavorOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeFlavorsFlavor) string { return v.Generation }).(pulumi.StringOutput)
}

func (o GetComputeFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComputeFlavorsFlavorOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeFlavorsFlavor) int { return v.MemorySize }).(pulumi.IntOutput)
}

func (o GetComputeFlavorsFlavorOutput) PerformanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeFlavorsFlavor) string { return v.PerformanceType }).(pulumi.StringOutput)
}

func (o GetComputeFlavorsFlavorOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeFlavorsFlavor) string { return v.StorageType }).(pulumi.StringOutput)
}

type GetComputeFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetComputeFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeFlavorsFlavor)(nil)).Elem()
}

func (o GetComputeFlavorsFlavorArrayOutput) ToGetComputeFlavorsFlavorArrayOutput() GetComputeFlavorsFlavorArrayOutput {
	return o
}

func (o GetComputeFlavorsFlavorArrayOutput) ToGetComputeFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetComputeFlavorsFlavorArrayOutput {
	return o
}

func (o GetComputeFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetComputeFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeFlavorsFlavor {
		return vs[0].([]GetComputeFlavorsFlavor)[vs[1].(int)]
	}).(GetComputeFlavorsFlavorOutput)
}

type GetComputeInstanceNetwork struct {
	FixedIpV4 string `pulumi:"fixedIpV4"`
	FixedIpV6 string `pulumi:"fixedIpV6"`
	Mac       string `pulumi:"mac"`
	Port      string `pulumi:"port"`
	Uuid      string `pulumi:"uuid"`
}

// GetComputeInstanceNetworkInput is an input type that accepts GetComputeInstanceNetworkArgs and GetComputeInstanceNetworkOutput values.
// You can construct a concrete instance of `GetComputeInstanceNetworkInput` via:
//
//	GetComputeInstanceNetworkArgs{...}
type GetComputeInstanceNetworkInput interface {
	pulumi.Input

	ToGetComputeInstanceNetworkOutput() GetComputeInstanceNetworkOutput
	ToGetComputeInstanceNetworkOutputWithContext(context.Context) GetComputeInstanceNetworkOutput
}

type GetComputeInstanceNetworkArgs struct {
	FixedIpV4 pulumi.StringInput `pulumi:"fixedIpV4"`
	FixedIpV6 pulumi.StringInput `pulumi:"fixedIpV6"`
	Mac       pulumi.StringInput `pulumi:"mac"`
	Port      pulumi.StringInput `pulumi:"port"`
	Uuid      pulumi.StringInput `pulumi:"uuid"`
}

func (GetComputeInstanceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceNetwork)(nil)).Elem()
}

func (i GetComputeInstanceNetworkArgs) ToGetComputeInstanceNetworkOutput() GetComputeInstanceNetworkOutput {
	return i.ToGetComputeInstanceNetworkOutputWithContext(context.Background())
}

func (i GetComputeInstanceNetworkArgs) ToGetComputeInstanceNetworkOutputWithContext(ctx context.Context) GetComputeInstanceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceNetworkOutput)
}

// GetComputeInstanceNetworkArrayInput is an input type that accepts GetComputeInstanceNetworkArray and GetComputeInstanceNetworkArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceNetworkArrayInput` via:
//
//	GetComputeInstanceNetworkArray{ GetComputeInstanceNetworkArgs{...} }
type GetComputeInstanceNetworkArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceNetworkArrayOutput() GetComputeInstanceNetworkArrayOutput
	ToGetComputeInstanceNetworkArrayOutputWithContext(context.Context) GetComputeInstanceNetworkArrayOutput
}

type GetComputeInstanceNetworkArray []GetComputeInstanceNetworkInput

func (GetComputeInstanceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceNetwork)(nil)).Elem()
}

func (i GetComputeInstanceNetworkArray) ToGetComputeInstanceNetworkArrayOutput() GetComputeInstanceNetworkArrayOutput {
	return i.ToGetComputeInstanceNetworkArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceNetworkArray) ToGetComputeInstanceNetworkArrayOutputWithContext(ctx context.Context) GetComputeInstanceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceNetworkArrayOutput)
}

type GetComputeInstanceNetworkOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceNetwork)(nil)).Elem()
}

func (o GetComputeInstanceNetworkOutput) ToGetComputeInstanceNetworkOutput() GetComputeInstanceNetworkOutput {
	return o
}

func (o GetComputeInstanceNetworkOutput) ToGetComputeInstanceNetworkOutputWithContext(ctx context.Context) GetComputeInstanceNetworkOutput {
	return o
}

func (o GetComputeInstanceNetworkOutput) FixedIpV4() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetwork) string { return v.FixedIpV4 }).(pulumi.StringOutput)
}

func (o GetComputeInstanceNetworkOutput) FixedIpV6() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetwork) string { return v.FixedIpV6 }).(pulumi.StringOutput)
}

func (o GetComputeInstanceNetworkOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetwork) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetComputeInstanceNetworkOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetwork) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetComputeInstanceNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetComputeInstanceNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceNetwork)(nil)).Elem()
}

func (o GetComputeInstanceNetworkArrayOutput) ToGetComputeInstanceNetworkArrayOutput() GetComputeInstanceNetworkArrayOutput {
	return o
}

func (o GetComputeInstanceNetworkArrayOutput) ToGetComputeInstanceNetworkArrayOutputWithContext(ctx context.Context) GetComputeInstanceNetworkArrayOutput {
	return o
}

func (o GetComputeInstanceNetworkArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceNetwork {
		return vs[0].([]GetComputeInstanceNetwork)[vs[1].(int)]
	}).(GetComputeInstanceNetworkOutput)
}

type GetComputeInstanceSchedulerHint struct {
	Group string `pulumi:"group"`
}

// GetComputeInstanceSchedulerHintInput is an input type that accepts GetComputeInstanceSchedulerHintArgs and GetComputeInstanceSchedulerHintOutput values.
// You can construct a concrete instance of `GetComputeInstanceSchedulerHintInput` via:
//
//	GetComputeInstanceSchedulerHintArgs{...}
type GetComputeInstanceSchedulerHintInput interface {
	pulumi.Input

	ToGetComputeInstanceSchedulerHintOutput() GetComputeInstanceSchedulerHintOutput
	ToGetComputeInstanceSchedulerHintOutputWithContext(context.Context) GetComputeInstanceSchedulerHintOutput
}

type GetComputeInstanceSchedulerHintArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
}

func (GetComputeInstanceSchedulerHintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceSchedulerHint)(nil)).Elem()
}

func (i GetComputeInstanceSchedulerHintArgs) ToGetComputeInstanceSchedulerHintOutput() GetComputeInstanceSchedulerHintOutput {
	return i.ToGetComputeInstanceSchedulerHintOutputWithContext(context.Background())
}

func (i GetComputeInstanceSchedulerHintArgs) ToGetComputeInstanceSchedulerHintOutputWithContext(ctx context.Context) GetComputeInstanceSchedulerHintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceSchedulerHintOutput)
}

// GetComputeInstanceSchedulerHintArrayInput is an input type that accepts GetComputeInstanceSchedulerHintArray and GetComputeInstanceSchedulerHintArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceSchedulerHintArrayInput` via:
//
//	GetComputeInstanceSchedulerHintArray{ GetComputeInstanceSchedulerHintArgs{...} }
type GetComputeInstanceSchedulerHintArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceSchedulerHintArrayOutput() GetComputeInstanceSchedulerHintArrayOutput
	ToGetComputeInstanceSchedulerHintArrayOutputWithContext(context.Context) GetComputeInstanceSchedulerHintArrayOutput
}

type GetComputeInstanceSchedulerHintArray []GetComputeInstanceSchedulerHintInput

func (GetComputeInstanceSchedulerHintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceSchedulerHint)(nil)).Elem()
}

func (i GetComputeInstanceSchedulerHintArray) ToGetComputeInstanceSchedulerHintArrayOutput() GetComputeInstanceSchedulerHintArrayOutput {
	return i.ToGetComputeInstanceSchedulerHintArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceSchedulerHintArray) ToGetComputeInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) GetComputeInstanceSchedulerHintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceSchedulerHintArrayOutput)
}

type GetComputeInstanceSchedulerHintOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceSchedulerHintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceSchedulerHint)(nil)).Elem()
}

func (o GetComputeInstanceSchedulerHintOutput) ToGetComputeInstanceSchedulerHintOutput() GetComputeInstanceSchedulerHintOutput {
	return o
}

func (o GetComputeInstanceSchedulerHintOutput) ToGetComputeInstanceSchedulerHintOutputWithContext(ctx context.Context) GetComputeInstanceSchedulerHintOutput {
	return o
}

func (o GetComputeInstanceSchedulerHintOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceSchedulerHint) string { return v.Group }).(pulumi.StringOutput)
}

type GetComputeInstanceSchedulerHintArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceSchedulerHintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceSchedulerHint)(nil)).Elem()
}

func (o GetComputeInstanceSchedulerHintArrayOutput) ToGetComputeInstanceSchedulerHintArrayOutput() GetComputeInstanceSchedulerHintArrayOutput {
	return o
}

func (o GetComputeInstanceSchedulerHintArrayOutput) ToGetComputeInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) GetComputeInstanceSchedulerHintArrayOutput {
	return o
}

func (o GetComputeInstanceSchedulerHintArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceSchedulerHintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceSchedulerHint {
		return vs[0].([]GetComputeInstanceSchedulerHint)[vs[1].(int)]
	}).(GetComputeInstanceSchedulerHintOutput)
}

type GetComputeInstanceVolumeAttached struct {
	BootIndex   int    `pulumi:"bootIndex"`
	IsSysVolume bool   `pulumi:"isSysVolume"`
	PciAddress  string `pulumi:"pciAddress"`
	Size        int    `pulumi:"size"`
	Type        string `pulumi:"type"`
	VolumeId    string `pulumi:"volumeId"`
}

// GetComputeInstanceVolumeAttachedInput is an input type that accepts GetComputeInstanceVolumeAttachedArgs and GetComputeInstanceVolumeAttachedOutput values.
// You can construct a concrete instance of `GetComputeInstanceVolumeAttachedInput` via:
//
//	GetComputeInstanceVolumeAttachedArgs{...}
type GetComputeInstanceVolumeAttachedInput interface {
	pulumi.Input

	ToGetComputeInstanceVolumeAttachedOutput() GetComputeInstanceVolumeAttachedOutput
	ToGetComputeInstanceVolumeAttachedOutputWithContext(context.Context) GetComputeInstanceVolumeAttachedOutput
}

type GetComputeInstanceVolumeAttachedArgs struct {
	BootIndex   pulumi.IntInput    `pulumi:"bootIndex"`
	IsSysVolume pulumi.BoolInput   `pulumi:"isSysVolume"`
	PciAddress  pulumi.StringInput `pulumi:"pciAddress"`
	Size        pulumi.IntInput    `pulumi:"size"`
	Type        pulumi.StringInput `pulumi:"type"`
	VolumeId    pulumi.StringInput `pulumi:"volumeId"`
}

func (GetComputeInstanceVolumeAttachedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceVolumeAttached)(nil)).Elem()
}

func (i GetComputeInstanceVolumeAttachedArgs) ToGetComputeInstanceVolumeAttachedOutput() GetComputeInstanceVolumeAttachedOutput {
	return i.ToGetComputeInstanceVolumeAttachedOutputWithContext(context.Background())
}

func (i GetComputeInstanceVolumeAttachedArgs) ToGetComputeInstanceVolumeAttachedOutputWithContext(ctx context.Context) GetComputeInstanceVolumeAttachedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceVolumeAttachedOutput)
}

// GetComputeInstanceVolumeAttachedArrayInput is an input type that accepts GetComputeInstanceVolumeAttachedArray and GetComputeInstanceVolumeAttachedArrayOutput values.
// You can construct a concrete instance of `GetComputeInstanceVolumeAttachedArrayInput` via:
//
//	GetComputeInstanceVolumeAttachedArray{ GetComputeInstanceVolumeAttachedArgs{...} }
type GetComputeInstanceVolumeAttachedArrayInput interface {
	pulumi.Input

	ToGetComputeInstanceVolumeAttachedArrayOutput() GetComputeInstanceVolumeAttachedArrayOutput
	ToGetComputeInstanceVolumeAttachedArrayOutputWithContext(context.Context) GetComputeInstanceVolumeAttachedArrayOutput
}

type GetComputeInstanceVolumeAttachedArray []GetComputeInstanceVolumeAttachedInput

func (GetComputeInstanceVolumeAttachedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceVolumeAttached)(nil)).Elem()
}

func (i GetComputeInstanceVolumeAttachedArray) ToGetComputeInstanceVolumeAttachedArrayOutput() GetComputeInstanceVolumeAttachedArrayOutput {
	return i.ToGetComputeInstanceVolumeAttachedArrayOutputWithContext(context.Background())
}

func (i GetComputeInstanceVolumeAttachedArray) ToGetComputeInstanceVolumeAttachedArrayOutputWithContext(ctx context.Context) GetComputeInstanceVolumeAttachedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstanceVolumeAttachedArrayOutput)
}

type GetComputeInstanceVolumeAttachedOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceVolumeAttachedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstanceVolumeAttached)(nil)).Elem()
}

func (o GetComputeInstanceVolumeAttachedOutput) ToGetComputeInstanceVolumeAttachedOutput() GetComputeInstanceVolumeAttachedOutput {
	return o
}

func (o GetComputeInstanceVolumeAttachedOutput) ToGetComputeInstanceVolumeAttachedOutputWithContext(ctx context.Context) GetComputeInstanceVolumeAttachedOutput {
	return o
}

func (o GetComputeInstanceVolumeAttachedOutput) BootIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceVolumeAttached) int { return v.BootIndex }).(pulumi.IntOutput)
}

func (o GetComputeInstanceVolumeAttachedOutput) IsSysVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstanceVolumeAttached) bool { return v.IsSysVolume }).(pulumi.BoolOutput)
}

func (o GetComputeInstanceVolumeAttachedOutput) PciAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceVolumeAttached) string { return v.PciAddress }).(pulumi.StringOutput)
}

func (o GetComputeInstanceVolumeAttachedOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstanceVolumeAttached) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetComputeInstanceVolumeAttachedOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceVolumeAttached) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetComputeInstanceVolumeAttachedOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstanceVolumeAttached) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetComputeInstanceVolumeAttachedArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstanceVolumeAttachedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstanceVolumeAttached)(nil)).Elem()
}

func (o GetComputeInstanceVolumeAttachedArrayOutput) ToGetComputeInstanceVolumeAttachedArrayOutput() GetComputeInstanceVolumeAttachedArrayOutput {
	return o
}

func (o GetComputeInstanceVolumeAttachedArrayOutput) ToGetComputeInstanceVolumeAttachedArrayOutputWithContext(ctx context.Context) GetComputeInstanceVolumeAttachedArrayOutput {
	return o
}

func (o GetComputeInstanceVolumeAttachedArrayOutput) Index(i pulumi.IntInput) GetComputeInstanceVolumeAttachedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstanceVolumeAttached {
		return vs[0].([]GetComputeInstanceVolumeAttached)[vs[1].(int)]
	}).(GetComputeInstanceVolumeAttachedOutput)
}

type GetComputeInstancesInstance struct {
	AvailabilityZone    string                                      `pulumi:"availabilityZone"`
	ChargingMode        string                                      `pulumi:"chargingMode"`
	EnterpriseProjectId string                                      `pulumi:"enterpriseProjectId"`
	ExpiredTime         string                                      `pulumi:"expiredTime"`
	FlavorId            string                                      `pulumi:"flavorId"`
	FlavorName          string                                      `pulumi:"flavorName"`
	Id                  string                                      `pulumi:"id"`
	ImageId             string                                      `pulumi:"imageId"`
	ImageName           string                                      `pulumi:"imageName"`
	KeyPair             string                                      `pulumi:"keyPair"`
	Name                string                                      `pulumi:"name"`
	Networks            []GetComputeInstancesInstanceNetwork        `pulumi:"networks"`
	PublicIp            string                                      `pulumi:"publicIp"`
	SchedulerHints      []GetComputeInstancesInstanceSchedulerHint  `pulumi:"schedulerHints"`
	SecurityGroupIds    []string                                    `pulumi:"securityGroupIds"`
	Status              string                                      `pulumi:"status"`
	SystemDiskId        string                                      `pulumi:"systemDiskId"`
	Tags                map[string]string                           `pulumi:"tags"`
	UserData            string                                      `pulumi:"userData"`
	VolumeAttacheds     []GetComputeInstancesInstanceVolumeAttached `pulumi:"volumeAttacheds"`
}

// GetComputeInstancesInstanceInput is an input type that accepts GetComputeInstancesInstanceArgs and GetComputeInstancesInstanceOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceInput` via:
//
//	GetComputeInstancesInstanceArgs{...}
type GetComputeInstancesInstanceInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceOutput() GetComputeInstancesInstanceOutput
	ToGetComputeInstancesInstanceOutputWithContext(context.Context) GetComputeInstancesInstanceOutput
}

type GetComputeInstancesInstanceArgs struct {
	AvailabilityZone    pulumi.StringInput                                  `pulumi:"availabilityZone"`
	ChargingMode        pulumi.StringInput                                  `pulumi:"chargingMode"`
	EnterpriseProjectId pulumi.StringInput                                  `pulumi:"enterpriseProjectId"`
	ExpiredTime         pulumi.StringInput                                  `pulumi:"expiredTime"`
	FlavorId            pulumi.StringInput                                  `pulumi:"flavorId"`
	FlavorName          pulumi.StringInput                                  `pulumi:"flavorName"`
	Id                  pulumi.StringInput                                  `pulumi:"id"`
	ImageId             pulumi.StringInput                                  `pulumi:"imageId"`
	ImageName           pulumi.StringInput                                  `pulumi:"imageName"`
	KeyPair             pulumi.StringInput                                  `pulumi:"keyPair"`
	Name                pulumi.StringInput                                  `pulumi:"name"`
	Networks            GetComputeInstancesInstanceNetworkArrayInput        `pulumi:"networks"`
	PublicIp            pulumi.StringInput                                  `pulumi:"publicIp"`
	SchedulerHints      GetComputeInstancesInstanceSchedulerHintArrayInput  `pulumi:"schedulerHints"`
	SecurityGroupIds    pulumi.StringArrayInput                             `pulumi:"securityGroupIds"`
	Status              pulumi.StringInput                                  `pulumi:"status"`
	SystemDiskId        pulumi.StringInput                                  `pulumi:"systemDiskId"`
	Tags                pulumi.StringMapInput                               `pulumi:"tags"`
	UserData            pulumi.StringInput                                  `pulumi:"userData"`
	VolumeAttacheds     GetComputeInstancesInstanceVolumeAttachedArrayInput `pulumi:"volumeAttacheds"`
}

func (GetComputeInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstance)(nil)).Elem()
}

func (i GetComputeInstancesInstanceArgs) ToGetComputeInstancesInstanceOutput() GetComputeInstancesInstanceOutput {
	return i.ToGetComputeInstancesInstanceOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceArgs) ToGetComputeInstancesInstanceOutputWithContext(ctx context.Context) GetComputeInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceOutput)
}

// GetComputeInstancesInstanceArrayInput is an input type that accepts GetComputeInstancesInstanceArray and GetComputeInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceArrayInput` via:
//
//	GetComputeInstancesInstanceArray{ GetComputeInstancesInstanceArgs{...} }
type GetComputeInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceArrayOutput() GetComputeInstancesInstanceArrayOutput
	ToGetComputeInstancesInstanceArrayOutputWithContext(context.Context) GetComputeInstancesInstanceArrayOutput
}

type GetComputeInstancesInstanceArray []GetComputeInstancesInstanceInput

func (GetComputeInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstance)(nil)).Elem()
}

func (i GetComputeInstancesInstanceArray) ToGetComputeInstancesInstanceArrayOutput() GetComputeInstancesInstanceArrayOutput {
	return i.ToGetComputeInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceArray) ToGetComputeInstancesInstanceArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceArrayOutput)
}

type GetComputeInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstance)(nil)).Elem()
}

func (o GetComputeInstancesInstanceOutput) ToGetComputeInstancesInstanceOutput() GetComputeInstancesInstanceOutput {
	return o
}

func (o GetComputeInstancesInstanceOutput) ToGetComputeInstancesInstanceOutputWithContext(ctx context.Context) GetComputeInstancesInstanceOutput {
	return o
}

func (o GetComputeInstancesInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.FlavorId }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) FlavorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.FlavorName }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) KeyPair() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.KeyPair }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) Networks() GetComputeInstancesInstanceNetworkArrayOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) []GetComputeInstancesInstanceNetwork { return v.Networks }).(GetComputeInstancesInstanceNetworkArrayOutput)
}

func (o GetComputeInstancesInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) SchedulerHints() GetComputeInstancesInstanceSchedulerHintArrayOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) []GetComputeInstancesInstanceSchedulerHint {
		return v.SchedulerHints
	}).(GetComputeInstancesInstanceSchedulerHintArrayOutput)
}

func (o GetComputeInstancesInstanceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o GetComputeInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) SystemDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.SystemDiskId }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetComputeInstancesInstanceOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) string { return v.UserData }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceOutput) VolumeAttacheds() GetComputeInstancesInstanceVolumeAttachedArrayOutput {
	return o.ApplyT(func(v GetComputeInstancesInstance) []GetComputeInstancesInstanceVolumeAttached {
		return v.VolumeAttacheds
	}).(GetComputeInstancesInstanceVolumeAttachedArrayOutput)
}

type GetComputeInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstance)(nil)).Elem()
}

func (o GetComputeInstancesInstanceArrayOutput) ToGetComputeInstancesInstanceArrayOutput() GetComputeInstancesInstanceArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceArrayOutput) ToGetComputeInstancesInstanceArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetComputeInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstancesInstance {
		return vs[0].([]GetComputeInstancesInstance)[vs[1].(int)]
	}).(GetComputeInstancesInstanceOutput)
}

type GetComputeInstancesInstanceNetwork struct {
	FixedIpV4 string `pulumi:"fixedIpV4"`
	FixedIpV6 string `pulumi:"fixedIpV6"`
	Mac       string `pulumi:"mac"`
	Port      string `pulumi:"port"`
	Uuid      string `pulumi:"uuid"`
}

// GetComputeInstancesInstanceNetworkInput is an input type that accepts GetComputeInstancesInstanceNetworkArgs and GetComputeInstancesInstanceNetworkOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceNetworkInput` via:
//
//	GetComputeInstancesInstanceNetworkArgs{...}
type GetComputeInstancesInstanceNetworkInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceNetworkOutput() GetComputeInstancesInstanceNetworkOutput
	ToGetComputeInstancesInstanceNetworkOutputWithContext(context.Context) GetComputeInstancesInstanceNetworkOutput
}

type GetComputeInstancesInstanceNetworkArgs struct {
	FixedIpV4 pulumi.StringInput `pulumi:"fixedIpV4"`
	FixedIpV6 pulumi.StringInput `pulumi:"fixedIpV6"`
	Mac       pulumi.StringInput `pulumi:"mac"`
	Port      pulumi.StringInput `pulumi:"port"`
	Uuid      pulumi.StringInput `pulumi:"uuid"`
}

func (GetComputeInstancesInstanceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstanceNetwork)(nil)).Elem()
}

func (i GetComputeInstancesInstanceNetworkArgs) ToGetComputeInstancesInstanceNetworkOutput() GetComputeInstancesInstanceNetworkOutput {
	return i.ToGetComputeInstancesInstanceNetworkOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceNetworkArgs) ToGetComputeInstancesInstanceNetworkOutputWithContext(ctx context.Context) GetComputeInstancesInstanceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceNetworkOutput)
}

// GetComputeInstancesInstanceNetworkArrayInput is an input type that accepts GetComputeInstancesInstanceNetworkArray and GetComputeInstancesInstanceNetworkArrayOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceNetworkArrayInput` via:
//
//	GetComputeInstancesInstanceNetworkArray{ GetComputeInstancesInstanceNetworkArgs{...} }
type GetComputeInstancesInstanceNetworkArrayInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceNetworkArrayOutput() GetComputeInstancesInstanceNetworkArrayOutput
	ToGetComputeInstancesInstanceNetworkArrayOutputWithContext(context.Context) GetComputeInstancesInstanceNetworkArrayOutput
}

type GetComputeInstancesInstanceNetworkArray []GetComputeInstancesInstanceNetworkInput

func (GetComputeInstancesInstanceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstanceNetwork)(nil)).Elem()
}

func (i GetComputeInstancesInstanceNetworkArray) ToGetComputeInstancesInstanceNetworkArrayOutput() GetComputeInstancesInstanceNetworkArrayOutput {
	return i.ToGetComputeInstancesInstanceNetworkArrayOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceNetworkArray) ToGetComputeInstancesInstanceNetworkArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceNetworkArrayOutput)
}

type GetComputeInstancesInstanceNetworkOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstanceNetwork)(nil)).Elem()
}

func (o GetComputeInstancesInstanceNetworkOutput) ToGetComputeInstancesInstanceNetworkOutput() GetComputeInstancesInstanceNetworkOutput {
	return o
}

func (o GetComputeInstancesInstanceNetworkOutput) ToGetComputeInstancesInstanceNetworkOutputWithContext(ctx context.Context) GetComputeInstancesInstanceNetworkOutput {
	return o
}

func (o GetComputeInstancesInstanceNetworkOutput) FixedIpV4() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceNetwork) string { return v.FixedIpV4 }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceNetworkOutput) FixedIpV6() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceNetwork) string { return v.FixedIpV6 }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceNetworkOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceNetwork) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceNetworkOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceNetwork) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetComputeInstancesInstanceNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstanceNetwork)(nil)).Elem()
}

func (o GetComputeInstancesInstanceNetworkArrayOutput) ToGetComputeInstancesInstanceNetworkArrayOutput() GetComputeInstancesInstanceNetworkArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceNetworkArrayOutput) ToGetComputeInstancesInstanceNetworkArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceNetworkArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceNetworkArrayOutput) Index(i pulumi.IntInput) GetComputeInstancesInstanceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstancesInstanceNetwork {
		return vs[0].([]GetComputeInstancesInstanceNetwork)[vs[1].(int)]
	}).(GetComputeInstancesInstanceNetworkOutput)
}

type GetComputeInstancesInstanceSchedulerHint struct {
	Group string `pulumi:"group"`
}

// GetComputeInstancesInstanceSchedulerHintInput is an input type that accepts GetComputeInstancesInstanceSchedulerHintArgs and GetComputeInstancesInstanceSchedulerHintOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceSchedulerHintInput` via:
//
//	GetComputeInstancesInstanceSchedulerHintArgs{...}
type GetComputeInstancesInstanceSchedulerHintInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceSchedulerHintOutput() GetComputeInstancesInstanceSchedulerHintOutput
	ToGetComputeInstancesInstanceSchedulerHintOutputWithContext(context.Context) GetComputeInstancesInstanceSchedulerHintOutput
}

type GetComputeInstancesInstanceSchedulerHintArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
}

func (GetComputeInstancesInstanceSchedulerHintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstanceSchedulerHint)(nil)).Elem()
}

func (i GetComputeInstancesInstanceSchedulerHintArgs) ToGetComputeInstancesInstanceSchedulerHintOutput() GetComputeInstancesInstanceSchedulerHintOutput {
	return i.ToGetComputeInstancesInstanceSchedulerHintOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceSchedulerHintArgs) ToGetComputeInstancesInstanceSchedulerHintOutputWithContext(ctx context.Context) GetComputeInstancesInstanceSchedulerHintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceSchedulerHintOutput)
}

// GetComputeInstancesInstanceSchedulerHintArrayInput is an input type that accepts GetComputeInstancesInstanceSchedulerHintArray and GetComputeInstancesInstanceSchedulerHintArrayOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceSchedulerHintArrayInput` via:
//
//	GetComputeInstancesInstanceSchedulerHintArray{ GetComputeInstancesInstanceSchedulerHintArgs{...} }
type GetComputeInstancesInstanceSchedulerHintArrayInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceSchedulerHintArrayOutput() GetComputeInstancesInstanceSchedulerHintArrayOutput
	ToGetComputeInstancesInstanceSchedulerHintArrayOutputWithContext(context.Context) GetComputeInstancesInstanceSchedulerHintArrayOutput
}

type GetComputeInstancesInstanceSchedulerHintArray []GetComputeInstancesInstanceSchedulerHintInput

func (GetComputeInstancesInstanceSchedulerHintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstanceSchedulerHint)(nil)).Elem()
}

func (i GetComputeInstancesInstanceSchedulerHintArray) ToGetComputeInstancesInstanceSchedulerHintArrayOutput() GetComputeInstancesInstanceSchedulerHintArrayOutput {
	return i.ToGetComputeInstancesInstanceSchedulerHintArrayOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceSchedulerHintArray) ToGetComputeInstancesInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceSchedulerHintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceSchedulerHintArrayOutput)
}

type GetComputeInstancesInstanceSchedulerHintOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceSchedulerHintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstanceSchedulerHint)(nil)).Elem()
}

func (o GetComputeInstancesInstanceSchedulerHintOutput) ToGetComputeInstancesInstanceSchedulerHintOutput() GetComputeInstancesInstanceSchedulerHintOutput {
	return o
}

func (o GetComputeInstancesInstanceSchedulerHintOutput) ToGetComputeInstancesInstanceSchedulerHintOutputWithContext(ctx context.Context) GetComputeInstancesInstanceSchedulerHintOutput {
	return o
}

func (o GetComputeInstancesInstanceSchedulerHintOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceSchedulerHint) string { return v.Group }).(pulumi.StringOutput)
}

type GetComputeInstancesInstanceSchedulerHintArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceSchedulerHintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstanceSchedulerHint)(nil)).Elem()
}

func (o GetComputeInstancesInstanceSchedulerHintArrayOutput) ToGetComputeInstancesInstanceSchedulerHintArrayOutput() GetComputeInstancesInstanceSchedulerHintArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceSchedulerHintArrayOutput) ToGetComputeInstancesInstanceSchedulerHintArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceSchedulerHintArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceSchedulerHintArrayOutput) Index(i pulumi.IntInput) GetComputeInstancesInstanceSchedulerHintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstancesInstanceSchedulerHint {
		return vs[0].([]GetComputeInstancesInstanceSchedulerHint)[vs[1].(int)]
	}).(GetComputeInstancesInstanceSchedulerHintOutput)
}

type GetComputeInstancesInstanceVolumeAttached struct {
	BootIndex   int    `pulumi:"bootIndex"`
	IsSysVolume bool   `pulumi:"isSysVolume"`
	PciAddress  string `pulumi:"pciAddress"`
	Size        int    `pulumi:"size"`
	Type        string `pulumi:"type"`
	VolumeId    string `pulumi:"volumeId"`
}

// GetComputeInstancesInstanceVolumeAttachedInput is an input type that accepts GetComputeInstancesInstanceVolumeAttachedArgs and GetComputeInstancesInstanceVolumeAttachedOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceVolumeAttachedInput` via:
//
//	GetComputeInstancesInstanceVolumeAttachedArgs{...}
type GetComputeInstancesInstanceVolumeAttachedInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceVolumeAttachedOutput() GetComputeInstancesInstanceVolumeAttachedOutput
	ToGetComputeInstancesInstanceVolumeAttachedOutputWithContext(context.Context) GetComputeInstancesInstanceVolumeAttachedOutput
}

type GetComputeInstancesInstanceVolumeAttachedArgs struct {
	BootIndex   pulumi.IntInput    `pulumi:"bootIndex"`
	IsSysVolume pulumi.BoolInput   `pulumi:"isSysVolume"`
	PciAddress  pulumi.StringInput `pulumi:"pciAddress"`
	Size        pulumi.IntInput    `pulumi:"size"`
	Type        pulumi.StringInput `pulumi:"type"`
	VolumeId    pulumi.StringInput `pulumi:"volumeId"`
}

func (GetComputeInstancesInstanceVolumeAttachedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstanceVolumeAttached)(nil)).Elem()
}

func (i GetComputeInstancesInstanceVolumeAttachedArgs) ToGetComputeInstancesInstanceVolumeAttachedOutput() GetComputeInstancesInstanceVolumeAttachedOutput {
	return i.ToGetComputeInstancesInstanceVolumeAttachedOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceVolumeAttachedArgs) ToGetComputeInstancesInstanceVolumeAttachedOutputWithContext(ctx context.Context) GetComputeInstancesInstanceVolumeAttachedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceVolumeAttachedOutput)
}

// GetComputeInstancesInstanceVolumeAttachedArrayInput is an input type that accepts GetComputeInstancesInstanceVolumeAttachedArray and GetComputeInstancesInstanceVolumeAttachedArrayOutput values.
// You can construct a concrete instance of `GetComputeInstancesInstanceVolumeAttachedArrayInput` via:
//
//	GetComputeInstancesInstanceVolumeAttachedArray{ GetComputeInstancesInstanceVolumeAttachedArgs{...} }
type GetComputeInstancesInstanceVolumeAttachedArrayInput interface {
	pulumi.Input

	ToGetComputeInstancesInstanceVolumeAttachedArrayOutput() GetComputeInstancesInstanceVolumeAttachedArrayOutput
	ToGetComputeInstancesInstanceVolumeAttachedArrayOutputWithContext(context.Context) GetComputeInstancesInstanceVolumeAttachedArrayOutput
}

type GetComputeInstancesInstanceVolumeAttachedArray []GetComputeInstancesInstanceVolumeAttachedInput

func (GetComputeInstancesInstanceVolumeAttachedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstanceVolumeAttached)(nil)).Elem()
}

func (i GetComputeInstancesInstanceVolumeAttachedArray) ToGetComputeInstancesInstanceVolumeAttachedArrayOutput() GetComputeInstancesInstanceVolumeAttachedArrayOutput {
	return i.ToGetComputeInstancesInstanceVolumeAttachedArrayOutputWithContext(context.Background())
}

func (i GetComputeInstancesInstanceVolumeAttachedArray) ToGetComputeInstancesInstanceVolumeAttachedArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceVolumeAttachedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeInstancesInstanceVolumeAttachedArrayOutput)
}

type GetComputeInstancesInstanceVolumeAttachedOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceVolumeAttachedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesInstanceVolumeAttached)(nil)).Elem()
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) ToGetComputeInstancesInstanceVolumeAttachedOutput() GetComputeInstancesInstanceVolumeAttachedOutput {
	return o
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) ToGetComputeInstancesInstanceVolumeAttachedOutputWithContext(ctx context.Context) GetComputeInstancesInstanceVolumeAttachedOutput {
	return o
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) BootIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceVolumeAttached) int { return v.BootIndex }).(pulumi.IntOutput)
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) IsSysVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceVolumeAttached) bool { return v.IsSysVolume }).(pulumi.BoolOutput)
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) PciAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceVolumeAttached) string { return v.PciAddress }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceVolumeAttached) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceVolumeAttached) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetComputeInstancesInstanceVolumeAttachedOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesInstanceVolumeAttached) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetComputeInstancesInstanceVolumeAttachedArrayOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesInstanceVolumeAttachedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeInstancesInstanceVolumeAttached)(nil)).Elem()
}

func (o GetComputeInstancesInstanceVolumeAttachedArrayOutput) ToGetComputeInstancesInstanceVolumeAttachedArrayOutput() GetComputeInstancesInstanceVolumeAttachedArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceVolumeAttachedArrayOutput) ToGetComputeInstancesInstanceVolumeAttachedArrayOutputWithContext(ctx context.Context) GetComputeInstancesInstanceVolumeAttachedArrayOutput {
	return o
}

func (o GetComputeInstancesInstanceVolumeAttachedArrayOutput) Index(i pulumi.IntInput) GetComputeInstancesInstanceVolumeAttachedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeInstancesInstanceVolumeAttached {
		return vs[0].([]GetComputeInstancesInstanceVolumeAttached)[vs[1].(int)]
	}).(GetComputeInstancesInstanceVolumeAttachedOutput)
}

type GetComputeServergroupsServergroup struct {
	Id       string   `pulumi:"id"`
	Members  []string `pulumi:"members"`
	Name     string   `pulumi:"name"`
	Policies []string `pulumi:"policies"`
}

// GetComputeServergroupsServergroupInput is an input type that accepts GetComputeServergroupsServergroupArgs and GetComputeServergroupsServergroupOutput values.
// You can construct a concrete instance of `GetComputeServergroupsServergroupInput` via:
//
//	GetComputeServergroupsServergroupArgs{...}
type GetComputeServergroupsServergroupInput interface {
	pulumi.Input

	ToGetComputeServergroupsServergroupOutput() GetComputeServergroupsServergroupOutput
	ToGetComputeServergroupsServergroupOutputWithContext(context.Context) GetComputeServergroupsServergroupOutput
}

type GetComputeServergroupsServergroupArgs struct {
	Id       pulumi.StringInput      `pulumi:"id"`
	Members  pulumi.StringArrayInput `pulumi:"members"`
	Name     pulumi.StringInput      `pulumi:"name"`
	Policies pulumi.StringArrayInput `pulumi:"policies"`
}

func (GetComputeServergroupsServergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeServergroupsServergroup)(nil)).Elem()
}

func (i GetComputeServergroupsServergroupArgs) ToGetComputeServergroupsServergroupOutput() GetComputeServergroupsServergroupOutput {
	return i.ToGetComputeServergroupsServergroupOutputWithContext(context.Background())
}

func (i GetComputeServergroupsServergroupArgs) ToGetComputeServergroupsServergroupOutputWithContext(ctx context.Context) GetComputeServergroupsServergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeServergroupsServergroupOutput)
}

// GetComputeServergroupsServergroupArrayInput is an input type that accepts GetComputeServergroupsServergroupArray and GetComputeServergroupsServergroupArrayOutput values.
// You can construct a concrete instance of `GetComputeServergroupsServergroupArrayInput` via:
//
//	GetComputeServergroupsServergroupArray{ GetComputeServergroupsServergroupArgs{...} }
type GetComputeServergroupsServergroupArrayInput interface {
	pulumi.Input

	ToGetComputeServergroupsServergroupArrayOutput() GetComputeServergroupsServergroupArrayOutput
	ToGetComputeServergroupsServergroupArrayOutputWithContext(context.Context) GetComputeServergroupsServergroupArrayOutput
}

type GetComputeServergroupsServergroupArray []GetComputeServergroupsServergroupInput

func (GetComputeServergroupsServergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeServergroupsServergroup)(nil)).Elem()
}

func (i GetComputeServergroupsServergroupArray) ToGetComputeServergroupsServergroupArrayOutput() GetComputeServergroupsServergroupArrayOutput {
	return i.ToGetComputeServergroupsServergroupArrayOutputWithContext(context.Background())
}

func (i GetComputeServergroupsServergroupArray) ToGetComputeServergroupsServergroupArrayOutputWithContext(ctx context.Context) GetComputeServergroupsServergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeServergroupsServergroupArrayOutput)
}

type GetComputeServergroupsServergroupOutput struct{ *pulumi.OutputState }

func (GetComputeServergroupsServergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeServergroupsServergroup)(nil)).Elem()
}

func (o GetComputeServergroupsServergroupOutput) ToGetComputeServergroupsServergroupOutput() GetComputeServergroupsServergroupOutput {
	return o
}

func (o GetComputeServergroupsServergroupOutput) ToGetComputeServergroupsServergroupOutputWithContext(ctx context.Context) GetComputeServergroupsServergroupOutput {
	return o
}

func (o GetComputeServergroupsServergroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeServergroupsServergroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComputeServergroupsServergroupOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeServergroupsServergroup) []string { return v.Members }).(pulumi.StringArrayOutput)
}

func (o GetComputeServergroupsServergroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeServergroupsServergroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComputeServergroupsServergroupOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeServergroupsServergroup) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type GetComputeServergroupsServergroupArrayOutput struct{ *pulumi.OutputState }

func (GetComputeServergroupsServergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeServergroupsServergroup)(nil)).Elem()
}

func (o GetComputeServergroupsServergroupArrayOutput) ToGetComputeServergroupsServergroupArrayOutput() GetComputeServergroupsServergroupArrayOutput {
	return o
}

func (o GetComputeServergroupsServergroupArrayOutput) ToGetComputeServergroupsServergroupArrayOutputWithContext(ctx context.Context) GetComputeServergroupsServergroupArrayOutput {
	return o
}

func (o GetComputeServergroupsServergroupArrayOutput) Index(i pulumi.IntInput) GetComputeServergroupsServergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeServergroupsServergroup {
		return vs[0].([]GetComputeServergroupsServergroup)[vs[1].(int)]
	}).(GetComputeServergroupsServergroupOutput)
}

type GetCssFlavorsFlavor struct {
	AvailabilityZones string `pulumi:"availabilityZones"`
	DiskRange         string `pulumi:"diskRange"`
	Id                string `pulumi:"id"`
	Memory            int    `pulumi:"memory"`
	Name              string `pulumi:"name"`
	Region            string `pulumi:"region"`
	Type              string `pulumi:"type"`
	Vcpus             int    `pulumi:"vcpus"`
	Version           string `pulumi:"version"`
}

// GetCssFlavorsFlavorInput is an input type that accepts GetCssFlavorsFlavorArgs and GetCssFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetCssFlavorsFlavorInput` via:
//
//	GetCssFlavorsFlavorArgs{...}
type GetCssFlavorsFlavorInput interface {
	pulumi.Input

	ToGetCssFlavorsFlavorOutput() GetCssFlavorsFlavorOutput
	ToGetCssFlavorsFlavorOutputWithContext(context.Context) GetCssFlavorsFlavorOutput
}

type GetCssFlavorsFlavorArgs struct {
	AvailabilityZones pulumi.StringInput `pulumi:"availabilityZones"`
	DiskRange         pulumi.StringInput `pulumi:"diskRange"`
	Id                pulumi.StringInput `pulumi:"id"`
	Memory            pulumi.IntInput    `pulumi:"memory"`
	Name              pulumi.StringInput `pulumi:"name"`
	Region            pulumi.StringInput `pulumi:"region"`
	Type              pulumi.StringInput `pulumi:"type"`
	Vcpus             pulumi.IntInput    `pulumi:"vcpus"`
	Version           pulumi.StringInput `pulumi:"version"`
}

func (GetCssFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCssFlavorsFlavor)(nil)).Elem()
}

func (i GetCssFlavorsFlavorArgs) ToGetCssFlavorsFlavorOutput() GetCssFlavorsFlavorOutput {
	return i.ToGetCssFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetCssFlavorsFlavorArgs) ToGetCssFlavorsFlavorOutputWithContext(ctx context.Context) GetCssFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCssFlavorsFlavorOutput)
}

// GetCssFlavorsFlavorArrayInput is an input type that accepts GetCssFlavorsFlavorArray and GetCssFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetCssFlavorsFlavorArrayInput` via:
//
//	GetCssFlavorsFlavorArray{ GetCssFlavorsFlavorArgs{...} }
type GetCssFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetCssFlavorsFlavorArrayOutput() GetCssFlavorsFlavorArrayOutput
	ToGetCssFlavorsFlavorArrayOutputWithContext(context.Context) GetCssFlavorsFlavorArrayOutput
}

type GetCssFlavorsFlavorArray []GetCssFlavorsFlavorInput

func (GetCssFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCssFlavorsFlavor)(nil)).Elem()
}

func (i GetCssFlavorsFlavorArray) ToGetCssFlavorsFlavorArrayOutput() GetCssFlavorsFlavorArrayOutput {
	return i.ToGetCssFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetCssFlavorsFlavorArray) ToGetCssFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCssFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCssFlavorsFlavorArrayOutput)
}

type GetCssFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetCssFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCssFlavorsFlavor)(nil)).Elem()
}

func (o GetCssFlavorsFlavorOutput) ToGetCssFlavorsFlavorOutput() GetCssFlavorsFlavorOutput {
	return o
}

func (o GetCssFlavorsFlavorOutput) ToGetCssFlavorsFlavorOutputWithContext(ctx context.Context) GetCssFlavorsFlavorOutput {
	return o
}

func (o GetCssFlavorsFlavorOutput) AvailabilityZones() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) string { return v.AvailabilityZones }).(pulumi.StringOutput)
}

func (o GetCssFlavorsFlavorOutput) DiskRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) string { return v.DiskRange }).(pulumi.StringOutput)
}

func (o GetCssFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCssFlavorsFlavorOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetCssFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCssFlavorsFlavorOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetCssFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetCssFlavorsFlavorOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) int { return v.Vcpus }).(pulumi.IntOutput)
}

func (o GetCssFlavorsFlavorOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsFlavor) string { return v.Version }).(pulumi.StringOutput)
}

type GetCssFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetCssFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCssFlavorsFlavor)(nil)).Elem()
}

func (o GetCssFlavorsFlavorArrayOutput) ToGetCssFlavorsFlavorArrayOutput() GetCssFlavorsFlavorArrayOutput {
	return o
}

func (o GetCssFlavorsFlavorArrayOutput) ToGetCssFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCssFlavorsFlavorArrayOutput {
	return o
}

func (o GetCssFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetCssFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCssFlavorsFlavor {
		return vs[0].([]GetCssFlavorsFlavor)[vs[1].(int)]
	}).(GetCssFlavorsFlavorOutput)
}

type GetDcsAccountsAccount struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Account permissions.
	AccountRole string `pulumi:"accountRole"`
	// Account type.
	AccountType string `pulumi:"accountType"`
	// Account description.
	Description string `pulumi:"description"`
	// Account ID.
	Id string `pulumi:"id"`
	// Account status.
	Status string `pulumi:"status"`
}

// GetDcsAccountsAccountInput is an input type that accepts GetDcsAccountsAccountArgs and GetDcsAccountsAccountOutput values.
// You can construct a concrete instance of `GetDcsAccountsAccountInput` via:
//
//	GetDcsAccountsAccountArgs{...}
type GetDcsAccountsAccountInput interface {
	pulumi.Input

	ToGetDcsAccountsAccountOutput() GetDcsAccountsAccountOutput
	ToGetDcsAccountsAccountOutputWithContext(context.Context) GetDcsAccountsAccountOutput
}

type GetDcsAccountsAccountArgs struct {
	// Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Account permissions.
	AccountRole pulumi.StringInput `pulumi:"accountRole"`
	// Account type.
	AccountType pulumi.StringInput `pulumi:"accountType"`
	// Account description.
	Description pulumi.StringInput `pulumi:"description"`
	// Account ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Account status.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDcsAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDcsAccountsAccount)(nil)).Elem()
}

func (i GetDcsAccountsAccountArgs) ToGetDcsAccountsAccountOutput() GetDcsAccountsAccountOutput {
	return i.ToGetDcsAccountsAccountOutputWithContext(context.Background())
}

func (i GetDcsAccountsAccountArgs) ToGetDcsAccountsAccountOutputWithContext(ctx context.Context) GetDcsAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDcsAccountsAccountOutput)
}

// GetDcsAccountsAccountArrayInput is an input type that accepts GetDcsAccountsAccountArray and GetDcsAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetDcsAccountsAccountArrayInput` via:
//
//	GetDcsAccountsAccountArray{ GetDcsAccountsAccountArgs{...} }
type GetDcsAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetDcsAccountsAccountArrayOutput() GetDcsAccountsAccountArrayOutput
	ToGetDcsAccountsAccountArrayOutputWithContext(context.Context) GetDcsAccountsAccountArrayOutput
}

type GetDcsAccountsAccountArray []GetDcsAccountsAccountInput

func (GetDcsAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDcsAccountsAccount)(nil)).Elem()
}

func (i GetDcsAccountsAccountArray) ToGetDcsAccountsAccountArrayOutput() GetDcsAccountsAccountArrayOutput {
	return i.ToGetDcsAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetDcsAccountsAccountArray) ToGetDcsAccountsAccountArrayOutputWithContext(ctx context.Context) GetDcsAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDcsAccountsAccountArrayOutput)
}

type GetDcsAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetDcsAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDcsAccountsAccount)(nil)).Elem()
}

func (o GetDcsAccountsAccountOutput) ToGetDcsAccountsAccountOutput() GetDcsAccountsAccountOutput {
	return o
}

func (o GetDcsAccountsAccountOutput) ToGetDcsAccountsAccountOutputWithContext(ctx context.Context) GetDcsAccountsAccountOutput {
	return o
}

// Account name.
func (o GetDcsAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// Account permissions.
func (o GetDcsAccountsAccountOutput) AccountRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsAccountsAccount) string { return v.AccountRole }).(pulumi.StringOutput)
}

// Account type.
func (o GetDcsAccountsAccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsAccountsAccount) string { return v.AccountType }).(pulumi.StringOutput)
}

// Account description.
func (o GetDcsAccountsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsAccountsAccount) string { return v.Description }).(pulumi.StringOutput)
}

// Account ID.
func (o GetDcsAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Account status.
func (o GetDcsAccountsAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsAccountsAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetDcsAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetDcsAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDcsAccountsAccount)(nil)).Elem()
}

func (o GetDcsAccountsAccountArrayOutput) ToGetDcsAccountsAccountArrayOutput() GetDcsAccountsAccountArrayOutput {
	return o
}

func (o GetDcsAccountsAccountArrayOutput) ToGetDcsAccountsAccountArrayOutputWithContext(ctx context.Context) GetDcsAccountsAccountArrayOutput {
	return o
}

func (o GetDcsAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetDcsAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDcsAccountsAccount {
		return vs[0].([]GetDcsAccountsAccount)[vs[1].(int)]
	}).(GetDcsAccountsAccountOutput)
}

type GetDcsFlavorsFlavor struct {
	AvailableZones  []string `pulumi:"availableZones"`
	CacheMode       string   `pulumi:"cacheMode"`
	Capacity        float64  `pulumi:"capacity"`
	ChargingModes   []string `pulumi:"chargingModes"`
	CpuArchitecture string   `pulumi:"cpuArchitecture"`
	Engine          string   `pulumi:"engine"`
	EngineVersions  string   `pulumi:"engineVersions"`
	IpCount         int      `pulumi:"ipCount"`
	Name            string   `pulumi:"name"`
}

// GetDcsFlavorsFlavorInput is an input type that accepts GetDcsFlavorsFlavorArgs and GetDcsFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetDcsFlavorsFlavorInput` via:
//
//	GetDcsFlavorsFlavorArgs{...}
type GetDcsFlavorsFlavorInput interface {
	pulumi.Input

	ToGetDcsFlavorsFlavorOutput() GetDcsFlavorsFlavorOutput
	ToGetDcsFlavorsFlavorOutputWithContext(context.Context) GetDcsFlavorsFlavorOutput
}

type GetDcsFlavorsFlavorArgs struct {
	AvailableZones  pulumi.StringArrayInput `pulumi:"availableZones"`
	CacheMode       pulumi.StringInput      `pulumi:"cacheMode"`
	Capacity        pulumi.Float64Input     `pulumi:"capacity"`
	ChargingModes   pulumi.StringArrayInput `pulumi:"chargingModes"`
	CpuArchitecture pulumi.StringInput      `pulumi:"cpuArchitecture"`
	Engine          pulumi.StringInput      `pulumi:"engine"`
	EngineVersions  pulumi.StringInput      `pulumi:"engineVersions"`
	IpCount         pulumi.IntInput         `pulumi:"ipCount"`
	Name            pulumi.StringInput      `pulumi:"name"`
}

func (GetDcsFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDcsFlavorsFlavor)(nil)).Elem()
}

func (i GetDcsFlavorsFlavorArgs) ToGetDcsFlavorsFlavorOutput() GetDcsFlavorsFlavorOutput {
	return i.ToGetDcsFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetDcsFlavorsFlavorArgs) ToGetDcsFlavorsFlavorOutputWithContext(ctx context.Context) GetDcsFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDcsFlavorsFlavorOutput)
}

// GetDcsFlavorsFlavorArrayInput is an input type that accepts GetDcsFlavorsFlavorArray and GetDcsFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetDcsFlavorsFlavorArrayInput` via:
//
//	GetDcsFlavorsFlavorArray{ GetDcsFlavorsFlavorArgs{...} }
type GetDcsFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetDcsFlavorsFlavorArrayOutput() GetDcsFlavorsFlavorArrayOutput
	ToGetDcsFlavorsFlavorArrayOutputWithContext(context.Context) GetDcsFlavorsFlavorArrayOutput
}

type GetDcsFlavorsFlavorArray []GetDcsFlavorsFlavorInput

func (GetDcsFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDcsFlavorsFlavor)(nil)).Elem()
}

func (i GetDcsFlavorsFlavorArray) ToGetDcsFlavorsFlavorArrayOutput() GetDcsFlavorsFlavorArrayOutput {
	return i.ToGetDcsFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetDcsFlavorsFlavorArray) ToGetDcsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDcsFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDcsFlavorsFlavorArrayOutput)
}

type GetDcsFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetDcsFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDcsFlavorsFlavor)(nil)).Elem()
}

func (o GetDcsFlavorsFlavorOutput) ToGetDcsFlavorsFlavorOutput() GetDcsFlavorsFlavorOutput {
	return o
}

func (o GetDcsFlavorsFlavorOutput) ToGetDcsFlavorsFlavorOutputWithContext(ctx context.Context) GetDcsFlavorsFlavorOutput {
	return o
}

func (o GetDcsFlavorsFlavorOutput) AvailableZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) []string { return v.AvailableZones }).(pulumi.StringArrayOutput)
}

func (o GetDcsFlavorsFlavorOutput) CacheMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) string { return v.CacheMode }).(pulumi.StringOutput)
}

func (o GetDcsFlavorsFlavorOutput) Capacity() pulumi.Float64Output {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) float64 { return v.Capacity }).(pulumi.Float64Output)
}

func (o GetDcsFlavorsFlavorOutput) ChargingModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) []string { return v.ChargingModes }).(pulumi.StringArrayOutput)
}

func (o GetDcsFlavorsFlavorOutput) CpuArchitecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) string { return v.CpuArchitecture }).(pulumi.StringOutput)
}

func (o GetDcsFlavorsFlavorOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) string { return v.Engine }).(pulumi.StringOutput)
}

func (o GetDcsFlavorsFlavorOutput) EngineVersions() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) string { return v.EngineVersions }).(pulumi.StringOutput)
}

func (o GetDcsFlavorsFlavorOutput) IpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) int { return v.IpCount }).(pulumi.IntOutput)
}

func (o GetDcsFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDcsFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

type GetDcsFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetDcsFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDcsFlavorsFlavor)(nil)).Elem()
}

func (o GetDcsFlavorsFlavorArrayOutput) ToGetDcsFlavorsFlavorArrayOutput() GetDcsFlavorsFlavorArrayOutput {
	return o
}

func (o GetDcsFlavorsFlavorArrayOutput) ToGetDcsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDcsFlavorsFlavorArrayOutput {
	return o
}

func (o GetDcsFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetDcsFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDcsFlavorsFlavor {
		return vs[0].([]GetDcsFlavorsFlavor)[vs[1].(int)]
	}).(GetDcsFlavorsFlavorOutput)
}

type GetDdsFlavorsFlavor struct {
	Memory   string `pulumi:"memory"`
	SpecCode string `pulumi:"specCode"`
	Type     string `pulumi:"type"`
	Vcpus    string `pulumi:"vcpus"`
}

// GetDdsFlavorsFlavorInput is an input type that accepts GetDdsFlavorsFlavorArgs and GetDdsFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetDdsFlavorsFlavorInput` via:
//
//	GetDdsFlavorsFlavorArgs{...}
type GetDdsFlavorsFlavorInput interface {
	pulumi.Input

	ToGetDdsFlavorsFlavorOutput() GetDdsFlavorsFlavorOutput
	ToGetDdsFlavorsFlavorOutputWithContext(context.Context) GetDdsFlavorsFlavorOutput
}

type GetDdsFlavorsFlavorArgs struct {
	Memory   pulumi.StringInput `pulumi:"memory"`
	SpecCode pulumi.StringInput `pulumi:"specCode"`
	Type     pulumi.StringInput `pulumi:"type"`
	Vcpus    pulumi.StringInput `pulumi:"vcpus"`
}

func (GetDdsFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdsFlavorsFlavor)(nil)).Elem()
}

func (i GetDdsFlavorsFlavorArgs) ToGetDdsFlavorsFlavorOutput() GetDdsFlavorsFlavorOutput {
	return i.ToGetDdsFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetDdsFlavorsFlavorArgs) ToGetDdsFlavorsFlavorOutputWithContext(ctx context.Context) GetDdsFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdsFlavorsFlavorOutput)
}

// GetDdsFlavorsFlavorArrayInput is an input type that accepts GetDdsFlavorsFlavorArray and GetDdsFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetDdsFlavorsFlavorArrayInput` via:
//
//	GetDdsFlavorsFlavorArray{ GetDdsFlavorsFlavorArgs{...} }
type GetDdsFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetDdsFlavorsFlavorArrayOutput() GetDdsFlavorsFlavorArrayOutput
	ToGetDdsFlavorsFlavorArrayOutputWithContext(context.Context) GetDdsFlavorsFlavorArrayOutput
}

type GetDdsFlavorsFlavorArray []GetDdsFlavorsFlavorInput

func (GetDdsFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdsFlavorsFlavor)(nil)).Elem()
}

func (i GetDdsFlavorsFlavorArray) ToGetDdsFlavorsFlavorArrayOutput() GetDdsFlavorsFlavorArrayOutput {
	return i.ToGetDdsFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetDdsFlavorsFlavorArray) ToGetDdsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDdsFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdsFlavorsFlavorArrayOutput)
}

type GetDdsFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetDdsFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdsFlavorsFlavor)(nil)).Elem()
}

func (o GetDdsFlavorsFlavorOutput) ToGetDdsFlavorsFlavorOutput() GetDdsFlavorsFlavorOutput {
	return o
}

func (o GetDdsFlavorsFlavorOutput) ToGetDdsFlavorsFlavorOutputWithContext(ctx context.Context) GetDdsFlavorsFlavorOutput {
	return o
}

func (o GetDdsFlavorsFlavorOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdsFlavorsFlavor) string { return v.Memory }).(pulumi.StringOutput)
}

func (o GetDdsFlavorsFlavorOutput) SpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdsFlavorsFlavor) string { return v.SpecCode }).(pulumi.StringOutput)
}

func (o GetDdsFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdsFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDdsFlavorsFlavorOutput) Vcpus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdsFlavorsFlavor) string { return v.Vcpus }).(pulumi.StringOutput)
}

type GetDdsFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetDdsFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdsFlavorsFlavor)(nil)).Elem()
}

func (o GetDdsFlavorsFlavorArrayOutput) ToGetDdsFlavorsFlavorArrayOutput() GetDdsFlavorsFlavorArrayOutput {
	return o
}

func (o GetDdsFlavorsFlavorArrayOutput) ToGetDdsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDdsFlavorsFlavorArrayOutput {
	return o
}

func (o GetDdsFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetDdsFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdsFlavorsFlavor {
		return vs[0].([]GetDdsFlavorsFlavor)[vs[1].(int)]
	}).(GetDdsFlavorsFlavorOutput)
}

type GetDmsKafkaFlavorsFlavor struct {
	ArchTypes       []string                                 `pulumi:"archTypes"`
	ChargingModes   []string                                 `pulumi:"chargingModes"`
	Id              string                                   `pulumi:"id"`
	Ios             []GetDmsKafkaFlavorsFlavorIo             `pulumi:"ios"`
	Properties      []GetDmsKafkaFlavorsFlavorProperty       `pulumi:"properties"`
	SupportFeatures []GetDmsKafkaFlavorsFlavorSupportFeature `pulumi:"supportFeatures"`
	Type            string                                   `pulumi:"type"`
	VmSpecification string                                   `pulumi:"vmSpecification"`
}

// GetDmsKafkaFlavorsFlavorInput is an input type that accepts GetDmsKafkaFlavorsFlavorArgs and GetDmsKafkaFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorInput` via:
//
//	GetDmsKafkaFlavorsFlavorArgs{...}
type GetDmsKafkaFlavorsFlavorInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorOutput() GetDmsKafkaFlavorsFlavorOutput
	ToGetDmsKafkaFlavorsFlavorOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorOutput
}

type GetDmsKafkaFlavorsFlavorArgs struct {
	ArchTypes       pulumi.StringArrayInput                          `pulumi:"archTypes"`
	ChargingModes   pulumi.StringArrayInput                          `pulumi:"chargingModes"`
	Id              pulumi.StringInput                               `pulumi:"id"`
	Ios             GetDmsKafkaFlavorsFlavorIoArrayInput             `pulumi:"ios"`
	Properties      GetDmsKafkaFlavorsFlavorPropertyArrayInput       `pulumi:"properties"`
	SupportFeatures GetDmsKafkaFlavorsFlavorSupportFeatureArrayInput `pulumi:"supportFeatures"`
	Type            pulumi.StringInput                               `pulumi:"type"`
	VmSpecification pulumi.StringInput                               `pulumi:"vmSpecification"`
}

func (GetDmsKafkaFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavor)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorArgs) ToGetDmsKafkaFlavorsFlavorOutput() GetDmsKafkaFlavorsFlavorOutput {
	return i.ToGetDmsKafkaFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorArgs) ToGetDmsKafkaFlavorsFlavorOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorOutput)
}

// GetDmsKafkaFlavorsFlavorArrayInput is an input type that accepts GetDmsKafkaFlavorsFlavorArray and GetDmsKafkaFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorArrayInput` via:
//
//	GetDmsKafkaFlavorsFlavorArray{ GetDmsKafkaFlavorsFlavorArgs{...} }
type GetDmsKafkaFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorArrayOutput() GetDmsKafkaFlavorsFlavorArrayOutput
	ToGetDmsKafkaFlavorsFlavorArrayOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorArrayOutput
}

type GetDmsKafkaFlavorsFlavorArray []GetDmsKafkaFlavorsFlavorInput

func (GetDmsKafkaFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavor)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorArray) ToGetDmsKafkaFlavorsFlavorArrayOutput() GetDmsKafkaFlavorsFlavorArrayOutput {
	return i.ToGetDmsKafkaFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorArray) ToGetDmsKafkaFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorArrayOutput)
}

type GetDmsKafkaFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavor)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorOutput) ToGetDmsKafkaFlavorsFlavorOutput() GetDmsKafkaFlavorsFlavorOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorOutput) ToGetDmsKafkaFlavorsFlavorOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorOutput) ArchTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) []string { return v.ArchTypes }).(pulumi.StringArrayOutput)
}

func (o GetDmsKafkaFlavorsFlavorOutput) ChargingModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) []string { return v.ChargingModes }).(pulumi.StringArrayOutput)
}

func (o GetDmsKafkaFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsFlavorOutput) Ios() GetDmsKafkaFlavorsFlavorIoArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) []GetDmsKafkaFlavorsFlavorIo { return v.Ios }).(GetDmsKafkaFlavorsFlavorIoArrayOutput)
}

func (o GetDmsKafkaFlavorsFlavorOutput) Properties() GetDmsKafkaFlavorsFlavorPropertyArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) []GetDmsKafkaFlavorsFlavorProperty { return v.Properties }).(GetDmsKafkaFlavorsFlavorPropertyArrayOutput)
}

func (o GetDmsKafkaFlavorsFlavorOutput) SupportFeatures() GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) []GetDmsKafkaFlavorsFlavorSupportFeature { return v.SupportFeatures }).(GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput)
}

func (o GetDmsKafkaFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsFlavorOutput) VmSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavor) string { return v.VmSpecification }).(pulumi.StringOutput)
}

type GetDmsKafkaFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavor)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorArrayOutput) ToGetDmsKafkaFlavorsFlavorArrayOutput() GetDmsKafkaFlavorsFlavorArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorArrayOutput) ToGetDmsKafkaFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaFlavorsFlavor {
		return vs[0].([]GetDmsKafkaFlavorsFlavor)[vs[1].(int)]
	}).(GetDmsKafkaFlavorsFlavorOutput)
}

type GetDmsKafkaFlavorsFlavorIo struct {
	AvailabilityZones   []string `pulumi:"availabilityZones"`
	StorageSpecCode     string   `pulumi:"storageSpecCode"`
	Type                string   `pulumi:"type"`
	UnavailabilityZones []string `pulumi:"unavailabilityZones"`
}

// GetDmsKafkaFlavorsFlavorIoInput is an input type that accepts GetDmsKafkaFlavorsFlavorIoArgs and GetDmsKafkaFlavorsFlavorIoOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorIoInput` via:
//
//	GetDmsKafkaFlavorsFlavorIoArgs{...}
type GetDmsKafkaFlavorsFlavorIoInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorIoOutput() GetDmsKafkaFlavorsFlavorIoOutput
	ToGetDmsKafkaFlavorsFlavorIoOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorIoOutput
}

type GetDmsKafkaFlavorsFlavorIoArgs struct {
	AvailabilityZones   pulumi.StringArrayInput `pulumi:"availabilityZones"`
	StorageSpecCode     pulumi.StringInput      `pulumi:"storageSpecCode"`
	Type                pulumi.StringInput      `pulumi:"type"`
	UnavailabilityZones pulumi.StringArrayInput `pulumi:"unavailabilityZones"`
}

func (GetDmsKafkaFlavorsFlavorIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorIo)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorIoArgs) ToGetDmsKafkaFlavorsFlavorIoOutput() GetDmsKafkaFlavorsFlavorIoOutput {
	return i.ToGetDmsKafkaFlavorsFlavorIoOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorIoArgs) ToGetDmsKafkaFlavorsFlavorIoOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorIoOutput)
}

// GetDmsKafkaFlavorsFlavorIoArrayInput is an input type that accepts GetDmsKafkaFlavorsFlavorIoArray and GetDmsKafkaFlavorsFlavorIoArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorIoArrayInput` via:
//
//	GetDmsKafkaFlavorsFlavorIoArray{ GetDmsKafkaFlavorsFlavorIoArgs{...} }
type GetDmsKafkaFlavorsFlavorIoArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorIoArrayOutput() GetDmsKafkaFlavorsFlavorIoArrayOutput
	ToGetDmsKafkaFlavorsFlavorIoArrayOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorIoArrayOutput
}

type GetDmsKafkaFlavorsFlavorIoArray []GetDmsKafkaFlavorsFlavorIoInput

func (GetDmsKafkaFlavorsFlavorIoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorIo)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorIoArray) ToGetDmsKafkaFlavorsFlavorIoArrayOutput() GetDmsKafkaFlavorsFlavorIoArrayOutput {
	return i.ToGetDmsKafkaFlavorsFlavorIoArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorIoArray) ToGetDmsKafkaFlavorsFlavorIoArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorIoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorIoArrayOutput)
}

type GetDmsKafkaFlavorsFlavorIoOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorIo)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorIoOutput) ToGetDmsKafkaFlavorsFlavorIoOutput() GetDmsKafkaFlavorsFlavorIoOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorIoOutput) ToGetDmsKafkaFlavorsFlavorIoOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorIoOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorIoOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorIo) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetDmsKafkaFlavorsFlavorIoOutput) StorageSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorIo) string { return v.StorageSpecCode }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsFlavorIoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorIo) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsFlavorIoOutput) UnavailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorIo) []string { return v.UnavailabilityZones }).(pulumi.StringArrayOutput)
}

type GetDmsKafkaFlavorsFlavorIoArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorIoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorIo)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorIoArrayOutput) ToGetDmsKafkaFlavorsFlavorIoArrayOutput() GetDmsKafkaFlavorsFlavorIoArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorIoArrayOutput) ToGetDmsKafkaFlavorsFlavorIoArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorIoArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorIoArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaFlavorsFlavorIoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaFlavorsFlavorIo {
		return vs[0].([]GetDmsKafkaFlavorsFlavorIo)[vs[1].(int)]
	}).(GetDmsKafkaFlavorsFlavorIoOutput)
}

type GetDmsKafkaFlavorsFlavorProperty struct {
	FlavorAlias           string `pulumi:"flavorAlias"`
	MaxBandwidthPerBroker int    `pulumi:"maxBandwidthPerBroker"`
	MaxBroker             int    `pulumi:"maxBroker"`
	MaxConsumerPerBroker  int    `pulumi:"maxConsumerPerBroker"`
	MaxPartitionPerBroker int    `pulumi:"maxPartitionPerBroker"`
	MaxStoragePerNode     int    `pulumi:"maxStoragePerNode"`
	MaxTpsPerBroker       int    `pulumi:"maxTpsPerBroker"`
	MinBroker             int    `pulumi:"minBroker"`
	MinStoragePerNode     int    `pulumi:"minStoragePerNode"`
}

// GetDmsKafkaFlavorsFlavorPropertyInput is an input type that accepts GetDmsKafkaFlavorsFlavorPropertyArgs and GetDmsKafkaFlavorsFlavorPropertyOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorPropertyInput` via:
//
//	GetDmsKafkaFlavorsFlavorPropertyArgs{...}
type GetDmsKafkaFlavorsFlavorPropertyInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorPropertyOutput() GetDmsKafkaFlavorsFlavorPropertyOutput
	ToGetDmsKafkaFlavorsFlavorPropertyOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorPropertyOutput
}

type GetDmsKafkaFlavorsFlavorPropertyArgs struct {
	FlavorAlias           pulumi.StringInput `pulumi:"flavorAlias"`
	MaxBandwidthPerBroker pulumi.IntInput    `pulumi:"maxBandwidthPerBroker"`
	MaxBroker             pulumi.IntInput    `pulumi:"maxBroker"`
	MaxConsumerPerBroker  pulumi.IntInput    `pulumi:"maxConsumerPerBroker"`
	MaxPartitionPerBroker pulumi.IntInput    `pulumi:"maxPartitionPerBroker"`
	MaxStoragePerNode     pulumi.IntInput    `pulumi:"maxStoragePerNode"`
	MaxTpsPerBroker       pulumi.IntInput    `pulumi:"maxTpsPerBroker"`
	MinBroker             pulumi.IntInput    `pulumi:"minBroker"`
	MinStoragePerNode     pulumi.IntInput    `pulumi:"minStoragePerNode"`
}

func (GetDmsKafkaFlavorsFlavorPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorProperty)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorPropertyArgs) ToGetDmsKafkaFlavorsFlavorPropertyOutput() GetDmsKafkaFlavorsFlavorPropertyOutput {
	return i.ToGetDmsKafkaFlavorsFlavorPropertyOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorPropertyArgs) ToGetDmsKafkaFlavorsFlavorPropertyOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorPropertyOutput)
}

// GetDmsKafkaFlavorsFlavorPropertyArrayInput is an input type that accepts GetDmsKafkaFlavorsFlavorPropertyArray and GetDmsKafkaFlavorsFlavorPropertyArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorPropertyArrayInput` via:
//
//	GetDmsKafkaFlavorsFlavorPropertyArray{ GetDmsKafkaFlavorsFlavorPropertyArgs{...} }
type GetDmsKafkaFlavorsFlavorPropertyArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorPropertyArrayOutput() GetDmsKafkaFlavorsFlavorPropertyArrayOutput
	ToGetDmsKafkaFlavorsFlavorPropertyArrayOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorPropertyArrayOutput
}

type GetDmsKafkaFlavorsFlavorPropertyArray []GetDmsKafkaFlavorsFlavorPropertyInput

func (GetDmsKafkaFlavorsFlavorPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorProperty)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorPropertyArray) ToGetDmsKafkaFlavorsFlavorPropertyArrayOutput() GetDmsKafkaFlavorsFlavorPropertyArrayOutput {
	return i.ToGetDmsKafkaFlavorsFlavorPropertyArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorPropertyArray) ToGetDmsKafkaFlavorsFlavorPropertyArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorPropertyArrayOutput)
}

type GetDmsKafkaFlavorsFlavorPropertyOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorProperty)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) ToGetDmsKafkaFlavorsFlavorPropertyOutput() GetDmsKafkaFlavorsFlavorPropertyOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) ToGetDmsKafkaFlavorsFlavorPropertyOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorPropertyOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) FlavorAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) string { return v.FlavorAlias }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MaxBandwidthPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MaxBandwidthPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MaxBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MaxBroker }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MaxConsumerPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MaxConsumerPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MaxPartitionPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MaxPartitionPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MaxStoragePerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MaxStoragePerNode }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MaxTpsPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MaxTpsPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MinBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MinBroker }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorPropertyOutput) MinStoragePerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorProperty) int { return v.MinStoragePerNode }).(pulumi.IntOutput)
}

type GetDmsKafkaFlavorsFlavorPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorProperty)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorPropertyArrayOutput) ToGetDmsKafkaFlavorsFlavorPropertyArrayOutput() GetDmsKafkaFlavorsFlavorPropertyArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorPropertyArrayOutput) ToGetDmsKafkaFlavorsFlavorPropertyArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorPropertyArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorPropertyArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaFlavorsFlavorPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaFlavorsFlavorProperty {
		return vs[0].([]GetDmsKafkaFlavorsFlavorProperty)[vs[1].(int)]
	}).(GetDmsKafkaFlavorsFlavorPropertyOutput)
}

type GetDmsKafkaFlavorsFlavorSupportFeature struct {
	Name       string                                           `pulumi:"name"`
	Properties []GetDmsKafkaFlavorsFlavorSupportFeatureProperty `pulumi:"properties"`
}

// GetDmsKafkaFlavorsFlavorSupportFeatureInput is an input type that accepts GetDmsKafkaFlavorsFlavorSupportFeatureArgs and GetDmsKafkaFlavorsFlavorSupportFeatureOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorSupportFeatureInput` via:
//
//	GetDmsKafkaFlavorsFlavorSupportFeatureArgs{...}
type GetDmsKafkaFlavorsFlavorSupportFeatureInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorSupportFeatureOutput() GetDmsKafkaFlavorsFlavorSupportFeatureOutput
	ToGetDmsKafkaFlavorsFlavorSupportFeatureOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorSupportFeatureOutput
}

type GetDmsKafkaFlavorsFlavorSupportFeatureArgs struct {
	Name       pulumi.StringInput                                       `pulumi:"name"`
	Properties GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayInput `pulumi:"properties"`
}

func (GetDmsKafkaFlavorsFlavorSupportFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorSupportFeatureArgs) ToGetDmsKafkaFlavorsFlavorSupportFeatureOutput() GetDmsKafkaFlavorsFlavorSupportFeatureOutput {
	return i.ToGetDmsKafkaFlavorsFlavorSupportFeatureOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorSupportFeatureArgs) ToGetDmsKafkaFlavorsFlavorSupportFeatureOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorSupportFeatureOutput)
}

// GetDmsKafkaFlavorsFlavorSupportFeatureArrayInput is an input type that accepts GetDmsKafkaFlavorsFlavorSupportFeatureArray and GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorSupportFeatureArrayInput` via:
//
//	GetDmsKafkaFlavorsFlavorSupportFeatureArray{ GetDmsKafkaFlavorsFlavorSupportFeatureArgs{...} }
type GetDmsKafkaFlavorsFlavorSupportFeatureArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput() GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput
	ToGetDmsKafkaFlavorsFlavorSupportFeatureArrayOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput
}

type GetDmsKafkaFlavorsFlavorSupportFeatureArray []GetDmsKafkaFlavorsFlavorSupportFeatureInput

func (GetDmsKafkaFlavorsFlavorSupportFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorSupportFeatureArray) ToGetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput() GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput {
	return i.ToGetDmsKafkaFlavorsFlavorSupportFeatureArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorSupportFeatureArray) ToGetDmsKafkaFlavorsFlavorSupportFeatureArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput)
}

type GetDmsKafkaFlavorsFlavorSupportFeatureOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorSupportFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorSupportFeatureOutput) ToGetDmsKafkaFlavorsFlavorSupportFeatureOutput() GetDmsKafkaFlavorsFlavorSupportFeatureOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeatureOutput) ToGetDmsKafkaFlavorsFlavorSupportFeatureOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeatureOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorSupportFeature) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDmsKafkaFlavorsFlavorSupportFeatureOutput) Properties() GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorSupportFeature) []GetDmsKafkaFlavorsFlavorSupportFeatureProperty {
		return v.Properties
	}).(GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput)
}

type GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput) ToGetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput() GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput) ToGetDmsKafkaFlavorsFlavorSupportFeatureArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaFlavorsFlavorSupportFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaFlavorsFlavorSupportFeature {
		return vs[0].([]GetDmsKafkaFlavorsFlavorSupportFeature)[vs[1].(int)]
	}).(GetDmsKafkaFlavorsFlavorSupportFeatureOutput)
}

type GetDmsKafkaFlavorsFlavorSupportFeatureProperty struct {
	MaxNode int `pulumi:"maxNode"`
	MaxTask int `pulumi:"maxTask"`
	MinNode int `pulumi:"minNode"`
	MinTask int `pulumi:"minTask"`
}

// GetDmsKafkaFlavorsFlavorSupportFeaturePropertyInput is an input type that accepts GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs and GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorSupportFeaturePropertyInput` via:
//
//	GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs{...}
type GetDmsKafkaFlavorsFlavorSupportFeaturePropertyInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput() GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput
	ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput
}

type GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs struct {
	MaxNode pulumi.IntInput `pulumi:"maxNode"`
	MaxTask pulumi.IntInput `pulumi:"maxTask"`
	MinNode pulumi.IntInput `pulumi:"minNode"`
	MinTask pulumi.IntInput `pulumi:"minTask"`
}

func (GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput() GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput {
	return i.ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput)
}

// GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayInput is an input type that accepts GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArray and GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayInput` via:
//
//	GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArray{ GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs{...} }
type GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput() GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput
	ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(context.Context) GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput
}

type GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArray []GetDmsKafkaFlavorsFlavorSupportFeaturePropertyInput

func (GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (i GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArray) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput() GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return i.ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArray) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput)
}

type GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput() GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput) MaxNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorSupportFeatureProperty) int { return v.MaxNode }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput) MaxTask() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorSupportFeatureProperty) int { return v.MaxTask }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput) MinNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorSupportFeatureProperty) int { return v.MinNode }).(pulumi.IntOutput)
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput) MinTask() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaFlavorsFlavorSupportFeatureProperty) int { return v.MinTask }).(pulumi.IntOutput)
}

type GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput() GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput) ToGetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(ctx context.Context) GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return o
}

func (o GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaFlavorsFlavorSupportFeatureProperty {
		return vs[0].([]GetDmsKafkaFlavorsFlavorSupportFeatureProperty)[vs[1].(int)]
	}).(GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput)
}

type GetDmsKafkaInstancesInstance struct {
	AccessUser               string                                       `pulumi:"accessUser"`
	AvailabilityZones        []string                                     `pulumi:"availabilityZones"`
	ConnectAddress           string                                       `pulumi:"connectAddress"`
	CrossVpcAccesses         []GetDmsKafkaInstancesInstanceCrossVpcAccess `pulumi:"crossVpcAccesses"`
	Description              string                                       `pulumi:"description"`
	Dumping                  bool                                         `pulumi:"dumping"`
	EnableAutoTopic          bool                                         `pulumi:"enableAutoTopic"`
	EnablePublicIp           bool                                         `pulumi:"enablePublicIp"`
	EnabledMechanisms        []string                                     `pulumi:"enabledMechanisms"`
	EngineVersion            string                                       `pulumi:"engineVersion"`
	EnterpriseProjectId      string                                       `pulumi:"enterpriseProjectId"`
	Id                       string                                       `pulumi:"id"`
	MaintainBegin            string                                       `pulumi:"maintainBegin"`
	MaintainEnd              string                                       `pulumi:"maintainEnd"`
	ManagementConnectAddress string                                       `pulumi:"managementConnectAddress"`
	ManagerUser              string                                       `pulumi:"managerUser"`
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress string            `pulumi:"manegementConnectAddress"`
	Name                     string            `pulumi:"name"`
	NetworkId                string            `pulumi:"networkId"`
	PartitionNum             int               `pulumi:"partitionNum"`
	Port                     int               `pulumi:"port"`
	ProductId                string            `pulumi:"productId"`
	PublicConnAddresses      string            `pulumi:"publicConnAddresses"`
	PublicIpIds              []string          `pulumi:"publicIpIds"`
	ResourceSpecCode         string            `pulumi:"resourceSpecCode"`
	RetentionPolicy          string            `pulumi:"retentionPolicy"`
	SecurityGroupId          string            `pulumi:"securityGroupId"`
	SecurityProtocol         string            `pulumi:"securityProtocol"`
	SslEnable                bool              `pulumi:"sslEnable"`
	Status                   string            `pulumi:"status"`
	StorageSpace             int               `pulumi:"storageSpace"`
	StorageSpecCode          string            `pulumi:"storageSpecCode"`
	Tags                     map[string]string `pulumi:"tags"`
	Type                     string            `pulumi:"type"`
	UsedStorageSpace         int               `pulumi:"usedStorageSpace"`
	UserId                   string            `pulumi:"userId"`
	UserName                 string            `pulumi:"userName"`
	VpcId                    string            `pulumi:"vpcId"`
}

// GetDmsKafkaInstancesInstanceInput is an input type that accepts GetDmsKafkaInstancesInstanceArgs and GetDmsKafkaInstancesInstanceOutput values.
// You can construct a concrete instance of `GetDmsKafkaInstancesInstanceInput` via:
//
//	GetDmsKafkaInstancesInstanceArgs{...}
type GetDmsKafkaInstancesInstanceInput interface {
	pulumi.Input

	ToGetDmsKafkaInstancesInstanceOutput() GetDmsKafkaInstancesInstanceOutput
	ToGetDmsKafkaInstancesInstanceOutputWithContext(context.Context) GetDmsKafkaInstancesInstanceOutput
}

type GetDmsKafkaInstancesInstanceArgs struct {
	AccessUser               pulumi.StringInput                                   `pulumi:"accessUser"`
	AvailabilityZones        pulumi.StringArrayInput                              `pulumi:"availabilityZones"`
	ConnectAddress           pulumi.StringInput                                   `pulumi:"connectAddress"`
	CrossVpcAccesses         GetDmsKafkaInstancesInstanceCrossVpcAccessArrayInput `pulumi:"crossVpcAccesses"`
	Description              pulumi.StringInput                                   `pulumi:"description"`
	Dumping                  pulumi.BoolInput                                     `pulumi:"dumping"`
	EnableAutoTopic          pulumi.BoolInput                                     `pulumi:"enableAutoTopic"`
	EnablePublicIp           pulumi.BoolInput                                     `pulumi:"enablePublicIp"`
	EnabledMechanisms        pulumi.StringArrayInput                              `pulumi:"enabledMechanisms"`
	EngineVersion            pulumi.StringInput                                   `pulumi:"engineVersion"`
	EnterpriseProjectId      pulumi.StringInput                                   `pulumi:"enterpriseProjectId"`
	Id                       pulumi.StringInput                                   `pulumi:"id"`
	MaintainBegin            pulumi.StringInput                                   `pulumi:"maintainBegin"`
	MaintainEnd              pulumi.StringInput                                   `pulumi:"maintainEnd"`
	ManagementConnectAddress pulumi.StringInput                                   `pulumi:"managementConnectAddress"`
	ManagerUser              pulumi.StringInput                                   `pulumi:"managerUser"`
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress pulumi.StringInput      `pulumi:"manegementConnectAddress"`
	Name                     pulumi.StringInput      `pulumi:"name"`
	NetworkId                pulumi.StringInput      `pulumi:"networkId"`
	PartitionNum             pulumi.IntInput         `pulumi:"partitionNum"`
	Port                     pulumi.IntInput         `pulumi:"port"`
	ProductId                pulumi.StringInput      `pulumi:"productId"`
	PublicConnAddresses      pulumi.StringInput      `pulumi:"publicConnAddresses"`
	PublicIpIds              pulumi.StringArrayInput `pulumi:"publicIpIds"`
	ResourceSpecCode         pulumi.StringInput      `pulumi:"resourceSpecCode"`
	RetentionPolicy          pulumi.StringInput      `pulumi:"retentionPolicy"`
	SecurityGroupId          pulumi.StringInput      `pulumi:"securityGroupId"`
	SecurityProtocol         pulumi.StringInput      `pulumi:"securityProtocol"`
	SslEnable                pulumi.BoolInput        `pulumi:"sslEnable"`
	Status                   pulumi.StringInput      `pulumi:"status"`
	StorageSpace             pulumi.IntInput         `pulumi:"storageSpace"`
	StorageSpecCode          pulumi.StringInput      `pulumi:"storageSpecCode"`
	Tags                     pulumi.StringMapInput   `pulumi:"tags"`
	Type                     pulumi.StringInput      `pulumi:"type"`
	UsedStorageSpace         pulumi.IntInput         `pulumi:"usedStorageSpace"`
	UserId                   pulumi.StringInput      `pulumi:"userId"`
	UserName                 pulumi.StringInput      `pulumi:"userName"`
	VpcId                    pulumi.StringInput      `pulumi:"vpcId"`
}

func (GetDmsKafkaInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaInstancesInstance)(nil)).Elem()
}

func (i GetDmsKafkaInstancesInstanceArgs) ToGetDmsKafkaInstancesInstanceOutput() GetDmsKafkaInstancesInstanceOutput {
	return i.ToGetDmsKafkaInstancesInstanceOutputWithContext(context.Background())
}

func (i GetDmsKafkaInstancesInstanceArgs) ToGetDmsKafkaInstancesInstanceOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaInstancesInstanceOutput)
}

// GetDmsKafkaInstancesInstanceArrayInput is an input type that accepts GetDmsKafkaInstancesInstanceArray and GetDmsKafkaInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaInstancesInstanceArrayInput` via:
//
//	GetDmsKafkaInstancesInstanceArray{ GetDmsKafkaInstancesInstanceArgs{...} }
type GetDmsKafkaInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaInstancesInstanceArrayOutput() GetDmsKafkaInstancesInstanceArrayOutput
	ToGetDmsKafkaInstancesInstanceArrayOutputWithContext(context.Context) GetDmsKafkaInstancesInstanceArrayOutput
}

type GetDmsKafkaInstancesInstanceArray []GetDmsKafkaInstancesInstanceInput

func (GetDmsKafkaInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaInstancesInstance)(nil)).Elem()
}

func (i GetDmsKafkaInstancesInstanceArray) ToGetDmsKafkaInstancesInstanceArrayOutput() GetDmsKafkaInstancesInstanceArrayOutput {
	return i.ToGetDmsKafkaInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaInstancesInstanceArray) ToGetDmsKafkaInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaInstancesInstanceArrayOutput)
}

type GetDmsKafkaInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaInstancesInstance)(nil)).Elem()
}

func (o GetDmsKafkaInstancesInstanceOutput) ToGetDmsKafkaInstancesInstanceOutput() GetDmsKafkaInstancesInstanceOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceOutput) ToGetDmsKafkaInstancesInstanceOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceOutput) AccessUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.AccessUser }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) ConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.ConnectAddress }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) CrossVpcAccesses() GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) []GetDmsKafkaInstancesInstanceCrossVpcAccess {
		return v.CrossVpcAccesses
	}).(GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Dumping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) bool { return v.Dumping }).(pulumi.BoolOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) EnableAutoTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) bool { return v.EnableAutoTopic }).(pulumi.BoolOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) EnablePublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) bool { return v.EnablePublicIp }).(pulumi.BoolOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) EnabledMechanisms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) []string { return v.EnabledMechanisms }).(pulumi.StringArrayOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.MaintainBegin }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.MaintainEnd }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) ManagementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.ManagementConnectAddress }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) ManagerUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.ManagerUser }).(pulumi.StringOutput)
}

// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
func (o GetDmsKafkaInstancesInstanceOutput) ManegementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.ManegementConnectAddress }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.NetworkId }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) int { return v.PartitionNum }).(pulumi.IntOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.ProductId }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) PublicConnAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.PublicConnAddresses }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) PublicIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) []string { return v.PublicIpIds }).(pulumi.StringArrayOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) ResourceSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.ResourceSpecCode }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) RetentionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.RetentionPolicy }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) SecurityProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.SecurityProtocol }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) bool { return v.SslEnable }).(pulumi.BoolOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) StorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) int { return v.StorageSpace }).(pulumi.IntOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) StorageSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.StorageSpecCode }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) UsedStorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) int { return v.UsedStorageSpace }).(pulumi.IntOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.UserId }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.UserName }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetDmsKafkaInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaInstancesInstance)(nil)).Elem()
}

func (o GetDmsKafkaInstancesInstanceArrayOutput) ToGetDmsKafkaInstancesInstanceArrayOutput() GetDmsKafkaInstancesInstanceArrayOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceArrayOutput) ToGetDmsKafkaInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceArrayOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaInstancesInstance {
		return vs[0].([]GetDmsKafkaInstancesInstance)[vs[1].(int)]
	}).(GetDmsKafkaInstancesInstanceOutput)
}

type GetDmsKafkaInstancesInstanceCrossVpcAccess struct {
	AdvertisedIp string `pulumi:"advertisedIp"`
	// Deprecated: typo in lisenter_ip, please use "listenerIp" instead.
	LisenterIp string `pulumi:"lisenterIp"`
	ListenerIp string `pulumi:"listenerIp"`
	Port       int    `pulumi:"port"`
	PortId     string `pulumi:"portId"`
}

// GetDmsKafkaInstancesInstanceCrossVpcAccessInput is an input type that accepts GetDmsKafkaInstancesInstanceCrossVpcAccessArgs and GetDmsKafkaInstancesInstanceCrossVpcAccessOutput values.
// You can construct a concrete instance of `GetDmsKafkaInstancesInstanceCrossVpcAccessInput` via:
//
//	GetDmsKafkaInstancesInstanceCrossVpcAccessArgs{...}
type GetDmsKafkaInstancesInstanceCrossVpcAccessInput interface {
	pulumi.Input

	ToGetDmsKafkaInstancesInstanceCrossVpcAccessOutput() GetDmsKafkaInstancesInstanceCrossVpcAccessOutput
	ToGetDmsKafkaInstancesInstanceCrossVpcAccessOutputWithContext(context.Context) GetDmsKafkaInstancesInstanceCrossVpcAccessOutput
}

type GetDmsKafkaInstancesInstanceCrossVpcAccessArgs struct {
	AdvertisedIp pulumi.StringInput `pulumi:"advertisedIp"`
	// Deprecated: typo in lisenter_ip, please use "listenerIp" instead.
	LisenterIp pulumi.StringInput `pulumi:"lisenterIp"`
	ListenerIp pulumi.StringInput `pulumi:"listenerIp"`
	Port       pulumi.IntInput    `pulumi:"port"`
	PortId     pulumi.StringInput `pulumi:"portId"`
}

func (GetDmsKafkaInstancesInstanceCrossVpcAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaInstancesInstanceCrossVpcAccess)(nil)).Elem()
}

func (i GetDmsKafkaInstancesInstanceCrossVpcAccessArgs) ToGetDmsKafkaInstancesInstanceCrossVpcAccessOutput() GetDmsKafkaInstancesInstanceCrossVpcAccessOutput {
	return i.ToGetDmsKafkaInstancesInstanceCrossVpcAccessOutputWithContext(context.Background())
}

func (i GetDmsKafkaInstancesInstanceCrossVpcAccessArgs) ToGetDmsKafkaInstancesInstanceCrossVpcAccessOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceCrossVpcAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaInstancesInstanceCrossVpcAccessOutput)
}

// GetDmsKafkaInstancesInstanceCrossVpcAccessArrayInput is an input type that accepts GetDmsKafkaInstancesInstanceCrossVpcAccessArray and GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaInstancesInstanceCrossVpcAccessArrayInput` via:
//
//	GetDmsKafkaInstancesInstanceCrossVpcAccessArray{ GetDmsKafkaInstancesInstanceCrossVpcAccessArgs{...} }
type GetDmsKafkaInstancesInstanceCrossVpcAccessArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput() GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput
	ToGetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutputWithContext(context.Context) GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput
}

type GetDmsKafkaInstancesInstanceCrossVpcAccessArray []GetDmsKafkaInstancesInstanceCrossVpcAccessInput

func (GetDmsKafkaInstancesInstanceCrossVpcAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaInstancesInstanceCrossVpcAccess)(nil)).Elem()
}

func (i GetDmsKafkaInstancesInstanceCrossVpcAccessArray) ToGetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput() GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput {
	return i.ToGetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaInstancesInstanceCrossVpcAccessArray) ToGetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput)
}

type GetDmsKafkaInstancesInstanceCrossVpcAccessOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaInstancesInstanceCrossVpcAccess)(nil)).Elem()
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) ToGetDmsKafkaInstancesInstanceCrossVpcAccessOutput() GetDmsKafkaInstancesInstanceCrossVpcAccessOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) ToGetDmsKafkaInstancesInstanceCrossVpcAccessOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceCrossVpcAccessOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) AdvertisedIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstanceCrossVpcAccess) string { return v.AdvertisedIp }).(pulumi.StringOutput)
}

// Deprecated: typo in lisenter_ip, please use "listenerIp" instead.
func (o GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) LisenterIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstanceCrossVpcAccess) string { return v.LisenterIp }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) ListenerIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstanceCrossVpcAccess) string { return v.ListenerIp }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstanceCrossVpcAccess) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesInstanceCrossVpcAccess) string { return v.PortId }).(pulumi.StringOutput)
}

type GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaInstancesInstanceCrossVpcAccess)(nil)).Elem()
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput) ToGetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput() GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput) ToGetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutputWithContext(ctx context.Context) GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput {
	return o
}

func (o GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaInstancesInstanceCrossVpcAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaInstancesInstanceCrossVpcAccess {
		return vs[0].([]GetDmsKafkaInstancesInstanceCrossVpcAccess)[vs[1].(int)]
	}).(GetDmsKafkaInstancesInstanceCrossVpcAccessOutput)
}

type GetDmsKafkaMessagesMessage struct {
	// Indicates the application ID.
	AppId string `pulumi:"appId"`
	// Indicates the big data flag.
	HugeMessage bool `pulumi:"hugeMessage"`
	// Indicates the message key.
	Key string `pulumi:"key"`
	// Indicates the message ID.
	MessageId string `pulumi:"messageId"`
	// Indicates the message offset.
	MessageOffset int `pulumi:"messageOffset"`
	// Indicates the partition where the message is located.
	Partition int `pulumi:"partition"`
	// Indicates the message size.
	Size int `pulumi:"size"`
	// Indicates the message label.
	Tag string `pulumi:"tag"`
	// Indicates the message production time.
	Timestamp string `pulumi:"timestamp"`
	// Indicates the message content.
	Value string `pulumi:"value"`
}

// GetDmsKafkaMessagesMessageInput is an input type that accepts GetDmsKafkaMessagesMessageArgs and GetDmsKafkaMessagesMessageOutput values.
// You can construct a concrete instance of `GetDmsKafkaMessagesMessageInput` via:
//
//	GetDmsKafkaMessagesMessageArgs{...}
type GetDmsKafkaMessagesMessageInput interface {
	pulumi.Input

	ToGetDmsKafkaMessagesMessageOutput() GetDmsKafkaMessagesMessageOutput
	ToGetDmsKafkaMessagesMessageOutputWithContext(context.Context) GetDmsKafkaMessagesMessageOutput
}

type GetDmsKafkaMessagesMessageArgs struct {
	// Indicates the application ID.
	AppId pulumi.StringInput `pulumi:"appId"`
	// Indicates the big data flag.
	HugeMessage pulumi.BoolInput `pulumi:"hugeMessage"`
	// Indicates the message key.
	Key pulumi.StringInput `pulumi:"key"`
	// Indicates the message ID.
	MessageId pulumi.StringInput `pulumi:"messageId"`
	// Indicates the message offset.
	MessageOffset pulumi.IntInput `pulumi:"messageOffset"`
	// Indicates the partition where the message is located.
	Partition pulumi.IntInput `pulumi:"partition"`
	// Indicates the message size.
	Size pulumi.IntInput `pulumi:"size"`
	// Indicates the message label.
	Tag pulumi.StringInput `pulumi:"tag"`
	// Indicates the message production time.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
	// Indicates the message content.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDmsKafkaMessagesMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaMessagesMessage)(nil)).Elem()
}

func (i GetDmsKafkaMessagesMessageArgs) ToGetDmsKafkaMessagesMessageOutput() GetDmsKafkaMessagesMessageOutput {
	return i.ToGetDmsKafkaMessagesMessageOutputWithContext(context.Background())
}

func (i GetDmsKafkaMessagesMessageArgs) ToGetDmsKafkaMessagesMessageOutputWithContext(ctx context.Context) GetDmsKafkaMessagesMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaMessagesMessageOutput)
}

// GetDmsKafkaMessagesMessageArrayInput is an input type that accepts GetDmsKafkaMessagesMessageArray and GetDmsKafkaMessagesMessageArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaMessagesMessageArrayInput` via:
//
//	GetDmsKafkaMessagesMessageArray{ GetDmsKafkaMessagesMessageArgs{...} }
type GetDmsKafkaMessagesMessageArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaMessagesMessageArrayOutput() GetDmsKafkaMessagesMessageArrayOutput
	ToGetDmsKafkaMessagesMessageArrayOutputWithContext(context.Context) GetDmsKafkaMessagesMessageArrayOutput
}

type GetDmsKafkaMessagesMessageArray []GetDmsKafkaMessagesMessageInput

func (GetDmsKafkaMessagesMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaMessagesMessage)(nil)).Elem()
}

func (i GetDmsKafkaMessagesMessageArray) ToGetDmsKafkaMessagesMessageArrayOutput() GetDmsKafkaMessagesMessageArrayOutput {
	return i.ToGetDmsKafkaMessagesMessageArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaMessagesMessageArray) ToGetDmsKafkaMessagesMessageArrayOutputWithContext(ctx context.Context) GetDmsKafkaMessagesMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaMessagesMessageArrayOutput)
}

type GetDmsKafkaMessagesMessageOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaMessagesMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaMessagesMessage)(nil)).Elem()
}

func (o GetDmsKafkaMessagesMessageOutput) ToGetDmsKafkaMessagesMessageOutput() GetDmsKafkaMessagesMessageOutput {
	return o
}

func (o GetDmsKafkaMessagesMessageOutput) ToGetDmsKafkaMessagesMessageOutputWithContext(ctx context.Context) GetDmsKafkaMessagesMessageOutput {
	return o
}

// Indicates the application ID.
func (o GetDmsKafkaMessagesMessageOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) string { return v.AppId }).(pulumi.StringOutput)
}

// Indicates the big data flag.
func (o GetDmsKafkaMessagesMessageOutput) HugeMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) bool { return v.HugeMessage }).(pulumi.BoolOutput)
}

// Indicates the message key.
func (o GetDmsKafkaMessagesMessageOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) string { return v.Key }).(pulumi.StringOutput)
}

// Indicates the message ID.
func (o GetDmsKafkaMessagesMessageOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) string { return v.MessageId }).(pulumi.StringOutput)
}

// Indicates the message offset.
func (o GetDmsKafkaMessagesMessageOutput) MessageOffset() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) int { return v.MessageOffset }).(pulumi.IntOutput)
}

// Indicates the partition where the message is located.
func (o GetDmsKafkaMessagesMessageOutput) Partition() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) int { return v.Partition }).(pulumi.IntOutput)
}

// Indicates the message size.
func (o GetDmsKafkaMessagesMessageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) int { return v.Size }).(pulumi.IntOutput)
}

// Indicates the message label.
func (o GetDmsKafkaMessagesMessageOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) string { return v.Tag }).(pulumi.StringOutput)
}

// Indicates the message production time.
func (o GetDmsKafkaMessagesMessageOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Indicates the message content.
func (o GetDmsKafkaMessagesMessageOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaMessagesMessage) string { return v.Value }).(pulumi.StringOutput)
}

type GetDmsKafkaMessagesMessageArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaMessagesMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaMessagesMessage)(nil)).Elem()
}

func (o GetDmsKafkaMessagesMessageArrayOutput) ToGetDmsKafkaMessagesMessageArrayOutput() GetDmsKafkaMessagesMessageArrayOutput {
	return o
}

func (o GetDmsKafkaMessagesMessageArrayOutput) ToGetDmsKafkaMessagesMessageArrayOutputWithContext(ctx context.Context) GetDmsKafkaMessagesMessageArrayOutput {
	return o
}

func (o GetDmsKafkaMessagesMessageArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaMessagesMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaMessagesMessage {
		return vs[0].([]GetDmsKafkaMessagesMessage)[vs[1].(int)]
	}).(GetDmsKafkaMessagesMessageOutput)
}

type GetDmsKafkaUsersUser struct {
	// Indicates the create time.
	CreatedAt string `pulumi:"createdAt"`
	// Indicates whether the application is the default application.
	DefaultApp bool `pulumi:"defaultApp"`
	// Indicates the description.
	Description string `pulumi:"description"`
	// Indicates the username.
	Name string `pulumi:"name"`
	// Indicates the user role.
	Role string `pulumi:"role"`
}

// GetDmsKafkaUsersUserInput is an input type that accepts GetDmsKafkaUsersUserArgs and GetDmsKafkaUsersUserOutput values.
// You can construct a concrete instance of `GetDmsKafkaUsersUserInput` via:
//
//	GetDmsKafkaUsersUserArgs{...}
type GetDmsKafkaUsersUserInput interface {
	pulumi.Input

	ToGetDmsKafkaUsersUserOutput() GetDmsKafkaUsersUserOutput
	ToGetDmsKafkaUsersUserOutputWithContext(context.Context) GetDmsKafkaUsersUserOutput
}

type GetDmsKafkaUsersUserArgs struct {
	// Indicates the create time.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Indicates whether the application is the default application.
	DefaultApp pulumi.BoolInput `pulumi:"defaultApp"`
	// Indicates the description.
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates the username.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the user role.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetDmsKafkaUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaUsersUser)(nil)).Elem()
}

func (i GetDmsKafkaUsersUserArgs) ToGetDmsKafkaUsersUserOutput() GetDmsKafkaUsersUserOutput {
	return i.ToGetDmsKafkaUsersUserOutputWithContext(context.Background())
}

func (i GetDmsKafkaUsersUserArgs) ToGetDmsKafkaUsersUserOutputWithContext(ctx context.Context) GetDmsKafkaUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaUsersUserOutput)
}

// GetDmsKafkaUsersUserArrayInput is an input type that accepts GetDmsKafkaUsersUserArray and GetDmsKafkaUsersUserArrayOutput values.
// You can construct a concrete instance of `GetDmsKafkaUsersUserArrayInput` via:
//
//	GetDmsKafkaUsersUserArray{ GetDmsKafkaUsersUserArgs{...} }
type GetDmsKafkaUsersUserArrayInput interface {
	pulumi.Input

	ToGetDmsKafkaUsersUserArrayOutput() GetDmsKafkaUsersUserArrayOutput
	ToGetDmsKafkaUsersUserArrayOutputWithContext(context.Context) GetDmsKafkaUsersUserArrayOutput
}

type GetDmsKafkaUsersUserArray []GetDmsKafkaUsersUserInput

func (GetDmsKafkaUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaUsersUser)(nil)).Elem()
}

func (i GetDmsKafkaUsersUserArray) ToGetDmsKafkaUsersUserArrayOutput() GetDmsKafkaUsersUserArrayOutput {
	return i.ToGetDmsKafkaUsersUserArrayOutputWithContext(context.Background())
}

func (i GetDmsKafkaUsersUserArray) ToGetDmsKafkaUsersUserArrayOutputWithContext(ctx context.Context) GetDmsKafkaUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsKafkaUsersUserArrayOutput)
}

type GetDmsKafkaUsersUserOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaUsersUser)(nil)).Elem()
}

func (o GetDmsKafkaUsersUserOutput) ToGetDmsKafkaUsersUserOutput() GetDmsKafkaUsersUserOutput {
	return o
}

func (o GetDmsKafkaUsersUserOutput) ToGetDmsKafkaUsersUserOutputWithContext(ctx context.Context) GetDmsKafkaUsersUserOutput {
	return o
}

// Indicates the create time.
func (o GetDmsKafkaUsersUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersUser) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates whether the application is the default application.
func (o GetDmsKafkaUsersUserOutput) DefaultApp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersUser) bool { return v.DefaultApp }).(pulumi.BoolOutput)
}

// Indicates the description.
func (o GetDmsKafkaUsersUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersUser) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates the username.
func (o GetDmsKafkaUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the user role.
func (o GetDmsKafkaUsersUserOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersUser) string { return v.Role }).(pulumi.StringOutput)
}

type GetDmsKafkaUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsKafkaUsersUser)(nil)).Elem()
}

func (o GetDmsKafkaUsersUserArrayOutput) ToGetDmsKafkaUsersUserArrayOutput() GetDmsKafkaUsersUserArrayOutput {
	return o
}

func (o GetDmsKafkaUsersUserArrayOutput) ToGetDmsKafkaUsersUserArrayOutputWithContext(ctx context.Context) GetDmsKafkaUsersUserArrayOutput {
	return o
}

func (o GetDmsKafkaUsersUserArrayOutput) Index(i pulumi.IntInput) GetDmsKafkaUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsKafkaUsersUser {
		return vs[0].([]GetDmsKafkaUsersUser)[vs[1].(int)]
	}).(GetDmsKafkaUsersUserOutput)
}

type GetDmsRabbitmqFlavorsFlavor struct {
	ArchTypes       []string                                    `pulumi:"archTypes"`
	ChargingModes   []string                                    `pulumi:"chargingModes"`
	Id              string                                      `pulumi:"id"`
	Ios             []GetDmsRabbitmqFlavorsFlavorIo             `pulumi:"ios"`
	Properties      []GetDmsRabbitmqFlavorsFlavorProperty       `pulumi:"properties"`
	SupportFeatures []GetDmsRabbitmqFlavorsFlavorSupportFeature `pulumi:"supportFeatures"`
	Type            string                                      `pulumi:"type"`
	VmSpecification string                                      `pulumi:"vmSpecification"`
}

// GetDmsRabbitmqFlavorsFlavorInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorArgs and GetDmsRabbitmqFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorArgs{...}
type GetDmsRabbitmqFlavorsFlavorInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorOutput() GetDmsRabbitmqFlavorsFlavorOutput
	ToGetDmsRabbitmqFlavorsFlavorOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorOutput
}

type GetDmsRabbitmqFlavorsFlavorArgs struct {
	ArchTypes       pulumi.StringArrayInput                             `pulumi:"archTypes"`
	ChargingModes   pulumi.StringArrayInput                             `pulumi:"chargingModes"`
	Id              pulumi.StringInput                                  `pulumi:"id"`
	Ios             GetDmsRabbitmqFlavorsFlavorIoArrayInput             `pulumi:"ios"`
	Properties      GetDmsRabbitmqFlavorsFlavorPropertyArrayInput       `pulumi:"properties"`
	SupportFeatures GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayInput `pulumi:"supportFeatures"`
	Type            pulumi.StringInput                                  `pulumi:"type"`
	VmSpecification pulumi.StringInput                                  `pulumi:"vmSpecification"`
}

func (GetDmsRabbitmqFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavor)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorArgs) ToGetDmsRabbitmqFlavorsFlavorOutput() GetDmsRabbitmqFlavorsFlavorOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorArgs) ToGetDmsRabbitmqFlavorsFlavorOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorOutput)
}

// GetDmsRabbitmqFlavorsFlavorArrayInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorArray and GetDmsRabbitmqFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorArrayInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorArray{ GetDmsRabbitmqFlavorsFlavorArgs{...} }
type GetDmsRabbitmqFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorArrayOutput() GetDmsRabbitmqFlavorsFlavorArrayOutput
	ToGetDmsRabbitmqFlavorsFlavorArrayOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorArrayOutput
}

type GetDmsRabbitmqFlavorsFlavorArray []GetDmsRabbitmqFlavorsFlavorInput

func (GetDmsRabbitmqFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavor)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorArray) ToGetDmsRabbitmqFlavorsFlavorArrayOutput() GetDmsRabbitmqFlavorsFlavorArrayOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorArray) ToGetDmsRabbitmqFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorArrayOutput)
}

type GetDmsRabbitmqFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavor)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) ToGetDmsRabbitmqFlavorsFlavorOutput() GetDmsRabbitmqFlavorsFlavorOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) ToGetDmsRabbitmqFlavorsFlavorOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) ArchTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) []string { return v.ArchTypes }).(pulumi.StringArrayOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) ChargingModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) []string { return v.ChargingModes }).(pulumi.StringArrayOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) Ios() GetDmsRabbitmqFlavorsFlavorIoArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) []GetDmsRabbitmqFlavorsFlavorIo { return v.Ios }).(GetDmsRabbitmqFlavorsFlavorIoArrayOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) Properties() GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) []GetDmsRabbitmqFlavorsFlavorProperty { return v.Properties }).(GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) SupportFeatures() GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) []GetDmsRabbitmqFlavorsFlavorSupportFeature {
		return v.SupportFeatures
	}).(GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorOutput) VmSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavor) string { return v.VmSpecification }).(pulumi.StringOutput)
}

type GetDmsRabbitmqFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavor)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorArrayOutput) ToGetDmsRabbitmqFlavorsFlavorArrayOutput() GetDmsRabbitmqFlavorsFlavorArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorArrayOutput) ToGetDmsRabbitmqFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetDmsRabbitmqFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsRabbitmqFlavorsFlavor {
		return vs[0].([]GetDmsRabbitmqFlavorsFlavor)[vs[1].(int)]
	}).(GetDmsRabbitmqFlavorsFlavorOutput)
}

type GetDmsRabbitmqFlavorsFlavorIo struct {
	AvailabilityZones   []string `pulumi:"availabilityZones"`
	StorageSpecCode     string   `pulumi:"storageSpecCode"`
	Type                string   `pulumi:"type"`
	UnavailabilityZones []string `pulumi:"unavailabilityZones"`
}

// GetDmsRabbitmqFlavorsFlavorIoInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorIoArgs and GetDmsRabbitmqFlavorsFlavorIoOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorIoInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorIoArgs{...}
type GetDmsRabbitmqFlavorsFlavorIoInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorIoOutput() GetDmsRabbitmqFlavorsFlavorIoOutput
	ToGetDmsRabbitmqFlavorsFlavorIoOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorIoOutput
}

type GetDmsRabbitmqFlavorsFlavorIoArgs struct {
	AvailabilityZones   pulumi.StringArrayInput `pulumi:"availabilityZones"`
	StorageSpecCode     pulumi.StringInput      `pulumi:"storageSpecCode"`
	Type                pulumi.StringInput      `pulumi:"type"`
	UnavailabilityZones pulumi.StringArrayInput `pulumi:"unavailabilityZones"`
}

func (GetDmsRabbitmqFlavorsFlavorIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorIo)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorIoArgs) ToGetDmsRabbitmqFlavorsFlavorIoOutput() GetDmsRabbitmqFlavorsFlavorIoOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorIoOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorIoArgs) ToGetDmsRabbitmqFlavorsFlavorIoOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorIoOutput)
}

// GetDmsRabbitmqFlavorsFlavorIoArrayInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorIoArray and GetDmsRabbitmqFlavorsFlavorIoArrayOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorIoArrayInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorIoArray{ GetDmsRabbitmqFlavorsFlavorIoArgs{...} }
type GetDmsRabbitmqFlavorsFlavorIoArrayInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorIoArrayOutput() GetDmsRabbitmqFlavorsFlavorIoArrayOutput
	ToGetDmsRabbitmqFlavorsFlavorIoArrayOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorIoArrayOutput
}

type GetDmsRabbitmqFlavorsFlavorIoArray []GetDmsRabbitmqFlavorsFlavorIoInput

func (GetDmsRabbitmqFlavorsFlavorIoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorIo)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorIoArray) ToGetDmsRabbitmqFlavorsFlavorIoArrayOutput() GetDmsRabbitmqFlavorsFlavorIoArrayOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorIoArrayOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorIoArray) ToGetDmsRabbitmqFlavorsFlavorIoArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorIoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorIoArrayOutput)
}

type GetDmsRabbitmqFlavorsFlavorIoOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorIo)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorIoOutput) ToGetDmsRabbitmqFlavorsFlavorIoOutput() GetDmsRabbitmqFlavorsFlavorIoOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorIoOutput) ToGetDmsRabbitmqFlavorsFlavorIoOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorIoOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorIoOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorIo) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorIoOutput) StorageSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorIo) string { return v.StorageSpecCode }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorIoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorIo) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorIoOutput) UnavailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorIo) []string { return v.UnavailabilityZones }).(pulumi.StringArrayOutput)
}

type GetDmsRabbitmqFlavorsFlavorIoArrayOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorIoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorIo)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorIoArrayOutput) ToGetDmsRabbitmqFlavorsFlavorIoArrayOutput() GetDmsRabbitmqFlavorsFlavorIoArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorIoArrayOutput) ToGetDmsRabbitmqFlavorsFlavorIoArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorIoArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorIoArrayOutput) Index(i pulumi.IntInput) GetDmsRabbitmqFlavorsFlavorIoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsRabbitmqFlavorsFlavorIo {
		return vs[0].([]GetDmsRabbitmqFlavorsFlavorIo)[vs[1].(int)]
	}).(GetDmsRabbitmqFlavorsFlavorIoOutput)
}

type GetDmsRabbitmqFlavorsFlavorProperty struct {
	FlavorAlias           string `pulumi:"flavorAlias"`
	MaxBandwidthPerBroker int    `pulumi:"maxBandwidthPerBroker"`
	MaxBroker             int    `pulumi:"maxBroker"`
	MaxConsumerPerBroker  int    `pulumi:"maxConsumerPerBroker"`
	MaxPartitionPerBroker int    `pulumi:"maxPartitionPerBroker"`
	MaxStoragePerNode     int    `pulumi:"maxStoragePerNode"`
	MaxTpsPerBroker       int    `pulumi:"maxTpsPerBroker"`
	MinBroker             int    `pulumi:"minBroker"`
	MinStoragePerNode     int    `pulumi:"minStoragePerNode"`
}

// GetDmsRabbitmqFlavorsFlavorPropertyInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorPropertyArgs and GetDmsRabbitmqFlavorsFlavorPropertyOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorPropertyInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorPropertyArgs{...}
type GetDmsRabbitmqFlavorsFlavorPropertyInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorPropertyOutput() GetDmsRabbitmqFlavorsFlavorPropertyOutput
	ToGetDmsRabbitmqFlavorsFlavorPropertyOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorPropertyOutput
}

type GetDmsRabbitmqFlavorsFlavorPropertyArgs struct {
	FlavorAlias           pulumi.StringInput `pulumi:"flavorAlias"`
	MaxBandwidthPerBroker pulumi.IntInput    `pulumi:"maxBandwidthPerBroker"`
	MaxBroker             pulumi.IntInput    `pulumi:"maxBroker"`
	MaxConsumerPerBroker  pulumi.IntInput    `pulumi:"maxConsumerPerBroker"`
	MaxPartitionPerBroker pulumi.IntInput    `pulumi:"maxPartitionPerBroker"`
	MaxStoragePerNode     pulumi.IntInput    `pulumi:"maxStoragePerNode"`
	MaxTpsPerBroker       pulumi.IntInput    `pulumi:"maxTpsPerBroker"`
	MinBroker             pulumi.IntInput    `pulumi:"minBroker"`
	MinStoragePerNode     pulumi.IntInput    `pulumi:"minStoragePerNode"`
}

func (GetDmsRabbitmqFlavorsFlavorPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorProperty)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorPropertyArgs) ToGetDmsRabbitmqFlavorsFlavorPropertyOutput() GetDmsRabbitmqFlavorsFlavorPropertyOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorPropertyOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorPropertyArgs) ToGetDmsRabbitmqFlavorsFlavorPropertyOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorPropertyOutput)
}

// GetDmsRabbitmqFlavorsFlavorPropertyArrayInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorPropertyArray and GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorPropertyArrayInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorPropertyArray{ GetDmsRabbitmqFlavorsFlavorPropertyArgs{...} }
type GetDmsRabbitmqFlavorsFlavorPropertyArrayInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorPropertyArrayOutput() GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput
	ToGetDmsRabbitmqFlavorsFlavorPropertyArrayOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput
}

type GetDmsRabbitmqFlavorsFlavorPropertyArray []GetDmsRabbitmqFlavorsFlavorPropertyInput

func (GetDmsRabbitmqFlavorsFlavorPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorProperty)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorPropertyArray) ToGetDmsRabbitmqFlavorsFlavorPropertyArrayOutput() GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorPropertyArrayOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorPropertyArray) ToGetDmsRabbitmqFlavorsFlavorPropertyArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput)
}

type GetDmsRabbitmqFlavorsFlavorPropertyOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorProperty)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) ToGetDmsRabbitmqFlavorsFlavorPropertyOutput() GetDmsRabbitmqFlavorsFlavorPropertyOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) ToGetDmsRabbitmqFlavorsFlavorPropertyOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorPropertyOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) FlavorAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) string { return v.FlavorAlias }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MaxBandwidthPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MaxBandwidthPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MaxBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MaxBroker }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MaxConsumerPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MaxConsumerPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MaxPartitionPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MaxPartitionPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MaxStoragePerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MaxStoragePerNode }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MaxTpsPerBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MaxTpsPerBroker }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MinBroker() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MinBroker }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyOutput) MinStoragePerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorProperty) int { return v.MinStoragePerNode }).(pulumi.IntOutput)
}

type GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorProperty)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput) ToGetDmsRabbitmqFlavorsFlavorPropertyArrayOutput() GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput) ToGetDmsRabbitmqFlavorsFlavorPropertyArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput) Index(i pulumi.IntInput) GetDmsRabbitmqFlavorsFlavorPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsRabbitmqFlavorsFlavorProperty {
		return vs[0].([]GetDmsRabbitmqFlavorsFlavorProperty)[vs[1].(int)]
	}).(GetDmsRabbitmqFlavorsFlavorPropertyOutput)
}

type GetDmsRabbitmqFlavorsFlavorSupportFeature struct {
	Name       string                                              `pulumi:"name"`
	Properties []GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty `pulumi:"properties"`
}

// GetDmsRabbitmqFlavorsFlavorSupportFeatureInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs and GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorSupportFeatureInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs{...}
type GetDmsRabbitmqFlavorsFlavorSupportFeatureInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorSupportFeatureOutput() GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput
	ToGetDmsRabbitmqFlavorsFlavorSupportFeatureOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput
}

type GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs struct {
	Name       pulumi.StringInput                                          `pulumi:"name"`
	Properties GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayInput `pulumi:"properties"`
}

func (GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureOutput() GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorSupportFeatureOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput)
}

// GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorSupportFeatureArray and GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorSupportFeatureArray{ GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs{...} }
type GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput() GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput
	ToGetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput
}

type GetDmsRabbitmqFlavorsFlavorSupportFeatureArray []GetDmsRabbitmqFlavorsFlavorSupportFeatureInput

func (GetDmsRabbitmqFlavorsFlavorSupportFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeatureArray) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput() GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeatureArray) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput)
}

type GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureOutput() GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorSupportFeature) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput) Properties() GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorSupportFeature) []GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty {
		return v.Properties
	}).(GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput)
}

type GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorSupportFeature)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput() GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput) Index(i pulumi.IntInput) GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsRabbitmqFlavorsFlavorSupportFeature {
		return vs[0].([]GetDmsRabbitmqFlavorsFlavorSupportFeature)[vs[1].(int)]
	}).(GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput)
}

type GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty struct {
	MaxNode int `pulumi:"maxNode"`
	MaxTask int `pulumi:"maxTask"`
	MinNode int `pulumi:"minNode"`
	MinTask int `pulumi:"minTask"`
}

// GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs and GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs{...}
type GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput() GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput
	ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput
}

type GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs struct {
	MaxNode pulumi.IntInput `pulumi:"maxNode"`
	MaxTask pulumi.IntInput `pulumi:"maxTask"`
	MinNode pulumi.IntInput `pulumi:"minNode"`
	MinTask pulumi.IntInput `pulumi:"minTask"`
}

func (GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput() GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput)
}

// GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayInput is an input type that accepts GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArray and GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput values.
// You can construct a concrete instance of `GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayInput` via:
//
//	GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArray{ GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs{...} }
type GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayInput interface {
	pulumi.Input

	ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput() GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput
	ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput
}

type GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArray []GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyInput

func (GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArray) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput() GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return i.ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(context.Background())
}

func (i GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArray) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput)
}

type GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput() GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput) MaxNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty) int { return v.MaxNode }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput) MaxTask() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty) int { return v.MaxTask }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput) MinNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty) int { return v.MinNode }).(pulumi.IntOutput)
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput) MinTask() pulumi.IntOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty) int { return v.MinTask }).(pulumi.IntOutput)
}

type GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput() GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput) ToGetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput) Index(i pulumi.IntInput) GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty {
		return vs[0].([]GetDmsRabbitmqFlavorsFlavorSupportFeatureProperty)[vs[1].(int)]
	}).(GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput)
}

type GetDwsFlavorsFlavor struct {
	// The list of availability zones.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The type of datastore.
	DatastoreType string `pulumi:"datastoreType"`
	// The version of datastore.
	DatastoreVersion string `pulumi:"datastoreVersion"`
	// The typical specification, If the volume specification is elastic.
	ElasticVolumeSpecs []GetDwsFlavorsFlavorElasticVolumeSpec `pulumi:"elasticVolumeSpecs"`
	// The name of the dws node flavor.
	FlavorId string `pulumi:"flavorId"`
	// The ram of the dws node flavor in GB.
	Memory int `pulumi:"memory"`
	// The default disk size in GB.
	Size int `pulumi:"size"`
	// The vcpus of the dws node flavor.
	Vcpus int `pulumi:"vcpus"`
	// Disk type.
	Volumetype string `pulumi:"volumetype"`
}

// GetDwsFlavorsFlavorInput is an input type that accepts GetDwsFlavorsFlavorArgs and GetDwsFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetDwsFlavorsFlavorInput` via:
//
//	GetDwsFlavorsFlavorArgs{...}
type GetDwsFlavorsFlavorInput interface {
	pulumi.Input

	ToGetDwsFlavorsFlavorOutput() GetDwsFlavorsFlavorOutput
	ToGetDwsFlavorsFlavorOutputWithContext(context.Context) GetDwsFlavorsFlavorOutput
}

type GetDwsFlavorsFlavorArgs struct {
	// The list of availability zones.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The type of datastore.
	DatastoreType pulumi.StringInput `pulumi:"datastoreType"`
	// The version of datastore.
	DatastoreVersion pulumi.StringInput `pulumi:"datastoreVersion"`
	// The typical specification, If the volume specification is elastic.
	ElasticVolumeSpecs GetDwsFlavorsFlavorElasticVolumeSpecArrayInput `pulumi:"elasticVolumeSpecs"`
	// The name of the dws node flavor.
	FlavorId pulumi.StringInput `pulumi:"flavorId"`
	// The ram of the dws node flavor in GB.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The default disk size in GB.
	Size pulumi.IntInput `pulumi:"size"`
	// The vcpus of the dws node flavor.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
	// Disk type.
	Volumetype pulumi.StringInput `pulumi:"volumetype"`
}

func (GetDwsFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDwsFlavorsFlavor)(nil)).Elem()
}

func (i GetDwsFlavorsFlavorArgs) ToGetDwsFlavorsFlavorOutput() GetDwsFlavorsFlavorOutput {
	return i.ToGetDwsFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetDwsFlavorsFlavorArgs) ToGetDwsFlavorsFlavorOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDwsFlavorsFlavorOutput)
}

// GetDwsFlavorsFlavorArrayInput is an input type that accepts GetDwsFlavorsFlavorArray and GetDwsFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetDwsFlavorsFlavorArrayInput` via:
//
//	GetDwsFlavorsFlavorArray{ GetDwsFlavorsFlavorArgs{...} }
type GetDwsFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetDwsFlavorsFlavorArrayOutput() GetDwsFlavorsFlavorArrayOutput
	ToGetDwsFlavorsFlavorArrayOutputWithContext(context.Context) GetDwsFlavorsFlavorArrayOutput
}

type GetDwsFlavorsFlavorArray []GetDwsFlavorsFlavorInput

func (GetDwsFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDwsFlavorsFlavor)(nil)).Elem()
}

func (i GetDwsFlavorsFlavorArray) ToGetDwsFlavorsFlavorArrayOutput() GetDwsFlavorsFlavorArrayOutput {
	return i.ToGetDwsFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetDwsFlavorsFlavorArray) ToGetDwsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDwsFlavorsFlavorArrayOutput)
}

type GetDwsFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetDwsFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDwsFlavorsFlavor)(nil)).Elem()
}

func (o GetDwsFlavorsFlavorOutput) ToGetDwsFlavorsFlavorOutput() GetDwsFlavorsFlavorOutput {
	return o
}

func (o GetDwsFlavorsFlavorOutput) ToGetDwsFlavorsFlavorOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorOutput {
	return o
}

// The list of availability zones.
func (o GetDwsFlavorsFlavorOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The type of datastore.
func (o GetDwsFlavorsFlavorOutput) DatastoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) string { return v.DatastoreType }).(pulumi.StringOutput)
}

// The version of datastore.
func (o GetDwsFlavorsFlavorOutput) DatastoreVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) string { return v.DatastoreVersion }).(pulumi.StringOutput)
}

// The typical specification, If the volume specification is elastic.
func (o GetDwsFlavorsFlavorOutput) ElasticVolumeSpecs() GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) []GetDwsFlavorsFlavorElasticVolumeSpec { return v.ElasticVolumeSpecs }).(GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput)
}

// The name of the dws node flavor.
func (o GetDwsFlavorsFlavorOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) string { return v.FlavorId }).(pulumi.StringOutput)
}

// The ram of the dws node flavor in GB.
func (o GetDwsFlavorsFlavorOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) int { return v.Memory }).(pulumi.IntOutput)
}

// The default disk size in GB.
func (o GetDwsFlavorsFlavorOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) int { return v.Size }).(pulumi.IntOutput)
}

// The vcpus of the dws node flavor.
func (o GetDwsFlavorsFlavorOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) int { return v.Vcpus }).(pulumi.IntOutput)
}

// Disk type.
func (o GetDwsFlavorsFlavorOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavor) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetDwsFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetDwsFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDwsFlavorsFlavor)(nil)).Elem()
}

func (o GetDwsFlavorsFlavorArrayOutput) ToGetDwsFlavorsFlavorArrayOutput() GetDwsFlavorsFlavorArrayOutput {
	return o
}

func (o GetDwsFlavorsFlavorArrayOutput) ToGetDwsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorArrayOutput {
	return o
}

func (o GetDwsFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetDwsFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDwsFlavorsFlavor {
		return vs[0].([]GetDwsFlavorsFlavor)[vs[1].(int)]
	}).(GetDwsFlavorsFlavorOutput)
}

type GetDwsFlavorsFlavorElasticVolumeSpec struct {
	// Maximum disk size.
	MaxSize int `pulumi:"maxSize"`
	// Minimum disk size.
	MinSize int `pulumi:"minSize"`
	// Disk size increment step.
	Step int `pulumi:"step"`
}

// GetDwsFlavorsFlavorElasticVolumeSpecInput is an input type that accepts GetDwsFlavorsFlavorElasticVolumeSpecArgs and GetDwsFlavorsFlavorElasticVolumeSpecOutput values.
// You can construct a concrete instance of `GetDwsFlavorsFlavorElasticVolumeSpecInput` via:
//
//	GetDwsFlavorsFlavorElasticVolumeSpecArgs{...}
type GetDwsFlavorsFlavorElasticVolumeSpecInput interface {
	pulumi.Input

	ToGetDwsFlavorsFlavorElasticVolumeSpecOutput() GetDwsFlavorsFlavorElasticVolumeSpecOutput
	ToGetDwsFlavorsFlavorElasticVolumeSpecOutputWithContext(context.Context) GetDwsFlavorsFlavorElasticVolumeSpecOutput
}

type GetDwsFlavorsFlavorElasticVolumeSpecArgs struct {
	// Maximum disk size.
	MaxSize pulumi.IntInput `pulumi:"maxSize"`
	// Minimum disk size.
	MinSize pulumi.IntInput `pulumi:"minSize"`
	// Disk size increment step.
	Step pulumi.IntInput `pulumi:"step"`
}

func (GetDwsFlavorsFlavorElasticVolumeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDwsFlavorsFlavorElasticVolumeSpec)(nil)).Elem()
}

func (i GetDwsFlavorsFlavorElasticVolumeSpecArgs) ToGetDwsFlavorsFlavorElasticVolumeSpecOutput() GetDwsFlavorsFlavorElasticVolumeSpecOutput {
	return i.ToGetDwsFlavorsFlavorElasticVolumeSpecOutputWithContext(context.Background())
}

func (i GetDwsFlavorsFlavorElasticVolumeSpecArgs) ToGetDwsFlavorsFlavorElasticVolumeSpecOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorElasticVolumeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDwsFlavorsFlavorElasticVolumeSpecOutput)
}

// GetDwsFlavorsFlavorElasticVolumeSpecArrayInput is an input type that accepts GetDwsFlavorsFlavorElasticVolumeSpecArray and GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput values.
// You can construct a concrete instance of `GetDwsFlavorsFlavorElasticVolumeSpecArrayInput` via:
//
//	GetDwsFlavorsFlavorElasticVolumeSpecArray{ GetDwsFlavorsFlavorElasticVolumeSpecArgs{...} }
type GetDwsFlavorsFlavorElasticVolumeSpecArrayInput interface {
	pulumi.Input

	ToGetDwsFlavorsFlavorElasticVolumeSpecArrayOutput() GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput
	ToGetDwsFlavorsFlavorElasticVolumeSpecArrayOutputWithContext(context.Context) GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput
}

type GetDwsFlavorsFlavorElasticVolumeSpecArray []GetDwsFlavorsFlavorElasticVolumeSpecInput

func (GetDwsFlavorsFlavorElasticVolumeSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDwsFlavorsFlavorElasticVolumeSpec)(nil)).Elem()
}

func (i GetDwsFlavorsFlavorElasticVolumeSpecArray) ToGetDwsFlavorsFlavorElasticVolumeSpecArrayOutput() GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput {
	return i.ToGetDwsFlavorsFlavorElasticVolumeSpecArrayOutputWithContext(context.Background())
}

func (i GetDwsFlavorsFlavorElasticVolumeSpecArray) ToGetDwsFlavorsFlavorElasticVolumeSpecArrayOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput)
}

type GetDwsFlavorsFlavorElasticVolumeSpecOutput struct{ *pulumi.OutputState }

func (GetDwsFlavorsFlavorElasticVolumeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDwsFlavorsFlavorElasticVolumeSpec)(nil)).Elem()
}

func (o GetDwsFlavorsFlavorElasticVolumeSpecOutput) ToGetDwsFlavorsFlavorElasticVolumeSpecOutput() GetDwsFlavorsFlavorElasticVolumeSpecOutput {
	return o
}

func (o GetDwsFlavorsFlavorElasticVolumeSpecOutput) ToGetDwsFlavorsFlavorElasticVolumeSpecOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorElasticVolumeSpecOutput {
	return o
}

// Maximum disk size.
func (o GetDwsFlavorsFlavorElasticVolumeSpecOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavorElasticVolumeSpec) int { return v.MaxSize }).(pulumi.IntOutput)
}

// Minimum disk size.
func (o GetDwsFlavorsFlavorElasticVolumeSpecOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavorElasticVolumeSpec) int { return v.MinSize }).(pulumi.IntOutput)
}

// Disk size increment step.
func (o GetDwsFlavorsFlavorElasticVolumeSpecOutput) Step() pulumi.IntOutput {
	return o.ApplyT(func(v GetDwsFlavorsFlavorElasticVolumeSpec) int { return v.Step }).(pulumi.IntOutput)
}

type GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput struct{ *pulumi.OutputState }

func (GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDwsFlavorsFlavorElasticVolumeSpec)(nil)).Elem()
}

func (o GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput) ToGetDwsFlavorsFlavorElasticVolumeSpecArrayOutput() GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput {
	return o
}

func (o GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput) ToGetDwsFlavorsFlavorElasticVolumeSpecArrayOutputWithContext(ctx context.Context) GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput {
	return o
}

func (o GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput) Index(i pulumi.IntInput) GetDwsFlavorsFlavorElasticVolumeSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDwsFlavorsFlavorElasticVolumeSpec {
		return vs[0].([]GetDwsFlavorsFlavorElasticVolumeSpec)[vs[1].(int)]
	}).(GetDwsFlavorsFlavorElasticVolumeSpecOutput)
}

type GetElbFlavorsFlavor struct {
	Bandwidth      int    `pulumi:"bandwidth"`
	Cps            int    `pulumi:"cps"`
	Id             string `pulumi:"id"`
	MaxConnections int    `pulumi:"maxConnections"`
	Name           string `pulumi:"name"`
	Qps            int    `pulumi:"qps"`
	Type           string `pulumi:"type"`
}

// GetElbFlavorsFlavorInput is an input type that accepts GetElbFlavorsFlavorArgs and GetElbFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetElbFlavorsFlavorInput` via:
//
//	GetElbFlavorsFlavorArgs{...}
type GetElbFlavorsFlavorInput interface {
	pulumi.Input

	ToGetElbFlavorsFlavorOutput() GetElbFlavorsFlavorOutput
	ToGetElbFlavorsFlavorOutputWithContext(context.Context) GetElbFlavorsFlavorOutput
}

type GetElbFlavorsFlavorArgs struct {
	Bandwidth      pulumi.IntInput    `pulumi:"bandwidth"`
	Cps            pulumi.IntInput    `pulumi:"cps"`
	Id             pulumi.StringInput `pulumi:"id"`
	MaxConnections pulumi.IntInput    `pulumi:"maxConnections"`
	Name           pulumi.StringInput `pulumi:"name"`
	Qps            pulumi.IntInput    `pulumi:"qps"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (GetElbFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbFlavorsFlavor)(nil)).Elem()
}

func (i GetElbFlavorsFlavorArgs) ToGetElbFlavorsFlavorOutput() GetElbFlavorsFlavorOutput {
	return i.ToGetElbFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetElbFlavorsFlavorArgs) ToGetElbFlavorsFlavorOutputWithContext(ctx context.Context) GetElbFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbFlavorsFlavorOutput)
}

// GetElbFlavorsFlavorArrayInput is an input type that accepts GetElbFlavorsFlavorArray and GetElbFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetElbFlavorsFlavorArrayInput` via:
//
//	GetElbFlavorsFlavorArray{ GetElbFlavorsFlavorArgs{...} }
type GetElbFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetElbFlavorsFlavorArrayOutput() GetElbFlavorsFlavorArrayOutput
	ToGetElbFlavorsFlavorArrayOutputWithContext(context.Context) GetElbFlavorsFlavorArrayOutput
}

type GetElbFlavorsFlavorArray []GetElbFlavorsFlavorInput

func (GetElbFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbFlavorsFlavor)(nil)).Elem()
}

func (i GetElbFlavorsFlavorArray) ToGetElbFlavorsFlavorArrayOutput() GetElbFlavorsFlavorArrayOutput {
	return i.ToGetElbFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetElbFlavorsFlavorArray) ToGetElbFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetElbFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbFlavorsFlavorArrayOutput)
}

type GetElbFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetElbFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbFlavorsFlavor)(nil)).Elem()
}

func (o GetElbFlavorsFlavorOutput) ToGetElbFlavorsFlavorOutput() GetElbFlavorsFlavorOutput {
	return o
}

func (o GetElbFlavorsFlavorOutput) ToGetElbFlavorsFlavorOutputWithContext(ctx context.Context) GetElbFlavorsFlavorOutput {
	return o
}

func (o GetElbFlavorsFlavorOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbFlavorsFlavor) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o GetElbFlavorsFlavorOutput) Cps() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbFlavorsFlavor) int { return v.Cps }).(pulumi.IntOutput)
}

func (o GetElbFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetElbFlavorsFlavorOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbFlavorsFlavor) int { return v.MaxConnections }).(pulumi.IntOutput)
}

func (o GetElbFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetElbFlavorsFlavorOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbFlavorsFlavor) int { return v.Qps }).(pulumi.IntOutput)
}

func (o GetElbFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

type GetElbFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetElbFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbFlavorsFlavor)(nil)).Elem()
}

func (o GetElbFlavorsFlavorArrayOutput) ToGetElbFlavorsFlavorArrayOutput() GetElbFlavorsFlavorArrayOutput {
	return o
}

func (o GetElbFlavorsFlavorArrayOutput) ToGetElbFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetElbFlavorsFlavorArrayOutput {
	return o
}

func (o GetElbFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetElbFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElbFlavorsFlavor {
		return vs[0].([]GetElbFlavorsFlavor)[vs[1].(int)]
	}).(GetElbFlavorsFlavorOutput)
}

type GetElbPoolsPool struct {
	// Whether to enable delayed logout.
	ConnectionDrainEnabled bool `pulumi:"connectionDrainEnabled"`
	// The timeout of the delayed logout in seconds.
	ConnectionDrainTimeout int `pulumi:"connectionDrainTimeout"`
	// The description of pool.
	Description string `pulumi:"description"`
	// The health monitor ID of the ELB pool.
	HealthmonitorId string `pulumi:"healthmonitorId"`
	// The pool ID.
	Id string `pulumi:"id"`
	// The IP version of pool.
	IpVersion string `pulumi:"ipVersion"`
	// The method of the ELB pool.
	LbMethod string `pulumi:"lbMethod"`
	// Listener list. For details, see Data structure of the listener field.
	Listeners []GetElbPoolsPoolListener `pulumi:"listeners"`
	// Loadbalancer list. For details, see Data structure of the loadbalancer field.
	Loadbalancers []GetElbPoolsPoolLoadbalancer `pulumi:"loadbalancers"`
	// Loadbalancer list. For details, see Data structure of the members field.
	Members []GetElbPoolsPoolMember `pulumi:"members"`
	// The timeout of the delayed logout in seconds.
	MinimumHealthyMemberCount int `pulumi:"minimumHealthyMemberCount"`
	// The pool name.
	Name string `pulumi:"name"`
	// Whether connections in the same session will be processed by the same pool member or not.
	Persistences []GetElbPoolsPoolPersistence `pulumi:"persistences"`
	// The reason for update protection.
	ProtectionReason string `pulumi:"protectionReason"`
	// The protection status for update.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// The protocol of pool.
	Protocol string `pulumi:"protocol"`
	// The slow start duration, in seconds.
	SlowStartDuration int `pulumi:"slowStartDuration"`
	// Whether to enable slow start.
	SlowStartEnabled bool `pulumi:"slowStartEnabled"`
	// The type of the backend server group.
	Type string `pulumi:"type"`
	// The ID of the VPC where the backend server group works.
	VpcId string `pulumi:"vpcId"`
}

// GetElbPoolsPoolInput is an input type that accepts GetElbPoolsPoolArgs and GetElbPoolsPoolOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolInput` via:
//
//	GetElbPoolsPoolArgs{...}
type GetElbPoolsPoolInput interface {
	pulumi.Input

	ToGetElbPoolsPoolOutput() GetElbPoolsPoolOutput
	ToGetElbPoolsPoolOutputWithContext(context.Context) GetElbPoolsPoolOutput
}

type GetElbPoolsPoolArgs struct {
	// Whether to enable delayed logout.
	ConnectionDrainEnabled pulumi.BoolInput `pulumi:"connectionDrainEnabled"`
	// The timeout of the delayed logout in seconds.
	ConnectionDrainTimeout pulumi.IntInput `pulumi:"connectionDrainTimeout"`
	// The description of pool.
	Description pulumi.StringInput `pulumi:"description"`
	// The health monitor ID of the ELB pool.
	HealthmonitorId pulumi.StringInput `pulumi:"healthmonitorId"`
	// The pool ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP version of pool.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// The method of the ELB pool.
	LbMethod pulumi.StringInput `pulumi:"lbMethod"`
	// Listener list. For details, see Data structure of the listener field.
	Listeners GetElbPoolsPoolListenerArrayInput `pulumi:"listeners"`
	// Loadbalancer list. For details, see Data structure of the loadbalancer field.
	Loadbalancers GetElbPoolsPoolLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// Loadbalancer list. For details, see Data structure of the members field.
	Members GetElbPoolsPoolMemberArrayInput `pulumi:"members"`
	// The timeout of the delayed logout in seconds.
	MinimumHealthyMemberCount pulumi.IntInput `pulumi:"minimumHealthyMemberCount"`
	// The pool name.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether connections in the same session will be processed by the same pool member or not.
	Persistences GetElbPoolsPoolPersistenceArrayInput `pulumi:"persistences"`
	// The reason for update protection.
	ProtectionReason pulumi.StringInput `pulumi:"protectionReason"`
	// The protection status for update.
	ProtectionStatus pulumi.StringInput `pulumi:"protectionStatus"`
	// The protocol of pool.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The slow start duration, in seconds.
	SlowStartDuration pulumi.IntInput `pulumi:"slowStartDuration"`
	// Whether to enable slow start.
	SlowStartEnabled pulumi.BoolInput `pulumi:"slowStartEnabled"`
	// The type of the backend server group.
	Type pulumi.StringInput `pulumi:"type"`
	// The ID of the VPC where the backend server group works.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetElbPoolsPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPool)(nil)).Elem()
}

func (i GetElbPoolsPoolArgs) ToGetElbPoolsPoolOutput() GetElbPoolsPoolOutput {
	return i.ToGetElbPoolsPoolOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolArgs) ToGetElbPoolsPoolOutputWithContext(ctx context.Context) GetElbPoolsPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolOutput)
}

// GetElbPoolsPoolArrayInput is an input type that accepts GetElbPoolsPoolArray and GetElbPoolsPoolArrayOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolArrayInput` via:
//
//	GetElbPoolsPoolArray{ GetElbPoolsPoolArgs{...} }
type GetElbPoolsPoolArrayInput interface {
	pulumi.Input

	ToGetElbPoolsPoolArrayOutput() GetElbPoolsPoolArrayOutput
	ToGetElbPoolsPoolArrayOutputWithContext(context.Context) GetElbPoolsPoolArrayOutput
}

type GetElbPoolsPoolArray []GetElbPoolsPoolInput

func (GetElbPoolsPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPool)(nil)).Elem()
}

func (i GetElbPoolsPoolArray) ToGetElbPoolsPoolArrayOutput() GetElbPoolsPoolArrayOutput {
	return i.ToGetElbPoolsPoolArrayOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolArray) ToGetElbPoolsPoolArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolArrayOutput)
}

type GetElbPoolsPoolOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPool)(nil)).Elem()
}

func (o GetElbPoolsPoolOutput) ToGetElbPoolsPoolOutput() GetElbPoolsPoolOutput {
	return o
}

func (o GetElbPoolsPoolOutput) ToGetElbPoolsPoolOutputWithContext(ctx context.Context) GetElbPoolsPoolOutput {
	return o
}

// Whether to enable delayed logout.
func (o GetElbPoolsPoolOutput) ConnectionDrainEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetElbPoolsPool) bool { return v.ConnectionDrainEnabled }).(pulumi.BoolOutput)
}

// The timeout of the delayed logout in seconds.
func (o GetElbPoolsPoolOutput) ConnectionDrainTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbPoolsPool) int { return v.ConnectionDrainTimeout }).(pulumi.IntOutput)
}

// The description of pool.
func (o GetElbPoolsPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.Description }).(pulumi.StringOutput)
}

// The health monitor ID of the ELB pool.
func (o GetElbPoolsPoolOutput) HealthmonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.HealthmonitorId }).(pulumi.StringOutput)
}

// The pool ID.
func (o GetElbPoolsPoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.Id }).(pulumi.StringOutput)
}

// The IP version of pool.
func (o GetElbPoolsPoolOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.IpVersion }).(pulumi.StringOutput)
}

// The method of the ELB pool.
func (o GetElbPoolsPoolOutput) LbMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.LbMethod }).(pulumi.StringOutput)
}

// Listener list. For details, see Data structure of the listener field.
func (o GetElbPoolsPoolOutput) Listeners() GetElbPoolsPoolListenerArrayOutput {
	return o.ApplyT(func(v GetElbPoolsPool) []GetElbPoolsPoolListener { return v.Listeners }).(GetElbPoolsPoolListenerArrayOutput)
}

// Loadbalancer list. For details, see Data structure of the loadbalancer field.
func (o GetElbPoolsPoolOutput) Loadbalancers() GetElbPoolsPoolLoadbalancerArrayOutput {
	return o.ApplyT(func(v GetElbPoolsPool) []GetElbPoolsPoolLoadbalancer { return v.Loadbalancers }).(GetElbPoolsPoolLoadbalancerArrayOutput)
}

// Loadbalancer list. For details, see Data structure of the members field.
func (o GetElbPoolsPoolOutput) Members() GetElbPoolsPoolMemberArrayOutput {
	return o.ApplyT(func(v GetElbPoolsPool) []GetElbPoolsPoolMember { return v.Members }).(GetElbPoolsPoolMemberArrayOutput)
}

// The timeout of the delayed logout in seconds.
func (o GetElbPoolsPoolOutput) MinimumHealthyMemberCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbPoolsPool) int { return v.MinimumHealthyMemberCount }).(pulumi.IntOutput)
}

// The pool name.
func (o GetElbPoolsPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.Name }).(pulumi.StringOutput)
}

// Whether connections in the same session will be processed by the same pool member or not.
func (o GetElbPoolsPoolOutput) Persistences() GetElbPoolsPoolPersistenceArrayOutput {
	return o.ApplyT(func(v GetElbPoolsPool) []GetElbPoolsPoolPersistence { return v.Persistences }).(GetElbPoolsPoolPersistenceArrayOutput)
}

// The reason for update protection.
func (o GetElbPoolsPoolOutput) ProtectionReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.ProtectionReason }).(pulumi.StringOutput)
}

// The protection status for update.
func (o GetElbPoolsPoolOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// The protocol of pool.
func (o GetElbPoolsPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.Protocol }).(pulumi.StringOutput)
}

// The slow start duration, in seconds.
func (o GetElbPoolsPoolOutput) SlowStartDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbPoolsPool) int { return v.SlowStartDuration }).(pulumi.IntOutput)
}

// Whether to enable slow start.
func (o GetElbPoolsPoolOutput) SlowStartEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetElbPoolsPool) bool { return v.SlowStartEnabled }).(pulumi.BoolOutput)
}

// The type of the backend server group.
func (o GetElbPoolsPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.Type }).(pulumi.StringOutput)
}

// The ID of the VPC where the backend server group works.
func (o GetElbPoolsPoolOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPool) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetElbPoolsPoolArrayOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPool)(nil)).Elem()
}

func (o GetElbPoolsPoolArrayOutput) ToGetElbPoolsPoolArrayOutput() GetElbPoolsPoolArrayOutput {
	return o
}

func (o GetElbPoolsPoolArrayOutput) ToGetElbPoolsPoolArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolArrayOutput {
	return o
}

func (o GetElbPoolsPoolArrayOutput) Index(i pulumi.IntInput) GetElbPoolsPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElbPoolsPool {
		return vs[0].([]GetElbPoolsPool)[vs[1].(int)]
	}).(GetElbPoolsPoolOutput)
}

type GetElbPoolsPoolListener struct {
	// The listener ID.
	Id string `pulumi:"id"`
}

// GetElbPoolsPoolListenerInput is an input type that accepts GetElbPoolsPoolListenerArgs and GetElbPoolsPoolListenerOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolListenerInput` via:
//
//	GetElbPoolsPoolListenerArgs{...}
type GetElbPoolsPoolListenerInput interface {
	pulumi.Input

	ToGetElbPoolsPoolListenerOutput() GetElbPoolsPoolListenerOutput
	ToGetElbPoolsPoolListenerOutputWithContext(context.Context) GetElbPoolsPoolListenerOutput
}

type GetElbPoolsPoolListenerArgs struct {
	// The listener ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetElbPoolsPoolListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolListener)(nil)).Elem()
}

func (i GetElbPoolsPoolListenerArgs) ToGetElbPoolsPoolListenerOutput() GetElbPoolsPoolListenerOutput {
	return i.ToGetElbPoolsPoolListenerOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolListenerArgs) ToGetElbPoolsPoolListenerOutputWithContext(ctx context.Context) GetElbPoolsPoolListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolListenerOutput)
}

// GetElbPoolsPoolListenerArrayInput is an input type that accepts GetElbPoolsPoolListenerArray and GetElbPoolsPoolListenerArrayOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolListenerArrayInput` via:
//
//	GetElbPoolsPoolListenerArray{ GetElbPoolsPoolListenerArgs{...} }
type GetElbPoolsPoolListenerArrayInput interface {
	pulumi.Input

	ToGetElbPoolsPoolListenerArrayOutput() GetElbPoolsPoolListenerArrayOutput
	ToGetElbPoolsPoolListenerArrayOutputWithContext(context.Context) GetElbPoolsPoolListenerArrayOutput
}

type GetElbPoolsPoolListenerArray []GetElbPoolsPoolListenerInput

func (GetElbPoolsPoolListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolListener)(nil)).Elem()
}

func (i GetElbPoolsPoolListenerArray) ToGetElbPoolsPoolListenerArrayOutput() GetElbPoolsPoolListenerArrayOutput {
	return i.ToGetElbPoolsPoolListenerArrayOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolListenerArray) ToGetElbPoolsPoolListenerArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolListenerArrayOutput)
}

type GetElbPoolsPoolListenerOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolListener)(nil)).Elem()
}

func (o GetElbPoolsPoolListenerOutput) ToGetElbPoolsPoolListenerOutput() GetElbPoolsPoolListenerOutput {
	return o
}

func (o GetElbPoolsPoolListenerOutput) ToGetElbPoolsPoolListenerOutputWithContext(ctx context.Context) GetElbPoolsPoolListenerOutput {
	return o
}

// The listener ID.
func (o GetElbPoolsPoolListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPoolListener) string { return v.Id }).(pulumi.StringOutput)
}

type GetElbPoolsPoolListenerArrayOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolListener)(nil)).Elem()
}

func (o GetElbPoolsPoolListenerArrayOutput) ToGetElbPoolsPoolListenerArrayOutput() GetElbPoolsPoolListenerArrayOutput {
	return o
}

func (o GetElbPoolsPoolListenerArrayOutput) ToGetElbPoolsPoolListenerArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolListenerArrayOutput {
	return o
}

func (o GetElbPoolsPoolListenerArrayOutput) Index(i pulumi.IntInput) GetElbPoolsPoolListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElbPoolsPoolListener {
		return vs[0].([]GetElbPoolsPoolListener)[vs[1].(int)]
	}).(GetElbPoolsPoolListenerOutput)
}

type GetElbPoolsPoolLoadbalancer struct {
	// The loadbalancer ID.
	Id string `pulumi:"id"`
}

// GetElbPoolsPoolLoadbalancerInput is an input type that accepts GetElbPoolsPoolLoadbalancerArgs and GetElbPoolsPoolLoadbalancerOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolLoadbalancerInput` via:
//
//	GetElbPoolsPoolLoadbalancerArgs{...}
type GetElbPoolsPoolLoadbalancerInput interface {
	pulumi.Input

	ToGetElbPoolsPoolLoadbalancerOutput() GetElbPoolsPoolLoadbalancerOutput
	ToGetElbPoolsPoolLoadbalancerOutputWithContext(context.Context) GetElbPoolsPoolLoadbalancerOutput
}

type GetElbPoolsPoolLoadbalancerArgs struct {
	// The loadbalancer ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetElbPoolsPoolLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (i GetElbPoolsPoolLoadbalancerArgs) ToGetElbPoolsPoolLoadbalancerOutput() GetElbPoolsPoolLoadbalancerOutput {
	return i.ToGetElbPoolsPoolLoadbalancerOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolLoadbalancerArgs) ToGetElbPoolsPoolLoadbalancerOutputWithContext(ctx context.Context) GetElbPoolsPoolLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolLoadbalancerOutput)
}

// GetElbPoolsPoolLoadbalancerArrayInput is an input type that accepts GetElbPoolsPoolLoadbalancerArray and GetElbPoolsPoolLoadbalancerArrayOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolLoadbalancerArrayInput` via:
//
//	GetElbPoolsPoolLoadbalancerArray{ GetElbPoolsPoolLoadbalancerArgs{...} }
type GetElbPoolsPoolLoadbalancerArrayInput interface {
	pulumi.Input

	ToGetElbPoolsPoolLoadbalancerArrayOutput() GetElbPoolsPoolLoadbalancerArrayOutput
	ToGetElbPoolsPoolLoadbalancerArrayOutputWithContext(context.Context) GetElbPoolsPoolLoadbalancerArrayOutput
}

type GetElbPoolsPoolLoadbalancerArray []GetElbPoolsPoolLoadbalancerInput

func (GetElbPoolsPoolLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (i GetElbPoolsPoolLoadbalancerArray) ToGetElbPoolsPoolLoadbalancerArrayOutput() GetElbPoolsPoolLoadbalancerArrayOutput {
	return i.ToGetElbPoolsPoolLoadbalancerArrayOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolLoadbalancerArray) ToGetElbPoolsPoolLoadbalancerArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolLoadbalancerArrayOutput)
}

type GetElbPoolsPoolLoadbalancerOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (o GetElbPoolsPoolLoadbalancerOutput) ToGetElbPoolsPoolLoadbalancerOutput() GetElbPoolsPoolLoadbalancerOutput {
	return o
}

func (o GetElbPoolsPoolLoadbalancerOutput) ToGetElbPoolsPoolLoadbalancerOutputWithContext(ctx context.Context) GetElbPoolsPoolLoadbalancerOutput {
	return o
}

// The loadbalancer ID.
func (o GetElbPoolsPoolLoadbalancerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPoolLoadbalancer) string { return v.Id }).(pulumi.StringOutput)
}

type GetElbPoolsPoolLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (o GetElbPoolsPoolLoadbalancerArrayOutput) ToGetElbPoolsPoolLoadbalancerArrayOutput() GetElbPoolsPoolLoadbalancerArrayOutput {
	return o
}

func (o GetElbPoolsPoolLoadbalancerArrayOutput) ToGetElbPoolsPoolLoadbalancerArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolLoadbalancerArrayOutput {
	return o
}

func (o GetElbPoolsPoolLoadbalancerArrayOutput) Index(i pulumi.IntInput) GetElbPoolsPoolLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElbPoolsPoolLoadbalancer {
		return vs[0].([]GetElbPoolsPoolLoadbalancer)[vs[1].(int)]
	}).(GetElbPoolsPoolLoadbalancerOutput)
}

type GetElbPoolsPoolMember struct {
	// The member ID.
	Id string `pulumi:"id"`
}

// GetElbPoolsPoolMemberInput is an input type that accepts GetElbPoolsPoolMemberArgs and GetElbPoolsPoolMemberOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolMemberInput` via:
//
//	GetElbPoolsPoolMemberArgs{...}
type GetElbPoolsPoolMemberInput interface {
	pulumi.Input

	ToGetElbPoolsPoolMemberOutput() GetElbPoolsPoolMemberOutput
	ToGetElbPoolsPoolMemberOutputWithContext(context.Context) GetElbPoolsPoolMemberOutput
}

type GetElbPoolsPoolMemberArgs struct {
	// The member ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetElbPoolsPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolMember)(nil)).Elem()
}

func (i GetElbPoolsPoolMemberArgs) ToGetElbPoolsPoolMemberOutput() GetElbPoolsPoolMemberOutput {
	return i.ToGetElbPoolsPoolMemberOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolMemberArgs) ToGetElbPoolsPoolMemberOutputWithContext(ctx context.Context) GetElbPoolsPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolMemberOutput)
}

// GetElbPoolsPoolMemberArrayInput is an input type that accepts GetElbPoolsPoolMemberArray and GetElbPoolsPoolMemberArrayOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolMemberArrayInput` via:
//
//	GetElbPoolsPoolMemberArray{ GetElbPoolsPoolMemberArgs{...} }
type GetElbPoolsPoolMemberArrayInput interface {
	pulumi.Input

	ToGetElbPoolsPoolMemberArrayOutput() GetElbPoolsPoolMemberArrayOutput
	ToGetElbPoolsPoolMemberArrayOutputWithContext(context.Context) GetElbPoolsPoolMemberArrayOutput
}

type GetElbPoolsPoolMemberArray []GetElbPoolsPoolMemberInput

func (GetElbPoolsPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolMember)(nil)).Elem()
}

func (i GetElbPoolsPoolMemberArray) ToGetElbPoolsPoolMemberArrayOutput() GetElbPoolsPoolMemberArrayOutput {
	return i.ToGetElbPoolsPoolMemberArrayOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolMemberArray) ToGetElbPoolsPoolMemberArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolMemberArrayOutput)
}

type GetElbPoolsPoolMemberOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolMember)(nil)).Elem()
}

func (o GetElbPoolsPoolMemberOutput) ToGetElbPoolsPoolMemberOutput() GetElbPoolsPoolMemberOutput {
	return o
}

func (o GetElbPoolsPoolMemberOutput) ToGetElbPoolsPoolMemberOutputWithContext(ctx context.Context) GetElbPoolsPoolMemberOutput {
	return o
}

// The member ID.
func (o GetElbPoolsPoolMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPoolMember) string { return v.Id }).(pulumi.StringOutput)
}

type GetElbPoolsPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolMember)(nil)).Elem()
}

func (o GetElbPoolsPoolMemberArrayOutput) ToGetElbPoolsPoolMemberArrayOutput() GetElbPoolsPoolMemberArrayOutput {
	return o
}

func (o GetElbPoolsPoolMemberArrayOutput) ToGetElbPoolsPoolMemberArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolMemberArrayOutput {
	return o
}

func (o GetElbPoolsPoolMemberArrayOutput) Index(i pulumi.IntInput) GetElbPoolsPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElbPoolsPoolMember {
		return vs[0].([]GetElbPoolsPoolMember)[vs[1].(int)]
	}).(GetElbPoolsPoolMemberOutput)
}

type GetElbPoolsPoolPersistence struct {
	// The name of the cookie if persistence mode is set appropriately.
	CookieName string `pulumi:"cookieName"`
	// The stickiness duration, in minutes.
	Timeout int `pulumi:"timeout"`
	// The type of persistence mode.
	Type string `pulumi:"type"`
}

// GetElbPoolsPoolPersistenceInput is an input type that accepts GetElbPoolsPoolPersistenceArgs and GetElbPoolsPoolPersistenceOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolPersistenceInput` via:
//
//	GetElbPoolsPoolPersistenceArgs{...}
type GetElbPoolsPoolPersistenceInput interface {
	pulumi.Input

	ToGetElbPoolsPoolPersistenceOutput() GetElbPoolsPoolPersistenceOutput
	ToGetElbPoolsPoolPersistenceOutputWithContext(context.Context) GetElbPoolsPoolPersistenceOutput
}

type GetElbPoolsPoolPersistenceArgs struct {
	// The name of the cookie if persistence mode is set appropriately.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The stickiness duration, in minutes.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The type of persistence mode.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetElbPoolsPoolPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolPersistence)(nil)).Elem()
}

func (i GetElbPoolsPoolPersistenceArgs) ToGetElbPoolsPoolPersistenceOutput() GetElbPoolsPoolPersistenceOutput {
	return i.ToGetElbPoolsPoolPersistenceOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolPersistenceArgs) ToGetElbPoolsPoolPersistenceOutputWithContext(ctx context.Context) GetElbPoolsPoolPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolPersistenceOutput)
}

// GetElbPoolsPoolPersistenceArrayInput is an input type that accepts GetElbPoolsPoolPersistenceArray and GetElbPoolsPoolPersistenceArrayOutput values.
// You can construct a concrete instance of `GetElbPoolsPoolPersistenceArrayInput` via:
//
//	GetElbPoolsPoolPersistenceArray{ GetElbPoolsPoolPersistenceArgs{...} }
type GetElbPoolsPoolPersistenceArrayInput interface {
	pulumi.Input

	ToGetElbPoolsPoolPersistenceArrayOutput() GetElbPoolsPoolPersistenceArrayOutput
	ToGetElbPoolsPoolPersistenceArrayOutputWithContext(context.Context) GetElbPoolsPoolPersistenceArrayOutput
}

type GetElbPoolsPoolPersistenceArray []GetElbPoolsPoolPersistenceInput

func (GetElbPoolsPoolPersistenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolPersistence)(nil)).Elem()
}

func (i GetElbPoolsPoolPersistenceArray) ToGetElbPoolsPoolPersistenceArrayOutput() GetElbPoolsPoolPersistenceArrayOutput {
	return i.ToGetElbPoolsPoolPersistenceArrayOutputWithContext(context.Background())
}

func (i GetElbPoolsPoolPersistenceArray) ToGetElbPoolsPoolPersistenceArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolPersistenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElbPoolsPoolPersistenceArrayOutput)
}

type GetElbPoolsPoolPersistenceOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElbPoolsPoolPersistence)(nil)).Elem()
}

func (o GetElbPoolsPoolPersistenceOutput) ToGetElbPoolsPoolPersistenceOutput() GetElbPoolsPoolPersistenceOutput {
	return o
}

func (o GetElbPoolsPoolPersistenceOutput) ToGetElbPoolsPoolPersistenceOutputWithContext(ctx context.Context) GetElbPoolsPoolPersistenceOutput {
	return o
}

// The name of the cookie if persistence mode is set appropriately.
func (o GetElbPoolsPoolPersistenceOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPoolPersistence) string { return v.CookieName }).(pulumi.StringOutput)
}

// The stickiness duration, in minutes.
func (o GetElbPoolsPoolPersistenceOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetElbPoolsPoolPersistence) int { return v.Timeout }).(pulumi.IntOutput)
}

// The type of persistence mode.
func (o GetElbPoolsPoolPersistenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetElbPoolsPoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

type GetElbPoolsPoolPersistenceArrayOutput struct{ *pulumi.OutputState }

func (GetElbPoolsPoolPersistenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElbPoolsPoolPersistence)(nil)).Elem()
}

func (o GetElbPoolsPoolPersistenceArrayOutput) ToGetElbPoolsPoolPersistenceArrayOutput() GetElbPoolsPoolPersistenceArrayOutput {
	return o
}

func (o GetElbPoolsPoolPersistenceArrayOutput) ToGetElbPoolsPoolPersistenceArrayOutputWithContext(ctx context.Context) GetElbPoolsPoolPersistenceArrayOutput {
	return o
}

func (o GetElbPoolsPoolPersistenceArrayOutput) Index(i pulumi.IntInput) GetElbPoolsPoolPersistenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElbPoolsPoolPersistence {
		return vs[0].([]GetElbPoolsPoolPersistence)[vs[1].(int)]
	}).(GetElbPoolsPoolPersistenceOutput)
}

type GetEvsVolumesVolume struct {
	Attachments         []GetEvsVolumesVolumeAttachment `pulumi:"attachments"`
	AvailabilityZone    string                          `pulumi:"availabilityZone"`
	Bootable            bool                            `pulumi:"bootable"`
	CreateAt            string                          `pulumi:"createAt"`
	Description         string                          `pulumi:"description"`
	EnterpriseProjectId string                          `pulumi:"enterpriseProjectId"`
	Id                  string                          `pulumi:"id"`
	Iops                int                             `pulumi:"iops"`
	Name                string                          `pulumi:"name"`
	ServiceType         string                          `pulumi:"serviceType"`
	Shareable           bool                            `pulumi:"shareable"`
	Size                int                             `pulumi:"size"`
	Status              string                          `pulumi:"status"`
	Tags                map[string]string               `pulumi:"tags"`
	Throughput          int                             `pulumi:"throughput"`
	UpdateAt            string                          `pulumi:"updateAt"`
	VolumeType          string                          `pulumi:"volumeType"`
	Wwn                 string                          `pulumi:"wwn"`
}

// GetEvsVolumesVolumeInput is an input type that accepts GetEvsVolumesVolumeArgs and GetEvsVolumesVolumeOutput values.
// You can construct a concrete instance of `GetEvsVolumesVolumeInput` via:
//
//	GetEvsVolumesVolumeArgs{...}
type GetEvsVolumesVolumeInput interface {
	pulumi.Input

	ToGetEvsVolumesVolumeOutput() GetEvsVolumesVolumeOutput
	ToGetEvsVolumesVolumeOutputWithContext(context.Context) GetEvsVolumesVolumeOutput
}

type GetEvsVolumesVolumeArgs struct {
	Attachments         GetEvsVolumesVolumeAttachmentArrayInput `pulumi:"attachments"`
	AvailabilityZone    pulumi.StringInput                      `pulumi:"availabilityZone"`
	Bootable            pulumi.BoolInput                        `pulumi:"bootable"`
	CreateAt            pulumi.StringInput                      `pulumi:"createAt"`
	Description         pulumi.StringInput                      `pulumi:"description"`
	EnterpriseProjectId pulumi.StringInput                      `pulumi:"enterpriseProjectId"`
	Id                  pulumi.StringInput                      `pulumi:"id"`
	Iops                pulumi.IntInput                         `pulumi:"iops"`
	Name                pulumi.StringInput                      `pulumi:"name"`
	ServiceType         pulumi.StringInput                      `pulumi:"serviceType"`
	Shareable           pulumi.BoolInput                        `pulumi:"shareable"`
	Size                pulumi.IntInput                         `pulumi:"size"`
	Status              pulumi.StringInput                      `pulumi:"status"`
	Tags                pulumi.StringMapInput                   `pulumi:"tags"`
	Throughput          pulumi.IntInput                         `pulumi:"throughput"`
	UpdateAt            pulumi.StringInput                      `pulumi:"updateAt"`
	VolumeType          pulumi.StringInput                      `pulumi:"volumeType"`
	Wwn                 pulumi.StringInput                      `pulumi:"wwn"`
}

func (GetEvsVolumesVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvsVolumesVolume)(nil)).Elem()
}

func (i GetEvsVolumesVolumeArgs) ToGetEvsVolumesVolumeOutput() GetEvsVolumesVolumeOutput {
	return i.ToGetEvsVolumesVolumeOutputWithContext(context.Background())
}

func (i GetEvsVolumesVolumeArgs) ToGetEvsVolumesVolumeOutputWithContext(ctx context.Context) GetEvsVolumesVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEvsVolumesVolumeOutput)
}

// GetEvsVolumesVolumeArrayInput is an input type that accepts GetEvsVolumesVolumeArray and GetEvsVolumesVolumeArrayOutput values.
// You can construct a concrete instance of `GetEvsVolumesVolumeArrayInput` via:
//
//	GetEvsVolumesVolumeArray{ GetEvsVolumesVolumeArgs{...} }
type GetEvsVolumesVolumeArrayInput interface {
	pulumi.Input

	ToGetEvsVolumesVolumeArrayOutput() GetEvsVolumesVolumeArrayOutput
	ToGetEvsVolumesVolumeArrayOutputWithContext(context.Context) GetEvsVolumesVolumeArrayOutput
}

type GetEvsVolumesVolumeArray []GetEvsVolumesVolumeInput

func (GetEvsVolumesVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEvsVolumesVolume)(nil)).Elem()
}

func (i GetEvsVolumesVolumeArray) ToGetEvsVolumesVolumeArrayOutput() GetEvsVolumesVolumeArrayOutput {
	return i.ToGetEvsVolumesVolumeArrayOutputWithContext(context.Background())
}

func (i GetEvsVolumesVolumeArray) ToGetEvsVolumesVolumeArrayOutputWithContext(ctx context.Context) GetEvsVolumesVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEvsVolumesVolumeArrayOutput)
}

type GetEvsVolumesVolumeOutput struct{ *pulumi.OutputState }

func (GetEvsVolumesVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvsVolumesVolume)(nil)).Elem()
}

func (o GetEvsVolumesVolumeOutput) ToGetEvsVolumesVolumeOutput() GetEvsVolumesVolumeOutput {
	return o
}

func (o GetEvsVolumesVolumeOutput) ToGetEvsVolumesVolumeOutputWithContext(ctx context.Context) GetEvsVolumesVolumeOutput {
	return o
}

func (o GetEvsVolumesVolumeOutput) Attachments() GetEvsVolumesVolumeAttachmentArrayOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) []GetEvsVolumesVolumeAttachment { return v.Attachments }).(GetEvsVolumesVolumeAttachmentArrayOutput)
}

func (o GetEvsVolumesVolumeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) Bootable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) bool { return v.Bootable }).(pulumi.BoolOutput)
}

func (o GetEvsVolumesVolumeOutput) CreateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.CreateAt }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetEvsVolumesVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) Shareable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) bool { return v.Shareable }).(pulumi.BoolOutput)
}

func (o GetEvsVolumesVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetEvsVolumesVolumeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetEvsVolumesVolumeOutput) Throughput() pulumi.IntOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) int { return v.Throughput }).(pulumi.IntOutput)
}

func (o GetEvsVolumesVolumeOutput) UpdateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.UpdateAt }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.VolumeType }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeOutput) Wwn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolume) string { return v.Wwn }).(pulumi.StringOutput)
}

type GetEvsVolumesVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetEvsVolumesVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEvsVolumesVolume)(nil)).Elem()
}

func (o GetEvsVolumesVolumeArrayOutput) ToGetEvsVolumesVolumeArrayOutput() GetEvsVolumesVolumeArrayOutput {
	return o
}

func (o GetEvsVolumesVolumeArrayOutput) ToGetEvsVolumesVolumeArrayOutputWithContext(ctx context.Context) GetEvsVolumesVolumeArrayOutput {
	return o
}

func (o GetEvsVolumesVolumeArrayOutput) Index(i pulumi.IntInput) GetEvsVolumesVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEvsVolumesVolume {
		return vs[0].([]GetEvsVolumesVolume)[vs[1].(int)]
	}).(GetEvsVolumesVolumeOutput)
}

type GetEvsVolumesVolumeAttachment struct {
	AttachedAt   string `pulumi:"attachedAt"`
	AttachedMode string `pulumi:"attachedMode"`
	DeviceName   string `pulumi:"deviceName"`
	Id           string `pulumi:"id"`
	ServerId     string `pulumi:"serverId"`
}

// GetEvsVolumesVolumeAttachmentInput is an input type that accepts GetEvsVolumesVolumeAttachmentArgs and GetEvsVolumesVolumeAttachmentOutput values.
// You can construct a concrete instance of `GetEvsVolumesVolumeAttachmentInput` via:
//
//	GetEvsVolumesVolumeAttachmentArgs{...}
type GetEvsVolumesVolumeAttachmentInput interface {
	pulumi.Input

	ToGetEvsVolumesVolumeAttachmentOutput() GetEvsVolumesVolumeAttachmentOutput
	ToGetEvsVolumesVolumeAttachmentOutputWithContext(context.Context) GetEvsVolumesVolumeAttachmentOutput
}

type GetEvsVolumesVolumeAttachmentArgs struct {
	AttachedAt   pulumi.StringInput `pulumi:"attachedAt"`
	AttachedMode pulumi.StringInput `pulumi:"attachedMode"`
	DeviceName   pulumi.StringInput `pulumi:"deviceName"`
	Id           pulumi.StringInput `pulumi:"id"`
	ServerId     pulumi.StringInput `pulumi:"serverId"`
}

func (GetEvsVolumesVolumeAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvsVolumesVolumeAttachment)(nil)).Elem()
}

func (i GetEvsVolumesVolumeAttachmentArgs) ToGetEvsVolumesVolumeAttachmentOutput() GetEvsVolumesVolumeAttachmentOutput {
	return i.ToGetEvsVolumesVolumeAttachmentOutputWithContext(context.Background())
}

func (i GetEvsVolumesVolumeAttachmentArgs) ToGetEvsVolumesVolumeAttachmentOutputWithContext(ctx context.Context) GetEvsVolumesVolumeAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEvsVolumesVolumeAttachmentOutput)
}

// GetEvsVolumesVolumeAttachmentArrayInput is an input type that accepts GetEvsVolumesVolumeAttachmentArray and GetEvsVolumesVolumeAttachmentArrayOutput values.
// You can construct a concrete instance of `GetEvsVolumesVolumeAttachmentArrayInput` via:
//
//	GetEvsVolumesVolumeAttachmentArray{ GetEvsVolumesVolumeAttachmentArgs{...} }
type GetEvsVolumesVolumeAttachmentArrayInput interface {
	pulumi.Input

	ToGetEvsVolumesVolumeAttachmentArrayOutput() GetEvsVolumesVolumeAttachmentArrayOutput
	ToGetEvsVolumesVolumeAttachmentArrayOutputWithContext(context.Context) GetEvsVolumesVolumeAttachmentArrayOutput
}

type GetEvsVolumesVolumeAttachmentArray []GetEvsVolumesVolumeAttachmentInput

func (GetEvsVolumesVolumeAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEvsVolumesVolumeAttachment)(nil)).Elem()
}

func (i GetEvsVolumesVolumeAttachmentArray) ToGetEvsVolumesVolumeAttachmentArrayOutput() GetEvsVolumesVolumeAttachmentArrayOutput {
	return i.ToGetEvsVolumesVolumeAttachmentArrayOutputWithContext(context.Background())
}

func (i GetEvsVolumesVolumeAttachmentArray) ToGetEvsVolumesVolumeAttachmentArrayOutputWithContext(ctx context.Context) GetEvsVolumesVolumeAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEvsVolumesVolumeAttachmentArrayOutput)
}

type GetEvsVolumesVolumeAttachmentOutput struct{ *pulumi.OutputState }

func (GetEvsVolumesVolumeAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvsVolumesVolumeAttachment)(nil)).Elem()
}

func (o GetEvsVolumesVolumeAttachmentOutput) ToGetEvsVolumesVolumeAttachmentOutput() GetEvsVolumesVolumeAttachmentOutput {
	return o
}

func (o GetEvsVolumesVolumeAttachmentOutput) ToGetEvsVolumesVolumeAttachmentOutputWithContext(ctx context.Context) GetEvsVolumesVolumeAttachmentOutput {
	return o
}

func (o GetEvsVolumesVolumeAttachmentOutput) AttachedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolumeAttachment) string { return v.AttachedAt }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeAttachmentOutput) AttachedMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolumeAttachment) string { return v.AttachedMode }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeAttachmentOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolumeAttachment) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolumeAttachment) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEvsVolumesVolumeAttachmentOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvsVolumesVolumeAttachment) string { return v.ServerId }).(pulumi.StringOutput)
}

type GetEvsVolumesVolumeAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetEvsVolumesVolumeAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEvsVolumesVolumeAttachment)(nil)).Elem()
}

func (o GetEvsVolumesVolumeAttachmentArrayOutput) ToGetEvsVolumesVolumeAttachmentArrayOutput() GetEvsVolumesVolumeAttachmentArrayOutput {
	return o
}

func (o GetEvsVolumesVolumeAttachmentArrayOutput) ToGetEvsVolumesVolumeAttachmentArrayOutputWithContext(ctx context.Context) GetEvsVolumesVolumeAttachmentArrayOutput {
	return o
}

func (o GetEvsVolumesVolumeAttachmentArrayOutput) Index(i pulumi.IntInput) GetEvsVolumesVolumeAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEvsVolumesVolumeAttachment {
		return vs[0].([]GetEvsVolumesVolumeAttachment)[vs[1].(int)]
	}).(GetEvsVolumesVolumeAttachmentOutput)
}

type GetIdentityGroupUser struct {
	Description       string `pulumi:"description"`
	Enabled           bool   `pulumi:"enabled"`
	Id                string `pulumi:"id"`
	Name              string `pulumi:"name"`
	PasswordExpiresAt string `pulumi:"passwordExpiresAt"`
	PasswordStatus    bool   `pulumi:"passwordStatus"`
	PasswordStrength  string `pulumi:"passwordStrength"`
}

// GetIdentityGroupUserInput is an input type that accepts GetIdentityGroupUserArgs and GetIdentityGroupUserOutput values.
// You can construct a concrete instance of `GetIdentityGroupUserInput` via:
//
//	GetIdentityGroupUserArgs{...}
type GetIdentityGroupUserInput interface {
	pulumi.Input

	ToGetIdentityGroupUserOutput() GetIdentityGroupUserOutput
	ToGetIdentityGroupUserOutputWithContext(context.Context) GetIdentityGroupUserOutput
}

type GetIdentityGroupUserArgs struct {
	Description       pulumi.StringInput `pulumi:"description"`
	Enabled           pulumi.BoolInput   `pulumi:"enabled"`
	Id                pulumi.StringInput `pulumi:"id"`
	Name              pulumi.StringInput `pulumi:"name"`
	PasswordExpiresAt pulumi.StringInput `pulumi:"passwordExpiresAt"`
	PasswordStatus    pulumi.BoolInput   `pulumi:"passwordStatus"`
	PasswordStrength  pulumi.StringInput `pulumi:"passwordStrength"`
}

func (GetIdentityGroupUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityGroupUser)(nil)).Elem()
}

func (i GetIdentityGroupUserArgs) ToGetIdentityGroupUserOutput() GetIdentityGroupUserOutput {
	return i.ToGetIdentityGroupUserOutputWithContext(context.Background())
}

func (i GetIdentityGroupUserArgs) ToGetIdentityGroupUserOutputWithContext(ctx context.Context) GetIdentityGroupUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityGroupUserOutput)
}

// GetIdentityGroupUserArrayInput is an input type that accepts GetIdentityGroupUserArray and GetIdentityGroupUserArrayOutput values.
// You can construct a concrete instance of `GetIdentityGroupUserArrayInput` via:
//
//	GetIdentityGroupUserArray{ GetIdentityGroupUserArgs{...} }
type GetIdentityGroupUserArrayInput interface {
	pulumi.Input

	ToGetIdentityGroupUserArrayOutput() GetIdentityGroupUserArrayOutput
	ToGetIdentityGroupUserArrayOutputWithContext(context.Context) GetIdentityGroupUserArrayOutput
}

type GetIdentityGroupUserArray []GetIdentityGroupUserInput

func (GetIdentityGroupUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentityGroupUser)(nil)).Elem()
}

func (i GetIdentityGroupUserArray) ToGetIdentityGroupUserArrayOutput() GetIdentityGroupUserArrayOutput {
	return i.ToGetIdentityGroupUserArrayOutputWithContext(context.Background())
}

func (i GetIdentityGroupUserArray) ToGetIdentityGroupUserArrayOutputWithContext(ctx context.Context) GetIdentityGroupUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityGroupUserArrayOutput)
}

type GetIdentityGroupUserOutput struct{ *pulumi.OutputState }

func (GetIdentityGroupUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityGroupUser)(nil)).Elem()
}

func (o GetIdentityGroupUserOutput) ToGetIdentityGroupUserOutput() GetIdentityGroupUserOutput {
	return o
}

func (o GetIdentityGroupUserOutput) ToGetIdentityGroupUserOutputWithContext(ctx context.Context) GetIdentityGroupUserOutput {
	return o
}

func (o GetIdentityGroupUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityGroupUser) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetIdentityGroupUserOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentityGroupUser) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetIdentityGroupUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityGroupUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIdentityGroupUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityGroupUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIdentityGroupUserOutput) PasswordExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityGroupUser) string { return v.PasswordExpiresAt }).(pulumi.StringOutput)
}

func (o GetIdentityGroupUserOutput) PasswordStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentityGroupUser) bool { return v.PasswordStatus }).(pulumi.BoolOutput)
}

func (o GetIdentityGroupUserOutput) PasswordStrength() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityGroupUser) string { return v.PasswordStrength }).(pulumi.StringOutput)
}

type GetIdentityGroupUserArrayOutput struct{ *pulumi.OutputState }

func (GetIdentityGroupUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentityGroupUser)(nil)).Elem()
}

func (o GetIdentityGroupUserArrayOutput) ToGetIdentityGroupUserArrayOutput() GetIdentityGroupUserArrayOutput {
	return o
}

func (o GetIdentityGroupUserArrayOutput) ToGetIdentityGroupUserArrayOutputWithContext(ctx context.Context) GetIdentityGroupUserArrayOutput {
	return o
}

func (o GetIdentityGroupUserArrayOutput) Index(i pulumi.IntInput) GetIdentityGroupUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIdentityGroupUser {
		return vs[0].([]GetIdentityGroupUser)[vs[1].(int)]
	}).(GetIdentityGroupUserOutput)
}

type GetIdentityProjectsProject struct {
	Enabled bool   `pulumi:"enabled"`
	Id      string `pulumi:"id"`
	Name    string `pulumi:"name"`
}

// GetIdentityProjectsProjectInput is an input type that accepts GetIdentityProjectsProjectArgs and GetIdentityProjectsProjectOutput values.
// You can construct a concrete instance of `GetIdentityProjectsProjectInput` via:
//
//	GetIdentityProjectsProjectArgs{...}
type GetIdentityProjectsProjectInput interface {
	pulumi.Input

	ToGetIdentityProjectsProjectOutput() GetIdentityProjectsProjectOutput
	ToGetIdentityProjectsProjectOutputWithContext(context.Context) GetIdentityProjectsProjectOutput
}

type GetIdentityProjectsProjectArgs struct {
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Id      pulumi.StringInput `pulumi:"id"`
	Name    pulumi.StringInput `pulumi:"name"`
}

func (GetIdentityProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityProjectsProject)(nil)).Elem()
}

func (i GetIdentityProjectsProjectArgs) ToGetIdentityProjectsProjectOutput() GetIdentityProjectsProjectOutput {
	return i.ToGetIdentityProjectsProjectOutputWithContext(context.Background())
}

func (i GetIdentityProjectsProjectArgs) ToGetIdentityProjectsProjectOutputWithContext(ctx context.Context) GetIdentityProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityProjectsProjectOutput)
}

// GetIdentityProjectsProjectArrayInput is an input type that accepts GetIdentityProjectsProjectArray and GetIdentityProjectsProjectArrayOutput values.
// You can construct a concrete instance of `GetIdentityProjectsProjectArrayInput` via:
//
//	GetIdentityProjectsProjectArray{ GetIdentityProjectsProjectArgs{...} }
type GetIdentityProjectsProjectArrayInput interface {
	pulumi.Input

	ToGetIdentityProjectsProjectArrayOutput() GetIdentityProjectsProjectArrayOutput
	ToGetIdentityProjectsProjectArrayOutputWithContext(context.Context) GetIdentityProjectsProjectArrayOutput
}

type GetIdentityProjectsProjectArray []GetIdentityProjectsProjectInput

func (GetIdentityProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentityProjectsProject)(nil)).Elem()
}

func (i GetIdentityProjectsProjectArray) ToGetIdentityProjectsProjectArrayOutput() GetIdentityProjectsProjectArrayOutput {
	return i.ToGetIdentityProjectsProjectArrayOutputWithContext(context.Background())
}

func (i GetIdentityProjectsProjectArray) ToGetIdentityProjectsProjectArrayOutputWithContext(ctx context.Context) GetIdentityProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityProjectsProjectArrayOutput)
}

type GetIdentityProjectsProjectOutput struct{ *pulumi.OutputState }

func (GetIdentityProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityProjectsProject)(nil)).Elem()
}

func (o GetIdentityProjectsProjectOutput) ToGetIdentityProjectsProjectOutput() GetIdentityProjectsProjectOutput {
	return o
}

func (o GetIdentityProjectsProjectOutput) ToGetIdentityProjectsProjectOutputWithContext(ctx context.Context) GetIdentityProjectsProjectOutput {
	return o
}

func (o GetIdentityProjectsProjectOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentityProjectsProject) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetIdentityProjectsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityProjectsProject) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIdentityProjectsProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityProjectsProject) string { return v.Name }).(pulumi.StringOutput)
}

type GetIdentityProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (GetIdentityProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentityProjectsProject)(nil)).Elem()
}

func (o GetIdentityProjectsProjectArrayOutput) ToGetIdentityProjectsProjectArrayOutput() GetIdentityProjectsProjectArrayOutput {
	return o
}

func (o GetIdentityProjectsProjectArrayOutput) ToGetIdentityProjectsProjectArrayOutputWithContext(ctx context.Context) GetIdentityProjectsProjectArrayOutput {
	return o
}

func (o GetIdentityProjectsProjectArrayOutput) Index(i pulumi.IntInput) GetIdentityProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIdentityProjectsProject {
		return vs[0].([]GetIdentityProjectsProject)[vs[1].(int)]
	}).(GetIdentityProjectsProjectOutput)
}

type GetIdentityUsersUser struct {
	Description       string   `pulumi:"description"`
	Enabled           bool     `pulumi:"enabled"`
	Groups            []string `pulumi:"groups"`
	Id                string   `pulumi:"id"`
	Name              string   `pulumi:"name"`
	PasswordExpiresAt string   `pulumi:"passwordExpiresAt"`
	PasswordStatus    bool     `pulumi:"passwordStatus"`
}

// GetIdentityUsersUserInput is an input type that accepts GetIdentityUsersUserArgs and GetIdentityUsersUserOutput values.
// You can construct a concrete instance of `GetIdentityUsersUserInput` via:
//
//	GetIdentityUsersUserArgs{...}
type GetIdentityUsersUserInput interface {
	pulumi.Input

	ToGetIdentityUsersUserOutput() GetIdentityUsersUserOutput
	ToGetIdentityUsersUserOutputWithContext(context.Context) GetIdentityUsersUserOutput
}

type GetIdentityUsersUserArgs struct {
	Description       pulumi.StringInput      `pulumi:"description"`
	Enabled           pulumi.BoolInput        `pulumi:"enabled"`
	Groups            pulumi.StringArrayInput `pulumi:"groups"`
	Id                pulumi.StringInput      `pulumi:"id"`
	Name              pulumi.StringInput      `pulumi:"name"`
	PasswordExpiresAt pulumi.StringInput      `pulumi:"passwordExpiresAt"`
	PasswordStatus    pulumi.BoolInput        `pulumi:"passwordStatus"`
}

func (GetIdentityUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityUsersUser)(nil)).Elem()
}

func (i GetIdentityUsersUserArgs) ToGetIdentityUsersUserOutput() GetIdentityUsersUserOutput {
	return i.ToGetIdentityUsersUserOutputWithContext(context.Background())
}

func (i GetIdentityUsersUserArgs) ToGetIdentityUsersUserOutputWithContext(ctx context.Context) GetIdentityUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityUsersUserOutput)
}

// GetIdentityUsersUserArrayInput is an input type that accepts GetIdentityUsersUserArray and GetIdentityUsersUserArrayOutput values.
// You can construct a concrete instance of `GetIdentityUsersUserArrayInput` via:
//
//	GetIdentityUsersUserArray{ GetIdentityUsersUserArgs{...} }
type GetIdentityUsersUserArrayInput interface {
	pulumi.Input

	ToGetIdentityUsersUserArrayOutput() GetIdentityUsersUserArrayOutput
	ToGetIdentityUsersUserArrayOutputWithContext(context.Context) GetIdentityUsersUserArrayOutput
}

type GetIdentityUsersUserArray []GetIdentityUsersUserInput

func (GetIdentityUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentityUsersUser)(nil)).Elem()
}

func (i GetIdentityUsersUserArray) ToGetIdentityUsersUserArrayOutput() GetIdentityUsersUserArrayOutput {
	return i.ToGetIdentityUsersUserArrayOutputWithContext(context.Background())
}

func (i GetIdentityUsersUserArray) ToGetIdentityUsersUserArrayOutputWithContext(ctx context.Context) GetIdentityUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityUsersUserArrayOutput)
}

type GetIdentityUsersUserOutput struct{ *pulumi.OutputState }

func (GetIdentityUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityUsersUser)(nil)).Elem()
}

func (o GetIdentityUsersUserOutput) ToGetIdentityUsersUserOutput() GetIdentityUsersUserOutput {
	return o
}

func (o GetIdentityUsersUserOutput) ToGetIdentityUsersUserOutputWithContext(ctx context.Context) GetIdentityUsersUserOutput {
	return o
}

func (o GetIdentityUsersUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersUser) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetIdentityUsersUserOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentityUsersUser) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetIdentityUsersUserOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIdentityUsersUser) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o GetIdentityUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIdentityUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIdentityUsersUserOutput) PasswordExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersUser) string { return v.PasswordExpiresAt }).(pulumi.StringOutput)
}

func (o GetIdentityUsersUserOutput) PasswordStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIdentityUsersUser) bool { return v.PasswordStatus }).(pulumi.BoolOutput)
}

type GetIdentityUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetIdentityUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIdentityUsersUser)(nil)).Elem()
}

func (o GetIdentityUsersUserArrayOutput) ToGetIdentityUsersUserArrayOutput() GetIdentityUsersUserArrayOutput {
	return o
}

func (o GetIdentityUsersUserArrayOutput) ToGetIdentityUsersUserArrayOutputWithContext(ctx context.Context) GetIdentityUsersUserArrayOutput {
	return o
}

func (o GetIdentityUsersUserArrayOutput) Index(i pulumi.IntInput) GetIdentityUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIdentityUsersUser {
		return vs[0].([]GetIdentityUsersUser)[vs[1].(int)]
	}).(GetIdentityUsersUserOutput)
}

type GetImagesImagesImage struct {
	ActiveAt            string `pulumi:"activeAt"`
	Architecture        string `pulumi:"architecture"`
	BackupId            string `pulumi:"backupId"`
	ContainerFormat     string `pulumi:"containerFormat"`
	CreatedAt           string `pulumi:"createdAt"`
	DataOrigin          string `pulumi:"dataOrigin"`
	Description         string `pulumi:"description"`
	DiskFormat          string `pulumi:"diskFormat"`
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	File                string `pulumi:"file"`
	Id                  string `pulumi:"id"`
	ImageType           string `pulumi:"imageType"`
	MaxRamMb            int    `pulumi:"maxRamMb"`
	MinDiskGb           int    `pulumi:"minDiskGb"`
	MinRamMb            int    `pulumi:"minRamMb"`
	Name                string `pulumi:"name"`
	Os                  string `pulumi:"os"`
	OsVersion           string `pulumi:"osVersion"`
	Owner               string `pulumi:"owner"`
	Protected           bool   `pulumi:"protected"`
	Schema              string `pulumi:"schema"`
	SizeBytes           int    `pulumi:"sizeBytes"`
	Status              string `pulumi:"status"`
	UpdatedAt           string `pulumi:"updatedAt"`
	Visibility          string `pulumi:"visibility"`
}

// GetImagesImagesImageInput is an input type that accepts GetImagesImagesImageArgs and GetImagesImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImagesImageInput` via:
//
//	GetImagesImagesImageArgs{...}
type GetImagesImagesImageInput interface {
	pulumi.Input

	ToGetImagesImagesImageOutput() GetImagesImagesImageOutput
	ToGetImagesImagesImageOutputWithContext(context.Context) GetImagesImagesImageOutput
}

type GetImagesImagesImageArgs struct {
	ActiveAt            pulumi.StringInput `pulumi:"activeAt"`
	Architecture        pulumi.StringInput `pulumi:"architecture"`
	BackupId            pulumi.StringInput `pulumi:"backupId"`
	ContainerFormat     pulumi.StringInput `pulumi:"containerFormat"`
	CreatedAt           pulumi.StringInput `pulumi:"createdAt"`
	DataOrigin          pulumi.StringInput `pulumi:"dataOrigin"`
	Description         pulumi.StringInput `pulumi:"description"`
	DiskFormat          pulumi.StringInput `pulumi:"diskFormat"`
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	File                pulumi.StringInput `pulumi:"file"`
	Id                  pulumi.StringInput `pulumi:"id"`
	ImageType           pulumi.StringInput `pulumi:"imageType"`
	MaxRamMb            pulumi.IntInput    `pulumi:"maxRamMb"`
	MinDiskGb           pulumi.IntInput    `pulumi:"minDiskGb"`
	MinRamMb            pulumi.IntInput    `pulumi:"minRamMb"`
	Name                pulumi.StringInput `pulumi:"name"`
	Os                  pulumi.StringInput `pulumi:"os"`
	OsVersion           pulumi.StringInput `pulumi:"osVersion"`
	Owner               pulumi.StringInput `pulumi:"owner"`
	Protected           pulumi.BoolInput   `pulumi:"protected"`
	Schema              pulumi.StringInput `pulumi:"schema"`
	SizeBytes           pulumi.IntInput    `pulumi:"sizeBytes"`
	Status              pulumi.StringInput `pulumi:"status"`
	UpdatedAt           pulumi.StringInput `pulumi:"updatedAt"`
	Visibility          pulumi.StringInput `pulumi:"visibility"`
}

func (GetImagesImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImagesImage)(nil)).Elem()
}

func (i GetImagesImagesImageArgs) ToGetImagesImagesImageOutput() GetImagesImagesImageOutput {
	return i.ToGetImagesImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImagesImageArgs) ToGetImagesImagesImageOutputWithContext(ctx context.Context) GetImagesImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImagesImageOutput)
}

// GetImagesImagesImageArrayInput is an input type that accepts GetImagesImagesImageArray and GetImagesImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImagesImageArrayInput` via:
//
//	GetImagesImagesImageArray{ GetImagesImagesImageArgs{...} }
type GetImagesImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImagesImageArrayOutput() GetImagesImagesImageArrayOutput
	ToGetImagesImagesImageArrayOutputWithContext(context.Context) GetImagesImagesImageArrayOutput
}

type GetImagesImagesImageArray []GetImagesImagesImageInput

func (GetImagesImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImagesImage)(nil)).Elem()
}

func (i GetImagesImagesImageArray) ToGetImagesImagesImageArrayOutput() GetImagesImagesImageArrayOutput {
	return i.ToGetImagesImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImagesImageArray) ToGetImagesImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImagesImageArrayOutput)
}

type GetImagesImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImagesImage)(nil)).Elem()
}

func (o GetImagesImagesImageOutput) ToGetImagesImagesImageOutput() GetImagesImagesImageOutput {
	return o
}

func (o GetImagesImagesImageOutput) ToGetImagesImagesImageOutputWithContext(ctx context.Context) GetImagesImagesImageOutput {
	return o
}

func (o GetImagesImagesImageOutput) ActiveAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.ActiveAt }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.BackupId }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) ContainerFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.ContainerFormat }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) DataOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.DataOrigin }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) DiskFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.DiskFormat }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.File }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) MaxRamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImagesImage) int { return v.MaxRamMb }).(pulumi.IntOutput)
}

func (o GetImagesImagesImageOutput) MinDiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImagesImage) int { return v.MinDiskGb }).(pulumi.IntOutput)
}

func (o GetImagesImagesImageOutput) MinRamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImagesImage) int { return v.MinRamMb }).(pulumi.IntOutput)
}

func (o GetImagesImagesImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Os }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.OsVersion }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) Protected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImagesImage) bool { return v.Protected }).(pulumi.BoolOutput)
}

func (o GetImagesImagesImageOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Schema }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) SizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImagesImage) int { return v.SizeBytes }).(pulumi.IntOutput)
}

func (o GetImagesImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o GetImagesImagesImageOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImagesImage) string { return v.Visibility }).(pulumi.StringOutput)
}

type GetImagesImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImagesImage)(nil)).Elem()
}

func (o GetImagesImagesImageArrayOutput) ToGetImagesImagesImageArrayOutput() GetImagesImagesImageArrayOutput {
	return o
}

func (o GetImagesImagesImageArrayOutput) ToGetImagesImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImagesImageArrayOutput {
	return o
}

func (o GetImagesImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImagesImage {
		return vs[0].([]GetImagesImagesImage)[vs[1].(int)]
	}).(GetImagesImagesImageOutput)
}

type GetKpsFailedTasksTask struct {
	// The ID of the task.
	Id string `pulumi:"id"`
	// The name of the keypair associated with the task.
	KeypairName string `pulumi:"keypairName"`
	// The operation type of the task.
	OperateType string `pulumi:"operateType"`
	// The ID of the instance associated with the task.
	ServerId string `pulumi:"serverId"`
	// The name of the instance associated with the task.
	ServerName string `pulumi:"serverName"`
	// The error code of the task execution failure.
	TaskErrorCode string `pulumi:"taskErrorCode"`
	// The error information of the task execution failure.
	TaskErrorMsg string `pulumi:"taskErrorMsg"`
	// The start time of the task, in RFC3339 format.
	TaskTime string `pulumi:"taskTime"`
}

// GetKpsFailedTasksTaskInput is an input type that accepts GetKpsFailedTasksTaskArgs and GetKpsFailedTasksTaskOutput values.
// You can construct a concrete instance of `GetKpsFailedTasksTaskInput` via:
//
//	GetKpsFailedTasksTaskArgs{...}
type GetKpsFailedTasksTaskInput interface {
	pulumi.Input

	ToGetKpsFailedTasksTaskOutput() GetKpsFailedTasksTaskOutput
	ToGetKpsFailedTasksTaskOutputWithContext(context.Context) GetKpsFailedTasksTaskOutput
}

type GetKpsFailedTasksTaskArgs struct {
	// The ID of the task.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the keypair associated with the task.
	KeypairName pulumi.StringInput `pulumi:"keypairName"`
	// The operation type of the task.
	OperateType pulumi.StringInput `pulumi:"operateType"`
	// The ID of the instance associated with the task.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The name of the instance associated with the task.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The error code of the task execution failure.
	TaskErrorCode pulumi.StringInput `pulumi:"taskErrorCode"`
	// The error information of the task execution failure.
	TaskErrorMsg pulumi.StringInput `pulumi:"taskErrorMsg"`
	// The start time of the task, in RFC3339 format.
	TaskTime pulumi.StringInput `pulumi:"taskTime"`
}

func (GetKpsFailedTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKpsFailedTasksTask)(nil)).Elem()
}

func (i GetKpsFailedTasksTaskArgs) ToGetKpsFailedTasksTaskOutput() GetKpsFailedTasksTaskOutput {
	return i.ToGetKpsFailedTasksTaskOutputWithContext(context.Background())
}

func (i GetKpsFailedTasksTaskArgs) ToGetKpsFailedTasksTaskOutputWithContext(ctx context.Context) GetKpsFailedTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKpsFailedTasksTaskOutput)
}

// GetKpsFailedTasksTaskArrayInput is an input type that accepts GetKpsFailedTasksTaskArray and GetKpsFailedTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetKpsFailedTasksTaskArrayInput` via:
//
//	GetKpsFailedTasksTaskArray{ GetKpsFailedTasksTaskArgs{...} }
type GetKpsFailedTasksTaskArrayInput interface {
	pulumi.Input

	ToGetKpsFailedTasksTaskArrayOutput() GetKpsFailedTasksTaskArrayOutput
	ToGetKpsFailedTasksTaskArrayOutputWithContext(context.Context) GetKpsFailedTasksTaskArrayOutput
}

type GetKpsFailedTasksTaskArray []GetKpsFailedTasksTaskInput

func (GetKpsFailedTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKpsFailedTasksTask)(nil)).Elem()
}

func (i GetKpsFailedTasksTaskArray) ToGetKpsFailedTasksTaskArrayOutput() GetKpsFailedTasksTaskArrayOutput {
	return i.ToGetKpsFailedTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetKpsFailedTasksTaskArray) ToGetKpsFailedTasksTaskArrayOutputWithContext(ctx context.Context) GetKpsFailedTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKpsFailedTasksTaskArrayOutput)
}

type GetKpsFailedTasksTaskOutput struct{ *pulumi.OutputState }

func (GetKpsFailedTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKpsFailedTasksTask)(nil)).Elem()
}

func (o GetKpsFailedTasksTaskOutput) ToGetKpsFailedTasksTaskOutput() GetKpsFailedTasksTaskOutput {
	return o
}

func (o GetKpsFailedTasksTaskOutput) ToGetKpsFailedTasksTaskOutputWithContext(ctx context.Context) GetKpsFailedTasksTaskOutput {
	return o
}

// The ID of the task.
func (o GetKpsFailedTasksTaskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the keypair associated with the task.
func (o GetKpsFailedTasksTaskOutput) KeypairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.KeypairName }).(pulumi.StringOutput)
}

// The operation type of the task.
func (o GetKpsFailedTasksTaskOutput) OperateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.OperateType }).(pulumi.StringOutput)
}

// The ID of the instance associated with the task.
func (o GetKpsFailedTasksTaskOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.ServerId }).(pulumi.StringOutput)
}

// The name of the instance associated with the task.
func (o GetKpsFailedTasksTaskOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.ServerName }).(pulumi.StringOutput)
}

// The error code of the task execution failure.
func (o GetKpsFailedTasksTaskOutput) TaskErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.TaskErrorCode }).(pulumi.StringOutput)
}

// The error information of the task execution failure.
func (o GetKpsFailedTasksTaskOutput) TaskErrorMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.TaskErrorMsg }).(pulumi.StringOutput)
}

// The start time of the task, in RFC3339 format.
func (o GetKpsFailedTasksTaskOutput) TaskTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsFailedTasksTask) string { return v.TaskTime }).(pulumi.StringOutput)
}

type GetKpsFailedTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetKpsFailedTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKpsFailedTasksTask)(nil)).Elem()
}

func (o GetKpsFailedTasksTaskArrayOutput) ToGetKpsFailedTasksTaskArrayOutput() GetKpsFailedTasksTaskArrayOutput {
	return o
}

func (o GetKpsFailedTasksTaskArrayOutput) ToGetKpsFailedTasksTaskArrayOutputWithContext(ctx context.Context) GetKpsFailedTasksTaskArrayOutput {
	return o
}

func (o GetKpsFailedTasksTaskArrayOutput) Index(i pulumi.IntInput) GetKpsFailedTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKpsFailedTasksTask {
		return vs[0].([]GetKpsFailedTasksTask)[vs[1].(int)]
	}).(GetKpsFailedTasksTaskOutput)
}

type GetKpsKeypairsKeypair struct {
	Fingerprint string `pulumi:"fingerprint"`
	IsManaged   bool   `pulumi:"isManaged"`
	Name        string `pulumi:"name"`
	PublicKey   string `pulumi:"publicKey"`
	Scope       string `pulumi:"scope"`
}

// GetKpsKeypairsKeypairInput is an input type that accepts GetKpsKeypairsKeypairArgs and GetKpsKeypairsKeypairOutput values.
// You can construct a concrete instance of `GetKpsKeypairsKeypairInput` via:
//
//	GetKpsKeypairsKeypairArgs{...}
type GetKpsKeypairsKeypairInput interface {
	pulumi.Input

	ToGetKpsKeypairsKeypairOutput() GetKpsKeypairsKeypairOutput
	ToGetKpsKeypairsKeypairOutputWithContext(context.Context) GetKpsKeypairsKeypairOutput
}

type GetKpsKeypairsKeypairArgs struct {
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	IsManaged   pulumi.BoolInput   `pulumi:"isManaged"`
	Name        pulumi.StringInput `pulumi:"name"`
	PublicKey   pulumi.StringInput `pulumi:"publicKey"`
	Scope       pulumi.StringInput `pulumi:"scope"`
}

func (GetKpsKeypairsKeypairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKpsKeypairsKeypair)(nil)).Elem()
}

func (i GetKpsKeypairsKeypairArgs) ToGetKpsKeypairsKeypairOutput() GetKpsKeypairsKeypairOutput {
	return i.ToGetKpsKeypairsKeypairOutputWithContext(context.Background())
}

func (i GetKpsKeypairsKeypairArgs) ToGetKpsKeypairsKeypairOutputWithContext(ctx context.Context) GetKpsKeypairsKeypairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKpsKeypairsKeypairOutput)
}

// GetKpsKeypairsKeypairArrayInput is an input type that accepts GetKpsKeypairsKeypairArray and GetKpsKeypairsKeypairArrayOutput values.
// You can construct a concrete instance of `GetKpsKeypairsKeypairArrayInput` via:
//
//	GetKpsKeypairsKeypairArray{ GetKpsKeypairsKeypairArgs{...} }
type GetKpsKeypairsKeypairArrayInput interface {
	pulumi.Input

	ToGetKpsKeypairsKeypairArrayOutput() GetKpsKeypairsKeypairArrayOutput
	ToGetKpsKeypairsKeypairArrayOutputWithContext(context.Context) GetKpsKeypairsKeypairArrayOutput
}

type GetKpsKeypairsKeypairArray []GetKpsKeypairsKeypairInput

func (GetKpsKeypairsKeypairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKpsKeypairsKeypair)(nil)).Elem()
}

func (i GetKpsKeypairsKeypairArray) ToGetKpsKeypairsKeypairArrayOutput() GetKpsKeypairsKeypairArrayOutput {
	return i.ToGetKpsKeypairsKeypairArrayOutputWithContext(context.Background())
}

func (i GetKpsKeypairsKeypairArray) ToGetKpsKeypairsKeypairArrayOutputWithContext(ctx context.Context) GetKpsKeypairsKeypairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKpsKeypairsKeypairArrayOutput)
}

type GetKpsKeypairsKeypairOutput struct{ *pulumi.OutputState }

func (GetKpsKeypairsKeypairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKpsKeypairsKeypair)(nil)).Elem()
}

func (o GetKpsKeypairsKeypairOutput) ToGetKpsKeypairsKeypairOutput() GetKpsKeypairsKeypairOutput {
	return o
}

func (o GetKpsKeypairsKeypairOutput) ToGetKpsKeypairsKeypairOutputWithContext(ctx context.Context) GetKpsKeypairsKeypairOutput {
	return o
}

func (o GetKpsKeypairsKeypairOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsKeypairsKeypair) string { return v.Fingerprint }).(pulumi.StringOutput)
}

func (o GetKpsKeypairsKeypairOutput) IsManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKpsKeypairsKeypair) bool { return v.IsManaged }).(pulumi.BoolOutput)
}

func (o GetKpsKeypairsKeypairOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsKeypairsKeypair) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKpsKeypairsKeypairOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsKeypairsKeypair) string { return v.PublicKey }).(pulumi.StringOutput)
}

func (o GetKpsKeypairsKeypairOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsKeypairsKeypair) string { return v.Scope }).(pulumi.StringOutput)
}

type GetKpsKeypairsKeypairArrayOutput struct{ *pulumi.OutputState }

func (GetKpsKeypairsKeypairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKpsKeypairsKeypair)(nil)).Elem()
}

func (o GetKpsKeypairsKeypairArrayOutput) ToGetKpsKeypairsKeypairArrayOutput() GetKpsKeypairsKeypairArrayOutput {
	return o
}

func (o GetKpsKeypairsKeypairArrayOutput) ToGetKpsKeypairsKeypairArrayOutputWithContext(ctx context.Context) GetKpsKeypairsKeypairArrayOutput {
	return o
}

func (o GetKpsKeypairsKeypairArrayOutput) Index(i pulumi.IntInput) GetKpsKeypairsKeypairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKpsKeypairsKeypair {
		return vs[0].([]GetKpsKeypairsKeypair)[vs[1].(int)]
	}).(GetKpsKeypairsKeypairOutput)
}

type GetKpsRunningTasksTask struct {
	// The ID of the task.
	Id string `pulumi:"id"`
	// The name of the keypair associated with the task.
	KeypairName string `pulumi:"keypairName"`
	// The operation type of the task.
	OperateType string `pulumi:"operateType"`
	// The ID of the instance associated with the task.
	ServerId string `pulumi:"serverId"`
	// The name of the instance associated with the task.
	ServerName string `pulumi:"serverName"`
	// The start time of the task, in RFC3339 format.
	TaskTime string `pulumi:"taskTime"`
}

// GetKpsRunningTasksTaskInput is an input type that accepts GetKpsRunningTasksTaskArgs and GetKpsRunningTasksTaskOutput values.
// You can construct a concrete instance of `GetKpsRunningTasksTaskInput` via:
//
//	GetKpsRunningTasksTaskArgs{...}
type GetKpsRunningTasksTaskInput interface {
	pulumi.Input

	ToGetKpsRunningTasksTaskOutput() GetKpsRunningTasksTaskOutput
	ToGetKpsRunningTasksTaskOutputWithContext(context.Context) GetKpsRunningTasksTaskOutput
}

type GetKpsRunningTasksTaskArgs struct {
	// The ID of the task.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the keypair associated with the task.
	KeypairName pulumi.StringInput `pulumi:"keypairName"`
	// The operation type of the task.
	OperateType pulumi.StringInput `pulumi:"operateType"`
	// The ID of the instance associated with the task.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The name of the instance associated with the task.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The start time of the task, in RFC3339 format.
	TaskTime pulumi.StringInput `pulumi:"taskTime"`
}

func (GetKpsRunningTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKpsRunningTasksTask)(nil)).Elem()
}

func (i GetKpsRunningTasksTaskArgs) ToGetKpsRunningTasksTaskOutput() GetKpsRunningTasksTaskOutput {
	return i.ToGetKpsRunningTasksTaskOutputWithContext(context.Background())
}

func (i GetKpsRunningTasksTaskArgs) ToGetKpsRunningTasksTaskOutputWithContext(ctx context.Context) GetKpsRunningTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKpsRunningTasksTaskOutput)
}

// GetKpsRunningTasksTaskArrayInput is an input type that accepts GetKpsRunningTasksTaskArray and GetKpsRunningTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetKpsRunningTasksTaskArrayInput` via:
//
//	GetKpsRunningTasksTaskArray{ GetKpsRunningTasksTaskArgs{...} }
type GetKpsRunningTasksTaskArrayInput interface {
	pulumi.Input

	ToGetKpsRunningTasksTaskArrayOutput() GetKpsRunningTasksTaskArrayOutput
	ToGetKpsRunningTasksTaskArrayOutputWithContext(context.Context) GetKpsRunningTasksTaskArrayOutput
}

type GetKpsRunningTasksTaskArray []GetKpsRunningTasksTaskInput

func (GetKpsRunningTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKpsRunningTasksTask)(nil)).Elem()
}

func (i GetKpsRunningTasksTaskArray) ToGetKpsRunningTasksTaskArrayOutput() GetKpsRunningTasksTaskArrayOutput {
	return i.ToGetKpsRunningTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetKpsRunningTasksTaskArray) ToGetKpsRunningTasksTaskArrayOutputWithContext(ctx context.Context) GetKpsRunningTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKpsRunningTasksTaskArrayOutput)
}

type GetKpsRunningTasksTaskOutput struct{ *pulumi.OutputState }

func (GetKpsRunningTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKpsRunningTasksTask)(nil)).Elem()
}

func (o GetKpsRunningTasksTaskOutput) ToGetKpsRunningTasksTaskOutput() GetKpsRunningTasksTaskOutput {
	return o
}

func (o GetKpsRunningTasksTaskOutput) ToGetKpsRunningTasksTaskOutputWithContext(ctx context.Context) GetKpsRunningTasksTaskOutput {
	return o
}

// The ID of the task.
func (o GetKpsRunningTasksTaskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsRunningTasksTask) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the keypair associated with the task.
func (o GetKpsRunningTasksTaskOutput) KeypairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsRunningTasksTask) string { return v.KeypairName }).(pulumi.StringOutput)
}

// The operation type of the task.
func (o GetKpsRunningTasksTaskOutput) OperateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsRunningTasksTask) string { return v.OperateType }).(pulumi.StringOutput)
}

// The ID of the instance associated with the task.
func (o GetKpsRunningTasksTaskOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsRunningTasksTask) string { return v.ServerId }).(pulumi.StringOutput)
}

// The name of the instance associated with the task.
func (o GetKpsRunningTasksTaskOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsRunningTasksTask) string { return v.ServerName }).(pulumi.StringOutput)
}

// The start time of the task, in RFC3339 format.
func (o GetKpsRunningTasksTaskOutput) TaskTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKpsRunningTasksTask) string { return v.TaskTime }).(pulumi.StringOutput)
}

type GetKpsRunningTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetKpsRunningTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKpsRunningTasksTask)(nil)).Elem()
}

func (o GetKpsRunningTasksTaskArrayOutput) ToGetKpsRunningTasksTaskArrayOutput() GetKpsRunningTasksTaskArrayOutput {
	return o
}

func (o GetKpsRunningTasksTaskArrayOutput) ToGetKpsRunningTasksTaskArrayOutputWithContext(ctx context.Context) GetKpsRunningTasksTaskArrayOutput {
	return o
}

func (o GetKpsRunningTasksTaskArrayOutput) Index(i pulumi.IntInput) GetKpsRunningTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKpsRunningTasksTask {
		return vs[0].([]GetKpsRunningTasksTask)[vs[1].(int)]
	}).(GetKpsRunningTasksTaskOutput)
}

type GetLbListenersListener struct {
	// The maximum number of connections allowed for the listener.
	ConnectionLimit int `pulumi:"connectionLimit"`
	// The ID of the default pool with which the ELB listener is associated.
	DefaultPoolId string `pulumi:"defaultPoolId"`
	// The ID of the server certificate used by the listener.
	DefaultTlsContainerRef string `pulumi:"defaultTlsContainerRef"`
	// The description of the ELB listener.
	Description string `pulumi:"description"`
	// Whether the ELB listener uses HTTP/2.
	Http2Enable bool `pulumi:"http2Enable"`
	// The ELB listener ID.
	Id string `pulumi:"id"`
	// Loadbalancer list. For details, see Data structure of the loadbalancer field.
	Loadbalancers []GetLbListenersListenerLoadbalancer `pulumi:"loadbalancers"`
	// The listener name.
	Name string `pulumi:"name"`
	// The listener protocol.
	Protocol string `pulumi:"protocol"`
	// The front-end listening port of the listener.
	ProtocolPort int `pulumi:"protocolPort"`
	// List of the SNI certificate (server certificates with a domain name) IDs used by the listener.
	SniContainerRefs []string `pulumi:"sniContainerRefs"`
}

// GetLbListenersListenerInput is an input type that accepts GetLbListenersListenerArgs and GetLbListenersListenerOutput values.
// You can construct a concrete instance of `GetLbListenersListenerInput` via:
//
//	GetLbListenersListenerArgs{...}
type GetLbListenersListenerInput interface {
	pulumi.Input

	ToGetLbListenersListenerOutput() GetLbListenersListenerOutput
	ToGetLbListenersListenerOutputWithContext(context.Context) GetLbListenersListenerOutput
}

type GetLbListenersListenerArgs struct {
	// The maximum number of connections allowed for the listener.
	ConnectionLimit pulumi.IntInput `pulumi:"connectionLimit"`
	// The ID of the default pool with which the ELB listener is associated.
	DefaultPoolId pulumi.StringInput `pulumi:"defaultPoolId"`
	// The ID of the server certificate used by the listener.
	DefaultTlsContainerRef pulumi.StringInput `pulumi:"defaultTlsContainerRef"`
	// The description of the ELB listener.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the ELB listener uses HTTP/2.
	Http2Enable pulumi.BoolInput `pulumi:"http2Enable"`
	// The ELB listener ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Loadbalancer list. For details, see Data structure of the loadbalancer field.
	Loadbalancers GetLbListenersListenerLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// The listener name.
	Name pulumi.StringInput `pulumi:"name"`
	// The listener protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The front-end listening port of the listener.
	ProtocolPort pulumi.IntInput `pulumi:"protocolPort"`
	// List of the SNI certificate (server certificates with a domain name) IDs used by the listener.
	SniContainerRefs pulumi.StringArrayInput `pulumi:"sniContainerRefs"`
}

func (GetLbListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbListenersListener)(nil)).Elem()
}

func (i GetLbListenersListenerArgs) ToGetLbListenersListenerOutput() GetLbListenersListenerOutput {
	return i.ToGetLbListenersListenerOutputWithContext(context.Background())
}

func (i GetLbListenersListenerArgs) ToGetLbListenersListenerOutputWithContext(ctx context.Context) GetLbListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbListenersListenerOutput)
}

// GetLbListenersListenerArrayInput is an input type that accepts GetLbListenersListenerArray and GetLbListenersListenerArrayOutput values.
// You can construct a concrete instance of `GetLbListenersListenerArrayInput` via:
//
//	GetLbListenersListenerArray{ GetLbListenersListenerArgs{...} }
type GetLbListenersListenerArrayInput interface {
	pulumi.Input

	ToGetLbListenersListenerArrayOutput() GetLbListenersListenerArrayOutput
	ToGetLbListenersListenerArrayOutputWithContext(context.Context) GetLbListenersListenerArrayOutput
}

type GetLbListenersListenerArray []GetLbListenersListenerInput

func (GetLbListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbListenersListener)(nil)).Elem()
}

func (i GetLbListenersListenerArray) ToGetLbListenersListenerArrayOutput() GetLbListenersListenerArrayOutput {
	return i.ToGetLbListenersListenerArrayOutputWithContext(context.Background())
}

func (i GetLbListenersListenerArray) ToGetLbListenersListenerArrayOutputWithContext(ctx context.Context) GetLbListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbListenersListenerArrayOutput)
}

type GetLbListenersListenerOutput struct{ *pulumi.OutputState }

func (GetLbListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbListenersListener)(nil)).Elem()
}

func (o GetLbListenersListenerOutput) ToGetLbListenersListenerOutput() GetLbListenersListenerOutput {
	return o
}

func (o GetLbListenersListenerOutput) ToGetLbListenersListenerOutputWithContext(ctx context.Context) GetLbListenersListenerOutput {
	return o
}

// The maximum number of connections allowed for the listener.
func (o GetLbListenersListenerOutput) ConnectionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbListenersListener) int { return v.ConnectionLimit }).(pulumi.IntOutput)
}

// The ID of the default pool with which the ELB listener is associated.
func (o GetLbListenersListenerOutput) DefaultPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbListenersListener) string { return v.DefaultPoolId }).(pulumi.StringOutput)
}

// The ID of the server certificate used by the listener.
func (o GetLbListenersListenerOutput) DefaultTlsContainerRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbListenersListener) string { return v.DefaultTlsContainerRef }).(pulumi.StringOutput)
}

// The description of the ELB listener.
func (o GetLbListenersListenerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbListenersListener) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the ELB listener uses HTTP/2.
func (o GetLbListenersListenerOutput) Http2Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLbListenersListener) bool { return v.Http2Enable }).(pulumi.BoolOutput)
}

// The ELB listener ID.
func (o GetLbListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

// Loadbalancer list. For details, see Data structure of the loadbalancer field.
func (o GetLbListenersListenerOutput) Loadbalancers() GetLbListenersListenerLoadbalancerArrayOutput {
	return o.ApplyT(func(v GetLbListenersListener) []GetLbListenersListenerLoadbalancer { return v.Loadbalancers }).(GetLbListenersListenerLoadbalancerArrayOutput)
}

// The listener name.
func (o GetLbListenersListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbListenersListener) string { return v.Name }).(pulumi.StringOutput)
}

// The listener protocol.
func (o GetLbListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// The front-end listening port of the listener.
func (o GetLbListenersListenerOutput) ProtocolPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbListenersListener) int { return v.ProtocolPort }).(pulumi.IntOutput)
}

// List of the SNI certificate (server certificates with a domain name) IDs used by the listener.
func (o GetLbListenersListenerOutput) SniContainerRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbListenersListener) []string { return v.SniContainerRefs }).(pulumi.StringArrayOutput)
}

type GetLbListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (GetLbListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbListenersListener)(nil)).Elem()
}

func (o GetLbListenersListenerArrayOutput) ToGetLbListenersListenerArrayOutput() GetLbListenersListenerArrayOutput {
	return o
}

func (o GetLbListenersListenerArrayOutput) ToGetLbListenersListenerArrayOutputWithContext(ctx context.Context) GetLbListenersListenerArrayOutput {
	return o
}

func (o GetLbListenersListenerArrayOutput) Index(i pulumi.IntInput) GetLbListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbListenersListener {
		return vs[0].([]GetLbListenersListener)[vs[1].(int)]
	}).(GetLbListenersListenerOutput)
}

type GetLbListenersListenerLoadbalancer struct {
	// The loadbalancer ID.
	Id string `pulumi:"id"`
}

// GetLbListenersListenerLoadbalancerInput is an input type that accepts GetLbListenersListenerLoadbalancerArgs and GetLbListenersListenerLoadbalancerOutput values.
// You can construct a concrete instance of `GetLbListenersListenerLoadbalancerInput` via:
//
//	GetLbListenersListenerLoadbalancerArgs{...}
type GetLbListenersListenerLoadbalancerInput interface {
	pulumi.Input

	ToGetLbListenersListenerLoadbalancerOutput() GetLbListenersListenerLoadbalancerOutput
	ToGetLbListenersListenerLoadbalancerOutputWithContext(context.Context) GetLbListenersListenerLoadbalancerOutput
}

type GetLbListenersListenerLoadbalancerArgs struct {
	// The loadbalancer ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetLbListenersListenerLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbListenersListenerLoadbalancer)(nil)).Elem()
}

func (i GetLbListenersListenerLoadbalancerArgs) ToGetLbListenersListenerLoadbalancerOutput() GetLbListenersListenerLoadbalancerOutput {
	return i.ToGetLbListenersListenerLoadbalancerOutputWithContext(context.Background())
}

func (i GetLbListenersListenerLoadbalancerArgs) ToGetLbListenersListenerLoadbalancerOutputWithContext(ctx context.Context) GetLbListenersListenerLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbListenersListenerLoadbalancerOutput)
}

// GetLbListenersListenerLoadbalancerArrayInput is an input type that accepts GetLbListenersListenerLoadbalancerArray and GetLbListenersListenerLoadbalancerArrayOutput values.
// You can construct a concrete instance of `GetLbListenersListenerLoadbalancerArrayInput` via:
//
//	GetLbListenersListenerLoadbalancerArray{ GetLbListenersListenerLoadbalancerArgs{...} }
type GetLbListenersListenerLoadbalancerArrayInput interface {
	pulumi.Input

	ToGetLbListenersListenerLoadbalancerArrayOutput() GetLbListenersListenerLoadbalancerArrayOutput
	ToGetLbListenersListenerLoadbalancerArrayOutputWithContext(context.Context) GetLbListenersListenerLoadbalancerArrayOutput
}

type GetLbListenersListenerLoadbalancerArray []GetLbListenersListenerLoadbalancerInput

func (GetLbListenersListenerLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbListenersListenerLoadbalancer)(nil)).Elem()
}

func (i GetLbListenersListenerLoadbalancerArray) ToGetLbListenersListenerLoadbalancerArrayOutput() GetLbListenersListenerLoadbalancerArrayOutput {
	return i.ToGetLbListenersListenerLoadbalancerArrayOutputWithContext(context.Background())
}

func (i GetLbListenersListenerLoadbalancerArray) ToGetLbListenersListenerLoadbalancerArrayOutputWithContext(ctx context.Context) GetLbListenersListenerLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbListenersListenerLoadbalancerArrayOutput)
}

type GetLbListenersListenerLoadbalancerOutput struct{ *pulumi.OutputState }

func (GetLbListenersListenerLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbListenersListenerLoadbalancer)(nil)).Elem()
}

func (o GetLbListenersListenerLoadbalancerOutput) ToGetLbListenersListenerLoadbalancerOutput() GetLbListenersListenerLoadbalancerOutput {
	return o
}

func (o GetLbListenersListenerLoadbalancerOutput) ToGetLbListenersListenerLoadbalancerOutputWithContext(ctx context.Context) GetLbListenersListenerLoadbalancerOutput {
	return o
}

// The loadbalancer ID.
func (o GetLbListenersListenerLoadbalancerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbListenersListenerLoadbalancer) string { return v.Id }).(pulumi.StringOutput)
}

type GetLbListenersListenerLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (GetLbListenersListenerLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbListenersListenerLoadbalancer)(nil)).Elem()
}

func (o GetLbListenersListenerLoadbalancerArrayOutput) ToGetLbListenersListenerLoadbalancerArrayOutput() GetLbListenersListenerLoadbalancerArrayOutput {
	return o
}

func (o GetLbListenersListenerLoadbalancerArrayOutput) ToGetLbListenersListenerLoadbalancerArrayOutputWithContext(ctx context.Context) GetLbListenersListenerLoadbalancerArrayOutput {
	return o
}

func (o GetLbListenersListenerLoadbalancerArrayOutput) Index(i pulumi.IntInput) GetLbListenersListenerLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbListenersListenerLoadbalancer {
		return vs[0].([]GetLbListenersListenerLoadbalancer)[vs[1].(int)]
	}).(GetLbListenersListenerLoadbalancerOutput)
}

type GetLbPoolsPool struct {
	// The description of pool.
	Description string `pulumi:"description"`
	// Specifies the health monitor ID of the LB pool.
	HealthmonitorId string `pulumi:"healthmonitorId"`
	// The pool ID.
	Id string `pulumi:"id"`
	// The method of the LB pool.
	LbMethod string `pulumi:"lbMethod"`
	// Listener list. For details, see Data structure of the listener field.
	Listeners []GetLbPoolsPoolListener `pulumi:"listeners"`
	// Loadbalancer list. For details, see Data structure of the loadbalancer field.
	Loadbalancers []GetLbPoolsPoolLoadbalancer `pulumi:"loadbalancers"`
	// Loadbalancer list. For details, see Data structure of the members field.
	Members []GetLbPoolsPoolMember `pulumi:"members"`
	// The pool name.
	Name         string                      `pulumi:"name"`
	Persistences []GetLbPoolsPoolPersistence `pulumi:"persistences"`
	// The protocol of pool.
	Protocol string `pulumi:"protocol"`
}

// GetLbPoolsPoolInput is an input type that accepts GetLbPoolsPoolArgs and GetLbPoolsPoolOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolInput` via:
//
//	GetLbPoolsPoolArgs{...}
type GetLbPoolsPoolInput interface {
	pulumi.Input

	ToGetLbPoolsPoolOutput() GetLbPoolsPoolOutput
	ToGetLbPoolsPoolOutputWithContext(context.Context) GetLbPoolsPoolOutput
}

type GetLbPoolsPoolArgs struct {
	// The description of pool.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the health monitor ID of the LB pool.
	HealthmonitorId pulumi.StringInput `pulumi:"healthmonitorId"`
	// The pool ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The method of the LB pool.
	LbMethod pulumi.StringInput `pulumi:"lbMethod"`
	// Listener list. For details, see Data structure of the listener field.
	Listeners GetLbPoolsPoolListenerArrayInput `pulumi:"listeners"`
	// Loadbalancer list. For details, see Data structure of the loadbalancer field.
	Loadbalancers GetLbPoolsPoolLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// Loadbalancer list. For details, see Data structure of the members field.
	Members GetLbPoolsPoolMemberArrayInput `pulumi:"members"`
	// The pool name.
	Name         pulumi.StringInput                  `pulumi:"name"`
	Persistences GetLbPoolsPoolPersistenceArrayInput `pulumi:"persistences"`
	// The protocol of pool.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetLbPoolsPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPool)(nil)).Elem()
}

func (i GetLbPoolsPoolArgs) ToGetLbPoolsPoolOutput() GetLbPoolsPoolOutput {
	return i.ToGetLbPoolsPoolOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolArgs) ToGetLbPoolsPoolOutputWithContext(ctx context.Context) GetLbPoolsPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolOutput)
}

// GetLbPoolsPoolArrayInput is an input type that accepts GetLbPoolsPoolArray and GetLbPoolsPoolArrayOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolArrayInput` via:
//
//	GetLbPoolsPoolArray{ GetLbPoolsPoolArgs{...} }
type GetLbPoolsPoolArrayInput interface {
	pulumi.Input

	ToGetLbPoolsPoolArrayOutput() GetLbPoolsPoolArrayOutput
	ToGetLbPoolsPoolArrayOutputWithContext(context.Context) GetLbPoolsPoolArrayOutput
}

type GetLbPoolsPoolArray []GetLbPoolsPoolInput

func (GetLbPoolsPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPool)(nil)).Elem()
}

func (i GetLbPoolsPoolArray) ToGetLbPoolsPoolArrayOutput() GetLbPoolsPoolArrayOutput {
	return i.ToGetLbPoolsPoolArrayOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolArray) ToGetLbPoolsPoolArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolArrayOutput)
}

type GetLbPoolsPoolOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPool)(nil)).Elem()
}

func (o GetLbPoolsPoolOutput) ToGetLbPoolsPoolOutput() GetLbPoolsPoolOutput {
	return o
}

func (o GetLbPoolsPoolOutput) ToGetLbPoolsPoolOutputWithContext(ctx context.Context) GetLbPoolsPoolOutput {
	return o
}

// The description of pool.
func (o GetLbPoolsPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPool) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the health monitor ID of the LB pool.
func (o GetLbPoolsPoolOutput) HealthmonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPool) string { return v.HealthmonitorId }).(pulumi.StringOutput)
}

// The pool ID.
func (o GetLbPoolsPoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPool) string { return v.Id }).(pulumi.StringOutput)
}

// The method of the LB pool.
func (o GetLbPoolsPoolOutput) LbMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPool) string { return v.LbMethod }).(pulumi.StringOutput)
}

// Listener list. For details, see Data structure of the listener field.
func (o GetLbPoolsPoolOutput) Listeners() GetLbPoolsPoolListenerArrayOutput {
	return o.ApplyT(func(v GetLbPoolsPool) []GetLbPoolsPoolListener { return v.Listeners }).(GetLbPoolsPoolListenerArrayOutput)
}

// Loadbalancer list. For details, see Data structure of the loadbalancer field.
func (o GetLbPoolsPoolOutput) Loadbalancers() GetLbPoolsPoolLoadbalancerArrayOutput {
	return o.ApplyT(func(v GetLbPoolsPool) []GetLbPoolsPoolLoadbalancer { return v.Loadbalancers }).(GetLbPoolsPoolLoadbalancerArrayOutput)
}

// Loadbalancer list. For details, see Data structure of the members field.
func (o GetLbPoolsPoolOutput) Members() GetLbPoolsPoolMemberArrayOutput {
	return o.ApplyT(func(v GetLbPoolsPool) []GetLbPoolsPoolMember { return v.Members }).(GetLbPoolsPoolMemberArrayOutput)
}

// The pool name.
func (o GetLbPoolsPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPool) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLbPoolsPoolOutput) Persistences() GetLbPoolsPoolPersistenceArrayOutput {
	return o.ApplyT(func(v GetLbPoolsPool) []GetLbPoolsPoolPersistence { return v.Persistences }).(GetLbPoolsPoolPersistenceArrayOutput)
}

// The protocol of pool.
func (o GetLbPoolsPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPool) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetLbPoolsPoolArrayOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPool)(nil)).Elem()
}

func (o GetLbPoolsPoolArrayOutput) ToGetLbPoolsPoolArrayOutput() GetLbPoolsPoolArrayOutput {
	return o
}

func (o GetLbPoolsPoolArrayOutput) ToGetLbPoolsPoolArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolArrayOutput {
	return o
}

func (o GetLbPoolsPoolArrayOutput) Index(i pulumi.IntInput) GetLbPoolsPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbPoolsPool {
		return vs[0].([]GetLbPoolsPool)[vs[1].(int)]
	}).(GetLbPoolsPoolOutput)
}

type GetLbPoolsPoolListener struct {
	// The listener ID.
	Id string `pulumi:"id"`
}

// GetLbPoolsPoolListenerInput is an input type that accepts GetLbPoolsPoolListenerArgs and GetLbPoolsPoolListenerOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolListenerInput` via:
//
//	GetLbPoolsPoolListenerArgs{...}
type GetLbPoolsPoolListenerInput interface {
	pulumi.Input

	ToGetLbPoolsPoolListenerOutput() GetLbPoolsPoolListenerOutput
	ToGetLbPoolsPoolListenerOutputWithContext(context.Context) GetLbPoolsPoolListenerOutput
}

type GetLbPoolsPoolListenerArgs struct {
	// The listener ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetLbPoolsPoolListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolListener)(nil)).Elem()
}

func (i GetLbPoolsPoolListenerArgs) ToGetLbPoolsPoolListenerOutput() GetLbPoolsPoolListenerOutput {
	return i.ToGetLbPoolsPoolListenerOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolListenerArgs) ToGetLbPoolsPoolListenerOutputWithContext(ctx context.Context) GetLbPoolsPoolListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolListenerOutput)
}

// GetLbPoolsPoolListenerArrayInput is an input type that accepts GetLbPoolsPoolListenerArray and GetLbPoolsPoolListenerArrayOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolListenerArrayInput` via:
//
//	GetLbPoolsPoolListenerArray{ GetLbPoolsPoolListenerArgs{...} }
type GetLbPoolsPoolListenerArrayInput interface {
	pulumi.Input

	ToGetLbPoolsPoolListenerArrayOutput() GetLbPoolsPoolListenerArrayOutput
	ToGetLbPoolsPoolListenerArrayOutputWithContext(context.Context) GetLbPoolsPoolListenerArrayOutput
}

type GetLbPoolsPoolListenerArray []GetLbPoolsPoolListenerInput

func (GetLbPoolsPoolListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolListener)(nil)).Elem()
}

func (i GetLbPoolsPoolListenerArray) ToGetLbPoolsPoolListenerArrayOutput() GetLbPoolsPoolListenerArrayOutput {
	return i.ToGetLbPoolsPoolListenerArrayOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolListenerArray) ToGetLbPoolsPoolListenerArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolListenerArrayOutput)
}

type GetLbPoolsPoolListenerOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolListener)(nil)).Elem()
}

func (o GetLbPoolsPoolListenerOutput) ToGetLbPoolsPoolListenerOutput() GetLbPoolsPoolListenerOutput {
	return o
}

func (o GetLbPoolsPoolListenerOutput) ToGetLbPoolsPoolListenerOutputWithContext(ctx context.Context) GetLbPoolsPoolListenerOutput {
	return o
}

// The listener ID.
func (o GetLbPoolsPoolListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPoolListener) string { return v.Id }).(pulumi.StringOutput)
}

type GetLbPoolsPoolListenerArrayOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolListener)(nil)).Elem()
}

func (o GetLbPoolsPoolListenerArrayOutput) ToGetLbPoolsPoolListenerArrayOutput() GetLbPoolsPoolListenerArrayOutput {
	return o
}

func (o GetLbPoolsPoolListenerArrayOutput) ToGetLbPoolsPoolListenerArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolListenerArrayOutput {
	return o
}

func (o GetLbPoolsPoolListenerArrayOutput) Index(i pulumi.IntInput) GetLbPoolsPoolListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbPoolsPoolListener {
		return vs[0].([]GetLbPoolsPoolListener)[vs[1].(int)]
	}).(GetLbPoolsPoolListenerOutput)
}

type GetLbPoolsPoolLoadbalancer struct {
	// The loadbalancer ID.
	Id string `pulumi:"id"`
}

// GetLbPoolsPoolLoadbalancerInput is an input type that accepts GetLbPoolsPoolLoadbalancerArgs and GetLbPoolsPoolLoadbalancerOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolLoadbalancerInput` via:
//
//	GetLbPoolsPoolLoadbalancerArgs{...}
type GetLbPoolsPoolLoadbalancerInput interface {
	pulumi.Input

	ToGetLbPoolsPoolLoadbalancerOutput() GetLbPoolsPoolLoadbalancerOutput
	ToGetLbPoolsPoolLoadbalancerOutputWithContext(context.Context) GetLbPoolsPoolLoadbalancerOutput
}

type GetLbPoolsPoolLoadbalancerArgs struct {
	// The loadbalancer ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetLbPoolsPoolLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (i GetLbPoolsPoolLoadbalancerArgs) ToGetLbPoolsPoolLoadbalancerOutput() GetLbPoolsPoolLoadbalancerOutput {
	return i.ToGetLbPoolsPoolLoadbalancerOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolLoadbalancerArgs) ToGetLbPoolsPoolLoadbalancerOutputWithContext(ctx context.Context) GetLbPoolsPoolLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolLoadbalancerOutput)
}

// GetLbPoolsPoolLoadbalancerArrayInput is an input type that accepts GetLbPoolsPoolLoadbalancerArray and GetLbPoolsPoolLoadbalancerArrayOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolLoadbalancerArrayInput` via:
//
//	GetLbPoolsPoolLoadbalancerArray{ GetLbPoolsPoolLoadbalancerArgs{...} }
type GetLbPoolsPoolLoadbalancerArrayInput interface {
	pulumi.Input

	ToGetLbPoolsPoolLoadbalancerArrayOutput() GetLbPoolsPoolLoadbalancerArrayOutput
	ToGetLbPoolsPoolLoadbalancerArrayOutputWithContext(context.Context) GetLbPoolsPoolLoadbalancerArrayOutput
}

type GetLbPoolsPoolLoadbalancerArray []GetLbPoolsPoolLoadbalancerInput

func (GetLbPoolsPoolLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (i GetLbPoolsPoolLoadbalancerArray) ToGetLbPoolsPoolLoadbalancerArrayOutput() GetLbPoolsPoolLoadbalancerArrayOutput {
	return i.ToGetLbPoolsPoolLoadbalancerArrayOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolLoadbalancerArray) ToGetLbPoolsPoolLoadbalancerArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolLoadbalancerArrayOutput)
}

type GetLbPoolsPoolLoadbalancerOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (o GetLbPoolsPoolLoadbalancerOutput) ToGetLbPoolsPoolLoadbalancerOutput() GetLbPoolsPoolLoadbalancerOutput {
	return o
}

func (o GetLbPoolsPoolLoadbalancerOutput) ToGetLbPoolsPoolLoadbalancerOutputWithContext(ctx context.Context) GetLbPoolsPoolLoadbalancerOutput {
	return o
}

// The loadbalancer ID.
func (o GetLbPoolsPoolLoadbalancerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPoolLoadbalancer) string { return v.Id }).(pulumi.StringOutput)
}

type GetLbPoolsPoolLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolLoadbalancer)(nil)).Elem()
}

func (o GetLbPoolsPoolLoadbalancerArrayOutput) ToGetLbPoolsPoolLoadbalancerArrayOutput() GetLbPoolsPoolLoadbalancerArrayOutput {
	return o
}

func (o GetLbPoolsPoolLoadbalancerArrayOutput) ToGetLbPoolsPoolLoadbalancerArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolLoadbalancerArrayOutput {
	return o
}

func (o GetLbPoolsPoolLoadbalancerArrayOutput) Index(i pulumi.IntInput) GetLbPoolsPoolLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbPoolsPoolLoadbalancer {
		return vs[0].([]GetLbPoolsPoolLoadbalancer)[vs[1].(int)]
	}).(GetLbPoolsPoolLoadbalancerOutput)
}

type GetLbPoolsPoolMember struct {
	// The member ID.
	Id string `pulumi:"id"`
}

// GetLbPoolsPoolMemberInput is an input type that accepts GetLbPoolsPoolMemberArgs and GetLbPoolsPoolMemberOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolMemberInput` via:
//
//	GetLbPoolsPoolMemberArgs{...}
type GetLbPoolsPoolMemberInput interface {
	pulumi.Input

	ToGetLbPoolsPoolMemberOutput() GetLbPoolsPoolMemberOutput
	ToGetLbPoolsPoolMemberOutputWithContext(context.Context) GetLbPoolsPoolMemberOutput
}

type GetLbPoolsPoolMemberArgs struct {
	// The member ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetLbPoolsPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolMember)(nil)).Elem()
}

func (i GetLbPoolsPoolMemberArgs) ToGetLbPoolsPoolMemberOutput() GetLbPoolsPoolMemberOutput {
	return i.ToGetLbPoolsPoolMemberOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolMemberArgs) ToGetLbPoolsPoolMemberOutputWithContext(ctx context.Context) GetLbPoolsPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolMemberOutput)
}

// GetLbPoolsPoolMemberArrayInput is an input type that accepts GetLbPoolsPoolMemberArray and GetLbPoolsPoolMemberArrayOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolMemberArrayInput` via:
//
//	GetLbPoolsPoolMemberArray{ GetLbPoolsPoolMemberArgs{...} }
type GetLbPoolsPoolMemberArrayInput interface {
	pulumi.Input

	ToGetLbPoolsPoolMemberArrayOutput() GetLbPoolsPoolMemberArrayOutput
	ToGetLbPoolsPoolMemberArrayOutputWithContext(context.Context) GetLbPoolsPoolMemberArrayOutput
}

type GetLbPoolsPoolMemberArray []GetLbPoolsPoolMemberInput

func (GetLbPoolsPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolMember)(nil)).Elem()
}

func (i GetLbPoolsPoolMemberArray) ToGetLbPoolsPoolMemberArrayOutput() GetLbPoolsPoolMemberArrayOutput {
	return i.ToGetLbPoolsPoolMemberArrayOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolMemberArray) ToGetLbPoolsPoolMemberArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolMemberArrayOutput)
}

type GetLbPoolsPoolMemberOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolMember)(nil)).Elem()
}

func (o GetLbPoolsPoolMemberOutput) ToGetLbPoolsPoolMemberOutput() GetLbPoolsPoolMemberOutput {
	return o
}

func (o GetLbPoolsPoolMemberOutput) ToGetLbPoolsPoolMemberOutputWithContext(ctx context.Context) GetLbPoolsPoolMemberOutput {
	return o
}

// The member ID.
func (o GetLbPoolsPoolMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPoolMember) string { return v.Id }).(pulumi.StringOutput)
}

type GetLbPoolsPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolMember)(nil)).Elem()
}

func (o GetLbPoolsPoolMemberArrayOutput) ToGetLbPoolsPoolMemberArrayOutput() GetLbPoolsPoolMemberArrayOutput {
	return o
}

func (o GetLbPoolsPoolMemberArrayOutput) ToGetLbPoolsPoolMemberArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolMemberArrayOutput {
	return o
}

func (o GetLbPoolsPoolMemberArrayOutput) Index(i pulumi.IntInput) GetLbPoolsPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbPoolsPoolMember {
		return vs[0].([]GetLbPoolsPoolMember)[vs[1].(int)]
	}).(GetLbPoolsPoolMemberOutput)
}

type GetLbPoolsPoolPersistence struct {
	// The name of the cookie if persistence mode is set appropriately.
	CookieName string `pulumi:"cookieName"`
	// The type of persistence mode.
	Type string `pulumi:"type"`
}

// GetLbPoolsPoolPersistenceInput is an input type that accepts GetLbPoolsPoolPersistenceArgs and GetLbPoolsPoolPersistenceOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolPersistenceInput` via:
//
//	GetLbPoolsPoolPersistenceArgs{...}
type GetLbPoolsPoolPersistenceInput interface {
	pulumi.Input

	ToGetLbPoolsPoolPersistenceOutput() GetLbPoolsPoolPersistenceOutput
	ToGetLbPoolsPoolPersistenceOutputWithContext(context.Context) GetLbPoolsPoolPersistenceOutput
}

type GetLbPoolsPoolPersistenceArgs struct {
	// The name of the cookie if persistence mode is set appropriately.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The type of persistence mode.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLbPoolsPoolPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolPersistence)(nil)).Elem()
}

func (i GetLbPoolsPoolPersistenceArgs) ToGetLbPoolsPoolPersistenceOutput() GetLbPoolsPoolPersistenceOutput {
	return i.ToGetLbPoolsPoolPersistenceOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolPersistenceArgs) ToGetLbPoolsPoolPersistenceOutputWithContext(ctx context.Context) GetLbPoolsPoolPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolPersistenceOutput)
}

// GetLbPoolsPoolPersistenceArrayInput is an input type that accepts GetLbPoolsPoolPersistenceArray and GetLbPoolsPoolPersistenceArrayOutput values.
// You can construct a concrete instance of `GetLbPoolsPoolPersistenceArrayInput` via:
//
//	GetLbPoolsPoolPersistenceArray{ GetLbPoolsPoolPersistenceArgs{...} }
type GetLbPoolsPoolPersistenceArrayInput interface {
	pulumi.Input

	ToGetLbPoolsPoolPersistenceArrayOutput() GetLbPoolsPoolPersistenceArrayOutput
	ToGetLbPoolsPoolPersistenceArrayOutputWithContext(context.Context) GetLbPoolsPoolPersistenceArrayOutput
}

type GetLbPoolsPoolPersistenceArray []GetLbPoolsPoolPersistenceInput

func (GetLbPoolsPoolPersistenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolPersistence)(nil)).Elem()
}

func (i GetLbPoolsPoolPersistenceArray) ToGetLbPoolsPoolPersistenceArrayOutput() GetLbPoolsPoolPersistenceArrayOutput {
	return i.ToGetLbPoolsPoolPersistenceArrayOutputWithContext(context.Background())
}

func (i GetLbPoolsPoolPersistenceArray) ToGetLbPoolsPoolPersistenceArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolPersistenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbPoolsPoolPersistenceArrayOutput)
}

type GetLbPoolsPoolPersistenceOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbPoolsPoolPersistence)(nil)).Elem()
}

func (o GetLbPoolsPoolPersistenceOutput) ToGetLbPoolsPoolPersistenceOutput() GetLbPoolsPoolPersistenceOutput {
	return o
}

func (o GetLbPoolsPoolPersistenceOutput) ToGetLbPoolsPoolPersistenceOutputWithContext(ctx context.Context) GetLbPoolsPoolPersistenceOutput {
	return o
}

// The name of the cookie if persistence mode is set appropriately.
func (o GetLbPoolsPoolPersistenceOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPoolPersistence) string { return v.CookieName }).(pulumi.StringOutput)
}

// The type of persistence mode.
func (o GetLbPoolsPoolPersistenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbPoolsPoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

type GetLbPoolsPoolPersistenceArrayOutput struct{ *pulumi.OutputState }

func (GetLbPoolsPoolPersistenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbPoolsPoolPersistence)(nil)).Elem()
}

func (o GetLbPoolsPoolPersistenceArrayOutput) ToGetLbPoolsPoolPersistenceArrayOutput() GetLbPoolsPoolPersistenceArrayOutput {
	return o
}

func (o GetLbPoolsPoolPersistenceArrayOutput) ToGetLbPoolsPoolPersistenceArrayOutputWithContext(ctx context.Context) GetLbPoolsPoolPersistenceArrayOutput {
	return o
}

func (o GetLbPoolsPoolPersistenceArrayOutput) Index(i pulumi.IntInput) GetLbPoolsPoolPersistenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbPoolsPoolPersistence {
		return vs[0].([]GetLbPoolsPoolPersistence)[vs[1].(int)]
	}).(GetLbPoolsPoolPersistenceOutput)
}

type GetNetworkingSecgroupRuleType struct {
	Action      string `pulumi:"action"`
	Description string `pulumi:"description"`
	Direction   string `pulumi:"direction"`
	Ethertype   string `pulumi:"ethertype"`
	Id          string `pulumi:"id"`
	// schema: Deprecated
	PortRangeMax int `pulumi:"portRangeMax"`
	// schema: Deprecated
	PortRangeMin         int    `pulumi:"portRangeMin"`
	Ports                string `pulumi:"ports"`
	Priority             int    `pulumi:"priority"`
	Protocol             string `pulumi:"protocol"`
	RemoteAddressGroupId string `pulumi:"remoteAddressGroupId"`
	RemoteGroupId        string `pulumi:"remoteGroupId"`
	RemoteIpPrefix       string `pulumi:"remoteIpPrefix"`
}

// GetNetworkingSecgroupRuleTypeInput is an input type that accepts GetNetworkingSecgroupRuleTypeArgs and GetNetworkingSecgroupRuleTypeOutput values.
// You can construct a concrete instance of `GetNetworkingSecgroupRuleTypeInput` via:
//
//	GetNetworkingSecgroupRuleTypeArgs{...}
type GetNetworkingSecgroupRuleTypeInput interface {
	pulumi.Input

	ToGetNetworkingSecgroupRuleTypeOutput() GetNetworkingSecgroupRuleTypeOutput
	ToGetNetworkingSecgroupRuleTypeOutputWithContext(context.Context) GetNetworkingSecgroupRuleTypeOutput
}

type GetNetworkingSecgroupRuleTypeArgs struct {
	Action      pulumi.StringInput `pulumi:"action"`
	Description pulumi.StringInput `pulumi:"description"`
	Direction   pulumi.StringInput `pulumi:"direction"`
	Ethertype   pulumi.StringInput `pulumi:"ethertype"`
	Id          pulumi.StringInput `pulumi:"id"`
	// schema: Deprecated
	PortRangeMax pulumi.IntInput `pulumi:"portRangeMax"`
	// schema: Deprecated
	PortRangeMin         pulumi.IntInput    `pulumi:"portRangeMin"`
	Ports                pulumi.StringInput `pulumi:"ports"`
	Priority             pulumi.IntInput    `pulumi:"priority"`
	Protocol             pulumi.StringInput `pulumi:"protocol"`
	RemoteAddressGroupId pulumi.StringInput `pulumi:"remoteAddressGroupId"`
	RemoteGroupId        pulumi.StringInput `pulumi:"remoteGroupId"`
	RemoteIpPrefix       pulumi.StringInput `pulumi:"remoteIpPrefix"`
}

func (GetNetworkingSecgroupRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkingSecgroupRuleType)(nil)).Elem()
}

func (i GetNetworkingSecgroupRuleTypeArgs) ToGetNetworkingSecgroupRuleTypeOutput() GetNetworkingSecgroupRuleTypeOutput {
	return i.ToGetNetworkingSecgroupRuleTypeOutputWithContext(context.Background())
}

func (i GetNetworkingSecgroupRuleTypeArgs) ToGetNetworkingSecgroupRuleTypeOutputWithContext(ctx context.Context) GetNetworkingSecgroupRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkingSecgroupRuleTypeOutput)
}

// GetNetworkingSecgroupRuleTypeArrayInput is an input type that accepts GetNetworkingSecgroupRuleTypeArray and GetNetworkingSecgroupRuleTypeArrayOutput values.
// You can construct a concrete instance of `GetNetworkingSecgroupRuleTypeArrayInput` via:
//
//	GetNetworkingSecgroupRuleTypeArray{ GetNetworkingSecgroupRuleTypeArgs{...} }
type GetNetworkingSecgroupRuleTypeArrayInput interface {
	pulumi.Input

	ToGetNetworkingSecgroupRuleTypeArrayOutput() GetNetworkingSecgroupRuleTypeArrayOutput
	ToGetNetworkingSecgroupRuleTypeArrayOutputWithContext(context.Context) GetNetworkingSecgroupRuleTypeArrayOutput
}

type GetNetworkingSecgroupRuleTypeArray []GetNetworkingSecgroupRuleTypeInput

func (GetNetworkingSecgroupRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkingSecgroupRuleType)(nil)).Elem()
}

func (i GetNetworkingSecgroupRuleTypeArray) ToGetNetworkingSecgroupRuleTypeArrayOutput() GetNetworkingSecgroupRuleTypeArrayOutput {
	return i.ToGetNetworkingSecgroupRuleTypeArrayOutputWithContext(context.Background())
}

func (i GetNetworkingSecgroupRuleTypeArray) ToGetNetworkingSecgroupRuleTypeArrayOutputWithContext(ctx context.Context) GetNetworkingSecgroupRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkingSecgroupRuleTypeArrayOutput)
}

type GetNetworkingSecgroupRuleTypeOutput struct{ *pulumi.OutputState }

func (GetNetworkingSecgroupRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkingSecgroupRuleType)(nil)).Elem()
}

func (o GetNetworkingSecgroupRuleTypeOutput) ToGetNetworkingSecgroupRuleTypeOutput() GetNetworkingSecgroupRuleTypeOutput {
	return o
}

func (o GetNetworkingSecgroupRuleTypeOutput) ToGetNetworkingSecgroupRuleTypeOutputWithContext(ctx context.Context) GetNetworkingSecgroupRuleTypeOutput {
	return o
}

func (o GetNetworkingSecgroupRuleTypeOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.Direction }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) Ethertype() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.Ethertype }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.Id }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o GetNetworkingSecgroupRuleTypeOutput) PortRangeMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) int { return v.PortRangeMax }).(pulumi.IntOutput)
}

// schema: Deprecated
func (o GetNetworkingSecgroupRuleTypeOutput) PortRangeMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) int { return v.PortRangeMin }).(pulumi.IntOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.Ports }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) RemoteAddressGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.RemoteAddressGroupId }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) RemoteGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.RemoteGroupId }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupRuleTypeOutput) RemoteIpPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupRuleType) string { return v.RemoteIpPrefix }).(pulumi.StringOutput)
}

type GetNetworkingSecgroupRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkingSecgroupRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkingSecgroupRuleType)(nil)).Elem()
}

func (o GetNetworkingSecgroupRuleTypeArrayOutput) ToGetNetworkingSecgroupRuleTypeArrayOutput() GetNetworkingSecgroupRuleTypeArrayOutput {
	return o
}

func (o GetNetworkingSecgroupRuleTypeArrayOutput) ToGetNetworkingSecgroupRuleTypeArrayOutputWithContext(ctx context.Context) GetNetworkingSecgroupRuleTypeArrayOutput {
	return o
}

func (o GetNetworkingSecgroupRuleTypeArrayOutput) Index(i pulumi.IntInput) GetNetworkingSecgroupRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkingSecgroupRuleType {
		return vs[0].([]GetNetworkingSecgroupRuleType)[vs[1].(int)]
	}).(GetNetworkingSecgroupRuleTypeOutput)
}

type GetNetworkingSecgroupsSecurityGroup struct {
	CreatedAt           string `pulumi:"createdAt"`
	Description         string `pulumi:"description"`
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	Id                  string `pulumi:"id"`
	Name                string `pulumi:"name"`
	UpdatedAt           string `pulumi:"updatedAt"`
}

// GetNetworkingSecgroupsSecurityGroupInput is an input type that accepts GetNetworkingSecgroupsSecurityGroupArgs and GetNetworkingSecgroupsSecurityGroupOutput values.
// You can construct a concrete instance of `GetNetworkingSecgroupsSecurityGroupInput` via:
//
//	GetNetworkingSecgroupsSecurityGroupArgs{...}
type GetNetworkingSecgroupsSecurityGroupInput interface {
	pulumi.Input

	ToGetNetworkingSecgroupsSecurityGroupOutput() GetNetworkingSecgroupsSecurityGroupOutput
	ToGetNetworkingSecgroupsSecurityGroupOutputWithContext(context.Context) GetNetworkingSecgroupsSecurityGroupOutput
}

type GetNetworkingSecgroupsSecurityGroupArgs struct {
	CreatedAt           pulumi.StringInput `pulumi:"createdAt"`
	Description         pulumi.StringInput `pulumi:"description"`
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	Id                  pulumi.StringInput `pulumi:"id"`
	Name                pulumi.StringInput `pulumi:"name"`
	UpdatedAt           pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetNetworkingSecgroupsSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkingSecgroupsSecurityGroup)(nil)).Elem()
}

func (i GetNetworkingSecgroupsSecurityGroupArgs) ToGetNetworkingSecgroupsSecurityGroupOutput() GetNetworkingSecgroupsSecurityGroupOutput {
	return i.ToGetNetworkingSecgroupsSecurityGroupOutputWithContext(context.Background())
}

func (i GetNetworkingSecgroupsSecurityGroupArgs) ToGetNetworkingSecgroupsSecurityGroupOutputWithContext(ctx context.Context) GetNetworkingSecgroupsSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkingSecgroupsSecurityGroupOutput)
}

// GetNetworkingSecgroupsSecurityGroupArrayInput is an input type that accepts GetNetworkingSecgroupsSecurityGroupArray and GetNetworkingSecgroupsSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetNetworkingSecgroupsSecurityGroupArrayInput` via:
//
//	GetNetworkingSecgroupsSecurityGroupArray{ GetNetworkingSecgroupsSecurityGroupArgs{...} }
type GetNetworkingSecgroupsSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetNetworkingSecgroupsSecurityGroupArrayOutput() GetNetworkingSecgroupsSecurityGroupArrayOutput
	ToGetNetworkingSecgroupsSecurityGroupArrayOutputWithContext(context.Context) GetNetworkingSecgroupsSecurityGroupArrayOutput
}

type GetNetworkingSecgroupsSecurityGroupArray []GetNetworkingSecgroupsSecurityGroupInput

func (GetNetworkingSecgroupsSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkingSecgroupsSecurityGroup)(nil)).Elem()
}

func (i GetNetworkingSecgroupsSecurityGroupArray) ToGetNetworkingSecgroupsSecurityGroupArrayOutput() GetNetworkingSecgroupsSecurityGroupArrayOutput {
	return i.ToGetNetworkingSecgroupsSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetNetworkingSecgroupsSecurityGroupArray) ToGetNetworkingSecgroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GetNetworkingSecgroupsSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkingSecgroupsSecurityGroupArrayOutput)
}

type GetNetworkingSecgroupsSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetNetworkingSecgroupsSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkingSecgroupsSecurityGroup)(nil)).Elem()
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) ToGetNetworkingSecgroupsSecurityGroupOutput() GetNetworkingSecgroupsSecurityGroupOutput {
	return o
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) ToGetNetworkingSecgroupsSecurityGroupOutputWithContext(ctx context.Context) GetNetworkingSecgroupsSecurityGroupOutput {
	return o
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupsSecurityGroup) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupsSecurityGroup) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupsSecurityGroup) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupsSecurityGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupsSecurityGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetworkingSecgroupsSecurityGroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingSecgroupsSecurityGroup) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetNetworkingSecgroupsSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkingSecgroupsSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkingSecgroupsSecurityGroup)(nil)).Elem()
}

func (o GetNetworkingSecgroupsSecurityGroupArrayOutput) ToGetNetworkingSecgroupsSecurityGroupArrayOutput() GetNetworkingSecgroupsSecurityGroupArrayOutput {
	return o
}

func (o GetNetworkingSecgroupsSecurityGroupArrayOutput) ToGetNetworkingSecgroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GetNetworkingSecgroupsSecurityGroupArrayOutput {
	return o
}

func (o GetNetworkingSecgroupsSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetNetworkingSecgroupsSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkingSecgroupsSecurityGroup {
		return vs[0].([]GetNetworkingSecgroupsSecurityGroup)[vs[1].(int)]
	}).(GetNetworkingSecgroupsSecurityGroupOutput)
}

type GetObsBucketsBucket struct {
	Bucket              string `pulumi:"bucket"`
	CreatedAt           string `pulumi:"createdAt"`
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	Region              string `pulumi:"region"`
	StorageClass        string `pulumi:"storageClass"`
}

// GetObsBucketsBucketInput is an input type that accepts GetObsBucketsBucketArgs and GetObsBucketsBucketOutput values.
// You can construct a concrete instance of `GetObsBucketsBucketInput` via:
//
//	GetObsBucketsBucketArgs{...}
type GetObsBucketsBucketInput interface {
	pulumi.Input

	ToGetObsBucketsBucketOutput() GetObsBucketsBucketOutput
	ToGetObsBucketsBucketOutputWithContext(context.Context) GetObsBucketsBucketOutput
}

type GetObsBucketsBucketArgs struct {
	Bucket              pulumi.StringInput `pulumi:"bucket"`
	CreatedAt           pulumi.StringInput `pulumi:"createdAt"`
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	Region              pulumi.StringInput `pulumi:"region"`
	StorageClass        pulumi.StringInput `pulumi:"storageClass"`
}

func (GetObsBucketsBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObsBucketsBucket)(nil)).Elem()
}

func (i GetObsBucketsBucketArgs) ToGetObsBucketsBucketOutput() GetObsBucketsBucketOutput {
	return i.ToGetObsBucketsBucketOutputWithContext(context.Background())
}

func (i GetObsBucketsBucketArgs) ToGetObsBucketsBucketOutputWithContext(ctx context.Context) GetObsBucketsBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObsBucketsBucketOutput)
}

// GetObsBucketsBucketArrayInput is an input type that accepts GetObsBucketsBucketArray and GetObsBucketsBucketArrayOutput values.
// You can construct a concrete instance of `GetObsBucketsBucketArrayInput` via:
//
//	GetObsBucketsBucketArray{ GetObsBucketsBucketArgs{...} }
type GetObsBucketsBucketArrayInput interface {
	pulumi.Input

	ToGetObsBucketsBucketArrayOutput() GetObsBucketsBucketArrayOutput
	ToGetObsBucketsBucketArrayOutputWithContext(context.Context) GetObsBucketsBucketArrayOutput
}

type GetObsBucketsBucketArray []GetObsBucketsBucketInput

func (GetObsBucketsBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObsBucketsBucket)(nil)).Elem()
}

func (i GetObsBucketsBucketArray) ToGetObsBucketsBucketArrayOutput() GetObsBucketsBucketArrayOutput {
	return i.ToGetObsBucketsBucketArrayOutputWithContext(context.Background())
}

func (i GetObsBucketsBucketArray) ToGetObsBucketsBucketArrayOutputWithContext(ctx context.Context) GetObsBucketsBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObsBucketsBucketArrayOutput)
}

type GetObsBucketsBucketOutput struct{ *pulumi.OutputState }

func (GetObsBucketsBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObsBucketsBucket)(nil)).Elem()
}

func (o GetObsBucketsBucketOutput) ToGetObsBucketsBucketOutput() GetObsBucketsBucketOutput {
	return o
}

func (o GetObsBucketsBucketOutput) ToGetObsBucketsBucketOutputWithContext(ctx context.Context) GetObsBucketsBucketOutput {
	return o
}

func (o GetObsBucketsBucketOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetObsBucketsBucket) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetObsBucketsBucketOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetObsBucketsBucket) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetObsBucketsBucketOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetObsBucketsBucket) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetObsBucketsBucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetObsBucketsBucket) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetObsBucketsBucketOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetObsBucketsBucket) string { return v.StorageClass }).(pulumi.StringOutput)
}

type GetObsBucketsBucketArrayOutput struct{ *pulumi.OutputState }

func (GetObsBucketsBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObsBucketsBucket)(nil)).Elem()
}

func (o GetObsBucketsBucketArrayOutput) ToGetObsBucketsBucketArrayOutput() GetObsBucketsBucketArrayOutput {
	return o
}

func (o GetObsBucketsBucketArrayOutput) ToGetObsBucketsBucketArrayOutputWithContext(ctx context.Context) GetObsBucketsBucketArrayOutput {
	return o
}

func (o GetObsBucketsBucketArrayOutput) Index(i pulumi.IntInput) GetObsBucketsBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObsBucketsBucket {
		return vs[0].([]GetObsBucketsBucket)[vs[1].(int)]
	}).(GetObsBucketsBucketOutput)
}

type GetRdsBackupsBackup struct {
	// Whether a DDM instance has been associated.
	AssociatedWithDdm bool `pulumi:"associatedWithDdm"`
	// Backup start time in the "yyyy-mm-ddThh:mm:ssZ" format.
	BeginTime string `pulumi:"beginTime"`
	// Database been backed up.
	Databases  []GetRdsBackupsBackupDatabase  `pulumi:"databases"`
	Datastores []GetRdsBackupsBackupDatastore `pulumi:"datastores"`
	// Backup end time in the "yyyy-mm-ddThh:mm:ssZ" format.
	EndTime string `pulumi:"endTime"`
	// Backup ID.
	Id string `pulumi:"id"`
	// RDS instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Backup name.
	Name string `pulumi:"name"`
	// Backup size in KB.
	Size int `pulumi:"size"`
	// Backup status.
	Status string `pulumi:"status"`
	// Backup type.
	Type string `pulumi:"type"`
}

// GetRdsBackupsBackupInput is an input type that accepts GetRdsBackupsBackupArgs and GetRdsBackupsBackupOutput values.
// You can construct a concrete instance of `GetRdsBackupsBackupInput` via:
//
//	GetRdsBackupsBackupArgs{...}
type GetRdsBackupsBackupInput interface {
	pulumi.Input

	ToGetRdsBackupsBackupOutput() GetRdsBackupsBackupOutput
	ToGetRdsBackupsBackupOutputWithContext(context.Context) GetRdsBackupsBackupOutput
}

type GetRdsBackupsBackupArgs struct {
	// Whether a DDM instance has been associated.
	AssociatedWithDdm pulumi.BoolInput `pulumi:"associatedWithDdm"`
	// Backup start time in the "yyyy-mm-ddThh:mm:ssZ" format.
	BeginTime pulumi.StringInput `pulumi:"beginTime"`
	// Database been backed up.
	Databases  GetRdsBackupsBackupDatabaseArrayInput  `pulumi:"databases"`
	Datastores GetRdsBackupsBackupDatastoreArrayInput `pulumi:"datastores"`
	// Backup end time in the "yyyy-mm-ddThh:mm:ssZ" format.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Backup ID.
	Id pulumi.StringInput `pulumi:"id"`
	// RDS instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Backup name.
	Name pulumi.StringInput `pulumi:"name"`
	// Backup size in KB.
	Size pulumi.IntInput `pulumi:"size"`
	// Backup status.
	Status pulumi.StringInput `pulumi:"status"`
	// Backup type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRdsBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsBackupsBackup)(nil)).Elem()
}

func (i GetRdsBackupsBackupArgs) ToGetRdsBackupsBackupOutput() GetRdsBackupsBackupOutput {
	return i.ToGetRdsBackupsBackupOutputWithContext(context.Background())
}

func (i GetRdsBackupsBackupArgs) ToGetRdsBackupsBackupOutputWithContext(ctx context.Context) GetRdsBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsBackupsBackupOutput)
}

// GetRdsBackupsBackupArrayInput is an input type that accepts GetRdsBackupsBackupArray and GetRdsBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetRdsBackupsBackupArrayInput` via:
//
//	GetRdsBackupsBackupArray{ GetRdsBackupsBackupArgs{...} }
type GetRdsBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetRdsBackupsBackupArrayOutput() GetRdsBackupsBackupArrayOutput
	ToGetRdsBackupsBackupArrayOutputWithContext(context.Context) GetRdsBackupsBackupArrayOutput
}

type GetRdsBackupsBackupArray []GetRdsBackupsBackupInput

func (GetRdsBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsBackupsBackup)(nil)).Elem()
}

func (i GetRdsBackupsBackupArray) ToGetRdsBackupsBackupArrayOutput() GetRdsBackupsBackupArrayOutput {
	return i.ToGetRdsBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetRdsBackupsBackupArray) ToGetRdsBackupsBackupArrayOutputWithContext(ctx context.Context) GetRdsBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsBackupsBackupArrayOutput)
}

type GetRdsBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetRdsBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsBackupsBackup)(nil)).Elem()
}

func (o GetRdsBackupsBackupOutput) ToGetRdsBackupsBackupOutput() GetRdsBackupsBackupOutput {
	return o
}

func (o GetRdsBackupsBackupOutput) ToGetRdsBackupsBackupOutputWithContext(ctx context.Context) GetRdsBackupsBackupOutput {
	return o
}

// Whether a DDM instance has been associated.
func (o GetRdsBackupsBackupOutput) AssociatedWithDdm() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) bool { return v.AssociatedWithDdm }).(pulumi.BoolOutput)
}

// Backup start time in the "yyyy-mm-ddThh:mm:ssZ" format.
func (o GetRdsBackupsBackupOutput) BeginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) string { return v.BeginTime }).(pulumi.StringOutput)
}

// Database been backed up.
func (o GetRdsBackupsBackupOutput) Databases() GetRdsBackupsBackupDatabaseArrayOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) []GetRdsBackupsBackupDatabase { return v.Databases }).(GetRdsBackupsBackupDatabaseArrayOutput)
}

func (o GetRdsBackupsBackupOutput) Datastores() GetRdsBackupsBackupDatastoreArrayOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) []GetRdsBackupsBackupDatastore { return v.Datastores }).(GetRdsBackupsBackupDatastoreArrayOutput)
}

// Backup end time in the "yyyy-mm-ddThh:mm:ssZ" format.
func (o GetRdsBackupsBackupOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) string { return v.EndTime }).(pulumi.StringOutput)
}

// Backup ID.
func (o GetRdsBackupsBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) string { return v.Id }).(pulumi.StringOutput)
}

// RDS instance ID.
func (o GetRdsBackupsBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Backup name.
func (o GetRdsBackupsBackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) string { return v.Name }).(pulumi.StringOutput)
}

// Backup size in KB.
func (o GetRdsBackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

// Backup status.
func (o GetRdsBackupsBackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) string { return v.Status }).(pulumi.StringOutput)
}

// Backup type.
func (o GetRdsBackupsBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackup) string { return v.Type }).(pulumi.StringOutput)
}

type GetRdsBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetRdsBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsBackupsBackup)(nil)).Elem()
}

func (o GetRdsBackupsBackupArrayOutput) ToGetRdsBackupsBackupArrayOutput() GetRdsBackupsBackupArrayOutput {
	return o
}

func (o GetRdsBackupsBackupArrayOutput) ToGetRdsBackupsBackupArrayOutputWithContext(ctx context.Context) GetRdsBackupsBackupArrayOutput {
	return o
}

func (o GetRdsBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetRdsBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsBackupsBackup {
		return vs[0].([]GetRdsBackupsBackup)[vs[1].(int)]
	}).(GetRdsBackupsBackupOutput)
}

type GetRdsBackupsBackupDatabase struct {
	// Database to be backed up for Microsoft SQL Server.
	Name string `pulumi:"name"`
}

// GetRdsBackupsBackupDatabaseInput is an input type that accepts GetRdsBackupsBackupDatabaseArgs and GetRdsBackupsBackupDatabaseOutput values.
// You can construct a concrete instance of `GetRdsBackupsBackupDatabaseInput` via:
//
//	GetRdsBackupsBackupDatabaseArgs{...}
type GetRdsBackupsBackupDatabaseInput interface {
	pulumi.Input

	ToGetRdsBackupsBackupDatabaseOutput() GetRdsBackupsBackupDatabaseOutput
	ToGetRdsBackupsBackupDatabaseOutputWithContext(context.Context) GetRdsBackupsBackupDatabaseOutput
}

type GetRdsBackupsBackupDatabaseArgs struct {
	// Database to be backed up for Microsoft SQL Server.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRdsBackupsBackupDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsBackupsBackupDatabase)(nil)).Elem()
}

func (i GetRdsBackupsBackupDatabaseArgs) ToGetRdsBackupsBackupDatabaseOutput() GetRdsBackupsBackupDatabaseOutput {
	return i.ToGetRdsBackupsBackupDatabaseOutputWithContext(context.Background())
}

func (i GetRdsBackupsBackupDatabaseArgs) ToGetRdsBackupsBackupDatabaseOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsBackupsBackupDatabaseOutput)
}

// GetRdsBackupsBackupDatabaseArrayInput is an input type that accepts GetRdsBackupsBackupDatabaseArray and GetRdsBackupsBackupDatabaseArrayOutput values.
// You can construct a concrete instance of `GetRdsBackupsBackupDatabaseArrayInput` via:
//
//	GetRdsBackupsBackupDatabaseArray{ GetRdsBackupsBackupDatabaseArgs{...} }
type GetRdsBackupsBackupDatabaseArrayInput interface {
	pulumi.Input

	ToGetRdsBackupsBackupDatabaseArrayOutput() GetRdsBackupsBackupDatabaseArrayOutput
	ToGetRdsBackupsBackupDatabaseArrayOutputWithContext(context.Context) GetRdsBackupsBackupDatabaseArrayOutput
}

type GetRdsBackupsBackupDatabaseArray []GetRdsBackupsBackupDatabaseInput

func (GetRdsBackupsBackupDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsBackupsBackupDatabase)(nil)).Elem()
}

func (i GetRdsBackupsBackupDatabaseArray) ToGetRdsBackupsBackupDatabaseArrayOutput() GetRdsBackupsBackupDatabaseArrayOutput {
	return i.ToGetRdsBackupsBackupDatabaseArrayOutputWithContext(context.Background())
}

func (i GetRdsBackupsBackupDatabaseArray) ToGetRdsBackupsBackupDatabaseArrayOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsBackupsBackupDatabaseArrayOutput)
}

type GetRdsBackupsBackupDatabaseOutput struct{ *pulumi.OutputState }

func (GetRdsBackupsBackupDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsBackupsBackupDatabase)(nil)).Elem()
}

func (o GetRdsBackupsBackupDatabaseOutput) ToGetRdsBackupsBackupDatabaseOutput() GetRdsBackupsBackupDatabaseOutput {
	return o
}

func (o GetRdsBackupsBackupDatabaseOutput) ToGetRdsBackupsBackupDatabaseOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatabaseOutput {
	return o
}

// Database to be backed up for Microsoft SQL Server.
func (o GetRdsBackupsBackupDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackupDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type GetRdsBackupsBackupDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetRdsBackupsBackupDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsBackupsBackupDatabase)(nil)).Elem()
}

func (o GetRdsBackupsBackupDatabaseArrayOutput) ToGetRdsBackupsBackupDatabaseArrayOutput() GetRdsBackupsBackupDatabaseArrayOutput {
	return o
}

func (o GetRdsBackupsBackupDatabaseArrayOutput) ToGetRdsBackupsBackupDatabaseArrayOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatabaseArrayOutput {
	return o
}

func (o GetRdsBackupsBackupDatabaseArrayOutput) Index(i pulumi.IntInput) GetRdsBackupsBackupDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsBackupsBackupDatabase {
		return vs[0].([]GetRdsBackupsBackupDatabase)[vs[1].(int)]
	}).(GetRdsBackupsBackupDatabaseOutput)
}

type GetRdsBackupsBackupDatastore struct {
	// DB engine.
	Type string `pulumi:"type"`
	// DB engine version.
	Version string `pulumi:"version"`
}

// GetRdsBackupsBackupDatastoreInput is an input type that accepts GetRdsBackupsBackupDatastoreArgs and GetRdsBackupsBackupDatastoreOutput values.
// You can construct a concrete instance of `GetRdsBackupsBackupDatastoreInput` via:
//
//	GetRdsBackupsBackupDatastoreArgs{...}
type GetRdsBackupsBackupDatastoreInput interface {
	pulumi.Input

	ToGetRdsBackupsBackupDatastoreOutput() GetRdsBackupsBackupDatastoreOutput
	ToGetRdsBackupsBackupDatastoreOutputWithContext(context.Context) GetRdsBackupsBackupDatastoreOutput
}

type GetRdsBackupsBackupDatastoreArgs struct {
	// DB engine.
	Type pulumi.StringInput `pulumi:"type"`
	// DB engine version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetRdsBackupsBackupDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsBackupsBackupDatastore)(nil)).Elem()
}

func (i GetRdsBackupsBackupDatastoreArgs) ToGetRdsBackupsBackupDatastoreOutput() GetRdsBackupsBackupDatastoreOutput {
	return i.ToGetRdsBackupsBackupDatastoreOutputWithContext(context.Background())
}

func (i GetRdsBackupsBackupDatastoreArgs) ToGetRdsBackupsBackupDatastoreOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsBackupsBackupDatastoreOutput)
}

// GetRdsBackupsBackupDatastoreArrayInput is an input type that accepts GetRdsBackupsBackupDatastoreArray and GetRdsBackupsBackupDatastoreArrayOutput values.
// You can construct a concrete instance of `GetRdsBackupsBackupDatastoreArrayInput` via:
//
//	GetRdsBackupsBackupDatastoreArray{ GetRdsBackupsBackupDatastoreArgs{...} }
type GetRdsBackupsBackupDatastoreArrayInput interface {
	pulumi.Input

	ToGetRdsBackupsBackupDatastoreArrayOutput() GetRdsBackupsBackupDatastoreArrayOutput
	ToGetRdsBackupsBackupDatastoreArrayOutputWithContext(context.Context) GetRdsBackupsBackupDatastoreArrayOutput
}

type GetRdsBackupsBackupDatastoreArray []GetRdsBackupsBackupDatastoreInput

func (GetRdsBackupsBackupDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsBackupsBackupDatastore)(nil)).Elem()
}

func (i GetRdsBackupsBackupDatastoreArray) ToGetRdsBackupsBackupDatastoreArrayOutput() GetRdsBackupsBackupDatastoreArrayOutput {
	return i.ToGetRdsBackupsBackupDatastoreArrayOutputWithContext(context.Background())
}

func (i GetRdsBackupsBackupDatastoreArray) ToGetRdsBackupsBackupDatastoreArrayOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsBackupsBackupDatastoreArrayOutput)
}

type GetRdsBackupsBackupDatastoreOutput struct{ *pulumi.OutputState }

func (GetRdsBackupsBackupDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsBackupsBackupDatastore)(nil)).Elem()
}

func (o GetRdsBackupsBackupDatastoreOutput) ToGetRdsBackupsBackupDatastoreOutput() GetRdsBackupsBackupDatastoreOutput {
	return o
}

func (o GetRdsBackupsBackupDatastoreOutput) ToGetRdsBackupsBackupDatastoreOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatastoreOutput {
	return o
}

// DB engine.
func (o GetRdsBackupsBackupDatastoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackupDatastore) string { return v.Type }).(pulumi.StringOutput)
}

// DB engine version.
func (o GetRdsBackupsBackupDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsBackupsBackupDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetRdsBackupsBackupDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetRdsBackupsBackupDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsBackupsBackupDatastore)(nil)).Elem()
}

func (o GetRdsBackupsBackupDatastoreArrayOutput) ToGetRdsBackupsBackupDatastoreArrayOutput() GetRdsBackupsBackupDatastoreArrayOutput {
	return o
}

func (o GetRdsBackupsBackupDatastoreArrayOutput) ToGetRdsBackupsBackupDatastoreArrayOutputWithContext(ctx context.Context) GetRdsBackupsBackupDatastoreArrayOutput {
	return o
}

func (o GetRdsBackupsBackupDatastoreArrayOutput) Index(i pulumi.IntInput) GetRdsBackupsBackupDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsBackupsBackupDatastore {
		return vs[0].([]GetRdsBackupsBackupDatastore)[vs[1].(int)]
	}).(GetRdsBackupsBackupDatastoreOutput)
}

type GetRdsEngineVersionsVersion struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetRdsEngineVersionsVersionInput is an input type that accepts GetRdsEngineVersionsVersionArgs and GetRdsEngineVersionsVersionOutput values.
// You can construct a concrete instance of `GetRdsEngineVersionsVersionInput` via:
//
//	GetRdsEngineVersionsVersionArgs{...}
type GetRdsEngineVersionsVersionInput interface {
	pulumi.Input

	ToGetRdsEngineVersionsVersionOutput() GetRdsEngineVersionsVersionOutput
	ToGetRdsEngineVersionsVersionOutputWithContext(context.Context) GetRdsEngineVersionsVersionOutput
}

type GetRdsEngineVersionsVersionArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRdsEngineVersionsVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsEngineVersionsVersion)(nil)).Elem()
}

func (i GetRdsEngineVersionsVersionArgs) ToGetRdsEngineVersionsVersionOutput() GetRdsEngineVersionsVersionOutput {
	return i.ToGetRdsEngineVersionsVersionOutputWithContext(context.Background())
}

func (i GetRdsEngineVersionsVersionArgs) ToGetRdsEngineVersionsVersionOutputWithContext(ctx context.Context) GetRdsEngineVersionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsEngineVersionsVersionOutput)
}

// GetRdsEngineVersionsVersionArrayInput is an input type that accepts GetRdsEngineVersionsVersionArray and GetRdsEngineVersionsVersionArrayOutput values.
// You can construct a concrete instance of `GetRdsEngineVersionsVersionArrayInput` via:
//
//	GetRdsEngineVersionsVersionArray{ GetRdsEngineVersionsVersionArgs{...} }
type GetRdsEngineVersionsVersionArrayInput interface {
	pulumi.Input

	ToGetRdsEngineVersionsVersionArrayOutput() GetRdsEngineVersionsVersionArrayOutput
	ToGetRdsEngineVersionsVersionArrayOutputWithContext(context.Context) GetRdsEngineVersionsVersionArrayOutput
}

type GetRdsEngineVersionsVersionArray []GetRdsEngineVersionsVersionInput

func (GetRdsEngineVersionsVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsEngineVersionsVersion)(nil)).Elem()
}

func (i GetRdsEngineVersionsVersionArray) ToGetRdsEngineVersionsVersionArrayOutput() GetRdsEngineVersionsVersionArrayOutput {
	return i.ToGetRdsEngineVersionsVersionArrayOutputWithContext(context.Background())
}

func (i GetRdsEngineVersionsVersionArray) ToGetRdsEngineVersionsVersionArrayOutputWithContext(ctx context.Context) GetRdsEngineVersionsVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsEngineVersionsVersionArrayOutput)
}

type GetRdsEngineVersionsVersionOutput struct{ *pulumi.OutputState }

func (GetRdsEngineVersionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsEngineVersionsVersion)(nil)).Elem()
}

func (o GetRdsEngineVersionsVersionOutput) ToGetRdsEngineVersionsVersionOutput() GetRdsEngineVersionsVersionOutput {
	return o
}

func (o GetRdsEngineVersionsVersionOutput) ToGetRdsEngineVersionsVersionOutputWithContext(ctx context.Context) GetRdsEngineVersionsVersionOutput {
	return o
}

func (o GetRdsEngineVersionsVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsEngineVersionsVersion) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsEngineVersionsVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsEngineVersionsVersion) string { return v.Name }).(pulumi.StringOutput)
}

type GetRdsEngineVersionsVersionArrayOutput struct{ *pulumi.OutputState }

func (GetRdsEngineVersionsVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsEngineVersionsVersion)(nil)).Elem()
}

func (o GetRdsEngineVersionsVersionArrayOutput) ToGetRdsEngineVersionsVersionArrayOutput() GetRdsEngineVersionsVersionArrayOutput {
	return o
}

func (o GetRdsEngineVersionsVersionArrayOutput) ToGetRdsEngineVersionsVersionArrayOutputWithContext(ctx context.Context) GetRdsEngineVersionsVersionArrayOutput {
	return o
}

func (o GetRdsEngineVersionsVersionArrayOutput) Index(i pulumi.IntInput) GetRdsEngineVersionsVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsEngineVersionsVersion {
		return vs[0].([]GetRdsEngineVersionsVersion)[vs[1].(int)]
	}).(GetRdsEngineVersionsVersionOutput)
}

type GetRdsFlavorsFlavor struct {
	AvailabilityZones []string `pulumi:"availabilityZones"`
	DbVersions        []string `pulumi:"dbVersions"`
	GroupType         string   `pulumi:"groupType"`
	Id                string   `pulumi:"id"`
	InstanceMode      string   `pulumi:"instanceMode"`
	Memory            int      `pulumi:"memory"`
	// Deprecated: use instanceMode instead
	Mode  string `pulumi:"mode"`
	Name  string `pulumi:"name"`
	Vcpus int    `pulumi:"vcpus"`
}

// GetRdsFlavorsFlavorInput is an input type that accepts GetRdsFlavorsFlavorArgs and GetRdsFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetRdsFlavorsFlavorInput` via:
//
//	GetRdsFlavorsFlavorArgs{...}
type GetRdsFlavorsFlavorInput interface {
	pulumi.Input

	ToGetRdsFlavorsFlavorOutput() GetRdsFlavorsFlavorOutput
	ToGetRdsFlavorsFlavorOutputWithContext(context.Context) GetRdsFlavorsFlavorOutput
}

type GetRdsFlavorsFlavorArgs struct {
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	DbVersions        pulumi.StringArrayInput `pulumi:"dbVersions"`
	GroupType         pulumi.StringInput      `pulumi:"groupType"`
	Id                pulumi.StringInput      `pulumi:"id"`
	InstanceMode      pulumi.StringInput      `pulumi:"instanceMode"`
	Memory            pulumi.IntInput         `pulumi:"memory"`
	// Deprecated: use instanceMode instead
	Mode  pulumi.StringInput `pulumi:"mode"`
	Name  pulumi.StringInput `pulumi:"name"`
	Vcpus pulumi.IntInput    `pulumi:"vcpus"`
}

func (GetRdsFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsFlavorsFlavor)(nil)).Elem()
}

func (i GetRdsFlavorsFlavorArgs) ToGetRdsFlavorsFlavorOutput() GetRdsFlavorsFlavorOutput {
	return i.ToGetRdsFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetRdsFlavorsFlavorArgs) ToGetRdsFlavorsFlavorOutputWithContext(ctx context.Context) GetRdsFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsFlavorsFlavorOutput)
}

// GetRdsFlavorsFlavorArrayInput is an input type that accepts GetRdsFlavorsFlavorArray and GetRdsFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetRdsFlavorsFlavorArrayInput` via:
//
//	GetRdsFlavorsFlavorArray{ GetRdsFlavorsFlavorArgs{...} }
type GetRdsFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetRdsFlavorsFlavorArrayOutput() GetRdsFlavorsFlavorArrayOutput
	ToGetRdsFlavorsFlavorArrayOutputWithContext(context.Context) GetRdsFlavorsFlavorArrayOutput
}

type GetRdsFlavorsFlavorArray []GetRdsFlavorsFlavorInput

func (GetRdsFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsFlavorsFlavor)(nil)).Elem()
}

func (i GetRdsFlavorsFlavorArray) ToGetRdsFlavorsFlavorArrayOutput() GetRdsFlavorsFlavorArrayOutput {
	return i.ToGetRdsFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetRdsFlavorsFlavorArray) ToGetRdsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetRdsFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsFlavorsFlavorArrayOutput)
}

type GetRdsFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetRdsFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsFlavorsFlavor)(nil)).Elem()
}

func (o GetRdsFlavorsFlavorOutput) ToGetRdsFlavorsFlavorOutput() GetRdsFlavorsFlavorOutput {
	return o
}

func (o GetRdsFlavorsFlavorOutput) ToGetRdsFlavorsFlavorOutputWithContext(ctx context.Context) GetRdsFlavorsFlavorOutput {
	return o
}

func (o GetRdsFlavorsFlavorOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetRdsFlavorsFlavorOutput) DbVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) []string { return v.DbVersions }).(pulumi.StringArrayOutput)
}

func (o GetRdsFlavorsFlavorOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) string { return v.GroupType }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsFlavorOutput) InstanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) string { return v.InstanceMode }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsFlavorOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) int { return v.Memory }).(pulumi.IntOutput)
}

// Deprecated: use instanceMode instead
func (o GetRdsFlavorsFlavorOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsFlavorOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsFlavorsFlavor) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetRdsFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetRdsFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsFlavorsFlavor)(nil)).Elem()
}

func (o GetRdsFlavorsFlavorArrayOutput) ToGetRdsFlavorsFlavorArrayOutput() GetRdsFlavorsFlavorArrayOutput {
	return o
}

func (o GetRdsFlavorsFlavorArrayOutput) ToGetRdsFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetRdsFlavorsFlavorArrayOutput {
	return o
}

func (o GetRdsFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetRdsFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsFlavorsFlavor {
		return vs[0].([]GetRdsFlavorsFlavor)[vs[1].(int)]
	}).(GetRdsFlavorsFlavorOutput)
}

type GetRdsInstancesInstance struct {
	AvailabilityZones   []string                                `pulumi:"availabilityZones"`
	BackupStrategies    []GetRdsInstancesInstanceBackupStrategy `pulumi:"backupStrategies"`
	Created             string                                  `pulumi:"created"`
	Dbs                 []GetRdsInstancesInstanceDb             `pulumi:"dbs"`
	EnterpriseProjectId string                                  `pulumi:"enterpriseProjectId"`
	FixedIp             string                                  `pulumi:"fixedIp"`
	Flavor              string                                  `pulumi:"flavor"`
	HaReplicationMode   string                                  `pulumi:"haReplicationMode"`
	Id                  string                                  `pulumi:"id"`
	Name                string                                  `pulumi:"name"`
	Nodes               []GetRdsInstancesInstanceNode           `pulumi:"nodes"`
	ParamGroupId        string                                  `pulumi:"paramGroupId"`
	PrivateIps          []string                                `pulumi:"privateIps"`
	PublicIps           []string                                `pulumi:"publicIps"`
	Region              string                                  `pulumi:"region"`
	SecurityGroupId     string                                  `pulumi:"securityGroupId"`
	SslEnable           bool                                    `pulumi:"sslEnable"`
	Status              string                                  `pulumi:"status"`
	SubnetId            string                                  `pulumi:"subnetId"`
	Tags                map[string]string                       `pulumi:"tags"`
	TimeZone            string                                  `pulumi:"timeZone"`
	Volumes             []GetRdsInstancesInstanceVolume         `pulumi:"volumes"`
	VpcId               string                                  `pulumi:"vpcId"`
}

// GetRdsInstancesInstanceInput is an input type that accepts GetRdsInstancesInstanceArgs and GetRdsInstancesInstanceOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceInput` via:
//
//	GetRdsInstancesInstanceArgs{...}
type GetRdsInstancesInstanceInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceOutput() GetRdsInstancesInstanceOutput
	ToGetRdsInstancesInstanceOutputWithContext(context.Context) GetRdsInstancesInstanceOutput
}

type GetRdsInstancesInstanceArgs struct {
	AvailabilityZones   pulumi.StringArrayInput                         `pulumi:"availabilityZones"`
	BackupStrategies    GetRdsInstancesInstanceBackupStrategyArrayInput `pulumi:"backupStrategies"`
	Created             pulumi.StringInput                              `pulumi:"created"`
	Dbs                 GetRdsInstancesInstanceDbArrayInput             `pulumi:"dbs"`
	EnterpriseProjectId pulumi.StringInput                              `pulumi:"enterpriseProjectId"`
	FixedIp             pulumi.StringInput                              `pulumi:"fixedIp"`
	Flavor              pulumi.StringInput                              `pulumi:"flavor"`
	HaReplicationMode   pulumi.StringInput                              `pulumi:"haReplicationMode"`
	Id                  pulumi.StringInput                              `pulumi:"id"`
	Name                pulumi.StringInput                              `pulumi:"name"`
	Nodes               GetRdsInstancesInstanceNodeArrayInput           `pulumi:"nodes"`
	ParamGroupId        pulumi.StringInput                              `pulumi:"paramGroupId"`
	PrivateIps          pulumi.StringArrayInput                         `pulumi:"privateIps"`
	PublicIps           pulumi.StringArrayInput                         `pulumi:"publicIps"`
	Region              pulumi.StringInput                              `pulumi:"region"`
	SecurityGroupId     pulumi.StringInput                              `pulumi:"securityGroupId"`
	SslEnable           pulumi.BoolInput                                `pulumi:"sslEnable"`
	Status              pulumi.StringInput                              `pulumi:"status"`
	SubnetId            pulumi.StringInput                              `pulumi:"subnetId"`
	Tags                pulumi.StringMapInput                           `pulumi:"tags"`
	TimeZone            pulumi.StringInput                              `pulumi:"timeZone"`
	Volumes             GetRdsInstancesInstanceVolumeArrayInput         `pulumi:"volumes"`
	VpcId               pulumi.StringInput                              `pulumi:"vpcId"`
}

func (GetRdsInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstance)(nil)).Elem()
}

func (i GetRdsInstancesInstanceArgs) ToGetRdsInstancesInstanceOutput() GetRdsInstancesInstanceOutput {
	return i.ToGetRdsInstancesInstanceOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceArgs) ToGetRdsInstancesInstanceOutputWithContext(ctx context.Context) GetRdsInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceOutput)
}

// GetRdsInstancesInstanceArrayInput is an input type that accepts GetRdsInstancesInstanceArray and GetRdsInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceArrayInput` via:
//
//	GetRdsInstancesInstanceArray{ GetRdsInstancesInstanceArgs{...} }
type GetRdsInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceArrayOutput() GetRdsInstancesInstanceArrayOutput
	ToGetRdsInstancesInstanceArrayOutputWithContext(context.Context) GetRdsInstancesInstanceArrayOutput
}

type GetRdsInstancesInstanceArray []GetRdsInstancesInstanceInput

func (GetRdsInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstance)(nil)).Elem()
}

func (i GetRdsInstancesInstanceArray) ToGetRdsInstancesInstanceArrayOutput() GetRdsInstancesInstanceArrayOutput {
	return i.ToGetRdsInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceArray) ToGetRdsInstancesInstanceArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceArrayOutput)
}

type GetRdsInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstance)(nil)).Elem()
}

func (o GetRdsInstancesInstanceOutput) ToGetRdsInstancesInstanceOutput() GetRdsInstancesInstanceOutput {
	return o
}

func (o GetRdsInstancesInstanceOutput) ToGetRdsInstancesInstanceOutputWithContext(ctx context.Context) GetRdsInstancesInstanceOutput {
	return o
}

func (o GetRdsInstancesInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetRdsInstancesInstanceOutput) BackupStrategies() GetRdsInstancesInstanceBackupStrategyArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) []GetRdsInstancesInstanceBackupStrategy { return v.BackupStrategies }).(GetRdsInstancesInstanceBackupStrategyArrayOutput)
}

func (o GetRdsInstancesInstanceOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) Dbs() GetRdsInstancesInstanceDbArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) []GetRdsInstancesInstanceDb { return v.Dbs }).(GetRdsInstancesInstanceDbArrayOutput)
}

func (o GetRdsInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) FixedIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.FixedIp }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) HaReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.HaReplicationMode }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) Nodes() GetRdsInstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) []GetRdsInstancesInstanceNode { return v.Nodes }).(GetRdsInstancesInstanceNodeArrayOutput)
}

func (o GetRdsInstancesInstanceOutput) ParamGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.ParamGroupId }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

func (o GetRdsInstancesInstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) []string { return v.PublicIps }).(pulumi.StringArrayOutput)
}

func (o GetRdsInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) bool { return v.SslEnable }).(pulumi.BoolOutput)
}

func (o GetRdsInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetRdsInstancesInstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.TimeZone }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceOutput) Volumes() GetRdsInstancesInstanceVolumeArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) []GetRdsInstancesInstanceVolume { return v.Volumes }).(GetRdsInstancesInstanceVolumeArrayOutput)
}

func (o GetRdsInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetRdsInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstance)(nil)).Elem()
}

func (o GetRdsInstancesInstanceArrayOutput) ToGetRdsInstancesInstanceArrayOutput() GetRdsInstancesInstanceArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceArrayOutput) ToGetRdsInstancesInstanceArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetRdsInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsInstancesInstance {
		return vs[0].([]GetRdsInstancesInstance)[vs[1].(int)]
	}).(GetRdsInstancesInstanceOutput)
}

type GetRdsInstancesInstanceBackupStrategy struct {
	KeepDays  int    `pulumi:"keepDays"`
	StartTime string `pulumi:"startTime"`
}

// GetRdsInstancesInstanceBackupStrategyInput is an input type that accepts GetRdsInstancesInstanceBackupStrategyArgs and GetRdsInstancesInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceBackupStrategyInput` via:
//
//	GetRdsInstancesInstanceBackupStrategyArgs{...}
type GetRdsInstancesInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceBackupStrategyOutput() GetRdsInstancesInstanceBackupStrategyOutput
	ToGetRdsInstancesInstanceBackupStrategyOutputWithContext(context.Context) GetRdsInstancesInstanceBackupStrategyOutput
}

type GetRdsInstancesInstanceBackupStrategyArgs struct {
	KeepDays  pulumi.IntInput    `pulumi:"keepDays"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetRdsInstancesInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetRdsInstancesInstanceBackupStrategyArgs) ToGetRdsInstancesInstanceBackupStrategyOutput() GetRdsInstancesInstanceBackupStrategyOutput {
	return i.ToGetRdsInstancesInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceBackupStrategyArgs) ToGetRdsInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetRdsInstancesInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceBackupStrategyOutput)
}

// GetRdsInstancesInstanceBackupStrategyArrayInput is an input type that accepts GetRdsInstancesInstanceBackupStrategyArray and GetRdsInstancesInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceBackupStrategyArrayInput` via:
//
//	GetRdsInstancesInstanceBackupStrategyArray{ GetRdsInstancesInstanceBackupStrategyArgs{...} }
type GetRdsInstancesInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceBackupStrategyArrayOutput() GetRdsInstancesInstanceBackupStrategyArrayOutput
	ToGetRdsInstancesInstanceBackupStrategyArrayOutputWithContext(context.Context) GetRdsInstancesInstanceBackupStrategyArrayOutput
}

type GetRdsInstancesInstanceBackupStrategyArray []GetRdsInstancesInstanceBackupStrategyInput

func (GetRdsInstancesInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetRdsInstancesInstanceBackupStrategyArray) ToGetRdsInstancesInstanceBackupStrategyArrayOutput() GetRdsInstancesInstanceBackupStrategyArrayOutput {
	return i.ToGetRdsInstancesInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceBackupStrategyArray) ToGetRdsInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceBackupStrategyArrayOutput)
}

type GetRdsInstancesInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetRdsInstancesInstanceBackupStrategyOutput) ToGetRdsInstancesInstanceBackupStrategyOutput() GetRdsInstancesInstanceBackupStrategyOutput {
	return o
}

func (o GetRdsInstancesInstanceBackupStrategyOutput) ToGetRdsInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetRdsInstancesInstanceBackupStrategyOutput {
	return o
}

func (o GetRdsInstancesInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

func (o GetRdsInstancesInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetRdsInstancesInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetRdsInstancesInstanceBackupStrategyArrayOutput) ToGetRdsInstancesInstanceBackupStrategyArrayOutput() GetRdsInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceBackupStrategyArrayOutput) ToGetRdsInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetRdsInstancesInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsInstancesInstanceBackupStrategy {
		return vs[0].([]GetRdsInstancesInstanceBackupStrategy)[vs[1].(int)]
	}).(GetRdsInstancesInstanceBackupStrategyOutput)
}

type GetRdsInstancesInstanceDb struct {
	Port     int    `pulumi:"port"`
	Type     string `pulumi:"type"`
	UserName string `pulumi:"userName"`
	Version  string `pulumi:"version"`
}

// GetRdsInstancesInstanceDbInput is an input type that accepts GetRdsInstancesInstanceDbArgs and GetRdsInstancesInstanceDbOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceDbInput` via:
//
//	GetRdsInstancesInstanceDbArgs{...}
type GetRdsInstancesInstanceDbInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceDbOutput() GetRdsInstancesInstanceDbOutput
	ToGetRdsInstancesInstanceDbOutputWithContext(context.Context) GetRdsInstancesInstanceDbOutput
}

type GetRdsInstancesInstanceDbArgs struct {
	Port     pulumi.IntInput    `pulumi:"port"`
	Type     pulumi.StringInput `pulumi:"type"`
	UserName pulumi.StringInput `pulumi:"userName"`
	Version  pulumi.StringInput `pulumi:"version"`
}

func (GetRdsInstancesInstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceDb)(nil)).Elem()
}

func (i GetRdsInstancesInstanceDbArgs) ToGetRdsInstancesInstanceDbOutput() GetRdsInstancesInstanceDbOutput {
	return i.ToGetRdsInstancesInstanceDbOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceDbArgs) ToGetRdsInstancesInstanceDbOutputWithContext(ctx context.Context) GetRdsInstancesInstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceDbOutput)
}

// GetRdsInstancesInstanceDbArrayInput is an input type that accepts GetRdsInstancesInstanceDbArray and GetRdsInstancesInstanceDbArrayOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceDbArrayInput` via:
//
//	GetRdsInstancesInstanceDbArray{ GetRdsInstancesInstanceDbArgs{...} }
type GetRdsInstancesInstanceDbArrayInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceDbArrayOutput() GetRdsInstancesInstanceDbArrayOutput
	ToGetRdsInstancesInstanceDbArrayOutputWithContext(context.Context) GetRdsInstancesInstanceDbArrayOutput
}

type GetRdsInstancesInstanceDbArray []GetRdsInstancesInstanceDbInput

func (GetRdsInstancesInstanceDbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceDb)(nil)).Elem()
}

func (i GetRdsInstancesInstanceDbArray) ToGetRdsInstancesInstanceDbArrayOutput() GetRdsInstancesInstanceDbArrayOutput {
	return i.ToGetRdsInstancesInstanceDbArrayOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceDbArray) ToGetRdsInstancesInstanceDbArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceDbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceDbArrayOutput)
}

type GetRdsInstancesInstanceDbOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceDb)(nil)).Elem()
}

func (o GetRdsInstancesInstanceDbOutput) ToGetRdsInstancesInstanceDbOutput() GetRdsInstancesInstanceDbOutput {
	return o
}

func (o GetRdsInstancesInstanceDbOutput) ToGetRdsInstancesInstanceDbOutputWithContext(ctx context.Context) GetRdsInstancesInstanceDbOutput {
	return o
}

func (o GetRdsInstancesInstanceDbOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceDb) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRdsInstancesInstanceDbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceDb) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceDbOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceDb) string { return v.UserName }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceDbOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceDb) string { return v.Version }).(pulumi.StringOutput)
}

type GetRdsInstancesInstanceDbArrayOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceDbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceDb)(nil)).Elem()
}

func (o GetRdsInstancesInstanceDbArrayOutput) ToGetRdsInstancesInstanceDbArrayOutput() GetRdsInstancesInstanceDbArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceDbArrayOutput) ToGetRdsInstancesInstanceDbArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceDbArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceDbArrayOutput) Index(i pulumi.IntInput) GetRdsInstancesInstanceDbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsInstancesInstanceDb {
		return vs[0].([]GetRdsInstancesInstanceDb)[vs[1].(int)]
	}).(GetRdsInstancesInstanceDbOutput)
}

type GetRdsInstancesInstanceNode struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
	Id               string `pulumi:"id"`
	Name             string `pulumi:"name"`
	Role             string `pulumi:"role"`
	Status           string `pulumi:"status"`
}

// GetRdsInstancesInstanceNodeInput is an input type that accepts GetRdsInstancesInstanceNodeArgs and GetRdsInstancesInstanceNodeOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceNodeInput` via:
//
//	GetRdsInstancesInstanceNodeArgs{...}
type GetRdsInstancesInstanceNodeInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceNodeOutput() GetRdsInstancesInstanceNodeOutput
	ToGetRdsInstancesInstanceNodeOutputWithContext(context.Context) GetRdsInstancesInstanceNodeOutput
}

type GetRdsInstancesInstanceNodeArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	Id               pulumi.StringInput `pulumi:"id"`
	Name             pulumi.StringInput `pulumi:"name"`
	Role             pulumi.StringInput `pulumi:"role"`
	Status           pulumi.StringInput `pulumi:"status"`
}

func (GetRdsInstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceNode)(nil)).Elem()
}

func (i GetRdsInstancesInstanceNodeArgs) ToGetRdsInstancesInstanceNodeOutput() GetRdsInstancesInstanceNodeOutput {
	return i.ToGetRdsInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceNodeArgs) ToGetRdsInstancesInstanceNodeOutputWithContext(ctx context.Context) GetRdsInstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceNodeOutput)
}

// GetRdsInstancesInstanceNodeArrayInput is an input type that accepts GetRdsInstancesInstanceNodeArray and GetRdsInstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceNodeArrayInput` via:
//
//	GetRdsInstancesInstanceNodeArray{ GetRdsInstancesInstanceNodeArgs{...} }
type GetRdsInstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceNodeArrayOutput() GetRdsInstancesInstanceNodeArrayOutput
	ToGetRdsInstancesInstanceNodeArrayOutputWithContext(context.Context) GetRdsInstancesInstanceNodeArrayOutput
}

type GetRdsInstancesInstanceNodeArray []GetRdsInstancesInstanceNodeInput

func (GetRdsInstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceNode)(nil)).Elem()
}

func (i GetRdsInstancesInstanceNodeArray) ToGetRdsInstancesInstanceNodeArrayOutput() GetRdsInstancesInstanceNodeArrayOutput {
	return i.ToGetRdsInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceNodeArray) ToGetRdsInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceNodeArrayOutput)
}

type GetRdsInstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceNode)(nil)).Elem()
}

func (o GetRdsInstancesInstanceNodeOutput) ToGetRdsInstancesInstanceNodeOutput() GetRdsInstancesInstanceNodeOutput {
	return o
}

func (o GetRdsInstancesInstanceNodeOutput) ToGetRdsInstancesInstanceNodeOutputWithContext(ctx context.Context) GetRdsInstancesInstanceNodeOutput {
	return o
}

func (o GetRdsInstancesInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceNodeOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceNode) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetRdsInstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceNode)(nil)).Elem()
}

func (o GetRdsInstancesInstanceNodeArrayOutput) ToGetRdsInstancesInstanceNodeArrayOutput() GetRdsInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceNodeArrayOutput) ToGetRdsInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetRdsInstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsInstancesInstanceNode {
		return vs[0].([]GetRdsInstancesInstanceNode)[vs[1].(int)]
	}).(GetRdsInstancesInstanceNodeOutput)
}

type GetRdsInstancesInstanceVolume struct {
	DiskEncryptionId string `pulumi:"diskEncryptionId"`
	Size             int    `pulumi:"size"`
	Type             string `pulumi:"type"`
}

// GetRdsInstancesInstanceVolumeInput is an input type that accepts GetRdsInstancesInstanceVolumeArgs and GetRdsInstancesInstanceVolumeOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceVolumeInput` via:
//
//	GetRdsInstancesInstanceVolumeArgs{...}
type GetRdsInstancesInstanceVolumeInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceVolumeOutput() GetRdsInstancesInstanceVolumeOutput
	ToGetRdsInstancesInstanceVolumeOutputWithContext(context.Context) GetRdsInstancesInstanceVolumeOutput
}

type GetRdsInstancesInstanceVolumeArgs struct {
	DiskEncryptionId pulumi.StringInput `pulumi:"diskEncryptionId"`
	Size             pulumi.IntInput    `pulumi:"size"`
	Type             pulumi.StringInput `pulumi:"type"`
}

func (GetRdsInstancesInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceVolume)(nil)).Elem()
}

func (i GetRdsInstancesInstanceVolumeArgs) ToGetRdsInstancesInstanceVolumeOutput() GetRdsInstancesInstanceVolumeOutput {
	return i.ToGetRdsInstancesInstanceVolumeOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceVolumeArgs) ToGetRdsInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetRdsInstancesInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceVolumeOutput)
}

// GetRdsInstancesInstanceVolumeArrayInput is an input type that accepts GetRdsInstancesInstanceVolumeArray and GetRdsInstancesInstanceVolumeArrayOutput values.
// You can construct a concrete instance of `GetRdsInstancesInstanceVolumeArrayInput` via:
//
//	GetRdsInstancesInstanceVolumeArray{ GetRdsInstancesInstanceVolumeArgs{...} }
type GetRdsInstancesInstanceVolumeArrayInput interface {
	pulumi.Input

	ToGetRdsInstancesInstanceVolumeArrayOutput() GetRdsInstancesInstanceVolumeArrayOutput
	ToGetRdsInstancesInstanceVolumeArrayOutputWithContext(context.Context) GetRdsInstancesInstanceVolumeArrayOutput
}

type GetRdsInstancesInstanceVolumeArray []GetRdsInstancesInstanceVolumeInput

func (GetRdsInstancesInstanceVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceVolume)(nil)).Elem()
}

func (i GetRdsInstancesInstanceVolumeArray) ToGetRdsInstancesInstanceVolumeArrayOutput() GetRdsInstancesInstanceVolumeArrayOutput {
	return i.ToGetRdsInstancesInstanceVolumeArrayOutputWithContext(context.Background())
}

func (i GetRdsInstancesInstanceVolumeArray) ToGetRdsInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsInstancesInstanceVolumeArrayOutput)
}

type GetRdsInstancesInstanceVolumeOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesInstanceVolume)(nil)).Elem()
}

func (o GetRdsInstancesInstanceVolumeOutput) ToGetRdsInstancesInstanceVolumeOutput() GetRdsInstancesInstanceVolumeOutput {
	return o
}

func (o GetRdsInstancesInstanceVolumeOutput) ToGetRdsInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetRdsInstancesInstanceVolumeOutput {
	return o
}

func (o GetRdsInstancesInstanceVolumeOutput) DiskEncryptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceVolume) string { return v.DiskEncryptionId }).(pulumi.StringOutput)
}

func (o GetRdsInstancesInstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetRdsInstancesInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type GetRdsInstancesInstanceVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesInstanceVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsInstancesInstanceVolume)(nil)).Elem()
}

func (o GetRdsInstancesInstanceVolumeArrayOutput) ToGetRdsInstancesInstanceVolumeArrayOutput() GetRdsInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceVolumeArrayOutput) ToGetRdsInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetRdsInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetRdsInstancesInstanceVolumeArrayOutput) Index(i pulumi.IntInput) GetRdsInstancesInstanceVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsInstancesInstanceVolume {
		return vs[0].([]GetRdsInstancesInstanceVolume)[vs[1].(int)]
	}).(GetRdsInstancesInstanceVolumeOutput)
}

type GetRdsPgAccountsUser struct {
	Attributes  []GetRdsPgAccountsUserAttribute `pulumi:"attributes"`
	Description string                          `pulumi:"description"`
	Memberofs   []string                        `pulumi:"memberofs"`
	Name        string                          `pulumi:"name"`
}

// GetRdsPgAccountsUserInput is an input type that accepts GetRdsPgAccountsUserArgs and GetRdsPgAccountsUserOutput values.
// You can construct a concrete instance of `GetRdsPgAccountsUserInput` via:
//
//	GetRdsPgAccountsUserArgs{...}
type GetRdsPgAccountsUserInput interface {
	pulumi.Input

	ToGetRdsPgAccountsUserOutput() GetRdsPgAccountsUserOutput
	ToGetRdsPgAccountsUserOutputWithContext(context.Context) GetRdsPgAccountsUserOutput
}

type GetRdsPgAccountsUserArgs struct {
	Attributes  GetRdsPgAccountsUserAttributeArrayInput `pulumi:"attributes"`
	Description pulumi.StringInput                      `pulumi:"description"`
	Memberofs   pulumi.StringArrayInput                 `pulumi:"memberofs"`
	Name        pulumi.StringInput                      `pulumi:"name"`
}

func (GetRdsPgAccountsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgAccountsUser)(nil)).Elem()
}

func (i GetRdsPgAccountsUserArgs) ToGetRdsPgAccountsUserOutput() GetRdsPgAccountsUserOutput {
	return i.ToGetRdsPgAccountsUserOutputWithContext(context.Background())
}

func (i GetRdsPgAccountsUserArgs) ToGetRdsPgAccountsUserOutputWithContext(ctx context.Context) GetRdsPgAccountsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgAccountsUserOutput)
}

// GetRdsPgAccountsUserArrayInput is an input type that accepts GetRdsPgAccountsUserArray and GetRdsPgAccountsUserArrayOutput values.
// You can construct a concrete instance of `GetRdsPgAccountsUserArrayInput` via:
//
//	GetRdsPgAccountsUserArray{ GetRdsPgAccountsUserArgs{...} }
type GetRdsPgAccountsUserArrayInput interface {
	pulumi.Input

	ToGetRdsPgAccountsUserArrayOutput() GetRdsPgAccountsUserArrayOutput
	ToGetRdsPgAccountsUserArrayOutputWithContext(context.Context) GetRdsPgAccountsUserArrayOutput
}

type GetRdsPgAccountsUserArray []GetRdsPgAccountsUserInput

func (GetRdsPgAccountsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgAccountsUser)(nil)).Elem()
}

func (i GetRdsPgAccountsUserArray) ToGetRdsPgAccountsUserArrayOutput() GetRdsPgAccountsUserArrayOutput {
	return i.ToGetRdsPgAccountsUserArrayOutputWithContext(context.Background())
}

func (i GetRdsPgAccountsUserArray) ToGetRdsPgAccountsUserArrayOutputWithContext(ctx context.Context) GetRdsPgAccountsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgAccountsUserArrayOutput)
}

type GetRdsPgAccountsUserOutput struct{ *pulumi.OutputState }

func (GetRdsPgAccountsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgAccountsUser)(nil)).Elem()
}

func (o GetRdsPgAccountsUserOutput) ToGetRdsPgAccountsUserOutput() GetRdsPgAccountsUserOutput {
	return o
}

func (o GetRdsPgAccountsUserOutput) ToGetRdsPgAccountsUserOutputWithContext(ctx context.Context) GetRdsPgAccountsUserOutput {
	return o
}

func (o GetRdsPgAccountsUserOutput) Attributes() GetRdsPgAccountsUserAttributeArrayOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUser) []GetRdsPgAccountsUserAttribute { return v.Attributes }).(GetRdsPgAccountsUserAttributeArrayOutput)
}

func (o GetRdsPgAccountsUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUser) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetRdsPgAccountsUserOutput) Memberofs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUser) []string { return v.Memberofs }).(pulumi.StringArrayOutput)
}

func (o GetRdsPgAccountsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetRdsPgAccountsUserArrayOutput struct{ *pulumi.OutputState }

func (GetRdsPgAccountsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgAccountsUser)(nil)).Elem()
}

func (o GetRdsPgAccountsUserArrayOutput) ToGetRdsPgAccountsUserArrayOutput() GetRdsPgAccountsUserArrayOutput {
	return o
}

func (o GetRdsPgAccountsUserArrayOutput) ToGetRdsPgAccountsUserArrayOutputWithContext(ctx context.Context) GetRdsPgAccountsUserArrayOutput {
	return o
}

func (o GetRdsPgAccountsUserArrayOutput) Index(i pulumi.IntInput) GetRdsPgAccountsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsPgAccountsUser {
		return vs[0].([]GetRdsPgAccountsUser)[vs[1].(int)]
	}).(GetRdsPgAccountsUserOutput)
}

type GetRdsPgAccountsUserAttribute struct {
	Rolbypassrls   bool `pulumi:"rolbypassrls"`
	Rolcanlogin    bool `pulumi:"rolcanlogin"`
	Rolconnlimit   int  `pulumi:"rolconnlimit"`
	Rolcreatedb    bool `pulumi:"rolcreatedb"`
	Rolcreaterole  bool `pulumi:"rolcreaterole"`
	Rolinherit     bool `pulumi:"rolinherit"`
	Rolreplication bool `pulumi:"rolreplication"`
	Rolsuper       bool `pulumi:"rolsuper"`
}

// GetRdsPgAccountsUserAttributeInput is an input type that accepts GetRdsPgAccountsUserAttributeArgs and GetRdsPgAccountsUserAttributeOutput values.
// You can construct a concrete instance of `GetRdsPgAccountsUserAttributeInput` via:
//
//	GetRdsPgAccountsUserAttributeArgs{...}
type GetRdsPgAccountsUserAttributeInput interface {
	pulumi.Input

	ToGetRdsPgAccountsUserAttributeOutput() GetRdsPgAccountsUserAttributeOutput
	ToGetRdsPgAccountsUserAttributeOutputWithContext(context.Context) GetRdsPgAccountsUserAttributeOutput
}

type GetRdsPgAccountsUserAttributeArgs struct {
	Rolbypassrls   pulumi.BoolInput `pulumi:"rolbypassrls"`
	Rolcanlogin    pulumi.BoolInput `pulumi:"rolcanlogin"`
	Rolconnlimit   pulumi.IntInput  `pulumi:"rolconnlimit"`
	Rolcreatedb    pulumi.BoolInput `pulumi:"rolcreatedb"`
	Rolcreaterole  pulumi.BoolInput `pulumi:"rolcreaterole"`
	Rolinherit     pulumi.BoolInput `pulumi:"rolinherit"`
	Rolreplication pulumi.BoolInput `pulumi:"rolreplication"`
	Rolsuper       pulumi.BoolInput `pulumi:"rolsuper"`
}

func (GetRdsPgAccountsUserAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgAccountsUserAttribute)(nil)).Elem()
}

func (i GetRdsPgAccountsUserAttributeArgs) ToGetRdsPgAccountsUserAttributeOutput() GetRdsPgAccountsUserAttributeOutput {
	return i.ToGetRdsPgAccountsUserAttributeOutputWithContext(context.Background())
}

func (i GetRdsPgAccountsUserAttributeArgs) ToGetRdsPgAccountsUserAttributeOutputWithContext(ctx context.Context) GetRdsPgAccountsUserAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgAccountsUserAttributeOutput)
}

// GetRdsPgAccountsUserAttributeArrayInput is an input type that accepts GetRdsPgAccountsUserAttributeArray and GetRdsPgAccountsUserAttributeArrayOutput values.
// You can construct a concrete instance of `GetRdsPgAccountsUserAttributeArrayInput` via:
//
//	GetRdsPgAccountsUserAttributeArray{ GetRdsPgAccountsUserAttributeArgs{...} }
type GetRdsPgAccountsUserAttributeArrayInput interface {
	pulumi.Input

	ToGetRdsPgAccountsUserAttributeArrayOutput() GetRdsPgAccountsUserAttributeArrayOutput
	ToGetRdsPgAccountsUserAttributeArrayOutputWithContext(context.Context) GetRdsPgAccountsUserAttributeArrayOutput
}

type GetRdsPgAccountsUserAttributeArray []GetRdsPgAccountsUserAttributeInput

func (GetRdsPgAccountsUserAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgAccountsUserAttribute)(nil)).Elem()
}

func (i GetRdsPgAccountsUserAttributeArray) ToGetRdsPgAccountsUserAttributeArrayOutput() GetRdsPgAccountsUserAttributeArrayOutput {
	return i.ToGetRdsPgAccountsUserAttributeArrayOutputWithContext(context.Background())
}

func (i GetRdsPgAccountsUserAttributeArray) ToGetRdsPgAccountsUserAttributeArrayOutputWithContext(ctx context.Context) GetRdsPgAccountsUserAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgAccountsUserAttributeArrayOutput)
}

type GetRdsPgAccountsUserAttributeOutput struct{ *pulumi.OutputState }

func (GetRdsPgAccountsUserAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgAccountsUserAttribute)(nil)).Elem()
}

func (o GetRdsPgAccountsUserAttributeOutput) ToGetRdsPgAccountsUserAttributeOutput() GetRdsPgAccountsUserAttributeOutput {
	return o
}

func (o GetRdsPgAccountsUserAttributeOutput) ToGetRdsPgAccountsUserAttributeOutputWithContext(ctx context.Context) GetRdsPgAccountsUserAttributeOutput {
	return o
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolbypassrls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) bool { return v.Rolbypassrls }).(pulumi.BoolOutput)
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolcanlogin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) bool { return v.Rolcanlogin }).(pulumi.BoolOutput)
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolconnlimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) int { return v.Rolconnlimit }).(pulumi.IntOutput)
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolcreatedb() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) bool { return v.Rolcreatedb }).(pulumi.BoolOutput)
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolcreaterole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) bool { return v.Rolcreaterole }).(pulumi.BoolOutput)
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolinherit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) bool { return v.Rolinherit }).(pulumi.BoolOutput)
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolreplication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) bool { return v.Rolreplication }).(pulumi.BoolOutput)
}

func (o GetRdsPgAccountsUserAttributeOutput) Rolsuper() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgAccountsUserAttribute) bool { return v.Rolsuper }).(pulumi.BoolOutput)
}

type GetRdsPgAccountsUserAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetRdsPgAccountsUserAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgAccountsUserAttribute)(nil)).Elem()
}

func (o GetRdsPgAccountsUserAttributeArrayOutput) ToGetRdsPgAccountsUserAttributeArrayOutput() GetRdsPgAccountsUserAttributeArrayOutput {
	return o
}

func (o GetRdsPgAccountsUserAttributeArrayOutput) ToGetRdsPgAccountsUserAttributeArrayOutputWithContext(ctx context.Context) GetRdsPgAccountsUserAttributeArrayOutput {
	return o
}

func (o GetRdsPgAccountsUserAttributeArrayOutput) Index(i pulumi.IntInput) GetRdsPgAccountsUserAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsPgAccountsUserAttribute {
		return vs[0].([]GetRdsPgAccountsUserAttribute)[vs[1].(int)]
	}).(GetRdsPgAccountsUserAttributeOutput)
}

type GetRdsPgDatabasesDatabase struct {
	CharacterSet string `pulumi:"characterSet"`
	Description  string `pulumi:"description"`
	LcCollate    string `pulumi:"lcCollate"`
	Name         string `pulumi:"name"`
	Owner        string `pulumi:"owner"`
	Size         int    `pulumi:"size"`
}

// GetRdsPgDatabasesDatabaseInput is an input type that accepts GetRdsPgDatabasesDatabaseArgs and GetRdsPgDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetRdsPgDatabasesDatabaseInput` via:
//
//	GetRdsPgDatabasesDatabaseArgs{...}
type GetRdsPgDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetRdsPgDatabasesDatabaseOutput() GetRdsPgDatabasesDatabaseOutput
	ToGetRdsPgDatabasesDatabaseOutputWithContext(context.Context) GetRdsPgDatabasesDatabaseOutput
}

type GetRdsPgDatabasesDatabaseArgs struct {
	CharacterSet pulumi.StringInput `pulumi:"characterSet"`
	Description  pulumi.StringInput `pulumi:"description"`
	LcCollate    pulumi.StringInput `pulumi:"lcCollate"`
	Name         pulumi.StringInput `pulumi:"name"`
	Owner        pulumi.StringInput `pulumi:"owner"`
	Size         pulumi.IntInput    `pulumi:"size"`
}

func (GetRdsPgDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgDatabasesDatabase)(nil)).Elem()
}

func (i GetRdsPgDatabasesDatabaseArgs) ToGetRdsPgDatabasesDatabaseOutput() GetRdsPgDatabasesDatabaseOutput {
	return i.ToGetRdsPgDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetRdsPgDatabasesDatabaseArgs) ToGetRdsPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetRdsPgDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgDatabasesDatabaseOutput)
}

// GetRdsPgDatabasesDatabaseArrayInput is an input type that accepts GetRdsPgDatabasesDatabaseArray and GetRdsPgDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetRdsPgDatabasesDatabaseArrayInput` via:
//
//	GetRdsPgDatabasesDatabaseArray{ GetRdsPgDatabasesDatabaseArgs{...} }
type GetRdsPgDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetRdsPgDatabasesDatabaseArrayOutput() GetRdsPgDatabasesDatabaseArrayOutput
	ToGetRdsPgDatabasesDatabaseArrayOutputWithContext(context.Context) GetRdsPgDatabasesDatabaseArrayOutput
}

type GetRdsPgDatabasesDatabaseArray []GetRdsPgDatabasesDatabaseInput

func (GetRdsPgDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgDatabasesDatabase)(nil)).Elem()
}

func (i GetRdsPgDatabasesDatabaseArray) ToGetRdsPgDatabasesDatabaseArrayOutput() GetRdsPgDatabasesDatabaseArrayOutput {
	return i.ToGetRdsPgDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetRdsPgDatabasesDatabaseArray) ToGetRdsPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetRdsPgDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgDatabasesDatabaseArrayOutput)
}

type GetRdsPgDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetRdsPgDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgDatabasesDatabase)(nil)).Elem()
}

func (o GetRdsPgDatabasesDatabaseOutput) ToGetRdsPgDatabasesDatabaseOutput() GetRdsPgDatabasesDatabaseOutput {
	return o
}

func (o GetRdsPgDatabasesDatabaseOutput) ToGetRdsPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetRdsPgDatabasesDatabaseOutput {
	return o
}

func (o GetRdsPgDatabasesDatabaseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgDatabasesDatabase) string { return v.CharacterSet }).(pulumi.StringOutput)
}

func (o GetRdsPgDatabasesDatabaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgDatabasesDatabase) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetRdsPgDatabasesDatabaseOutput) LcCollate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgDatabasesDatabase) string { return v.LcCollate }).(pulumi.StringOutput)
}

func (o GetRdsPgDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRdsPgDatabasesDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgDatabasesDatabase) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetRdsPgDatabasesDatabaseOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsPgDatabasesDatabase) int { return v.Size }).(pulumi.IntOutput)
}

type GetRdsPgDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetRdsPgDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgDatabasesDatabase)(nil)).Elem()
}

func (o GetRdsPgDatabasesDatabaseArrayOutput) ToGetRdsPgDatabasesDatabaseArrayOutput() GetRdsPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetRdsPgDatabasesDatabaseArrayOutput) ToGetRdsPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetRdsPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetRdsPgDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetRdsPgDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsPgDatabasesDatabase {
		return vs[0].([]GetRdsPgDatabasesDatabase)[vs[1].(int)]
	}).(GetRdsPgDatabasesDatabaseOutput)
}

type GetRdsPgPluginsPlugin struct {
	// Indicates whether the plugin has been created.
	Created bool `pulumi:"created"`
	// Indicates the plugin description.
	Description string `pulumi:"description"`
	// Indicates the plugin name.
	Name string `pulumi:"name"`
	// Indicates the dependent preloaded library.
	SharedPreloadLibraries string `pulumi:"sharedPreloadLibraries"`
	// Indicates the plugin version.
	Version string `pulumi:"version"`
}

// GetRdsPgPluginsPluginInput is an input type that accepts GetRdsPgPluginsPluginArgs and GetRdsPgPluginsPluginOutput values.
// You can construct a concrete instance of `GetRdsPgPluginsPluginInput` via:
//
//	GetRdsPgPluginsPluginArgs{...}
type GetRdsPgPluginsPluginInput interface {
	pulumi.Input

	ToGetRdsPgPluginsPluginOutput() GetRdsPgPluginsPluginOutput
	ToGetRdsPgPluginsPluginOutputWithContext(context.Context) GetRdsPgPluginsPluginOutput
}

type GetRdsPgPluginsPluginArgs struct {
	// Indicates whether the plugin has been created.
	Created pulumi.BoolInput `pulumi:"created"`
	// Indicates the plugin description.
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates the plugin name.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the dependent preloaded library.
	SharedPreloadLibraries pulumi.StringInput `pulumi:"sharedPreloadLibraries"`
	// Indicates the plugin version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetRdsPgPluginsPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgPluginsPlugin)(nil)).Elem()
}

func (i GetRdsPgPluginsPluginArgs) ToGetRdsPgPluginsPluginOutput() GetRdsPgPluginsPluginOutput {
	return i.ToGetRdsPgPluginsPluginOutputWithContext(context.Background())
}

func (i GetRdsPgPluginsPluginArgs) ToGetRdsPgPluginsPluginOutputWithContext(ctx context.Context) GetRdsPgPluginsPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgPluginsPluginOutput)
}

// GetRdsPgPluginsPluginArrayInput is an input type that accepts GetRdsPgPluginsPluginArray and GetRdsPgPluginsPluginArrayOutput values.
// You can construct a concrete instance of `GetRdsPgPluginsPluginArrayInput` via:
//
//	GetRdsPgPluginsPluginArray{ GetRdsPgPluginsPluginArgs{...} }
type GetRdsPgPluginsPluginArrayInput interface {
	pulumi.Input

	ToGetRdsPgPluginsPluginArrayOutput() GetRdsPgPluginsPluginArrayOutput
	ToGetRdsPgPluginsPluginArrayOutputWithContext(context.Context) GetRdsPgPluginsPluginArrayOutput
}

type GetRdsPgPluginsPluginArray []GetRdsPgPluginsPluginInput

func (GetRdsPgPluginsPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgPluginsPlugin)(nil)).Elem()
}

func (i GetRdsPgPluginsPluginArray) ToGetRdsPgPluginsPluginArrayOutput() GetRdsPgPluginsPluginArrayOutput {
	return i.ToGetRdsPgPluginsPluginArrayOutputWithContext(context.Background())
}

func (i GetRdsPgPluginsPluginArray) ToGetRdsPgPluginsPluginArrayOutputWithContext(ctx context.Context) GetRdsPgPluginsPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgPluginsPluginArrayOutput)
}

type GetRdsPgPluginsPluginOutput struct{ *pulumi.OutputState }

func (GetRdsPgPluginsPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgPluginsPlugin)(nil)).Elem()
}

func (o GetRdsPgPluginsPluginOutput) ToGetRdsPgPluginsPluginOutput() GetRdsPgPluginsPluginOutput {
	return o
}

func (o GetRdsPgPluginsPluginOutput) ToGetRdsPgPluginsPluginOutputWithContext(ctx context.Context) GetRdsPgPluginsPluginOutput {
	return o
}

// Indicates whether the plugin has been created.
func (o GetRdsPgPluginsPluginOutput) Created() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgPluginsPlugin) bool { return v.Created }).(pulumi.BoolOutput)
}

// Indicates the plugin description.
func (o GetRdsPgPluginsPluginOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgPluginsPlugin) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates the plugin name.
func (o GetRdsPgPluginsPluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgPluginsPlugin) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the dependent preloaded library.
func (o GetRdsPgPluginsPluginOutput) SharedPreloadLibraries() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgPluginsPlugin) string { return v.SharedPreloadLibraries }).(pulumi.StringOutput)
}

// Indicates the plugin version.
func (o GetRdsPgPluginsPluginOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgPluginsPlugin) string { return v.Version }).(pulumi.StringOutput)
}

type GetRdsPgPluginsPluginArrayOutput struct{ *pulumi.OutputState }

func (GetRdsPgPluginsPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgPluginsPlugin)(nil)).Elem()
}

func (o GetRdsPgPluginsPluginArrayOutput) ToGetRdsPgPluginsPluginArrayOutput() GetRdsPgPluginsPluginArrayOutput {
	return o
}

func (o GetRdsPgPluginsPluginArrayOutput) ToGetRdsPgPluginsPluginArrayOutputWithContext(ctx context.Context) GetRdsPgPluginsPluginArrayOutput {
	return o
}

func (o GetRdsPgPluginsPluginArrayOutput) Index(i pulumi.IntInput) GetRdsPgPluginsPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsPgPluginsPlugin {
		return vs[0].([]GetRdsPgPluginsPlugin)[vs[1].(int)]
	}).(GetRdsPgPluginsPluginOutput)
}

type GetRdsPgSqlLimitsSqlLimit struct {
	// Indicates the ID of SQL limit.
	Id string `pulumi:"id"`
	// Indicates whether the SQL limit is effective.
	IsEffective bool `pulumi:"isEffective"`
	// Indicates the number of SQL statements executed simultaneously.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Indicates the max waiting time in seconds.
	MaxWaiting int `pulumi:"maxWaiting"`
	// Indicates the query ID.
	QueryId string `pulumi:"queryId"`
	// Indicates the text form of SQL statement.
	QueryString string `pulumi:"queryString"`
	// Indicates the query order for names that are not schema qualified.
	SearchPath string `pulumi:"searchPath"`
}

// GetRdsPgSqlLimitsSqlLimitInput is an input type that accepts GetRdsPgSqlLimitsSqlLimitArgs and GetRdsPgSqlLimitsSqlLimitOutput values.
// You can construct a concrete instance of `GetRdsPgSqlLimitsSqlLimitInput` via:
//
//	GetRdsPgSqlLimitsSqlLimitArgs{...}
type GetRdsPgSqlLimitsSqlLimitInput interface {
	pulumi.Input

	ToGetRdsPgSqlLimitsSqlLimitOutput() GetRdsPgSqlLimitsSqlLimitOutput
	ToGetRdsPgSqlLimitsSqlLimitOutputWithContext(context.Context) GetRdsPgSqlLimitsSqlLimitOutput
}

type GetRdsPgSqlLimitsSqlLimitArgs struct {
	// Indicates the ID of SQL limit.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the SQL limit is effective.
	IsEffective pulumi.BoolInput `pulumi:"isEffective"`
	// Indicates the number of SQL statements executed simultaneously.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Indicates the max waiting time in seconds.
	MaxWaiting pulumi.IntInput `pulumi:"maxWaiting"`
	// Indicates the query ID.
	QueryId pulumi.StringInput `pulumi:"queryId"`
	// Indicates the text form of SQL statement.
	QueryString pulumi.StringInput `pulumi:"queryString"`
	// Indicates the query order for names that are not schema qualified.
	SearchPath pulumi.StringInput `pulumi:"searchPath"`
}

func (GetRdsPgSqlLimitsSqlLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (i GetRdsPgSqlLimitsSqlLimitArgs) ToGetRdsPgSqlLimitsSqlLimitOutput() GetRdsPgSqlLimitsSqlLimitOutput {
	return i.ToGetRdsPgSqlLimitsSqlLimitOutputWithContext(context.Background())
}

func (i GetRdsPgSqlLimitsSqlLimitArgs) ToGetRdsPgSqlLimitsSqlLimitOutputWithContext(ctx context.Context) GetRdsPgSqlLimitsSqlLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgSqlLimitsSqlLimitOutput)
}

// GetRdsPgSqlLimitsSqlLimitArrayInput is an input type that accepts GetRdsPgSqlLimitsSqlLimitArray and GetRdsPgSqlLimitsSqlLimitArrayOutput values.
// You can construct a concrete instance of `GetRdsPgSqlLimitsSqlLimitArrayInput` via:
//
//	GetRdsPgSqlLimitsSqlLimitArray{ GetRdsPgSqlLimitsSqlLimitArgs{...} }
type GetRdsPgSqlLimitsSqlLimitArrayInput interface {
	pulumi.Input

	ToGetRdsPgSqlLimitsSqlLimitArrayOutput() GetRdsPgSqlLimitsSqlLimitArrayOutput
	ToGetRdsPgSqlLimitsSqlLimitArrayOutputWithContext(context.Context) GetRdsPgSqlLimitsSqlLimitArrayOutput
}

type GetRdsPgSqlLimitsSqlLimitArray []GetRdsPgSqlLimitsSqlLimitInput

func (GetRdsPgSqlLimitsSqlLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (i GetRdsPgSqlLimitsSqlLimitArray) ToGetRdsPgSqlLimitsSqlLimitArrayOutput() GetRdsPgSqlLimitsSqlLimitArrayOutput {
	return i.ToGetRdsPgSqlLimitsSqlLimitArrayOutputWithContext(context.Background())
}

func (i GetRdsPgSqlLimitsSqlLimitArray) ToGetRdsPgSqlLimitsSqlLimitArrayOutputWithContext(ctx context.Context) GetRdsPgSqlLimitsSqlLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsPgSqlLimitsSqlLimitArrayOutput)
}

type GetRdsPgSqlLimitsSqlLimitOutput struct{ *pulumi.OutputState }

func (GetRdsPgSqlLimitsSqlLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (o GetRdsPgSqlLimitsSqlLimitOutput) ToGetRdsPgSqlLimitsSqlLimitOutput() GetRdsPgSqlLimitsSqlLimitOutput {
	return o
}

func (o GetRdsPgSqlLimitsSqlLimitOutput) ToGetRdsPgSqlLimitsSqlLimitOutputWithContext(ctx context.Context) GetRdsPgSqlLimitsSqlLimitOutput {
	return o
}

// Indicates the ID of SQL limit.
func (o GetRdsPgSqlLimitsSqlLimitOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsSqlLimit) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the SQL limit is effective.
func (o GetRdsPgSqlLimitsSqlLimitOutput) IsEffective() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsSqlLimit) bool { return v.IsEffective }).(pulumi.BoolOutput)
}

// Indicates the number of SQL statements executed simultaneously.
func (o GetRdsPgSqlLimitsSqlLimitOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsSqlLimit) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Indicates the max waiting time in seconds.
func (o GetRdsPgSqlLimitsSqlLimitOutput) MaxWaiting() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsSqlLimit) int { return v.MaxWaiting }).(pulumi.IntOutput)
}

// Indicates the query ID.
func (o GetRdsPgSqlLimitsSqlLimitOutput) QueryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsSqlLimit) string { return v.QueryId }).(pulumi.StringOutput)
}

// Indicates the text form of SQL statement.
func (o GetRdsPgSqlLimitsSqlLimitOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsSqlLimit) string { return v.QueryString }).(pulumi.StringOutput)
}

// Indicates the query order for names that are not schema qualified.
func (o GetRdsPgSqlLimitsSqlLimitOutput) SearchPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsSqlLimit) string { return v.SearchPath }).(pulumi.StringOutput)
}

type GetRdsPgSqlLimitsSqlLimitArrayOutput struct{ *pulumi.OutputState }

func (GetRdsPgSqlLimitsSqlLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (o GetRdsPgSqlLimitsSqlLimitArrayOutput) ToGetRdsPgSqlLimitsSqlLimitArrayOutput() GetRdsPgSqlLimitsSqlLimitArrayOutput {
	return o
}

func (o GetRdsPgSqlLimitsSqlLimitArrayOutput) ToGetRdsPgSqlLimitsSqlLimitArrayOutputWithContext(ctx context.Context) GetRdsPgSqlLimitsSqlLimitArrayOutput {
	return o
}

func (o GetRdsPgSqlLimitsSqlLimitArrayOutput) Index(i pulumi.IntInput) GetRdsPgSqlLimitsSqlLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsPgSqlLimitsSqlLimit {
		return vs[0].([]GetRdsPgSqlLimitsSqlLimit)[vs[1].(int)]
	}).(GetRdsPgSqlLimitsSqlLimitOutput)
}

type GetRdsStorageTypesStorageType struct {
	// The status details of the AZs to which the specification belongs.
	AzStatus map[string]string `pulumi:"azStatus"`
	// Storage type.
	Name string `pulumi:"name"`
	// Performance specifications.
	SupportComputeGroupTypes []string `pulumi:"supportComputeGroupTypes"`
}

// GetRdsStorageTypesStorageTypeInput is an input type that accepts GetRdsStorageTypesStorageTypeArgs and GetRdsStorageTypesStorageTypeOutput values.
// You can construct a concrete instance of `GetRdsStorageTypesStorageTypeInput` via:
//
//	GetRdsStorageTypesStorageTypeArgs{...}
type GetRdsStorageTypesStorageTypeInput interface {
	pulumi.Input

	ToGetRdsStorageTypesStorageTypeOutput() GetRdsStorageTypesStorageTypeOutput
	ToGetRdsStorageTypesStorageTypeOutputWithContext(context.Context) GetRdsStorageTypesStorageTypeOutput
}

type GetRdsStorageTypesStorageTypeArgs struct {
	// The status details of the AZs to which the specification belongs.
	AzStatus pulumi.StringMapInput `pulumi:"azStatus"`
	// Storage type.
	Name pulumi.StringInput `pulumi:"name"`
	// Performance specifications.
	SupportComputeGroupTypes pulumi.StringArrayInput `pulumi:"supportComputeGroupTypes"`
}

func (GetRdsStorageTypesStorageTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsStorageTypesStorageType)(nil)).Elem()
}

func (i GetRdsStorageTypesStorageTypeArgs) ToGetRdsStorageTypesStorageTypeOutput() GetRdsStorageTypesStorageTypeOutput {
	return i.ToGetRdsStorageTypesStorageTypeOutputWithContext(context.Background())
}

func (i GetRdsStorageTypesStorageTypeArgs) ToGetRdsStorageTypesStorageTypeOutputWithContext(ctx context.Context) GetRdsStorageTypesStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsStorageTypesStorageTypeOutput)
}

// GetRdsStorageTypesStorageTypeArrayInput is an input type that accepts GetRdsStorageTypesStorageTypeArray and GetRdsStorageTypesStorageTypeArrayOutput values.
// You can construct a concrete instance of `GetRdsStorageTypesStorageTypeArrayInput` via:
//
//	GetRdsStorageTypesStorageTypeArray{ GetRdsStorageTypesStorageTypeArgs{...} }
type GetRdsStorageTypesStorageTypeArrayInput interface {
	pulumi.Input

	ToGetRdsStorageTypesStorageTypeArrayOutput() GetRdsStorageTypesStorageTypeArrayOutput
	ToGetRdsStorageTypesStorageTypeArrayOutputWithContext(context.Context) GetRdsStorageTypesStorageTypeArrayOutput
}

type GetRdsStorageTypesStorageTypeArray []GetRdsStorageTypesStorageTypeInput

func (GetRdsStorageTypesStorageTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsStorageTypesStorageType)(nil)).Elem()
}

func (i GetRdsStorageTypesStorageTypeArray) ToGetRdsStorageTypesStorageTypeArrayOutput() GetRdsStorageTypesStorageTypeArrayOutput {
	return i.ToGetRdsStorageTypesStorageTypeArrayOutputWithContext(context.Background())
}

func (i GetRdsStorageTypesStorageTypeArray) ToGetRdsStorageTypesStorageTypeArrayOutputWithContext(ctx context.Context) GetRdsStorageTypesStorageTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsStorageTypesStorageTypeArrayOutput)
}

type GetRdsStorageTypesStorageTypeOutput struct{ *pulumi.OutputState }

func (GetRdsStorageTypesStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsStorageTypesStorageType)(nil)).Elem()
}

func (o GetRdsStorageTypesStorageTypeOutput) ToGetRdsStorageTypesStorageTypeOutput() GetRdsStorageTypesStorageTypeOutput {
	return o
}

func (o GetRdsStorageTypesStorageTypeOutput) ToGetRdsStorageTypesStorageTypeOutputWithContext(ctx context.Context) GetRdsStorageTypesStorageTypeOutput {
	return o
}

// The status details of the AZs to which the specification belongs.
func (o GetRdsStorageTypesStorageTypeOutput) AzStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRdsStorageTypesStorageType) map[string]string { return v.AzStatus }).(pulumi.StringMapOutput)
}

// Storage type.
func (o GetRdsStorageTypesStorageTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsStorageTypesStorageType) string { return v.Name }).(pulumi.StringOutput)
}

// Performance specifications.
func (o GetRdsStorageTypesStorageTypeOutput) SupportComputeGroupTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRdsStorageTypesStorageType) []string { return v.SupportComputeGroupTypes }).(pulumi.StringArrayOutput)
}

type GetRdsStorageTypesStorageTypeArrayOutput struct{ *pulumi.OutputState }

func (GetRdsStorageTypesStorageTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsStorageTypesStorageType)(nil)).Elem()
}

func (o GetRdsStorageTypesStorageTypeArrayOutput) ToGetRdsStorageTypesStorageTypeArrayOutput() GetRdsStorageTypesStorageTypeArrayOutput {
	return o
}

func (o GetRdsStorageTypesStorageTypeArrayOutput) ToGetRdsStorageTypesStorageTypeArrayOutputWithContext(ctx context.Context) GetRdsStorageTypesStorageTypeArrayOutput {
	return o
}

func (o GetRdsStorageTypesStorageTypeArrayOutput) Index(i pulumi.IntInput) GetRdsStorageTypesStorageTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsStorageTypesStorageType {
		return vs[0].([]GetRdsStorageTypesStorageType)[vs[1].(int)]
	}).(GetRdsStorageTypesStorageTypeOutput)
}

type GetSfsTurboDataTasksTask struct {
	// The destination path prefix of the data task.
	DestPrefix string `pulumi:"destPrefix"`
	// The target end information of the data task.
	DestTarget string `pulumi:"destTarget"`
	// The end time of the data task, in RFC3339 format.
	EndTime string `pulumi:"endTime"`
	// The ID of the data task.
	Id string `pulumi:"id"`
	// The data task execution result information.
	Message string `pulumi:"message"`
	// The source path prefix of the data task.
	SrcPrefix string `pulumi:"srcPrefix"`
	// The linkage directory name.
	SrcTarget string `pulumi:"srcTarget"`
	// The start time of the data task, in RFC3339 format.
	StartTime string `pulumi:"startTime"`
	// The status of the data task.
	Status string `pulumi:"status"`
	// The type of the data task.
	Type string `pulumi:"type"`
}

// GetSfsTurboDataTasksTaskInput is an input type that accepts GetSfsTurboDataTasksTaskArgs and GetSfsTurboDataTasksTaskOutput values.
// You can construct a concrete instance of `GetSfsTurboDataTasksTaskInput` via:
//
//	GetSfsTurboDataTasksTaskArgs{...}
type GetSfsTurboDataTasksTaskInput interface {
	pulumi.Input

	ToGetSfsTurboDataTasksTaskOutput() GetSfsTurboDataTasksTaskOutput
	ToGetSfsTurboDataTasksTaskOutputWithContext(context.Context) GetSfsTurboDataTasksTaskOutput
}

type GetSfsTurboDataTasksTaskArgs struct {
	// The destination path prefix of the data task.
	DestPrefix pulumi.StringInput `pulumi:"destPrefix"`
	// The target end information of the data task.
	DestTarget pulumi.StringInput `pulumi:"destTarget"`
	// The end time of the data task, in RFC3339 format.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The ID of the data task.
	Id pulumi.StringInput `pulumi:"id"`
	// The data task execution result information.
	Message pulumi.StringInput `pulumi:"message"`
	// The source path prefix of the data task.
	SrcPrefix pulumi.StringInput `pulumi:"srcPrefix"`
	// The linkage directory name.
	SrcTarget pulumi.StringInput `pulumi:"srcTarget"`
	// The start time of the data task, in RFC3339 format.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The status of the data task.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the data task.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetSfsTurboDataTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDataTasksTask)(nil)).Elem()
}

func (i GetSfsTurboDataTasksTaskArgs) ToGetSfsTurboDataTasksTaskOutput() GetSfsTurboDataTasksTaskOutput {
	return i.ToGetSfsTurboDataTasksTaskOutputWithContext(context.Background())
}

func (i GetSfsTurboDataTasksTaskArgs) ToGetSfsTurboDataTasksTaskOutputWithContext(ctx context.Context) GetSfsTurboDataTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDataTasksTaskOutput)
}

// GetSfsTurboDataTasksTaskArrayInput is an input type that accepts GetSfsTurboDataTasksTaskArray and GetSfsTurboDataTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetSfsTurboDataTasksTaskArrayInput` via:
//
//	GetSfsTurboDataTasksTaskArray{ GetSfsTurboDataTasksTaskArgs{...} }
type GetSfsTurboDataTasksTaskArrayInput interface {
	pulumi.Input

	ToGetSfsTurboDataTasksTaskArrayOutput() GetSfsTurboDataTasksTaskArrayOutput
	ToGetSfsTurboDataTasksTaskArrayOutputWithContext(context.Context) GetSfsTurboDataTasksTaskArrayOutput
}

type GetSfsTurboDataTasksTaskArray []GetSfsTurboDataTasksTaskInput

func (GetSfsTurboDataTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDataTasksTask)(nil)).Elem()
}

func (i GetSfsTurboDataTasksTaskArray) ToGetSfsTurboDataTasksTaskArrayOutput() GetSfsTurboDataTasksTaskArrayOutput {
	return i.ToGetSfsTurboDataTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetSfsTurboDataTasksTaskArray) ToGetSfsTurboDataTasksTaskArrayOutputWithContext(ctx context.Context) GetSfsTurboDataTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDataTasksTaskArrayOutput)
}

type GetSfsTurboDataTasksTaskOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDataTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDataTasksTask)(nil)).Elem()
}

func (o GetSfsTurboDataTasksTaskOutput) ToGetSfsTurboDataTasksTaskOutput() GetSfsTurboDataTasksTaskOutput {
	return o
}

func (o GetSfsTurboDataTasksTaskOutput) ToGetSfsTurboDataTasksTaskOutputWithContext(ctx context.Context) GetSfsTurboDataTasksTaskOutput {
	return o
}

// The destination path prefix of the data task.
func (o GetSfsTurboDataTasksTaskOutput) DestPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.DestPrefix }).(pulumi.StringOutput)
}

// The target end information of the data task.
func (o GetSfsTurboDataTasksTaskOutput) DestTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.DestTarget }).(pulumi.StringOutput)
}

// The end time of the data task, in RFC3339 format.
func (o GetSfsTurboDataTasksTaskOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.EndTime }).(pulumi.StringOutput)
}

// The ID of the data task.
func (o GetSfsTurboDataTasksTaskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.Id }).(pulumi.StringOutput)
}

// The data task execution result information.
func (o GetSfsTurboDataTasksTaskOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.Message }).(pulumi.StringOutput)
}

// The source path prefix of the data task.
func (o GetSfsTurboDataTasksTaskOutput) SrcPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.SrcPrefix }).(pulumi.StringOutput)
}

// The linkage directory name.
func (o GetSfsTurboDataTasksTaskOutput) SrcTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.SrcTarget }).(pulumi.StringOutput)
}

// The start time of the data task, in RFC3339 format.
func (o GetSfsTurboDataTasksTaskOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.StartTime }).(pulumi.StringOutput)
}

// The status of the data task.
func (o GetSfsTurboDataTasksTaskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the data task.
func (o GetSfsTurboDataTasksTaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksTask) string { return v.Type }).(pulumi.StringOutput)
}

type GetSfsTurboDataTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDataTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDataTasksTask)(nil)).Elem()
}

func (o GetSfsTurboDataTasksTaskArrayOutput) ToGetSfsTurboDataTasksTaskArrayOutput() GetSfsTurboDataTasksTaskArrayOutput {
	return o
}

func (o GetSfsTurboDataTasksTaskArrayOutput) ToGetSfsTurboDataTasksTaskArrayOutputWithContext(ctx context.Context) GetSfsTurboDataTasksTaskArrayOutput {
	return o
}

func (o GetSfsTurboDataTasksTaskArrayOutput) Index(i pulumi.IntInput) GetSfsTurboDataTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurboDataTasksTask {
		return vs[0].([]GetSfsTurboDataTasksTask)[vs[1].(int)]
	}).(GetSfsTurboDataTasksTaskOutput)
}

type GetSfsTurboDuTasksTask struct {
	// The start time of the DU task, in RFC3339 format.
	BeginTime string `pulumi:"beginTime"`
	// The resource usages of a directory (including subdirectories).
	DirUsages []GetSfsTurboDuTasksTaskDirUsage `pulumi:"dirUsages"`
	// The end time of the DU task, in RFC3339 format.
	EndTime string `pulumi:"endTime"`
	// The ID of the DU task.
	Id string `pulumi:"id"`
	// The status of the DU task.
	Status string `pulumi:"status"`
}

// GetSfsTurboDuTasksTaskInput is an input type that accepts GetSfsTurboDuTasksTaskArgs and GetSfsTurboDuTasksTaskOutput values.
// You can construct a concrete instance of `GetSfsTurboDuTasksTaskInput` via:
//
//	GetSfsTurboDuTasksTaskArgs{...}
type GetSfsTurboDuTasksTaskInput interface {
	pulumi.Input

	ToGetSfsTurboDuTasksTaskOutput() GetSfsTurboDuTasksTaskOutput
	ToGetSfsTurboDuTasksTaskOutputWithContext(context.Context) GetSfsTurboDuTasksTaskOutput
}

type GetSfsTurboDuTasksTaskArgs struct {
	// The start time of the DU task, in RFC3339 format.
	BeginTime pulumi.StringInput `pulumi:"beginTime"`
	// The resource usages of a directory (including subdirectories).
	DirUsages GetSfsTurboDuTasksTaskDirUsageArrayInput `pulumi:"dirUsages"`
	// The end time of the DU task, in RFC3339 format.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The ID of the DU task.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the DU task.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSfsTurboDuTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksTask)(nil)).Elem()
}

func (i GetSfsTurboDuTasksTaskArgs) ToGetSfsTurboDuTasksTaskOutput() GetSfsTurboDuTasksTaskOutput {
	return i.ToGetSfsTurboDuTasksTaskOutputWithContext(context.Background())
}

func (i GetSfsTurboDuTasksTaskArgs) ToGetSfsTurboDuTasksTaskOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDuTasksTaskOutput)
}

// GetSfsTurboDuTasksTaskArrayInput is an input type that accepts GetSfsTurboDuTasksTaskArray and GetSfsTurboDuTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetSfsTurboDuTasksTaskArrayInput` via:
//
//	GetSfsTurboDuTasksTaskArray{ GetSfsTurboDuTasksTaskArgs{...} }
type GetSfsTurboDuTasksTaskArrayInput interface {
	pulumi.Input

	ToGetSfsTurboDuTasksTaskArrayOutput() GetSfsTurboDuTasksTaskArrayOutput
	ToGetSfsTurboDuTasksTaskArrayOutputWithContext(context.Context) GetSfsTurboDuTasksTaskArrayOutput
}

type GetSfsTurboDuTasksTaskArray []GetSfsTurboDuTasksTaskInput

func (GetSfsTurboDuTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDuTasksTask)(nil)).Elem()
}

func (i GetSfsTurboDuTasksTaskArray) ToGetSfsTurboDuTasksTaskArrayOutput() GetSfsTurboDuTasksTaskArrayOutput {
	return i.ToGetSfsTurboDuTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetSfsTurboDuTasksTaskArray) ToGetSfsTurboDuTasksTaskArrayOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDuTasksTaskArrayOutput)
}

type GetSfsTurboDuTasksTaskOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDuTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksTask)(nil)).Elem()
}

func (o GetSfsTurboDuTasksTaskOutput) ToGetSfsTurboDuTasksTaskOutput() GetSfsTurboDuTasksTaskOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskOutput) ToGetSfsTurboDuTasksTaskOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskOutput {
	return o
}

// The start time of the DU task, in RFC3339 format.
func (o GetSfsTurboDuTasksTaskOutput) BeginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTask) string { return v.BeginTime }).(pulumi.StringOutput)
}

// The resource usages of a directory (including subdirectories).
func (o GetSfsTurboDuTasksTaskOutput) DirUsages() GetSfsTurboDuTasksTaskDirUsageArrayOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTask) []GetSfsTurboDuTasksTaskDirUsage { return v.DirUsages }).(GetSfsTurboDuTasksTaskDirUsageArrayOutput)
}

// The end time of the DU task, in RFC3339 format.
func (o GetSfsTurboDuTasksTaskOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTask) string { return v.EndTime }).(pulumi.StringOutput)
}

// The ID of the DU task.
func (o GetSfsTurboDuTasksTaskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTask) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the DU task.
func (o GetSfsTurboDuTasksTaskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTask) string { return v.Status }).(pulumi.StringOutput)
}

type GetSfsTurboDuTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDuTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDuTasksTask)(nil)).Elem()
}

func (o GetSfsTurboDuTasksTaskArrayOutput) ToGetSfsTurboDuTasksTaskArrayOutput() GetSfsTurboDuTasksTaskArrayOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskArrayOutput) ToGetSfsTurboDuTasksTaskArrayOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskArrayOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskArrayOutput) Index(i pulumi.IntInput) GetSfsTurboDuTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurboDuTasksTask {
		return vs[0].([]GetSfsTurboDuTasksTask)[vs[1].(int)]
	}).(GetSfsTurboDuTasksTaskOutput)
}

type GetSfsTurboDuTasksTaskDirUsage struct {
	// The total number of files in the directory.
	FileCounts []GetSfsTurboDuTasksTaskDirUsageFileCount `pulumi:"fileCounts"`
	// The error message.
	Message string `pulumi:"message"`
	// The full path to a legal directory in the file system.
	Path string `pulumi:"path"`
	// The used capacity, in byte.
	UsedCapacity int `pulumi:"usedCapacity"`
}

// GetSfsTurboDuTasksTaskDirUsageInput is an input type that accepts GetSfsTurboDuTasksTaskDirUsageArgs and GetSfsTurboDuTasksTaskDirUsageOutput values.
// You can construct a concrete instance of `GetSfsTurboDuTasksTaskDirUsageInput` via:
//
//	GetSfsTurboDuTasksTaskDirUsageArgs{...}
type GetSfsTurboDuTasksTaskDirUsageInput interface {
	pulumi.Input

	ToGetSfsTurboDuTasksTaskDirUsageOutput() GetSfsTurboDuTasksTaskDirUsageOutput
	ToGetSfsTurboDuTasksTaskDirUsageOutputWithContext(context.Context) GetSfsTurboDuTasksTaskDirUsageOutput
}

type GetSfsTurboDuTasksTaskDirUsageArgs struct {
	// The total number of files in the directory.
	FileCounts GetSfsTurboDuTasksTaskDirUsageFileCountArrayInput `pulumi:"fileCounts"`
	// The error message.
	Message pulumi.StringInput `pulumi:"message"`
	// The full path to a legal directory in the file system.
	Path pulumi.StringInput `pulumi:"path"`
	// The used capacity, in byte.
	UsedCapacity pulumi.IntInput `pulumi:"usedCapacity"`
}

func (GetSfsTurboDuTasksTaskDirUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsage)(nil)).Elem()
}

func (i GetSfsTurboDuTasksTaskDirUsageArgs) ToGetSfsTurboDuTasksTaskDirUsageOutput() GetSfsTurboDuTasksTaskDirUsageOutput {
	return i.ToGetSfsTurboDuTasksTaskDirUsageOutputWithContext(context.Background())
}

func (i GetSfsTurboDuTasksTaskDirUsageArgs) ToGetSfsTurboDuTasksTaskDirUsageOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDuTasksTaskDirUsageOutput)
}

// GetSfsTurboDuTasksTaskDirUsageArrayInput is an input type that accepts GetSfsTurboDuTasksTaskDirUsageArray and GetSfsTurboDuTasksTaskDirUsageArrayOutput values.
// You can construct a concrete instance of `GetSfsTurboDuTasksTaskDirUsageArrayInput` via:
//
//	GetSfsTurboDuTasksTaskDirUsageArray{ GetSfsTurboDuTasksTaskDirUsageArgs{...} }
type GetSfsTurboDuTasksTaskDirUsageArrayInput interface {
	pulumi.Input

	ToGetSfsTurboDuTasksTaskDirUsageArrayOutput() GetSfsTurboDuTasksTaskDirUsageArrayOutput
	ToGetSfsTurboDuTasksTaskDirUsageArrayOutputWithContext(context.Context) GetSfsTurboDuTasksTaskDirUsageArrayOutput
}

type GetSfsTurboDuTasksTaskDirUsageArray []GetSfsTurboDuTasksTaskDirUsageInput

func (GetSfsTurboDuTasksTaskDirUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDuTasksTaskDirUsage)(nil)).Elem()
}

func (i GetSfsTurboDuTasksTaskDirUsageArray) ToGetSfsTurboDuTasksTaskDirUsageArrayOutput() GetSfsTurboDuTasksTaskDirUsageArrayOutput {
	return i.ToGetSfsTurboDuTasksTaskDirUsageArrayOutputWithContext(context.Background())
}

func (i GetSfsTurboDuTasksTaskDirUsageArray) ToGetSfsTurboDuTasksTaskDirUsageArrayOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDuTasksTaskDirUsageArrayOutput)
}

type GetSfsTurboDuTasksTaskDirUsageOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDuTasksTaskDirUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsage)(nil)).Elem()
}

func (o GetSfsTurboDuTasksTaskDirUsageOutput) ToGetSfsTurboDuTasksTaskDirUsageOutput() GetSfsTurboDuTasksTaskDirUsageOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskDirUsageOutput) ToGetSfsTurboDuTasksTaskDirUsageOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageOutput {
	return o
}

// The total number of files in the directory.
func (o GetSfsTurboDuTasksTaskDirUsageOutput) FileCounts() GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsage) []GetSfsTurboDuTasksTaskDirUsageFileCount { return v.FileCounts }).(GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput)
}

// The error message.
func (o GetSfsTurboDuTasksTaskDirUsageOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsage) string { return v.Message }).(pulumi.StringOutput)
}

// The full path to a legal directory in the file system.
func (o GetSfsTurboDuTasksTaskDirUsageOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsage) string { return v.Path }).(pulumi.StringOutput)
}

// The used capacity, in byte.
func (o GetSfsTurboDuTasksTaskDirUsageOutput) UsedCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsage) int { return v.UsedCapacity }).(pulumi.IntOutput)
}

type GetSfsTurboDuTasksTaskDirUsageArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDuTasksTaskDirUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDuTasksTaskDirUsage)(nil)).Elem()
}

func (o GetSfsTurboDuTasksTaskDirUsageArrayOutput) ToGetSfsTurboDuTasksTaskDirUsageArrayOutput() GetSfsTurboDuTasksTaskDirUsageArrayOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskDirUsageArrayOutput) ToGetSfsTurboDuTasksTaskDirUsageArrayOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageArrayOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskDirUsageArrayOutput) Index(i pulumi.IntInput) GetSfsTurboDuTasksTaskDirUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurboDuTasksTaskDirUsage {
		return vs[0].([]GetSfsTurboDuTasksTaskDirUsage)[vs[1].(int)]
	}).(GetSfsTurboDuTasksTaskDirUsageOutput)
}

type GetSfsTurboDuTasksTaskDirUsageFileCount struct {
	// The number of block devices.
	Block int `pulumi:"block"`
	// The number of character devices.
	Char int `pulumi:"char"`
	// The number of directories.
	Dir int `pulumi:"dir"`
	// The number of pipe files.
	Pipe int `pulumi:"pipe"`
	// The number of common files.
	Regular int `pulumi:"regular"`
	// The number of sockets.
	Socket int `pulumi:"socket"`
	// The number of symbolic links.
	Symlink int `pulumi:"symlink"`
}

// GetSfsTurboDuTasksTaskDirUsageFileCountInput is an input type that accepts GetSfsTurboDuTasksTaskDirUsageFileCountArgs and GetSfsTurboDuTasksTaskDirUsageFileCountOutput values.
// You can construct a concrete instance of `GetSfsTurboDuTasksTaskDirUsageFileCountInput` via:
//
//	GetSfsTurboDuTasksTaskDirUsageFileCountArgs{...}
type GetSfsTurboDuTasksTaskDirUsageFileCountInput interface {
	pulumi.Input

	ToGetSfsTurboDuTasksTaskDirUsageFileCountOutput() GetSfsTurboDuTasksTaskDirUsageFileCountOutput
	ToGetSfsTurboDuTasksTaskDirUsageFileCountOutputWithContext(context.Context) GetSfsTurboDuTasksTaskDirUsageFileCountOutput
}

type GetSfsTurboDuTasksTaskDirUsageFileCountArgs struct {
	// The number of block devices.
	Block pulumi.IntInput `pulumi:"block"`
	// The number of character devices.
	Char pulumi.IntInput `pulumi:"char"`
	// The number of directories.
	Dir pulumi.IntInput `pulumi:"dir"`
	// The number of pipe files.
	Pipe pulumi.IntInput `pulumi:"pipe"`
	// The number of common files.
	Regular pulumi.IntInput `pulumi:"regular"`
	// The number of sockets.
	Socket pulumi.IntInput `pulumi:"socket"`
	// The number of symbolic links.
	Symlink pulumi.IntInput `pulumi:"symlink"`
}

func (GetSfsTurboDuTasksTaskDirUsageFileCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsageFileCount)(nil)).Elem()
}

func (i GetSfsTurboDuTasksTaskDirUsageFileCountArgs) ToGetSfsTurboDuTasksTaskDirUsageFileCountOutput() GetSfsTurboDuTasksTaskDirUsageFileCountOutput {
	return i.ToGetSfsTurboDuTasksTaskDirUsageFileCountOutputWithContext(context.Background())
}

func (i GetSfsTurboDuTasksTaskDirUsageFileCountArgs) ToGetSfsTurboDuTasksTaskDirUsageFileCountOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageFileCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDuTasksTaskDirUsageFileCountOutput)
}

// GetSfsTurboDuTasksTaskDirUsageFileCountArrayInput is an input type that accepts GetSfsTurboDuTasksTaskDirUsageFileCountArray and GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput values.
// You can construct a concrete instance of `GetSfsTurboDuTasksTaskDirUsageFileCountArrayInput` via:
//
//	GetSfsTurboDuTasksTaskDirUsageFileCountArray{ GetSfsTurboDuTasksTaskDirUsageFileCountArgs{...} }
type GetSfsTurboDuTasksTaskDirUsageFileCountArrayInput interface {
	pulumi.Input

	ToGetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput() GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput
	ToGetSfsTurboDuTasksTaskDirUsageFileCountArrayOutputWithContext(context.Context) GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput
}

type GetSfsTurboDuTasksTaskDirUsageFileCountArray []GetSfsTurboDuTasksTaskDirUsageFileCountInput

func (GetSfsTurboDuTasksTaskDirUsageFileCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDuTasksTaskDirUsageFileCount)(nil)).Elem()
}

func (i GetSfsTurboDuTasksTaskDirUsageFileCountArray) ToGetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput() GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput {
	return i.ToGetSfsTurboDuTasksTaskDirUsageFileCountArrayOutputWithContext(context.Background())
}

func (i GetSfsTurboDuTasksTaskDirUsageFileCountArray) ToGetSfsTurboDuTasksTaskDirUsageFileCountArrayOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput)
}

type GetSfsTurboDuTasksTaskDirUsageFileCountOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDuTasksTaskDirUsageFileCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsageFileCount)(nil)).Elem()
}

func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) ToGetSfsTurboDuTasksTaskDirUsageFileCountOutput() GetSfsTurboDuTasksTaskDirUsageFileCountOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) ToGetSfsTurboDuTasksTaskDirUsageFileCountOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageFileCountOutput {
	return o
}

// The number of block devices.
func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) Block() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsageFileCount) int { return v.Block }).(pulumi.IntOutput)
}

// The number of character devices.
func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) Char() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsageFileCount) int { return v.Char }).(pulumi.IntOutput)
}

// The number of directories.
func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) Dir() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsageFileCount) int { return v.Dir }).(pulumi.IntOutput)
}

// The number of pipe files.
func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) Pipe() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsageFileCount) int { return v.Pipe }).(pulumi.IntOutput)
}

// The number of common files.
func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) Regular() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsageFileCount) int { return v.Regular }).(pulumi.IntOutput)
}

// The number of sockets.
func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) Socket() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsageFileCount) int { return v.Socket }).(pulumi.IntOutput)
}

// The number of symbolic links.
func (o GetSfsTurboDuTasksTaskDirUsageFileCountOutput) Symlink() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksTaskDirUsageFileCount) int { return v.Symlink }).(pulumi.IntOutput)
}

type GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboDuTasksTaskDirUsageFileCount)(nil)).Elem()
}

func (o GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput) ToGetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput() GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput) ToGetSfsTurboDuTasksTaskDirUsageFileCountArrayOutputWithContext(ctx context.Context) GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput {
	return o
}

func (o GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput) Index(i pulumi.IntInput) GetSfsTurboDuTasksTaskDirUsageFileCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurboDuTasksTaskDirUsageFileCount {
		return vs[0].([]GetSfsTurboDuTasksTaskDirUsageFileCount)[vs[1].(int)]
	}).(GetSfsTurboDuTasksTaskDirUsageFileCountOutput)
}

type GetSfsTurboObsTargetsTarget struct {
	// The creation time of the OBS target.
	CreatedAt string `pulumi:"createdAt"`
	// The linkage directory name of the OBS target.
	FileSystemPath string `pulumi:"fileSystemPath"`
	// The ID of the OBS target.
	Id string `pulumi:"id"`
	// The detail of the OBS bucket.
	Obs []GetSfsTurboObsTargetsTargetOb `pulumi:"obs"`
	// The status of the OBS target.
	Status string `pulumi:"status"`
}

// GetSfsTurboObsTargetsTargetInput is an input type that accepts GetSfsTurboObsTargetsTargetArgs and GetSfsTurboObsTargetsTargetOutput values.
// You can construct a concrete instance of `GetSfsTurboObsTargetsTargetInput` via:
//
//	GetSfsTurboObsTargetsTargetArgs{...}
type GetSfsTurboObsTargetsTargetInput interface {
	pulumi.Input

	ToGetSfsTurboObsTargetsTargetOutput() GetSfsTurboObsTargetsTargetOutput
	ToGetSfsTurboObsTargetsTargetOutputWithContext(context.Context) GetSfsTurboObsTargetsTargetOutput
}

type GetSfsTurboObsTargetsTargetArgs struct {
	// The creation time of the OBS target.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The linkage directory name of the OBS target.
	FileSystemPath pulumi.StringInput `pulumi:"fileSystemPath"`
	// The ID of the OBS target.
	Id pulumi.StringInput `pulumi:"id"`
	// The detail of the OBS bucket.
	Obs GetSfsTurboObsTargetsTargetObArrayInput `pulumi:"obs"`
	// The status of the OBS target.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSfsTurboObsTargetsTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboObsTargetsTarget)(nil)).Elem()
}

func (i GetSfsTurboObsTargetsTargetArgs) ToGetSfsTurboObsTargetsTargetOutput() GetSfsTurboObsTargetsTargetOutput {
	return i.ToGetSfsTurboObsTargetsTargetOutputWithContext(context.Background())
}

func (i GetSfsTurboObsTargetsTargetArgs) ToGetSfsTurboObsTargetsTargetOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboObsTargetsTargetOutput)
}

// GetSfsTurboObsTargetsTargetArrayInput is an input type that accepts GetSfsTurboObsTargetsTargetArray and GetSfsTurboObsTargetsTargetArrayOutput values.
// You can construct a concrete instance of `GetSfsTurboObsTargetsTargetArrayInput` via:
//
//	GetSfsTurboObsTargetsTargetArray{ GetSfsTurboObsTargetsTargetArgs{...} }
type GetSfsTurboObsTargetsTargetArrayInput interface {
	pulumi.Input

	ToGetSfsTurboObsTargetsTargetArrayOutput() GetSfsTurboObsTargetsTargetArrayOutput
	ToGetSfsTurboObsTargetsTargetArrayOutputWithContext(context.Context) GetSfsTurboObsTargetsTargetArrayOutput
}

type GetSfsTurboObsTargetsTargetArray []GetSfsTurboObsTargetsTargetInput

func (GetSfsTurboObsTargetsTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboObsTargetsTarget)(nil)).Elem()
}

func (i GetSfsTurboObsTargetsTargetArray) ToGetSfsTurboObsTargetsTargetArrayOutput() GetSfsTurboObsTargetsTargetArrayOutput {
	return i.ToGetSfsTurboObsTargetsTargetArrayOutputWithContext(context.Background())
}

func (i GetSfsTurboObsTargetsTargetArray) ToGetSfsTurboObsTargetsTargetArrayOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboObsTargetsTargetArrayOutput)
}

type GetSfsTurboObsTargetsTargetOutput struct{ *pulumi.OutputState }

func (GetSfsTurboObsTargetsTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboObsTargetsTarget)(nil)).Elem()
}

func (o GetSfsTurboObsTargetsTargetOutput) ToGetSfsTurboObsTargetsTargetOutput() GetSfsTurboObsTargetsTargetOutput {
	return o
}

func (o GetSfsTurboObsTargetsTargetOutput) ToGetSfsTurboObsTargetsTargetOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetOutput {
	return o
}

// The creation time of the OBS target.
func (o GetSfsTurboObsTargetsTargetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboObsTargetsTarget) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The linkage directory name of the OBS target.
func (o GetSfsTurboObsTargetsTargetOutput) FileSystemPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboObsTargetsTarget) string { return v.FileSystemPath }).(pulumi.StringOutput)
}

// The ID of the OBS target.
func (o GetSfsTurboObsTargetsTargetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboObsTargetsTarget) string { return v.Id }).(pulumi.StringOutput)
}

// The detail of the OBS bucket.
func (o GetSfsTurboObsTargetsTargetOutput) Obs() GetSfsTurboObsTargetsTargetObArrayOutput {
	return o.ApplyT(func(v GetSfsTurboObsTargetsTarget) []GetSfsTurboObsTargetsTargetOb { return v.Obs }).(GetSfsTurboObsTargetsTargetObArrayOutput)
}

// The status of the OBS target.
func (o GetSfsTurboObsTargetsTargetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboObsTargetsTarget) string { return v.Status }).(pulumi.StringOutput)
}

type GetSfsTurboObsTargetsTargetArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurboObsTargetsTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboObsTargetsTarget)(nil)).Elem()
}

func (o GetSfsTurboObsTargetsTargetArrayOutput) ToGetSfsTurboObsTargetsTargetArrayOutput() GetSfsTurboObsTargetsTargetArrayOutput {
	return o
}

func (o GetSfsTurboObsTargetsTargetArrayOutput) ToGetSfsTurboObsTargetsTargetArrayOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetArrayOutput {
	return o
}

func (o GetSfsTurboObsTargetsTargetArrayOutput) Index(i pulumi.IntInput) GetSfsTurboObsTargetsTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurboObsTargetsTarget {
		return vs[0].([]GetSfsTurboObsTargetsTarget)[vs[1].(int)]
	}).(GetSfsTurboObsTargetsTargetOutput)
}

type GetSfsTurboObsTargetsTargetOb struct {
	// The name of the OBS bucket associated with the OBS target.
	Bucket string `pulumi:"bucket"`
	// The domain name of the region where the OBS bucket belongs.
	Endpoint string `pulumi:"endpoint"`
}

// GetSfsTurboObsTargetsTargetObInput is an input type that accepts GetSfsTurboObsTargetsTargetObArgs and GetSfsTurboObsTargetsTargetObOutput values.
// You can construct a concrete instance of `GetSfsTurboObsTargetsTargetObInput` via:
//
//	GetSfsTurboObsTargetsTargetObArgs{...}
type GetSfsTurboObsTargetsTargetObInput interface {
	pulumi.Input

	ToGetSfsTurboObsTargetsTargetObOutput() GetSfsTurboObsTargetsTargetObOutput
	ToGetSfsTurboObsTargetsTargetObOutputWithContext(context.Context) GetSfsTurboObsTargetsTargetObOutput
}

type GetSfsTurboObsTargetsTargetObArgs struct {
	// The name of the OBS bucket associated with the OBS target.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The domain name of the region where the OBS bucket belongs.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (GetSfsTurboObsTargetsTargetObArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboObsTargetsTargetOb)(nil)).Elem()
}

func (i GetSfsTurboObsTargetsTargetObArgs) ToGetSfsTurboObsTargetsTargetObOutput() GetSfsTurboObsTargetsTargetObOutput {
	return i.ToGetSfsTurboObsTargetsTargetObOutputWithContext(context.Background())
}

func (i GetSfsTurboObsTargetsTargetObArgs) ToGetSfsTurboObsTargetsTargetObOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetObOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboObsTargetsTargetObOutput)
}

// GetSfsTurboObsTargetsTargetObArrayInput is an input type that accepts GetSfsTurboObsTargetsTargetObArray and GetSfsTurboObsTargetsTargetObArrayOutput values.
// You can construct a concrete instance of `GetSfsTurboObsTargetsTargetObArrayInput` via:
//
//	GetSfsTurboObsTargetsTargetObArray{ GetSfsTurboObsTargetsTargetObArgs{...} }
type GetSfsTurboObsTargetsTargetObArrayInput interface {
	pulumi.Input

	ToGetSfsTurboObsTargetsTargetObArrayOutput() GetSfsTurboObsTargetsTargetObArrayOutput
	ToGetSfsTurboObsTargetsTargetObArrayOutputWithContext(context.Context) GetSfsTurboObsTargetsTargetObArrayOutput
}

type GetSfsTurboObsTargetsTargetObArray []GetSfsTurboObsTargetsTargetObInput

func (GetSfsTurboObsTargetsTargetObArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboObsTargetsTargetOb)(nil)).Elem()
}

func (i GetSfsTurboObsTargetsTargetObArray) ToGetSfsTurboObsTargetsTargetObArrayOutput() GetSfsTurboObsTargetsTargetObArrayOutput {
	return i.ToGetSfsTurboObsTargetsTargetObArrayOutputWithContext(context.Background())
}

func (i GetSfsTurboObsTargetsTargetObArray) ToGetSfsTurboObsTargetsTargetObArrayOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetObArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboObsTargetsTargetObArrayOutput)
}

type GetSfsTurboObsTargetsTargetObOutput struct{ *pulumi.OutputState }

func (GetSfsTurboObsTargetsTargetObOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboObsTargetsTargetOb)(nil)).Elem()
}

func (o GetSfsTurboObsTargetsTargetObOutput) ToGetSfsTurboObsTargetsTargetObOutput() GetSfsTurboObsTargetsTargetObOutput {
	return o
}

func (o GetSfsTurboObsTargetsTargetObOutput) ToGetSfsTurboObsTargetsTargetObOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetObOutput {
	return o
}

// The name of the OBS bucket associated with the OBS target.
func (o GetSfsTurboObsTargetsTargetObOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboObsTargetsTargetOb) string { return v.Bucket }).(pulumi.StringOutput)
}

// The domain name of the region where the OBS bucket belongs.
func (o GetSfsTurboObsTargetsTargetObOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboObsTargetsTargetOb) string { return v.Endpoint }).(pulumi.StringOutput)
}

type GetSfsTurboObsTargetsTargetObArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurboObsTargetsTargetObArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboObsTargetsTargetOb)(nil)).Elem()
}

func (o GetSfsTurboObsTargetsTargetObArrayOutput) ToGetSfsTurboObsTargetsTargetObArrayOutput() GetSfsTurboObsTargetsTargetObArrayOutput {
	return o
}

func (o GetSfsTurboObsTargetsTargetObArrayOutput) ToGetSfsTurboObsTargetsTargetObArrayOutputWithContext(ctx context.Context) GetSfsTurboObsTargetsTargetObArrayOutput {
	return o
}

func (o GetSfsTurboObsTargetsTargetObArrayOutput) Index(i pulumi.IntInput) GetSfsTurboObsTargetsTargetObOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurboObsTargetsTargetOb {
		return vs[0].([]GetSfsTurboObsTargetsTargetOb)[vs[1].(int)]
	}).(GetSfsTurboObsTargetsTargetObOutput)
}

type GetSfsTurboPermRulesRule struct {
	// The ID of the permission rule.
	Id string `pulumi:"id"`
	// The IP address or IP address range of the authorized object.
	IpCidr string `pulumi:"ipCidr"`
	// The read and write permission of the authorized object.
	RwType string `pulumi:"rwType"`
	// The file system access permission granted to the user of the authorized object.
	UserType string `pulumi:"userType"`
}

// GetSfsTurboPermRulesRuleInput is an input type that accepts GetSfsTurboPermRulesRuleArgs and GetSfsTurboPermRulesRuleOutput values.
// You can construct a concrete instance of `GetSfsTurboPermRulesRuleInput` via:
//
//	GetSfsTurboPermRulesRuleArgs{...}
type GetSfsTurboPermRulesRuleInput interface {
	pulumi.Input

	ToGetSfsTurboPermRulesRuleOutput() GetSfsTurboPermRulesRuleOutput
	ToGetSfsTurboPermRulesRuleOutputWithContext(context.Context) GetSfsTurboPermRulesRuleOutput
}

type GetSfsTurboPermRulesRuleArgs struct {
	// The ID of the permission rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address or IP address range of the authorized object.
	IpCidr pulumi.StringInput `pulumi:"ipCidr"`
	// The read and write permission of the authorized object.
	RwType pulumi.StringInput `pulumi:"rwType"`
	// The file system access permission granted to the user of the authorized object.
	UserType pulumi.StringInput `pulumi:"userType"`
}

func (GetSfsTurboPermRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboPermRulesRule)(nil)).Elem()
}

func (i GetSfsTurboPermRulesRuleArgs) ToGetSfsTurboPermRulesRuleOutput() GetSfsTurboPermRulesRuleOutput {
	return i.ToGetSfsTurboPermRulesRuleOutputWithContext(context.Background())
}

func (i GetSfsTurboPermRulesRuleArgs) ToGetSfsTurboPermRulesRuleOutputWithContext(ctx context.Context) GetSfsTurboPermRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboPermRulesRuleOutput)
}

// GetSfsTurboPermRulesRuleArrayInput is an input type that accepts GetSfsTurboPermRulesRuleArray and GetSfsTurboPermRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetSfsTurboPermRulesRuleArrayInput` via:
//
//	GetSfsTurboPermRulesRuleArray{ GetSfsTurboPermRulesRuleArgs{...} }
type GetSfsTurboPermRulesRuleArrayInput interface {
	pulumi.Input

	ToGetSfsTurboPermRulesRuleArrayOutput() GetSfsTurboPermRulesRuleArrayOutput
	ToGetSfsTurboPermRulesRuleArrayOutputWithContext(context.Context) GetSfsTurboPermRulesRuleArrayOutput
}

type GetSfsTurboPermRulesRuleArray []GetSfsTurboPermRulesRuleInput

func (GetSfsTurboPermRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboPermRulesRule)(nil)).Elem()
}

func (i GetSfsTurboPermRulesRuleArray) ToGetSfsTurboPermRulesRuleArrayOutput() GetSfsTurboPermRulesRuleArrayOutput {
	return i.ToGetSfsTurboPermRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetSfsTurboPermRulesRuleArray) ToGetSfsTurboPermRulesRuleArrayOutputWithContext(ctx context.Context) GetSfsTurboPermRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurboPermRulesRuleArrayOutput)
}

type GetSfsTurboPermRulesRuleOutput struct{ *pulumi.OutputState }

func (GetSfsTurboPermRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboPermRulesRule)(nil)).Elem()
}

func (o GetSfsTurboPermRulesRuleOutput) ToGetSfsTurboPermRulesRuleOutput() GetSfsTurboPermRulesRuleOutput {
	return o
}

func (o GetSfsTurboPermRulesRuleOutput) ToGetSfsTurboPermRulesRuleOutputWithContext(ctx context.Context) GetSfsTurboPermRulesRuleOutput {
	return o
}

// The ID of the permission rule.
func (o GetSfsTurboPermRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address or IP address range of the authorized object.
func (o GetSfsTurboPermRulesRuleOutput) IpCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesRule) string { return v.IpCidr }).(pulumi.StringOutput)
}

// The read and write permission of the authorized object.
func (o GetSfsTurboPermRulesRuleOutput) RwType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesRule) string { return v.RwType }).(pulumi.StringOutput)
}

// The file system access permission granted to the user of the authorized object.
func (o GetSfsTurboPermRulesRuleOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesRule) string { return v.UserType }).(pulumi.StringOutput)
}

type GetSfsTurboPermRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurboPermRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurboPermRulesRule)(nil)).Elem()
}

func (o GetSfsTurboPermRulesRuleArrayOutput) ToGetSfsTurboPermRulesRuleArrayOutput() GetSfsTurboPermRulesRuleArrayOutput {
	return o
}

func (o GetSfsTurboPermRulesRuleArrayOutput) ToGetSfsTurboPermRulesRuleArrayOutputWithContext(ctx context.Context) GetSfsTurboPermRulesRuleArrayOutput {
	return o
}

func (o GetSfsTurboPermRulesRuleArrayOutput) Index(i pulumi.IntInput) GetSfsTurboPermRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurboPermRulesRule {
		return vs[0].([]GetSfsTurboPermRulesRule)[vs[1].(int)]
	}).(GetSfsTurboPermRulesRuleOutput)
}

type GetSfsTurbosTurbo struct {
	AvailabilityZone    string `pulumi:"availabilityZone"`
	AvailableCapacity   string `pulumi:"availableCapacity"`
	CryptKeyId          string `pulumi:"cryptKeyId"`
	Enhanced            bool   `pulumi:"enhanced"`
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	ExportLocation      string `pulumi:"exportLocation"`
	Id                  string `pulumi:"id"`
	Name                string `pulumi:"name"`
	SecurityGroupId     string `pulumi:"securityGroupId"`
	ShareProto          string `pulumi:"shareProto"`
	ShareType           string `pulumi:"shareType"`
	Size                int    `pulumi:"size"`
	SubnetId            string `pulumi:"subnetId"`
	Version             string `pulumi:"version"`
	VpcId               string `pulumi:"vpcId"`
}

// GetSfsTurbosTurboInput is an input type that accepts GetSfsTurbosTurboArgs and GetSfsTurbosTurboOutput values.
// You can construct a concrete instance of `GetSfsTurbosTurboInput` via:
//
//	GetSfsTurbosTurboArgs{...}
type GetSfsTurbosTurboInput interface {
	pulumi.Input

	ToGetSfsTurbosTurboOutput() GetSfsTurbosTurboOutput
	ToGetSfsTurbosTurboOutputWithContext(context.Context) GetSfsTurbosTurboOutput
}

type GetSfsTurbosTurboArgs struct {
	AvailabilityZone    pulumi.StringInput `pulumi:"availabilityZone"`
	AvailableCapacity   pulumi.StringInput `pulumi:"availableCapacity"`
	CryptKeyId          pulumi.StringInput `pulumi:"cryptKeyId"`
	Enhanced            pulumi.BoolInput   `pulumi:"enhanced"`
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	ExportLocation      pulumi.StringInput `pulumi:"exportLocation"`
	Id                  pulumi.StringInput `pulumi:"id"`
	Name                pulumi.StringInput `pulumi:"name"`
	SecurityGroupId     pulumi.StringInput `pulumi:"securityGroupId"`
	ShareProto          pulumi.StringInput `pulumi:"shareProto"`
	ShareType           pulumi.StringInput `pulumi:"shareType"`
	Size                pulumi.IntInput    `pulumi:"size"`
	SubnetId            pulumi.StringInput `pulumi:"subnetId"`
	Version             pulumi.StringInput `pulumi:"version"`
	VpcId               pulumi.StringInput `pulumi:"vpcId"`
}

func (GetSfsTurbosTurboArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurbosTurbo)(nil)).Elem()
}

func (i GetSfsTurbosTurboArgs) ToGetSfsTurbosTurboOutput() GetSfsTurbosTurboOutput {
	return i.ToGetSfsTurbosTurboOutputWithContext(context.Background())
}

func (i GetSfsTurbosTurboArgs) ToGetSfsTurbosTurboOutputWithContext(ctx context.Context) GetSfsTurbosTurboOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurbosTurboOutput)
}

// GetSfsTurbosTurboArrayInput is an input type that accepts GetSfsTurbosTurboArray and GetSfsTurbosTurboArrayOutput values.
// You can construct a concrete instance of `GetSfsTurbosTurboArrayInput` via:
//
//	GetSfsTurbosTurboArray{ GetSfsTurbosTurboArgs{...} }
type GetSfsTurbosTurboArrayInput interface {
	pulumi.Input

	ToGetSfsTurbosTurboArrayOutput() GetSfsTurbosTurboArrayOutput
	ToGetSfsTurbosTurboArrayOutputWithContext(context.Context) GetSfsTurbosTurboArrayOutput
}

type GetSfsTurbosTurboArray []GetSfsTurbosTurboInput

func (GetSfsTurbosTurboArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurbosTurbo)(nil)).Elem()
}

func (i GetSfsTurbosTurboArray) ToGetSfsTurbosTurboArrayOutput() GetSfsTurbosTurboArrayOutput {
	return i.ToGetSfsTurbosTurboArrayOutputWithContext(context.Background())
}

func (i GetSfsTurbosTurboArray) ToGetSfsTurbosTurboArrayOutputWithContext(ctx context.Context) GetSfsTurbosTurboArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSfsTurbosTurboArrayOutput)
}

type GetSfsTurbosTurboOutput struct{ *pulumi.OutputState }

func (GetSfsTurbosTurboOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurbosTurbo)(nil)).Elem()
}

func (o GetSfsTurbosTurboOutput) ToGetSfsTurbosTurboOutput() GetSfsTurbosTurboOutput {
	return o
}

func (o GetSfsTurbosTurboOutput) ToGetSfsTurbosTurboOutputWithContext(ctx context.Context) GetSfsTurbosTurboOutput {
	return o
}

func (o GetSfsTurbosTurboOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) AvailableCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.AvailableCapacity }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) CryptKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.CryptKeyId }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) Enhanced() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) bool { return v.Enhanced }).(pulumi.BoolOutput)
}

func (o GetSfsTurbosTurboOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) ExportLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.ExportLocation }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) ShareProto() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.ShareProto }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.ShareType }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetSfsTurbosTurboOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.Version }).(pulumi.StringOutput)
}

func (o GetSfsTurbosTurboOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosTurbo) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetSfsTurbosTurboArrayOutput struct{ *pulumi.OutputState }

func (GetSfsTurbosTurboArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSfsTurbosTurbo)(nil)).Elem()
}

func (o GetSfsTurbosTurboArrayOutput) ToGetSfsTurbosTurboArrayOutput() GetSfsTurbosTurboArrayOutput {
	return o
}

func (o GetSfsTurbosTurboArrayOutput) ToGetSfsTurbosTurboArrayOutputWithContext(ctx context.Context) GetSfsTurbosTurboArrayOutput {
	return o
}

func (o GetSfsTurbosTurboArrayOutput) Index(i pulumi.IntInput) GetSfsTurbosTurboOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSfsTurbosTurbo {
		return vs[0].([]GetSfsTurbosTurbo)[vs[1].(int)]
	}).(GetSfsTurbosTurboOutput)
}

type GetVpcAddressGroupsAddressGroup struct {
	// IP address sets in an IP address group.
	Addresses []string `pulumi:"addresses"`
	// Time when the IP address group is created.
	CreatedAt string `pulumi:"createdAt"`
	// The supplementary information about the IP address group.
	Description string `pulumi:"description"`
	// Enterprise project ID.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// IP address group ID, which uniquely identifies the IP address group.
	Id string `pulumi:"id"`
	// IP addresses and their remarks in an IP address group.
	IpExtraSets []GetVpcAddressGroupsAddressGroupIpExtraSet `pulumi:"ipExtraSets"`
	// Whether it is an IPv4 or IPv6 address group.
	IpVersion int `pulumi:"ipVersion"`
	// Maximum number of entries in an address group,
	MaxCapacity int `pulumi:"maxCapacity"`
	// IP address group name.
	Name string `pulumi:"name"`
	// The status of IP address group.
	Status string `pulumi:"status"`
	// The status details of IP address group.
	StatusMessage string `pulumi:"statusMessage"`
	// Time when the IP address group was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetVpcAddressGroupsAddressGroupInput is an input type that accepts GetVpcAddressGroupsAddressGroupArgs and GetVpcAddressGroupsAddressGroupOutput values.
// You can construct a concrete instance of `GetVpcAddressGroupsAddressGroupInput` via:
//
//	GetVpcAddressGroupsAddressGroupArgs{...}
type GetVpcAddressGroupsAddressGroupInput interface {
	pulumi.Input

	ToGetVpcAddressGroupsAddressGroupOutput() GetVpcAddressGroupsAddressGroupOutput
	ToGetVpcAddressGroupsAddressGroupOutputWithContext(context.Context) GetVpcAddressGroupsAddressGroupOutput
}

type GetVpcAddressGroupsAddressGroupArgs struct {
	// IP address sets in an IP address group.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// Time when the IP address group is created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The supplementary information about the IP address group.
	Description pulumi.StringInput `pulumi:"description"`
	// Enterprise project ID.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// IP address group ID, which uniquely identifies the IP address group.
	Id pulumi.StringInput `pulumi:"id"`
	// IP addresses and their remarks in an IP address group.
	IpExtraSets GetVpcAddressGroupsAddressGroupIpExtraSetArrayInput `pulumi:"ipExtraSets"`
	// Whether it is an IPv4 or IPv6 address group.
	IpVersion pulumi.IntInput `pulumi:"ipVersion"`
	// Maximum number of entries in an address group,
	MaxCapacity pulumi.IntInput `pulumi:"maxCapacity"`
	// IP address group name.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of IP address group.
	Status pulumi.StringInput `pulumi:"status"`
	// The status details of IP address group.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
	// Time when the IP address group was last updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetVpcAddressGroupsAddressGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAddressGroupsAddressGroup)(nil)).Elem()
}

func (i GetVpcAddressGroupsAddressGroupArgs) ToGetVpcAddressGroupsAddressGroupOutput() GetVpcAddressGroupsAddressGroupOutput {
	return i.ToGetVpcAddressGroupsAddressGroupOutputWithContext(context.Background())
}

func (i GetVpcAddressGroupsAddressGroupArgs) ToGetVpcAddressGroupsAddressGroupOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAddressGroupsAddressGroupOutput)
}

// GetVpcAddressGroupsAddressGroupArrayInput is an input type that accepts GetVpcAddressGroupsAddressGroupArray and GetVpcAddressGroupsAddressGroupArrayOutput values.
// You can construct a concrete instance of `GetVpcAddressGroupsAddressGroupArrayInput` via:
//
//	GetVpcAddressGroupsAddressGroupArray{ GetVpcAddressGroupsAddressGroupArgs{...} }
type GetVpcAddressGroupsAddressGroupArrayInput interface {
	pulumi.Input

	ToGetVpcAddressGroupsAddressGroupArrayOutput() GetVpcAddressGroupsAddressGroupArrayOutput
	ToGetVpcAddressGroupsAddressGroupArrayOutputWithContext(context.Context) GetVpcAddressGroupsAddressGroupArrayOutput
}

type GetVpcAddressGroupsAddressGroupArray []GetVpcAddressGroupsAddressGroupInput

func (GetVpcAddressGroupsAddressGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAddressGroupsAddressGroup)(nil)).Elem()
}

func (i GetVpcAddressGroupsAddressGroupArray) ToGetVpcAddressGroupsAddressGroupArrayOutput() GetVpcAddressGroupsAddressGroupArrayOutput {
	return i.ToGetVpcAddressGroupsAddressGroupArrayOutputWithContext(context.Background())
}

func (i GetVpcAddressGroupsAddressGroupArray) ToGetVpcAddressGroupsAddressGroupArrayOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAddressGroupsAddressGroupArrayOutput)
}

type GetVpcAddressGroupsAddressGroupOutput struct{ *pulumi.OutputState }

func (GetVpcAddressGroupsAddressGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAddressGroupsAddressGroup)(nil)).Elem()
}

func (o GetVpcAddressGroupsAddressGroupOutput) ToGetVpcAddressGroupsAddressGroupOutput() GetVpcAddressGroupsAddressGroupOutput {
	return o
}

func (o GetVpcAddressGroupsAddressGroupOutput) ToGetVpcAddressGroupsAddressGroupOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupOutput {
	return o
}

// IP address sets in an IP address group.
func (o GetVpcAddressGroupsAddressGroupOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Time when the IP address group is created.
func (o GetVpcAddressGroupsAddressGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The supplementary information about the IP address group.
func (o GetVpcAddressGroupsAddressGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.Description }).(pulumi.StringOutput)
}

// Enterprise project ID.
func (o GetVpcAddressGroupsAddressGroupOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// IP address group ID, which uniquely identifies the IP address group.
func (o GetVpcAddressGroupsAddressGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.Id }).(pulumi.StringOutput)
}

// IP addresses and their remarks in an IP address group.
func (o GetVpcAddressGroupsAddressGroupOutput) IpExtraSets() GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) []GetVpcAddressGroupsAddressGroupIpExtraSet {
		return v.IpExtraSets
	}).(GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput)
}

// Whether it is an IPv4 or IPv6 address group.
func (o GetVpcAddressGroupsAddressGroupOutput) IpVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) int { return v.IpVersion }).(pulumi.IntOutput)
}

// Maximum number of entries in an address group,
func (o GetVpcAddressGroupsAddressGroupOutput) MaxCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) int { return v.MaxCapacity }).(pulumi.IntOutput)
}

// IP address group name.
func (o GetVpcAddressGroupsAddressGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The status of IP address group.
func (o GetVpcAddressGroupsAddressGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The status details of IP address group.
func (o GetVpcAddressGroupsAddressGroupOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Time when the IP address group was last updated.
func (o GetVpcAddressGroupsAddressGroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroup) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetVpcAddressGroupsAddressGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVpcAddressGroupsAddressGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAddressGroupsAddressGroup)(nil)).Elem()
}

func (o GetVpcAddressGroupsAddressGroupArrayOutput) ToGetVpcAddressGroupsAddressGroupArrayOutput() GetVpcAddressGroupsAddressGroupArrayOutput {
	return o
}

func (o GetVpcAddressGroupsAddressGroupArrayOutput) ToGetVpcAddressGroupsAddressGroupArrayOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupArrayOutput {
	return o
}

func (o GetVpcAddressGroupsAddressGroupArrayOutput) Index(i pulumi.IntInput) GetVpcAddressGroupsAddressGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcAddressGroupsAddressGroup {
		return vs[0].([]GetVpcAddressGroupsAddressGroup)[vs[1].(int)]
	}).(GetVpcAddressGroupsAddressGroupOutput)
}

type GetVpcAddressGroupsAddressGroupIpExtraSet struct {
	// An IP address, IP address range, or CIDR block.
	Ip string `pulumi:"ip"`
	// Provides supplementary information about the IP address, IP address range, or CIDR block.
	Remarks string `pulumi:"remarks"`
}

// GetVpcAddressGroupsAddressGroupIpExtraSetInput is an input type that accepts GetVpcAddressGroupsAddressGroupIpExtraSetArgs and GetVpcAddressGroupsAddressGroupIpExtraSetOutput values.
// You can construct a concrete instance of `GetVpcAddressGroupsAddressGroupIpExtraSetInput` via:
//
//	GetVpcAddressGroupsAddressGroupIpExtraSetArgs{...}
type GetVpcAddressGroupsAddressGroupIpExtraSetInput interface {
	pulumi.Input

	ToGetVpcAddressGroupsAddressGroupIpExtraSetOutput() GetVpcAddressGroupsAddressGroupIpExtraSetOutput
	ToGetVpcAddressGroupsAddressGroupIpExtraSetOutputWithContext(context.Context) GetVpcAddressGroupsAddressGroupIpExtraSetOutput
}

type GetVpcAddressGroupsAddressGroupIpExtraSetArgs struct {
	// An IP address, IP address range, or CIDR block.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Provides supplementary information about the IP address, IP address range, or CIDR block.
	Remarks pulumi.StringInput `pulumi:"remarks"`
}

func (GetVpcAddressGroupsAddressGroupIpExtraSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAddressGroupsAddressGroupIpExtraSet)(nil)).Elem()
}

func (i GetVpcAddressGroupsAddressGroupIpExtraSetArgs) ToGetVpcAddressGroupsAddressGroupIpExtraSetOutput() GetVpcAddressGroupsAddressGroupIpExtraSetOutput {
	return i.ToGetVpcAddressGroupsAddressGroupIpExtraSetOutputWithContext(context.Background())
}

func (i GetVpcAddressGroupsAddressGroupIpExtraSetArgs) ToGetVpcAddressGroupsAddressGroupIpExtraSetOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupIpExtraSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAddressGroupsAddressGroupIpExtraSetOutput)
}

// GetVpcAddressGroupsAddressGroupIpExtraSetArrayInput is an input type that accepts GetVpcAddressGroupsAddressGroupIpExtraSetArray and GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput values.
// You can construct a concrete instance of `GetVpcAddressGroupsAddressGroupIpExtraSetArrayInput` via:
//
//	GetVpcAddressGroupsAddressGroupIpExtraSetArray{ GetVpcAddressGroupsAddressGroupIpExtraSetArgs{...} }
type GetVpcAddressGroupsAddressGroupIpExtraSetArrayInput interface {
	pulumi.Input

	ToGetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput() GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput
	ToGetVpcAddressGroupsAddressGroupIpExtraSetArrayOutputWithContext(context.Context) GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput
}

type GetVpcAddressGroupsAddressGroupIpExtraSetArray []GetVpcAddressGroupsAddressGroupIpExtraSetInput

func (GetVpcAddressGroupsAddressGroupIpExtraSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAddressGroupsAddressGroupIpExtraSet)(nil)).Elem()
}

func (i GetVpcAddressGroupsAddressGroupIpExtraSetArray) ToGetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput() GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput {
	return i.ToGetVpcAddressGroupsAddressGroupIpExtraSetArrayOutputWithContext(context.Background())
}

func (i GetVpcAddressGroupsAddressGroupIpExtraSetArray) ToGetVpcAddressGroupsAddressGroupIpExtraSetArrayOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput)
}

type GetVpcAddressGroupsAddressGroupIpExtraSetOutput struct{ *pulumi.OutputState }

func (GetVpcAddressGroupsAddressGroupIpExtraSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAddressGroupsAddressGroupIpExtraSet)(nil)).Elem()
}

func (o GetVpcAddressGroupsAddressGroupIpExtraSetOutput) ToGetVpcAddressGroupsAddressGroupIpExtraSetOutput() GetVpcAddressGroupsAddressGroupIpExtraSetOutput {
	return o
}

func (o GetVpcAddressGroupsAddressGroupIpExtraSetOutput) ToGetVpcAddressGroupsAddressGroupIpExtraSetOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupIpExtraSetOutput {
	return o
}

// An IP address, IP address range, or CIDR block.
func (o GetVpcAddressGroupsAddressGroupIpExtraSetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroupIpExtraSet) string { return v.Ip }).(pulumi.StringOutput)
}

// Provides supplementary information about the IP address, IP address range, or CIDR block.
func (o GetVpcAddressGroupsAddressGroupIpExtraSetOutput) Remarks() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAddressGroupsAddressGroupIpExtraSet) string { return v.Remarks }).(pulumi.StringOutput)
}

type GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput struct{ *pulumi.OutputState }

func (GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAddressGroupsAddressGroupIpExtraSet)(nil)).Elem()
}

func (o GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput) ToGetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput() GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput {
	return o
}

func (o GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput) ToGetVpcAddressGroupsAddressGroupIpExtraSetArrayOutputWithContext(ctx context.Context) GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput {
	return o
}

func (o GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput) Index(i pulumi.IntInput) GetVpcAddressGroupsAddressGroupIpExtraSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcAddressGroupsAddressGroupIpExtraSet {
		return vs[0].([]GetVpcAddressGroupsAddressGroupIpExtraSet)[vs[1].(int)]
	}).(GetVpcAddressGroupsAddressGroupIpExtraSetOutput)
}

type GetVpcBandwidthPublicip struct {
	Id        string `pulumi:"id"`
	IpAddress string `pulumi:"ipAddress"`
	IpVersion int    `pulumi:"ipVersion"`
	Type      string `pulumi:"type"`
}

// GetVpcBandwidthPublicipInput is an input type that accepts GetVpcBandwidthPublicipArgs and GetVpcBandwidthPublicipOutput values.
// You can construct a concrete instance of `GetVpcBandwidthPublicipInput` via:
//
//	GetVpcBandwidthPublicipArgs{...}
type GetVpcBandwidthPublicipInput interface {
	pulumi.Input

	ToGetVpcBandwidthPublicipOutput() GetVpcBandwidthPublicipOutput
	ToGetVpcBandwidthPublicipOutputWithContext(context.Context) GetVpcBandwidthPublicipOutput
}

type GetVpcBandwidthPublicipArgs struct {
	Id        pulumi.StringInput `pulumi:"id"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	IpVersion pulumi.IntInput    `pulumi:"ipVersion"`
	Type      pulumi.StringInput `pulumi:"type"`
}

func (GetVpcBandwidthPublicipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcBandwidthPublicip)(nil)).Elem()
}

func (i GetVpcBandwidthPublicipArgs) ToGetVpcBandwidthPublicipOutput() GetVpcBandwidthPublicipOutput {
	return i.ToGetVpcBandwidthPublicipOutputWithContext(context.Background())
}

func (i GetVpcBandwidthPublicipArgs) ToGetVpcBandwidthPublicipOutputWithContext(ctx context.Context) GetVpcBandwidthPublicipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcBandwidthPublicipOutput)
}

// GetVpcBandwidthPublicipArrayInput is an input type that accepts GetVpcBandwidthPublicipArray and GetVpcBandwidthPublicipArrayOutput values.
// You can construct a concrete instance of `GetVpcBandwidthPublicipArrayInput` via:
//
//	GetVpcBandwidthPublicipArray{ GetVpcBandwidthPublicipArgs{...} }
type GetVpcBandwidthPublicipArrayInput interface {
	pulumi.Input

	ToGetVpcBandwidthPublicipArrayOutput() GetVpcBandwidthPublicipArrayOutput
	ToGetVpcBandwidthPublicipArrayOutputWithContext(context.Context) GetVpcBandwidthPublicipArrayOutput
}

type GetVpcBandwidthPublicipArray []GetVpcBandwidthPublicipInput

func (GetVpcBandwidthPublicipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcBandwidthPublicip)(nil)).Elem()
}

func (i GetVpcBandwidthPublicipArray) ToGetVpcBandwidthPublicipArrayOutput() GetVpcBandwidthPublicipArrayOutput {
	return i.ToGetVpcBandwidthPublicipArrayOutputWithContext(context.Background())
}

func (i GetVpcBandwidthPublicipArray) ToGetVpcBandwidthPublicipArrayOutputWithContext(ctx context.Context) GetVpcBandwidthPublicipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcBandwidthPublicipArrayOutput)
}

type GetVpcBandwidthPublicipOutput struct{ *pulumi.OutputState }

func (GetVpcBandwidthPublicipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcBandwidthPublicip)(nil)).Elem()
}

func (o GetVpcBandwidthPublicipOutput) ToGetVpcBandwidthPublicipOutput() GetVpcBandwidthPublicipOutput {
	return o
}

func (o GetVpcBandwidthPublicipOutput) ToGetVpcBandwidthPublicipOutputWithContext(ctx context.Context) GetVpcBandwidthPublicipOutput {
	return o
}

func (o GetVpcBandwidthPublicipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcBandwidthPublicip) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcBandwidthPublicipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcBandwidthPublicip) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetVpcBandwidthPublicipOutput) IpVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcBandwidthPublicip) int { return v.IpVersion }).(pulumi.IntOutput)
}

func (o GetVpcBandwidthPublicipOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcBandwidthPublicip) string { return v.Type }).(pulumi.StringOutput)
}

type GetVpcBandwidthPublicipArrayOutput struct{ *pulumi.OutputState }

func (GetVpcBandwidthPublicipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcBandwidthPublicip)(nil)).Elem()
}

func (o GetVpcBandwidthPublicipArrayOutput) ToGetVpcBandwidthPublicipArrayOutput() GetVpcBandwidthPublicipArrayOutput {
	return o
}

func (o GetVpcBandwidthPublicipArrayOutput) ToGetVpcBandwidthPublicipArrayOutputWithContext(ctx context.Context) GetVpcBandwidthPublicipArrayOutput {
	return o
}

func (o GetVpcBandwidthPublicipArrayOutput) Index(i pulumi.IntInput) GetVpcBandwidthPublicipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcBandwidthPublicip {
		return vs[0].([]GetVpcBandwidthPublicip)[vs[1].(int)]
	}).(GetVpcBandwidthPublicipOutput)
}

type GetVpcEipsEip struct {
	BandwidthId         string            `pulumi:"bandwidthId"`
	BandwidthName       string            `pulumi:"bandwidthName"`
	BandwidthShareType  string            `pulumi:"bandwidthShareType"`
	BandwidthSize       int               `pulumi:"bandwidthSize"`
	CreatedAt           string            `pulumi:"createdAt"`
	EnterpriseProjectId string            `pulumi:"enterpriseProjectId"`
	Id                  string            `pulumi:"id"`
	IpVersion           int               `pulumi:"ipVersion"`
	Name                string            `pulumi:"name"`
	PortId              string            `pulumi:"portId"`
	PrivateIp           string            `pulumi:"privateIp"`
	PublicIp            string            `pulumi:"publicIp"`
	PublicIpv6          string            `pulumi:"publicIpv6"`
	Status              string            `pulumi:"status"`
	Tags                map[string]string `pulumi:"tags"`
	Type                string            `pulumi:"type"`
}

// GetVpcEipsEipInput is an input type that accepts GetVpcEipsEipArgs and GetVpcEipsEipOutput values.
// You can construct a concrete instance of `GetVpcEipsEipInput` via:
//
//	GetVpcEipsEipArgs{...}
type GetVpcEipsEipInput interface {
	pulumi.Input

	ToGetVpcEipsEipOutput() GetVpcEipsEipOutput
	ToGetVpcEipsEipOutputWithContext(context.Context) GetVpcEipsEipOutput
}

type GetVpcEipsEipArgs struct {
	BandwidthId         pulumi.StringInput    `pulumi:"bandwidthId"`
	BandwidthName       pulumi.StringInput    `pulumi:"bandwidthName"`
	BandwidthShareType  pulumi.StringInput    `pulumi:"bandwidthShareType"`
	BandwidthSize       pulumi.IntInput       `pulumi:"bandwidthSize"`
	CreatedAt           pulumi.StringInput    `pulumi:"createdAt"`
	EnterpriseProjectId pulumi.StringInput    `pulumi:"enterpriseProjectId"`
	Id                  pulumi.StringInput    `pulumi:"id"`
	IpVersion           pulumi.IntInput       `pulumi:"ipVersion"`
	Name                pulumi.StringInput    `pulumi:"name"`
	PortId              pulumi.StringInput    `pulumi:"portId"`
	PrivateIp           pulumi.StringInput    `pulumi:"privateIp"`
	PublicIp            pulumi.StringInput    `pulumi:"publicIp"`
	PublicIpv6          pulumi.StringInput    `pulumi:"publicIpv6"`
	Status              pulumi.StringInput    `pulumi:"status"`
	Tags                pulumi.StringMapInput `pulumi:"tags"`
	Type                pulumi.StringInput    `pulumi:"type"`
}

func (GetVpcEipsEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEipsEip)(nil)).Elem()
}

func (i GetVpcEipsEipArgs) ToGetVpcEipsEipOutput() GetVpcEipsEipOutput {
	return i.ToGetVpcEipsEipOutputWithContext(context.Background())
}

func (i GetVpcEipsEipArgs) ToGetVpcEipsEipOutputWithContext(ctx context.Context) GetVpcEipsEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEipsEipOutput)
}

// GetVpcEipsEipArrayInput is an input type that accepts GetVpcEipsEipArray and GetVpcEipsEipArrayOutput values.
// You can construct a concrete instance of `GetVpcEipsEipArrayInput` via:
//
//	GetVpcEipsEipArray{ GetVpcEipsEipArgs{...} }
type GetVpcEipsEipArrayInput interface {
	pulumi.Input

	ToGetVpcEipsEipArrayOutput() GetVpcEipsEipArrayOutput
	ToGetVpcEipsEipArrayOutputWithContext(context.Context) GetVpcEipsEipArrayOutput
}

type GetVpcEipsEipArray []GetVpcEipsEipInput

func (GetVpcEipsEipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEipsEip)(nil)).Elem()
}

func (i GetVpcEipsEipArray) ToGetVpcEipsEipArrayOutput() GetVpcEipsEipArrayOutput {
	return i.ToGetVpcEipsEipArrayOutputWithContext(context.Background())
}

func (i GetVpcEipsEipArray) ToGetVpcEipsEipArrayOutputWithContext(ctx context.Context) GetVpcEipsEipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEipsEipArrayOutput)
}

type GetVpcEipsEipOutput struct{ *pulumi.OutputState }

func (GetVpcEipsEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEipsEip)(nil)).Elem()
}

func (o GetVpcEipsEipOutput) ToGetVpcEipsEipOutput() GetVpcEipsEipOutput {
	return o
}

func (o GetVpcEipsEipOutput) ToGetVpcEipsEipOutputWithContext(ctx context.Context) GetVpcEipsEipOutput {
	return o
}

func (o GetVpcEipsEipOutput) BandwidthId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.BandwidthId }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) BandwidthName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.BandwidthName }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) BandwidthShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.BandwidthShareType }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) BandwidthSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcEipsEip) int { return v.BandwidthSize }).(pulumi.IntOutput)
}

func (o GetVpcEipsEipOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) IpVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcEipsEip) int { return v.IpVersion }).(pulumi.IntOutput)
}

func (o GetVpcEipsEipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) PublicIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.PublicIpv6 }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVpcEipsEipOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcEipsEip) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetVpcEipsEipOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEipsEip) string { return v.Type }).(pulumi.StringOutput)
}

type GetVpcEipsEipArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEipsEipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEipsEip)(nil)).Elem()
}

func (o GetVpcEipsEipArrayOutput) ToGetVpcEipsEipArrayOutput() GetVpcEipsEipArrayOutput {
	return o
}

func (o GetVpcEipsEipArrayOutput) ToGetVpcEipsEipArrayOutputWithContext(ctx context.Context) GetVpcEipsEipArrayOutput {
	return o
}

func (o GetVpcEipsEipArrayOutput) Index(i pulumi.IntInput) GetVpcEipsEipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEipsEip {
		return vs[0].([]GetVpcEipsEip)[vs[1].(int)]
	}).(GetVpcEipsEipOutput)
}

type GetVpcRouteType struct {
	Destination string `pulumi:"destination"`
	Nexthop     string `pulumi:"nexthop"`
}

// GetVpcRouteTypeInput is an input type that accepts GetVpcRouteTypeArgs and GetVpcRouteTypeOutput values.
// You can construct a concrete instance of `GetVpcRouteTypeInput` via:
//
//	GetVpcRouteTypeArgs{...}
type GetVpcRouteTypeInput interface {
	pulumi.Input

	ToGetVpcRouteTypeOutput() GetVpcRouteTypeOutput
	ToGetVpcRouteTypeOutputWithContext(context.Context) GetVpcRouteTypeOutput
}

type GetVpcRouteTypeArgs struct {
	Destination pulumi.StringInput `pulumi:"destination"`
	Nexthop     pulumi.StringInput `pulumi:"nexthop"`
}

func (GetVpcRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRouteType)(nil)).Elem()
}

func (i GetVpcRouteTypeArgs) ToGetVpcRouteTypeOutput() GetVpcRouteTypeOutput {
	return i.ToGetVpcRouteTypeOutputWithContext(context.Background())
}

func (i GetVpcRouteTypeArgs) ToGetVpcRouteTypeOutputWithContext(ctx context.Context) GetVpcRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRouteTypeOutput)
}

// GetVpcRouteTypeArrayInput is an input type that accepts GetVpcRouteTypeArray and GetVpcRouteTypeArrayOutput values.
// You can construct a concrete instance of `GetVpcRouteTypeArrayInput` via:
//
//	GetVpcRouteTypeArray{ GetVpcRouteTypeArgs{...} }
type GetVpcRouteTypeArrayInput interface {
	pulumi.Input

	ToGetVpcRouteTypeArrayOutput() GetVpcRouteTypeArrayOutput
	ToGetVpcRouteTypeArrayOutputWithContext(context.Context) GetVpcRouteTypeArrayOutput
}

type GetVpcRouteTypeArray []GetVpcRouteTypeInput

func (GetVpcRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRouteType)(nil)).Elem()
}

func (i GetVpcRouteTypeArray) ToGetVpcRouteTypeArrayOutput() GetVpcRouteTypeArrayOutput {
	return i.ToGetVpcRouteTypeArrayOutputWithContext(context.Background())
}

func (i GetVpcRouteTypeArray) ToGetVpcRouteTypeArrayOutputWithContext(ctx context.Context) GetVpcRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRouteTypeArrayOutput)
}

type GetVpcRouteTypeOutput struct{ *pulumi.OutputState }

func (GetVpcRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRouteType)(nil)).Elem()
}

func (o GetVpcRouteTypeOutput) ToGetVpcRouteTypeOutput() GetVpcRouteTypeOutput {
	return o
}

func (o GetVpcRouteTypeOutput) ToGetVpcRouteTypeOutputWithContext(ctx context.Context) GetVpcRouteTypeOutput {
	return o
}

func (o GetVpcRouteTypeOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteType) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetVpcRouteTypeOutput) Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteType) string { return v.Nexthop }).(pulumi.StringOutput)
}

type GetVpcRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (GetVpcRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRouteType)(nil)).Elem()
}

func (o GetVpcRouteTypeArrayOutput) ToGetVpcRouteTypeArrayOutput() GetVpcRouteTypeArrayOutput {
	return o
}

func (o GetVpcRouteTypeArrayOutput) ToGetVpcRouteTypeArrayOutputWithContext(ctx context.Context) GetVpcRouteTypeArrayOutput {
	return o
}

func (o GetVpcRouteTypeArrayOutput) Index(i pulumi.IntInput) GetVpcRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcRouteType {
		return vs[0].([]GetVpcRouteType)[vs[1].(int)]
	}).(GetVpcRouteTypeOutput)
}

type GetVpcRouteTableRoute struct {
	Description string `pulumi:"description"`
	Destination string `pulumi:"destination"`
	Nexthop     string `pulumi:"nexthop"`
	Type        string `pulumi:"type"`
}

// GetVpcRouteTableRouteInput is an input type that accepts GetVpcRouteTableRouteArgs and GetVpcRouteTableRouteOutput values.
// You can construct a concrete instance of `GetVpcRouteTableRouteInput` via:
//
//	GetVpcRouteTableRouteArgs{...}
type GetVpcRouteTableRouteInput interface {
	pulumi.Input

	ToGetVpcRouteTableRouteOutput() GetVpcRouteTableRouteOutput
	ToGetVpcRouteTableRouteOutputWithContext(context.Context) GetVpcRouteTableRouteOutput
}

type GetVpcRouteTableRouteArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Destination pulumi.StringInput `pulumi:"destination"`
	Nexthop     pulumi.StringInput `pulumi:"nexthop"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (GetVpcRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRouteTableRoute)(nil)).Elem()
}

func (i GetVpcRouteTableRouteArgs) ToGetVpcRouteTableRouteOutput() GetVpcRouteTableRouteOutput {
	return i.ToGetVpcRouteTableRouteOutputWithContext(context.Background())
}

func (i GetVpcRouteTableRouteArgs) ToGetVpcRouteTableRouteOutputWithContext(ctx context.Context) GetVpcRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRouteTableRouteOutput)
}

// GetVpcRouteTableRouteArrayInput is an input type that accepts GetVpcRouteTableRouteArray and GetVpcRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `GetVpcRouteTableRouteArrayInput` via:
//
//	GetVpcRouteTableRouteArray{ GetVpcRouteTableRouteArgs{...} }
type GetVpcRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetVpcRouteTableRouteArrayOutput() GetVpcRouteTableRouteArrayOutput
	ToGetVpcRouteTableRouteArrayOutputWithContext(context.Context) GetVpcRouteTableRouteArrayOutput
}

type GetVpcRouteTableRouteArray []GetVpcRouteTableRouteInput

func (GetVpcRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRouteTableRoute)(nil)).Elem()
}

func (i GetVpcRouteTableRouteArray) ToGetVpcRouteTableRouteArrayOutput() GetVpcRouteTableRouteArrayOutput {
	return i.ToGetVpcRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetVpcRouteTableRouteArray) ToGetVpcRouteTableRouteArrayOutputWithContext(ctx context.Context) GetVpcRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRouteTableRouteArrayOutput)
}

type GetVpcRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetVpcRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRouteTableRoute)(nil)).Elem()
}

func (o GetVpcRouteTableRouteOutput) ToGetVpcRouteTableRouteOutput() GetVpcRouteTableRouteOutput {
	return o
}

func (o GetVpcRouteTableRouteOutput) ToGetVpcRouteTableRouteOutputWithContext(ctx context.Context) GetVpcRouteTableRouteOutput {
	return o
}

func (o GetVpcRouteTableRouteOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteTableRoute) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVpcRouteTableRouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteTableRoute) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetVpcRouteTableRouteOutput) Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteTableRoute) string { return v.Nexthop }).(pulumi.StringOutput)
}

func (o GetVpcRouteTableRouteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRouteTableRoute) string { return v.Type }).(pulumi.StringOutput)
}

type GetVpcRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetVpcRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRouteTableRoute)(nil)).Elem()
}

func (o GetVpcRouteTableRouteArrayOutput) ToGetVpcRouteTableRouteArrayOutput() GetVpcRouteTableRouteArrayOutput {
	return o
}

func (o GetVpcRouteTableRouteArrayOutput) ToGetVpcRouteTableRouteArrayOutputWithContext(ctx context.Context) GetVpcRouteTableRouteArrayOutput {
	return o
}

func (o GetVpcRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetVpcRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcRouteTableRoute {
		return vs[0].([]GetVpcRouteTableRoute)[vs[1].(int)]
	}).(GetVpcRouteTableRouteOutput)
}

type GetVpcRoutesRoute struct {
	// The route destination.
	Destination string `pulumi:"destination"`
	// The route ID.
	Id string `pulumi:"id"`
	// The next hop of the route.
	Nexthop string `pulumi:"nexthop"`
	// The route type.
	Type string `pulumi:"type"`
	// The ID of the VPC to which the route belongs.
	VpcId string `pulumi:"vpcId"`
}

// GetVpcRoutesRouteInput is an input type that accepts GetVpcRoutesRouteArgs and GetVpcRoutesRouteOutput values.
// You can construct a concrete instance of `GetVpcRoutesRouteInput` via:
//
//	GetVpcRoutesRouteArgs{...}
type GetVpcRoutesRouteInput interface {
	pulumi.Input

	ToGetVpcRoutesRouteOutput() GetVpcRoutesRouteOutput
	ToGetVpcRoutesRouteOutputWithContext(context.Context) GetVpcRoutesRouteOutput
}

type GetVpcRoutesRouteArgs struct {
	// The route destination.
	Destination pulumi.StringInput `pulumi:"destination"`
	// The route ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The next hop of the route.
	Nexthop pulumi.StringInput `pulumi:"nexthop"`
	// The route type.
	Type pulumi.StringInput `pulumi:"type"`
	// The ID of the VPC to which the route belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetVpcRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRoutesRoute)(nil)).Elem()
}

func (i GetVpcRoutesRouteArgs) ToGetVpcRoutesRouteOutput() GetVpcRoutesRouteOutput {
	return i.ToGetVpcRoutesRouteOutputWithContext(context.Background())
}

func (i GetVpcRoutesRouteArgs) ToGetVpcRoutesRouteOutputWithContext(ctx context.Context) GetVpcRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRoutesRouteOutput)
}

// GetVpcRoutesRouteArrayInput is an input type that accepts GetVpcRoutesRouteArray and GetVpcRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetVpcRoutesRouteArrayInput` via:
//
//	GetVpcRoutesRouteArray{ GetVpcRoutesRouteArgs{...} }
type GetVpcRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetVpcRoutesRouteArrayOutput() GetVpcRoutesRouteArrayOutput
	ToGetVpcRoutesRouteArrayOutputWithContext(context.Context) GetVpcRoutesRouteArrayOutput
}

type GetVpcRoutesRouteArray []GetVpcRoutesRouteInput

func (GetVpcRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRoutesRoute)(nil)).Elem()
}

func (i GetVpcRoutesRouteArray) ToGetVpcRoutesRouteArrayOutput() GetVpcRoutesRouteArrayOutput {
	return i.ToGetVpcRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetVpcRoutesRouteArray) ToGetVpcRoutesRouteArrayOutputWithContext(ctx context.Context) GetVpcRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcRoutesRouteArrayOutput)
}

type GetVpcRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetVpcRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRoutesRoute)(nil)).Elem()
}

func (o GetVpcRoutesRouteOutput) ToGetVpcRoutesRouteOutput() GetVpcRoutesRouteOutput {
	return o
}

func (o GetVpcRoutesRouteOutput) ToGetVpcRoutesRouteOutputWithContext(ctx context.Context) GetVpcRoutesRouteOutput {
	return o
}

// The route destination.
func (o GetVpcRoutesRouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRoutesRoute) string { return v.Destination }).(pulumi.StringOutput)
}

// The route ID.
func (o GetVpcRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

// The next hop of the route.
func (o GetVpcRoutesRouteOutput) Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRoutesRoute) string { return v.Nexthop }).(pulumi.StringOutput)
}

// The route type.
func (o GetVpcRoutesRouteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRoutesRoute) string { return v.Type }).(pulumi.StringOutput)
}

// The ID of the VPC to which the route belongs.
func (o GetVpcRoutesRouteOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRoutesRoute) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetVpcRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetVpcRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcRoutesRoute)(nil)).Elem()
}

func (o GetVpcRoutesRouteArrayOutput) ToGetVpcRoutesRouteArrayOutput() GetVpcRoutesRouteArrayOutput {
	return o
}

func (o GetVpcRoutesRouteArrayOutput) ToGetVpcRoutesRouteArrayOutputWithContext(ctx context.Context) GetVpcRoutesRouteArrayOutput {
	return o
}

func (o GetVpcRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetVpcRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcRoutesRoute {
		return vs[0].([]GetVpcRoutesRoute)[vs[1].(int)]
	}).(GetVpcRoutesRouteOutput)
}

type GetVpcSubnetsSubnet struct {
	AvailabilityZone string   `pulumi:"availabilityZone"`
	Cidr             string   `pulumi:"cidr"`
	Description      string   `pulumi:"description"`
	DhcpEnable       bool     `pulumi:"dhcpEnable"`
	DnsLists         []string `pulumi:"dnsLists"`
	GatewayIp        string   `pulumi:"gatewayIp"`
	Id               string   `pulumi:"id"`
	Ipv4SubnetId     string   `pulumi:"ipv4SubnetId"`
	Ipv6Cidr         string   `pulumi:"ipv6Cidr"`
	Ipv6Enable       bool     `pulumi:"ipv6Enable"`
	Ipv6Gateway      string   `pulumi:"ipv6Gateway"`
	Ipv6SubnetId     string   `pulumi:"ipv6SubnetId"`
	Name             string   `pulumi:"name"`
	PrimaryDns       string   `pulumi:"primaryDns"`
	SecondaryDns     string   `pulumi:"secondaryDns"`
	Status           string   `pulumi:"status"`
	// schema: Deprecated
	SubnetId string            `pulumi:"subnetId"`
	Tags     map[string]string `pulumi:"tags"`
	VpcId    string            `pulumi:"vpcId"`
}

// GetVpcSubnetsSubnetInput is an input type that accepts GetVpcSubnetsSubnetArgs and GetVpcSubnetsSubnetOutput values.
// You can construct a concrete instance of `GetVpcSubnetsSubnetInput` via:
//
//	GetVpcSubnetsSubnetArgs{...}
type GetVpcSubnetsSubnetInput interface {
	pulumi.Input

	ToGetVpcSubnetsSubnetOutput() GetVpcSubnetsSubnetOutput
	ToGetVpcSubnetsSubnetOutputWithContext(context.Context) GetVpcSubnetsSubnetOutput
}

type GetVpcSubnetsSubnetArgs struct {
	AvailabilityZone pulumi.StringInput      `pulumi:"availabilityZone"`
	Cidr             pulumi.StringInput      `pulumi:"cidr"`
	Description      pulumi.StringInput      `pulumi:"description"`
	DhcpEnable       pulumi.BoolInput        `pulumi:"dhcpEnable"`
	DnsLists         pulumi.StringArrayInput `pulumi:"dnsLists"`
	GatewayIp        pulumi.StringInput      `pulumi:"gatewayIp"`
	Id               pulumi.StringInput      `pulumi:"id"`
	Ipv4SubnetId     pulumi.StringInput      `pulumi:"ipv4SubnetId"`
	Ipv6Cidr         pulumi.StringInput      `pulumi:"ipv6Cidr"`
	Ipv6Enable       pulumi.BoolInput        `pulumi:"ipv6Enable"`
	Ipv6Gateway      pulumi.StringInput      `pulumi:"ipv6Gateway"`
	Ipv6SubnetId     pulumi.StringInput      `pulumi:"ipv6SubnetId"`
	Name             pulumi.StringInput      `pulumi:"name"`
	PrimaryDns       pulumi.StringInput      `pulumi:"primaryDns"`
	SecondaryDns     pulumi.StringInput      `pulumi:"secondaryDns"`
	Status           pulumi.StringInput      `pulumi:"status"`
	// schema: Deprecated
	SubnetId pulumi.StringInput    `pulumi:"subnetId"`
	Tags     pulumi.StringMapInput `pulumi:"tags"`
	VpcId    pulumi.StringInput    `pulumi:"vpcId"`
}

func (GetVpcSubnetsSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSubnetsSubnet)(nil)).Elem()
}

func (i GetVpcSubnetsSubnetArgs) ToGetVpcSubnetsSubnetOutput() GetVpcSubnetsSubnetOutput {
	return i.ToGetVpcSubnetsSubnetOutputWithContext(context.Background())
}

func (i GetVpcSubnetsSubnetArgs) ToGetVpcSubnetsSubnetOutputWithContext(ctx context.Context) GetVpcSubnetsSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcSubnetsSubnetOutput)
}

// GetVpcSubnetsSubnetArrayInput is an input type that accepts GetVpcSubnetsSubnetArray and GetVpcSubnetsSubnetArrayOutput values.
// You can construct a concrete instance of `GetVpcSubnetsSubnetArrayInput` via:
//
//	GetVpcSubnetsSubnetArray{ GetVpcSubnetsSubnetArgs{...} }
type GetVpcSubnetsSubnetArrayInput interface {
	pulumi.Input

	ToGetVpcSubnetsSubnetArrayOutput() GetVpcSubnetsSubnetArrayOutput
	ToGetVpcSubnetsSubnetArrayOutputWithContext(context.Context) GetVpcSubnetsSubnetArrayOutput
}

type GetVpcSubnetsSubnetArray []GetVpcSubnetsSubnetInput

func (GetVpcSubnetsSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcSubnetsSubnet)(nil)).Elem()
}

func (i GetVpcSubnetsSubnetArray) ToGetVpcSubnetsSubnetArrayOutput() GetVpcSubnetsSubnetArrayOutput {
	return i.ToGetVpcSubnetsSubnetArrayOutputWithContext(context.Background())
}

func (i GetVpcSubnetsSubnetArray) ToGetVpcSubnetsSubnetArrayOutputWithContext(ctx context.Context) GetVpcSubnetsSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcSubnetsSubnetArrayOutput)
}

type GetVpcSubnetsSubnetOutput struct{ *pulumi.OutputState }

func (GetVpcSubnetsSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSubnetsSubnet)(nil)).Elem()
}

func (o GetVpcSubnetsSubnetOutput) ToGetVpcSubnetsSubnetOutput() GetVpcSubnetsSubnetOutput {
	return o
}

func (o GetVpcSubnetsSubnetOutput) ToGetVpcSubnetsSubnetOutputWithContext(ctx context.Context) GetVpcSubnetsSubnetOutput {
	return o
}

func (o GetVpcSubnetsSubnetOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) DhcpEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) bool { return v.DhcpEnable }).(pulumi.BoolOutput)
}

func (o GetVpcSubnetsSubnetOutput) DnsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) []string { return v.DnsLists }).(pulumi.StringArrayOutput)
}

func (o GetVpcSubnetsSubnetOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.GatewayIp }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Ipv4SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Ipv4SubnetId }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Ipv6Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Ipv6Cidr }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Ipv6Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) bool { return v.Ipv6Enable }).(pulumi.BoolOutput)
}

func (o GetVpcSubnetsSubnetOutput) Ipv6Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Ipv6Gateway }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Ipv6SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Ipv6SubnetId }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) PrimaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.PrimaryDns }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) SecondaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.SecondaryDns }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.Status }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o GetVpcSubnetsSubnetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsSubnetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetVpcSubnetsSubnetOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsSubnet) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetVpcSubnetsSubnetArrayOutput struct{ *pulumi.OutputState }

func (GetVpcSubnetsSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcSubnetsSubnet)(nil)).Elem()
}

func (o GetVpcSubnetsSubnetArrayOutput) ToGetVpcSubnetsSubnetArrayOutput() GetVpcSubnetsSubnetArrayOutput {
	return o
}

func (o GetVpcSubnetsSubnetArrayOutput) ToGetVpcSubnetsSubnetArrayOutputWithContext(ctx context.Context) GetVpcSubnetsSubnetArrayOutput {
	return o
}

func (o GetVpcSubnetsSubnetArrayOutput) Index(i pulumi.IntInput) GetVpcSubnetsSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcSubnetsSubnet {
		return vs[0].([]GetVpcSubnetsSubnet)[vs[1].(int)]
	}).(GetVpcSubnetsSubnetOutput)
}

type GetVpcepPublicServicesService struct {
	Id          string `pulumi:"id"`
	IsCharge    bool   `pulumi:"isCharge"`
	Owner       string `pulumi:"owner"`
	ServiceName string `pulumi:"serviceName"`
	ServiceType string `pulumi:"serviceType"`
}

// GetVpcepPublicServicesServiceInput is an input type that accepts GetVpcepPublicServicesServiceArgs and GetVpcepPublicServicesServiceOutput values.
// You can construct a concrete instance of `GetVpcepPublicServicesServiceInput` via:
//
//	GetVpcepPublicServicesServiceArgs{...}
type GetVpcepPublicServicesServiceInput interface {
	pulumi.Input

	ToGetVpcepPublicServicesServiceOutput() GetVpcepPublicServicesServiceOutput
	ToGetVpcepPublicServicesServiceOutputWithContext(context.Context) GetVpcepPublicServicesServiceOutput
}

type GetVpcepPublicServicesServiceArgs struct {
	Id          pulumi.StringInput `pulumi:"id"`
	IsCharge    pulumi.BoolInput   `pulumi:"isCharge"`
	Owner       pulumi.StringInput `pulumi:"owner"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
}

func (GetVpcepPublicServicesServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcepPublicServicesService)(nil)).Elem()
}

func (i GetVpcepPublicServicesServiceArgs) ToGetVpcepPublicServicesServiceOutput() GetVpcepPublicServicesServiceOutput {
	return i.ToGetVpcepPublicServicesServiceOutputWithContext(context.Background())
}

func (i GetVpcepPublicServicesServiceArgs) ToGetVpcepPublicServicesServiceOutputWithContext(ctx context.Context) GetVpcepPublicServicesServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcepPublicServicesServiceOutput)
}

// GetVpcepPublicServicesServiceArrayInput is an input type that accepts GetVpcepPublicServicesServiceArray and GetVpcepPublicServicesServiceArrayOutput values.
// You can construct a concrete instance of `GetVpcepPublicServicesServiceArrayInput` via:
//
//	GetVpcepPublicServicesServiceArray{ GetVpcepPublicServicesServiceArgs{...} }
type GetVpcepPublicServicesServiceArrayInput interface {
	pulumi.Input

	ToGetVpcepPublicServicesServiceArrayOutput() GetVpcepPublicServicesServiceArrayOutput
	ToGetVpcepPublicServicesServiceArrayOutputWithContext(context.Context) GetVpcepPublicServicesServiceArrayOutput
}

type GetVpcepPublicServicesServiceArray []GetVpcepPublicServicesServiceInput

func (GetVpcepPublicServicesServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcepPublicServicesService)(nil)).Elem()
}

func (i GetVpcepPublicServicesServiceArray) ToGetVpcepPublicServicesServiceArrayOutput() GetVpcepPublicServicesServiceArrayOutput {
	return i.ToGetVpcepPublicServicesServiceArrayOutputWithContext(context.Background())
}

func (i GetVpcepPublicServicesServiceArray) ToGetVpcepPublicServicesServiceArrayOutputWithContext(ctx context.Context) GetVpcepPublicServicesServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcepPublicServicesServiceArrayOutput)
}

type GetVpcepPublicServicesServiceOutput struct{ *pulumi.OutputState }

func (GetVpcepPublicServicesServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcepPublicServicesService)(nil)).Elem()
}

func (o GetVpcepPublicServicesServiceOutput) ToGetVpcepPublicServicesServiceOutput() GetVpcepPublicServicesServiceOutput {
	return o
}

func (o GetVpcepPublicServicesServiceOutput) ToGetVpcepPublicServicesServiceOutputWithContext(ctx context.Context) GetVpcepPublicServicesServiceOutput {
	return o
}

func (o GetVpcepPublicServicesServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesService) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcepPublicServicesServiceOutput) IsCharge() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesService) bool { return v.IsCharge }).(pulumi.BoolOutput)
}

func (o GetVpcepPublicServicesServiceOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesService) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetVpcepPublicServicesServiceOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesService) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetVpcepPublicServicesServiceOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcepPublicServicesService) string { return v.ServiceType }).(pulumi.StringOutput)
}

type GetVpcepPublicServicesServiceArrayOutput struct{ *pulumi.OutputState }

func (GetVpcepPublicServicesServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcepPublicServicesService)(nil)).Elem()
}

func (o GetVpcepPublicServicesServiceArrayOutput) ToGetVpcepPublicServicesServiceArrayOutput() GetVpcepPublicServicesServiceArrayOutput {
	return o
}

func (o GetVpcepPublicServicesServiceArrayOutput) ToGetVpcepPublicServicesServiceArrayOutputWithContext(ctx context.Context) GetVpcepPublicServicesServiceArrayOutput {
	return o
}

func (o GetVpcepPublicServicesServiceArrayOutput) Index(i pulumi.IntInput) GetVpcepPublicServicesServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcepPublicServicesService {
		return vs[0].([]GetVpcepPublicServicesService)[vs[1].(int)]
	}).(GetVpcepPublicServicesServiceOutput)
}

type GetVpcsVpc struct {
	Cidr                string            `pulumi:"cidr"`
	Description         string            `pulumi:"description"`
	EnterpriseProjectId string            `pulumi:"enterpriseProjectId"`
	Id                  string            `pulumi:"id"`
	Name                string            `pulumi:"name"`
	SecondaryCidrs      []string          `pulumi:"secondaryCidrs"`
	Status              string            `pulumi:"status"`
	Tags                map[string]string `pulumi:"tags"`
}

// GetVpcsVpcInput is an input type that accepts GetVpcsVpcArgs and GetVpcsVpcOutput values.
// You can construct a concrete instance of `GetVpcsVpcInput` via:
//
//	GetVpcsVpcArgs{...}
type GetVpcsVpcInput interface {
	pulumi.Input

	ToGetVpcsVpcOutput() GetVpcsVpcOutput
	ToGetVpcsVpcOutputWithContext(context.Context) GetVpcsVpcOutput
}

type GetVpcsVpcArgs struct {
	Cidr                pulumi.StringInput      `pulumi:"cidr"`
	Description         pulumi.StringInput      `pulumi:"description"`
	EnterpriseProjectId pulumi.StringInput      `pulumi:"enterpriseProjectId"`
	Id                  pulumi.StringInput      `pulumi:"id"`
	Name                pulumi.StringInput      `pulumi:"name"`
	SecondaryCidrs      pulumi.StringArrayInput `pulumi:"secondaryCidrs"`
	Status              pulumi.StringInput      `pulumi:"status"`
	Tags                pulumi.StringMapInput   `pulumi:"tags"`
}

func (GetVpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return i.ToGetVpcsVpcOutputWithContext(context.Background())
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcOutput)
}

// GetVpcsVpcArrayInput is an input type that accepts GetVpcsVpcArray and GetVpcsVpcArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcArrayInput` via:
//
//	GetVpcsVpcArray{ GetVpcsVpcArgs{...} }
type GetVpcsVpcArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput
	ToGetVpcsVpcArrayOutputWithContext(context.Context) GetVpcsVpcArrayOutput
}

type GetVpcsVpcArray []GetVpcsVpcInput

func (GetVpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return i.ToGetVpcsVpcArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcArrayOutput)
}

type GetVpcsVpcOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return o
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return o
}

func (o GetVpcsVpcOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) SecondaryCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.SecondaryCidrs }).(pulumi.StringArrayOutput)
}

func (o GetVpcsVpcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcsVpc) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetVpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpc {
		return vs[0].([]GetVpcsVpc)[vs[1].(int)]
	}).(GetVpcsVpcOutput)
}

type GetVpnConnectionHealthChecksConnectionHealthCheck struct {
	ConnectionId  string `pulumi:"connectionId"`
	DestinationIp string `pulumi:"destinationIp"`
	Id            string `pulumi:"id"`
	ProtoType     string `pulumi:"protoType"`
	SourceIp      string `pulumi:"sourceIp"`
	Status        string `pulumi:"status"`
	Type          string `pulumi:"type"`
}

// GetVpnConnectionHealthChecksConnectionHealthCheckInput is an input type that accepts GetVpnConnectionHealthChecksConnectionHealthCheckArgs and GetVpnConnectionHealthChecksConnectionHealthCheckOutput values.
// You can construct a concrete instance of `GetVpnConnectionHealthChecksConnectionHealthCheckInput` via:
//
//	GetVpnConnectionHealthChecksConnectionHealthCheckArgs{...}
type GetVpnConnectionHealthChecksConnectionHealthCheckInput interface {
	pulumi.Input

	ToGetVpnConnectionHealthChecksConnectionHealthCheckOutput() GetVpnConnectionHealthChecksConnectionHealthCheckOutput
	ToGetVpnConnectionHealthChecksConnectionHealthCheckOutputWithContext(context.Context) GetVpnConnectionHealthChecksConnectionHealthCheckOutput
}

type GetVpnConnectionHealthChecksConnectionHealthCheckArgs struct {
	ConnectionId  pulumi.StringInput `pulumi:"connectionId"`
	DestinationIp pulumi.StringInput `pulumi:"destinationIp"`
	Id            pulumi.StringInput `pulumi:"id"`
	ProtoType     pulumi.StringInput `pulumi:"protoType"`
	SourceIp      pulumi.StringInput `pulumi:"sourceIp"`
	Status        pulumi.StringInput `pulumi:"status"`
	Type          pulumi.StringInput `pulumi:"type"`
}

func (GetVpnConnectionHealthChecksConnectionHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionHealthChecksConnectionHealthCheck)(nil)).Elem()
}

func (i GetVpnConnectionHealthChecksConnectionHealthCheckArgs) ToGetVpnConnectionHealthChecksConnectionHealthCheckOutput() GetVpnConnectionHealthChecksConnectionHealthCheckOutput {
	return i.ToGetVpnConnectionHealthChecksConnectionHealthCheckOutputWithContext(context.Background())
}

func (i GetVpnConnectionHealthChecksConnectionHealthCheckArgs) ToGetVpnConnectionHealthChecksConnectionHealthCheckOutputWithContext(ctx context.Context) GetVpnConnectionHealthChecksConnectionHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionHealthChecksConnectionHealthCheckOutput)
}

// GetVpnConnectionHealthChecksConnectionHealthCheckArrayInput is an input type that accepts GetVpnConnectionHealthChecksConnectionHealthCheckArray and GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionHealthChecksConnectionHealthCheckArrayInput` via:
//
//	GetVpnConnectionHealthChecksConnectionHealthCheckArray{ GetVpnConnectionHealthChecksConnectionHealthCheckArgs{...} }
type GetVpnConnectionHealthChecksConnectionHealthCheckArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput() GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput
	ToGetVpnConnectionHealthChecksConnectionHealthCheckArrayOutputWithContext(context.Context) GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput
}

type GetVpnConnectionHealthChecksConnectionHealthCheckArray []GetVpnConnectionHealthChecksConnectionHealthCheckInput

func (GetVpnConnectionHealthChecksConnectionHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionHealthChecksConnectionHealthCheck)(nil)).Elem()
}

func (i GetVpnConnectionHealthChecksConnectionHealthCheckArray) ToGetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput() GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput {
	return i.ToGetVpnConnectionHealthChecksConnectionHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionHealthChecksConnectionHealthCheckArray) ToGetVpnConnectionHealthChecksConnectionHealthCheckArrayOutputWithContext(ctx context.Context) GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput)
}

type GetVpnConnectionHealthChecksConnectionHealthCheckOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionHealthChecksConnectionHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionHealthChecksConnectionHealthCheck)(nil)).Elem()
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) ToGetVpnConnectionHealthChecksConnectionHealthCheckOutput() GetVpnConnectionHealthChecksConnectionHealthCheckOutput {
	return o
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) ToGetVpnConnectionHealthChecksConnectionHealthCheckOutputWithContext(ctx context.Context) GetVpnConnectionHealthChecksConnectionHealthCheckOutput {
	return o
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionHealthChecksConnectionHealthCheck) string { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) DestinationIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionHealthChecksConnectionHealthCheck) string { return v.DestinationIp }).(pulumi.StringOutput)
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionHealthChecksConnectionHealthCheck) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) ProtoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionHealthChecksConnectionHealthCheck) string { return v.ProtoType }).(pulumi.StringOutput)
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionHealthChecksConnectionHealthCheck) string { return v.SourceIp }).(pulumi.StringOutput)
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionHealthChecksConnectionHealthCheck) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionHealthChecksConnectionHealthCheck) string { return v.Type }).(pulumi.StringOutput)
}

type GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionHealthChecksConnectionHealthCheck)(nil)).Elem()
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput) ToGetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput() GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput {
	return o
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput) ToGetVpnConnectionHealthChecksConnectionHealthCheckArrayOutputWithContext(ctx context.Context) GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput {
	return o
}

func (o GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionHealthChecksConnectionHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionHealthChecksConnectionHealthCheck {
		return vs[0].([]GetVpnConnectionHealthChecksConnectionHealthCheck)[vs[1].(int)]
	}).(GetVpnConnectionHealthChecksConnectionHealthCheckOutput)
}

type GetVpnConnectionsConnection struct {
	ConnectionMonitorId string                                   `pulumi:"connectionMonitorId"`
	CreatedAt           string                                   `pulumi:"createdAt"`
	CustomerGatewayId   string                                   `pulumi:"customerGatewayId"`
	EnableNqa           bool                                     `pulumi:"enableNqa"`
	EnterpriseProjectId string                                   `pulumi:"enterpriseProjectId"`
	GatewayId           string                                   `pulumi:"gatewayId"`
	GatewayIp           string                                   `pulumi:"gatewayIp"`
	HaRole              string                                   `pulumi:"haRole"`
	Id                  string                                   `pulumi:"id"`
	Ikepolicies         []GetVpnConnectionsConnectionIkepolicy   `pulumi:"ikepolicies"`
	Ipsecpolicies       []GetVpnConnectionsConnectionIpsecpolicy `pulumi:"ipsecpolicies"`
	Name                string                                   `pulumi:"name"`
	PeerSubnets         []string                                 `pulumi:"peerSubnets"`
	PolicyRules         []GetVpnConnectionsConnectionPolicyRule  `pulumi:"policyRules"`
	Status              string                                   `pulumi:"status"`
	TunnelLocalAddress  string                                   `pulumi:"tunnelLocalAddress"`
	TunnelPeerAddress   string                                   `pulumi:"tunnelPeerAddress"`
	UpdatedAt           string                                   `pulumi:"updatedAt"`
	VpnType             string                                   `pulumi:"vpnType"`
}

// GetVpnConnectionsConnectionInput is an input type that accepts GetVpnConnectionsConnectionArgs and GetVpnConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionInput` via:
//
//	GetVpnConnectionsConnectionArgs{...}
type GetVpnConnectionsConnectionInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionOutput() GetVpnConnectionsConnectionOutput
	ToGetVpnConnectionsConnectionOutputWithContext(context.Context) GetVpnConnectionsConnectionOutput
}

type GetVpnConnectionsConnectionArgs struct {
	ConnectionMonitorId pulumi.StringInput                               `pulumi:"connectionMonitorId"`
	CreatedAt           pulumi.StringInput                               `pulumi:"createdAt"`
	CustomerGatewayId   pulumi.StringInput                               `pulumi:"customerGatewayId"`
	EnableNqa           pulumi.BoolInput                                 `pulumi:"enableNqa"`
	EnterpriseProjectId pulumi.StringInput                               `pulumi:"enterpriseProjectId"`
	GatewayId           pulumi.StringInput                               `pulumi:"gatewayId"`
	GatewayIp           pulumi.StringInput                               `pulumi:"gatewayIp"`
	HaRole              pulumi.StringInput                               `pulumi:"haRole"`
	Id                  pulumi.StringInput                               `pulumi:"id"`
	Ikepolicies         GetVpnConnectionsConnectionIkepolicyArrayInput   `pulumi:"ikepolicies"`
	Ipsecpolicies       GetVpnConnectionsConnectionIpsecpolicyArrayInput `pulumi:"ipsecpolicies"`
	Name                pulumi.StringInput                               `pulumi:"name"`
	PeerSubnets         pulumi.StringArrayInput                          `pulumi:"peerSubnets"`
	PolicyRules         GetVpnConnectionsConnectionPolicyRuleArrayInput  `pulumi:"policyRules"`
	Status              pulumi.StringInput                               `pulumi:"status"`
	TunnelLocalAddress  pulumi.StringInput                               `pulumi:"tunnelLocalAddress"`
	TunnelPeerAddress   pulumi.StringInput                               `pulumi:"tunnelPeerAddress"`
	UpdatedAt           pulumi.StringInput                               `pulumi:"updatedAt"`
	VpnType             pulumi.StringInput                               `pulumi:"vpnType"`
}

func (GetVpnConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnection)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionArgs) ToGetVpnConnectionsConnectionOutput() GetVpnConnectionsConnectionOutput {
	return i.ToGetVpnConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionArgs) ToGetVpnConnectionsConnectionOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionOutput)
}

// GetVpnConnectionsConnectionArrayInput is an input type that accepts GetVpnConnectionsConnectionArray and GetVpnConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionArrayInput` via:
//
//	GetVpnConnectionsConnectionArray{ GetVpnConnectionsConnectionArgs{...} }
type GetVpnConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionArrayOutput() GetVpnConnectionsConnectionArrayOutput
	ToGetVpnConnectionsConnectionArrayOutputWithContext(context.Context) GetVpnConnectionsConnectionArrayOutput
}

type GetVpnConnectionsConnectionArray []GetVpnConnectionsConnectionInput

func (GetVpnConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnection)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionArray) ToGetVpnConnectionsConnectionArrayOutput() GetVpnConnectionsConnectionArrayOutput {
	return i.ToGetVpnConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionArray) ToGetVpnConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionArrayOutput)
}

type GetVpnConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnection)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionOutput) ToGetVpnConnectionsConnectionOutput() GetVpnConnectionsConnectionOutput {
	return o
}

func (o GetVpnConnectionsConnectionOutput) ToGetVpnConnectionsConnectionOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionOutput {
	return o
}

func (o GetVpnConnectionsConnectionOutput) ConnectionMonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.ConnectionMonitorId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) EnableNqa() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) bool { return v.EnableNqa }).(pulumi.BoolOutput)
}

func (o GetVpnConnectionsConnectionOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.GatewayId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.GatewayIp }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) HaRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.HaRole }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) Ikepolicies() GetVpnConnectionsConnectionIkepolicyArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) []GetVpnConnectionsConnectionIkepolicy { return v.Ikepolicies }).(GetVpnConnectionsConnectionIkepolicyArrayOutput)
}

func (o GetVpnConnectionsConnectionOutput) Ipsecpolicies() GetVpnConnectionsConnectionIpsecpolicyArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) []GetVpnConnectionsConnectionIpsecpolicy { return v.Ipsecpolicies }).(GetVpnConnectionsConnectionIpsecpolicyArrayOutput)
}

func (o GetVpnConnectionsConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) PeerSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) []string { return v.PeerSubnets }).(pulumi.StringArrayOutput)
}

func (o GetVpnConnectionsConnectionOutput) PolicyRules() GetVpnConnectionsConnectionPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) []GetVpnConnectionsConnectionPolicyRule { return v.PolicyRules }).(GetVpnConnectionsConnectionPolicyRuleArrayOutput)
}

func (o GetVpnConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) TunnelLocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.TunnelLocalAddress }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) TunnelPeerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.TunnelPeerAddress }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionOutput) VpnType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnection) string { return v.VpnType }).(pulumi.StringOutput)
}

type GetVpnConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnection)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionArrayOutput) ToGetVpnConnectionsConnectionArrayOutput() GetVpnConnectionsConnectionArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionArrayOutput) ToGetVpnConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsConnection {
		return vs[0].([]GetVpnConnectionsConnection)[vs[1].(int)]
	}).(GetVpnConnectionsConnectionOutput)
}

type GetVpnConnectionsConnectionIkepolicy struct {
	AuthenticationAlgorithm string                                    `pulumi:"authenticationAlgorithm"`
	AuthenticationMethod    string                                    `pulumi:"authenticationMethod"`
	DhGroup                 string                                    `pulumi:"dhGroup"`
	Dpds                    []GetVpnConnectionsConnectionIkepolicyDpd `pulumi:"dpds"`
	EncryptionAlgorithm     string                                    `pulumi:"encryptionAlgorithm"`
	IkeVersion              string                                    `pulumi:"ikeVersion"`
	LifetimeSeconds         int                                       `pulumi:"lifetimeSeconds"`
	LocalId                 string                                    `pulumi:"localId"`
	LocalIdType             string                                    `pulumi:"localIdType"`
	PeerId                  string                                    `pulumi:"peerId"`
	PeerIdType              string                                    `pulumi:"peerIdType"`
	Phase1NegotiationMode   string                                    `pulumi:"phase1NegotiationMode"`
}

// GetVpnConnectionsConnectionIkepolicyInput is an input type that accepts GetVpnConnectionsConnectionIkepolicyArgs and GetVpnConnectionsConnectionIkepolicyOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionIkepolicyInput` via:
//
//	GetVpnConnectionsConnectionIkepolicyArgs{...}
type GetVpnConnectionsConnectionIkepolicyInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionIkepolicyOutput() GetVpnConnectionsConnectionIkepolicyOutput
	ToGetVpnConnectionsConnectionIkepolicyOutputWithContext(context.Context) GetVpnConnectionsConnectionIkepolicyOutput
}

type GetVpnConnectionsConnectionIkepolicyArgs struct {
	AuthenticationAlgorithm pulumi.StringInput                                `pulumi:"authenticationAlgorithm"`
	AuthenticationMethod    pulumi.StringInput                                `pulumi:"authenticationMethod"`
	DhGroup                 pulumi.StringInput                                `pulumi:"dhGroup"`
	Dpds                    GetVpnConnectionsConnectionIkepolicyDpdArrayInput `pulumi:"dpds"`
	EncryptionAlgorithm     pulumi.StringInput                                `pulumi:"encryptionAlgorithm"`
	IkeVersion              pulumi.StringInput                                `pulumi:"ikeVersion"`
	LifetimeSeconds         pulumi.IntInput                                   `pulumi:"lifetimeSeconds"`
	LocalId                 pulumi.StringInput                                `pulumi:"localId"`
	LocalIdType             pulumi.StringInput                                `pulumi:"localIdType"`
	PeerId                  pulumi.StringInput                                `pulumi:"peerId"`
	PeerIdType              pulumi.StringInput                                `pulumi:"peerIdType"`
	Phase1NegotiationMode   pulumi.StringInput                                `pulumi:"phase1NegotiationMode"`
}

func (GetVpnConnectionsConnectionIkepolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicy)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionIkepolicyArgs) ToGetVpnConnectionsConnectionIkepolicyOutput() GetVpnConnectionsConnectionIkepolicyOutput {
	return i.ToGetVpnConnectionsConnectionIkepolicyOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionIkepolicyArgs) ToGetVpnConnectionsConnectionIkepolicyOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionIkepolicyOutput)
}

// GetVpnConnectionsConnectionIkepolicyArrayInput is an input type that accepts GetVpnConnectionsConnectionIkepolicyArray and GetVpnConnectionsConnectionIkepolicyArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionIkepolicyArrayInput` via:
//
//	GetVpnConnectionsConnectionIkepolicyArray{ GetVpnConnectionsConnectionIkepolicyArgs{...} }
type GetVpnConnectionsConnectionIkepolicyArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionIkepolicyArrayOutput() GetVpnConnectionsConnectionIkepolicyArrayOutput
	ToGetVpnConnectionsConnectionIkepolicyArrayOutputWithContext(context.Context) GetVpnConnectionsConnectionIkepolicyArrayOutput
}

type GetVpnConnectionsConnectionIkepolicyArray []GetVpnConnectionsConnectionIkepolicyInput

func (GetVpnConnectionsConnectionIkepolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionIkepolicy)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionIkepolicyArray) ToGetVpnConnectionsConnectionIkepolicyArrayOutput() GetVpnConnectionsConnectionIkepolicyArrayOutput {
	return i.ToGetVpnConnectionsConnectionIkepolicyArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionIkepolicyArray) ToGetVpnConnectionsConnectionIkepolicyArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionIkepolicyArrayOutput)
}

type GetVpnConnectionsConnectionIkepolicyOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionIkepolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicy)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) ToGetVpnConnectionsConnectionIkepolicyOutput() GetVpnConnectionsConnectionIkepolicyOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) ToGetVpnConnectionsConnectionIkepolicyOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) AuthenticationAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.AuthenticationAlgorithm }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) AuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.AuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) Dpds() GetVpnConnectionsConnectionIkepolicyDpdArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) []GetVpnConnectionsConnectionIkepolicyDpd { return v.Dpds }).(GetVpnConnectionsConnectionIkepolicyDpdArrayOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.IkeVersion }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) LifetimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) int { return v.LifetimeSeconds }).(pulumi.IntOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.LocalId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) LocalIdType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.LocalIdType }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) PeerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.PeerId }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) PeerIdType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.PeerIdType }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyOutput) Phase1NegotiationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicy) string { return v.Phase1NegotiationMode }).(pulumi.StringOutput)
}

type GetVpnConnectionsConnectionIkepolicyArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionIkepolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionIkepolicy)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionIkepolicyArrayOutput) ToGetVpnConnectionsConnectionIkepolicyArrayOutput() GetVpnConnectionsConnectionIkepolicyArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyArrayOutput) ToGetVpnConnectionsConnectionIkepolicyArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsConnectionIkepolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsConnectionIkepolicy {
		return vs[0].([]GetVpnConnectionsConnectionIkepolicy)[vs[1].(int)]
	}).(GetVpnConnectionsConnectionIkepolicyOutput)
}

type GetVpnConnectionsConnectionIkepolicyDpd struct {
	Interval int    `pulumi:"interval"`
	Msg      string `pulumi:"msg"`
	Timeout  int    `pulumi:"timeout"`
}

// GetVpnConnectionsConnectionIkepolicyDpdInput is an input type that accepts GetVpnConnectionsConnectionIkepolicyDpdArgs and GetVpnConnectionsConnectionIkepolicyDpdOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionIkepolicyDpdInput` via:
//
//	GetVpnConnectionsConnectionIkepolicyDpdArgs{...}
type GetVpnConnectionsConnectionIkepolicyDpdInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionIkepolicyDpdOutput() GetVpnConnectionsConnectionIkepolicyDpdOutput
	ToGetVpnConnectionsConnectionIkepolicyDpdOutputWithContext(context.Context) GetVpnConnectionsConnectionIkepolicyDpdOutput
}

type GetVpnConnectionsConnectionIkepolicyDpdArgs struct {
	Interval pulumi.IntInput    `pulumi:"interval"`
	Msg      pulumi.StringInput `pulumi:"msg"`
	Timeout  pulumi.IntInput    `pulumi:"timeout"`
}

func (GetVpnConnectionsConnectionIkepolicyDpdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicyDpd)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionIkepolicyDpdArgs) ToGetVpnConnectionsConnectionIkepolicyDpdOutput() GetVpnConnectionsConnectionIkepolicyDpdOutput {
	return i.ToGetVpnConnectionsConnectionIkepolicyDpdOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionIkepolicyDpdArgs) ToGetVpnConnectionsConnectionIkepolicyDpdOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyDpdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionIkepolicyDpdOutput)
}

// GetVpnConnectionsConnectionIkepolicyDpdArrayInput is an input type that accepts GetVpnConnectionsConnectionIkepolicyDpdArray and GetVpnConnectionsConnectionIkepolicyDpdArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionIkepolicyDpdArrayInput` via:
//
//	GetVpnConnectionsConnectionIkepolicyDpdArray{ GetVpnConnectionsConnectionIkepolicyDpdArgs{...} }
type GetVpnConnectionsConnectionIkepolicyDpdArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionIkepolicyDpdArrayOutput() GetVpnConnectionsConnectionIkepolicyDpdArrayOutput
	ToGetVpnConnectionsConnectionIkepolicyDpdArrayOutputWithContext(context.Context) GetVpnConnectionsConnectionIkepolicyDpdArrayOutput
}

type GetVpnConnectionsConnectionIkepolicyDpdArray []GetVpnConnectionsConnectionIkepolicyDpdInput

func (GetVpnConnectionsConnectionIkepolicyDpdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionIkepolicyDpd)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionIkepolicyDpdArray) ToGetVpnConnectionsConnectionIkepolicyDpdArrayOutput() GetVpnConnectionsConnectionIkepolicyDpdArrayOutput {
	return i.ToGetVpnConnectionsConnectionIkepolicyDpdArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionIkepolicyDpdArray) ToGetVpnConnectionsConnectionIkepolicyDpdArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyDpdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionIkepolicyDpdArrayOutput)
}

type GetVpnConnectionsConnectionIkepolicyDpdOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionIkepolicyDpdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicyDpd)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionIkepolicyDpdOutput) ToGetVpnConnectionsConnectionIkepolicyDpdOutput() GetVpnConnectionsConnectionIkepolicyDpdOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyDpdOutput) ToGetVpnConnectionsConnectionIkepolicyDpdOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyDpdOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyDpdOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicyDpd) int { return v.Interval }).(pulumi.IntOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyDpdOutput) Msg() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicyDpd) string { return v.Msg }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIkepolicyDpdOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIkepolicyDpd) int { return v.Timeout }).(pulumi.IntOutput)
}

type GetVpnConnectionsConnectionIkepolicyDpdArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionIkepolicyDpdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionIkepolicyDpd)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionIkepolicyDpdArrayOutput) ToGetVpnConnectionsConnectionIkepolicyDpdArrayOutput() GetVpnConnectionsConnectionIkepolicyDpdArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyDpdArrayOutput) ToGetVpnConnectionsConnectionIkepolicyDpdArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIkepolicyDpdArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionIkepolicyDpdArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsConnectionIkepolicyDpdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsConnectionIkepolicyDpd {
		return vs[0].([]GetVpnConnectionsConnectionIkepolicyDpd)[vs[1].(int)]
	}).(GetVpnConnectionsConnectionIkepolicyDpdOutput)
}

type GetVpnConnectionsConnectionIpsecpolicy struct {
	AuthenticationAlgorithm string `pulumi:"authenticationAlgorithm"`
	EncapsulationMode       string `pulumi:"encapsulationMode"`
	EncryptionAlgorithm     string `pulumi:"encryptionAlgorithm"`
	LifetimeSeconds         int    `pulumi:"lifetimeSeconds"`
	Pfs                     string `pulumi:"pfs"`
	TransformProtocol       string `pulumi:"transformProtocol"`
}

// GetVpnConnectionsConnectionIpsecpolicyInput is an input type that accepts GetVpnConnectionsConnectionIpsecpolicyArgs and GetVpnConnectionsConnectionIpsecpolicyOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionIpsecpolicyInput` via:
//
//	GetVpnConnectionsConnectionIpsecpolicyArgs{...}
type GetVpnConnectionsConnectionIpsecpolicyInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionIpsecpolicyOutput() GetVpnConnectionsConnectionIpsecpolicyOutput
	ToGetVpnConnectionsConnectionIpsecpolicyOutputWithContext(context.Context) GetVpnConnectionsConnectionIpsecpolicyOutput
}

type GetVpnConnectionsConnectionIpsecpolicyArgs struct {
	AuthenticationAlgorithm pulumi.StringInput `pulumi:"authenticationAlgorithm"`
	EncapsulationMode       pulumi.StringInput `pulumi:"encapsulationMode"`
	EncryptionAlgorithm     pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	LifetimeSeconds         pulumi.IntInput    `pulumi:"lifetimeSeconds"`
	Pfs                     pulumi.StringInput `pulumi:"pfs"`
	TransformProtocol       pulumi.StringInput `pulumi:"transformProtocol"`
}

func (GetVpnConnectionsConnectionIpsecpolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionIpsecpolicy)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionIpsecpolicyArgs) ToGetVpnConnectionsConnectionIpsecpolicyOutput() GetVpnConnectionsConnectionIpsecpolicyOutput {
	return i.ToGetVpnConnectionsConnectionIpsecpolicyOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionIpsecpolicyArgs) ToGetVpnConnectionsConnectionIpsecpolicyOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIpsecpolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionIpsecpolicyOutput)
}

// GetVpnConnectionsConnectionIpsecpolicyArrayInput is an input type that accepts GetVpnConnectionsConnectionIpsecpolicyArray and GetVpnConnectionsConnectionIpsecpolicyArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionIpsecpolicyArrayInput` via:
//
//	GetVpnConnectionsConnectionIpsecpolicyArray{ GetVpnConnectionsConnectionIpsecpolicyArgs{...} }
type GetVpnConnectionsConnectionIpsecpolicyArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionIpsecpolicyArrayOutput() GetVpnConnectionsConnectionIpsecpolicyArrayOutput
	ToGetVpnConnectionsConnectionIpsecpolicyArrayOutputWithContext(context.Context) GetVpnConnectionsConnectionIpsecpolicyArrayOutput
}

type GetVpnConnectionsConnectionIpsecpolicyArray []GetVpnConnectionsConnectionIpsecpolicyInput

func (GetVpnConnectionsConnectionIpsecpolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionIpsecpolicy)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionIpsecpolicyArray) ToGetVpnConnectionsConnectionIpsecpolicyArrayOutput() GetVpnConnectionsConnectionIpsecpolicyArrayOutput {
	return i.ToGetVpnConnectionsConnectionIpsecpolicyArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionIpsecpolicyArray) ToGetVpnConnectionsConnectionIpsecpolicyArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIpsecpolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionIpsecpolicyArrayOutput)
}

type GetVpnConnectionsConnectionIpsecpolicyOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionIpsecpolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionIpsecpolicy)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) ToGetVpnConnectionsConnectionIpsecpolicyOutput() GetVpnConnectionsConnectionIpsecpolicyOutput {
	return o
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) ToGetVpnConnectionsConnectionIpsecpolicyOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIpsecpolicyOutput {
	return o
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) AuthenticationAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIpsecpolicy) string { return v.AuthenticationAlgorithm }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) EncapsulationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIpsecpolicy) string { return v.EncapsulationMode }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIpsecpolicy) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) LifetimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIpsecpolicy) int { return v.LifetimeSeconds }).(pulumi.IntOutput)
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) Pfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIpsecpolicy) string { return v.Pfs }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsConnectionIpsecpolicyOutput) TransformProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionIpsecpolicy) string { return v.TransformProtocol }).(pulumi.StringOutput)
}

type GetVpnConnectionsConnectionIpsecpolicyArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionIpsecpolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionIpsecpolicy)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionIpsecpolicyArrayOutput) ToGetVpnConnectionsConnectionIpsecpolicyArrayOutput() GetVpnConnectionsConnectionIpsecpolicyArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionIpsecpolicyArrayOutput) ToGetVpnConnectionsConnectionIpsecpolicyArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionIpsecpolicyArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionIpsecpolicyArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsConnectionIpsecpolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsConnectionIpsecpolicy {
		return vs[0].([]GetVpnConnectionsConnectionIpsecpolicy)[vs[1].(int)]
	}).(GetVpnConnectionsConnectionIpsecpolicyOutput)
}

type GetVpnConnectionsConnectionPolicyRule struct {
	Destinations []string `pulumi:"destinations"`
	RuleIndex    int      `pulumi:"ruleIndex"`
	Source       string   `pulumi:"source"`
}

// GetVpnConnectionsConnectionPolicyRuleInput is an input type that accepts GetVpnConnectionsConnectionPolicyRuleArgs and GetVpnConnectionsConnectionPolicyRuleOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionPolicyRuleInput` via:
//
//	GetVpnConnectionsConnectionPolicyRuleArgs{...}
type GetVpnConnectionsConnectionPolicyRuleInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionPolicyRuleOutput() GetVpnConnectionsConnectionPolicyRuleOutput
	ToGetVpnConnectionsConnectionPolicyRuleOutputWithContext(context.Context) GetVpnConnectionsConnectionPolicyRuleOutput
}

type GetVpnConnectionsConnectionPolicyRuleArgs struct {
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	RuleIndex    pulumi.IntInput         `pulumi:"ruleIndex"`
	Source       pulumi.StringInput      `pulumi:"source"`
}

func (GetVpnConnectionsConnectionPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionPolicyRule)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionPolicyRuleArgs) ToGetVpnConnectionsConnectionPolicyRuleOutput() GetVpnConnectionsConnectionPolicyRuleOutput {
	return i.ToGetVpnConnectionsConnectionPolicyRuleOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionPolicyRuleArgs) ToGetVpnConnectionsConnectionPolicyRuleOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionPolicyRuleOutput)
}

// GetVpnConnectionsConnectionPolicyRuleArrayInput is an input type that accepts GetVpnConnectionsConnectionPolicyRuleArray and GetVpnConnectionsConnectionPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetVpnConnectionsConnectionPolicyRuleArrayInput` via:
//
//	GetVpnConnectionsConnectionPolicyRuleArray{ GetVpnConnectionsConnectionPolicyRuleArgs{...} }
type GetVpnConnectionsConnectionPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetVpnConnectionsConnectionPolicyRuleArrayOutput() GetVpnConnectionsConnectionPolicyRuleArrayOutput
	ToGetVpnConnectionsConnectionPolicyRuleArrayOutputWithContext(context.Context) GetVpnConnectionsConnectionPolicyRuleArrayOutput
}

type GetVpnConnectionsConnectionPolicyRuleArray []GetVpnConnectionsConnectionPolicyRuleInput

func (GetVpnConnectionsConnectionPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionPolicyRule)(nil)).Elem()
}

func (i GetVpnConnectionsConnectionPolicyRuleArray) ToGetVpnConnectionsConnectionPolicyRuleArrayOutput() GetVpnConnectionsConnectionPolicyRuleArrayOutput {
	return i.ToGetVpnConnectionsConnectionPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetVpnConnectionsConnectionPolicyRuleArray) ToGetVpnConnectionsConnectionPolicyRuleArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnConnectionsConnectionPolicyRuleArrayOutput)
}

type GetVpnConnectionsConnectionPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsConnectionPolicyRule)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionPolicyRuleOutput) ToGetVpnConnectionsConnectionPolicyRuleOutput() GetVpnConnectionsConnectionPolicyRuleOutput {
	return o
}

func (o GetVpnConnectionsConnectionPolicyRuleOutput) ToGetVpnConnectionsConnectionPolicyRuleOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionPolicyRuleOutput {
	return o
}

func (o GetVpnConnectionsConnectionPolicyRuleOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionPolicyRule) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

func (o GetVpnConnectionsConnectionPolicyRuleOutput) RuleIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionPolicyRule) int { return v.RuleIndex }).(pulumi.IntOutput)
}

func (o GetVpnConnectionsConnectionPolicyRuleOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsConnectionPolicyRule) string { return v.Source }).(pulumi.StringOutput)
}

type GetVpnConnectionsConnectionPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsConnectionPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnConnectionsConnectionPolicyRule)(nil)).Elem()
}

func (o GetVpnConnectionsConnectionPolicyRuleArrayOutput) ToGetVpnConnectionsConnectionPolicyRuleArrayOutput() GetVpnConnectionsConnectionPolicyRuleArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionPolicyRuleArrayOutput) ToGetVpnConnectionsConnectionPolicyRuleArrayOutputWithContext(ctx context.Context) GetVpnConnectionsConnectionPolicyRuleArrayOutput {
	return o
}

func (o GetVpnConnectionsConnectionPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetVpnConnectionsConnectionPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnConnectionsConnectionPolicyRule {
		return vs[0].([]GetVpnConnectionsConnectionPolicyRule)[vs[1].(int)]
	}).(GetVpnConnectionsConnectionPolicyRuleOutput)
}

type GetVpnCustomerGatewaysCustomerGateway struct {
	Asn            int                                                  `pulumi:"asn"`
	CaCertificates []GetVpnCustomerGatewaysCustomerGatewayCaCertificate `pulumi:"caCertificates"`
	CreatedAt      string                                               `pulumi:"createdAt"`
	Id             string                                               `pulumi:"id"`
	IdType         string                                               `pulumi:"idType"`
	IdValue        string                                               `pulumi:"idValue"`
	Ip             string                                               `pulumi:"ip"`
	Name           string                                               `pulumi:"name"`
	RouteMode      string                                               `pulumi:"routeMode"`
	UpdatedAt      string                                               `pulumi:"updatedAt"`
}

// GetVpnCustomerGatewaysCustomerGatewayInput is an input type that accepts GetVpnCustomerGatewaysCustomerGatewayArgs and GetVpnCustomerGatewaysCustomerGatewayOutput values.
// You can construct a concrete instance of `GetVpnCustomerGatewaysCustomerGatewayInput` via:
//
//	GetVpnCustomerGatewaysCustomerGatewayArgs{...}
type GetVpnCustomerGatewaysCustomerGatewayInput interface {
	pulumi.Input

	ToGetVpnCustomerGatewaysCustomerGatewayOutput() GetVpnCustomerGatewaysCustomerGatewayOutput
	ToGetVpnCustomerGatewaysCustomerGatewayOutputWithContext(context.Context) GetVpnCustomerGatewaysCustomerGatewayOutput
}

type GetVpnCustomerGatewaysCustomerGatewayArgs struct {
	Asn            pulumi.IntInput                                              `pulumi:"asn"`
	CaCertificates GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayInput `pulumi:"caCertificates"`
	CreatedAt      pulumi.StringInput                                           `pulumi:"createdAt"`
	Id             pulumi.StringInput                                           `pulumi:"id"`
	IdType         pulumi.StringInput                                           `pulumi:"idType"`
	IdValue        pulumi.StringInput                                           `pulumi:"idValue"`
	Ip             pulumi.StringInput                                           `pulumi:"ip"`
	Name           pulumi.StringInput                                           `pulumi:"name"`
	RouteMode      pulumi.StringInput                                           `pulumi:"routeMode"`
	UpdatedAt      pulumi.StringInput                                           `pulumi:"updatedAt"`
}

func (GetVpnCustomerGatewaysCustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGateway)(nil)).Elem()
}

func (i GetVpnCustomerGatewaysCustomerGatewayArgs) ToGetVpnCustomerGatewaysCustomerGatewayOutput() GetVpnCustomerGatewaysCustomerGatewayOutput {
	return i.ToGetVpnCustomerGatewaysCustomerGatewayOutputWithContext(context.Background())
}

func (i GetVpnCustomerGatewaysCustomerGatewayArgs) ToGetVpnCustomerGatewaysCustomerGatewayOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnCustomerGatewaysCustomerGatewayOutput)
}

// GetVpnCustomerGatewaysCustomerGatewayArrayInput is an input type that accepts GetVpnCustomerGatewaysCustomerGatewayArray and GetVpnCustomerGatewaysCustomerGatewayArrayOutput values.
// You can construct a concrete instance of `GetVpnCustomerGatewaysCustomerGatewayArrayInput` via:
//
//	GetVpnCustomerGatewaysCustomerGatewayArray{ GetVpnCustomerGatewaysCustomerGatewayArgs{...} }
type GetVpnCustomerGatewaysCustomerGatewayArrayInput interface {
	pulumi.Input

	ToGetVpnCustomerGatewaysCustomerGatewayArrayOutput() GetVpnCustomerGatewaysCustomerGatewayArrayOutput
	ToGetVpnCustomerGatewaysCustomerGatewayArrayOutputWithContext(context.Context) GetVpnCustomerGatewaysCustomerGatewayArrayOutput
}

type GetVpnCustomerGatewaysCustomerGatewayArray []GetVpnCustomerGatewaysCustomerGatewayInput

func (GetVpnCustomerGatewaysCustomerGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnCustomerGatewaysCustomerGateway)(nil)).Elem()
}

func (i GetVpnCustomerGatewaysCustomerGatewayArray) ToGetVpnCustomerGatewaysCustomerGatewayArrayOutput() GetVpnCustomerGatewaysCustomerGatewayArrayOutput {
	return i.ToGetVpnCustomerGatewaysCustomerGatewayArrayOutputWithContext(context.Background())
}

func (i GetVpnCustomerGatewaysCustomerGatewayArray) ToGetVpnCustomerGatewaysCustomerGatewayArrayOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnCustomerGatewaysCustomerGatewayArrayOutput)
}

type GetVpnCustomerGatewaysCustomerGatewayOutput struct{ *pulumi.OutputState }

func (GetVpnCustomerGatewaysCustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGateway)(nil)).Elem()
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) ToGetVpnCustomerGatewaysCustomerGatewayOutput() GetVpnCustomerGatewaysCustomerGatewayOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) ToGetVpnCustomerGatewaysCustomerGatewayOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) int { return v.Asn }).(pulumi.IntOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) CaCertificates() GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) []GetVpnCustomerGatewaysCustomerGatewayCaCertificate {
		return v.CaCertificates
	}).(GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) IdType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.IdType }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) IdValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.IdValue }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) RouteMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.RouteMode }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGateway) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetVpnCustomerGatewaysCustomerGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetVpnCustomerGatewaysCustomerGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnCustomerGatewaysCustomerGateway)(nil)).Elem()
}

func (o GetVpnCustomerGatewaysCustomerGatewayArrayOutput) ToGetVpnCustomerGatewaysCustomerGatewayArrayOutput() GetVpnCustomerGatewaysCustomerGatewayArrayOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayArrayOutput) ToGetVpnCustomerGatewaysCustomerGatewayArrayOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayArrayOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayArrayOutput) Index(i pulumi.IntInput) GetVpnCustomerGatewaysCustomerGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnCustomerGatewaysCustomerGateway {
		return vs[0].([]GetVpnCustomerGatewaysCustomerGateway)[vs[1].(int)]
	}).(GetVpnCustomerGatewaysCustomerGatewayOutput)
}

type GetVpnCustomerGatewaysCustomerGatewayCaCertificate struct {
	ExpireTime         string `pulumi:"expireTime"`
	IsUpdatable        bool   `pulumi:"isUpdatable"`
	Issuer             string `pulumi:"issuer"`
	SerialNumber       string `pulumi:"serialNumber"`
	SignatureAlgorithm string `pulumi:"signatureAlgorithm"`
	Subject            string `pulumi:"subject"`
}

// GetVpnCustomerGatewaysCustomerGatewayCaCertificateInput is an input type that accepts GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs and GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput values.
// You can construct a concrete instance of `GetVpnCustomerGatewaysCustomerGatewayCaCertificateInput` via:
//
//	GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs{...}
type GetVpnCustomerGatewaysCustomerGatewayCaCertificateInput interface {
	pulumi.Input

	ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput() GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput
	ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateOutputWithContext(context.Context) GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput
}

type GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs struct {
	ExpireTime         pulumi.StringInput `pulumi:"expireTime"`
	IsUpdatable        pulumi.BoolInput   `pulumi:"isUpdatable"`
	Issuer             pulumi.StringInput `pulumi:"issuer"`
	SerialNumber       pulumi.StringInput `pulumi:"serialNumber"`
	SignatureAlgorithm pulumi.StringInput `pulumi:"signatureAlgorithm"`
	Subject            pulumi.StringInput `pulumi:"subject"`
}

func (GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGatewayCaCertificate)(nil)).Elem()
}

func (i GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput() GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput {
	return i.ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateOutputWithContext(context.Background())
}

func (i GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput)
}

// GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayInput is an input type that accepts GetVpnCustomerGatewaysCustomerGatewayCaCertificateArray and GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayInput` via:
//
//	GetVpnCustomerGatewaysCustomerGatewayCaCertificateArray{ GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs{...} }
type GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayInput interface {
	pulumi.Input

	ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput() GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput
	ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutputWithContext(context.Context) GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput
}

type GetVpnCustomerGatewaysCustomerGatewayCaCertificateArray []GetVpnCustomerGatewaysCustomerGatewayCaCertificateInput

func (GetVpnCustomerGatewaysCustomerGatewayCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnCustomerGatewaysCustomerGatewayCaCertificate)(nil)).Elem()
}

func (i GetVpnCustomerGatewaysCustomerGatewayCaCertificateArray) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput() GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput {
	return i.ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetVpnCustomerGatewaysCustomerGatewayCaCertificateArray) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput)
}

type GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput struct{ *pulumi.OutputState }

func (GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGatewayCaCertificate)(nil)).Elem()
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput() GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGatewayCaCertificate) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) IsUpdatable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGatewayCaCertificate) bool { return v.IsUpdatable }).(pulumi.BoolOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGatewayCaCertificate) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGatewayCaCertificate) string { return v.SerialNumber }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGatewayCaCertificate) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysCustomerGatewayCaCertificate) string { return v.Subject }).(pulumi.StringOutput)
}

type GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnCustomerGatewaysCustomerGatewayCaCertificate)(nil)).Elem()
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput() GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput) ToGetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput {
	return o
}

func (o GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput) Index(i pulumi.IntInput) GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnCustomerGatewaysCustomerGatewayCaCertificate {
		return vs[0].([]GetVpnCustomerGatewaysCustomerGatewayCaCertificate)[vs[1].(int)]
	}).(GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput)
}

type GetVpnGatewaysGateway struct {
	// The list of private access IPs.
	AccessPrivateIps []string `pulumi:"accessPrivateIps"`
	// The ID of the access subnet.
	AccessSubnetId string `pulumi:"accessSubnetId"`
	// The ID of the access VPC.
	AccessVpcId string `pulumi:"accessVpcId"`
	// The attachment type.
	AttachmentType string `pulumi:"attachmentType"`
	// The availability zone IDs.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The ASN number of BGP
	BgpAsn int `pulumi:"bgpAsn"`
	// The VPC network segment used by the VPN gateway
	ConnectSubnet string `pulumi:"connectSubnet"`
	// The max number of connections.
	ConnectionNumber int `pulumi:"connectionNumber"`
	// The create time.
	CreatedAt string                     `pulumi:"createdAt"`
	Eips      []GetVpnGatewaysGatewayEip `pulumi:"eips"`
	// The enterprise project ID
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The ER attachment ID.
	ErAttachmentId string `pulumi:"erAttachmentId"`
	// The ID of the ER to which the VPN gateway is connected.
	ErId string `pulumi:"erId"`
	// The flavor of the VPN gateway.
	Flavor string `pulumi:"flavor"`
	// The HA mode.
	HaMode string `pulumi:"haMode"`
	// The ID of the gateway
	Id string `pulumi:"id"`
	// The local subnets.
	LocalSubnets []string `pulumi:"localSubnets"`
	// The name of the gateway.
	Name string `pulumi:"name"`
	// The network type of the gateway.
	NetworkType string `pulumi:"networkType"`
	// The status of the gateway.
	Status string `pulumi:"status"`
	// The update time.
	UpdatedAt string `pulumi:"updatedAt"`
	// The number of used connection groups.
	UsedConnectionGroup int `pulumi:"usedConnectionGroup"`
	// The number of used connections.
	UsedConnectionNumber int `pulumi:"usedConnectionNumber"`
	// The ID of the VPC to which the VPN gateway is connected.
	VpcId string `pulumi:"vpcId"`
}

// GetVpnGatewaysGatewayInput is an input type that accepts GetVpnGatewaysGatewayArgs and GetVpnGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetVpnGatewaysGatewayInput` via:
//
//	GetVpnGatewaysGatewayArgs{...}
type GetVpnGatewaysGatewayInput interface {
	pulumi.Input

	ToGetVpnGatewaysGatewayOutput() GetVpnGatewaysGatewayOutput
	ToGetVpnGatewaysGatewayOutputWithContext(context.Context) GetVpnGatewaysGatewayOutput
}

type GetVpnGatewaysGatewayArgs struct {
	// The list of private access IPs.
	AccessPrivateIps pulumi.StringArrayInput `pulumi:"accessPrivateIps"`
	// The ID of the access subnet.
	AccessSubnetId pulumi.StringInput `pulumi:"accessSubnetId"`
	// The ID of the access VPC.
	AccessVpcId pulumi.StringInput `pulumi:"accessVpcId"`
	// The attachment type.
	AttachmentType pulumi.StringInput `pulumi:"attachmentType"`
	// The availability zone IDs.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The ASN number of BGP
	BgpAsn pulumi.IntInput `pulumi:"bgpAsn"`
	// The VPC network segment used by the VPN gateway
	ConnectSubnet pulumi.StringInput `pulumi:"connectSubnet"`
	// The max number of connections.
	ConnectionNumber pulumi.IntInput `pulumi:"connectionNumber"`
	// The create time.
	CreatedAt pulumi.StringInput                 `pulumi:"createdAt"`
	Eips      GetVpnGatewaysGatewayEipArrayInput `pulumi:"eips"`
	// The enterprise project ID
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The ER attachment ID.
	ErAttachmentId pulumi.StringInput `pulumi:"erAttachmentId"`
	// The ID of the ER to which the VPN gateway is connected.
	ErId pulumi.StringInput `pulumi:"erId"`
	// The flavor of the VPN gateway.
	Flavor pulumi.StringInput `pulumi:"flavor"`
	// The HA mode.
	HaMode pulumi.StringInput `pulumi:"haMode"`
	// The ID of the gateway
	Id pulumi.StringInput `pulumi:"id"`
	// The local subnets.
	LocalSubnets pulumi.StringArrayInput `pulumi:"localSubnets"`
	// The name of the gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The network type of the gateway.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The status of the gateway.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The number of used connection groups.
	UsedConnectionGroup pulumi.IntInput `pulumi:"usedConnectionGroup"`
	// The number of used connections.
	UsedConnectionNumber pulumi.IntInput `pulumi:"usedConnectionNumber"`
	// The ID of the VPC to which the VPN gateway is connected.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetVpnGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewaysGateway)(nil)).Elem()
}

func (i GetVpnGatewaysGatewayArgs) ToGetVpnGatewaysGatewayOutput() GetVpnGatewaysGatewayOutput {
	return i.ToGetVpnGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetVpnGatewaysGatewayArgs) ToGetVpnGatewaysGatewayOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewaysGatewayOutput)
}

// GetVpnGatewaysGatewayArrayInput is an input type that accepts GetVpnGatewaysGatewayArray and GetVpnGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetVpnGatewaysGatewayArrayInput` via:
//
//	GetVpnGatewaysGatewayArray{ GetVpnGatewaysGatewayArgs{...} }
type GetVpnGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetVpnGatewaysGatewayArrayOutput() GetVpnGatewaysGatewayArrayOutput
	ToGetVpnGatewaysGatewayArrayOutputWithContext(context.Context) GetVpnGatewaysGatewayArrayOutput
}

type GetVpnGatewaysGatewayArray []GetVpnGatewaysGatewayInput

func (GetVpnGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewaysGateway)(nil)).Elem()
}

func (i GetVpnGatewaysGatewayArray) ToGetVpnGatewaysGatewayArrayOutput() GetVpnGatewaysGatewayArrayOutput {
	return i.ToGetVpnGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewaysGatewayArray) ToGetVpnGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewaysGatewayArrayOutput)
}

type GetVpnGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewaysGateway)(nil)).Elem()
}

func (o GetVpnGatewaysGatewayOutput) ToGetVpnGatewaysGatewayOutput() GetVpnGatewaysGatewayOutput {
	return o
}

func (o GetVpnGatewaysGatewayOutput) ToGetVpnGatewaysGatewayOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayOutput {
	return o
}

// The list of private access IPs.
func (o GetVpnGatewaysGatewayOutput) AccessPrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) []string { return v.AccessPrivateIps }).(pulumi.StringArrayOutput)
}

// The ID of the access subnet.
func (o GetVpnGatewaysGatewayOutput) AccessSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.AccessSubnetId }).(pulumi.StringOutput)
}

// The ID of the access VPC.
func (o GetVpnGatewaysGatewayOutput) AccessVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.AccessVpcId }).(pulumi.StringOutput)
}

// The attachment type.
func (o GetVpnGatewaysGatewayOutput) AttachmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.AttachmentType }).(pulumi.StringOutput)
}

// The availability zone IDs.
func (o GetVpnGatewaysGatewayOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The ASN number of BGP
func (o GetVpnGatewaysGatewayOutput) BgpAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) int { return v.BgpAsn }).(pulumi.IntOutput)
}

// The VPC network segment used by the VPN gateway
func (o GetVpnGatewaysGatewayOutput) ConnectSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.ConnectSubnet }).(pulumi.StringOutput)
}

// The max number of connections.
func (o GetVpnGatewaysGatewayOutput) ConnectionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) int { return v.ConnectionNumber }).(pulumi.IntOutput)
}

// The create time.
func (o GetVpnGatewaysGatewayOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetVpnGatewaysGatewayOutput) Eips() GetVpnGatewaysGatewayEipArrayOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) []GetVpnGatewaysGatewayEip { return v.Eips }).(GetVpnGatewaysGatewayEipArrayOutput)
}

// The enterprise project ID
func (o GetVpnGatewaysGatewayOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The ER attachment ID.
func (o GetVpnGatewaysGatewayOutput) ErAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.ErAttachmentId }).(pulumi.StringOutput)
}

// The ID of the ER to which the VPN gateway is connected.
func (o GetVpnGatewaysGatewayOutput) ErId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.ErId }).(pulumi.StringOutput)
}

// The flavor of the VPN gateway.
func (o GetVpnGatewaysGatewayOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.Flavor }).(pulumi.StringOutput)
}

// The HA mode.
func (o GetVpnGatewaysGatewayOutput) HaMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.HaMode }).(pulumi.StringOutput)
}

// The ID of the gateway
func (o GetVpnGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The local subnets.
func (o GetVpnGatewaysGatewayOutput) LocalSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) []string { return v.LocalSubnets }).(pulumi.StringArrayOutput)
}

// The name of the gateway.
func (o GetVpnGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The network type of the gateway.
func (o GetVpnGatewaysGatewayOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The status of the gateway.
func (o GetVpnGatewaysGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.Status }).(pulumi.StringOutput)
}

// The update time.
func (o GetVpnGatewaysGatewayOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The number of used connection groups.
func (o GetVpnGatewaysGatewayOutput) UsedConnectionGroup() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) int { return v.UsedConnectionGroup }).(pulumi.IntOutput)
}

// The number of used connections.
func (o GetVpnGatewaysGatewayOutput) UsedConnectionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) int { return v.UsedConnectionNumber }).(pulumi.IntOutput)
}

// The ID of the VPC to which the VPN gateway is connected.
func (o GetVpnGatewaysGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetVpnGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewaysGateway)(nil)).Elem()
}

func (o GetVpnGatewaysGatewayArrayOutput) ToGetVpnGatewaysGatewayArrayOutput() GetVpnGatewaysGatewayArrayOutput {
	return o
}

func (o GetVpnGatewaysGatewayArrayOutput) ToGetVpnGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayArrayOutput {
	return o
}

func (o GetVpnGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetVpnGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewaysGateway {
		return vs[0].([]GetVpnGatewaysGateway)[vs[1].(int)]
	}).(GetVpnGatewaysGatewayOutput)
}

type GetVpnGatewaysGatewayEip struct {
	// The bandwidth billing info.
	BandwidthBillingInfo string `pulumi:"bandwidthBillingInfo"`
	// The bandwidth ID.
	BandwidthId string `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName string `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s.
	BandwidthSize int `pulumi:"bandwidthSize"`
	// The billing info.
	BillingInfo string `pulumi:"billingInfo"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode string `pulumi:"chargeMode"`
	// The public IP ID.
	Id string `pulumi:"id"`
	// The public IP address.
	IpAddress string `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion int `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type string `pulumi:"type"`
}

// GetVpnGatewaysGatewayEipInput is an input type that accepts GetVpnGatewaysGatewayEipArgs and GetVpnGatewaysGatewayEipOutput values.
// You can construct a concrete instance of `GetVpnGatewaysGatewayEipInput` via:
//
//	GetVpnGatewaysGatewayEipArgs{...}
type GetVpnGatewaysGatewayEipInput interface {
	pulumi.Input

	ToGetVpnGatewaysGatewayEipOutput() GetVpnGatewaysGatewayEipOutput
	ToGetVpnGatewaysGatewayEipOutputWithContext(context.Context) GetVpnGatewaysGatewayEipOutput
}

type GetVpnGatewaysGatewayEipArgs struct {
	// The bandwidth billing info.
	BandwidthBillingInfo pulumi.StringInput `pulumi:"bandwidthBillingInfo"`
	// The bandwidth ID.
	BandwidthId pulumi.StringInput `pulumi:"bandwidthId"`
	// The bandwidth name.
	BandwidthName pulumi.StringInput `pulumi:"bandwidthName"`
	// Bandwidth size in Mbit/s.
	BandwidthSize pulumi.IntInput `pulumi:"bandwidthSize"`
	// The billing info.
	BillingInfo pulumi.StringInput `pulumi:"billingInfo"`
	// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
	ChargeMode pulumi.StringInput `pulumi:"chargeMode"`
	// The public IP ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The public IP address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The public IP version.
	IpVersion pulumi.IntInput `pulumi:"ipVersion"`
	// The EIP type. The value can be **5_bgp** and **5_sbgp**.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetVpnGatewaysGatewayEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewaysGatewayEip)(nil)).Elem()
}

func (i GetVpnGatewaysGatewayEipArgs) ToGetVpnGatewaysGatewayEipOutput() GetVpnGatewaysGatewayEipOutput {
	return i.ToGetVpnGatewaysGatewayEipOutputWithContext(context.Background())
}

func (i GetVpnGatewaysGatewayEipArgs) ToGetVpnGatewaysGatewayEipOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewaysGatewayEipOutput)
}

// GetVpnGatewaysGatewayEipArrayInput is an input type that accepts GetVpnGatewaysGatewayEipArray and GetVpnGatewaysGatewayEipArrayOutput values.
// You can construct a concrete instance of `GetVpnGatewaysGatewayEipArrayInput` via:
//
//	GetVpnGatewaysGatewayEipArray{ GetVpnGatewaysGatewayEipArgs{...} }
type GetVpnGatewaysGatewayEipArrayInput interface {
	pulumi.Input

	ToGetVpnGatewaysGatewayEipArrayOutput() GetVpnGatewaysGatewayEipArrayOutput
	ToGetVpnGatewaysGatewayEipArrayOutputWithContext(context.Context) GetVpnGatewaysGatewayEipArrayOutput
}

type GetVpnGatewaysGatewayEipArray []GetVpnGatewaysGatewayEipInput

func (GetVpnGatewaysGatewayEipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewaysGatewayEip)(nil)).Elem()
}

func (i GetVpnGatewaysGatewayEipArray) ToGetVpnGatewaysGatewayEipArrayOutput() GetVpnGatewaysGatewayEipArrayOutput {
	return i.ToGetVpnGatewaysGatewayEipArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewaysGatewayEipArray) ToGetVpnGatewaysGatewayEipArrayOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayEipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewaysGatewayEipArrayOutput)
}

type GetVpnGatewaysGatewayEipOutput struct{ *pulumi.OutputState }

func (GetVpnGatewaysGatewayEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewaysGatewayEip)(nil)).Elem()
}

func (o GetVpnGatewaysGatewayEipOutput) ToGetVpnGatewaysGatewayEipOutput() GetVpnGatewaysGatewayEipOutput {
	return o
}

func (o GetVpnGatewaysGatewayEipOutput) ToGetVpnGatewaysGatewayEipOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayEipOutput {
	return o
}

// The bandwidth billing info.
func (o GetVpnGatewaysGatewayEipOutput) BandwidthBillingInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.BandwidthBillingInfo }).(pulumi.StringOutput)
}

// The bandwidth ID.
func (o GetVpnGatewaysGatewayEipOutput) BandwidthId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.BandwidthId }).(pulumi.StringOutput)
}

// The bandwidth name.
func (o GetVpnGatewaysGatewayEipOutput) BandwidthName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.BandwidthName }).(pulumi.StringOutput)
}

// Bandwidth size in Mbit/s.
func (o GetVpnGatewaysGatewayEipOutput) BandwidthSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) int { return v.BandwidthSize }).(pulumi.IntOutput)
}

// The billing info.
func (o GetVpnGatewaysGatewayEipOutput) BillingInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.BillingInfo }).(pulumi.StringOutput)
}

// The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.
func (o GetVpnGatewaysGatewayEipOutput) ChargeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.ChargeMode }).(pulumi.StringOutput)
}

// The public IP ID.
func (o GetVpnGatewaysGatewayEipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.Id }).(pulumi.StringOutput)
}

// The public IP address.
func (o GetVpnGatewaysGatewayEipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The public IP version.
func (o GetVpnGatewaysGatewayEipOutput) IpVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) int { return v.IpVersion }).(pulumi.IntOutput)
}

// The EIP type. The value can be **5_bgp** and **5_sbgp**.
func (o GetVpnGatewaysGatewayEipOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewaysGatewayEip) string { return v.Type }).(pulumi.StringOutput)
}

type GetVpnGatewaysGatewayEipArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewaysGatewayEipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewaysGatewayEip)(nil)).Elem()
}

func (o GetVpnGatewaysGatewayEipArrayOutput) ToGetVpnGatewaysGatewayEipArrayOutput() GetVpnGatewaysGatewayEipArrayOutput {
	return o
}

func (o GetVpnGatewaysGatewayEipArrayOutput) ToGetVpnGatewaysGatewayEipArrayOutputWithContext(ctx context.Context) GetVpnGatewaysGatewayEipArrayOutput {
	return o
}

func (o GetVpnGatewaysGatewayEipArrayOutput) Index(i pulumi.IntInput) GetVpnGatewaysGatewayEipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewaysGatewayEip {
		return vs[0].([]GetVpnGatewaysGatewayEip)[vs[1].(int)]
	}).(GetVpnGatewaysGatewayEipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleDiscoveryRuleInput)(nil)).Elem(), AomServiceDiscoveryRuleDiscoveryRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleDiscoveryRuleArrayInput)(nil)).Elem(), AomServiceDiscoveryRuleDiscoveryRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleLogPathRuleInput)(nil)).Elem(), AomServiceDiscoveryRuleLogPathRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleLogPathRuleArrayInput)(nil)).Elem(), AomServiceDiscoveryRuleLogPathRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesInput)(nil)).Elem(), AomServiceDiscoveryRuleNameRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesPtrInput)(nil)).Elem(), AomServiceDiscoveryRuleNameRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesApplicationNameRuleInput)(nil)).Elem(), AomServiceDiscoveryRuleNameRulesApplicationNameRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayInput)(nil)).Elem(), AomServiceDiscoveryRuleNameRulesApplicationNameRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesServiceNameRuleInput)(nil)).Elem(), AomServiceDiscoveryRuleNameRulesServiceNameRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayInput)(nil)).Elem(), AomServiceDiscoveryRuleNameRulesServiceNameRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiBackendParamInput)(nil)).Elem(), ApiGatewayApiBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiBackendParamArrayInput)(nil)).Elem(), ApiGatewayApiBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphInput)(nil)).Elem(), ApiGatewayApiFuncGraphArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphPtrInput)(nil)).Elem(), ApiGatewayApiFuncGraphArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyInput)(nil)).Elem(), ApiGatewayApiFuncGraphPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyArrayInput)(nil)).Elem(), ApiGatewayApiFuncGraphPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyBackendParamInput)(nil)).Elem(), ApiGatewayApiFuncGraphPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyBackendParamArrayInput)(nil)).Elem(), ApiGatewayApiFuncGraphPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyConditionInput)(nil)).Elem(), ApiGatewayApiFuncGraphPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiFuncGraphPolicyConditionArrayInput)(nil)).Elem(), ApiGatewayApiFuncGraphPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockInput)(nil)).Elem(), ApiGatewayApiMockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockPtrInput)(nil)).Elem(), ApiGatewayApiMockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockPolicyInput)(nil)).Elem(), ApiGatewayApiMockPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockPolicyArrayInput)(nil)).Elem(), ApiGatewayApiMockPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockPolicyBackendParamInput)(nil)).Elem(), ApiGatewayApiMockPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockPolicyBackendParamArrayInput)(nil)).Elem(), ApiGatewayApiMockPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockPolicyConditionInput)(nil)).Elem(), ApiGatewayApiMockPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMockPolicyConditionArrayInput)(nil)).Elem(), ApiGatewayApiMockPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiRequestParamInput)(nil)).Elem(), ApiGatewayApiRequestParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiRequestParamArrayInput)(nil)).Elem(), ApiGatewayApiRequestParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebInput)(nil)).Elem(), ApiGatewayApiWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebPtrInput)(nil)).Elem(), ApiGatewayApiWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebPolicyInput)(nil)).Elem(), ApiGatewayApiWebPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebPolicyArrayInput)(nil)).Elem(), ApiGatewayApiWebPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebPolicyBackendParamInput)(nil)).Elem(), ApiGatewayApiWebPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebPolicyBackendParamArrayInput)(nil)).Elem(), ApiGatewayApiWebPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebPolicyConditionInput)(nil)).Elem(), ApiGatewayApiWebPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiWebPolicyConditionArrayInput)(nil)).Elem(), ApiGatewayApiWebPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupEnvironmentInput)(nil)).Elem(), ApiGatewayGroupEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupEnvironmentArrayInput)(nil)).Elem(), ApiGatewayGroupEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupEnvironmentVariableInput)(nil)).Elem(), ApiGatewayGroupEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupEnvironmentVariableArrayInput)(nil)).Elem(), ApiGatewayGroupEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupUrlDomainInput)(nil)).Elem(), ApiGatewayGroupUrlDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGroupUrlDomainArrayInput)(nil)).Elem(), ApiGatewayGroupUrlDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiBackendParamInput)(nil)).Elem(), ApigApiBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiBackendParamArrayInput)(nil)).Elem(), ApigApiBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphInput)(nil)).Elem(), ApigApiFuncGraphArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphPtrInput)(nil)).Elem(), ApigApiFuncGraphArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphPolicyInput)(nil)).Elem(), ApigApiFuncGraphPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphPolicyArrayInput)(nil)).Elem(), ApigApiFuncGraphPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphPolicyBackendParamInput)(nil)).Elem(), ApigApiFuncGraphPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphPolicyBackendParamArrayInput)(nil)).Elem(), ApigApiFuncGraphPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphPolicyConditionInput)(nil)).Elem(), ApigApiFuncGraphPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiFuncGraphPolicyConditionArrayInput)(nil)).Elem(), ApigApiFuncGraphPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockInput)(nil)).Elem(), ApigApiMockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockPtrInput)(nil)).Elem(), ApigApiMockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockPolicyInput)(nil)).Elem(), ApigApiMockPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockPolicyArrayInput)(nil)).Elem(), ApigApiMockPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockPolicyBackendParamInput)(nil)).Elem(), ApigApiMockPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockPolicyBackendParamArrayInput)(nil)).Elem(), ApigApiMockPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockPolicyConditionInput)(nil)).Elem(), ApigApiMockPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiMockPolicyConditionArrayInput)(nil)).Elem(), ApigApiMockPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiPublishmentHistoryInput)(nil)).Elem(), ApigApiPublishmentHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiPublishmentHistoryArrayInput)(nil)).Elem(), ApigApiPublishmentHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiRequestParamInput)(nil)).Elem(), ApigApiRequestParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiRequestParamArrayInput)(nil)).Elem(), ApigApiRequestParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebInput)(nil)).Elem(), ApigApiWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebPtrInput)(nil)).Elem(), ApigApiWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebPolicyInput)(nil)).Elem(), ApigApiWebPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebPolicyArrayInput)(nil)).Elem(), ApigApiWebPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebPolicyBackendParamInput)(nil)).Elem(), ApigApiWebPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebPolicyBackendParamArrayInput)(nil)).Elem(), ApigApiWebPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebPolicyConditionInput)(nil)).Elem(), ApigApiWebPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiWebPolicyConditionArrayInput)(nil)).Elem(), ApigApiWebPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationQuotaAssociateApplicationInput)(nil)).Elem(), ApigApplicationQuotaAssociateApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationQuotaAssociateApplicationArrayInput)(nil)).Elem(), ApigApplicationQuotaAssociateApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelHealthCheckInput)(nil)).Elem(), ApigChannelHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelHealthCheckPtrInput)(nil)).Elem(), ApigChannelHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMemberInput)(nil)).Elem(), ApigChannelMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMemberArrayInput)(nil)).Elem(), ApigChannelMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMemberGroupInput)(nil)).Elem(), ApigChannelMemberGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMemberGroupArrayInput)(nil)).Elem(), ApigChannelMemberGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMicroserviceInput)(nil)).Elem(), ApigChannelMicroserviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMicroservicePtrInput)(nil)).Elem(), ApigChannelMicroserviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMicroserviceCceConfigInput)(nil)).Elem(), ApigChannelMicroserviceCceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMicroserviceCceConfigPtrInput)(nil)).Elem(), ApigChannelMicroserviceCceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMicroserviceCseConfigInput)(nil)).Elem(), ApigChannelMicroserviceCseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigChannelMicroserviceCseConfigPtrInput)(nil)).Elem(), ApigChannelMicroserviceCseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigCustomAuthorizerIdentityInput)(nil)).Elem(), ApigCustomAuthorizerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigCustomAuthorizerIdentityArrayInput)(nil)).Elem(), ApigCustomAuthorizerIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigGroupEnvironmentInput)(nil)).Elem(), ApigGroupEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigGroupEnvironmentArrayInput)(nil)).Elem(), ApigGroupEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigGroupEnvironmentVariableInput)(nil)).Elem(), ApigGroupEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigGroupEnvironmentVariableArrayInput)(nil)).Elem(), ApigGroupEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigGroupUrlDomainInput)(nil)).Elem(), ApigGroupUrlDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigGroupUrlDomainArrayInput)(nil)).Elem(), ApigGroupUrlDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigInstanceCustomIngressPortInput)(nil)).Elem(), ApigInstanceCustomIngressPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigInstanceCustomIngressPortArrayInput)(nil)).Elem(), ApigInstanceCustomIngressPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigResponseRuleInput)(nil)).Elem(), ApigResponseRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigResponseRuleArrayInput)(nil)).Elem(), ApigResponseRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigResponseRuleHeaderInput)(nil)).Elem(), ApigResponseRuleHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigResponseRuleHeaderArrayInput)(nil)).Elem(), ApigResponseRuleHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigThrottlingPolicyAppThrottleInput)(nil)).Elem(), ApigThrottlingPolicyAppThrottleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigThrottlingPolicyAppThrottleArrayInput)(nil)).Elem(), ApigThrottlingPolicyAppThrottleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigThrottlingPolicyUserThrottleInput)(nil)).Elem(), ApigThrottlingPolicyUserThrottleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigThrottlingPolicyUserThrottleArrayInput)(nil)).Elem(), ApigThrottlingPolicyUserThrottleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsBandwidthPolicyScalingPolicyActionInput)(nil)).Elem(), AsBandwidthPolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsBandwidthPolicyScalingPolicyActionPtrInput)(nil)).Elem(), AsBandwidthPolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsBandwidthPolicyScheduledPolicyInput)(nil)).Elem(), AsBandwidthPolicyScheduledPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsBandwidthPolicyScheduledPolicyPtrInput)(nil)).Elem(), AsBandwidthPolicyScheduledPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigInput)(nil)).Elem(), AsConfigurationInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPtrInput)(nil)).Elem(), AsConfigurationInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigDiskInput)(nil)).Elem(), AsConfigurationInstanceConfigDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigDiskArrayInput)(nil)).Elem(), AsConfigurationInstanceConfigDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPersonalityInput)(nil)).Elem(), AsConfigurationInstanceConfigPersonalityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPersonalityArrayInput)(nil)).Elem(), AsConfigurationInstanceConfigPersonalityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpInput)(nil)).Elem(), AsConfigurationInstanceConfigPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpPtrInput)(nil)).Elem(), AsConfigurationInstanceConfigPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEipInput)(nil)).Elem(), AsConfigurationInstanceConfigPublicIpEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEipPtrInput)(nil)).Elem(), AsConfigurationInstanceConfigPublicIpEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEipBandwidthInput)(nil)).Elem(), AsConfigurationInstanceConfigPublicIpEipBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsConfigurationInstanceConfigPublicIpEipBandwidthPtrInput)(nil)).Elem(), AsConfigurationInstanceConfigPublicIpEipBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupLbaasListenerInput)(nil)).Elem(), AsGroupLbaasListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupLbaasListenerArrayInput)(nil)).Elem(), AsGroupLbaasListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupNetworkInput)(nil)).Elem(), AsGroupNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupNetworkArrayInput)(nil)).Elem(), AsGroupNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupSecurityGroupInput)(nil)).Elem(), AsGroupSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsGroupSecurityGroupArrayInput)(nil)).Elem(), AsGroupSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsPolicyScalingPolicyActionInput)(nil)).Elem(), AsPolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsPolicyScalingPolicyActionPtrInput)(nil)).Elem(), AsPolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsPolicyScheduledPolicyInput)(nil)).Elem(), AsPolicyScheduledPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsPolicyScheduledPolicyPtrInput)(nil)).Elem(), AsPolicyScheduledPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrBackupShareMemberInput)(nil)).Elem(), CbrBackupShareMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrBackupShareMemberArrayInput)(nil)).Elem(), CbrBackupShareMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrCheckpointBackupInput)(nil)).Elem(), CbrCheckpointBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrCheckpointBackupArrayInput)(nil)).Elem(), CbrCheckpointBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrPolicyBackupCycleInput)(nil)).Elem(), CbrPolicyBackupCycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrPolicyBackupCyclePtrInput)(nil)).Elem(), CbrPolicyBackupCycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrPolicyLongTermRetentionInput)(nil)).Elem(), CbrPolicyLongTermRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrPolicyLongTermRetentionPtrInput)(nil)).Elem(), CbrPolicyLongTermRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrVaultPolicyInput)(nil)).Elem(), CbrVaultPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrVaultPolicyArrayInput)(nil)).Elem(), CbrVaultPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrVaultResourceInput)(nil)).Elem(), CbrVaultResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbrVaultResourceArrayInput)(nil)).Elem(), CbrVaultResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceAddonValuesInput)(nil)).Elem(), CceAddonValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceAddonValuesPtrInput)(nil)).Elem(), CceAddonValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterCertificateClusterInput)(nil)).Elem(), CceClusterCertificateClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterCertificateClusterArrayInput)(nil)).Elem(), CceClusterCertificateClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterCertificateUserInput)(nil)).Elem(), CceClusterCertificateUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterCertificateUserArrayInput)(nil)).Elem(), CceClusterCertificateUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterComponentConfigurationInput)(nil)).Elem(), CceClusterComponentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterComponentConfigurationArrayInput)(nil)).Elem(), CceClusterComponentConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterExtendParamInput)(nil)).Elem(), CceClusterExtendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterExtendParamArrayInput)(nil)).Elem(), CceClusterExtendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterMasterInput)(nil)).Elem(), CceClusterMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterMasterArrayInput)(nil)).Elem(), CceClusterMasterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachDataVolumeInput)(nil)).Elem(), CceNodeAttachDataVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachDataVolumeArrayInput)(nil)).Elem(), CceNodeAttachDataVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachHostnameConfigInput)(nil)).Elem(), CceNodeAttachHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachHostnameConfigPtrInput)(nil)).Elem(), CceNodeAttachHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachRootVolumeInput)(nil)).Elem(), CceNodeAttachRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachRootVolumeArrayInput)(nil)).Elem(), CceNodeAttachRootVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStorageInput)(nil)).Elem(), CceNodeAttachStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStoragePtrInput)(nil)).Elem(), CceNodeAttachStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStorageGroupInput)(nil)).Elem(), CceNodeAttachStorageGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStorageGroupArrayInput)(nil)).Elem(), CceNodeAttachStorageGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStorageGroupVirtualSpaceInput)(nil)).Elem(), CceNodeAttachStorageGroupVirtualSpaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStorageGroupVirtualSpaceArrayInput)(nil)).Elem(), CceNodeAttachStorageGroupVirtualSpaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStorageSelectorInput)(nil)).Elem(), CceNodeAttachStorageSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachStorageSelectorArrayInput)(nil)).Elem(), CceNodeAttachStorageSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachTaintInput)(nil)).Elem(), CceNodeAttachTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeAttachTaintArrayInput)(nil)).Elem(), CceNodeAttachTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeDataVolumeInput)(nil)).Elem(), CceNodeDataVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeDataVolumeArrayInput)(nil)).Elem(), CceNodeDataVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeExtendParamsInput)(nil)).Elem(), CceNodeExtendParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeExtendParamsPtrInput)(nil)).Elem(), CceNodeExtendParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeExtensionNicInput)(nil)).Elem(), CceNodeExtensionNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeExtensionNicArrayInput)(nil)).Elem(), CceNodeExtensionNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeHostnameConfigInput)(nil)).Elem(), CceNodeHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeHostnameConfigPtrInput)(nil)).Elem(), CceNodeHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolDataVolumeInput)(nil)).Elem(), CceNodePoolDataVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolDataVolumeArrayInput)(nil)).Elem(), CceNodePoolDataVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtendParamsInput)(nil)).Elem(), CceNodePoolExtendParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtendParamsPtrInput)(nil)).Elem(), CceNodePoolExtendParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupArrayInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupMetadataInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupMetadataPtrInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecPtrInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecAutoscalingInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupSpecAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecAutoscalingPtrInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupSpecAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrInput)(nil)).Elem(), CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolHostnameConfigInput)(nil)).Elem(), CceNodePoolHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolHostnameConfigPtrInput)(nil)).Elem(), CceNodePoolHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolRootVolumeInput)(nil)).Elem(), CceNodePoolRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolRootVolumePtrInput)(nil)).Elem(), CceNodePoolRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStorageInput)(nil)).Elem(), CceNodePoolStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStoragePtrInput)(nil)).Elem(), CceNodePoolStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStorageGroupInput)(nil)).Elem(), CceNodePoolStorageGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStorageGroupArrayInput)(nil)).Elem(), CceNodePoolStorageGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStorageGroupVirtualSpaceInput)(nil)).Elem(), CceNodePoolStorageGroupVirtualSpaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStorageGroupVirtualSpaceArrayInput)(nil)).Elem(), CceNodePoolStorageGroupVirtualSpaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStorageSelectorInput)(nil)).Elem(), CceNodePoolStorageSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolStorageSelectorArrayInput)(nil)).Elem(), CceNodePoolStorageSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolTaintInput)(nil)).Elem(), CceNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolTaintArrayInput)(nil)).Elem(), CceNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeRootVolumeInput)(nil)).Elem(), CceNodeRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeRootVolumePtrInput)(nil)).Elem(), CceNodeRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStorageInput)(nil)).Elem(), CceNodeStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStoragePtrInput)(nil)).Elem(), CceNodeStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStorageGroupInput)(nil)).Elem(), CceNodeStorageGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStorageGroupArrayInput)(nil)).Elem(), CceNodeStorageGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStorageGroupVirtualSpaceInput)(nil)).Elem(), CceNodeStorageGroupVirtualSpaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStorageGroupVirtualSpaceArrayInput)(nil)).Elem(), CceNodeStorageGroupVirtualSpaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStorageSelectorInput)(nil)).Elem(), CceNodeStorageSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeStorageSelectorArrayInput)(nil)).Elem(), CceNodeStorageSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeTaintInput)(nil)).Elem(), CceNodeTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeTaintArrayInput)(nil)).Elem(), CceNodeTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CdmClusterInstanceInput)(nil)).Elem(), CdmClusterInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CdmClusterInstanceArrayInput)(nil)).Elem(), CdmClusterInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleAlarmActionInput)(nil)).Elem(), CesAlarmruleAlarmActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleAlarmActionArrayInput)(nil)).Elem(), CesAlarmruleAlarmActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleConditionInput)(nil)).Elem(), CesAlarmruleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleConditionPtrInput)(nil)).Elem(), CesAlarmruleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleInsufficientdataActionInput)(nil)).Elem(), CesAlarmruleInsufficientdataActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleInsufficientdataActionArrayInput)(nil)).Elem(), CesAlarmruleInsufficientdataActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleMetricInput)(nil)).Elem(), CesAlarmruleMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleMetricPtrInput)(nil)).Elem(), CesAlarmruleMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleMetricDimensionInput)(nil)).Elem(), CesAlarmruleMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleMetricDimensionArrayInput)(nil)).Elem(), CesAlarmruleMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleOkActionInput)(nil)).Elem(), CesAlarmruleOkActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CesAlarmruleOkActionArrayInput)(nil)).Elem(), CesAlarmruleOkActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceBandwidthInput)(nil)).Elem(), ComputeInstanceBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceBandwidthPtrInput)(nil)).Elem(), ComputeInstanceBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceDataDiskInput)(nil)).Elem(), ComputeInstanceDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceDataDiskArrayInput)(nil)).Elem(), ComputeInstanceDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceNetworkInput)(nil)).Elem(), ComputeInstanceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceNetworkArrayInput)(nil)).Elem(), ComputeInstanceNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceSchedulerHintInput)(nil)).Elem(), ComputeInstanceSchedulerHintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceSchedulerHintArrayInput)(nil)).Elem(), ComputeInstanceSchedulerHintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceVolumeAttachedInput)(nil)).Elem(), ComputeInstanceVolumeAttachedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceVolumeAttachedArrayInput)(nil)).Elem(), ComputeInstanceVolumeAttachedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterBackupStrategyInput)(nil)).Elem(), CssClusterBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterBackupStrategyPtrInput)(nil)).Elem(), CssClusterBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeInput)(nil)).Elem(), CssClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeArrayInput)(nil)).Elem(), CssClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeConfigInput)(nil)).Elem(), CssClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeConfigPtrInput)(nil)).Elem(), CssClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeConfigNetworkInfoInput)(nil)).Elem(), CssClusterNodeConfigNetworkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeConfigNetworkInfoPtrInput)(nil)).Elem(), CssClusterNodeConfigNetworkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeConfigVolumeInput)(nil)).Elem(), CssClusterNodeConfigVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssClusterNodeConfigVolumePtrInput)(nil)).Elem(), CssClusterNodeConfigVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CtsNotificationFilterInput)(nil)).Elem(), CtsNotificationFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CtsNotificationFilterPtrInput)(nil)).Elem(), CtsNotificationFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CtsNotificationOperationInput)(nil)).Elem(), CtsNotificationOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CtsNotificationOperationArrayInput)(nil)).Elem(), CtsNotificationOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CtsNotificationOperationUserInput)(nil)).Elem(), CtsNotificationOperationUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CtsNotificationOperationUserArrayInput)(nil)).Elem(), CtsNotificationOperationUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceBackupPolicyInput)(nil)).Elem(), DcsInstanceBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceBackupPolicyPtrInput)(nil)).Elem(), DcsInstanceBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceBandwidthInfoInput)(nil)).Elem(), DcsInstanceBandwidthInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceBandwidthInfoArrayInput)(nil)).Elem(), DcsInstanceBandwidthInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceParameterInput)(nil)).Elem(), DcsInstanceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceParameterArrayInput)(nil)).Elem(), DcsInstanceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceWhitelistInput)(nil)).Elem(), DcsInstanceWhitelistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsInstanceWhitelistArrayInput)(nil)).Elem(), DcsInstanceWhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsParametersConfigurationParameterInput)(nil)).Elem(), DcsParametersConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsParametersConfigurationParameterArrayInput)(nil)).Elem(), DcsParametersConfigurationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsRestoreRestoreRecordInput)(nil)).Elem(), DcsRestoreRestoreRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DcsRestoreRestoreRecordArrayInput)(nil)).Elem(), DcsRestoreRestoreRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceBackupStrategyInput)(nil)).Elem(), DdsInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceBackupStrategyPtrInput)(nil)).Elem(), DdsInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceConfigurationInput)(nil)).Elem(), DdsInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceConfigurationArrayInput)(nil)).Elem(), DdsInstanceConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceDatastoreInput)(nil)).Elem(), DdsInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceDatastorePtrInput)(nil)).Elem(), DdsInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceFlavorInput)(nil)).Elem(), DdsInstanceFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceFlavorArrayInput)(nil)).Elem(), DdsInstanceFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceGroupInput)(nil)).Elem(), DdsInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceGroupArrayInput)(nil)).Elem(), DdsInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceGroupNodeInput)(nil)).Elem(), DdsInstanceGroupNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceGroupNodeArrayInput)(nil)).Elem(), DdsInstanceGroupNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceNodeInput)(nil)).Elem(), DdsInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsInstanceNodeArrayInput)(nil)).Elem(), DdsInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisStreamPartitionInput)(nil)).Elem(), DisStreamPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisStreamPartitionArrayInput)(nil)).Elem(), DisStreamPartitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliQueueScalingPolicyInput)(nil)).Elem(), DliQueueScalingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliQueueScalingPolicyArrayInput)(nil)).Elem(), DliQueueScalingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliQueueSparkDriverInput)(nil)).Elem(), DliQueueSparkDriverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliQueueSparkDriverPtrInput)(nil)).Elem(), DliQueueSparkDriverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliSparkJobDependentPackageInput)(nil)).Elem(), DliSparkJobDependentPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliSparkJobDependentPackageArrayInput)(nil)).Elem(), DliSparkJobDependentPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliSparkJobDependentPackagePackageInput)(nil)).Elem(), DliSparkJobDependentPackagePackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliSparkJobDependentPackagePackageArrayInput)(nil)).Elem(), DliSparkJobDependentPackagePackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstanceCrossVpcAccessInput)(nil)).Elem(), DmsKafkaInstanceCrossVpcAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstanceCrossVpcAccessArrayInput)(nil)).Elem(), DmsKafkaInstanceCrossVpcAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstanceParameterInput)(nil)).Elem(), DmsKafkaInstanceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstanceParameterArrayInput)(nil)).Elem(), DmsKafkaInstanceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstancePortProtocolInput)(nil)).Elem(), DmsKafkaInstancePortProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstancePortProtocolArrayInput)(nil)).Elem(), DmsKafkaInstancePortProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaMessageProducePropertyListInput)(nil)).Elem(), DmsKafkaMessageProducePropertyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaMessageProducePropertyListArrayInput)(nil)).Elem(), DmsKafkaMessageProducePropertyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaPermissionsPolicyInput)(nil)).Elem(), DmsKafkaPermissionsPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaPermissionsPolicyArrayInput)(nil)).Elem(), DmsKafkaPermissionsPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaTopicConfigInput)(nil)).Elem(), DmsKafkaTopicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaTopicConfigArrayInput)(nil)).Elem(), DmsKafkaTopicConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsZoneRouterInput)(nil)).Elem(), DnsZoneRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsZoneRouterArrayInput)(nil)).Elem(), DnsZoneRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobDestinationDbInput)(nil)).Elem(), DrsJobDestinationDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobDestinationDbPtrInput)(nil)).Elem(), DrsJobDestinationDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobLimitSpeedInput)(nil)).Elem(), DrsJobLimitSpeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobLimitSpeedArrayInput)(nil)).Elem(), DrsJobLimitSpeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobSourceDbInput)(nil)).Elem(), DrsJobSourceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobSourceDbPtrInput)(nil)).Elem(), DrsJobSourceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterElbInput)(nil)).Elem(), DwsClusterElbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterElbArrayInput)(nil)).Elem(), DwsClusterElbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterEndpointInput)(nil)).Elem(), DwsClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterEndpointArrayInput)(nil)).Elem(), DwsClusterEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterMaintainWindowInput)(nil)).Elem(), DwsClusterMaintainWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterMaintainWindowArrayInput)(nil)).Elem(), DwsClusterMaintainWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterPublicEndpointInput)(nil)).Elem(), DwsClusterPublicEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterPublicEndpointArrayInput)(nil)).Elem(), DwsClusterPublicEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterPublicIpInput)(nil)).Elem(), DwsClusterPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterPublicIpPtrInput)(nil)).Elem(), DwsClusterPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterVolumeInput)(nil)).Elem(), DwsClusterVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DwsClusterVolumePtrInput)(nil)).Elem(), DwsClusterVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbIpgroupIpListInput)(nil)).Elem(), ElbIpgroupIpListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbIpgroupIpListArrayInput)(nil)).Elem(), ElbIpgroupIpListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigInput)(nil)).Elem(), ElbL7policyFixedResponseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigPtrInput)(nil)).Elem(), ElbL7policyFixedResponseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfigInput)(nil)).Elem(), ElbL7policyFixedResponseConfigInsertHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfigPtrInput)(nil)).Elem(), ElbL7policyFixedResponseConfigInsertHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfigConfigInput)(nil)).Elem(), ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayInput)(nil)).Elem(), ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfigInput)(nil)).Elem(), ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrInput)(nil)).Elem(), ElbL7policyFixedResponseConfigRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigInput)(nil)).Elem(), ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayInput)(nil)).Elem(), ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigTrafficLimitConfigInput)(nil)).Elem(), ElbL7policyFixedResponseConfigTrafficLimitConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyFixedResponseConfigTrafficLimitConfigPtrInput)(nil)).Elem(), ElbL7policyFixedResponseConfigTrafficLimitConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsConfigArrayInput)(nil)).Elem(), ElbL7policyRedirectPoolsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsStickySessionConfigInput)(nil)).Elem(), ElbL7policyRedirectPoolsStickySessionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectPoolsStickySessionConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectPoolsStickySessionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfigInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigInsertHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfigInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayInput)(nil)).Elem(), ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7ruleConditionInput)(nil)).Elem(), ElbL7ruleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7ruleConditionArrayInput)(nil)).Elem(), ElbL7ruleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbListenerPortRangeInput)(nil)).Elem(), ElbListenerPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbListenerPortRangeArrayInput)(nil)).Elem(), ElbListenerPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbPoolPersistenceInput)(nil)).Elem(), ElbPoolPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbPoolPersistencePtrInput)(nil)).Elem(), ElbPoolPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSecurityPolicyListenerInput)(nil)).Elem(), ElbSecurityPolicyListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSecurityPolicyListenerArrayInput)(nil)).Elem(), ElbSecurityPolicyListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvsVolumeAttachmentInput)(nil)).Elem(), EvsVolumeAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvsVolumeAttachmentArrayInput)(nil)).Elem(), EvsVolumeAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionCustomImageInput)(nil)).Elem(), FgsFunctionCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionCustomImagePtrInput)(nil)).Elem(), FgsFunctionCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionFuncMountInput)(nil)).Elem(), FgsFunctionFuncMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionFuncMountArrayInput)(nil)).Elem(), FgsFunctionFuncMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionNetworkControllerInput)(nil)).Elem(), FgsFunctionNetworkControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionNetworkControllerPtrInput)(nil)).Elem(), FgsFunctionNetworkControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionNetworkControllerTriggerAccessVpcInput)(nil)).Elem(), FgsFunctionNetworkControllerTriggerAccessVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionNetworkControllerTriggerAccessVpcArrayInput)(nil)).Elem(), FgsFunctionNetworkControllerTriggerAccessVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceInput)(nil)).Elem(), FgsFunctionReservedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceArrayInput)(nil)).Elem(), FgsFunctionReservedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigInput)(nil)).Elem(), FgsFunctionReservedInstanceTacticsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigPtrInput)(nil)).Elem(), FgsFunctionReservedInstanceTacticsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigCronConfigInput)(nil)).Elem(), FgsFunctionReservedInstanceTacticsConfigCronConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigCronConfigArrayInput)(nil)).Elem(), FgsFunctionReservedInstanceTacticsConfigCronConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigMetricConfigInput)(nil)).Elem(), FgsFunctionReservedInstanceTacticsConfigMetricConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayInput)(nil)).Elem(), FgsFunctionReservedInstanceTacticsConfigMetricConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionVersionInput)(nil)).Elem(), FgsFunctionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionVersionArrayInput)(nil)).Elem(), FgsFunctionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionVersionAliasesInput)(nil)).Elem(), FgsFunctionVersionAliasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsFunctionVersionAliasesPtrInput)(nil)).Elem(), FgsFunctionVersionAliasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphEncryptionInput)(nil)).Elem(), GesGraphEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphEncryptionPtrInput)(nil)).Elem(), GesGraphEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphLtsOperationTraceInput)(nil)).Elem(), GesGraphLtsOperationTraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphLtsOperationTracePtrInput)(nil)).Elem(), GesGraphLtsOperationTraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphPublicIpInput)(nil)).Elem(), GesGraphPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphPublicIpPtrInput)(nil)).Elem(), GesGraphPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphVertexIdTypeInput)(nil)).Elem(), GesGraphVertexIdTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GesGraphVertexIdTypePtrInput)(nil)).Elem(), GesGraphVertexIdTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAclIpCidrInput)(nil)).Elem(), IdentityAclIpCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAclIpCidrArrayInput)(nil)).Elem(), IdentityAclIpCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAclIpRangeInput)(nil)).Elem(), IdentityAclIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAclIpRangeArrayInput)(nil)).Elem(), IdentityAclIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAgencyProjectRoleInput)(nil)).Elem(), IdentityAgencyProjectRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAgencyProjectRoleArrayInput)(nil)).Elem(), IdentityAgencyProjectRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderAccessConfigInput)(nil)).Elem(), IdentityProviderAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderAccessConfigPtrInput)(nil)).Elem(), IdentityProviderAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionConversionRuleInput)(nil)).Elem(), IdentityProviderConversionConversionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionConversionRuleArrayInput)(nil)).Elem(), IdentityProviderConversionConversionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionConversionRuleLocalInput)(nil)).Elem(), IdentityProviderConversionConversionRuleLocalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionConversionRuleLocalArrayInput)(nil)).Elem(), IdentityProviderConversionConversionRuleLocalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionConversionRuleRemoteInput)(nil)).Elem(), IdentityProviderConversionConversionRuleRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionConversionRuleRemoteArrayInput)(nil)).Elem(), IdentityProviderConversionConversionRuleRemoteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionRuleInput)(nil)).Elem(), IdentityProviderConversionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionRuleArrayInput)(nil)).Elem(), IdentityProviderConversionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionRuleLocalInput)(nil)).Elem(), IdentityProviderConversionRuleLocalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionRuleLocalArrayInput)(nil)).Elem(), IdentityProviderConversionRuleLocalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionRuleRemoteInput)(nil)).Elem(), IdentityProviderConversionRuleRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConversionRuleRemoteArrayInput)(nil)).Elem(), IdentityProviderConversionRuleRemoteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbPoolPersistenceInput)(nil)).Elem(), LbPoolPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbPoolPersistenceArrayInput)(nil)).Elem(), LbPoolPersistenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterAnalysisCoreNodesInput)(nil)).Elem(), MapreduceClusterAnalysisCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterAnalysisCoreNodesPtrInput)(nil)).Elem(), MapreduceClusterAnalysisCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterAnalysisTaskNodesInput)(nil)).Elem(), MapreduceClusterAnalysisTaskNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterAnalysisTaskNodesPtrInput)(nil)).Elem(), MapreduceClusterAnalysisTaskNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterBootstrapScriptInput)(nil)).Elem(), MapreduceClusterBootstrapScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterBootstrapScriptArrayInput)(nil)).Elem(), MapreduceClusterBootstrapScriptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterComponentConfigInput)(nil)).Elem(), MapreduceClusterComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterComponentConfigArrayInput)(nil)).Elem(), MapreduceClusterComponentConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterComponentConfigConfigInput)(nil)).Elem(), MapreduceClusterComponentConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterComponentConfigConfigArrayInput)(nil)).Elem(), MapreduceClusterComponentConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterCustomNodeInput)(nil)).Elem(), MapreduceClusterCustomNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterCustomNodeArrayInput)(nil)).Elem(), MapreduceClusterCustomNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterExternalDatasourceInput)(nil)).Elem(), MapreduceClusterExternalDatasourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterExternalDatasourceArrayInput)(nil)).Elem(), MapreduceClusterExternalDatasourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterMasterNodesInput)(nil)).Elem(), MapreduceClusterMasterNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterMasterNodesPtrInput)(nil)).Elem(), MapreduceClusterMasterNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterSmnNotifyInput)(nil)).Elem(), MapreduceClusterSmnNotifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterSmnNotifyPtrInput)(nil)).Elem(), MapreduceClusterSmnNotifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterStreamingCoreNodesInput)(nil)).Elem(), MapreduceClusterStreamingCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterStreamingCoreNodesPtrInput)(nil)).Elem(), MapreduceClusterStreamingCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterStreamingTaskNodesInput)(nil)).Elem(), MapreduceClusterStreamingTaskNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapreduceClusterStreamingTaskNodesPtrInput)(nil)).Elem(), MapreduceClusterStreamingTaskNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatGatewaySessionConfInput)(nil)).Elem(), NatGatewaySessionConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatGatewaySessionConfPtrInput)(nil)).Elem(), NatGatewaySessionConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkingSecgroupRuleTypeInput)(nil)).Elem(), NetworkingSecgroupRuleTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkingSecgroupRuleTypeArrayInput)(nil)).Elem(), NetworkingSecgroupRuleTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclAccountPermissionInput)(nil)).Elem(), ObsBucketAclAccountPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclAccountPermissionArrayInput)(nil)).Elem(), ObsBucketAclAccountPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclLogDeliveryUserPermissionInput)(nil)).Elem(), ObsBucketAclLogDeliveryUserPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclLogDeliveryUserPermissionPtrInput)(nil)).Elem(), ObsBucketAclLogDeliveryUserPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclOwnerPermissionInput)(nil)).Elem(), ObsBucketAclOwnerPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclOwnerPermissionPtrInput)(nil)).Elem(), ObsBucketAclOwnerPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclPublicPermissionInput)(nil)).Elem(), ObsBucketAclPublicPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketAclPublicPermissionPtrInput)(nil)).Elem(), ObsBucketAclPublicPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketCorsRuleInput)(nil)).Elem(), ObsBucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketCorsRuleArrayInput)(nil)).Elem(), ObsBucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleInput)(nil)).Elem(), ObsBucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleArrayInput)(nil)).Elem(), ObsBucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleAbortIncompleteMultipartUploadInput)(nil)).Elem(), ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput)(nil)).Elem(), ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleExpirationInput)(nil)).Elem(), ObsBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleExpirationArrayInput)(nil)).Elem(), ObsBucketLifecycleRuleExpirationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionExpirationInput)(nil)).Elem(), ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayInput)(nil)).Elem(), ObsBucketLifecycleRuleNoncurrentVersionExpirationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionTransitionInput)(nil)).Elem(), ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayInput)(nil)).Elem(), ObsBucketLifecycleRuleNoncurrentVersionTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleTransitionInput)(nil)).Elem(), ObsBucketLifecycleRuleTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLifecycleRuleTransitionArrayInput)(nil)).Elem(), ObsBucketLifecycleRuleTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLoggingInput)(nil)).Elem(), ObsBucketLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketLoggingArrayInput)(nil)).Elem(), ObsBucketLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketStorageInfoInput)(nil)).Elem(), ObsBucketStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketStorageInfoArrayInput)(nil)).Elem(), ObsBucketStorageInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketWebsiteInput)(nil)).Elem(), ObsBucketWebsiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketWebsitePtrInput)(nil)).Elem(), ObsBucketWebsiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRoleInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRolePtrInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsBackupDatabaseInput)(nil)).Elem(), RdsBackupDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsBackupDatabaseArrayInput)(nil)).Elem(), RdsBackupDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceBackupStrategyInput)(nil)).Elem(), RdsInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceBackupStrategyPtrInput)(nil)).Elem(), RdsInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceDbInput)(nil)).Elem(), RdsInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceDbPtrInput)(nil)).Elem(), RdsInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceMsdtcHostInput)(nil)).Elem(), RdsInstanceMsdtcHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceMsdtcHostArrayInput)(nil)).Elem(), RdsInstanceMsdtcHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceNodeInput)(nil)).Elem(), RdsInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceNodeArrayInput)(nil)).Elem(), RdsInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceParameterInput)(nil)).Elem(), RdsInstanceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceParameterArrayInput)(nil)).Elem(), RdsInstanceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceRestoreInput)(nil)).Elem(), RdsInstanceRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceRestorePtrInput)(nil)).Elem(), RdsInstanceRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceVolumeInput)(nil)).Elem(), RdsInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsInstanceVolumePtrInput)(nil)).Elem(), RdsInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabasePrivilegeUserInput)(nil)).Elem(), RdsMysqlDatabasePrivilegeUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabasePrivilegeUserArrayInput)(nil)).Elem(), RdsMysqlDatabasePrivilegeUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabaseTableRestoreDatabaseInput)(nil)).Elem(), RdsMysqlDatabaseTableRestoreDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabaseTableRestoreDatabaseArrayInput)(nil)).Elem(), RdsMysqlDatabaseTableRestoreDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTableInput)(nil)).Elem(), RdsMysqlDatabaseTableRestoreRestoreTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTableArrayInput)(nil)).Elem(), RdsMysqlDatabaseTableRestoreRestoreTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTableTableInput)(nil)).Elem(), RdsMysqlDatabaseTableRestoreRestoreTableTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsMysqlDatabaseTableRestoreRestoreTableTableArrayInput)(nil)).Elem(), RdsMysqlDatabaseTableRestoreRestoreTableTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsParametergroupConfigurationParameterInput)(nil)).Elem(), RdsParametergroupConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsParametergroupConfigurationParameterArrayInput)(nil)).Elem(), RdsParametergroupConfigurationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsParametergroupDatastoreInput)(nil)).Elem(), RdsParametergroupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsParametergroupDatastorePtrInput)(nil)).Elem(), RdsParametergroupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountAttributeInput)(nil)).Elem(), RdsPgAccountAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountAttributeArrayInput)(nil)).Elem(), RdsPgAccountAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgHbaHostBasedAuthenticationInput)(nil)).Elem(), RdsPgHbaHostBasedAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgHbaHostBasedAuthenticationArrayInput)(nil)).Elem(), RdsPgHbaHostBasedAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceDbInput)(nil)).Elem(), RdsReadReplicaInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceDbPtrInput)(nil)).Elem(), RdsReadReplicaInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceParameterInput)(nil)).Elem(), RdsReadReplicaInstanceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceParameterArrayInput)(nil)).Elem(), RdsReadReplicaInstanceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceVolumeInput)(nil)).Elem(), RdsReadReplicaInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceVolumePtrInput)(nil)).Elem(), RdsReadReplicaInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsSqlserverDatabasePrivilegeUserInput)(nil)).Elem(), RdsSqlserverDatabasePrivilegeUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsSqlserverDatabasePrivilegeUserArrayInput)(nil)).Elem(), RdsSqlserverDatabasePrivilegeUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsFileSystemAccessRuleInput)(nil)).Elem(), SfsFileSystemAccessRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsFileSystemAccessRuleArrayInput)(nil)).Elem(), SfsFileSystemAccessRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboDuTaskDirUsageInput)(nil)).Elem(), SfsTurboDuTaskDirUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboDuTaskDirUsageArrayInput)(nil)).Elem(), SfsTurboDuTaskDirUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboDuTaskDirUsageFileCountInput)(nil)).Elem(), SfsTurboDuTaskDirUsageFileCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboDuTaskDirUsageFileCountArrayInput)(nil)).Elem(), SfsTurboDuTaskDirUsageFileCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboObsTargetObsInput)(nil)).Elem(), SfsTurboObsTargetObsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboObsTargetObsPtrInput)(nil)).Elem(), SfsTurboObsTargetObsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmnSubscriptionExtensionInput)(nil)).Elem(), SmnSubscriptionExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmnSubscriptionExtensionPtrInput)(nil)).Elem(), SmnSubscriptionExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmnSubscriptionFilterPolicyInput)(nil)).Elem(), SmnSubscriptionFilterPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmnSubscriptionFilterPolicyArrayInput)(nil)).Elem(), SmnSubscriptionFilterPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwrOrganizationPermissionsSelfPermissionInput)(nil)).Elem(), SwrOrganizationPermissionsSelfPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwrOrganizationPermissionsSelfPermissionArrayInput)(nil)).Elem(), SwrOrganizationPermissionsSelfPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwrOrganizationPermissionsUserInput)(nil)).Elem(), SwrOrganizationPermissionsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwrOrganizationPermissionsUserArrayInput)(nil)).Elem(), SwrOrganizationPermissionsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressGroupIpExtraSetInput)(nil)).Elem(), VpcAddressGroupIpExtraSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressGroupIpExtraSetArrayInput)(nil)).Elem(), VpcAddressGroupIpExtraSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBandwidthPublicipInput)(nil)).Elem(), VpcBandwidthPublicipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBandwidthPublicipArrayInput)(nil)).Elem(), VpcBandwidthPublicipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEipBandwidthInput)(nil)).Elem(), VpcEipBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEipBandwidthPtrInput)(nil)).Elem(), VpcEipBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEipPublicipInput)(nil)).Elem(), VpcEipPublicipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEipPublicipPtrInput)(nil)).Elem(), VpcEipPublicipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcRouteTypeInput)(nil)).Elem(), VpcRouteTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcRouteTypeArrayInput)(nil)).Elem(), VpcRouteTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcRouteTableRouteInput)(nil)).Elem(), VpcRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcRouteTableRouteArrayInput)(nil)).Elem(), VpcRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcepServiceConnectionInput)(nil)).Elem(), VpcepServiceConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcepServiceConnectionArrayInput)(nil)).Elem(), VpcepServiceConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcepServicePortMappingInput)(nil)).Elem(), VpcepServicePortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcepServicePortMappingArrayInput)(nil)).Elem(), VpcepServicePortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionIkepolicyInput)(nil)).Elem(), VpnConnectionIkepolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionIkepolicyPtrInput)(nil)).Elem(), VpnConnectionIkepolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionIkepolicyDpdInput)(nil)).Elem(), VpnConnectionIkepolicyDpdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionIkepolicyDpdPtrInput)(nil)).Elem(), VpnConnectionIkepolicyDpdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionIpsecpolicyInput)(nil)).Elem(), VpnConnectionIpsecpolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionIpsecpolicyPtrInput)(nil)).Elem(), VpnConnectionIpsecpolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionPolicyRuleInput)(nil)).Elem(), VpnConnectionPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionPolicyRuleArrayInput)(nil)).Elem(), VpnConnectionPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayCertificateInput)(nil)).Elem(), VpnGatewayCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayCertificatePtrInput)(nil)).Elem(), VpnGatewayCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayEip1Input)(nil)).Elem(), VpnGatewayEip1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayEip1PtrInput)(nil)).Elem(), VpnGatewayEip1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayEip2Input)(nil)).Elem(), VpnGatewayEip2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayEip2PtrInput)(nil)).Elem(), VpnGatewayEip2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayMasterEipInput)(nil)).Elem(), VpnGatewayMasterEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayMasterEipPtrInput)(nil)).Elem(), VpnGatewayMasterEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewaySlaveEipInput)(nil)).Elem(), VpnGatewaySlaveEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewaySlaveEipPtrInput)(nil)).Elem(), VpnGatewaySlaveEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigAclPoliciesPolicyInput)(nil)).Elem(), GetApigAclPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigAclPoliciesPolicyArrayInput)(nil)).Elem(), GetApigAclPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedAclPoliciesPolicyInput)(nil)).Elem(), GetApigApiAssociatedAclPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedAclPoliciesPolicyArrayInput)(nil)).Elem(), GetApigApiAssociatedAclPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedApplicationsApplicationInput)(nil)).Elem(), GetApigApiAssociatedApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedApplicationsApplicationArrayInput)(nil)).Elem(), GetApigApiAssociatedApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedPluginsPluginInput)(nil)).Elem(), GetApigApiAssociatedPluginsPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedPluginsPluginArrayInput)(nil)).Elem(), GetApigApiAssociatedPluginsPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedSignaturesSignatureInput)(nil)).Elem(), GetApigApiAssociatedSignaturesSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedSignaturesSignatureArrayInput)(nil)).Elem(), GetApigApiAssociatedSignaturesSignatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyInput)(nil)).Elem(), GetApigApiAssociatedThrottlingPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyArrayInput)(nil)).Elem(), GetApigApiAssociatedThrottlingPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleInput)(nil)).Elem(), GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayInput)(nil)).Elem(), GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleInput)(nil)).Elem(), GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayInput)(nil)).Elem(), GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiBackendParamInput)(nil)).Elem(), GetApigApiBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiBackendParamArrayInput)(nil)).Elem(), GetApigApiBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiBasicConfigurationsConfigurationInput)(nil)).Elem(), GetApigApiBasicConfigurationsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiBasicConfigurationsConfigurationArrayInput)(nil)).Elem(), GetApigApiBasicConfigurationsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphInput)(nil)).Elem(), GetApigApiFuncGraphArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphArrayInput)(nil)).Elem(), GetApigApiFuncGraphArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphPolicyInput)(nil)).Elem(), GetApigApiFuncGraphPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphPolicyArrayInput)(nil)).Elem(), GetApigApiFuncGraphPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphPolicyBackendParamInput)(nil)).Elem(), GetApigApiFuncGraphPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphPolicyBackendParamArrayInput)(nil)).Elem(), GetApigApiFuncGraphPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphPolicyConditionInput)(nil)).Elem(), GetApigApiFuncGraphPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiFuncGraphPolicyConditionArrayInput)(nil)).Elem(), GetApigApiFuncGraphPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockInput)(nil)).Elem(), GetApigApiMockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockArrayInput)(nil)).Elem(), GetApigApiMockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockPolicyInput)(nil)).Elem(), GetApigApiMockPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockPolicyArrayInput)(nil)).Elem(), GetApigApiMockPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockPolicyBackendParamInput)(nil)).Elem(), GetApigApiMockPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockPolicyBackendParamArrayInput)(nil)).Elem(), GetApigApiMockPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockPolicyConditionInput)(nil)).Elem(), GetApigApiMockPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiMockPolicyConditionArrayInput)(nil)).Elem(), GetApigApiMockPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiRequestParamInput)(nil)).Elem(), GetApigApiRequestParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiRequestParamArrayInput)(nil)).Elem(), GetApigApiRequestParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebInput)(nil)).Elem(), GetApigApiWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebArrayInput)(nil)).Elem(), GetApigApiWebArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebPolicyInput)(nil)).Elem(), GetApigApiWebPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebPolicyArrayInput)(nil)).Elem(), GetApigApiWebPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebPolicyBackendParamInput)(nil)).Elem(), GetApigApiWebPolicyBackendParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebPolicyBackendParamArrayInput)(nil)).Elem(), GetApigApiWebPolicyBackendParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebPolicyConditionInput)(nil)).Elem(), GetApigApiWebPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApiWebPolicyConditionArrayInput)(nil)).Elem(), GetApigApiWebPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigAppcodesAppcodeInput)(nil)).Elem(), GetApigAppcodesAppcodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigAppcodesAppcodeArrayInput)(nil)).Elem(), GetApigAppcodesAppcodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApplicationQuotasQuotaInput)(nil)).Elem(), GetApigApplicationQuotasQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApplicationQuotasQuotaArrayInput)(nil)).Elem(), GetApigApplicationQuotasQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApplicationsApplicationInput)(nil)).Elem(), GetApigApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigApplicationsApplicationArrayInput)(nil)).Elem(), GetApigApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigChannelsVpcChannelInput)(nil)).Elem(), GetApigChannelsVpcChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigChannelsVpcChannelArrayInput)(nil)).Elem(), GetApigChannelsVpcChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroupInput)(nil)).Elem(), GetApigChannelsVpcChannelMemberGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroupArrayInput)(nil)).Elem(), GetApigChannelsVpcChannelMemberGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroupMicroserviceLabelInput)(nil)).Elem(), GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayInput)(nil)).Elem(), GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigCustomAuthorizersAuthorizerInput)(nil)).Elem(), GetApigCustomAuthorizersAuthorizerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigCustomAuthorizersAuthorizerArrayInput)(nil)).Elem(), GetApigCustomAuthorizersAuthorizerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigCustomAuthorizersAuthorizerIdentityInput)(nil)).Elem(), GetApigCustomAuthorizersAuthorizerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigCustomAuthorizersAuthorizerIdentityArrayInput)(nil)).Elem(), GetApigCustomAuthorizersAuthorizerIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigEndpointConnectionsConnectionInput)(nil)).Elem(), GetApigEndpointConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigEndpointConnectionsConnectionArrayInput)(nil)).Elem(), GetApigEndpointConnectionsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigEnvironmentVariablesVariableInput)(nil)).Elem(), GetApigEnvironmentVariablesVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigEnvironmentVariablesVariableArrayInput)(nil)).Elem(), GetApigEnvironmentVariablesVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigEnvironmentsEnvironmentInput)(nil)).Elem(), GetApigEnvironmentsEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigEnvironmentsEnvironmentArrayInput)(nil)).Elem(), GetApigEnvironmentsEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupInput)(nil)).Elem(), GetApigGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupArrayInput)(nil)).Elem(), GetApigGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupEnvironmentInput)(nil)).Elem(), GetApigGroupsGroupEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupEnvironmentArrayInput)(nil)).Elem(), GetApigGroupsGroupEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupEnvironmentVariableInput)(nil)).Elem(), GetApigGroupsGroupEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupEnvironmentVariableArrayInput)(nil)).Elem(), GetApigGroupsGroupEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupUrlDomainInput)(nil)).Elem(), GetApigGroupsGroupUrlDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigGroupsGroupUrlDomainArrayInput)(nil)).Elem(), GetApigGroupsGroupUrlDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigInstanceFeaturesFeatureInput)(nil)).Elem(), GetApigInstanceFeaturesFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigInstanceFeaturesFeatureArrayInput)(nil)).Elem(), GetApigInstanceFeaturesFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigInstancesInstanceInput)(nil)).Elem(), GetApigInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigInstancesInstanceArrayInput)(nil)).Elem(), GetApigInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigSignaturesSignatureInput)(nil)).Elem(), GetApigSignaturesSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigSignaturesSignatureArrayInput)(nil)).Elem(), GetApigSignaturesSignatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigThrottlingPoliciesPolicyInput)(nil)).Elem(), GetApigThrottlingPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigThrottlingPoliciesPolicyArrayInput)(nil)).Elem(), GetApigThrottlingPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigThrottlingPoliciesPolicyAppThrottleInput)(nil)).Elem(), GetApigThrottlingPoliciesPolicyAppThrottleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigThrottlingPoliciesPolicyAppThrottleArrayInput)(nil)).Elem(), GetApigThrottlingPoliciesPolicyAppThrottleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigThrottlingPoliciesPolicyUserThrottleInput)(nil)).Elem(), GetApigThrottlingPoliciesPolicyUserThrottleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigThrottlingPoliciesPolicyUserThrottleArrayInput)(nil)).Elem(), GetApigThrottlingPoliciesPolicyUserThrottleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbhAvailabilityZonesAvailabilityZoneInput)(nil)).Elem(), GetCbhAvailabilityZonesAvailabilityZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbhAvailabilityZonesAvailabilityZoneArrayInput)(nil)).Elem(), GetCbhAvailabilityZonesAvailabilityZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbhFlavorsFlavorInput)(nil)).Elem(), GetCbhFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbhFlavorsFlavorArrayInput)(nil)).Elem(), GetCbhFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbhInstancesInstanceInput)(nil)).Elem(), GetCbhInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbhInstancesInstanceArrayInput)(nil)).Elem(), GetCbhInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenInput)(nil)).Elem(), GetCbrBackupChildrenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenArrayInput)(nil)).Elem(), GetCbrBackupChildrenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenExtendInfoInput)(nil)).Elem(), GetCbrBackupChildrenExtendInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenExtendInfoArrayInput)(nil)).Elem(), GetCbrBackupChildrenExtendInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenReplicationRecordInput)(nil)).Elem(), GetCbrBackupChildrenReplicationRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenReplicationRecordArrayInput)(nil)).Elem(), GetCbrBackupChildrenReplicationRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenReplicationRecordExtraInfoInput)(nil)).Elem(), GetCbrBackupChildrenReplicationRecordExtraInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupChildrenReplicationRecordExtraInfoArrayInput)(nil)).Elem(), GetCbrBackupChildrenReplicationRecordExtraInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupExtendInfoInput)(nil)).Elem(), GetCbrBackupExtendInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupExtendInfoArrayInput)(nil)).Elem(), GetCbrBackupExtendInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupReplicationRecordInput)(nil)).Elem(), GetCbrBackupReplicationRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupReplicationRecordArrayInput)(nil)).Elem(), GetCbrBackupReplicationRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupReplicationRecordExtraInfoInput)(nil)).Elem(), GetCbrBackupReplicationRecordExtraInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrBackupReplicationRecordExtraInfoArrayInput)(nil)).Elem(), GetCbrBackupReplicationRecordExtraInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyInput)(nil)).Elem(), GetCbrPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyArrayInput)(nil)).Elem(), GetCbrPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyAssociatedVaultInput)(nil)).Elem(), GetCbrPoliciesPolicyAssociatedVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyAssociatedVaultArrayInput)(nil)).Elem(), GetCbrPoliciesPolicyAssociatedVaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyBackupCycleInput)(nil)).Elem(), GetCbrPoliciesPolicyBackupCycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyBackupCycleArrayInput)(nil)).Elem(), GetCbrPoliciesPolicyBackupCycleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyLongTermRetentionInput)(nil)).Elem(), GetCbrPoliciesPolicyLongTermRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrPoliciesPolicyLongTermRetentionArrayInput)(nil)).Elem(), GetCbrPoliciesPolicyLongTermRetentionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrVaultsVaultInput)(nil)).Elem(), GetCbrVaultsVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrVaultsVaultArrayInput)(nil)).Elem(), GetCbrVaultsVaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrVaultsVaultResourceInput)(nil)).Elem(), GetCbrVaultsVaultResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCbrVaultsVaultResourceArrayInput)(nil)).Elem(), GetCbrVaultsVaultResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceAddonTemplateSupportVersionInput)(nil)).Elem(), GetCceAddonTemplateSupportVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceAddonTemplateSupportVersionArrayInput)(nil)).Elem(), GetCceAddonTemplateSupportVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterCertificateClusterInput)(nil)).Elem(), GetCceClusterCertificateClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterCertificateClusterArrayInput)(nil)).Elem(), GetCceClusterCertificateClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterCertificateContextInput)(nil)).Elem(), GetCceClusterCertificateContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterCertificateContextArrayInput)(nil)).Elem(), GetCceClusterCertificateContextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterCertificateUserInput)(nil)).Elem(), GetCceClusterCertificateUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterCertificateUserArrayInput)(nil)).Elem(), GetCceClusterCertificateUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterEndpointInput)(nil)).Elem(), GetCceClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterEndpointArrayInput)(nil)).Elem(), GetCceClusterEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterMasterInput)(nil)).Elem(), GetCceClusterMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClusterMasterArrayInput)(nil)).Elem(), GetCceClusterMasterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterInput)(nil)).Elem(), GetCceClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterArrayInput)(nil)).Elem(), GetCceClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterCertificateClusterInput)(nil)).Elem(), GetCceClustersClusterCertificateClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterCertificateClusterArrayInput)(nil)).Elem(), GetCceClustersClusterCertificateClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterCertificateUserInput)(nil)).Elem(), GetCceClustersClusterCertificateUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterCertificateUserArrayInput)(nil)).Elem(), GetCceClustersClusterCertificateUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterEndpointInput)(nil)).Elem(), GetCceClustersClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterEndpointArrayInput)(nil)).Elem(), GetCceClustersClusterEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterMasterInput)(nil)).Elem(), GetCceClustersClusterMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceClustersClusterMasterArrayInput)(nil)).Elem(), GetCceClustersClusterMasterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodeDataVolumeInput)(nil)).Elem(), GetCceNodeDataVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodeDataVolumeArrayInput)(nil)).Elem(), GetCceNodeDataVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodeHostnameConfigInput)(nil)).Elem(), GetCceNodeHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodeHostnameConfigArrayInput)(nil)).Elem(), GetCceNodeHostnameConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodePoolDataVolumeInput)(nil)).Elem(), GetCceNodePoolDataVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodePoolDataVolumeArrayInput)(nil)).Elem(), GetCceNodePoolDataVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodePoolHostnameConfigInput)(nil)).Elem(), GetCceNodePoolHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodePoolHostnameConfigArrayInput)(nil)).Elem(), GetCceNodePoolHostnameConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodePoolRootVolumeInput)(nil)).Elem(), GetCceNodePoolRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodePoolRootVolumeArrayInput)(nil)).Elem(), GetCceNodePoolRootVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodeRootVolumeInput)(nil)).Elem(), GetCceNodeRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodeRootVolumeArrayInput)(nil)).Elem(), GetCceNodeRootVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeInput)(nil)).Elem(), GetCceNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeArrayInput)(nil)).Elem(), GetCceNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeDataVolumeInput)(nil)).Elem(), GetCceNodesNodeDataVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeDataVolumeArrayInput)(nil)).Elem(), GetCceNodesNodeDataVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeHostnameConfigInput)(nil)).Elem(), GetCceNodesNodeHostnameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeHostnameConfigArrayInput)(nil)).Elem(), GetCceNodesNodeHostnameConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeRootVolumeInput)(nil)).Elem(), GetCceNodesNodeRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCceNodesNodeRootVolumeArrayInput)(nil)).Elem(), GetCceNodesNodeRootVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdmFlavorsFlavorInput)(nil)).Elem(), GetCdmFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdmFlavorsFlavorArrayInput)(nil)).Elem(), GetCdmFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeFlavorsFlavorInput)(nil)).Elem(), GetComputeFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeFlavorsFlavorArrayInput)(nil)).Elem(), GetComputeFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceNetworkInput)(nil)).Elem(), GetComputeInstanceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceNetworkArrayInput)(nil)).Elem(), GetComputeInstanceNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceSchedulerHintInput)(nil)).Elem(), GetComputeInstanceSchedulerHintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceSchedulerHintArrayInput)(nil)).Elem(), GetComputeInstanceSchedulerHintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceVolumeAttachedInput)(nil)).Elem(), GetComputeInstanceVolumeAttachedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstanceVolumeAttachedArrayInput)(nil)).Elem(), GetComputeInstanceVolumeAttachedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceInput)(nil)).Elem(), GetComputeInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceArrayInput)(nil)).Elem(), GetComputeInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceNetworkInput)(nil)).Elem(), GetComputeInstancesInstanceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceNetworkArrayInput)(nil)).Elem(), GetComputeInstancesInstanceNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceSchedulerHintInput)(nil)).Elem(), GetComputeInstancesInstanceSchedulerHintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceSchedulerHintArrayInput)(nil)).Elem(), GetComputeInstancesInstanceSchedulerHintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceVolumeAttachedInput)(nil)).Elem(), GetComputeInstancesInstanceVolumeAttachedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeInstancesInstanceVolumeAttachedArrayInput)(nil)).Elem(), GetComputeInstancesInstanceVolumeAttachedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeServergroupsServergroupInput)(nil)).Elem(), GetComputeServergroupsServergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeServergroupsServergroupArrayInput)(nil)).Elem(), GetComputeServergroupsServergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCssFlavorsFlavorInput)(nil)).Elem(), GetCssFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCssFlavorsFlavorArrayInput)(nil)).Elem(), GetCssFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDcsAccountsAccountInput)(nil)).Elem(), GetDcsAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDcsAccountsAccountArrayInput)(nil)).Elem(), GetDcsAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDcsFlavorsFlavorInput)(nil)).Elem(), GetDcsFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDcsFlavorsFlavorArrayInput)(nil)).Elem(), GetDcsFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdsFlavorsFlavorInput)(nil)).Elem(), GetDdsFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdsFlavorsFlavorArrayInput)(nil)).Elem(), GetDdsFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorArrayInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorIoInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorIoArrayInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorIoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorPropertyInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorPropertyArrayInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeatureInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorSupportFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeatureArrayInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorSupportFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeaturePropertyInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayInput)(nil)).Elem(), GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaInstancesInstanceInput)(nil)).Elem(), GetDmsKafkaInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaInstancesInstanceArrayInput)(nil)).Elem(), GetDmsKafkaInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaInstancesInstanceCrossVpcAccessInput)(nil)).Elem(), GetDmsKafkaInstancesInstanceCrossVpcAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaInstancesInstanceCrossVpcAccessArrayInput)(nil)).Elem(), GetDmsKafkaInstancesInstanceCrossVpcAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaMessagesMessageInput)(nil)).Elem(), GetDmsKafkaMessagesMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaMessagesMessageArrayInput)(nil)).Elem(), GetDmsKafkaMessagesMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaUsersUserInput)(nil)).Elem(), GetDmsKafkaUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsKafkaUsersUserArrayInput)(nil)).Elem(), GetDmsKafkaUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorArrayInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorIoInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorIoArrayInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorIoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorPropertyInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorPropertyArrayInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeatureInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorSupportFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorSupportFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayInput)(nil)).Elem(), GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDwsFlavorsFlavorInput)(nil)).Elem(), GetDwsFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDwsFlavorsFlavorArrayInput)(nil)).Elem(), GetDwsFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDwsFlavorsFlavorElasticVolumeSpecInput)(nil)).Elem(), GetDwsFlavorsFlavorElasticVolumeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDwsFlavorsFlavorElasticVolumeSpecArrayInput)(nil)).Elem(), GetDwsFlavorsFlavorElasticVolumeSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbFlavorsFlavorInput)(nil)).Elem(), GetElbFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbFlavorsFlavorArrayInput)(nil)).Elem(), GetElbFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolInput)(nil)).Elem(), GetElbPoolsPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolArrayInput)(nil)).Elem(), GetElbPoolsPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolListenerInput)(nil)).Elem(), GetElbPoolsPoolListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolListenerArrayInput)(nil)).Elem(), GetElbPoolsPoolListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolLoadbalancerInput)(nil)).Elem(), GetElbPoolsPoolLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolLoadbalancerArrayInput)(nil)).Elem(), GetElbPoolsPoolLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolMemberInput)(nil)).Elem(), GetElbPoolsPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolMemberArrayInput)(nil)).Elem(), GetElbPoolsPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolPersistenceInput)(nil)).Elem(), GetElbPoolsPoolPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElbPoolsPoolPersistenceArrayInput)(nil)).Elem(), GetElbPoolsPoolPersistenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEvsVolumesVolumeInput)(nil)).Elem(), GetEvsVolumesVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEvsVolumesVolumeArrayInput)(nil)).Elem(), GetEvsVolumesVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEvsVolumesVolumeAttachmentInput)(nil)).Elem(), GetEvsVolumesVolumeAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEvsVolumesVolumeAttachmentArrayInput)(nil)).Elem(), GetEvsVolumesVolumeAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityGroupUserInput)(nil)).Elem(), GetIdentityGroupUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityGroupUserArrayInput)(nil)).Elem(), GetIdentityGroupUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityProjectsProjectInput)(nil)).Elem(), GetIdentityProjectsProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityProjectsProjectArrayInput)(nil)).Elem(), GetIdentityProjectsProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityUsersUserInput)(nil)).Elem(), GetIdentityUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityUsersUserArrayInput)(nil)).Elem(), GetIdentityUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImagesImageInput)(nil)).Elem(), GetImagesImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImagesImageArrayInput)(nil)).Elem(), GetImagesImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKpsFailedTasksTaskInput)(nil)).Elem(), GetKpsFailedTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKpsFailedTasksTaskArrayInput)(nil)).Elem(), GetKpsFailedTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKpsKeypairsKeypairInput)(nil)).Elem(), GetKpsKeypairsKeypairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKpsKeypairsKeypairArrayInput)(nil)).Elem(), GetKpsKeypairsKeypairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKpsRunningTasksTaskInput)(nil)).Elem(), GetKpsRunningTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKpsRunningTasksTaskArrayInput)(nil)).Elem(), GetKpsRunningTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbListenersListenerInput)(nil)).Elem(), GetLbListenersListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbListenersListenerArrayInput)(nil)).Elem(), GetLbListenersListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbListenersListenerLoadbalancerInput)(nil)).Elem(), GetLbListenersListenerLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbListenersListenerLoadbalancerArrayInput)(nil)).Elem(), GetLbListenersListenerLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolInput)(nil)).Elem(), GetLbPoolsPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolArrayInput)(nil)).Elem(), GetLbPoolsPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolListenerInput)(nil)).Elem(), GetLbPoolsPoolListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolListenerArrayInput)(nil)).Elem(), GetLbPoolsPoolListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolLoadbalancerInput)(nil)).Elem(), GetLbPoolsPoolLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolLoadbalancerArrayInput)(nil)).Elem(), GetLbPoolsPoolLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolMemberInput)(nil)).Elem(), GetLbPoolsPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolMemberArrayInput)(nil)).Elem(), GetLbPoolsPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolPersistenceInput)(nil)).Elem(), GetLbPoolsPoolPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbPoolsPoolPersistenceArrayInput)(nil)).Elem(), GetLbPoolsPoolPersistenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkingSecgroupRuleTypeInput)(nil)).Elem(), GetNetworkingSecgroupRuleTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkingSecgroupRuleTypeArrayInput)(nil)).Elem(), GetNetworkingSecgroupRuleTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkingSecgroupsSecurityGroupInput)(nil)).Elem(), GetNetworkingSecgroupsSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkingSecgroupsSecurityGroupArrayInput)(nil)).Elem(), GetNetworkingSecgroupsSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObsBucketsBucketInput)(nil)).Elem(), GetObsBucketsBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObsBucketsBucketArrayInput)(nil)).Elem(), GetObsBucketsBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsBackupsBackupInput)(nil)).Elem(), GetRdsBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsBackupsBackupArrayInput)(nil)).Elem(), GetRdsBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsBackupsBackupDatabaseInput)(nil)).Elem(), GetRdsBackupsBackupDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsBackupsBackupDatabaseArrayInput)(nil)).Elem(), GetRdsBackupsBackupDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsBackupsBackupDatastoreInput)(nil)).Elem(), GetRdsBackupsBackupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsBackupsBackupDatastoreArrayInput)(nil)).Elem(), GetRdsBackupsBackupDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsEngineVersionsVersionInput)(nil)).Elem(), GetRdsEngineVersionsVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsEngineVersionsVersionArrayInput)(nil)).Elem(), GetRdsEngineVersionsVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsFlavorsFlavorInput)(nil)).Elem(), GetRdsFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsFlavorsFlavorArrayInput)(nil)).Elem(), GetRdsFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceInput)(nil)).Elem(), GetRdsInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceArrayInput)(nil)).Elem(), GetRdsInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceBackupStrategyInput)(nil)).Elem(), GetRdsInstancesInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceBackupStrategyArrayInput)(nil)).Elem(), GetRdsInstancesInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceDbInput)(nil)).Elem(), GetRdsInstancesInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceDbArrayInput)(nil)).Elem(), GetRdsInstancesInstanceDbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceNodeInput)(nil)).Elem(), GetRdsInstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceNodeArrayInput)(nil)).Elem(), GetRdsInstancesInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceVolumeInput)(nil)).Elem(), GetRdsInstancesInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsInstancesInstanceVolumeArrayInput)(nil)).Elem(), GetRdsInstancesInstanceVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgAccountsUserInput)(nil)).Elem(), GetRdsPgAccountsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgAccountsUserArrayInput)(nil)).Elem(), GetRdsPgAccountsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgAccountsUserAttributeInput)(nil)).Elem(), GetRdsPgAccountsUserAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgAccountsUserAttributeArrayInput)(nil)).Elem(), GetRdsPgAccountsUserAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgDatabasesDatabaseInput)(nil)).Elem(), GetRdsPgDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgDatabasesDatabaseArrayInput)(nil)).Elem(), GetRdsPgDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgPluginsPluginInput)(nil)).Elem(), GetRdsPgPluginsPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgPluginsPluginArrayInput)(nil)).Elem(), GetRdsPgPluginsPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgSqlLimitsSqlLimitInput)(nil)).Elem(), GetRdsPgSqlLimitsSqlLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsPgSqlLimitsSqlLimitArrayInput)(nil)).Elem(), GetRdsPgSqlLimitsSqlLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsStorageTypesStorageTypeInput)(nil)).Elem(), GetRdsStorageTypesStorageTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdsStorageTypesStorageTypeArrayInput)(nil)).Elem(), GetRdsStorageTypesStorageTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDataTasksTaskInput)(nil)).Elem(), GetSfsTurboDataTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDataTasksTaskArrayInput)(nil)).Elem(), GetSfsTurboDataTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDuTasksTaskInput)(nil)).Elem(), GetSfsTurboDuTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDuTasksTaskArrayInput)(nil)).Elem(), GetSfsTurboDuTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsageInput)(nil)).Elem(), GetSfsTurboDuTasksTaskDirUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsageArrayInput)(nil)).Elem(), GetSfsTurboDuTasksTaskDirUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsageFileCountInput)(nil)).Elem(), GetSfsTurboDuTasksTaskDirUsageFileCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboDuTasksTaskDirUsageFileCountArrayInput)(nil)).Elem(), GetSfsTurboDuTasksTaskDirUsageFileCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboObsTargetsTargetInput)(nil)).Elem(), GetSfsTurboObsTargetsTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboObsTargetsTargetArrayInput)(nil)).Elem(), GetSfsTurboObsTargetsTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboObsTargetsTargetObInput)(nil)).Elem(), GetSfsTurboObsTargetsTargetObArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboObsTargetsTargetObArrayInput)(nil)).Elem(), GetSfsTurboObsTargetsTargetObArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboPermRulesRuleInput)(nil)).Elem(), GetSfsTurboPermRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurboPermRulesRuleArrayInput)(nil)).Elem(), GetSfsTurboPermRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurbosTurboInput)(nil)).Elem(), GetSfsTurbosTurboArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSfsTurbosTurboArrayInput)(nil)).Elem(), GetSfsTurbosTurboArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAddressGroupsAddressGroupInput)(nil)).Elem(), GetVpcAddressGroupsAddressGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAddressGroupsAddressGroupArrayInput)(nil)).Elem(), GetVpcAddressGroupsAddressGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAddressGroupsAddressGroupIpExtraSetInput)(nil)).Elem(), GetVpcAddressGroupsAddressGroupIpExtraSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAddressGroupsAddressGroupIpExtraSetArrayInput)(nil)).Elem(), GetVpcAddressGroupsAddressGroupIpExtraSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcBandwidthPublicipInput)(nil)).Elem(), GetVpcBandwidthPublicipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcBandwidthPublicipArrayInput)(nil)).Elem(), GetVpcBandwidthPublicipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcEipsEipInput)(nil)).Elem(), GetVpcEipsEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcEipsEipArrayInput)(nil)).Elem(), GetVpcEipsEipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcRouteTypeInput)(nil)).Elem(), GetVpcRouteTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcRouteTypeArrayInput)(nil)).Elem(), GetVpcRouteTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcRouteTableRouteInput)(nil)).Elem(), GetVpcRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcRouteTableRouteArrayInput)(nil)).Elem(), GetVpcRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcRoutesRouteInput)(nil)).Elem(), GetVpcRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcRoutesRouteArrayInput)(nil)).Elem(), GetVpcRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcSubnetsSubnetInput)(nil)).Elem(), GetVpcSubnetsSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcSubnetsSubnetArrayInput)(nil)).Elem(), GetVpcSubnetsSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcepPublicServicesServiceInput)(nil)).Elem(), GetVpcepPublicServicesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcepPublicServicesServiceArrayInput)(nil)).Elem(), GetVpcepPublicServicesServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcInput)(nil)).Elem(), GetVpcsVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcArrayInput)(nil)).Elem(), GetVpcsVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionHealthChecksConnectionHealthCheckInput)(nil)).Elem(), GetVpnConnectionHealthChecksConnectionHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionHealthChecksConnectionHealthCheckArrayInput)(nil)).Elem(), GetVpnConnectionHealthChecksConnectionHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionInput)(nil)).Elem(), GetVpnConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionArrayInput)(nil)).Elem(), GetVpnConnectionsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicyInput)(nil)).Elem(), GetVpnConnectionsConnectionIkepolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicyArrayInput)(nil)).Elem(), GetVpnConnectionsConnectionIkepolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicyDpdInput)(nil)).Elem(), GetVpnConnectionsConnectionIkepolicyDpdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionIkepolicyDpdArrayInput)(nil)).Elem(), GetVpnConnectionsConnectionIkepolicyDpdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionIpsecpolicyInput)(nil)).Elem(), GetVpnConnectionsConnectionIpsecpolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionIpsecpolicyArrayInput)(nil)).Elem(), GetVpnConnectionsConnectionIpsecpolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionPolicyRuleInput)(nil)).Elem(), GetVpnConnectionsConnectionPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnConnectionsConnectionPolicyRuleArrayInput)(nil)).Elem(), GetVpnConnectionsConnectionPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGatewayInput)(nil)).Elem(), GetVpnCustomerGatewaysCustomerGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGatewayArrayInput)(nil)).Elem(), GetVpnCustomerGatewaysCustomerGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGatewayCaCertificateInput)(nil)).Elem(), GetVpnCustomerGatewaysCustomerGatewayCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayInput)(nil)).Elem(), GetVpnCustomerGatewaysCustomerGatewayCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewaysGatewayInput)(nil)).Elem(), GetVpnGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewaysGatewayArrayInput)(nil)).Elem(), GetVpnGatewaysGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewaysGatewayEipInput)(nil)).Elem(), GetVpnGatewaysGatewayEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewaysGatewayEipArrayInput)(nil)).Elem(), GetVpnGatewaysGatewayEipArray{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleDiscoveryRuleOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleDiscoveryRuleArrayOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleLogPathRuleOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleLogPathRuleArrayOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleNameRulesOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleNameRulesPtrOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleNameRulesApplicationNameRuleOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleNameRulesApplicationNameRuleArrayOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleNameRulesServiceNameRuleOutput{})
	pulumi.RegisterOutputType(AomServiceDiscoveryRuleNameRulesServiceNameRuleArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiBackendParamOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphPtrOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphPolicyOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphPolicyConditionOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiFuncGraphPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockPtrOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockPolicyOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockPolicyConditionOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMockPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiRequestParamOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiRequestParamArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebPtrOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebPolicyOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebPolicyConditionOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiWebPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupEnvironmentOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupUrlDomainOutput{})
	pulumi.RegisterOutputType(ApiGatewayGroupUrlDomainArrayOutput{})
	pulumi.RegisterOutputType(ApigApiBackendParamOutput{})
	pulumi.RegisterOutputType(ApigApiBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphPtrOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphPolicyOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphPolicyConditionOutput{})
	pulumi.RegisterOutputType(ApigApiFuncGraphPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(ApigApiMockOutput{})
	pulumi.RegisterOutputType(ApigApiMockPtrOutput{})
	pulumi.RegisterOutputType(ApigApiMockPolicyOutput{})
	pulumi.RegisterOutputType(ApigApiMockPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApigApiMockPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(ApigApiMockPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApigApiMockPolicyConditionOutput{})
	pulumi.RegisterOutputType(ApigApiMockPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(ApigApiPublishmentHistoryOutput{})
	pulumi.RegisterOutputType(ApigApiPublishmentHistoryArrayOutput{})
	pulumi.RegisterOutputType(ApigApiRequestParamOutput{})
	pulumi.RegisterOutputType(ApigApiRequestParamArrayOutput{})
	pulumi.RegisterOutputType(ApigApiWebOutput{})
	pulumi.RegisterOutputType(ApigApiWebPtrOutput{})
	pulumi.RegisterOutputType(ApigApiWebPolicyOutput{})
	pulumi.RegisterOutputType(ApigApiWebPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApigApiWebPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(ApigApiWebPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(ApigApiWebPolicyConditionOutput{})
	pulumi.RegisterOutputType(ApigApiWebPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(ApigApplicationQuotaAssociateApplicationOutput{})
	pulumi.RegisterOutputType(ApigApplicationQuotaAssociateApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApigChannelHealthCheckOutput{})
	pulumi.RegisterOutputType(ApigChannelHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ApigChannelMemberOutput{})
	pulumi.RegisterOutputType(ApigChannelMemberArrayOutput{})
	pulumi.RegisterOutputType(ApigChannelMemberGroupOutput{})
	pulumi.RegisterOutputType(ApigChannelMemberGroupArrayOutput{})
	pulumi.RegisterOutputType(ApigChannelMicroserviceOutput{})
	pulumi.RegisterOutputType(ApigChannelMicroservicePtrOutput{})
	pulumi.RegisterOutputType(ApigChannelMicroserviceCceConfigOutput{})
	pulumi.RegisterOutputType(ApigChannelMicroserviceCceConfigPtrOutput{})
	pulumi.RegisterOutputType(ApigChannelMicroserviceCseConfigOutput{})
	pulumi.RegisterOutputType(ApigChannelMicroserviceCseConfigPtrOutput{})
	pulumi.RegisterOutputType(ApigCustomAuthorizerIdentityOutput{})
	pulumi.RegisterOutputType(ApigCustomAuthorizerIdentityArrayOutput{})
	pulumi.RegisterOutputType(ApigGroupEnvironmentOutput{})
	pulumi.RegisterOutputType(ApigGroupEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ApigGroupEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ApigGroupEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ApigGroupUrlDomainOutput{})
	pulumi.RegisterOutputType(ApigGroupUrlDomainArrayOutput{})
	pulumi.RegisterOutputType(ApigInstanceCustomIngressPortOutput{})
	pulumi.RegisterOutputType(ApigInstanceCustomIngressPortArrayOutput{})
	pulumi.RegisterOutputType(ApigResponseRuleOutput{})
	pulumi.RegisterOutputType(ApigResponseRuleArrayOutput{})
	pulumi.RegisterOutputType(ApigResponseRuleHeaderOutput{})
	pulumi.RegisterOutputType(ApigResponseRuleHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApigThrottlingPolicyAppThrottleOutput{})
	pulumi.RegisterOutputType(ApigThrottlingPolicyAppThrottleArrayOutput{})
	pulumi.RegisterOutputType(ApigThrottlingPolicyUserThrottleOutput{})
	pulumi.RegisterOutputType(ApigThrottlingPolicyUserThrottleArrayOutput{})
	pulumi.RegisterOutputType(AsBandwidthPolicyScalingPolicyActionOutput{})
	pulumi.RegisterOutputType(AsBandwidthPolicyScalingPolicyActionPtrOutput{})
	pulumi.RegisterOutputType(AsBandwidthPolicyScheduledPolicyOutput{})
	pulumi.RegisterOutputType(AsBandwidthPolicyScheduledPolicyPtrOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigDiskOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigDiskArrayOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPersonalityOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPersonalityArrayOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPublicIpOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPublicIpPtrOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPublicIpEipOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPublicIpEipPtrOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPublicIpEipBandwidthOutput{})
	pulumi.RegisterOutputType(AsConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput{})
	pulumi.RegisterOutputType(AsGroupLbaasListenerOutput{})
	pulumi.RegisterOutputType(AsGroupLbaasListenerArrayOutput{})
	pulumi.RegisterOutputType(AsGroupNetworkOutput{})
	pulumi.RegisterOutputType(AsGroupNetworkArrayOutput{})
	pulumi.RegisterOutputType(AsGroupSecurityGroupOutput{})
	pulumi.RegisterOutputType(AsGroupSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(AsPolicyScalingPolicyActionOutput{})
	pulumi.RegisterOutputType(AsPolicyScalingPolicyActionPtrOutput{})
	pulumi.RegisterOutputType(AsPolicyScheduledPolicyOutput{})
	pulumi.RegisterOutputType(AsPolicyScheduledPolicyPtrOutput{})
	pulumi.RegisterOutputType(CbrBackupShareMemberOutput{})
	pulumi.RegisterOutputType(CbrBackupShareMemberArrayOutput{})
	pulumi.RegisterOutputType(CbrCheckpointBackupOutput{})
	pulumi.RegisterOutputType(CbrCheckpointBackupArrayOutput{})
	pulumi.RegisterOutputType(CbrPolicyBackupCycleOutput{})
	pulumi.RegisterOutputType(CbrPolicyBackupCyclePtrOutput{})
	pulumi.RegisterOutputType(CbrPolicyLongTermRetentionOutput{})
	pulumi.RegisterOutputType(CbrPolicyLongTermRetentionPtrOutput{})
	pulumi.RegisterOutputType(CbrVaultPolicyOutput{})
	pulumi.RegisterOutputType(CbrVaultPolicyArrayOutput{})
	pulumi.RegisterOutputType(CbrVaultResourceOutput{})
	pulumi.RegisterOutputType(CbrVaultResourceArrayOutput{})
	pulumi.RegisterOutputType(CceAddonValuesOutput{})
	pulumi.RegisterOutputType(CceAddonValuesPtrOutput{})
	pulumi.RegisterOutputType(CceClusterCertificateClusterOutput{})
	pulumi.RegisterOutputType(CceClusterCertificateClusterArrayOutput{})
	pulumi.RegisterOutputType(CceClusterCertificateUserOutput{})
	pulumi.RegisterOutputType(CceClusterCertificateUserArrayOutput{})
	pulumi.RegisterOutputType(CceClusterComponentConfigurationOutput{})
	pulumi.RegisterOutputType(CceClusterComponentConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CceClusterExtendParamOutput{})
	pulumi.RegisterOutputType(CceClusterExtendParamArrayOutput{})
	pulumi.RegisterOutputType(CceClusterMasterOutput{})
	pulumi.RegisterOutputType(CceClusterMasterArrayOutput{})
	pulumi.RegisterOutputType(CceNodeAttachDataVolumeOutput{})
	pulumi.RegisterOutputType(CceNodeAttachDataVolumeArrayOutput{})
	pulumi.RegisterOutputType(CceNodeAttachHostnameConfigOutput{})
	pulumi.RegisterOutputType(CceNodeAttachHostnameConfigPtrOutput{})
	pulumi.RegisterOutputType(CceNodeAttachRootVolumeOutput{})
	pulumi.RegisterOutputType(CceNodeAttachRootVolumeArrayOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStorageOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStoragePtrOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStorageGroupOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStorageGroupArrayOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStorageGroupVirtualSpaceOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStorageGroupVirtualSpaceArrayOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStorageSelectorOutput{})
	pulumi.RegisterOutputType(CceNodeAttachStorageSelectorArrayOutput{})
	pulumi.RegisterOutputType(CceNodeAttachTaintOutput{})
	pulumi.RegisterOutputType(CceNodeAttachTaintArrayOutput{})
	pulumi.RegisterOutputType(CceNodeDataVolumeOutput{})
	pulumi.RegisterOutputType(CceNodeDataVolumeArrayOutput{})
	pulumi.RegisterOutputType(CceNodeExtendParamsOutput{})
	pulumi.RegisterOutputType(CceNodeExtendParamsPtrOutput{})
	pulumi.RegisterOutputType(CceNodeExtensionNicOutput{})
	pulumi.RegisterOutputType(CceNodeExtensionNicArrayOutput{})
	pulumi.RegisterOutputType(CceNodeHostnameConfigOutput{})
	pulumi.RegisterOutputType(CceNodeHostnameConfigPtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolDataVolumeOutput{})
	pulumi.RegisterOutputType(CceNodePoolDataVolumeArrayOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtendParamsOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtendParamsPtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupArrayOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupMetadataOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupMetadataPtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupSpecOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupSpecPtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupSpecAutoscalingOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupSpecAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecificationPtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolHostnameConfigOutput{})
	pulumi.RegisterOutputType(CceNodePoolHostnameConfigPtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolRootVolumeOutput{})
	pulumi.RegisterOutputType(CceNodePoolRootVolumePtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolStorageOutput{})
	pulumi.RegisterOutputType(CceNodePoolStoragePtrOutput{})
	pulumi.RegisterOutputType(CceNodePoolStorageGroupOutput{})
	pulumi.RegisterOutputType(CceNodePoolStorageGroupArrayOutput{})
	pulumi.RegisterOutputType(CceNodePoolStorageGroupVirtualSpaceOutput{})
	pulumi.RegisterOutputType(CceNodePoolStorageGroupVirtualSpaceArrayOutput{})
	pulumi.RegisterOutputType(CceNodePoolStorageSelectorOutput{})
	pulumi.RegisterOutputType(CceNodePoolStorageSelectorArrayOutput{})
	pulumi.RegisterOutputType(CceNodePoolTaintOutput{})
	pulumi.RegisterOutputType(CceNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(CceNodeRootVolumeOutput{})
	pulumi.RegisterOutputType(CceNodeRootVolumePtrOutput{})
	pulumi.RegisterOutputType(CceNodeStorageOutput{})
	pulumi.RegisterOutputType(CceNodeStoragePtrOutput{})
	pulumi.RegisterOutputType(CceNodeStorageGroupOutput{})
	pulumi.RegisterOutputType(CceNodeStorageGroupArrayOutput{})
	pulumi.RegisterOutputType(CceNodeStorageGroupVirtualSpaceOutput{})
	pulumi.RegisterOutputType(CceNodeStorageGroupVirtualSpaceArrayOutput{})
	pulumi.RegisterOutputType(CceNodeStorageSelectorOutput{})
	pulumi.RegisterOutputType(CceNodeStorageSelectorArrayOutput{})
	pulumi.RegisterOutputType(CceNodeTaintOutput{})
	pulumi.RegisterOutputType(CceNodeTaintArrayOutput{})
	pulumi.RegisterOutputType(CdmClusterInstanceOutput{})
	pulumi.RegisterOutputType(CdmClusterInstanceArrayOutput{})
	pulumi.RegisterOutputType(CesAlarmruleAlarmActionOutput{})
	pulumi.RegisterOutputType(CesAlarmruleAlarmActionArrayOutput{})
	pulumi.RegisterOutputType(CesAlarmruleConditionOutput{})
	pulumi.RegisterOutputType(CesAlarmruleConditionPtrOutput{})
	pulumi.RegisterOutputType(CesAlarmruleInsufficientdataActionOutput{})
	pulumi.RegisterOutputType(CesAlarmruleInsufficientdataActionArrayOutput{})
	pulumi.RegisterOutputType(CesAlarmruleMetricOutput{})
	pulumi.RegisterOutputType(CesAlarmruleMetricPtrOutput{})
	pulumi.RegisterOutputType(CesAlarmruleMetricDimensionOutput{})
	pulumi.RegisterOutputType(CesAlarmruleMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(CesAlarmruleOkActionOutput{})
	pulumi.RegisterOutputType(CesAlarmruleOkActionArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceBandwidthOutput{})
	pulumi.RegisterOutputType(ComputeInstanceBandwidthPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceDataDiskOutput{})
	pulumi.RegisterOutputType(ComputeInstanceDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceNetworkOutput{})
	pulumi.RegisterOutputType(ComputeInstanceNetworkArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSchedulerHintOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSchedulerHintArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceVolumeAttachedOutput{})
	pulumi.RegisterOutputType(ComputeInstanceVolumeAttachedArrayOutput{})
	pulumi.RegisterOutputType(CssClusterBackupStrategyOutput{})
	pulumi.RegisterOutputType(CssClusterBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(CssClusterNodeOutput{})
	pulumi.RegisterOutputType(CssClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(CssClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(CssClusterNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(CssClusterNodeConfigNetworkInfoOutput{})
	pulumi.RegisterOutputType(CssClusterNodeConfigNetworkInfoPtrOutput{})
	pulumi.RegisterOutputType(CssClusterNodeConfigVolumeOutput{})
	pulumi.RegisterOutputType(CssClusterNodeConfigVolumePtrOutput{})
	pulumi.RegisterOutputType(CtsNotificationFilterOutput{})
	pulumi.RegisterOutputType(CtsNotificationFilterPtrOutput{})
	pulumi.RegisterOutputType(CtsNotificationOperationOutput{})
	pulumi.RegisterOutputType(CtsNotificationOperationArrayOutput{})
	pulumi.RegisterOutputType(CtsNotificationOperationUserOutput{})
	pulumi.RegisterOutputType(CtsNotificationOperationUserArrayOutput{})
	pulumi.RegisterOutputType(DcsInstanceBackupPolicyOutput{})
	pulumi.RegisterOutputType(DcsInstanceBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(DcsInstanceBandwidthInfoOutput{})
	pulumi.RegisterOutputType(DcsInstanceBandwidthInfoArrayOutput{})
	pulumi.RegisterOutputType(DcsInstanceParameterOutput{})
	pulumi.RegisterOutputType(DcsInstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(DcsInstanceWhitelistOutput{})
	pulumi.RegisterOutputType(DcsInstanceWhitelistArrayOutput{})
	pulumi.RegisterOutputType(DcsParametersConfigurationParameterOutput{})
	pulumi.RegisterOutputType(DcsParametersConfigurationParameterArrayOutput{})
	pulumi.RegisterOutputType(DcsRestoreRestoreRecordOutput{})
	pulumi.RegisterOutputType(DcsRestoreRestoreRecordArrayOutput{})
	pulumi.RegisterOutputType(DdsInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(DdsInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(DdsInstanceConfigurationOutput{})
	pulumi.RegisterOutputType(DdsInstanceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DdsInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(DdsInstanceDatastorePtrOutput{})
	pulumi.RegisterOutputType(DdsInstanceFlavorOutput{})
	pulumi.RegisterOutputType(DdsInstanceFlavorArrayOutput{})
	pulumi.RegisterOutputType(DdsInstanceGroupOutput{})
	pulumi.RegisterOutputType(DdsInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(DdsInstanceGroupNodeOutput{})
	pulumi.RegisterOutputType(DdsInstanceGroupNodeArrayOutput{})
	pulumi.RegisterOutputType(DdsInstanceNodeOutput{})
	pulumi.RegisterOutputType(DdsInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(DisStreamPartitionOutput{})
	pulumi.RegisterOutputType(DisStreamPartitionArrayOutput{})
	pulumi.RegisterOutputType(DliQueueScalingPolicyOutput{})
	pulumi.RegisterOutputType(DliQueueScalingPolicyArrayOutput{})
	pulumi.RegisterOutputType(DliQueueSparkDriverOutput{})
	pulumi.RegisterOutputType(DliQueueSparkDriverPtrOutput{})
	pulumi.RegisterOutputType(DliSparkJobDependentPackageOutput{})
	pulumi.RegisterOutputType(DliSparkJobDependentPackageArrayOutput{})
	pulumi.RegisterOutputType(DliSparkJobDependentPackagePackageOutput{})
	pulumi.RegisterOutputType(DliSparkJobDependentPackagePackageArrayOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstanceCrossVpcAccessOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstanceCrossVpcAccessArrayOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstanceParameterOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstancePortProtocolOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstancePortProtocolArrayOutput{})
	pulumi.RegisterOutputType(DmsKafkaMessageProducePropertyListOutput{})
	pulumi.RegisterOutputType(DmsKafkaMessageProducePropertyListArrayOutput{})
	pulumi.RegisterOutputType(DmsKafkaPermissionsPolicyOutput{})
	pulumi.RegisterOutputType(DmsKafkaPermissionsPolicyArrayOutput{})
	pulumi.RegisterOutputType(DmsKafkaTopicConfigOutput{})
	pulumi.RegisterOutputType(DmsKafkaTopicConfigArrayOutput{})
	pulumi.RegisterOutputType(DnsZoneRouterOutput{})
	pulumi.RegisterOutputType(DnsZoneRouterArrayOutput{})
	pulumi.RegisterOutputType(DrsJobDestinationDbOutput{})
	pulumi.RegisterOutputType(DrsJobDestinationDbPtrOutput{})
	pulumi.RegisterOutputType(DrsJobLimitSpeedOutput{})
	pulumi.RegisterOutputType(DrsJobLimitSpeedArrayOutput{})
	pulumi.RegisterOutputType(DrsJobSourceDbOutput{})
	pulumi.RegisterOutputType(DrsJobSourceDbPtrOutput{})
	pulumi.RegisterOutputType(DwsClusterElbOutput{})
	pulumi.RegisterOutputType(DwsClusterElbArrayOutput{})
	pulumi.RegisterOutputType(DwsClusterEndpointOutput{})
	pulumi.RegisterOutputType(DwsClusterEndpointArrayOutput{})
	pulumi.RegisterOutputType(DwsClusterMaintainWindowOutput{})
	pulumi.RegisterOutputType(DwsClusterMaintainWindowArrayOutput{})
	pulumi.RegisterOutputType(DwsClusterPublicEndpointOutput{})
	pulumi.RegisterOutputType(DwsClusterPublicEndpointArrayOutput{})
	pulumi.RegisterOutputType(DwsClusterPublicIpOutput{})
	pulumi.RegisterOutputType(DwsClusterPublicIpPtrOutput{})
	pulumi.RegisterOutputType(DwsClusterVolumeOutput{})
	pulumi.RegisterOutputType(DwsClusterVolumePtrOutput{})
	pulumi.RegisterOutputType(ElbIpgroupIpListOutput{})
	pulumi.RegisterOutputType(ElbIpgroupIpListArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigInsertHeadersConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigInsertHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigInsertHeadersConfigConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigInsertHeadersConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigRemoveHeadersConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigRemoveHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigRemoveHeadersConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigTrafficLimitConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyFixedResponseConfigTrafficLimitConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsConfigArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsStickySessionConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectPoolsStickySessionConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigInsertHeadersConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigInsertHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigInsertHeadersConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigRemoveHeadersConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigRemoveHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigOutput{})
	pulumi.RegisterOutputType(ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(ElbL7ruleConditionOutput{})
	pulumi.RegisterOutputType(ElbL7ruleConditionArrayOutput{})
	pulumi.RegisterOutputType(ElbListenerPortRangeOutput{})
	pulumi.RegisterOutputType(ElbListenerPortRangeArrayOutput{})
	pulumi.RegisterOutputType(ElbPoolPersistenceOutput{})
	pulumi.RegisterOutputType(ElbPoolPersistencePtrOutput{})
	pulumi.RegisterOutputType(ElbSecurityPolicyListenerOutput{})
	pulumi.RegisterOutputType(ElbSecurityPolicyListenerArrayOutput{})
	pulumi.RegisterOutputType(EvsVolumeAttachmentOutput{})
	pulumi.RegisterOutputType(EvsVolumeAttachmentArrayOutput{})
	pulumi.RegisterOutputType(FgsFunctionCustomImageOutput{})
	pulumi.RegisterOutputType(FgsFunctionCustomImagePtrOutput{})
	pulumi.RegisterOutputType(FgsFunctionFuncMountOutput{})
	pulumi.RegisterOutputType(FgsFunctionFuncMountArrayOutput{})
	pulumi.RegisterOutputType(FgsFunctionNetworkControllerOutput{})
	pulumi.RegisterOutputType(FgsFunctionNetworkControllerPtrOutput{})
	pulumi.RegisterOutputType(FgsFunctionNetworkControllerTriggerAccessVpcOutput{})
	pulumi.RegisterOutputType(FgsFunctionNetworkControllerTriggerAccessVpcArrayOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceArrayOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceTacticsConfigOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceTacticsConfigPtrOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceTacticsConfigCronConfigOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceTacticsConfigCronConfigArrayOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceTacticsConfigMetricConfigOutput{})
	pulumi.RegisterOutputType(FgsFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput{})
	pulumi.RegisterOutputType(FgsFunctionVersionOutput{})
	pulumi.RegisterOutputType(FgsFunctionVersionArrayOutput{})
	pulumi.RegisterOutputType(FgsFunctionVersionAliasesOutput{})
	pulumi.RegisterOutputType(FgsFunctionVersionAliasesPtrOutput{})
	pulumi.RegisterOutputType(GesGraphEncryptionOutput{})
	pulumi.RegisterOutputType(GesGraphEncryptionPtrOutput{})
	pulumi.RegisterOutputType(GesGraphLtsOperationTraceOutput{})
	pulumi.RegisterOutputType(GesGraphLtsOperationTracePtrOutput{})
	pulumi.RegisterOutputType(GesGraphPublicIpOutput{})
	pulumi.RegisterOutputType(GesGraphPublicIpPtrOutput{})
	pulumi.RegisterOutputType(GesGraphVertexIdTypeOutput{})
	pulumi.RegisterOutputType(GesGraphVertexIdTypePtrOutput{})
	pulumi.RegisterOutputType(IdentityAclIpCidrOutput{})
	pulumi.RegisterOutputType(IdentityAclIpCidrArrayOutput{})
	pulumi.RegisterOutputType(IdentityAclIpRangeOutput{})
	pulumi.RegisterOutputType(IdentityAclIpRangeArrayOutput{})
	pulumi.RegisterOutputType(IdentityAgencyProjectRoleOutput{})
	pulumi.RegisterOutputType(IdentityAgencyProjectRoleArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderAccessConfigOutput{})
	pulumi.RegisterOutputType(IdentityProviderAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionConversionRuleOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionConversionRuleArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionConversionRuleLocalOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionConversionRuleLocalArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionConversionRuleRemoteOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionConversionRuleRemoteArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionRuleOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionRuleArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionRuleLocalOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionRuleLocalArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionRuleRemoteOutput{})
	pulumi.RegisterOutputType(IdentityProviderConversionRuleRemoteArrayOutput{})
	pulumi.RegisterOutputType(LbPoolPersistenceOutput{})
	pulumi.RegisterOutputType(LbPoolPersistenceArrayOutput{})
	pulumi.RegisterOutputType(MapreduceClusterAnalysisCoreNodesOutput{})
	pulumi.RegisterOutputType(MapreduceClusterAnalysisCoreNodesPtrOutput{})
	pulumi.RegisterOutputType(MapreduceClusterAnalysisTaskNodesOutput{})
	pulumi.RegisterOutputType(MapreduceClusterAnalysisTaskNodesPtrOutput{})
	pulumi.RegisterOutputType(MapreduceClusterBootstrapScriptOutput{})
	pulumi.RegisterOutputType(MapreduceClusterBootstrapScriptArrayOutput{})
	pulumi.RegisterOutputType(MapreduceClusterComponentConfigOutput{})
	pulumi.RegisterOutputType(MapreduceClusterComponentConfigArrayOutput{})
	pulumi.RegisterOutputType(MapreduceClusterComponentConfigConfigOutput{})
	pulumi.RegisterOutputType(MapreduceClusterComponentConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(MapreduceClusterCustomNodeOutput{})
	pulumi.RegisterOutputType(MapreduceClusterCustomNodeArrayOutput{})
	pulumi.RegisterOutputType(MapreduceClusterExternalDatasourceOutput{})
	pulumi.RegisterOutputType(MapreduceClusterExternalDatasourceArrayOutput{})
	pulumi.RegisterOutputType(MapreduceClusterMasterNodesOutput{})
	pulumi.RegisterOutputType(MapreduceClusterMasterNodesPtrOutput{})
	pulumi.RegisterOutputType(MapreduceClusterSmnNotifyOutput{})
	pulumi.RegisterOutputType(MapreduceClusterSmnNotifyPtrOutput{})
	pulumi.RegisterOutputType(MapreduceClusterStreamingCoreNodesOutput{})
	pulumi.RegisterOutputType(MapreduceClusterStreamingCoreNodesPtrOutput{})
	pulumi.RegisterOutputType(MapreduceClusterStreamingTaskNodesOutput{})
	pulumi.RegisterOutputType(MapreduceClusterStreamingTaskNodesPtrOutput{})
	pulumi.RegisterOutputType(NatGatewaySessionConfOutput{})
	pulumi.RegisterOutputType(NatGatewaySessionConfPtrOutput{})
	pulumi.RegisterOutputType(NetworkingSecgroupRuleTypeOutput{})
	pulumi.RegisterOutputType(NetworkingSecgroupRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketAclAccountPermissionOutput{})
	pulumi.RegisterOutputType(ObsBucketAclAccountPermissionArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketAclLogDeliveryUserPermissionOutput{})
	pulumi.RegisterOutputType(ObsBucketAclLogDeliveryUserPermissionPtrOutput{})
	pulumi.RegisterOutputType(ObsBucketAclOwnerPermissionOutput{})
	pulumi.RegisterOutputType(ObsBucketAclOwnerPermissionPtrOutput{})
	pulumi.RegisterOutputType(ObsBucketAclPublicPermissionOutput{})
	pulumi.RegisterOutputType(ObsBucketAclPublicPermissionPtrOutput{})
	pulumi.RegisterOutputType(ObsBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(ObsBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleAbortIncompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleExpirationArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleNoncurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(ObsBucketLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketLoggingOutput{})
	pulumi.RegisterOutputType(ObsBucketLoggingArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketStorageInfoOutput{})
	pulumi.RegisterOutputType(ObsBucketStorageInfoArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketWebsiteOutput{})
	pulumi.RegisterOutputType(ObsBucketWebsitePtrOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRoleOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(RdsBackupDatabaseOutput{})
	pulumi.RegisterOutputType(RdsBackupDatabaseArrayOutput{})
	pulumi.RegisterOutputType(RdsInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(RdsInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(RdsInstanceDbOutput{})
	pulumi.RegisterOutputType(RdsInstanceDbPtrOutput{})
	pulumi.RegisterOutputType(RdsInstanceMsdtcHostOutput{})
	pulumi.RegisterOutputType(RdsInstanceMsdtcHostArrayOutput{})
	pulumi.RegisterOutputType(RdsInstanceNodeOutput{})
	pulumi.RegisterOutputType(RdsInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(RdsInstanceParameterOutput{})
	pulumi.RegisterOutputType(RdsInstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(RdsInstanceRestoreOutput{})
	pulumi.RegisterOutputType(RdsInstanceRestorePtrOutput{})
	pulumi.RegisterOutputType(RdsInstanceVolumeOutput{})
	pulumi.RegisterOutputType(RdsInstanceVolumePtrOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabasePrivilegeUserOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabasePrivilegeUserArrayOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabaseTableRestoreDatabaseOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabaseTableRestoreDatabaseArrayOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabaseTableRestoreRestoreTableOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabaseTableRestoreRestoreTableArrayOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabaseTableRestoreRestoreTableTableOutput{})
	pulumi.RegisterOutputType(RdsMysqlDatabaseTableRestoreRestoreTableTableArrayOutput{})
	pulumi.RegisterOutputType(RdsParametergroupConfigurationParameterOutput{})
	pulumi.RegisterOutputType(RdsParametergroupConfigurationParameterArrayOutput{})
	pulumi.RegisterOutputType(RdsParametergroupDatastoreOutput{})
	pulumi.RegisterOutputType(RdsParametergroupDatastorePtrOutput{})
	pulumi.RegisterOutputType(RdsPgAccountAttributeOutput{})
	pulumi.RegisterOutputType(RdsPgAccountAttributeArrayOutput{})
	pulumi.RegisterOutputType(RdsPgHbaHostBasedAuthenticationOutput{})
	pulumi.RegisterOutputType(RdsPgHbaHostBasedAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceDbOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceDbPtrOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceParameterOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceVolumeOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceVolumePtrOutput{})
	pulumi.RegisterOutputType(RdsSqlserverDatabasePrivilegeUserOutput{})
	pulumi.RegisterOutputType(RdsSqlserverDatabasePrivilegeUserArrayOutput{})
	pulumi.RegisterOutputType(SfsFileSystemAccessRuleOutput{})
	pulumi.RegisterOutputType(SfsFileSystemAccessRuleArrayOutput{})
	pulumi.RegisterOutputType(SfsTurboDuTaskDirUsageOutput{})
	pulumi.RegisterOutputType(SfsTurboDuTaskDirUsageArrayOutput{})
	pulumi.RegisterOutputType(SfsTurboDuTaskDirUsageFileCountOutput{})
	pulumi.RegisterOutputType(SfsTurboDuTaskDirUsageFileCountArrayOutput{})
	pulumi.RegisterOutputType(SfsTurboObsTargetObsOutput{})
	pulumi.RegisterOutputType(SfsTurboObsTargetObsPtrOutput{})
	pulumi.RegisterOutputType(SmnSubscriptionExtensionOutput{})
	pulumi.RegisterOutputType(SmnSubscriptionExtensionPtrOutput{})
	pulumi.RegisterOutputType(SmnSubscriptionFilterPolicyOutput{})
	pulumi.RegisterOutputType(SmnSubscriptionFilterPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwrOrganizationPermissionsSelfPermissionOutput{})
	pulumi.RegisterOutputType(SwrOrganizationPermissionsSelfPermissionArrayOutput{})
	pulumi.RegisterOutputType(SwrOrganizationPermissionsUserOutput{})
	pulumi.RegisterOutputType(SwrOrganizationPermissionsUserArrayOutput{})
	pulumi.RegisterOutputType(VpcAddressGroupIpExtraSetOutput{})
	pulumi.RegisterOutputType(VpcAddressGroupIpExtraSetArrayOutput{})
	pulumi.RegisterOutputType(VpcBandwidthPublicipOutput{})
	pulumi.RegisterOutputType(VpcBandwidthPublicipArrayOutput{})
	pulumi.RegisterOutputType(VpcEipBandwidthOutput{})
	pulumi.RegisterOutputType(VpcEipBandwidthPtrOutput{})
	pulumi.RegisterOutputType(VpcEipPublicipOutput{})
	pulumi.RegisterOutputType(VpcEipPublicipPtrOutput{})
	pulumi.RegisterOutputType(VpcRouteTypeOutput{})
	pulumi.RegisterOutputType(VpcRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(VpcRouteTableRouteOutput{})
	pulumi.RegisterOutputType(VpcRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(VpcepServiceConnectionOutput{})
	pulumi.RegisterOutputType(VpcepServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpcepServicePortMappingOutput{})
	pulumi.RegisterOutputType(VpcepServicePortMappingArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionIkepolicyOutput{})
	pulumi.RegisterOutputType(VpnConnectionIkepolicyPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionIkepolicyDpdOutput{})
	pulumi.RegisterOutputType(VpnConnectionIkepolicyDpdPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionIpsecpolicyOutput{})
	pulumi.RegisterOutputType(VpnConnectionIpsecpolicyPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionPolicyRuleOutput{})
	pulumi.RegisterOutputType(VpnConnectionPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayCertificateOutput{})
	pulumi.RegisterOutputType(VpnGatewayCertificatePtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayEip1Output{})
	pulumi.RegisterOutputType(VpnGatewayEip1PtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayEip2Output{})
	pulumi.RegisterOutputType(VpnGatewayEip2PtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayMasterEipOutput{})
	pulumi.RegisterOutputType(VpnGatewayMasterEipPtrOutput{})
	pulumi.RegisterOutputType(VpnGatewaySlaveEipOutput{})
	pulumi.RegisterOutputType(VpnGatewaySlaveEipPtrOutput{})
	pulumi.RegisterOutputType(GetApigAclPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetApigAclPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedAclPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedAclPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedPluginsPluginOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedPluginsPluginArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedSignaturesSignatureOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedSignaturesSignatureArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedThrottlingPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedThrottlingPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedThrottlingPoliciesPolicyAppThrottleArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleOutput{})
	pulumi.RegisterOutputType(GetApigApiAssociatedThrottlingPoliciesPolicyUserThrottleArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiBackendParamOutput{})
	pulumi.RegisterOutputType(GetApigApiBackendParamArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiBasicConfigurationsConfigurationOutput{})
	pulumi.RegisterOutputType(GetApigApiBasicConfigurationsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphPolicyOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphPolicyConditionOutput{})
	pulumi.RegisterOutputType(GetApigApiFuncGraphPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiMockOutput{})
	pulumi.RegisterOutputType(GetApigApiMockArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiMockPolicyOutput{})
	pulumi.RegisterOutputType(GetApigApiMockPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiMockPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(GetApigApiMockPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiMockPolicyConditionOutput{})
	pulumi.RegisterOutputType(GetApigApiMockPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiRequestParamOutput{})
	pulumi.RegisterOutputType(GetApigApiRequestParamArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiWebOutput{})
	pulumi.RegisterOutputType(GetApigApiWebArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiWebPolicyOutput{})
	pulumi.RegisterOutputType(GetApigApiWebPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiWebPolicyBackendParamOutput{})
	pulumi.RegisterOutputType(GetApigApiWebPolicyBackendParamArrayOutput{})
	pulumi.RegisterOutputType(GetApigApiWebPolicyConditionOutput{})
	pulumi.RegisterOutputType(GetApigApiWebPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(GetApigAppcodesAppcodeOutput{})
	pulumi.RegisterOutputType(GetApigAppcodesAppcodeArrayOutput{})
	pulumi.RegisterOutputType(GetApigApplicationQuotasQuotaOutput{})
	pulumi.RegisterOutputType(GetApigApplicationQuotasQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetApigApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GetApigApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetApigChannelsVpcChannelOutput{})
	pulumi.RegisterOutputType(GetApigChannelsVpcChannelArrayOutput{})
	pulumi.RegisterOutputType(GetApigChannelsVpcChannelMemberGroupOutput{})
	pulumi.RegisterOutputType(GetApigChannelsVpcChannelMemberGroupArrayOutput{})
	pulumi.RegisterOutputType(GetApigChannelsVpcChannelMemberGroupMicroserviceLabelOutput{})
	pulumi.RegisterOutputType(GetApigChannelsVpcChannelMemberGroupMicroserviceLabelArrayOutput{})
	pulumi.RegisterOutputType(GetApigCustomAuthorizersAuthorizerOutput{})
	pulumi.RegisterOutputType(GetApigCustomAuthorizersAuthorizerArrayOutput{})
	pulumi.RegisterOutputType(GetApigCustomAuthorizersAuthorizerIdentityOutput{})
	pulumi.RegisterOutputType(GetApigCustomAuthorizersAuthorizerIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetApigEndpointConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetApigEndpointConnectionsConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetApigEnvironmentVariablesVariableOutput{})
	pulumi.RegisterOutputType(GetApigEnvironmentVariablesVariableArrayOutput{})
	pulumi.RegisterOutputType(GetApigEnvironmentsEnvironmentOutput{})
	pulumi.RegisterOutputType(GetApigEnvironmentsEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupEnvironmentOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupUrlDomainOutput{})
	pulumi.RegisterOutputType(GetApigGroupsGroupUrlDomainArrayOutput{})
	pulumi.RegisterOutputType(GetApigInstanceFeaturesFeatureOutput{})
	pulumi.RegisterOutputType(GetApigInstanceFeaturesFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetApigInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetApigInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetApigSignaturesSignatureOutput{})
	pulumi.RegisterOutputType(GetApigSignaturesSignatureArrayOutput{})
	pulumi.RegisterOutputType(GetApigThrottlingPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetApigThrottlingPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApigThrottlingPoliciesPolicyAppThrottleOutput{})
	pulumi.RegisterOutputType(GetApigThrottlingPoliciesPolicyAppThrottleArrayOutput{})
	pulumi.RegisterOutputType(GetApigThrottlingPoliciesPolicyUserThrottleOutput{})
	pulumi.RegisterOutputType(GetApigThrottlingPoliciesPolicyUserThrottleArrayOutput{})
	pulumi.RegisterOutputType(GetCbhAvailabilityZonesAvailabilityZoneOutput{})
	pulumi.RegisterOutputType(GetCbhAvailabilityZonesAvailabilityZoneArrayOutput{})
	pulumi.RegisterOutputType(GetCbhFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetCbhFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetCbhInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetCbhInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenArrayOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenExtendInfoOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenExtendInfoArrayOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenReplicationRecordOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenReplicationRecordArrayOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenReplicationRecordExtraInfoOutput{})
	pulumi.RegisterOutputType(GetCbrBackupChildrenReplicationRecordExtraInfoArrayOutput{})
	pulumi.RegisterOutputType(GetCbrBackupExtendInfoOutput{})
	pulumi.RegisterOutputType(GetCbrBackupExtendInfoArrayOutput{})
	pulumi.RegisterOutputType(GetCbrBackupReplicationRecordOutput{})
	pulumi.RegisterOutputType(GetCbrBackupReplicationRecordArrayOutput{})
	pulumi.RegisterOutputType(GetCbrBackupReplicationRecordExtraInfoOutput{})
	pulumi.RegisterOutputType(GetCbrBackupReplicationRecordExtraInfoArrayOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyAssociatedVaultOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyAssociatedVaultArrayOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyBackupCycleOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyBackupCycleArrayOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyLongTermRetentionOutput{})
	pulumi.RegisterOutputType(GetCbrPoliciesPolicyLongTermRetentionArrayOutput{})
	pulumi.RegisterOutputType(GetCbrVaultsVaultOutput{})
	pulumi.RegisterOutputType(GetCbrVaultsVaultArrayOutput{})
	pulumi.RegisterOutputType(GetCbrVaultsVaultResourceOutput{})
	pulumi.RegisterOutputType(GetCbrVaultsVaultResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCceAddonTemplateSupportVersionOutput{})
	pulumi.RegisterOutputType(GetCceAddonTemplateSupportVersionArrayOutput{})
	pulumi.RegisterOutputType(GetCceClusterCertificateClusterOutput{})
	pulumi.RegisterOutputType(GetCceClusterCertificateClusterArrayOutput{})
	pulumi.RegisterOutputType(GetCceClusterCertificateContextOutput{})
	pulumi.RegisterOutputType(GetCceClusterCertificateContextArrayOutput{})
	pulumi.RegisterOutputType(GetCceClusterCertificateUserOutput{})
	pulumi.RegisterOutputType(GetCceClusterCertificateUserArrayOutput{})
	pulumi.RegisterOutputType(GetCceClusterEndpointOutput{})
	pulumi.RegisterOutputType(GetCceClusterEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetCceClusterMasterOutput{})
	pulumi.RegisterOutputType(GetCceClusterMasterArrayOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterCertificateClusterOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterCertificateClusterArrayOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterCertificateUserOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterCertificateUserArrayOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterEndpointOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterMasterOutput{})
	pulumi.RegisterOutputType(GetCceClustersClusterMasterArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodeDataVolumeOutput{})
	pulumi.RegisterOutputType(GetCceNodeDataVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodeHostnameConfigOutput{})
	pulumi.RegisterOutputType(GetCceNodeHostnameConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodePoolDataVolumeOutput{})
	pulumi.RegisterOutputType(GetCceNodePoolDataVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodePoolHostnameConfigOutput{})
	pulumi.RegisterOutputType(GetCceNodePoolHostnameConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodePoolRootVolumeOutput{})
	pulumi.RegisterOutputType(GetCceNodePoolRootVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodeRootVolumeOutput{})
	pulumi.RegisterOutputType(GetCceNodeRootVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeDataVolumeOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeDataVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeHostnameConfigOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeHostnameConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeRootVolumeOutput{})
	pulumi.RegisterOutputType(GetCceNodesNodeRootVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetCdmFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetCdmFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetComputeFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetComputeFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceNetworkOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceSchedulerHintOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceSchedulerHintArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceVolumeAttachedOutput{})
	pulumi.RegisterOutputType(GetComputeInstanceVolumeAttachedArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceNetworkOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceSchedulerHintOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceSchedulerHintArrayOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceVolumeAttachedOutput{})
	pulumi.RegisterOutputType(GetComputeInstancesInstanceVolumeAttachedArrayOutput{})
	pulumi.RegisterOutputType(GetComputeServergroupsServergroupOutput{})
	pulumi.RegisterOutputType(GetComputeServergroupsServergroupArrayOutput{})
	pulumi.RegisterOutputType(GetCssFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetCssFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetDcsAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetDcsAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetDcsFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetDcsFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetDdsFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetDdsFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorIoOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorIoArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorPropertyOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorSupportFeatureOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorSupportFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorSupportFeaturePropertyOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaFlavorsFlavorSupportFeaturePropertyArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaInstancesInstanceCrossVpcAccessOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaInstancesInstanceCrossVpcAccessArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaMessagesMessageOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaMessagesMessageArrayOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaUsersUserOutput{})
	pulumi.RegisterOutputType(GetDmsKafkaUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorIoOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorIoArrayOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorPropertyOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorSupportFeatureOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorSupportFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyOutput{})
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsFlavorSupportFeaturePropertyArrayOutput{})
	pulumi.RegisterOutputType(GetDwsFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetDwsFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetDwsFlavorsFlavorElasticVolumeSpecOutput{})
	pulumi.RegisterOutputType(GetDwsFlavorsFlavorElasticVolumeSpecArrayOutput{})
	pulumi.RegisterOutputType(GetElbFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetElbFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolArrayOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolListenerOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolListenerArrayOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolLoadbalancerOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolMemberOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolPersistenceOutput{})
	pulumi.RegisterOutputType(GetElbPoolsPoolPersistenceArrayOutput{})
	pulumi.RegisterOutputType(GetEvsVolumesVolumeOutput{})
	pulumi.RegisterOutputType(GetEvsVolumesVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetEvsVolumesVolumeAttachmentOutput{})
	pulumi.RegisterOutputType(GetEvsVolumesVolumeAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetIdentityGroupUserOutput{})
	pulumi.RegisterOutputType(GetIdentityGroupUserArrayOutput{})
	pulumi.RegisterOutputType(GetIdentityProjectsProjectOutput{})
	pulumi.RegisterOutputType(GetIdentityProjectsProjectArrayOutput{})
	pulumi.RegisterOutputType(GetIdentityUsersUserOutput{})
	pulumi.RegisterOutputType(GetIdentityUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetKpsFailedTasksTaskOutput{})
	pulumi.RegisterOutputType(GetKpsFailedTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(GetKpsKeypairsKeypairOutput{})
	pulumi.RegisterOutputType(GetKpsKeypairsKeypairArrayOutput{})
	pulumi.RegisterOutputType(GetKpsRunningTasksTaskOutput{})
	pulumi.RegisterOutputType(GetKpsRunningTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(GetLbListenersListenerOutput{})
	pulumi.RegisterOutputType(GetLbListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(GetLbListenersListenerLoadbalancerOutput{})
	pulumi.RegisterOutputType(GetLbListenersListenerLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolArrayOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolListenerOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolListenerArrayOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolLoadbalancerOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolMemberOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolPersistenceOutput{})
	pulumi.RegisterOutputType(GetLbPoolsPoolPersistenceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkingSecgroupRuleTypeOutput{})
	pulumi.RegisterOutputType(GetNetworkingSecgroupRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkingSecgroupsSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetNetworkingSecgroupsSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetObsBucketsBucketOutput{})
	pulumi.RegisterOutputType(GetObsBucketsBucketArrayOutput{})
	pulumi.RegisterOutputType(GetRdsBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetRdsBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetRdsBackupsBackupDatabaseOutput{})
	pulumi.RegisterOutputType(GetRdsBackupsBackupDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetRdsBackupsBackupDatastoreOutput{})
	pulumi.RegisterOutputType(GetRdsBackupsBackupDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetRdsEngineVersionsVersionOutput{})
	pulumi.RegisterOutputType(GetRdsEngineVersionsVersionArrayOutput{})
	pulumi.RegisterOutputType(GetRdsFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetRdsFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceDbOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceDbArrayOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceVolumeOutput{})
	pulumi.RegisterOutputType(GetRdsInstancesInstanceVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetRdsPgAccountsUserOutput{})
	pulumi.RegisterOutputType(GetRdsPgAccountsUserArrayOutput{})
	pulumi.RegisterOutputType(GetRdsPgAccountsUserAttributeOutput{})
	pulumi.RegisterOutputType(GetRdsPgAccountsUserAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetRdsPgDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetRdsPgDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetRdsPgPluginsPluginOutput{})
	pulumi.RegisterOutputType(GetRdsPgPluginsPluginArrayOutput{})
	pulumi.RegisterOutputType(GetRdsPgSqlLimitsSqlLimitOutput{})
	pulumi.RegisterOutputType(GetRdsPgSqlLimitsSqlLimitArrayOutput{})
	pulumi.RegisterOutputType(GetRdsStorageTypesStorageTypeOutput{})
	pulumi.RegisterOutputType(GetRdsStorageTypesStorageTypeArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDataTasksTaskOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDataTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDuTasksTaskOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDuTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDuTasksTaskDirUsageOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDuTasksTaskDirUsageArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDuTasksTaskDirUsageFileCountOutput{})
	pulumi.RegisterOutputType(GetSfsTurboDuTasksTaskDirUsageFileCountArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurboObsTargetsTargetOutput{})
	pulumi.RegisterOutputType(GetSfsTurboObsTargetsTargetArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurboObsTargetsTargetObOutput{})
	pulumi.RegisterOutputType(GetSfsTurboObsTargetsTargetObArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurboPermRulesRuleOutput{})
	pulumi.RegisterOutputType(GetSfsTurboPermRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSfsTurbosTurboOutput{})
	pulumi.RegisterOutputType(GetSfsTurbosTurboArrayOutput{})
	pulumi.RegisterOutputType(GetVpcAddressGroupsAddressGroupOutput{})
	pulumi.RegisterOutputType(GetVpcAddressGroupsAddressGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVpcAddressGroupsAddressGroupIpExtraSetOutput{})
	pulumi.RegisterOutputType(GetVpcAddressGroupsAddressGroupIpExtraSetArrayOutput{})
	pulumi.RegisterOutputType(GetVpcBandwidthPublicipOutput{})
	pulumi.RegisterOutputType(GetVpcBandwidthPublicipArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEipsEipOutput{})
	pulumi.RegisterOutputType(GetVpcEipsEipArrayOutput{})
	pulumi.RegisterOutputType(GetVpcRouteTypeOutput{})
	pulumi.RegisterOutputType(GetVpcRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(GetVpcRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetVpcRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVpcRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetVpcRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVpcSubnetsSubnetOutput{})
	pulumi.RegisterOutputType(GetVpcSubnetsSubnetArrayOutput{})
	pulumi.RegisterOutputType(GetVpcepPublicServicesServiceOutput{})
	pulumi.RegisterOutputType(GetVpcepPublicServicesServiceArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionHealthChecksConnectionHealthCheckOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionHealthChecksConnectionHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionIkepolicyOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionIkepolicyArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionIkepolicyDpdOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionIkepolicyDpdArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionIpsecpolicyOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionIpsecpolicyArrayOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetVpnConnectionsConnectionPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetVpnCustomerGatewaysCustomerGatewayOutput{})
	pulumi.RegisterOutputType(GetVpnCustomerGatewaysCustomerGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetVpnCustomerGatewaysCustomerGatewayCaCertificateOutput{})
	pulumi.RegisterOutputType(GetVpnCustomerGatewaysCustomerGatewayCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewaysGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewaysGatewayEipOutput{})
	pulumi.RegisterOutputType(GetVpnGatewaysGatewayEipArrayOutput{})
}
