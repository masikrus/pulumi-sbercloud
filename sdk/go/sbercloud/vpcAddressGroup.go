// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcAddressGroup struct {
	pulumi.CustomResourceState

	Addresses           pulumi.StringArrayOutput             `pulumi:"addresses"`
	Description         pulumi.StringPtrOutput               `pulumi:"description"`
	EnterpriseProjectId pulumi.StringOutput                  `pulumi:"enterpriseProjectId"`
	ForceDestroy        pulumi.BoolPtrOutput                 `pulumi:"forceDestroy"`
	IpExtraSets         VpcAddressGroupIpExtraSetArrayOutput `pulumi:"ipExtraSets"`
	IpVersion           pulumi.IntPtrOutput                  `pulumi:"ipVersion"`
	MaxCapacity         pulumi.IntOutput                     `pulumi:"maxCapacity"`
	Name                pulumi.StringOutput                  `pulumi:"name"`
	Region              pulumi.StringOutput                  `pulumi:"region"`
}

// NewVpcAddressGroup registers a new resource with the given unique name, arguments, and options.
func NewVpcAddressGroup(ctx *pulumi.Context,
	name string, args *VpcAddressGroupArgs, opts ...pulumi.ResourceOption) (*VpcAddressGroup, error) {
	if args == nil {
		args = &VpcAddressGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcAddressGroup
	err := ctx.RegisterResource("sbercloud:index/vpcAddressGroup:VpcAddressGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAddressGroup gets an existing VpcAddressGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAddressGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcAddressGroupState, opts ...pulumi.ResourceOption) (*VpcAddressGroup, error) {
	var resource VpcAddressGroup
	err := ctx.ReadResource("sbercloud:index/vpcAddressGroup:VpcAddressGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcAddressGroup resources.
type vpcAddressGroupState struct {
	Addresses           []string                    `pulumi:"addresses"`
	Description         *string                     `pulumi:"description"`
	EnterpriseProjectId *string                     `pulumi:"enterpriseProjectId"`
	ForceDestroy        *bool                       `pulumi:"forceDestroy"`
	IpExtraSets         []VpcAddressGroupIpExtraSet `pulumi:"ipExtraSets"`
	IpVersion           *int                        `pulumi:"ipVersion"`
	MaxCapacity         *int                        `pulumi:"maxCapacity"`
	Name                *string                     `pulumi:"name"`
	Region              *string                     `pulumi:"region"`
}

type VpcAddressGroupState struct {
	Addresses           pulumi.StringArrayInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ForceDestroy        pulumi.BoolPtrInput
	IpExtraSets         VpcAddressGroupIpExtraSetArrayInput
	IpVersion           pulumi.IntPtrInput
	MaxCapacity         pulumi.IntPtrInput
	Name                pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
}

func (VpcAddressGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressGroupState)(nil)).Elem()
}

type vpcAddressGroupArgs struct {
	Addresses           []string                    `pulumi:"addresses"`
	Description         *string                     `pulumi:"description"`
	EnterpriseProjectId *string                     `pulumi:"enterpriseProjectId"`
	ForceDestroy        *bool                       `pulumi:"forceDestroy"`
	IpExtraSets         []VpcAddressGroupIpExtraSet `pulumi:"ipExtraSets"`
	IpVersion           *int                        `pulumi:"ipVersion"`
	MaxCapacity         *int                        `pulumi:"maxCapacity"`
	Name                *string                     `pulumi:"name"`
	Region              *string                     `pulumi:"region"`
}

// The set of arguments for constructing a VpcAddressGroup resource.
type VpcAddressGroupArgs struct {
	Addresses           pulumi.StringArrayInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ForceDestroy        pulumi.BoolPtrInput
	IpExtraSets         VpcAddressGroupIpExtraSetArrayInput
	IpVersion           pulumi.IntPtrInput
	MaxCapacity         pulumi.IntPtrInput
	Name                pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
}

func (VpcAddressGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressGroupArgs)(nil)).Elem()
}

type VpcAddressGroupInput interface {
	pulumi.Input

	ToVpcAddressGroupOutput() VpcAddressGroupOutput
	ToVpcAddressGroupOutputWithContext(ctx context.Context) VpcAddressGroupOutput
}

func (*VpcAddressGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddressGroup)(nil)).Elem()
}

func (i *VpcAddressGroup) ToVpcAddressGroupOutput() VpcAddressGroupOutput {
	return i.ToVpcAddressGroupOutputWithContext(context.Background())
}

func (i *VpcAddressGroup) ToVpcAddressGroupOutputWithContext(ctx context.Context) VpcAddressGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressGroupOutput)
}

// VpcAddressGroupArrayInput is an input type that accepts VpcAddressGroupArray and VpcAddressGroupArrayOutput values.
// You can construct a concrete instance of `VpcAddressGroupArrayInput` via:
//
//	VpcAddressGroupArray{ VpcAddressGroupArgs{...} }
type VpcAddressGroupArrayInput interface {
	pulumi.Input

	ToVpcAddressGroupArrayOutput() VpcAddressGroupArrayOutput
	ToVpcAddressGroupArrayOutputWithContext(context.Context) VpcAddressGroupArrayOutput
}

type VpcAddressGroupArray []VpcAddressGroupInput

func (VpcAddressGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAddressGroup)(nil)).Elem()
}

func (i VpcAddressGroupArray) ToVpcAddressGroupArrayOutput() VpcAddressGroupArrayOutput {
	return i.ToVpcAddressGroupArrayOutputWithContext(context.Background())
}

func (i VpcAddressGroupArray) ToVpcAddressGroupArrayOutputWithContext(ctx context.Context) VpcAddressGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressGroupArrayOutput)
}

// VpcAddressGroupMapInput is an input type that accepts VpcAddressGroupMap and VpcAddressGroupMapOutput values.
// You can construct a concrete instance of `VpcAddressGroupMapInput` via:
//
//	VpcAddressGroupMap{ "key": VpcAddressGroupArgs{...} }
type VpcAddressGroupMapInput interface {
	pulumi.Input

	ToVpcAddressGroupMapOutput() VpcAddressGroupMapOutput
	ToVpcAddressGroupMapOutputWithContext(context.Context) VpcAddressGroupMapOutput
}

type VpcAddressGroupMap map[string]VpcAddressGroupInput

func (VpcAddressGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAddressGroup)(nil)).Elem()
}

func (i VpcAddressGroupMap) ToVpcAddressGroupMapOutput() VpcAddressGroupMapOutput {
	return i.ToVpcAddressGroupMapOutputWithContext(context.Background())
}

func (i VpcAddressGroupMap) ToVpcAddressGroupMapOutputWithContext(ctx context.Context) VpcAddressGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressGroupMapOutput)
}

type VpcAddressGroupOutput struct{ *pulumi.OutputState }

func (VpcAddressGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddressGroup)(nil)).Elem()
}

func (o VpcAddressGroupOutput) ToVpcAddressGroupOutput() VpcAddressGroupOutput {
	return o
}

func (o VpcAddressGroupOutput) ToVpcAddressGroupOutputWithContext(ctx context.Context) VpcAddressGroupOutput {
	return o
}

func (o VpcAddressGroupOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.StringArrayOutput { return v.Addresses }).(pulumi.StringArrayOutput)
}

func (o VpcAddressGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcAddressGroupOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o VpcAddressGroupOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

func (o VpcAddressGroupOutput) IpExtraSets() VpcAddressGroupIpExtraSetArrayOutput {
	return o.ApplyT(func(v *VpcAddressGroup) VpcAddressGroupIpExtraSetArrayOutput { return v.IpExtraSets }).(VpcAddressGroupIpExtraSetArrayOutput)
}

func (o VpcAddressGroupOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.IntPtrOutput { return v.IpVersion }).(pulumi.IntPtrOutput)
}

func (o VpcAddressGroupOutput) MaxCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.IntOutput { return v.MaxCapacity }).(pulumi.IntOutput)
}

func (o VpcAddressGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VpcAddressGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddressGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type VpcAddressGroupArrayOutput struct{ *pulumi.OutputState }

func (VpcAddressGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAddressGroup)(nil)).Elem()
}

func (o VpcAddressGroupArrayOutput) ToVpcAddressGroupArrayOutput() VpcAddressGroupArrayOutput {
	return o
}

func (o VpcAddressGroupArrayOutput) ToVpcAddressGroupArrayOutputWithContext(ctx context.Context) VpcAddressGroupArrayOutput {
	return o
}

func (o VpcAddressGroupArrayOutput) Index(i pulumi.IntInput) VpcAddressGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcAddressGroup {
		return vs[0].([]*VpcAddressGroup)[vs[1].(int)]
	}).(VpcAddressGroupOutput)
}

type VpcAddressGroupMapOutput struct{ *pulumi.OutputState }

func (VpcAddressGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAddressGroup)(nil)).Elem()
}

func (o VpcAddressGroupMapOutput) ToVpcAddressGroupMapOutput() VpcAddressGroupMapOutput {
	return o
}

func (o VpcAddressGroupMapOutput) ToVpcAddressGroupMapOutputWithContext(ctx context.Context) VpcAddressGroupMapOutput {
	return o
}

func (o VpcAddressGroupMapOutput) MapIndex(k pulumi.StringInput) VpcAddressGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcAddressGroup {
		return vs[0].(map[string]*VpcAddressGroup)[vs[1].(string)]
	}).(VpcAddressGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressGroupInput)(nil)).Elem(), &VpcAddressGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressGroupArrayInput)(nil)).Elem(), VpcAddressGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressGroupMapInput)(nil)).Elem(), VpcAddressGroupMap{})
	pulumi.RegisterOutputType(VpcAddressGroupOutput{})
	pulumi.RegisterOutputType(VpcAddressGroupArrayOutput{})
	pulumi.RegisterOutputType(VpcAddressGroupMapOutput{})
}
