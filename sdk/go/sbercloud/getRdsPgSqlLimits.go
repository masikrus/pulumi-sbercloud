// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRdsPgSqlLimits(ctx *pulumi.Context, args *GetRdsPgSqlLimitsArgs, opts ...pulumi.InvokeOption) (*GetRdsPgSqlLimitsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRdsPgSqlLimitsResult
	err := ctx.Invoke("sbercloud:index/getRdsPgSqlLimits:getRdsPgSqlLimits", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRdsPgSqlLimits.
type GetRdsPgSqlLimitsArgs struct {
	DbName         string  `pulumi:"dbName"`
	InstanceId     string  `pulumi:"instanceId"`
	IsEffective    *string `pulumi:"isEffective"`
	MaxConcurrency *string `pulumi:"maxConcurrency"`
	MaxWaiting     *string `pulumi:"maxWaiting"`
	QueryId        *string `pulumi:"queryId"`
	QueryString    *string `pulumi:"queryString"`
	Region         *string `pulumi:"region"`
	SearchPath     *string `pulumi:"searchPath"`
	SqlLimitId     *string `pulumi:"sqlLimitId"`
}

// A collection of values returned by getRdsPgSqlLimits.
type GetRdsPgSqlLimitsResult struct {
	DbName string `pulumi:"dbName"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                      `pulumi:"id"`
	InstanceId     string                      `pulumi:"instanceId"`
	IsEffective    *string                     `pulumi:"isEffective"`
	MaxConcurrency *string                     `pulumi:"maxConcurrency"`
	MaxWaiting     *string                     `pulumi:"maxWaiting"`
	QueryId        *string                     `pulumi:"queryId"`
	QueryString    *string                     `pulumi:"queryString"`
	Region         string                      `pulumi:"region"`
	SearchPath     *string                     `pulumi:"searchPath"`
	SqlLimitId     *string                     `pulumi:"sqlLimitId"`
	SqlLimits      []GetRdsPgSqlLimitsSqlLimit `pulumi:"sqlLimits"`
}

func GetRdsPgSqlLimitsOutput(ctx *pulumi.Context, args GetRdsPgSqlLimitsOutputArgs, opts ...pulumi.InvokeOption) GetRdsPgSqlLimitsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRdsPgSqlLimitsResultOutput, error) {
			args := v.(GetRdsPgSqlLimitsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getRdsPgSqlLimits:getRdsPgSqlLimits", args, GetRdsPgSqlLimitsResultOutput{}, options).(GetRdsPgSqlLimitsResultOutput), nil
		}).(GetRdsPgSqlLimitsResultOutput)
}

// A collection of arguments for invoking getRdsPgSqlLimits.
type GetRdsPgSqlLimitsOutputArgs struct {
	DbName         pulumi.StringInput    `pulumi:"dbName"`
	InstanceId     pulumi.StringInput    `pulumi:"instanceId"`
	IsEffective    pulumi.StringPtrInput `pulumi:"isEffective"`
	MaxConcurrency pulumi.StringPtrInput `pulumi:"maxConcurrency"`
	MaxWaiting     pulumi.StringPtrInput `pulumi:"maxWaiting"`
	QueryId        pulumi.StringPtrInput `pulumi:"queryId"`
	QueryString    pulumi.StringPtrInput `pulumi:"queryString"`
	Region         pulumi.StringPtrInput `pulumi:"region"`
	SearchPath     pulumi.StringPtrInput `pulumi:"searchPath"`
	SqlLimitId     pulumi.StringPtrInput `pulumi:"sqlLimitId"`
}

func (GetRdsPgSqlLimitsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgSqlLimitsArgs)(nil)).Elem()
}

// A collection of values returned by getRdsPgSqlLimits.
type GetRdsPgSqlLimitsResultOutput struct{ *pulumi.OutputState }

func (GetRdsPgSqlLimitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgSqlLimitsResult)(nil)).Elem()
}

func (o GetRdsPgSqlLimitsResultOutput) ToGetRdsPgSqlLimitsResultOutput() GetRdsPgSqlLimitsResultOutput {
	return o
}

func (o GetRdsPgSqlLimitsResultOutput) ToGetRdsPgSqlLimitsResultOutputWithContext(ctx context.Context) GetRdsPgSqlLimitsResultOutput {
	return o
}

func (o GetRdsPgSqlLimitsResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) string { return v.DbName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRdsPgSqlLimitsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) IsEffective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) *string { return v.IsEffective }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) MaxConcurrency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) *string { return v.MaxConcurrency }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) MaxWaiting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) *string { return v.MaxWaiting }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) *string { return v.QueryString }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) SearchPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) *string { return v.SearchPath }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) SqlLimitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) *string { return v.SqlLimitId }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgSqlLimitsResultOutput) SqlLimits() GetRdsPgSqlLimitsSqlLimitArrayOutput {
	return o.ApplyT(func(v GetRdsPgSqlLimitsResult) []GetRdsPgSqlLimitsSqlLimit { return v.SqlLimits }).(GetRdsPgSqlLimitsSqlLimitArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRdsPgSqlLimitsResultOutput{})
}
