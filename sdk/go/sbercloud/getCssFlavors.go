// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCssFlavors(ctx *pulumi.Context, args *GetCssFlavorsArgs, opts ...pulumi.InvokeOption) (*GetCssFlavorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCssFlavorsResult
	err := ctx.Invoke("sbercloud:index/getCssFlavors:getCssFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCssFlavors.
type GetCssFlavorsArgs struct {
	Memory  *int    `pulumi:"memory"`
	Name    *string `pulumi:"name"`
	Region  *string `pulumi:"region"`
	Type    *string `pulumi:"type"`
	Vcpus   *int    `pulumi:"vcpus"`
	Version *string `pulumi:"version"`
}

// A collection of values returned by getCssFlavors.
type GetCssFlavorsResult struct {
	Flavors []GetCssFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Memory  *int    `pulumi:"memory"`
	Name    *string `pulumi:"name"`
	Region  string  `pulumi:"region"`
	Type    *string `pulumi:"type"`
	Vcpus   *int    `pulumi:"vcpus"`
	Version *string `pulumi:"version"`
}

func GetCssFlavorsOutput(ctx *pulumi.Context, args GetCssFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetCssFlavorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCssFlavorsResultOutput, error) {
			args := v.(GetCssFlavorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getCssFlavors:getCssFlavors", args, GetCssFlavorsResultOutput{}, options).(GetCssFlavorsResultOutput), nil
		}).(GetCssFlavorsResultOutput)
}

// A collection of arguments for invoking getCssFlavors.
type GetCssFlavorsOutputArgs struct {
	Memory  pulumi.IntPtrInput    `pulumi:"memory"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
	Vcpus   pulumi.IntPtrInput    `pulumi:"vcpus"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetCssFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCssFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getCssFlavors.
type GetCssFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetCssFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCssFlavorsResult)(nil)).Elem()
}

func (o GetCssFlavorsResultOutput) ToGetCssFlavorsResultOutput() GetCssFlavorsResultOutput {
	return o
}

func (o GetCssFlavorsResultOutput) ToGetCssFlavorsResultOutputWithContext(ctx context.Context) GetCssFlavorsResultOutput {
	return o
}

func (o GetCssFlavorsResultOutput) Flavors() GetCssFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) []GetCssFlavorsFlavor { return v.Flavors }).(GetCssFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCssFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCssFlavorsResultOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o GetCssFlavorsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetCssFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetCssFlavorsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetCssFlavorsResultOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) *int { return v.Vcpus }).(pulumi.IntPtrOutput)
}

func (o GetCssFlavorsResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCssFlavorsResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCssFlavorsResultOutput{})
}
