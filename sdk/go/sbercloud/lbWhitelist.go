// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LbWhitelist struct {
	pulumi.CustomResourceState

	EnableWhitelist pulumi.BoolPtrOutput `pulumi:"enableWhitelist"`
	ListenerId      pulumi.StringOutput  `pulumi:"listenerId"`
	Region          pulumi.StringOutput  `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId  pulumi.StringOutput    `pulumi:"tenantId"`
	Whitelist pulumi.StringPtrOutput `pulumi:"whitelist"`
}

// NewLbWhitelist registers a new resource with the given unique name, arguments, and options.
func NewLbWhitelist(ctx *pulumi.Context,
	name string, args *LbWhitelistArgs, opts ...pulumi.ResourceOption) (*LbWhitelist, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ListenerId == nil {
		return nil, errors.New("invalid value for required argument 'ListenerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbWhitelist
	err := ctx.RegisterResource("sbercloud:index/lbWhitelist:LbWhitelist", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbWhitelist gets an existing LbWhitelist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbWhitelist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbWhitelistState, opts ...pulumi.ResourceOption) (*LbWhitelist, error) {
	var resource LbWhitelist
	err := ctx.ReadResource("sbercloud:index/lbWhitelist:LbWhitelist", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbWhitelist resources.
type lbWhitelistState struct {
	EnableWhitelist *bool   `pulumi:"enableWhitelist"`
	ListenerId      *string `pulumi:"listenerId"`
	Region          *string `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId  *string `pulumi:"tenantId"`
	Whitelist *string `pulumi:"whitelist"`
}

type LbWhitelistState struct {
	EnableWhitelist pulumi.BoolPtrInput
	ListenerId      pulumi.StringPtrInput
	Region          pulumi.StringPtrInput
	// Deprecated: tenant_id is deprecated
	TenantId  pulumi.StringPtrInput
	Whitelist pulumi.StringPtrInput
}

func (LbWhitelistState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbWhitelistState)(nil)).Elem()
}

type lbWhitelistArgs struct {
	EnableWhitelist *bool   `pulumi:"enableWhitelist"`
	ListenerId      string  `pulumi:"listenerId"`
	Region          *string `pulumi:"region"`
	// Deprecated: tenant_id is deprecated
	TenantId  *string `pulumi:"tenantId"`
	Whitelist *string `pulumi:"whitelist"`
}

// The set of arguments for constructing a LbWhitelist resource.
type LbWhitelistArgs struct {
	EnableWhitelist pulumi.BoolPtrInput
	ListenerId      pulumi.StringInput
	Region          pulumi.StringPtrInput
	// Deprecated: tenant_id is deprecated
	TenantId  pulumi.StringPtrInput
	Whitelist pulumi.StringPtrInput
}

func (LbWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbWhitelistArgs)(nil)).Elem()
}

type LbWhitelistInput interface {
	pulumi.Input

	ToLbWhitelistOutput() LbWhitelistOutput
	ToLbWhitelistOutputWithContext(ctx context.Context) LbWhitelistOutput
}

func (*LbWhitelist) ElementType() reflect.Type {
	return reflect.TypeOf((**LbWhitelist)(nil)).Elem()
}

func (i *LbWhitelist) ToLbWhitelistOutput() LbWhitelistOutput {
	return i.ToLbWhitelistOutputWithContext(context.Background())
}

func (i *LbWhitelist) ToLbWhitelistOutputWithContext(ctx context.Context) LbWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbWhitelistOutput)
}

// LbWhitelistArrayInput is an input type that accepts LbWhitelistArray and LbWhitelistArrayOutput values.
// You can construct a concrete instance of `LbWhitelistArrayInput` via:
//
//	LbWhitelistArray{ LbWhitelistArgs{...} }
type LbWhitelistArrayInput interface {
	pulumi.Input

	ToLbWhitelistArrayOutput() LbWhitelistArrayOutput
	ToLbWhitelistArrayOutputWithContext(context.Context) LbWhitelistArrayOutput
}

type LbWhitelistArray []LbWhitelistInput

func (LbWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbWhitelist)(nil)).Elem()
}

func (i LbWhitelistArray) ToLbWhitelistArrayOutput() LbWhitelistArrayOutput {
	return i.ToLbWhitelistArrayOutputWithContext(context.Background())
}

func (i LbWhitelistArray) ToLbWhitelistArrayOutputWithContext(ctx context.Context) LbWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbWhitelistArrayOutput)
}

// LbWhitelistMapInput is an input type that accepts LbWhitelistMap and LbWhitelistMapOutput values.
// You can construct a concrete instance of `LbWhitelistMapInput` via:
//
//	LbWhitelistMap{ "key": LbWhitelistArgs{...} }
type LbWhitelistMapInput interface {
	pulumi.Input

	ToLbWhitelistMapOutput() LbWhitelistMapOutput
	ToLbWhitelistMapOutputWithContext(context.Context) LbWhitelistMapOutput
}

type LbWhitelistMap map[string]LbWhitelistInput

func (LbWhitelistMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbWhitelist)(nil)).Elem()
}

func (i LbWhitelistMap) ToLbWhitelistMapOutput() LbWhitelistMapOutput {
	return i.ToLbWhitelistMapOutputWithContext(context.Background())
}

func (i LbWhitelistMap) ToLbWhitelistMapOutputWithContext(ctx context.Context) LbWhitelistMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbWhitelistMapOutput)
}

type LbWhitelistOutput struct{ *pulumi.OutputState }

func (LbWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbWhitelist)(nil)).Elem()
}

func (o LbWhitelistOutput) ToLbWhitelistOutput() LbWhitelistOutput {
	return o
}

func (o LbWhitelistOutput) ToLbWhitelistOutputWithContext(ctx context.Context) LbWhitelistOutput {
	return o
}

func (o LbWhitelistOutput) EnableWhitelist() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LbWhitelist) pulumi.BoolPtrOutput { return v.EnableWhitelist }).(pulumi.BoolPtrOutput)
}

func (o LbWhitelistOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbWhitelist) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

func (o LbWhitelistOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *LbWhitelist) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Deprecated: tenant_id is deprecated
func (o LbWhitelistOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbWhitelist) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

func (o LbWhitelistOutput) Whitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbWhitelist) pulumi.StringPtrOutput { return v.Whitelist }).(pulumi.StringPtrOutput)
}

type LbWhitelistArrayOutput struct{ *pulumi.OutputState }

func (LbWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbWhitelist)(nil)).Elem()
}

func (o LbWhitelistArrayOutput) ToLbWhitelistArrayOutput() LbWhitelistArrayOutput {
	return o
}

func (o LbWhitelistArrayOutput) ToLbWhitelistArrayOutputWithContext(ctx context.Context) LbWhitelistArrayOutput {
	return o
}

func (o LbWhitelistArrayOutput) Index(i pulumi.IntInput) LbWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LbWhitelist {
		return vs[0].([]*LbWhitelist)[vs[1].(int)]
	}).(LbWhitelistOutput)
}

type LbWhitelistMapOutput struct{ *pulumi.OutputState }

func (LbWhitelistMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbWhitelist)(nil)).Elem()
}

func (o LbWhitelistMapOutput) ToLbWhitelistMapOutput() LbWhitelistMapOutput {
	return o
}

func (o LbWhitelistMapOutput) ToLbWhitelistMapOutputWithContext(ctx context.Context) LbWhitelistMapOutput {
	return o
}

func (o LbWhitelistMapOutput) MapIndex(k pulumi.StringInput) LbWhitelistOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LbWhitelist {
		return vs[0].(map[string]*LbWhitelist)[vs[1].(string)]
	}).(LbWhitelistOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbWhitelistInput)(nil)).Elem(), &LbWhitelist{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbWhitelistArrayInput)(nil)).Elem(), LbWhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbWhitelistMapInput)(nil)).Elem(), LbWhitelistMap{})
	pulumi.RegisterOutputType(LbWhitelistOutput{})
	pulumi.RegisterOutputType(LbWhitelistArrayOutput{})
	pulumi.RegisterOutputType(LbWhitelistMapOutput{})
}
