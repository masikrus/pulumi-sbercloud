// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RdsPgAccountRoles struct {
	pulumi.CustomResourceState

	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	Region     pulumi.StringOutput `pulumi:"region"`
	// Specifies the list of roles.
	Roles pulumi.StringArrayOutput `pulumi:"roles"`
	// Specifies the username of the account.
	User pulumi.StringOutput `pulumi:"user"`
}

// NewRdsPgAccountRoles registers a new resource with the given unique name, arguments, and options.
func NewRdsPgAccountRoles(ctx *pulumi.Context,
	name string, args *RdsPgAccountRolesArgs, opts ...pulumi.ResourceOption) (*RdsPgAccountRoles, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdsPgAccountRoles
	err := ctx.RegisterResource("sbercloud:index/rdsPgAccountRoles:RdsPgAccountRoles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsPgAccountRoles gets an existing RdsPgAccountRoles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsPgAccountRoles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsPgAccountRolesState, opts ...pulumi.ResourceOption) (*RdsPgAccountRoles, error) {
	var resource RdsPgAccountRoles
	err := ctx.ReadResource("sbercloud:index/rdsPgAccountRoles:RdsPgAccountRoles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsPgAccountRoles resources.
type rdsPgAccountRolesState struct {
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId *string `pulumi:"instanceId"`
	Region     *string `pulumi:"region"`
	// Specifies the list of roles.
	Roles []string `pulumi:"roles"`
	// Specifies the username of the account.
	User *string `pulumi:"user"`
}

type RdsPgAccountRolesState struct {
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringPtrInput
	Region     pulumi.StringPtrInput
	// Specifies the list of roles.
	Roles pulumi.StringArrayInput
	// Specifies the username of the account.
	User pulumi.StringPtrInput
}

func (RdsPgAccountRolesState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsPgAccountRolesState)(nil)).Elem()
}

type rdsPgAccountRolesArgs struct {
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId string  `pulumi:"instanceId"`
	Region     *string `pulumi:"region"`
	// Specifies the list of roles.
	Roles []string `pulumi:"roles"`
	// Specifies the username of the account.
	User string `pulumi:"user"`
}

// The set of arguments for constructing a RdsPgAccountRoles resource.
type RdsPgAccountRolesArgs struct {
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringInput
	Region     pulumi.StringPtrInput
	// Specifies the list of roles.
	Roles pulumi.StringArrayInput
	// Specifies the username of the account.
	User pulumi.StringInput
}

func (RdsPgAccountRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsPgAccountRolesArgs)(nil)).Elem()
}

type RdsPgAccountRolesInput interface {
	pulumi.Input

	ToRdsPgAccountRolesOutput() RdsPgAccountRolesOutput
	ToRdsPgAccountRolesOutputWithContext(ctx context.Context) RdsPgAccountRolesOutput
}

func (*RdsPgAccountRoles) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsPgAccountRoles)(nil)).Elem()
}

func (i *RdsPgAccountRoles) ToRdsPgAccountRolesOutput() RdsPgAccountRolesOutput {
	return i.ToRdsPgAccountRolesOutputWithContext(context.Background())
}

func (i *RdsPgAccountRoles) ToRdsPgAccountRolesOutputWithContext(ctx context.Context) RdsPgAccountRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountRolesOutput)
}

// RdsPgAccountRolesArrayInput is an input type that accepts RdsPgAccountRolesArray and RdsPgAccountRolesArrayOutput values.
// You can construct a concrete instance of `RdsPgAccountRolesArrayInput` via:
//
//	RdsPgAccountRolesArray{ RdsPgAccountRolesArgs{...} }
type RdsPgAccountRolesArrayInput interface {
	pulumi.Input

	ToRdsPgAccountRolesArrayOutput() RdsPgAccountRolesArrayOutput
	ToRdsPgAccountRolesArrayOutputWithContext(context.Context) RdsPgAccountRolesArrayOutput
}

type RdsPgAccountRolesArray []RdsPgAccountRolesInput

func (RdsPgAccountRolesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsPgAccountRoles)(nil)).Elem()
}

func (i RdsPgAccountRolesArray) ToRdsPgAccountRolesArrayOutput() RdsPgAccountRolesArrayOutput {
	return i.ToRdsPgAccountRolesArrayOutputWithContext(context.Background())
}

func (i RdsPgAccountRolesArray) ToRdsPgAccountRolesArrayOutputWithContext(ctx context.Context) RdsPgAccountRolesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountRolesArrayOutput)
}

// RdsPgAccountRolesMapInput is an input type that accepts RdsPgAccountRolesMap and RdsPgAccountRolesMapOutput values.
// You can construct a concrete instance of `RdsPgAccountRolesMapInput` via:
//
//	RdsPgAccountRolesMap{ "key": RdsPgAccountRolesArgs{...} }
type RdsPgAccountRolesMapInput interface {
	pulumi.Input

	ToRdsPgAccountRolesMapOutput() RdsPgAccountRolesMapOutput
	ToRdsPgAccountRolesMapOutputWithContext(context.Context) RdsPgAccountRolesMapOutput
}

type RdsPgAccountRolesMap map[string]RdsPgAccountRolesInput

func (RdsPgAccountRolesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsPgAccountRoles)(nil)).Elem()
}

func (i RdsPgAccountRolesMap) ToRdsPgAccountRolesMapOutput() RdsPgAccountRolesMapOutput {
	return i.ToRdsPgAccountRolesMapOutputWithContext(context.Background())
}

func (i RdsPgAccountRolesMap) ToRdsPgAccountRolesMapOutputWithContext(ctx context.Context) RdsPgAccountRolesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountRolesMapOutput)
}

type RdsPgAccountRolesOutput struct{ *pulumi.OutputState }

func (RdsPgAccountRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsPgAccountRoles)(nil)).Elem()
}

func (o RdsPgAccountRolesOutput) ToRdsPgAccountRolesOutput() RdsPgAccountRolesOutput {
	return o
}

func (o RdsPgAccountRolesOutput) ToRdsPgAccountRolesOutputWithContext(ctx context.Context) RdsPgAccountRolesOutput {
	return o
}

// Specifies the ID of the RDS PostgreSQL instance.
func (o RdsPgAccountRolesOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgAccountRoles) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o RdsPgAccountRolesOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgAccountRoles) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the list of roles.
func (o RdsPgAccountRolesOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RdsPgAccountRoles) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

// Specifies the username of the account.
func (o RdsPgAccountRolesOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgAccountRoles) pulumi.StringOutput { return v.User }).(pulumi.StringOutput)
}

type RdsPgAccountRolesArrayOutput struct{ *pulumi.OutputState }

func (RdsPgAccountRolesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsPgAccountRoles)(nil)).Elem()
}

func (o RdsPgAccountRolesArrayOutput) ToRdsPgAccountRolesArrayOutput() RdsPgAccountRolesArrayOutput {
	return o
}

func (o RdsPgAccountRolesArrayOutput) ToRdsPgAccountRolesArrayOutputWithContext(ctx context.Context) RdsPgAccountRolesArrayOutput {
	return o
}

func (o RdsPgAccountRolesArrayOutput) Index(i pulumi.IntInput) RdsPgAccountRolesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdsPgAccountRoles {
		return vs[0].([]*RdsPgAccountRoles)[vs[1].(int)]
	}).(RdsPgAccountRolesOutput)
}

type RdsPgAccountRolesMapOutput struct{ *pulumi.OutputState }

func (RdsPgAccountRolesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsPgAccountRoles)(nil)).Elem()
}

func (o RdsPgAccountRolesMapOutput) ToRdsPgAccountRolesMapOutput() RdsPgAccountRolesMapOutput {
	return o
}

func (o RdsPgAccountRolesMapOutput) ToRdsPgAccountRolesMapOutputWithContext(ctx context.Context) RdsPgAccountRolesMapOutput {
	return o
}

func (o RdsPgAccountRolesMapOutput) MapIndex(k pulumi.StringInput) RdsPgAccountRolesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdsPgAccountRoles {
		return vs[0].(map[string]*RdsPgAccountRoles)[vs[1].(string)]
	}).(RdsPgAccountRolesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountRolesInput)(nil)).Elem(), &RdsPgAccountRoles{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountRolesArrayInput)(nil)).Elem(), RdsPgAccountRolesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountRolesMapInput)(nil)).Elem(), RdsPgAccountRolesMap{})
	pulumi.RegisterOutputType(RdsPgAccountRolesOutput{})
	pulumi.RegisterOutputType(RdsPgAccountRolesArrayOutput{})
	pulumi.RegisterOutputType(RdsPgAccountRolesMapOutput{})
}
