// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCceClusters(ctx *pulumi.Context, args *GetCceClustersArgs, opts ...pulumi.InvokeOption) (*GetCceClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCceClustersResult
	err := ctx.Invoke("sbercloud:index/getCceClusters:getCceClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCceClusters.
type GetCceClustersArgs struct {
	ClusterId           *string `pulumi:"clusterId"`
	ClusterType         *string `pulumi:"clusterType"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	Name                *string `pulumi:"name"`
	Region              *string `pulumi:"region"`
	Status              *string `pulumi:"status"`
	VpcId               *string `pulumi:"vpcId"`
}

// A collection of values returned by getCceClusters.
type GetCceClustersResult struct {
	ClusterId           *string                 `pulumi:"clusterId"`
	ClusterType         *string                 `pulumi:"clusterType"`
	Clusters            []GetCceClustersCluster `pulumi:"clusters"`
	EnterpriseProjectId *string                 `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id     string   `pulumi:"id"`
	Ids    []string `pulumi:"ids"`
	Name   *string  `pulumi:"name"`
	Region string   `pulumi:"region"`
	Status *string  `pulumi:"status"`
	VpcId  *string  `pulumi:"vpcId"`
}

func GetCceClustersOutput(ctx *pulumi.Context, args GetCceClustersOutputArgs, opts ...pulumi.InvokeOption) GetCceClustersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCceClustersResultOutput, error) {
			args := v.(GetCceClustersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getCceClusters:getCceClusters", args, GetCceClustersResultOutput{}, options).(GetCceClustersResultOutput), nil
		}).(GetCceClustersResultOutput)
}

// A collection of arguments for invoking getCceClusters.
type GetCceClustersOutputArgs struct {
	ClusterId           pulumi.StringPtrInput `pulumi:"clusterId"`
	ClusterType         pulumi.StringPtrInput `pulumi:"clusterType"`
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	Status              pulumi.StringPtrInput `pulumi:"status"`
	VpcId               pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetCceClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersArgs)(nil)).Elem()
}

// A collection of values returned by getCceClusters.
type GetCceClustersResultOutput struct{ *pulumi.OutputState }

func (GetCceClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCceClustersResult)(nil)).Elem()
}

func (o GetCceClustersResultOutput) ToGetCceClustersResultOutput() GetCceClustersResultOutput {
	return o
}

func (o GetCceClustersResultOutput) ToGetCceClustersResultOutputWithContext(ctx context.Context) GetCceClustersResultOutput {
	return o
}

func (o GetCceClustersResultOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceClustersResult) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o GetCceClustersResultOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceClustersResult) *string { return v.ClusterType }).(pulumi.StringPtrOutput)
}

func (o GetCceClustersResultOutput) Clusters() GetCceClustersClusterArrayOutput {
	return o.ApplyT(func(v GetCceClustersResult) []GetCceClustersCluster { return v.Clusters }).(GetCceClustersClusterArrayOutput)
}

func (o GetCceClustersResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceClustersResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCceClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCceClustersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCceClustersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetCceClustersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceClustersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetCceClustersResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCceClustersResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetCceClustersResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceClustersResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetCceClustersResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCceClustersResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCceClustersResultOutput{})
}
