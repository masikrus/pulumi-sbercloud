// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ObsBucketPolicy struct {
	pulumi.CustomResourceState

	Bucket       pulumi.StringOutput    `pulumi:"bucket"`
	Policy       pulumi.StringOutput    `pulumi:"policy"`
	PolicyFormat pulumi.StringPtrOutput `pulumi:"policyFormat"`
	Region       pulumi.StringOutput    `pulumi:"region"`
}

// NewObsBucketPolicy registers a new resource with the given unique name, arguments, and options.
func NewObsBucketPolicy(ctx *pulumi.Context,
	name string, args *ObsBucketPolicyArgs, opts ...pulumi.ResourceOption) (*ObsBucketPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObsBucketPolicy
	err := ctx.RegisterResource("sbercloud:index/obsBucketPolicy:ObsBucketPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObsBucketPolicy gets an existing ObsBucketPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObsBucketPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObsBucketPolicyState, opts ...pulumi.ResourceOption) (*ObsBucketPolicy, error) {
	var resource ObsBucketPolicy
	err := ctx.ReadResource("sbercloud:index/obsBucketPolicy:ObsBucketPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObsBucketPolicy resources.
type obsBucketPolicyState struct {
	Bucket       *string `pulumi:"bucket"`
	Policy       *string `pulumi:"policy"`
	PolicyFormat *string `pulumi:"policyFormat"`
	Region       *string `pulumi:"region"`
}

type ObsBucketPolicyState struct {
	Bucket       pulumi.StringPtrInput
	Policy       pulumi.StringPtrInput
	PolicyFormat pulumi.StringPtrInput
	Region       pulumi.StringPtrInput
}

func (ObsBucketPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*obsBucketPolicyState)(nil)).Elem()
}

type obsBucketPolicyArgs struct {
	Bucket       string  `pulumi:"bucket"`
	Policy       string  `pulumi:"policy"`
	PolicyFormat *string `pulumi:"policyFormat"`
	Region       *string `pulumi:"region"`
}

// The set of arguments for constructing a ObsBucketPolicy resource.
type ObsBucketPolicyArgs struct {
	Bucket       pulumi.StringInput
	Policy       pulumi.StringInput
	PolicyFormat pulumi.StringPtrInput
	Region       pulumi.StringPtrInput
}

func (ObsBucketPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*obsBucketPolicyArgs)(nil)).Elem()
}

type ObsBucketPolicyInput interface {
	pulumi.Input

	ToObsBucketPolicyOutput() ObsBucketPolicyOutput
	ToObsBucketPolicyOutputWithContext(ctx context.Context) ObsBucketPolicyOutput
}

func (*ObsBucketPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketPolicy)(nil)).Elem()
}

func (i *ObsBucketPolicy) ToObsBucketPolicyOutput() ObsBucketPolicyOutput {
	return i.ToObsBucketPolicyOutputWithContext(context.Background())
}

func (i *ObsBucketPolicy) ToObsBucketPolicyOutputWithContext(ctx context.Context) ObsBucketPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketPolicyOutput)
}

// ObsBucketPolicyArrayInput is an input type that accepts ObsBucketPolicyArray and ObsBucketPolicyArrayOutput values.
// You can construct a concrete instance of `ObsBucketPolicyArrayInput` via:
//
//	ObsBucketPolicyArray{ ObsBucketPolicyArgs{...} }
type ObsBucketPolicyArrayInput interface {
	pulumi.Input

	ToObsBucketPolicyArrayOutput() ObsBucketPolicyArrayOutput
	ToObsBucketPolicyArrayOutputWithContext(context.Context) ObsBucketPolicyArrayOutput
}

type ObsBucketPolicyArray []ObsBucketPolicyInput

func (ObsBucketPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObsBucketPolicy)(nil)).Elem()
}

func (i ObsBucketPolicyArray) ToObsBucketPolicyArrayOutput() ObsBucketPolicyArrayOutput {
	return i.ToObsBucketPolicyArrayOutputWithContext(context.Background())
}

func (i ObsBucketPolicyArray) ToObsBucketPolicyArrayOutputWithContext(ctx context.Context) ObsBucketPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketPolicyArrayOutput)
}

// ObsBucketPolicyMapInput is an input type that accepts ObsBucketPolicyMap and ObsBucketPolicyMapOutput values.
// You can construct a concrete instance of `ObsBucketPolicyMapInput` via:
//
//	ObsBucketPolicyMap{ "key": ObsBucketPolicyArgs{...} }
type ObsBucketPolicyMapInput interface {
	pulumi.Input

	ToObsBucketPolicyMapOutput() ObsBucketPolicyMapOutput
	ToObsBucketPolicyMapOutputWithContext(context.Context) ObsBucketPolicyMapOutput
}

type ObsBucketPolicyMap map[string]ObsBucketPolicyInput

func (ObsBucketPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObsBucketPolicy)(nil)).Elem()
}

func (i ObsBucketPolicyMap) ToObsBucketPolicyMapOutput() ObsBucketPolicyMapOutput {
	return i.ToObsBucketPolicyMapOutputWithContext(context.Background())
}

func (i ObsBucketPolicyMap) ToObsBucketPolicyMapOutputWithContext(ctx context.Context) ObsBucketPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsBucketPolicyMapOutput)
}

type ObsBucketPolicyOutput struct{ *pulumi.OutputState }

func (ObsBucketPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsBucketPolicy)(nil)).Elem()
}

func (o ObsBucketPolicyOutput) ToObsBucketPolicyOutput() ObsBucketPolicyOutput {
	return o
}

func (o ObsBucketPolicyOutput) ToObsBucketPolicyOutputWithContext(ctx context.Context) ObsBucketPolicyOutput {
	return o
}

func (o ObsBucketPolicyOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsBucketPolicy) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

func (o ObsBucketPolicyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsBucketPolicy) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

func (o ObsBucketPolicyOutput) PolicyFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsBucketPolicy) pulumi.StringPtrOutput { return v.PolicyFormat }).(pulumi.StringPtrOutput)
}

func (o ObsBucketPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsBucketPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type ObsBucketPolicyArrayOutput struct{ *pulumi.OutputState }

func (ObsBucketPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObsBucketPolicy)(nil)).Elem()
}

func (o ObsBucketPolicyArrayOutput) ToObsBucketPolicyArrayOutput() ObsBucketPolicyArrayOutput {
	return o
}

func (o ObsBucketPolicyArrayOutput) ToObsBucketPolicyArrayOutputWithContext(ctx context.Context) ObsBucketPolicyArrayOutput {
	return o
}

func (o ObsBucketPolicyArrayOutput) Index(i pulumi.IntInput) ObsBucketPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObsBucketPolicy {
		return vs[0].([]*ObsBucketPolicy)[vs[1].(int)]
	}).(ObsBucketPolicyOutput)
}

type ObsBucketPolicyMapOutput struct{ *pulumi.OutputState }

func (ObsBucketPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObsBucketPolicy)(nil)).Elem()
}

func (o ObsBucketPolicyMapOutput) ToObsBucketPolicyMapOutput() ObsBucketPolicyMapOutput {
	return o
}

func (o ObsBucketPolicyMapOutput) ToObsBucketPolicyMapOutputWithContext(ctx context.Context) ObsBucketPolicyMapOutput {
	return o
}

func (o ObsBucketPolicyMapOutput) MapIndex(k pulumi.StringInput) ObsBucketPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObsBucketPolicy {
		return vs[0].(map[string]*ObsBucketPolicy)[vs[1].(string)]
	}).(ObsBucketPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketPolicyInput)(nil)).Elem(), &ObsBucketPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketPolicyArrayInput)(nil)).Elem(), ObsBucketPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsBucketPolicyMapInput)(nil)).Elem(), ObsBucketPolicyMap{})
	pulumi.RegisterOutputType(ObsBucketPolicyOutput{})
	pulumi.RegisterOutputType(ObsBucketPolicyArrayOutput{})
	pulumi.RegisterOutputType(ObsBucketPolicyMapOutput{})
}
