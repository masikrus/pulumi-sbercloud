// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LbLoadbalancer struct {
	pulumi.CustomResourceState

	// schema: Deprecated
	AdminStateUp        pulumi.BoolPtrOutput   `pulumi:"adminStateUp"`
	AutoRenew           pulumi.StringPtrOutput `pulumi:"autoRenew"`
	ChargeMode          pulumi.StringOutput    `pulumi:"chargeMode"`
	ChargingMode        pulumi.StringOutput    `pulumi:"chargingMode"`
	CreatedAt           pulumi.StringOutput    `pulumi:"createdAt"`
	Description         pulumi.StringPtrOutput `pulumi:"description"`
	EnterpriseProjectId pulumi.StringOutput    `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	Flavor      pulumi.StringPtrOutput `pulumi:"flavor"`
	FrozenScene pulumi.StringOutput    `pulumi:"frozenScene"`
	// schema: Deprecated
	LoadbalancerProvider pulumi.StringOutput    `pulumi:"loadbalancerProvider"`
	Name                 pulumi.StringOutput    `pulumi:"name"`
	Period               pulumi.IntPtrOutput    `pulumi:"period"`
	PeriodUnit           pulumi.StringPtrOutput `pulumi:"periodUnit"`
	ProtectionReason     pulumi.StringPtrOutput `pulumi:"protectionReason"`
	ProtectionStatus     pulumi.StringOutput    `pulumi:"protectionStatus"`
	PublicIp             pulumi.StringOutput    `pulumi:"publicIp"`
	Region               pulumi.StringOutput    `pulumi:"region"`
	// schema: Deprecated
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	Tags             pulumi.StringMapOutput   `pulumi:"tags"`
	// Deprecated: tenant_id is deprecated
	TenantId   pulumi.StringOutput `pulumi:"tenantId"`
	UpdatedAt  pulumi.StringOutput `pulumi:"updatedAt"`
	VipAddress pulumi.StringOutput `pulumi:"vipAddress"`
	VipPortId  pulumi.StringOutput `pulumi:"vipPortId"`
	// the IPv4 subnet ID of the subnet where the load balancer works
	VipSubnetId pulumi.StringOutput `pulumi:"vipSubnetId"`
}

// NewLbLoadbalancer registers a new resource with the given unique name, arguments, and options.
func NewLbLoadbalancer(ctx *pulumi.Context,
	name string, args *LbLoadbalancerArgs, opts ...pulumi.ResourceOption) (*LbLoadbalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VipSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'VipSubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbLoadbalancer
	err := ctx.RegisterResource("sbercloud:index/lbLoadbalancer:LbLoadbalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbLoadbalancer gets an existing LbLoadbalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbLoadbalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbLoadbalancerState, opts ...pulumi.ResourceOption) (*LbLoadbalancer, error) {
	var resource LbLoadbalancer
	err := ctx.ReadResource("sbercloud:index/lbLoadbalancer:LbLoadbalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbLoadbalancer resources.
type lbLoadbalancerState struct {
	// schema: Deprecated
	AdminStateUp        *bool   `pulumi:"adminStateUp"`
	AutoRenew           *string `pulumi:"autoRenew"`
	ChargeMode          *string `pulumi:"chargeMode"`
	ChargingMode        *string `pulumi:"chargingMode"`
	CreatedAt           *string `pulumi:"createdAt"`
	Description         *string `pulumi:"description"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	Flavor      *string `pulumi:"flavor"`
	FrozenScene *string `pulumi:"frozenScene"`
	// schema: Deprecated
	LoadbalancerProvider *string `pulumi:"loadbalancerProvider"`
	Name                 *string `pulumi:"name"`
	Period               *int    `pulumi:"period"`
	PeriodUnit           *string `pulumi:"periodUnit"`
	ProtectionReason     *string `pulumi:"protectionReason"`
	ProtectionStatus     *string `pulumi:"protectionStatus"`
	PublicIp             *string `pulumi:"publicIp"`
	Region               *string `pulumi:"region"`
	// schema: Deprecated
	SecurityGroupIds []string          `pulumi:"securityGroupIds"`
	Tags             map[string]string `pulumi:"tags"`
	// Deprecated: tenant_id is deprecated
	TenantId   *string `pulumi:"tenantId"`
	UpdatedAt  *string `pulumi:"updatedAt"`
	VipAddress *string `pulumi:"vipAddress"`
	VipPortId  *string `pulumi:"vipPortId"`
	// the IPv4 subnet ID of the subnet where the load balancer works
	VipSubnetId *string `pulumi:"vipSubnetId"`
}

type LbLoadbalancerState struct {
	// schema: Deprecated
	AdminStateUp        pulumi.BoolPtrInput
	AutoRenew           pulumi.StringPtrInput
	ChargeMode          pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	CreatedAt           pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated
	Flavor      pulumi.StringPtrInput
	FrozenScene pulumi.StringPtrInput
	// schema: Deprecated
	LoadbalancerProvider pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Period               pulumi.IntPtrInput
	PeriodUnit           pulumi.StringPtrInput
	ProtectionReason     pulumi.StringPtrInput
	ProtectionStatus     pulumi.StringPtrInput
	PublicIp             pulumi.StringPtrInput
	Region               pulumi.StringPtrInput
	// schema: Deprecated
	SecurityGroupIds pulumi.StringArrayInput
	Tags             pulumi.StringMapInput
	// Deprecated: tenant_id is deprecated
	TenantId   pulumi.StringPtrInput
	UpdatedAt  pulumi.StringPtrInput
	VipAddress pulumi.StringPtrInput
	VipPortId  pulumi.StringPtrInput
	// the IPv4 subnet ID of the subnet where the load balancer works
	VipSubnetId pulumi.StringPtrInput
}

func (LbLoadbalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbLoadbalancerState)(nil)).Elem()
}

type lbLoadbalancerArgs struct {
	// schema: Deprecated
	AdminStateUp        *bool   `pulumi:"adminStateUp"`
	AutoRenew           *string `pulumi:"autoRenew"`
	ChargingMode        *string `pulumi:"chargingMode"`
	Description         *string `pulumi:"description"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	Flavor *string `pulumi:"flavor"`
	// schema: Deprecated
	LoadbalancerProvider *string `pulumi:"loadbalancerProvider"`
	Name                 *string `pulumi:"name"`
	Period               *int    `pulumi:"period"`
	PeriodUnit           *string `pulumi:"periodUnit"`
	ProtectionReason     *string `pulumi:"protectionReason"`
	ProtectionStatus     *string `pulumi:"protectionStatus"`
	Region               *string `pulumi:"region"`
	// schema: Deprecated
	SecurityGroupIds []string          `pulumi:"securityGroupIds"`
	Tags             map[string]string `pulumi:"tags"`
	// Deprecated: tenant_id is deprecated
	TenantId   *string `pulumi:"tenantId"`
	VipAddress *string `pulumi:"vipAddress"`
	// the IPv4 subnet ID of the subnet where the load balancer works
	VipSubnetId string `pulumi:"vipSubnetId"`
}

// The set of arguments for constructing a LbLoadbalancer resource.
type LbLoadbalancerArgs struct {
	// schema: Deprecated
	AdminStateUp        pulumi.BoolPtrInput
	AutoRenew           pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated
	Flavor pulumi.StringPtrInput
	// schema: Deprecated
	LoadbalancerProvider pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Period               pulumi.IntPtrInput
	PeriodUnit           pulumi.StringPtrInput
	ProtectionReason     pulumi.StringPtrInput
	ProtectionStatus     pulumi.StringPtrInput
	Region               pulumi.StringPtrInput
	// schema: Deprecated
	SecurityGroupIds pulumi.StringArrayInput
	Tags             pulumi.StringMapInput
	// Deprecated: tenant_id is deprecated
	TenantId   pulumi.StringPtrInput
	VipAddress pulumi.StringPtrInput
	// the IPv4 subnet ID of the subnet where the load balancer works
	VipSubnetId pulumi.StringInput
}

func (LbLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbLoadbalancerArgs)(nil)).Elem()
}

type LbLoadbalancerInput interface {
	pulumi.Input

	ToLbLoadbalancerOutput() LbLoadbalancerOutput
	ToLbLoadbalancerOutputWithContext(ctx context.Context) LbLoadbalancerOutput
}

func (*LbLoadbalancer) ElementType() reflect.Type {
	return reflect.TypeOf((**LbLoadbalancer)(nil)).Elem()
}

func (i *LbLoadbalancer) ToLbLoadbalancerOutput() LbLoadbalancerOutput {
	return i.ToLbLoadbalancerOutputWithContext(context.Background())
}

func (i *LbLoadbalancer) ToLbLoadbalancerOutputWithContext(ctx context.Context) LbLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbLoadbalancerOutput)
}

// LbLoadbalancerArrayInput is an input type that accepts LbLoadbalancerArray and LbLoadbalancerArrayOutput values.
// You can construct a concrete instance of `LbLoadbalancerArrayInput` via:
//
//	LbLoadbalancerArray{ LbLoadbalancerArgs{...} }
type LbLoadbalancerArrayInput interface {
	pulumi.Input

	ToLbLoadbalancerArrayOutput() LbLoadbalancerArrayOutput
	ToLbLoadbalancerArrayOutputWithContext(context.Context) LbLoadbalancerArrayOutput
}

type LbLoadbalancerArray []LbLoadbalancerInput

func (LbLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbLoadbalancer)(nil)).Elem()
}

func (i LbLoadbalancerArray) ToLbLoadbalancerArrayOutput() LbLoadbalancerArrayOutput {
	return i.ToLbLoadbalancerArrayOutputWithContext(context.Background())
}

func (i LbLoadbalancerArray) ToLbLoadbalancerArrayOutputWithContext(ctx context.Context) LbLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbLoadbalancerArrayOutput)
}

// LbLoadbalancerMapInput is an input type that accepts LbLoadbalancerMap and LbLoadbalancerMapOutput values.
// You can construct a concrete instance of `LbLoadbalancerMapInput` via:
//
//	LbLoadbalancerMap{ "key": LbLoadbalancerArgs{...} }
type LbLoadbalancerMapInput interface {
	pulumi.Input

	ToLbLoadbalancerMapOutput() LbLoadbalancerMapOutput
	ToLbLoadbalancerMapOutputWithContext(context.Context) LbLoadbalancerMapOutput
}

type LbLoadbalancerMap map[string]LbLoadbalancerInput

func (LbLoadbalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbLoadbalancer)(nil)).Elem()
}

func (i LbLoadbalancerMap) ToLbLoadbalancerMapOutput() LbLoadbalancerMapOutput {
	return i.ToLbLoadbalancerMapOutputWithContext(context.Background())
}

func (i LbLoadbalancerMap) ToLbLoadbalancerMapOutputWithContext(ctx context.Context) LbLoadbalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbLoadbalancerMapOutput)
}

type LbLoadbalancerOutput struct{ *pulumi.OutputState }

func (LbLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbLoadbalancer)(nil)).Elem()
}

func (o LbLoadbalancerOutput) ToLbLoadbalancerOutput() LbLoadbalancerOutput {
	return o
}

func (o LbLoadbalancerOutput) ToLbLoadbalancerOutputWithContext(ctx context.Context) LbLoadbalancerOutput {
	return o
}

// schema: Deprecated
func (o LbLoadbalancerOutput) AdminStateUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.BoolPtrOutput { return v.AdminStateUp }).(pulumi.BoolPtrOutput)
}

func (o LbLoadbalancerOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o LbLoadbalancerOutput) ChargeMode() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.ChargeMode }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LbLoadbalancerOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o LbLoadbalancerOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringPtrOutput { return v.Flavor }).(pulumi.StringPtrOutput)
}

func (o LbLoadbalancerOutput) FrozenScene() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.FrozenScene }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o LbLoadbalancerOutput) LoadbalancerProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.LoadbalancerProvider }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o LbLoadbalancerOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o LbLoadbalancerOutput) ProtectionReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringPtrOutput { return v.ProtectionReason }).(pulumi.StringPtrOutput)
}

func (o LbLoadbalancerOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.ProtectionStatus }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o LbLoadbalancerOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o LbLoadbalancerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: tenant_id is deprecated
func (o LbLoadbalancerOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) VipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.VipAddress }).(pulumi.StringOutput)
}

func (o LbLoadbalancerOutput) VipPortId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.VipPortId }).(pulumi.StringOutput)
}

// the IPv4 subnet ID of the subnet where the load balancer works
func (o LbLoadbalancerOutput) VipSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbLoadbalancer) pulumi.StringOutput { return v.VipSubnetId }).(pulumi.StringOutput)
}

type LbLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (LbLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbLoadbalancer)(nil)).Elem()
}

func (o LbLoadbalancerArrayOutput) ToLbLoadbalancerArrayOutput() LbLoadbalancerArrayOutput {
	return o
}

func (o LbLoadbalancerArrayOutput) ToLbLoadbalancerArrayOutputWithContext(ctx context.Context) LbLoadbalancerArrayOutput {
	return o
}

func (o LbLoadbalancerArrayOutput) Index(i pulumi.IntInput) LbLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LbLoadbalancer {
		return vs[0].([]*LbLoadbalancer)[vs[1].(int)]
	}).(LbLoadbalancerOutput)
}

type LbLoadbalancerMapOutput struct{ *pulumi.OutputState }

func (LbLoadbalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbLoadbalancer)(nil)).Elem()
}

func (o LbLoadbalancerMapOutput) ToLbLoadbalancerMapOutput() LbLoadbalancerMapOutput {
	return o
}

func (o LbLoadbalancerMapOutput) ToLbLoadbalancerMapOutputWithContext(ctx context.Context) LbLoadbalancerMapOutput {
	return o
}

func (o LbLoadbalancerMapOutput) MapIndex(k pulumi.StringInput) LbLoadbalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LbLoadbalancer {
		return vs[0].(map[string]*LbLoadbalancer)[vs[1].(string)]
	}).(LbLoadbalancerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbLoadbalancerInput)(nil)).Elem(), &LbLoadbalancer{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbLoadbalancerArrayInput)(nil)).Elem(), LbLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbLoadbalancerMapInput)(nil)).Elem(), LbLoadbalancerMap{})
	pulumi.RegisterOutputType(LbLoadbalancerOutput{})
	pulumi.RegisterOutputType(LbLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(LbLoadbalancerMapOutput{})
}
