// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetVpcSubnets(ctx *pulumi.Context, args *GetVpcSubnetsArgs, opts ...pulumi.InvokeOption) (*GetVpcSubnetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcSubnetsResult
	err := ctx.Invoke("sbercloud:index/getVpcSubnets:getVpcSubnets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcSubnets.
type GetVpcSubnetsArgs struct {
	AvailabilityZone *string           `pulumi:"availabilityZone"`
	Cidr             *string           `pulumi:"cidr"`
	GatewayIp        *string           `pulumi:"gatewayIp"`
	Id               *string           `pulumi:"id"`
	Name             *string           `pulumi:"name"`
	PrimaryDns       *string           `pulumi:"primaryDns"`
	Region           *string           `pulumi:"region"`
	SecondaryDns     *string           `pulumi:"secondaryDns"`
	Status           *string           `pulumi:"status"`
	Tags             map[string]string `pulumi:"tags"`
	VpcId            *string           `pulumi:"vpcId"`
}

// A collection of values returned by getVpcSubnets.
type GetVpcSubnetsResult struct {
	AvailabilityZone *string               `pulumi:"availabilityZone"`
	Cidr             *string               `pulumi:"cidr"`
	GatewayIp        *string               `pulumi:"gatewayIp"`
	Id               string                `pulumi:"id"`
	Name             *string               `pulumi:"name"`
	PrimaryDns       *string               `pulumi:"primaryDns"`
	Region           string                `pulumi:"region"`
	SecondaryDns     *string               `pulumi:"secondaryDns"`
	Status           *string               `pulumi:"status"`
	Subnets          []GetVpcSubnetsSubnet `pulumi:"subnets"`
	Tags             map[string]string     `pulumi:"tags"`
	VpcId            *string               `pulumi:"vpcId"`
}

func GetVpcSubnetsOutput(ctx *pulumi.Context, args GetVpcSubnetsOutputArgs, opts ...pulumi.InvokeOption) GetVpcSubnetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVpcSubnetsResultOutput, error) {
			args := v.(GetVpcSubnetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpcSubnets:getVpcSubnets", args, GetVpcSubnetsResultOutput{}, options).(GetVpcSubnetsResultOutput), nil
		}).(GetVpcSubnetsResultOutput)
}

// A collection of arguments for invoking getVpcSubnets.
type GetVpcSubnetsOutputArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	Cidr             pulumi.StringPtrInput `pulumi:"cidr"`
	GatewayIp        pulumi.StringPtrInput `pulumi:"gatewayIp"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	PrimaryDns       pulumi.StringPtrInput `pulumi:"primaryDns"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	SecondaryDns     pulumi.StringPtrInput `pulumi:"secondaryDns"`
	Status           pulumi.StringPtrInput `pulumi:"status"`
	Tags             pulumi.StringMapInput `pulumi:"tags"`
	VpcId            pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetVpcSubnetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSubnetsArgs)(nil)).Elem()
}

// A collection of values returned by getVpcSubnets.
type GetVpcSubnetsResultOutput struct{ *pulumi.OutputState }

func (GetVpcSubnetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcSubnetsResult)(nil)).Elem()
}

func (o GetVpcSubnetsResultOutput) ToGetVpcSubnetsResultOutput() GetVpcSubnetsResultOutput {
	return o
}

func (o GetVpcSubnetsResultOutput) ToGetVpcSubnetsResultOutputWithContext(ctx context.Context) GetVpcSubnetsResultOutput {
	return o
}

func (o GetVpcSubnetsResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetVpcSubnetsResultOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

func (o GetVpcSubnetsResultOutput) GatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.GatewayIp }).(pulumi.StringPtrOutput)
}

func (o GetVpcSubnetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetVpcSubnetsResultOutput) PrimaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.PrimaryDns }).(pulumi.StringPtrOutput)
}

func (o GetVpcSubnetsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetVpcSubnetsResultOutput) SecondaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.SecondaryDns }).(pulumi.StringPtrOutput)
}

func (o GetVpcSubnetsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetVpcSubnetsResultOutput) Subnets() GetVpcSubnetsSubnetArrayOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) []GetVpcSubnetsSubnet { return v.Subnets }).(GetVpcSubnetsSubnetArrayOutput)
}

func (o GetVpcSubnetsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetVpcSubnetsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcSubnetsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcSubnetsResultOutput{})
}
