// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CceCluster struct {
	pulumi.CustomResourceState

	Alias pulumi.StringOutput `pulumi:"alias"`
	// schema: Internal
	Annotations                   pulumi.StringMapOutput `pulumi:"annotations"`
	AuthenticatingProxyCa         pulumi.StringPtrOutput `pulumi:"authenticatingProxyCa"`
	AuthenticatingProxyCert       pulumi.StringPtrOutput `pulumi:"authenticatingProxyCert"`
	AuthenticatingProxyPrivateKey pulumi.StringPtrOutput `pulumi:"authenticatingProxyPrivateKey"`
	AuthenticationMode            pulumi.StringPtrOutput `pulumi:"authenticationMode"`
	// Deprecated: Deprecated
	AutoPay   pulumi.StringPtrOutput `pulumi:"autoPay"`
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Deprecated: use chargingMode instead
	BillingMode             pulumi.IntOutput                            `pulumi:"billingMode"`
	Category                pulumi.StringOutput                         `pulumi:"category"`
	CertificateClusters     CceClusterCertificateClusterArrayOutput     `pulumi:"certificateClusters"`
	CertificateUsers        CceClusterCertificateUserArrayOutput        `pulumi:"certificateUsers"`
	ChargingMode            pulumi.StringOutput                         `pulumi:"chargingMode"`
	ClusterType             pulumi.StringPtrOutput                      `pulumi:"clusterType"`
	ClusterVersion          pulumi.StringOutput                         `pulumi:"clusterVersion"`
	ComponentConfigurations CceClusterComponentConfigurationArrayOutput `pulumi:"componentConfigurations"`
	ContainerNetworkCidr    pulumi.StringOutput                         `pulumi:"containerNetworkCidr"`
	ContainerNetworkType    pulumi.StringOutput                         `pulumi:"containerNetworkType"`
	CustomSans              pulumi.StringArrayOutput                    `pulumi:"customSans"`
	DeleteAll               pulumi.StringPtrOutput                      `pulumi:"deleteAll"`
	DeleteEfs               pulumi.StringPtrOutput                      `pulumi:"deleteEfs"`
	// schema: Internal
	DeleteEni pulumi.StringPtrOutput `pulumi:"deleteEni"`
	DeleteEvs pulumi.StringPtrOutput `pulumi:"deleteEvs"`
	// schema: Internal
	DeleteNet   pulumi.StringPtrOutput `pulumi:"deleteNet"`
	DeleteObs   pulumi.StringPtrOutput `pulumi:"deleteObs"`
	DeleteSfs   pulumi.StringPtrOutput `pulumi:"deleteSfs"`
	Description pulumi.StringOutput    `pulumi:"description"`
	Eip         pulumi.StringPtrOutput `pulumi:"eip"`
	// schema: Internal
	EnableDistributeManagement pulumi.BoolPtrOutput `pulumi:"enableDistributeManagement"`
	// schema: Computed
	EniSubnetCidr pulumi.StringOutput `pulumi:"eniSubnetCidr"`
	// the IPv4 subnet ID of the subnet where the ENI resides
	EniSubnetId         pulumi.StringOutput `pulumi:"eniSubnetId"`
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// schema: Internal
	ExtendParam  pulumi.StringMapOutput           `pulumi:"extendParam"`
	ExtendParams CceClusterExtendParamArrayOutput `pulumi:"extendParams"`
	FlavorId     pulumi.StringOutput              `pulumi:"flavorId"`
	Hibernate    pulumi.BoolPtrOutput             `pulumi:"hibernate"`
	// schema: Internal
	HighwaySubnetId pulumi.StringOutput `pulumi:"highwaySubnetId"`
	Ipv6Enable      pulumi.BoolOutput   `pulumi:"ipv6Enable"`
	KubeConfigRaw   pulumi.StringOutput `pulumi:"kubeConfigRaw"`
	KubeProxyMode   pulumi.StringOutput `pulumi:"kubeProxyMode"`
	// schema: Internal
	Labels             pulumi.StringMapOutput      `pulumi:"labels"`
	LtsReclaimPolicy   pulumi.StringPtrOutput      `pulumi:"ltsReclaimPolicy"`
	Masters            CceClusterMasterArrayOutput `pulumi:"masters"`
	MultiAz            pulumi.BoolPtrOutput        `pulumi:"multiAz"`
	Name               pulumi.StringOutput         `pulumi:"name"`
	Period             pulumi.IntPtrOutput         `pulumi:"period"`
	PeriodUnit         pulumi.StringPtrOutput      `pulumi:"periodUnit"`
	Region             pulumi.StringOutput         `pulumi:"region"`
	SecurityGroupId    pulumi.StringOutput         `pulumi:"securityGroupId"`
	ServiceNetworkCidr pulumi.StringOutput         `pulumi:"serviceNetworkCidr"`
	Status             pulumi.StringOutput         `pulumi:"status"`
	SubnetId           pulumi.StringOutput         `pulumi:"subnetId"`
	SupportIstio       pulumi.BoolOutput           `pulumi:"supportIstio"`
	Tags               pulumi.StringMapOutput      `pulumi:"tags"`
	VpcId              pulumi.StringOutput         `pulumi:"vpcId"`
}

// NewCceCluster registers a new resource with the given unique name, arguments, and options.
func NewCceCluster(ctx *pulumi.Context,
	name string, args *CceClusterArgs, opts ...pulumi.ResourceOption) (*CceCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerNetworkType == nil {
		return nil, errors.New("invalid value for required argument 'ContainerNetworkType'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CceCluster
	err := ctx.RegisterResource("sbercloud:index/cceCluster:CceCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCceCluster gets an existing CceCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCceCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CceClusterState, opts ...pulumi.ResourceOption) (*CceCluster, error) {
	var resource CceCluster
	err := ctx.ReadResource("sbercloud:index/cceCluster:CceCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CceCluster resources.
type cceClusterState struct {
	Alias *string `pulumi:"alias"`
	// schema: Internal
	Annotations                   map[string]string `pulumi:"annotations"`
	AuthenticatingProxyCa         *string           `pulumi:"authenticatingProxyCa"`
	AuthenticatingProxyCert       *string           `pulumi:"authenticatingProxyCert"`
	AuthenticatingProxyPrivateKey *string           `pulumi:"authenticatingProxyPrivateKey"`
	AuthenticationMode            *string           `pulumi:"authenticationMode"`
	// Deprecated: Deprecated
	AutoPay   *string `pulumi:"autoPay"`
	AutoRenew *string `pulumi:"autoRenew"`
	// Deprecated: use chargingMode instead
	BillingMode             *int                               `pulumi:"billingMode"`
	Category                *string                            `pulumi:"category"`
	CertificateClusters     []CceClusterCertificateCluster     `pulumi:"certificateClusters"`
	CertificateUsers        []CceClusterCertificateUser        `pulumi:"certificateUsers"`
	ChargingMode            *string                            `pulumi:"chargingMode"`
	ClusterType             *string                            `pulumi:"clusterType"`
	ClusterVersion          *string                            `pulumi:"clusterVersion"`
	ComponentConfigurations []CceClusterComponentConfiguration `pulumi:"componentConfigurations"`
	ContainerNetworkCidr    *string                            `pulumi:"containerNetworkCidr"`
	ContainerNetworkType    *string                            `pulumi:"containerNetworkType"`
	CustomSans              []string                           `pulumi:"customSans"`
	DeleteAll               *string                            `pulumi:"deleteAll"`
	DeleteEfs               *string                            `pulumi:"deleteEfs"`
	// schema: Internal
	DeleteEni *string `pulumi:"deleteEni"`
	DeleteEvs *string `pulumi:"deleteEvs"`
	// schema: Internal
	DeleteNet   *string `pulumi:"deleteNet"`
	DeleteObs   *string `pulumi:"deleteObs"`
	DeleteSfs   *string `pulumi:"deleteSfs"`
	Description *string `pulumi:"description"`
	Eip         *string `pulumi:"eip"`
	// schema: Internal
	EnableDistributeManagement *bool `pulumi:"enableDistributeManagement"`
	// schema: Computed
	EniSubnetCidr *string `pulumi:"eniSubnetCidr"`
	// the IPv4 subnet ID of the subnet where the ENI resides
	EniSubnetId         *string `pulumi:"eniSubnetId"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// schema: Internal
	ExtendParam  map[string]string       `pulumi:"extendParam"`
	ExtendParams []CceClusterExtendParam `pulumi:"extendParams"`
	FlavorId     *string                 `pulumi:"flavorId"`
	Hibernate    *bool                   `pulumi:"hibernate"`
	// schema: Internal
	HighwaySubnetId *string `pulumi:"highwaySubnetId"`
	Ipv6Enable      *bool   `pulumi:"ipv6Enable"`
	KubeConfigRaw   *string `pulumi:"kubeConfigRaw"`
	KubeProxyMode   *string `pulumi:"kubeProxyMode"`
	// schema: Internal
	Labels             map[string]string  `pulumi:"labels"`
	LtsReclaimPolicy   *string            `pulumi:"ltsReclaimPolicy"`
	Masters            []CceClusterMaster `pulumi:"masters"`
	MultiAz            *bool              `pulumi:"multiAz"`
	Name               *string            `pulumi:"name"`
	Period             *int               `pulumi:"period"`
	PeriodUnit         *string            `pulumi:"periodUnit"`
	Region             *string            `pulumi:"region"`
	SecurityGroupId    *string            `pulumi:"securityGroupId"`
	ServiceNetworkCidr *string            `pulumi:"serviceNetworkCidr"`
	Status             *string            `pulumi:"status"`
	SubnetId           *string            `pulumi:"subnetId"`
	SupportIstio       *bool              `pulumi:"supportIstio"`
	Tags               map[string]string  `pulumi:"tags"`
	VpcId              *string            `pulumi:"vpcId"`
}

type CceClusterState struct {
	Alias pulumi.StringPtrInput
	// schema: Internal
	Annotations                   pulumi.StringMapInput
	AuthenticatingProxyCa         pulumi.StringPtrInput
	AuthenticatingProxyCert       pulumi.StringPtrInput
	AuthenticatingProxyPrivateKey pulumi.StringPtrInput
	AuthenticationMode            pulumi.StringPtrInput
	// Deprecated: Deprecated
	AutoPay   pulumi.StringPtrInput
	AutoRenew pulumi.StringPtrInput
	// Deprecated: use chargingMode instead
	BillingMode             pulumi.IntPtrInput
	Category                pulumi.StringPtrInput
	CertificateClusters     CceClusterCertificateClusterArrayInput
	CertificateUsers        CceClusterCertificateUserArrayInput
	ChargingMode            pulumi.StringPtrInput
	ClusterType             pulumi.StringPtrInput
	ClusterVersion          pulumi.StringPtrInput
	ComponentConfigurations CceClusterComponentConfigurationArrayInput
	ContainerNetworkCidr    pulumi.StringPtrInput
	ContainerNetworkType    pulumi.StringPtrInput
	CustomSans              pulumi.StringArrayInput
	DeleteAll               pulumi.StringPtrInput
	DeleteEfs               pulumi.StringPtrInput
	// schema: Internal
	DeleteEni pulumi.StringPtrInput
	DeleteEvs pulumi.StringPtrInput
	// schema: Internal
	DeleteNet   pulumi.StringPtrInput
	DeleteObs   pulumi.StringPtrInput
	DeleteSfs   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	Eip         pulumi.StringPtrInput
	// schema: Internal
	EnableDistributeManagement pulumi.BoolPtrInput
	// schema: Computed
	EniSubnetCidr pulumi.StringPtrInput
	// the IPv4 subnet ID of the subnet where the ENI resides
	EniSubnetId         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Internal
	ExtendParam  pulumi.StringMapInput
	ExtendParams CceClusterExtendParamArrayInput
	FlavorId     pulumi.StringPtrInput
	Hibernate    pulumi.BoolPtrInput
	// schema: Internal
	HighwaySubnetId pulumi.StringPtrInput
	Ipv6Enable      pulumi.BoolPtrInput
	KubeConfigRaw   pulumi.StringPtrInput
	KubeProxyMode   pulumi.StringPtrInput
	// schema: Internal
	Labels             pulumi.StringMapInput
	LtsReclaimPolicy   pulumi.StringPtrInput
	Masters            CceClusterMasterArrayInput
	MultiAz            pulumi.BoolPtrInput
	Name               pulumi.StringPtrInput
	Period             pulumi.IntPtrInput
	PeriodUnit         pulumi.StringPtrInput
	Region             pulumi.StringPtrInput
	SecurityGroupId    pulumi.StringPtrInput
	ServiceNetworkCidr pulumi.StringPtrInput
	Status             pulumi.StringPtrInput
	SubnetId           pulumi.StringPtrInput
	SupportIstio       pulumi.BoolPtrInput
	Tags               pulumi.StringMapInput
	VpcId              pulumi.StringPtrInput
}

func (CceClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*cceClusterState)(nil)).Elem()
}

type cceClusterArgs struct {
	Alias *string `pulumi:"alias"`
	// schema: Internal
	Annotations                   map[string]string `pulumi:"annotations"`
	AuthenticatingProxyCa         *string           `pulumi:"authenticatingProxyCa"`
	AuthenticatingProxyCert       *string           `pulumi:"authenticatingProxyCert"`
	AuthenticatingProxyPrivateKey *string           `pulumi:"authenticatingProxyPrivateKey"`
	AuthenticationMode            *string           `pulumi:"authenticationMode"`
	// Deprecated: Deprecated
	AutoPay   *string `pulumi:"autoPay"`
	AutoRenew *string `pulumi:"autoRenew"`
	// Deprecated: use chargingMode instead
	BillingMode             *int                               `pulumi:"billingMode"`
	ChargingMode            *string                            `pulumi:"chargingMode"`
	ClusterType             *string                            `pulumi:"clusterType"`
	ClusterVersion          *string                            `pulumi:"clusterVersion"`
	ComponentConfigurations []CceClusterComponentConfiguration `pulumi:"componentConfigurations"`
	ContainerNetworkCidr    *string                            `pulumi:"containerNetworkCidr"`
	ContainerNetworkType    string                             `pulumi:"containerNetworkType"`
	CustomSans              []string                           `pulumi:"customSans"`
	DeleteAll               *string                            `pulumi:"deleteAll"`
	DeleteEfs               *string                            `pulumi:"deleteEfs"`
	// schema: Internal
	DeleteEni *string `pulumi:"deleteEni"`
	DeleteEvs *string `pulumi:"deleteEvs"`
	// schema: Internal
	DeleteNet   *string `pulumi:"deleteNet"`
	DeleteObs   *string `pulumi:"deleteObs"`
	DeleteSfs   *string `pulumi:"deleteSfs"`
	Description *string `pulumi:"description"`
	Eip         *string `pulumi:"eip"`
	// schema: Internal
	EnableDistributeManagement *bool `pulumi:"enableDistributeManagement"`
	// schema: Computed
	EniSubnetCidr *string `pulumi:"eniSubnetCidr"`
	// the IPv4 subnet ID of the subnet where the ENI resides
	EniSubnetId         *string `pulumi:"eniSubnetId"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// schema: Internal
	ExtendParam  map[string]string       `pulumi:"extendParam"`
	ExtendParams []CceClusterExtendParam `pulumi:"extendParams"`
	FlavorId     string                  `pulumi:"flavorId"`
	Hibernate    *bool                   `pulumi:"hibernate"`
	// schema: Internal
	HighwaySubnetId *string `pulumi:"highwaySubnetId"`
	Ipv6Enable      *bool   `pulumi:"ipv6Enable"`
	KubeProxyMode   *string `pulumi:"kubeProxyMode"`
	// schema: Internal
	Labels             map[string]string  `pulumi:"labels"`
	LtsReclaimPolicy   *string            `pulumi:"ltsReclaimPolicy"`
	Masters            []CceClusterMaster `pulumi:"masters"`
	MultiAz            *bool              `pulumi:"multiAz"`
	Name               *string            `pulumi:"name"`
	Period             *int               `pulumi:"period"`
	PeriodUnit         *string            `pulumi:"periodUnit"`
	Region             *string            `pulumi:"region"`
	SecurityGroupId    *string            `pulumi:"securityGroupId"`
	ServiceNetworkCidr *string            `pulumi:"serviceNetworkCidr"`
	SubnetId           string             `pulumi:"subnetId"`
	SupportIstio       *bool              `pulumi:"supportIstio"`
	Tags               map[string]string  `pulumi:"tags"`
	VpcId              string             `pulumi:"vpcId"`
}

// The set of arguments for constructing a CceCluster resource.
type CceClusterArgs struct {
	Alias pulumi.StringPtrInput
	// schema: Internal
	Annotations                   pulumi.StringMapInput
	AuthenticatingProxyCa         pulumi.StringPtrInput
	AuthenticatingProxyCert       pulumi.StringPtrInput
	AuthenticatingProxyPrivateKey pulumi.StringPtrInput
	AuthenticationMode            pulumi.StringPtrInput
	// Deprecated: Deprecated
	AutoPay   pulumi.StringPtrInput
	AutoRenew pulumi.StringPtrInput
	// Deprecated: use chargingMode instead
	BillingMode             pulumi.IntPtrInput
	ChargingMode            pulumi.StringPtrInput
	ClusterType             pulumi.StringPtrInput
	ClusterVersion          pulumi.StringPtrInput
	ComponentConfigurations CceClusterComponentConfigurationArrayInput
	ContainerNetworkCidr    pulumi.StringPtrInput
	ContainerNetworkType    pulumi.StringInput
	CustomSans              pulumi.StringArrayInput
	DeleteAll               pulumi.StringPtrInput
	DeleteEfs               pulumi.StringPtrInput
	// schema: Internal
	DeleteEni pulumi.StringPtrInput
	DeleteEvs pulumi.StringPtrInput
	// schema: Internal
	DeleteNet   pulumi.StringPtrInput
	DeleteObs   pulumi.StringPtrInput
	DeleteSfs   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	Eip         pulumi.StringPtrInput
	// schema: Internal
	EnableDistributeManagement pulumi.BoolPtrInput
	// schema: Computed
	EniSubnetCidr pulumi.StringPtrInput
	// the IPv4 subnet ID of the subnet where the ENI resides
	EniSubnetId         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Internal
	ExtendParam  pulumi.StringMapInput
	ExtendParams CceClusterExtendParamArrayInput
	FlavorId     pulumi.StringInput
	Hibernate    pulumi.BoolPtrInput
	// schema: Internal
	HighwaySubnetId pulumi.StringPtrInput
	Ipv6Enable      pulumi.BoolPtrInput
	KubeProxyMode   pulumi.StringPtrInput
	// schema: Internal
	Labels             pulumi.StringMapInput
	LtsReclaimPolicy   pulumi.StringPtrInput
	Masters            CceClusterMasterArrayInput
	MultiAz            pulumi.BoolPtrInput
	Name               pulumi.StringPtrInput
	Period             pulumi.IntPtrInput
	PeriodUnit         pulumi.StringPtrInput
	Region             pulumi.StringPtrInput
	SecurityGroupId    pulumi.StringPtrInput
	ServiceNetworkCidr pulumi.StringPtrInput
	SubnetId           pulumi.StringInput
	SupportIstio       pulumi.BoolPtrInput
	Tags               pulumi.StringMapInput
	VpcId              pulumi.StringInput
}

func (CceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cceClusterArgs)(nil)).Elem()
}

type CceClusterInput interface {
	pulumi.Input

	ToCceClusterOutput() CceClusterOutput
	ToCceClusterOutputWithContext(ctx context.Context) CceClusterOutput
}

func (*CceCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**CceCluster)(nil)).Elem()
}

func (i *CceCluster) ToCceClusterOutput() CceClusterOutput {
	return i.ToCceClusterOutputWithContext(context.Background())
}

func (i *CceCluster) ToCceClusterOutputWithContext(ctx context.Context) CceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterOutput)
}

// CceClusterArrayInput is an input type that accepts CceClusterArray and CceClusterArrayOutput values.
// You can construct a concrete instance of `CceClusterArrayInput` via:
//
//	CceClusterArray{ CceClusterArgs{...} }
type CceClusterArrayInput interface {
	pulumi.Input

	ToCceClusterArrayOutput() CceClusterArrayOutput
	ToCceClusterArrayOutputWithContext(context.Context) CceClusterArrayOutput
}

type CceClusterArray []CceClusterInput

func (CceClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CceCluster)(nil)).Elem()
}

func (i CceClusterArray) ToCceClusterArrayOutput() CceClusterArrayOutput {
	return i.ToCceClusterArrayOutputWithContext(context.Background())
}

func (i CceClusterArray) ToCceClusterArrayOutputWithContext(ctx context.Context) CceClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterArrayOutput)
}

// CceClusterMapInput is an input type that accepts CceClusterMap and CceClusterMapOutput values.
// You can construct a concrete instance of `CceClusterMapInput` via:
//
//	CceClusterMap{ "key": CceClusterArgs{...} }
type CceClusterMapInput interface {
	pulumi.Input

	ToCceClusterMapOutput() CceClusterMapOutput
	ToCceClusterMapOutputWithContext(context.Context) CceClusterMapOutput
}

type CceClusterMap map[string]CceClusterInput

func (CceClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CceCluster)(nil)).Elem()
}

func (i CceClusterMap) ToCceClusterMapOutput() CceClusterMapOutput {
	return i.ToCceClusterMapOutputWithContext(context.Background())
}

func (i CceClusterMap) ToCceClusterMapOutputWithContext(ctx context.Context) CceClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceClusterMapOutput)
}

type CceClusterOutput struct{ *pulumi.OutputState }

func (CceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceCluster)(nil)).Elem()
}

func (o CceClusterOutput) ToCceClusterOutput() CceClusterOutput {
	return o
}

func (o CceClusterOutput) ToCceClusterOutputWithContext(ctx context.Context) CceClusterOutput {
	return o
}

func (o CceClusterOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.Alias }).(pulumi.StringOutput)
}

// schema: Internal
func (o CceClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o CceClusterOutput) AuthenticatingProxyCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.AuthenticatingProxyCa }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) AuthenticatingProxyCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.AuthenticatingProxyCert }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) AuthenticatingProxyPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.AuthenticatingProxyPrivateKey }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// Deprecated: Deprecated
func (o CceClusterOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Deprecated: use chargingMode instead
func (o CceClusterOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.IntOutput { return v.BillingMode }).(pulumi.IntOutput)
}

func (o CceClusterOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

func (o CceClusterOutput) CertificateClusters() CceClusterCertificateClusterArrayOutput {
	return o.ApplyT(func(v *CceCluster) CceClusterCertificateClusterArrayOutput { return v.CertificateClusters }).(CceClusterCertificateClusterArrayOutput)
}

func (o CceClusterOutput) CertificateUsers() CceClusterCertificateUserArrayOutput {
	return o.ApplyT(func(v *CceCluster) CceClusterCertificateUserArrayOutput { return v.CertificateUsers }).(CceClusterCertificateUserArrayOutput)
}

func (o CceClusterOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o CceClusterOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.ClusterType }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.ClusterVersion }).(pulumi.StringOutput)
}

func (o CceClusterOutput) ComponentConfigurations() CceClusterComponentConfigurationArrayOutput {
	return o.ApplyT(func(v *CceCluster) CceClusterComponentConfigurationArrayOutput { return v.ComponentConfigurations }).(CceClusterComponentConfigurationArrayOutput)
}

func (o CceClusterOutput) ContainerNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.ContainerNetworkCidr }).(pulumi.StringOutput)
}

func (o CceClusterOutput) ContainerNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.ContainerNetworkType }).(pulumi.StringOutput)
}

func (o CceClusterOutput) CustomSans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringArrayOutput { return v.CustomSans }).(pulumi.StringArrayOutput)
}

func (o CceClusterOutput) DeleteAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.DeleteAll }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) DeleteEfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.DeleteEfs }).(pulumi.StringPtrOutput)
}

// schema: Internal
func (o CceClusterOutput) DeleteEni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.DeleteEni }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) DeleteEvs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.DeleteEvs }).(pulumi.StringPtrOutput)
}

// schema: Internal
func (o CceClusterOutput) DeleteNet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.DeleteNet }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) DeleteObs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.DeleteObs }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) DeleteSfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.DeleteSfs }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o CceClusterOutput) Eip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.Eip }).(pulumi.StringPtrOutput)
}

// schema: Internal
func (o CceClusterOutput) EnableDistributeManagement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.BoolPtrOutput { return v.EnableDistributeManagement }).(pulumi.BoolPtrOutput)
}

// schema: Computed
func (o CceClusterOutput) EniSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.EniSubnetCidr }).(pulumi.StringOutput)
}

// the IPv4 subnet ID of the subnet where the ENI resides
func (o CceClusterOutput) EniSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.EniSubnetId }).(pulumi.StringOutput)
}

func (o CceClusterOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// schema: Internal
func (o CceClusterOutput) ExtendParam() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringMapOutput { return v.ExtendParam }).(pulumi.StringMapOutput)
}

func (o CceClusterOutput) ExtendParams() CceClusterExtendParamArrayOutput {
	return o.ApplyT(func(v *CceCluster) CceClusterExtendParamArrayOutput { return v.ExtendParams }).(CceClusterExtendParamArrayOutput)
}

func (o CceClusterOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

func (o CceClusterOutput) Hibernate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.BoolPtrOutput { return v.Hibernate }).(pulumi.BoolPtrOutput)
}

// schema: Internal
func (o CceClusterOutput) HighwaySubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.HighwaySubnetId }).(pulumi.StringOutput)
}

func (o CceClusterOutput) Ipv6Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.BoolOutput { return v.Ipv6Enable }).(pulumi.BoolOutput)
}

func (o CceClusterOutput) KubeConfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.KubeConfigRaw }).(pulumi.StringOutput)
}

func (o CceClusterOutput) KubeProxyMode() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.KubeProxyMode }).(pulumi.StringOutput)
}

// schema: Internal
func (o CceClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o CceClusterOutput) LtsReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.LtsReclaimPolicy }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) Masters() CceClusterMasterArrayOutput {
	return o.ApplyT(func(v *CceCluster) CceClusterMasterArrayOutput { return v.Masters }).(CceClusterMasterArrayOutput)
}

func (o CceClusterOutput) MultiAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.BoolPtrOutput { return v.MultiAz }).(pulumi.BoolPtrOutput)
}

func (o CceClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CceClusterOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o CceClusterOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o CceClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o CceClusterOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o CceClusterOutput) ServiceNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.ServiceNetworkCidr }).(pulumi.StringOutput)
}

func (o CceClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CceClusterOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o CceClusterOutput) SupportIstio() pulumi.BoolOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.BoolOutput { return v.SupportIstio }).(pulumi.BoolOutput)
}

func (o CceClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o CceClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceCluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type CceClusterArrayOutput struct{ *pulumi.OutputState }

func (CceClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CceCluster)(nil)).Elem()
}

func (o CceClusterArrayOutput) ToCceClusterArrayOutput() CceClusterArrayOutput {
	return o
}

func (o CceClusterArrayOutput) ToCceClusterArrayOutputWithContext(ctx context.Context) CceClusterArrayOutput {
	return o
}

func (o CceClusterArrayOutput) Index(i pulumi.IntInput) CceClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CceCluster {
		return vs[0].([]*CceCluster)[vs[1].(int)]
	}).(CceClusterOutput)
}

type CceClusterMapOutput struct{ *pulumi.OutputState }

func (CceClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CceCluster)(nil)).Elem()
}

func (o CceClusterMapOutput) ToCceClusterMapOutput() CceClusterMapOutput {
	return o
}

func (o CceClusterMapOutput) ToCceClusterMapOutputWithContext(ctx context.Context) CceClusterMapOutput {
	return o
}

func (o CceClusterMapOutput) MapIndex(k pulumi.StringInput) CceClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CceCluster {
		return vs[0].(map[string]*CceCluster)[vs[1].(string)]
	}).(CceClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterInput)(nil)).Elem(), &CceCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterArrayInput)(nil)).Elem(), CceClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceClusterMapInput)(nil)).Elem(), CceClusterMap{})
	pulumi.RegisterOutputType(CceClusterOutput{})
	pulumi.RegisterOutputType(CceClusterArrayOutput{})
	pulumi.RegisterOutputType(CceClusterMapOutput{})
}
