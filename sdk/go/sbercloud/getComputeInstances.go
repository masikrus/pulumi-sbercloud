// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetComputeInstances(ctx *pulumi.Context, args *GetComputeInstancesArgs, opts ...pulumi.InvokeOption) (*GetComputeInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetComputeInstancesResult
	err := ctx.Invoke("sbercloud:index/getComputeInstances:getComputeInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeInstances.
type GetComputeInstancesArgs struct {
	AvailabilityZone    *string           `pulumi:"availabilityZone"`
	EnterpriseProjectId *string           `pulumi:"enterpriseProjectId"`
	FixedIpV4           *string           `pulumi:"fixedIpV4"`
	FlavorId            *string           `pulumi:"flavorId"`
	FlavorName          *string           `pulumi:"flavorName"`
	ImageId             *string           `pulumi:"imageId"`
	InstanceId          *string           `pulumi:"instanceId"`
	KeyPair             *string           `pulumi:"keyPair"`
	Name                *string           `pulumi:"name"`
	Region              *string           `pulumi:"region"`
	Status              *string           `pulumi:"status"`
	Tags                map[string]string `pulumi:"tags"`
}

// A collection of values returned by getComputeInstances.
type GetComputeInstancesResult struct {
	AvailabilityZone    *string `pulumi:"availabilityZone"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	FixedIpV4           *string `pulumi:"fixedIpV4"`
	FlavorId            *string `pulumi:"flavorId"`
	FlavorName          *string `pulumi:"flavorName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                        `pulumi:"id"`
	ImageId    *string                       `pulumi:"imageId"`
	InstanceId *string                       `pulumi:"instanceId"`
	Instances  []GetComputeInstancesInstance `pulumi:"instances"`
	KeyPair    *string                       `pulumi:"keyPair"`
	Name       *string                       `pulumi:"name"`
	Region     *string                       `pulumi:"region"`
	Status     *string                       `pulumi:"status"`
	Tags       map[string]string             `pulumi:"tags"`
}

func GetComputeInstancesOutput(ctx *pulumi.Context, args GetComputeInstancesOutputArgs, opts ...pulumi.InvokeOption) GetComputeInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComputeInstancesResultOutput, error) {
			args := v.(GetComputeInstancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getComputeInstances:getComputeInstances", args, GetComputeInstancesResultOutput{}, options).(GetComputeInstancesResultOutput), nil
		}).(GetComputeInstancesResultOutput)
}

// A collection of arguments for invoking getComputeInstances.
type GetComputeInstancesOutputArgs struct {
	AvailabilityZone    pulumi.StringPtrInput `pulumi:"availabilityZone"`
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	FixedIpV4           pulumi.StringPtrInput `pulumi:"fixedIpV4"`
	FlavorId            pulumi.StringPtrInput `pulumi:"flavorId"`
	FlavorName          pulumi.StringPtrInput `pulumi:"flavorName"`
	ImageId             pulumi.StringPtrInput `pulumi:"imageId"`
	InstanceId          pulumi.StringPtrInput `pulumi:"instanceId"`
	KeyPair             pulumi.StringPtrInput `pulumi:"keyPair"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	Status              pulumi.StringPtrInput `pulumi:"status"`
	Tags                pulumi.StringMapInput `pulumi:"tags"`
}

func (GetComputeInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getComputeInstances.
type GetComputeInstancesResultOutput struct{ *pulumi.OutputState }

func (GetComputeInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeInstancesResult)(nil)).Elem()
}

func (o GetComputeInstancesResultOutput) ToGetComputeInstancesResultOutput() GetComputeInstancesResultOutput {
	return o
}

func (o GetComputeInstancesResultOutput) ToGetComputeInstancesResultOutputWithContext(ctx context.Context) GetComputeInstancesResultOutput {
	return o
}

func (o GetComputeInstancesResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) FixedIpV4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.FixedIpV4 }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) FlavorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.FlavorId }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) FlavorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.FlavorName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetComputeInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComputeInstancesResultOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) Instances() GetComputeInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) []GetComputeInstancesInstance { return v.Instances }).(GetComputeInstancesInstanceArrayOutput)
}

func (o GetComputeInstancesResultOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.KeyPair }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetComputeInstancesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeInstancesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComputeInstancesResultOutput{})
}
