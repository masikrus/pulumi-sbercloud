// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CceNode struct {
	pulumi.CustomResourceState

	// schema: Internal
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Deprecated: Deprecated
	AutoPay             pulumi.StringPtrOutput `pulumi:"autoPay"`
	AutoRenew           pulumi.StringPtrOutput `pulumi:"autoRenew"`
	AvailabilityZone    pulumi.StringOutput    `pulumi:"availabilityZone"`
	BandwidthChargeMode pulumi.StringPtrOutput `pulumi:"bandwidthChargeMode"`
	BandwidthSize       pulumi.IntPtrOutput    `pulumi:"bandwidthSize"`
	// Deprecated: use chargingMode instead
	BillingMode     pulumi.IntOutput             `pulumi:"billingMode"`
	ChargingMode    pulumi.StringOutput          `pulumi:"chargingMode"`
	ClusterId       pulumi.StringOutput          `pulumi:"clusterId"`
	DataVolumes     CceNodeDataVolumeArrayOutput `pulumi:"dataVolumes"`
	DedicatedHostId pulumi.StringPtrOutput       `pulumi:"dedicatedHostId"`
	EcsGroupId      pulumi.StringPtrOutput       `pulumi:"ecsGroupId"`
	// schema: Deprecated
	EcsPerformanceType pulumi.StringPtrOutput `pulumi:"ecsPerformanceType"`
	EipId              pulumi.StringPtrOutput `pulumi:"eipId"`
	// Deprecated: use eipId instead
	EipIds              pulumi.StringArrayOutput `pulumi:"eipIds"`
	EnterpriseProjectId pulumi.StringOutput      `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	ExtendParam pulumi.StringMapOutput `pulumi:"extendParam"`
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode pulumi.IntPtrOutput            `pulumi:"extendParamChargingMode"`
	ExtendParams            CceNodeExtendParamsPtrOutput   `pulumi:"extendParams"`
	ExtensionNics           CceNodeExtensionNicArrayOutput `pulumi:"extensionNics"`
	FixedIp                 pulumi.StringPtrOutput         `pulumi:"fixedIp"`
	FlavorId                pulumi.StringOutput            `pulumi:"flavorId"`
	HostnameConfig          CceNodeHostnameConfigOutput    `pulumi:"hostnameConfig"`
	InitializedConditions   pulumi.StringArrayOutput       `pulumi:"initializedConditions"`
	Iptype                  pulumi.StringPtrOutput         `pulumi:"iptype"`
	// schema: Internal
	KeepEcs pulumi.BoolPtrOutput   `pulumi:"keepEcs"`
	KeyPair pulumi.StringPtrOutput `pulumi:"keyPair"`
	Labels  pulumi.StringMapOutput `pulumi:"labels"`
	// schema: Deprecated
	MaxPods pulumi.IntPtrOutput `pulumi:"maxPods"`
	Name    pulumi.StringOutput `pulumi:"name"`
	// Deprecated: will be removed after v1.26.0
	OrderId pulumi.StringPtrOutput `pulumi:"orderId"`
	Os      pulumi.StringOutput    `pulumi:"os"`
	// schema: Internal
	Partition  pulumi.StringPtrOutput `pulumi:"partition"`
	Password   pulumi.StringPtrOutput `pulumi:"password"`
	Period     pulumi.IntPtrOutput    `pulumi:"period"`
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// schema: Deprecated
	Postinstall pulumi.StringPtrOutput `pulumi:"postinstall"`
	// schema: Deprecated
	Preinstall pulumi.StringPtrOutput `pulumi:"preinstall"`
	PrivateIp  pulumi.StringOutput    `pulumi:"privateIp"`
	PrivateKey pulumi.StringPtrOutput `pulumi:"privateKey"`
	// schema: Deprecated
	ProductId pulumi.StringPtrOutput `pulumi:"productId"`
	PublicIp  pulumi.StringOutput    `pulumi:"publicIp"`
	// schema: Deprecated
	PublicKey  pulumi.StringPtrOutput  `pulumi:"publicKey"`
	Region     pulumi.StringOutput     `pulumi:"region"`
	RootVolume CceNodeRootVolumeOutput `pulumi:"rootVolume"`
	Runtime    pulumi.StringOutput     `pulumi:"runtime"`
	ServerId   pulumi.StringOutput     `pulumi:"serverId"`
	Sharetype  pulumi.StringPtrOutput  `pulumi:"sharetype"`
	Status     pulumi.StringOutput     `pulumi:"status"`
	Storage    CceNodeStoragePtrOutput `pulumi:"storage"`
	SubnetId   pulumi.StringOutput     `pulumi:"subnetId"`
	Tags       pulumi.StringMapOutput  `pulumi:"tags"`
	Taints     CceNodeTaintArrayOutput `pulumi:"taints"`
}

// NewCceNode registers a new resource with the given unique name, arguments, and options.
func NewCceNode(ctx *pulumi.Context,
	name string, args *CceNodeArgs, opts ...pulumi.ResourceOption) (*CceNode, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.RootVolume == nil {
		return nil, errors.New("invalid value for required argument 'RootVolume'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"privateKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CceNode
	err := ctx.RegisterResource("sbercloud:index/cceNode:CceNode", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCceNode gets an existing CceNode resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCceNode(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CceNodeState, opts ...pulumi.ResourceOption) (*CceNode, error) {
	var resource CceNode
	err := ctx.ReadResource("sbercloud:index/cceNode:CceNode", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CceNode resources.
type cceNodeState struct {
	// schema: Internal
	Annotations map[string]string `pulumi:"annotations"`
	// Deprecated: Deprecated
	AutoPay             *string `pulumi:"autoPay"`
	AutoRenew           *string `pulumi:"autoRenew"`
	AvailabilityZone    *string `pulumi:"availabilityZone"`
	BandwidthChargeMode *string `pulumi:"bandwidthChargeMode"`
	BandwidthSize       *int    `pulumi:"bandwidthSize"`
	// Deprecated: use chargingMode instead
	BillingMode     *int                `pulumi:"billingMode"`
	ChargingMode    *string             `pulumi:"chargingMode"`
	ClusterId       *string             `pulumi:"clusterId"`
	DataVolumes     []CceNodeDataVolume `pulumi:"dataVolumes"`
	DedicatedHostId *string             `pulumi:"dedicatedHostId"`
	EcsGroupId      *string             `pulumi:"ecsGroupId"`
	// schema: Deprecated
	EcsPerformanceType *string `pulumi:"ecsPerformanceType"`
	EipId              *string `pulumi:"eipId"`
	// Deprecated: use eipId instead
	EipIds              []string `pulumi:"eipIds"`
	EnterpriseProjectId *string  `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	ExtendParam map[string]string `pulumi:"extendParam"`
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode *int                   `pulumi:"extendParamChargingMode"`
	ExtendParams            *CceNodeExtendParams   `pulumi:"extendParams"`
	ExtensionNics           []CceNodeExtensionNic  `pulumi:"extensionNics"`
	FixedIp                 *string                `pulumi:"fixedIp"`
	FlavorId                *string                `pulumi:"flavorId"`
	HostnameConfig          *CceNodeHostnameConfig `pulumi:"hostnameConfig"`
	InitializedConditions   []string               `pulumi:"initializedConditions"`
	Iptype                  *string                `pulumi:"iptype"`
	// schema: Internal
	KeepEcs *bool             `pulumi:"keepEcs"`
	KeyPair *string           `pulumi:"keyPair"`
	Labels  map[string]string `pulumi:"labels"`
	// schema: Deprecated
	MaxPods *int    `pulumi:"maxPods"`
	Name    *string `pulumi:"name"`
	// Deprecated: will be removed after v1.26.0
	OrderId *string `pulumi:"orderId"`
	Os      *string `pulumi:"os"`
	// schema: Internal
	Partition  *string `pulumi:"partition"`
	Password   *string `pulumi:"password"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	// schema: Deprecated
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated
	Preinstall *string `pulumi:"preinstall"`
	PrivateIp  *string `pulumi:"privateIp"`
	PrivateKey *string `pulumi:"privateKey"`
	// schema: Deprecated
	ProductId *string `pulumi:"productId"`
	PublicIp  *string `pulumi:"publicIp"`
	// schema: Deprecated
	PublicKey  *string            `pulumi:"publicKey"`
	Region     *string            `pulumi:"region"`
	RootVolume *CceNodeRootVolume `pulumi:"rootVolume"`
	Runtime    *string            `pulumi:"runtime"`
	ServerId   *string            `pulumi:"serverId"`
	Sharetype  *string            `pulumi:"sharetype"`
	Status     *string            `pulumi:"status"`
	Storage    *CceNodeStorage    `pulumi:"storage"`
	SubnetId   *string            `pulumi:"subnetId"`
	Tags       map[string]string  `pulumi:"tags"`
	Taints     []CceNodeTaint     `pulumi:"taints"`
}

type CceNodeState struct {
	// schema: Internal
	Annotations pulumi.StringMapInput
	// Deprecated: Deprecated
	AutoPay             pulumi.StringPtrInput
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	BandwidthChargeMode pulumi.StringPtrInput
	BandwidthSize       pulumi.IntPtrInput
	// Deprecated: use chargingMode instead
	BillingMode     pulumi.IntPtrInput
	ChargingMode    pulumi.StringPtrInput
	ClusterId       pulumi.StringPtrInput
	DataVolumes     CceNodeDataVolumeArrayInput
	DedicatedHostId pulumi.StringPtrInput
	EcsGroupId      pulumi.StringPtrInput
	// schema: Deprecated
	EcsPerformanceType pulumi.StringPtrInput
	EipId              pulumi.StringPtrInput
	// Deprecated: use eipId instead
	EipIds              pulumi.StringArrayInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated
	ExtendParam pulumi.StringMapInput
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode pulumi.IntPtrInput
	ExtendParams            CceNodeExtendParamsPtrInput
	ExtensionNics           CceNodeExtensionNicArrayInput
	FixedIp                 pulumi.StringPtrInput
	FlavorId                pulumi.StringPtrInput
	HostnameConfig          CceNodeHostnameConfigPtrInput
	InitializedConditions   pulumi.StringArrayInput
	Iptype                  pulumi.StringPtrInput
	// schema: Internal
	KeepEcs pulumi.BoolPtrInput
	KeyPair pulumi.StringPtrInput
	Labels  pulumi.StringMapInput
	// schema: Deprecated
	MaxPods pulumi.IntPtrInput
	Name    pulumi.StringPtrInput
	// Deprecated: will be removed after v1.26.0
	OrderId pulumi.StringPtrInput
	Os      pulumi.StringPtrInput
	// schema: Internal
	Partition  pulumi.StringPtrInput
	Password   pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	// schema: Deprecated
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated
	Preinstall pulumi.StringPtrInput
	PrivateIp  pulumi.StringPtrInput
	PrivateKey pulumi.StringPtrInput
	// schema: Deprecated
	ProductId pulumi.StringPtrInput
	PublicIp  pulumi.StringPtrInput
	// schema: Deprecated
	PublicKey  pulumi.StringPtrInput
	Region     pulumi.StringPtrInput
	RootVolume CceNodeRootVolumePtrInput
	Runtime    pulumi.StringPtrInput
	ServerId   pulumi.StringPtrInput
	Sharetype  pulumi.StringPtrInput
	Status     pulumi.StringPtrInput
	Storage    CceNodeStoragePtrInput
	SubnetId   pulumi.StringPtrInput
	Tags       pulumi.StringMapInput
	Taints     CceNodeTaintArrayInput
}

func (CceNodeState) ElementType() reflect.Type {
	return reflect.TypeOf((*cceNodeState)(nil)).Elem()
}

type cceNodeArgs struct {
	// schema: Internal
	Annotations map[string]string `pulumi:"annotations"`
	// Deprecated: Deprecated
	AutoPay             *string `pulumi:"autoPay"`
	AutoRenew           *string `pulumi:"autoRenew"`
	AvailabilityZone    string  `pulumi:"availabilityZone"`
	BandwidthChargeMode *string `pulumi:"bandwidthChargeMode"`
	BandwidthSize       *int    `pulumi:"bandwidthSize"`
	// Deprecated: use chargingMode instead
	BillingMode     *int                `pulumi:"billingMode"`
	ChargingMode    *string             `pulumi:"chargingMode"`
	ClusterId       string              `pulumi:"clusterId"`
	DataVolumes     []CceNodeDataVolume `pulumi:"dataVolumes"`
	DedicatedHostId *string             `pulumi:"dedicatedHostId"`
	EcsGroupId      *string             `pulumi:"ecsGroupId"`
	// schema: Deprecated
	EcsPerformanceType *string `pulumi:"ecsPerformanceType"`
	EipId              *string `pulumi:"eipId"`
	// Deprecated: use eipId instead
	EipIds              []string `pulumi:"eipIds"`
	EnterpriseProjectId *string  `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	ExtendParam map[string]string `pulumi:"extendParam"`
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode *int                   `pulumi:"extendParamChargingMode"`
	ExtendParams            *CceNodeExtendParams   `pulumi:"extendParams"`
	ExtensionNics           []CceNodeExtensionNic  `pulumi:"extensionNics"`
	FixedIp                 *string                `pulumi:"fixedIp"`
	FlavorId                string                 `pulumi:"flavorId"`
	HostnameConfig          *CceNodeHostnameConfig `pulumi:"hostnameConfig"`
	InitializedConditions   []string               `pulumi:"initializedConditions"`
	Iptype                  *string                `pulumi:"iptype"`
	// schema: Internal
	KeepEcs *bool             `pulumi:"keepEcs"`
	KeyPair *string           `pulumi:"keyPair"`
	Labels  map[string]string `pulumi:"labels"`
	// schema: Deprecated
	MaxPods *int    `pulumi:"maxPods"`
	Name    *string `pulumi:"name"`
	// Deprecated: will be removed after v1.26.0
	OrderId *string `pulumi:"orderId"`
	Os      *string `pulumi:"os"`
	// schema: Internal
	Partition  *string `pulumi:"partition"`
	Password   *string `pulumi:"password"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	// schema: Deprecated
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated
	Preinstall *string `pulumi:"preinstall"`
	PrivateKey *string `pulumi:"privateKey"`
	// schema: Deprecated
	ProductId *string `pulumi:"productId"`
	// schema: Deprecated
	PublicKey  *string           `pulumi:"publicKey"`
	Region     *string           `pulumi:"region"`
	RootVolume CceNodeRootVolume `pulumi:"rootVolume"`
	Runtime    *string           `pulumi:"runtime"`
	Sharetype  *string           `pulumi:"sharetype"`
	Storage    *CceNodeStorage   `pulumi:"storage"`
	SubnetId   *string           `pulumi:"subnetId"`
	Tags       map[string]string `pulumi:"tags"`
	Taints     []CceNodeTaint    `pulumi:"taints"`
}

// The set of arguments for constructing a CceNode resource.
type CceNodeArgs struct {
	// schema: Internal
	Annotations pulumi.StringMapInput
	// Deprecated: Deprecated
	AutoPay             pulumi.StringPtrInput
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringInput
	BandwidthChargeMode pulumi.StringPtrInput
	BandwidthSize       pulumi.IntPtrInput
	// Deprecated: use chargingMode instead
	BillingMode     pulumi.IntPtrInput
	ChargingMode    pulumi.StringPtrInput
	ClusterId       pulumi.StringInput
	DataVolumes     CceNodeDataVolumeArrayInput
	DedicatedHostId pulumi.StringPtrInput
	EcsGroupId      pulumi.StringPtrInput
	// schema: Deprecated
	EcsPerformanceType pulumi.StringPtrInput
	EipId              pulumi.StringPtrInput
	// Deprecated: use eipId instead
	EipIds              pulumi.StringArrayInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated
	ExtendParam pulumi.StringMapInput
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode pulumi.IntPtrInput
	ExtendParams            CceNodeExtendParamsPtrInput
	ExtensionNics           CceNodeExtensionNicArrayInput
	FixedIp                 pulumi.StringPtrInput
	FlavorId                pulumi.StringInput
	HostnameConfig          CceNodeHostnameConfigPtrInput
	InitializedConditions   pulumi.StringArrayInput
	Iptype                  pulumi.StringPtrInput
	// schema: Internal
	KeepEcs pulumi.BoolPtrInput
	KeyPair pulumi.StringPtrInput
	Labels  pulumi.StringMapInput
	// schema: Deprecated
	MaxPods pulumi.IntPtrInput
	Name    pulumi.StringPtrInput
	// Deprecated: will be removed after v1.26.0
	OrderId pulumi.StringPtrInput
	Os      pulumi.StringPtrInput
	// schema: Internal
	Partition  pulumi.StringPtrInput
	Password   pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	// schema: Deprecated
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated
	Preinstall pulumi.StringPtrInput
	PrivateKey pulumi.StringPtrInput
	// schema: Deprecated
	ProductId pulumi.StringPtrInput
	// schema: Deprecated
	PublicKey  pulumi.StringPtrInput
	Region     pulumi.StringPtrInput
	RootVolume CceNodeRootVolumeInput
	Runtime    pulumi.StringPtrInput
	Sharetype  pulumi.StringPtrInput
	Storage    CceNodeStoragePtrInput
	SubnetId   pulumi.StringPtrInput
	Tags       pulumi.StringMapInput
	Taints     CceNodeTaintArrayInput
}

func (CceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cceNodeArgs)(nil)).Elem()
}

type CceNodeInput interface {
	pulumi.Input

	ToCceNodeOutput() CceNodeOutput
	ToCceNodeOutputWithContext(ctx context.Context) CceNodeOutput
}

func (*CceNode) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNode)(nil)).Elem()
}

func (i *CceNode) ToCceNodeOutput() CceNodeOutput {
	return i.ToCceNodeOutputWithContext(context.Background())
}

func (i *CceNode) ToCceNodeOutputWithContext(ctx context.Context) CceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeOutput)
}

// CceNodeArrayInput is an input type that accepts CceNodeArray and CceNodeArrayOutput values.
// You can construct a concrete instance of `CceNodeArrayInput` via:
//
//	CceNodeArray{ CceNodeArgs{...} }
type CceNodeArrayInput interface {
	pulumi.Input

	ToCceNodeArrayOutput() CceNodeArrayOutput
	ToCceNodeArrayOutputWithContext(context.Context) CceNodeArrayOutput
}

type CceNodeArray []CceNodeInput

func (CceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CceNode)(nil)).Elem()
}

func (i CceNodeArray) ToCceNodeArrayOutput() CceNodeArrayOutput {
	return i.ToCceNodeArrayOutputWithContext(context.Background())
}

func (i CceNodeArray) ToCceNodeArrayOutputWithContext(ctx context.Context) CceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeArrayOutput)
}

// CceNodeMapInput is an input type that accepts CceNodeMap and CceNodeMapOutput values.
// You can construct a concrete instance of `CceNodeMapInput` via:
//
//	CceNodeMap{ "key": CceNodeArgs{...} }
type CceNodeMapInput interface {
	pulumi.Input

	ToCceNodeMapOutput() CceNodeMapOutput
	ToCceNodeMapOutputWithContext(context.Context) CceNodeMapOutput
}

type CceNodeMap map[string]CceNodeInput

func (CceNodeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CceNode)(nil)).Elem()
}

func (i CceNodeMap) ToCceNodeMapOutput() CceNodeMapOutput {
	return i.ToCceNodeMapOutputWithContext(context.Background())
}

func (i CceNodeMap) ToCceNodeMapOutputWithContext(ctx context.Context) CceNodeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodeMapOutput)
}

type CceNodeOutput struct{ *pulumi.OutputState }

func (CceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNode)(nil)).Elem()
}

func (o CceNodeOutput) ToCceNodeOutput() CceNodeOutput {
	return o
}

func (o CceNodeOutput) ToCceNodeOutputWithContext(ctx context.Context) CceNodeOutput {
	return o
}

// schema: Internal
func (o CceNodeOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Deprecated: Deprecated
func (o CceNodeOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o CceNodeOutput) BandwidthChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.BandwidthChargeMode }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.IntPtrOutput { return v.BandwidthSize }).(pulumi.IntPtrOutput)
}

// Deprecated: use chargingMode instead
func (o CceNodeOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v *CceNode) pulumi.IntOutput { return v.BillingMode }).(pulumi.IntOutput)
}

func (o CceNodeOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o CceNodeOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o CceNodeOutput) DataVolumes() CceNodeDataVolumeArrayOutput {
	return o.ApplyT(func(v *CceNode) CceNodeDataVolumeArrayOutput { return v.DataVolumes }).(CceNodeDataVolumeArrayOutput)
}

func (o CceNodeOutput) DedicatedHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.DedicatedHostId }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.EcsGroupId }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o CceNodeOutput) EcsPerformanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.EcsPerformanceType }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.EipId }).(pulumi.StringPtrOutput)
}

// Deprecated: use eipId instead
func (o CceNodeOutput) EipIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringArrayOutput { return v.EipIds }).(pulumi.StringArrayOutput)
}

func (o CceNodeOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o CceNodeOutput) ExtendParam() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringMapOutput { return v.ExtendParam }).(pulumi.StringMapOutput)
}

// Deprecated: use chargingMode instead
func (o CceNodeOutput) ExtendParamChargingMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.IntPtrOutput { return v.ExtendParamChargingMode }).(pulumi.IntPtrOutput)
}

func (o CceNodeOutput) ExtendParams() CceNodeExtendParamsPtrOutput {
	return o.ApplyT(func(v *CceNode) CceNodeExtendParamsPtrOutput { return v.ExtendParams }).(CceNodeExtendParamsPtrOutput)
}

func (o CceNodeOutput) ExtensionNics() CceNodeExtensionNicArrayOutput {
	return o.ApplyT(func(v *CceNode) CceNodeExtensionNicArrayOutput { return v.ExtensionNics }).(CceNodeExtensionNicArrayOutput)
}

func (o CceNodeOutput) FixedIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.FixedIp }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

func (o CceNodeOutput) HostnameConfig() CceNodeHostnameConfigOutput {
	return o.ApplyT(func(v *CceNode) CceNodeHostnameConfigOutput { return v.HostnameConfig }).(CceNodeHostnameConfigOutput)
}

func (o CceNodeOutput) InitializedConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringArrayOutput { return v.InitializedConditions }).(pulumi.StringArrayOutput)
}

func (o CceNodeOutput) Iptype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.Iptype }).(pulumi.StringPtrOutput)
}

// schema: Internal
func (o CceNodeOutput) KeepEcs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.BoolPtrOutput { return v.KeepEcs }).(pulumi.BoolPtrOutput)
}

func (o CceNodeOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.KeyPair }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// schema: Deprecated
func (o CceNodeOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.IntPtrOutput { return v.MaxPods }).(pulumi.IntPtrOutput)
}

func (o CceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: will be removed after v1.26.0
func (o CceNodeOutput) OrderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.OrderId }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

// schema: Internal
func (o CceNodeOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.Partition }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o CceNodeOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o CceNodeOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.Postinstall }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o CceNodeOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.Preinstall }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o CceNodeOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o CceNodeOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.ProductId }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o CceNodeOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o CceNodeOutput) RootVolume() CceNodeRootVolumeOutput {
	return o.ApplyT(func(v *CceNode) CceNodeRootVolumeOutput { return v.RootVolume }).(CceNodeRootVolumeOutput)
}

func (o CceNodeOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

func (o CceNodeOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.ServerId }).(pulumi.StringOutput)
}

func (o CceNodeOutput) Sharetype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringPtrOutput { return v.Sharetype }).(pulumi.StringPtrOutput)
}

func (o CceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CceNodeOutput) Storage() CceNodeStoragePtrOutput {
	return o.ApplyT(func(v *CceNode) CceNodeStoragePtrOutput { return v.Storage }).(CceNodeStoragePtrOutput)
}

func (o CceNodeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o CceNodeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNode) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o CceNodeOutput) Taints() CceNodeTaintArrayOutput {
	return o.ApplyT(func(v *CceNode) CceNodeTaintArrayOutput { return v.Taints }).(CceNodeTaintArrayOutput)
}

type CceNodeArrayOutput struct{ *pulumi.OutputState }

func (CceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CceNode)(nil)).Elem()
}

func (o CceNodeArrayOutput) ToCceNodeArrayOutput() CceNodeArrayOutput {
	return o
}

func (o CceNodeArrayOutput) ToCceNodeArrayOutputWithContext(ctx context.Context) CceNodeArrayOutput {
	return o
}

func (o CceNodeArrayOutput) Index(i pulumi.IntInput) CceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CceNode {
		return vs[0].([]*CceNode)[vs[1].(int)]
	}).(CceNodeOutput)
}

type CceNodeMapOutput struct{ *pulumi.OutputState }

func (CceNodeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CceNode)(nil)).Elem()
}

func (o CceNodeMapOutput) ToCceNodeMapOutput() CceNodeMapOutput {
	return o
}

func (o CceNodeMapOutput) ToCceNodeMapOutputWithContext(ctx context.Context) CceNodeMapOutput {
	return o
}

func (o CceNodeMapOutput) MapIndex(k pulumi.StringInput) CceNodeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CceNode {
		return vs[0].(map[string]*CceNode)[vs[1].(string)]
	}).(CceNodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeInput)(nil)).Elem(), &CceNode{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeArrayInput)(nil)).Elem(), CceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodeMapInput)(nil)).Elem(), CceNodeMap{})
	pulumi.RegisterOutputType(CceNodeOutput{})
	pulumi.RegisterOutputType(CceNodeArrayOutput{})
	pulumi.RegisterOutputType(CceNodeMapOutput{})
}
