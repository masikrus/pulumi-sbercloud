// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCceCluster(ctx *pulumi.Context, args *LookupCceClusterArgs, opts ...pulumi.InvokeOption) (*LookupCceClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCceClusterResult
	err := ctx.Invoke("sbercloud:index/getCceCluster:getCceCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCceCluster.
type LookupCceClusterArgs struct {
	ClusterType *string `pulumi:"clusterType"`
	Id          *string `pulumi:"id"`
	Name        *string `pulumi:"name"`
	Region      *string `pulumi:"region"`
	Status      *string `pulumi:"status"`
	VpcId       *string `pulumi:"vpcId"`
}

// A collection of values returned by getCceCluster.
type LookupCceClusterResult struct {
	AuthenticationMode   string                            `pulumi:"authenticationMode"`
	BillingMode          int                               `pulumi:"billingMode"`
	CertificateClusters  []GetCceClusterCertificateCluster `pulumi:"certificateClusters"`
	CertificateUsers     []GetCceClusterCertificateUser    `pulumi:"certificateUsers"`
	ClusterType          string                            `pulumi:"clusterType"`
	ClusterVersion       string                            `pulumi:"clusterVersion"`
	ContainerNetworkCidr string                            `pulumi:"containerNetworkCidr"`
	ContainerNetworkType string                            `pulumi:"containerNetworkType"`
	Description          string                            `pulumi:"description"`
	Endpoints            []GetCceClusterEndpoint           `pulumi:"endpoints"`
	EniSubnetCidr        string                            `pulumi:"eniSubnetCidr"`
	EniSubnetId          string                            `pulumi:"eniSubnetId"`
	EnterpriseProjectId  string                            `pulumi:"enterpriseProjectId"`
	FlavorId             string                            `pulumi:"flavorId"`
	HighwaySubnetId      string                            `pulumi:"highwaySubnetId"`
	Id                   string                            `pulumi:"id"`
	KubeConfigRaw        string                            `pulumi:"kubeConfigRaw"`
	Masters              []GetCceClusterMaster             `pulumi:"masters"`
	Name                 string                            `pulumi:"name"`
	Region               string                            `pulumi:"region"`
	SecurityGroupId      string                            `pulumi:"securityGroupId"`
	ServiceNetworkCidr   string                            `pulumi:"serviceNetworkCidr"`
	Status               string                            `pulumi:"status"`
	SubnetId             string                            `pulumi:"subnetId"`
	VpcId                string                            `pulumi:"vpcId"`
}

func LookupCceClusterOutput(ctx *pulumi.Context, args LookupCceClusterOutputArgs, opts ...pulumi.InvokeOption) LookupCceClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCceClusterResultOutput, error) {
			args := v.(LookupCceClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getCceCluster:getCceCluster", args, LookupCceClusterResultOutput{}, options).(LookupCceClusterResultOutput), nil
		}).(LookupCceClusterResultOutput)
}

// A collection of arguments for invoking getCceCluster.
type LookupCceClusterOutputArgs struct {
	ClusterType pulumi.StringPtrInput `pulumi:"clusterType"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Region      pulumi.StringPtrInput `pulumi:"region"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
	VpcId       pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (LookupCceClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCceClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCceCluster.
type LookupCceClusterResultOutput struct{ *pulumi.OutputState }

func (LookupCceClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCceClusterResult)(nil)).Elem()
}

func (o LookupCceClusterResultOutput) ToLookupCceClusterResultOutput() LookupCceClusterResultOutput {
	return o
}

func (o LookupCceClusterResultOutput) ToLookupCceClusterResultOutputWithContext(ctx context.Context) LookupCceClusterResultOutput {
	return o
}

func (o LookupCceClusterResultOutput) AuthenticationMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.AuthenticationMode }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCceClusterResult) int { return v.BillingMode }).(pulumi.IntOutput)
}

func (o LookupCceClusterResultOutput) CertificateClusters() GetCceClusterCertificateClusterArrayOutput {
	return o.ApplyT(func(v LookupCceClusterResult) []GetCceClusterCertificateCluster { return v.CertificateClusters }).(GetCceClusterCertificateClusterArrayOutput)
}

func (o LookupCceClusterResultOutput) CertificateUsers() GetCceClusterCertificateUserArrayOutput {
	return o.ApplyT(func(v LookupCceClusterResult) []GetCceClusterCertificateUser { return v.CertificateUsers }).(GetCceClusterCertificateUserArrayOutput)
}

func (o LookupCceClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) ContainerNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.ContainerNetworkCidr }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) ContainerNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.ContainerNetworkType }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) Endpoints() GetCceClusterEndpointArrayOutput {
	return o.ApplyT(func(v LookupCceClusterResult) []GetCceClusterEndpoint { return v.Endpoints }).(GetCceClusterEndpointArrayOutput)
}

func (o LookupCceClusterResultOutput) EniSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.EniSubnetCidr }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) EniSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.EniSubnetId }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.FlavorId }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) HighwaySubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.HighwaySubnetId }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) KubeConfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.KubeConfigRaw }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) Masters() GetCceClusterMasterArrayOutput {
	return o.ApplyT(func(v LookupCceClusterResult) []GetCceClusterMaster { return v.Masters }).(GetCceClusterMasterArrayOutput)
}

func (o LookupCceClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) ServiceNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.ServiceNetworkCidr }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o LookupCceClusterResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCceClusterResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCceClusterResultOutput{})
}
