// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RdsReadReplicaInstance struct {
	pulumi.CustomResourceState

	AutoRenew           pulumi.StringPtrOutput                     `pulumi:"autoRenew"`
	AvailabilityZone    pulumi.StringOutput                        `pulumi:"availabilityZone"`
	ChargingMode        pulumi.StringOutput                        `pulumi:"chargingMode"`
	Db                  RdsReadReplicaInstanceDbOutput             `pulumi:"db"`
	Description         pulumi.StringPtrOutput                     `pulumi:"description"`
	EnterpriseProjectId pulumi.StringOutput                        `pulumi:"enterpriseProjectId"`
	FixedIp             pulumi.StringOutput                        `pulumi:"fixedIp"`
	Flavor              pulumi.StringOutput                        `pulumi:"flavor"`
	MaintainBegin       pulumi.StringOutput                        `pulumi:"maintainBegin"`
	MaintainEnd         pulumi.StringOutput                        `pulumi:"maintainEnd"`
	Name                pulumi.StringOutput                        `pulumi:"name"`
	Parameters          RdsReadReplicaInstanceParameterArrayOutput `pulumi:"parameters"`
	Period              pulumi.IntPtrOutput                        `pulumi:"period"`
	PeriodUnit          pulumi.StringPtrOutput                     `pulumi:"periodUnit"`
	PrimaryInstanceId   pulumi.StringOutput                        `pulumi:"primaryInstanceId"`
	PrivateIps          pulumi.StringArrayOutput                   `pulumi:"privateIps"`
	PublicIps           pulumi.StringArrayOutput                   `pulumi:"publicIps"`
	Region              pulumi.StringOutput                        `pulumi:"region"`
	SecurityGroupId     pulumi.StringOutput                        `pulumi:"securityGroupId"`
	SslEnable           pulumi.BoolOutput                          `pulumi:"sslEnable"`
	Status              pulumi.StringOutput                        `pulumi:"status"`
	SubnetId            pulumi.StringOutput                        `pulumi:"subnetId"`
	Tags                pulumi.StringMapOutput                     `pulumi:"tags"`
	Type                pulumi.StringOutput                        `pulumi:"type"`
	Volume              RdsReadReplicaInstanceVolumeOutput         `pulumi:"volume"`
	VpcId               pulumi.StringOutput                        `pulumi:"vpcId"`
}

// NewRdsReadReplicaInstance registers a new resource with the given unique name, arguments, and options.
func NewRdsReadReplicaInstance(ctx *pulumi.Context,
	name string, args *RdsReadReplicaInstanceArgs, opts ...pulumi.ResourceOption) (*RdsReadReplicaInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.Flavor == nil {
		return nil, errors.New("invalid value for required argument 'Flavor'")
	}
	if args.PrimaryInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryInstanceId'")
	}
	if args.Volume == nil {
		return nil, errors.New("invalid value for required argument 'Volume'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdsReadReplicaInstance
	err := ctx.RegisterResource("sbercloud:index/rdsReadReplicaInstance:RdsReadReplicaInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsReadReplicaInstance gets an existing RdsReadReplicaInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsReadReplicaInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsReadReplicaInstanceState, opts ...pulumi.ResourceOption) (*RdsReadReplicaInstance, error) {
	var resource RdsReadReplicaInstance
	err := ctx.ReadResource("sbercloud:index/rdsReadReplicaInstance:RdsReadReplicaInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsReadReplicaInstance resources.
type rdsReadReplicaInstanceState struct {
	AutoRenew           *string                           `pulumi:"autoRenew"`
	AvailabilityZone    *string                           `pulumi:"availabilityZone"`
	ChargingMode        *string                           `pulumi:"chargingMode"`
	Db                  *RdsReadReplicaInstanceDb         `pulumi:"db"`
	Description         *string                           `pulumi:"description"`
	EnterpriseProjectId *string                           `pulumi:"enterpriseProjectId"`
	FixedIp             *string                           `pulumi:"fixedIp"`
	Flavor              *string                           `pulumi:"flavor"`
	MaintainBegin       *string                           `pulumi:"maintainBegin"`
	MaintainEnd         *string                           `pulumi:"maintainEnd"`
	Name                *string                           `pulumi:"name"`
	Parameters          []RdsReadReplicaInstanceParameter `pulumi:"parameters"`
	Period              *int                              `pulumi:"period"`
	PeriodUnit          *string                           `pulumi:"periodUnit"`
	PrimaryInstanceId   *string                           `pulumi:"primaryInstanceId"`
	PrivateIps          []string                          `pulumi:"privateIps"`
	PublicIps           []string                          `pulumi:"publicIps"`
	Region              *string                           `pulumi:"region"`
	SecurityGroupId     *string                           `pulumi:"securityGroupId"`
	SslEnable           *bool                             `pulumi:"sslEnable"`
	Status              *string                           `pulumi:"status"`
	SubnetId            *string                           `pulumi:"subnetId"`
	Tags                map[string]string                 `pulumi:"tags"`
	Type                *string                           `pulumi:"type"`
	Volume              *RdsReadReplicaInstanceVolume     `pulumi:"volume"`
	VpcId               *string                           `pulumi:"vpcId"`
}

type RdsReadReplicaInstanceState struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	Db                  RdsReadReplicaInstanceDbPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	FixedIp             pulumi.StringPtrInput
	Flavor              pulumi.StringPtrInput
	MaintainBegin       pulumi.StringPtrInput
	MaintainEnd         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Parameters          RdsReadReplicaInstanceParameterArrayInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PrimaryInstanceId   pulumi.StringPtrInput
	PrivateIps          pulumi.StringArrayInput
	PublicIps           pulumi.StringArrayInput
	Region              pulumi.StringPtrInput
	SecurityGroupId     pulumi.StringPtrInput
	SslEnable           pulumi.BoolPtrInput
	Status              pulumi.StringPtrInput
	SubnetId            pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	Type                pulumi.StringPtrInput
	Volume              RdsReadReplicaInstanceVolumePtrInput
	VpcId               pulumi.StringPtrInput
}

func (RdsReadReplicaInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsReadReplicaInstanceState)(nil)).Elem()
}

type rdsReadReplicaInstanceArgs struct {
	AutoRenew           *string                           `pulumi:"autoRenew"`
	AvailabilityZone    string                            `pulumi:"availabilityZone"`
	ChargingMode        *string                           `pulumi:"chargingMode"`
	Db                  *RdsReadReplicaInstanceDb         `pulumi:"db"`
	Description         *string                           `pulumi:"description"`
	EnterpriseProjectId *string                           `pulumi:"enterpriseProjectId"`
	FixedIp             *string                           `pulumi:"fixedIp"`
	Flavor              string                            `pulumi:"flavor"`
	MaintainBegin       *string                           `pulumi:"maintainBegin"`
	MaintainEnd         *string                           `pulumi:"maintainEnd"`
	Name                *string                           `pulumi:"name"`
	Parameters          []RdsReadReplicaInstanceParameter `pulumi:"parameters"`
	Period              *int                              `pulumi:"period"`
	PeriodUnit          *string                           `pulumi:"periodUnit"`
	PrimaryInstanceId   string                            `pulumi:"primaryInstanceId"`
	Region              *string                           `pulumi:"region"`
	SecurityGroupId     *string                           `pulumi:"securityGroupId"`
	SslEnable           *bool                             `pulumi:"sslEnable"`
	Tags                map[string]string                 `pulumi:"tags"`
	Volume              RdsReadReplicaInstanceVolume      `pulumi:"volume"`
}

// The set of arguments for constructing a RdsReadReplicaInstance resource.
type RdsReadReplicaInstanceArgs struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringInput
	ChargingMode        pulumi.StringPtrInput
	Db                  RdsReadReplicaInstanceDbPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	FixedIp             pulumi.StringPtrInput
	Flavor              pulumi.StringInput
	MaintainBegin       pulumi.StringPtrInput
	MaintainEnd         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Parameters          RdsReadReplicaInstanceParameterArrayInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PrimaryInstanceId   pulumi.StringInput
	Region              pulumi.StringPtrInput
	SecurityGroupId     pulumi.StringPtrInput
	SslEnable           pulumi.BoolPtrInput
	Tags                pulumi.StringMapInput
	Volume              RdsReadReplicaInstanceVolumeInput
}

func (RdsReadReplicaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsReadReplicaInstanceArgs)(nil)).Elem()
}

type RdsReadReplicaInstanceInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceOutput() RdsReadReplicaInstanceOutput
	ToRdsReadReplicaInstanceOutputWithContext(ctx context.Context) RdsReadReplicaInstanceOutput
}

func (*RdsReadReplicaInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplicaInstance)(nil)).Elem()
}

func (i *RdsReadReplicaInstance) ToRdsReadReplicaInstanceOutput() RdsReadReplicaInstanceOutput {
	return i.ToRdsReadReplicaInstanceOutputWithContext(context.Background())
}

func (i *RdsReadReplicaInstance) ToRdsReadReplicaInstanceOutputWithContext(ctx context.Context) RdsReadReplicaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceOutput)
}

// RdsReadReplicaInstanceArrayInput is an input type that accepts RdsReadReplicaInstanceArray and RdsReadReplicaInstanceArrayOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceArrayInput` via:
//
//	RdsReadReplicaInstanceArray{ RdsReadReplicaInstanceArgs{...} }
type RdsReadReplicaInstanceArrayInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceArrayOutput() RdsReadReplicaInstanceArrayOutput
	ToRdsReadReplicaInstanceArrayOutputWithContext(context.Context) RdsReadReplicaInstanceArrayOutput
}

type RdsReadReplicaInstanceArray []RdsReadReplicaInstanceInput

func (RdsReadReplicaInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsReadReplicaInstance)(nil)).Elem()
}

func (i RdsReadReplicaInstanceArray) ToRdsReadReplicaInstanceArrayOutput() RdsReadReplicaInstanceArrayOutput {
	return i.ToRdsReadReplicaInstanceArrayOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceArray) ToRdsReadReplicaInstanceArrayOutputWithContext(ctx context.Context) RdsReadReplicaInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceArrayOutput)
}

// RdsReadReplicaInstanceMapInput is an input type that accepts RdsReadReplicaInstanceMap and RdsReadReplicaInstanceMapOutput values.
// You can construct a concrete instance of `RdsReadReplicaInstanceMapInput` via:
//
//	RdsReadReplicaInstanceMap{ "key": RdsReadReplicaInstanceArgs{...} }
type RdsReadReplicaInstanceMapInput interface {
	pulumi.Input

	ToRdsReadReplicaInstanceMapOutput() RdsReadReplicaInstanceMapOutput
	ToRdsReadReplicaInstanceMapOutputWithContext(context.Context) RdsReadReplicaInstanceMapOutput
}

type RdsReadReplicaInstanceMap map[string]RdsReadReplicaInstanceInput

func (RdsReadReplicaInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsReadReplicaInstance)(nil)).Elem()
}

func (i RdsReadReplicaInstanceMap) ToRdsReadReplicaInstanceMapOutput() RdsReadReplicaInstanceMapOutput {
	return i.ToRdsReadReplicaInstanceMapOutputWithContext(context.Background())
}

func (i RdsReadReplicaInstanceMap) ToRdsReadReplicaInstanceMapOutputWithContext(ctx context.Context) RdsReadReplicaInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaInstanceMapOutput)
}

type RdsReadReplicaInstanceOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplicaInstance)(nil)).Elem()
}

func (o RdsReadReplicaInstanceOutput) ToRdsReadReplicaInstanceOutput() RdsReadReplicaInstanceOutput {
	return o
}

func (o RdsReadReplicaInstanceOutput) ToRdsReadReplicaInstanceOutputWithContext(ctx context.Context) RdsReadReplicaInstanceOutput {
	return o
}

func (o RdsReadReplicaInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) Db() RdsReadReplicaInstanceDbOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) RdsReadReplicaInstanceDbOutput { return v.Db }).(RdsReadReplicaInstanceDbOutput)
}

func (o RdsReadReplicaInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) FixedIp() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.FixedIp }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) Parameters() RdsReadReplicaInstanceParameterArrayOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) RdsReadReplicaInstanceParameterArrayOutput { return v.Parameters }).(RdsReadReplicaInstanceParameterArrayOutput)
}

func (o RdsReadReplicaInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o RdsReadReplicaInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o RdsReadReplicaInstanceOutput) PrimaryInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.PrimaryInstanceId }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringArrayOutput { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

func (o RdsReadReplicaInstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

func (o RdsReadReplicaInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.BoolOutput { return v.SslEnable }).(pulumi.BoolOutput)
}

func (o RdsReadReplicaInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o RdsReadReplicaInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o RdsReadReplicaInstanceOutput) Volume() RdsReadReplicaInstanceVolumeOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) RdsReadReplicaInstanceVolumeOutput { return v.Volume }).(RdsReadReplicaInstanceVolumeOutput)
}

func (o RdsReadReplicaInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplicaInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type RdsReadReplicaInstanceArrayOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsReadReplicaInstance)(nil)).Elem()
}

func (o RdsReadReplicaInstanceArrayOutput) ToRdsReadReplicaInstanceArrayOutput() RdsReadReplicaInstanceArrayOutput {
	return o
}

func (o RdsReadReplicaInstanceArrayOutput) ToRdsReadReplicaInstanceArrayOutputWithContext(ctx context.Context) RdsReadReplicaInstanceArrayOutput {
	return o
}

func (o RdsReadReplicaInstanceArrayOutput) Index(i pulumi.IntInput) RdsReadReplicaInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdsReadReplicaInstance {
		return vs[0].([]*RdsReadReplicaInstance)[vs[1].(int)]
	}).(RdsReadReplicaInstanceOutput)
}

type RdsReadReplicaInstanceMapOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsReadReplicaInstance)(nil)).Elem()
}

func (o RdsReadReplicaInstanceMapOutput) ToRdsReadReplicaInstanceMapOutput() RdsReadReplicaInstanceMapOutput {
	return o
}

func (o RdsReadReplicaInstanceMapOutput) ToRdsReadReplicaInstanceMapOutputWithContext(ctx context.Context) RdsReadReplicaInstanceMapOutput {
	return o
}

func (o RdsReadReplicaInstanceMapOutput) MapIndex(k pulumi.StringInput) RdsReadReplicaInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdsReadReplicaInstance {
		return vs[0].(map[string]*RdsReadReplicaInstance)[vs[1].(string)]
	}).(RdsReadReplicaInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceInput)(nil)).Elem(), &RdsReadReplicaInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceArrayInput)(nil)).Elem(), RdsReadReplicaInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInstanceMapInput)(nil)).Elem(), RdsReadReplicaInstanceMap{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceArrayOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaInstanceMapOutput{})
}
