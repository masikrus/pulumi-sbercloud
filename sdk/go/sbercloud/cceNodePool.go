// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CceNodePool struct {
	pulumi.CustomResourceState

	AutoRenew           pulumi.StringPtrOutput           `pulumi:"autoRenew"`
	AvailabilityZone    pulumi.StringPtrOutput           `pulumi:"availabilityZone"`
	BillingMode         pulumi.IntOutput                 `pulumi:"billingMode"`
	ChargingMode        pulumi.StringOutput              `pulumi:"chargingMode"`
	ClusterId           pulumi.StringOutput              `pulumi:"clusterId"`
	CurrentNodeCount    pulumi.IntOutput                 `pulumi:"currentNodeCount"`
	DataVolumes         CceNodePoolDataVolumeArrayOutput `pulumi:"dataVolumes"`
	EcsGroupId          pulumi.StringPtrOutput           `pulumi:"ecsGroupId"`
	EnterpriseProjectId pulumi.StringOutput              `pulumi:"enterpriseProjectId"`
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                pulumi.StringMapOutput                    `pulumi:"extendParam"`
	ExtendParams               CceNodePoolExtendParamsPtrOutput          `pulumi:"extendParams"`
	ExtensionScaleGroups       CceNodePoolExtensionScaleGroupArrayOutput `pulumi:"extensionScaleGroups"`
	FlavorId                   pulumi.StringOutput                       `pulumi:"flavorId"`
	HostnameConfig             CceNodePoolHostnameConfigOutput           `pulumi:"hostnameConfig"`
	InitialNodeCount           pulumi.IntOutput                          `pulumi:"initialNodeCount"`
	InitializedConditions      pulumi.StringArrayOutput                  `pulumi:"initializedConditions"`
	KeyPair                    pulumi.StringPtrOutput                    `pulumi:"keyPair"`
	LabelPolicyOnExistingNodes pulumi.StringOutput                       `pulumi:"labelPolicyOnExistingNodes"`
	Labels                     pulumi.StringMapOutput                    `pulumi:"labels"`
	MaxNodeCount               pulumi.IntPtrOutput                       `pulumi:"maxNodeCount"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           pulumi.IntOutput         `pulumi:"maxPods"`
	MinNodeCount      pulumi.IntPtrOutput      `pulumi:"minNodeCount"`
	Name              pulumi.StringOutput      `pulumi:"name"`
	Os                pulumi.StringOutput      `pulumi:"os"`
	Password          pulumi.StringPtrOutput   `pulumi:"password"`
	Period            pulumi.IntPtrOutput      `pulumi:"period"`
	PeriodUnit        pulumi.StringPtrOutput   `pulumi:"periodUnit"`
	PodSecurityGroups pulumi.StringArrayOutput `pulumi:"podSecurityGroups"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall pulumi.StringPtrOutput `pulumi:"postinstall"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 pulumi.StringPtrOutput      `pulumi:"preinstall"`
	Priority                   pulumi.IntPtrOutput         `pulumi:"priority"`
	Region                     pulumi.StringOutput         `pulumi:"region"`
	RootVolume                 CceNodePoolRootVolumeOutput `pulumi:"rootVolume"`
	Runtime                    pulumi.StringOutput         `pulumi:"runtime"`
	ScaleDownCooldownTime      pulumi.IntPtrOutput         `pulumi:"scaleDownCooldownTime"`
	ScallEnable                pulumi.BoolPtrOutput        `pulumi:"scallEnable"`
	SecurityGroups             pulumi.StringArrayOutput    `pulumi:"securityGroups"`
	Status                     pulumi.StringOutput         `pulumi:"status"`
	Storage                    CceNodePoolStoragePtrOutput `pulumi:"storage"`
	SubnetId                   pulumi.StringOutput         `pulumi:"subnetId"`
	SubnetLists                pulumi.StringArrayOutput    `pulumi:"subnetLists"`
	TagPolicyOnExistingNodes   pulumi.StringOutput         `pulumi:"tagPolicyOnExistingNodes"`
	Tags                       pulumi.StringMapOutput      `pulumi:"tags"`
	TaintPolicyOnExistingNodes pulumi.StringOutput         `pulumi:"taintPolicyOnExistingNodes"`
	Taints                     CceNodePoolTaintArrayOutput `pulumi:"taints"`
	Type                       pulumi.StringOutput         `pulumi:"type"`
}

// NewCceNodePool registers a new resource with the given unique name, arguments, and options.
func NewCceNodePool(ctx *pulumi.Context,
	name string, args *CceNodePoolArgs, opts ...pulumi.ResourceOption) (*CceNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.InitialNodeCount == nil {
		return nil, errors.New("invalid value for required argument 'InitialNodeCount'")
	}
	if args.RootVolume == nil {
		return nil, errors.New("invalid value for required argument 'RootVolume'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CceNodePool
	err := ctx.RegisterResource("sbercloud:index/cceNodePool:CceNodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCceNodePool gets an existing CceNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCceNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CceNodePoolState, opts ...pulumi.ResourceOption) (*CceNodePool, error) {
	var resource CceNodePool
	err := ctx.ReadResource("sbercloud:index/cceNodePool:CceNodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CceNodePool resources.
type cceNodePoolState struct {
	AutoRenew           *string                 `pulumi:"autoRenew"`
	AvailabilityZone    *string                 `pulumi:"availabilityZone"`
	BillingMode         *int                    `pulumi:"billingMode"`
	ChargingMode        *string                 `pulumi:"chargingMode"`
	ClusterId           *string                 `pulumi:"clusterId"`
	CurrentNodeCount    *int                    `pulumi:"currentNodeCount"`
	DataVolumes         []CceNodePoolDataVolume `pulumi:"dataVolumes"`
	EcsGroupId          *string                 `pulumi:"ecsGroupId"`
	EnterpriseProjectId *string                 `pulumi:"enterpriseProjectId"`
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                map[string]string                `pulumi:"extendParam"`
	ExtendParams               *CceNodePoolExtendParams         `pulumi:"extendParams"`
	ExtensionScaleGroups       []CceNodePoolExtensionScaleGroup `pulumi:"extensionScaleGroups"`
	FlavorId                   *string                          `pulumi:"flavorId"`
	HostnameConfig             *CceNodePoolHostnameConfig       `pulumi:"hostnameConfig"`
	InitialNodeCount           *int                             `pulumi:"initialNodeCount"`
	InitializedConditions      []string                         `pulumi:"initializedConditions"`
	KeyPair                    *string                          `pulumi:"keyPair"`
	LabelPolicyOnExistingNodes *string                          `pulumi:"labelPolicyOnExistingNodes"`
	Labels                     map[string]string                `pulumi:"labels"`
	MaxNodeCount               *int                             `pulumi:"maxNodeCount"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           *int     `pulumi:"maxPods"`
	MinNodeCount      *int     `pulumi:"minNodeCount"`
	Name              *string  `pulumi:"name"`
	Os                *string  `pulumi:"os"`
	Password          *string  `pulumi:"password"`
	Period            *int     `pulumi:"period"`
	PeriodUnit        *string  `pulumi:"periodUnit"`
	PodSecurityGroups []string `pulumi:"podSecurityGroups"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 *string                `pulumi:"preinstall"`
	Priority                   *int                   `pulumi:"priority"`
	Region                     *string                `pulumi:"region"`
	RootVolume                 *CceNodePoolRootVolume `pulumi:"rootVolume"`
	Runtime                    *string                `pulumi:"runtime"`
	ScaleDownCooldownTime      *int                   `pulumi:"scaleDownCooldownTime"`
	ScallEnable                *bool                  `pulumi:"scallEnable"`
	SecurityGroups             []string               `pulumi:"securityGroups"`
	Status                     *string                `pulumi:"status"`
	Storage                    *CceNodePoolStorage    `pulumi:"storage"`
	SubnetId                   *string                `pulumi:"subnetId"`
	SubnetLists                []string               `pulumi:"subnetLists"`
	TagPolicyOnExistingNodes   *string                `pulumi:"tagPolicyOnExistingNodes"`
	Tags                       map[string]string      `pulumi:"tags"`
	TaintPolicyOnExistingNodes *string                `pulumi:"taintPolicyOnExistingNodes"`
	Taints                     []CceNodePoolTaint     `pulumi:"taints"`
	Type                       *string                `pulumi:"type"`
}

type CceNodePoolState struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	BillingMode         pulumi.IntPtrInput
	ChargingMode        pulumi.StringPtrInput
	ClusterId           pulumi.StringPtrInput
	CurrentNodeCount    pulumi.IntPtrInput
	DataVolumes         CceNodePoolDataVolumeArrayInput
	EcsGroupId          pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                pulumi.StringMapInput
	ExtendParams               CceNodePoolExtendParamsPtrInput
	ExtensionScaleGroups       CceNodePoolExtensionScaleGroupArrayInput
	FlavorId                   pulumi.StringPtrInput
	HostnameConfig             CceNodePoolHostnameConfigPtrInput
	InitialNodeCount           pulumi.IntPtrInput
	InitializedConditions      pulumi.StringArrayInput
	KeyPair                    pulumi.StringPtrInput
	LabelPolicyOnExistingNodes pulumi.StringPtrInput
	Labels                     pulumi.StringMapInput
	MaxNodeCount               pulumi.IntPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           pulumi.IntPtrInput
	MinNodeCount      pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	Os                pulumi.StringPtrInput
	Password          pulumi.StringPtrInput
	Period            pulumi.IntPtrInput
	PeriodUnit        pulumi.StringPtrInput
	PodSecurityGroups pulumi.StringArrayInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 pulumi.StringPtrInput
	Priority                   pulumi.IntPtrInput
	Region                     pulumi.StringPtrInput
	RootVolume                 CceNodePoolRootVolumePtrInput
	Runtime                    pulumi.StringPtrInput
	ScaleDownCooldownTime      pulumi.IntPtrInput
	ScallEnable                pulumi.BoolPtrInput
	SecurityGroups             pulumi.StringArrayInput
	Status                     pulumi.StringPtrInput
	Storage                    CceNodePoolStoragePtrInput
	SubnetId                   pulumi.StringPtrInput
	SubnetLists                pulumi.StringArrayInput
	TagPolicyOnExistingNodes   pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TaintPolicyOnExistingNodes pulumi.StringPtrInput
	Taints                     CceNodePoolTaintArrayInput
	Type                       pulumi.StringPtrInput
}

func (CceNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*cceNodePoolState)(nil)).Elem()
}

type cceNodePoolArgs struct {
	AutoRenew           *string                 `pulumi:"autoRenew"`
	AvailabilityZone    *string                 `pulumi:"availabilityZone"`
	ChargingMode        *string                 `pulumi:"chargingMode"`
	ClusterId           string                  `pulumi:"clusterId"`
	DataVolumes         []CceNodePoolDataVolume `pulumi:"dataVolumes"`
	EcsGroupId          *string                 `pulumi:"ecsGroupId"`
	EnterpriseProjectId *string                 `pulumi:"enterpriseProjectId"`
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                map[string]string                `pulumi:"extendParam"`
	ExtendParams               *CceNodePoolExtendParams         `pulumi:"extendParams"`
	ExtensionScaleGroups       []CceNodePoolExtensionScaleGroup `pulumi:"extensionScaleGroups"`
	FlavorId                   string                           `pulumi:"flavorId"`
	HostnameConfig             *CceNodePoolHostnameConfig       `pulumi:"hostnameConfig"`
	InitialNodeCount           int                              `pulumi:"initialNodeCount"`
	InitializedConditions      []string                         `pulumi:"initializedConditions"`
	KeyPair                    *string                          `pulumi:"keyPair"`
	LabelPolicyOnExistingNodes *string                          `pulumi:"labelPolicyOnExistingNodes"`
	Labels                     map[string]string                `pulumi:"labels"`
	MaxNodeCount               *int                             `pulumi:"maxNodeCount"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           *int     `pulumi:"maxPods"`
	MinNodeCount      *int     `pulumi:"minNodeCount"`
	Name              *string  `pulumi:"name"`
	Os                *string  `pulumi:"os"`
	Password          *string  `pulumi:"password"`
	Period            *int     `pulumi:"period"`
	PeriodUnit        *string  `pulumi:"periodUnit"`
	PodSecurityGroups []string `pulumi:"podSecurityGroups"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 *string               `pulumi:"preinstall"`
	Priority                   *int                  `pulumi:"priority"`
	Region                     *string               `pulumi:"region"`
	RootVolume                 CceNodePoolRootVolume `pulumi:"rootVolume"`
	Runtime                    *string               `pulumi:"runtime"`
	ScaleDownCooldownTime      *int                  `pulumi:"scaleDownCooldownTime"`
	ScallEnable                *bool                 `pulumi:"scallEnable"`
	SecurityGroups             []string              `pulumi:"securityGroups"`
	Storage                    *CceNodePoolStorage   `pulumi:"storage"`
	SubnetId                   *string               `pulumi:"subnetId"`
	SubnetLists                []string              `pulumi:"subnetLists"`
	TagPolicyOnExistingNodes   *string               `pulumi:"tagPolicyOnExistingNodes"`
	Tags                       map[string]string     `pulumi:"tags"`
	TaintPolicyOnExistingNodes *string               `pulumi:"taintPolicyOnExistingNodes"`
	Taints                     []CceNodePoolTaint    `pulumi:"taints"`
	Type                       *string               `pulumi:"type"`
}

// The set of arguments for constructing a CceNodePool resource.
type CceNodePoolArgs struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	ClusterId           pulumi.StringInput
	DataVolumes         CceNodePoolDataVolumeArrayInput
	EcsGroupId          pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                pulumi.StringMapInput
	ExtendParams               CceNodePoolExtendParamsPtrInput
	ExtensionScaleGroups       CceNodePoolExtensionScaleGroupArrayInput
	FlavorId                   pulumi.StringInput
	HostnameConfig             CceNodePoolHostnameConfigPtrInput
	InitialNodeCount           pulumi.IntInput
	InitializedConditions      pulumi.StringArrayInput
	KeyPair                    pulumi.StringPtrInput
	LabelPolicyOnExistingNodes pulumi.StringPtrInput
	Labels                     pulumi.StringMapInput
	MaxNodeCount               pulumi.IntPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           pulumi.IntPtrInput
	MinNodeCount      pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	Os                pulumi.StringPtrInput
	Password          pulumi.StringPtrInput
	Period            pulumi.IntPtrInput
	PeriodUnit        pulumi.StringPtrInput
	PodSecurityGroups pulumi.StringArrayInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 pulumi.StringPtrInput
	Priority                   pulumi.IntPtrInput
	Region                     pulumi.StringPtrInput
	RootVolume                 CceNodePoolRootVolumeInput
	Runtime                    pulumi.StringPtrInput
	ScaleDownCooldownTime      pulumi.IntPtrInput
	ScallEnable                pulumi.BoolPtrInput
	SecurityGroups             pulumi.StringArrayInput
	Storage                    CceNodePoolStoragePtrInput
	SubnetId                   pulumi.StringPtrInput
	SubnetLists                pulumi.StringArrayInput
	TagPolicyOnExistingNodes   pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TaintPolicyOnExistingNodes pulumi.StringPtrInput
	Taints                     CceNodePoolTaintArrayInput
	Type                       pulumi.StringPtrInput
}

func (CceNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cceNodePoolArgs)(nil)).Elem()
}

type CceNodePoolInput interface {
	pulumi.Input

	ToCceNodePoolOutput() CceNodePoolOutput
	ToCceNodePoolOutputWithContext(ctx context.Context) CceNodePoolOutput
}

func (*CceNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePool)(nil)).Elem()
}

func (i *CceNodePool) ToCceNodePoolOutput() CceNodePoolOutput {
	return i.ToCceNodePoolOutputWithContext(context.Background())
}

func (i *CceNodePool) ToCceNodePoolOutputWithContext(ctx context.Context) CceNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolOutput)
}

// CceNodePoolArrayInput is an input type that accepts CceNodePoolArray and CceNodePoolArrayOutput values.
// You can construct a concrete instance of `CceNodePoolArrayInput` via:
//
//	CceNodePoolArray{ CceNodePoolArgs{...} }
type CceNodePoolArrayInput interface {
	pulumi.Input

	ToCceNodePoolArrayOutput() CceNodePoolArrayOutput
	ToCceNodePoolArrayOutputWithContext(context.Context) CceNodePoolArrayOutput
}

type CceNodePoolArray []CceNodePoolInput

func (CceNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CceNodePool)(nil)).Elem()
}

func (i CceNodePoolArray) ToCceNodePoolArrayOutput() CceNodePoolArrayOutput {
	return i.ToCceNodePoolArrayOutputWithContext(context.Background())
}

func (i CceNodePoolArray) ToCceNodePoolArrayOutputWithContext(ctx context.Context) CceNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolArrayOutput)
}

// CceNodePoolMapInput is an input type that accepts CceNodePoolMap and CceNodePoolMapOutput values.
// You can construct a concrete instance of `CceNodePoolMapInput` via:
//
//	CceNodePoolMap{ "key": CceNodePoolArgs{...} }
type CceNodePoolMapInput interface {
	pulumi.Input

	ToCceNodePoolMapOutput() CceNodePoolMapOutput
	ToCceNodePoolMapOutputWithContext(context.Context) CceNodePoolMapOutput
}

type CceNodePoolMap map[string]CceNodePoolInput

func (CceNodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CceNodePool)(nil)).Elem()
}

func (i CceNodePoolMap) ToCceNodePoolMapOutput() CceNodePoolMapOutput {
	return i.ToCceNodePoolMapOutputWithContext(context.Background())
}

func (i CceNodePoolMap) ToCceNodePoolMapOutputWithContext(ctx context.Context) CceNodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CceNodePoolMapOutput)
}

type CceNodePoolOutput struct{ *pulumi.OutputState }

func (CceNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CceNodePool)(nil)).Elem()
}

func (o CceNodePoolOutput) ToCceNodePoolOutput() CceNodePoolOutput {
	return o
}

func (o CceNodePoolOutput) ToCceNodePoolOutputWithContext(ctx context.Context) CceNodePoolOutput {
	return o
}

func (o CceNodePoolOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntOutput { return v.BillingMode }).(pulumi.IntOutput)
}

func (o CceNodePoolOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) CurrentNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntOutput { return v.CurrentNodeCount }).(pulumi.IntOutput)
}

func (o CceNodePoolOutput) DataVolumes() CceNodePoolDataVolumeArrayOutput {
	return o.ApplyT(func(v *CceNodePool) CceNodePoolDataVolumeArrayOutput { return v.DataVolumes }).(CceNodePoolDataVolumeArrayOutput)
}

func (o CceNodePoolOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.EcsGroupId }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
func (o CceNodePoolOutput) ExtendParam() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringMapOutput { return v.ExtendParam }).(pulumi.StringMapOutput)
}

func (o CceNodePoolOutput) ExtendParams() CceNodePoolExtendParamsPtrOutput {
	return o.ApplyT(func(v *CceNodePool) CceNodePoolExtendParamsPtrOutput { return v.ExtendParams }).(CceNodePoolExtendParamsPtrOutput)
}

func (o CceNodePoolOutput) ExtensionScaleGroups() CceNodePoolExtensionScaleGroupArrayOutput {
	return o.ApplyT(func(v *CceNodePool) CceNodePoolExtensionScaleGroupArrayOutput { return v.ExtensionScaleGroups }).(CceNodePoolExtensionScaleGroupArrayOutput)
}

func (o CceNodePoolOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) HostnameConfig() CceNodePoolHostnameConfigOutput {
	return o.ApplyT(func(v *CceNodePool) CceNodePoolHostnameConfigOutput { return v.HostnameConfig }).(CceNodePoolHostnameConfigOutput)
}

func (o CceNodePoolOutput) InitialNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntOutput { return v.InitialNodeCount }).(pulumi.IntOutput)
}

func (o CceNodePoolOutput) InitializedConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringArrayOutput { return v.InitializedConditions }).(pulumi.StringArrayOutput)
}

func (o CceNodePoolOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.KeyPair }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolOutput) LabelPolicyOnExistingNodes() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.LabelPolicyOnExistingNodes }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o CceNodePoolOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntPtrOutput { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
func (o CceNodePoolOutput) MaxPods() pulumi.IntOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntOutput { return v.MaxPods }).(pulumi.IntOutput)
}

func (o CceNodePoolOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntPtrOutput { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolOutput) PodSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringArrayOutput { return v.PodSecurityGroups }).(pulumi.StringArrayOutput)
}

// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
func (o CceNodePoolOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.Postinstall }).(pulumi.StringPtrOutput)
}

// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
func (o CceNodePoolOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringPtrOutput { return v.Preinstall }).(pulumi.StringPtrOutput)
}

func (o CceNodePoolOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) RootVolume() CceNodePoolRootVolumeOutput {
	return o.ApplyT(func(v *CceNodePool) CceNodePoolRootVolumeOutput { return v.RootVolume }).(CceNodePoolRootVolumeOutput)
}

func (o CceNodePoolOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) ScaleDownCooldownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.IntPtrOutput { return v.ScaleDownCooldownTime }).(pulumi.IntPtrOutput)
}

func (o CceNodePoolOutput) ScallEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.BoolPtrOutput { return v.ScallEnable }).(pulumi.BoolPtrOutput)
}

func (o CceNodePoolOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o CceNodePoolOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) Storage() CceNodePoolStoragePtrOutput {
	return o.ApplyT(func(v *CceNodePool) CceNodePoolStoragePtrOutput { return v.Storage }).(CceNodePoolStoragePtrOutput)
}

func (o CceNodePoolOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) SubnetLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringArrayOutput { return v.SubnetLists }).(pulumi.StringArrayOutput)
}

func (o CceNodePoolOutput) TagPolicyOnExistingNodes() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.TagPolicyOnExistingNodes }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o CceNodePoolOutput) TaintPolicyOnExistingNodes() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.TaintPolicyOnExistingNodes }).(pulumi.StringOutput)
}

func (o CceNodePoolOutput) Taints() CceNodePoolTaintArrayOutput {
	return o.ApplyT(func(v *CceNodePool) CceNodePoolTaintArrayOutput { return v.Taints }).(CceNodePoolTaintArrayOutput)
}

func (o CceNodePoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CceNodePool) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type CceNodePoolArrayOutput struct{ *pulumi.OutputState }

func (CceNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CceNodePool)(nil)).Elem()
}

func (o CceNodePoolArrayOutput) ToCceNodePoolArrayOutput() CceNodePoolArrayOutput {
	return o
}

func (o CceNodePoolArrayOutput) ToCceNodePoolArrayOutputWithContext(ctx context.Context) CceNodePoolArrayOutput {
	return o
}

func (o CceNodePoolArrayOutput) Index(i pulumi.IntInput) CceNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CceNodePool {
		return vs[0].([]*CceNodePool)[vs[1].(int)]
	}).(CceNodePoolOutput)
}

type CceNodePoolMapOutput struct{ *pulumi.OutputState }

func (CceNodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CceNodePool)(nil)).Elem()
}

func (o CceNodePoolMapOutput) ToCceNodePoolMapOutput() CceNodePoolMapOutput {
	return o
}

func (o CceNodePoolMapOutput) ToCceNodePoolMapOutputWithContext(ctx context.Context) CceNodePoolMapOutput {
	return o
}

func (o CceNodePoolMapOutput) MapIndex(k pulumi.StringInput) CceNodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CceNodePool {
		return vs[0].(map[string]*CceNodePool)[vs[1].(string)]
	}).(CceNodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolInput)(nil)).Elem(), &CceNodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolArrayInput)(nil)).Elem(), CceNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CceNodePoolMapInput)(nil)).Elem(), CceNodePoolMap{})
	pulumi.RegisterOutputType(CceNodePoolOutput{})
	pulumi.RegisterOutputType(CceNodePoolArrayOutput{})
	pulumi.RegisterOutputType(CceNodePoolMapOutput{})
}
