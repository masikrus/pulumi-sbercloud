// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EvsVolume struct {
	pulumi.CustomResourceState

	Attachments EvsVolumeAttachmentArrayOutput `pulumi:"attachments"`
	// Deprecated: Deprecated
	AutoPay              pulumi.StringPtrOutput `pulumi:"autoPay"`
	AutoRenew            pulumi.StringPtrOutput `pulumi:"autoRenew"`
	AvailabilityZone     pulumi.StringOutput    `pulumi:"availabilityZone"`
	BackupId             pulumi.StringPtrOutput `pulumi:"backupId"`
	Cascade              pulumi.BoolPtrOutput   `pulumi:"cascade"`
	ChargingMode         pulumi.StringOutput    `pulumi:"chargingMode"`
	DedicatedStorageId   pulumi.StringPtrOutput `pulumi:"dedicatedStorageId"`
	DedicatedStorageName pulumi.StringOutput    `pulumi:"dedicatedStorageName"`
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	DeviceType           pulumi.StringPtrOutput `pulumi:"deviceType"`
	EnterpriseProjectId  pulumi.StringOutput    `pulumi:"enterpriseProjectId"`
	ImageId              pulumi.StringPtrOutput `pulumi:"imageId"`
	Iops                 pulumi.IntOutput       `pulumi:"iops"`
	KmsId                pulumi.StringPtrOutput `pulumi:"kmsId"`
	Multiattach          pulumi.BoolPtrOutput   `pulumi:"multiattach"`
	Name                 pulumi.StringOutput    `pulumi:"name"`
	Period               pulumi.IntPtrOutput    `pulumi:"period"`
	PeriodUnit           pulumi.StringPtrOutput `pulumi:"periodUnit"`
	Region               pulumi.StringOutput    `pulumi:"region"`
	ServerId             pulumi.StringPtrOutput `pulumi:"serverId"`
	Size                 pulumi.IntOutput       `pulumi:"size"`
	SnapshotId           pulumi.StringPtrOutput `pulumi:"snapshotId"`
	Status               pulumi.StringOutput    `pulumi:"status"`
	Tags                 pulumi.StringMapOutput `pulumi:"tags"`
	Throughput           pulumi.IntOutput       `pulumi:"throughput"`
	VolumeType           pulumi.StringOutput    `pulumi:"volumeType"`
	Wwn                  pulumi.StringOutput    `pulumi:"wwn"`
}

// NewEvsVolume registers a new resource with the given unique name, arguments, and options.
func NewEvsVolume(ctx *pulumi.Context,
	name string, args *EvsVolumeArgs, opts ...pulumi.ResourceOption) (*EvsVolume, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.VolumeType == nil {
		return nil, errors.New("invalid value for required argument 'VolumeType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EvsVolume
	err := ctx.RegisterResource("sbercloud:index/evsVolume:EvsVolume", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEvsVolume gets an existing EvsVolume resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEvsVolume(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EvsVolumeState, opts ...pulumi.ResourceOption) (*EvsVolume, error) {
	var resource EvsVolume
	err := ctx.ReadResource("sbercloud:index/evsVolume:EvsVolume", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EvsVolume resources.
type evsVolumeState struct {
	Attachments []EvsVolumeAttachment `pulumi:"attachments"`
	// Deprecated: Deprecated
	AutoPay              *string           `pulumi:"autoPay"`
	AutoRenew            *string           `pulumi:"autoRenew"`
	AvailabilityZone     *string           `pulumi:"availabilityZone"`
	BackupId             *string           `pulumi:"backupId"`
	Cascade              *bool             `pulumi:"cascade"`
	ChargingMode         *string           `pulumi:"chargingMode"`
	DedicatedStorageId   *string           `pulumi:"dedicatedStorageId"`
	DedicatedStorageName *string           `pulumi:"dedicatedStorageName"`
	Description          *string           `pulumi:"description"`
	DeviceType           *string           `pulumi:"deviceType"`
	EnterpriseProjectId  *string           `pulumi:"enterpriseProjectId"`
	ImageId              *string           `pulumi:"imageId"`
	Iops                 *int              `pulumi:"iops"`
	KmsId                *string           `pulumi:"kmsId"`
	Multiattach          *bool             `pulumi:"multiattach"`
	Name                 *string           `pulumi:"name"`
	Period               *int              `pulumi:"period"`
	PeriodUnit           *string           `pulumi:"periodUnit"`
	Region               *string           `pulumi:"region"`
	ServerId             *string           `pulumi:"serverId"`
	Size                 *int              `pulumi:"size"`
	SnapshotId           *string           `pulumi:"snapshotId"`
	Status               *string           `pulumi:"status"`
	Tags                 map[string]string `pulumi:"tags"`
	Throughput           *int              `pulumi:"throughput"`
	VolumeType           *string           `pulumi:"volumeType"`
	Wwn                  *string           `pulumi:"wwn"`
}

type EvsVolumeState struct {
	Attachments EvsVolumeAttachmentArrayInput
	// Deprecated: Deprecated
	AutoPay              pulumi.StringPtrInput
	AutoRenew            pulumi.StringPtrInput
	AvailabilityZone     pulumi.StringPtrInput
	BackupId             pulumi.StringPtrInput
	Cascade              pulumi.BoolPtrInput
	ChargingMode         pulumi.StringPtrInput
	DedicatedStorageId   pulumi.StringPtrInput
	DedicatedStorageName pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DeviceType           pulumi.StringPtrInput
	EnterpriseProjectId  pulumi.StringPtrInput
	ImageId              pulumi.StringPtrInput
	Iops                 pulumi.IntPtrInput
	KmsId                pulumi.StringPtrInput
	Multiattach          pulumi.BoolPtrInput
	Name                 pulumi.StringPtrInput
	Period               pulumi.IntPtrInput
	PeriodUnit           pulumi.StringPtrInput
	Region               pulumi.StringPtrInput
	ServerId             pulumi.StringPtrInput
	Size                 pulumi.IntPtrInput
	SnapshotId           pulumi.StringPtrInput
	Status               pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	Throughput           pulumi.IntPtrInput
	VolumeType           pulumi.StringPtrInput
	Wwn                  pulumi.StringPtrInput
}

func (EvsVolumeState) ElementType() reflect.Type {
	return reflect.TypeOf((*evsVolumeState)(nil)).Elem()
}

type evsVolumeArgs struct {
	// Deprecated: Deprecated
	AutoPay             *string           `pulumi:"autoPay"`
	AutoRenew           *string           `pulumi:"autoRenew"`
	AvailabilityZone    string            `pulumi:"availabilityZone"`
	BackupId            *string           `pulumi:"backupId"`
	Cascade             *bool             `pulumi:"cascade"`
	ChargingMode        *string           `pulumi:"chargingMode"`
	DedicatedStorageId  *string           `pulumi:"dedicatedStorageId"`
	Description         *string           `pulumi:"description"`
	DeviceType          *string           `pulumi:"deviceType"`
	EnterpriseProjectId *string           `pulumi:"enterpriseProjectId"`
	ImageId             *string           `pulumi:"imageId"`
	Iops                *int              `pulumi:"iops"`
	KmsId               *string           `pulumi:"kmsId"`
	Multiattach         *bool             `pulumi:"multiattach"`
	Name                *string           `pulumi:"name"`
	Period              *int              `pulumi:"period"`
	PeriodUnit          *string           `pulumi:"periodUnit"`
	Region              *string           `pulumi:"region"`
	ServerId            *string           `pulumi:"serverId"`
	Size                *int              `pulumi:"size"`
	SnapshotId          *string           `pulumi:"snapshotId"`
	Tags                map[string]string `pulumi:"tags"`
	Throughput          *int              `pulumi:"throughput"`
	VolumeType          string            `pulumi:"volumeType"`
}

// The set of arguments for constructing a EvsVolume resource.
type EvsVolumeArgs struct {
	// Deprecated: Deprecated
	AutoPay             pulumi.StringPtrInput
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringInput
	BackupId            pulumi.StringPtrInput
	Cascade             pulumi.BoolPtrInput
	ChargingMode        pulumi.StringPtrInput
	DedicatedStorageId  pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	DeviceType          pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ImageId             pulumi.StringPtrInput
	Iops                pulumi.IntPtrInput
	KmsId               pulumi.StringPtrInput
	Multiattach         pulumi.BoolPtrInput
	Name                pulumi.StringPtrInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
	ServerId            pulumi.StringPtrInput
	Size                pulumi.IntPtrInput
	SnapshotId          pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	Throughput          pulumi.IntPtrInput
	VolumeType          pulumi.StringInput
}

func (EvsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*evsVolumeArgs)(nil)).Elem()
}

type EvsVolumeInput interface {
	pulumi.Input

	ToEvsVolumeOutput() EvsVolumeOutput
	ToEvsVolumeOutputWithContext(ctx context.Context) EvsVolumeOutput
}

func (*EvsVolume) ElementType() reflect.Type {
	return reflect.TypeOf((**EvsVolume)(nil)).Elem()
}

func (i *EvsVolume) ToEvsVolumeOutput() EvsVolumeOutput {
	return i.ToEvsVolumeOutputWithContext(context.Background())
}

func (i *EvsVolume) ToEvsVolumeOutputWithContext(ctx context.Context) EvsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvsVolumeOutput)
}

// EvsVolumeArrayInput is an input type that accepts EvsVolumeArray and EvsVolumeArrayOutput values.
// You can construct a concrete instance of `EvsVolumeArrayInput` via:
//
//	EvsVolumeArray{ EvsVolumeArgs{...} }
type EvsVolumeArrayInput interface {
	pulumi.Input

	ToEvsVolumeArrayOutput() EvsVolumeArrayOutput
	ToEvsVolumeArrayOutputWithContext(context.Context) EvsVolumeArrayOutput
}

type EvsVolumeArray []EvsVolumeInput

func (EvsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EvsVolume)(nil)).Elem()
}

func (i EvsVolumeArray) ToEvsVolumeArrayOutput() EvsVolumeArrayOutput {
	return i.ToEvsVolumeArrayOutputWithContext(context.Background())
}

func (i EvsVolumeArray) ToEvsVolumeArrayOutputWithContext(ctx context.Context) EvsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvsVolumeArrayOutput)
}

// EvsVolumeMapInput is an input type that accepts EvsVolumeMap and EvsVolumeMapOutput values.
// You can construct a concrete instance of `EvsVolumeMapInput` via:
//
//	EvsVolumeMap{ "key": EvsVolumeArgs{...} }
type EvsVolumeMapInput interface {
	pulumi.Input

	ToEvsVolumeMapOutput() EvsVolumeMapOutput
	ToEvsVolumeMapOutputWithContext(context.Context) EvsVolumeMapOutput
}

type EvsVolumeMap map[string]EvsVolumeInput

func (EvsVolumeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EvsVolume)(nil)).Elem()
}

func (i EvsVolumeMap) ToEvsVolumeMapOutput() EvsVolumeMapOutput {
	return i.ToEvsVolumeMapOutputWithContext(context.Background())
}

func (i EvsVolumeMap) ToEvsVolumeMapOutputWithContext(ctx context.Context) EvsVolumeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvsVolumeMapOutput)
}

type EvsVolumeOutput struct{ *pulumi.OutputState }

func (EvsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvsVolume)(nil)).Elem()
}

func (o EvsVolumeOutput) ToEvsVolumeOutput() EvsVolumeOutput {
	return o
}

func (o EvsVolumeOutput) ToEvsVolumeOutputWithContext(ctx context.Context) EvsVolumeOutput {
	return o
}

func (o EvsVolumeOutput) Attachments() EvsVolumeAttachmentArrayOutput {
	return o.ApplyT(func(v *EvsVolume) EvsVolumeAttachmentArrayOutput { return v.Attachments }).(EvsVolumeAttachmentArrayOutput)
}

// Deprecated: Deprecated
func (o EvsVolumeOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.BackupId }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) Cascade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.BoolPtrOutput { return v.Cascade }).(pulumi.BoolPtrOutput)
}

func (o EvsVolumeOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) DedicatedStorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.DedicatedStorageId }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) DedicatedStorageName() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.DedicatedStorageName }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.DeviceType }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.ImageId }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.IntOutput { return v.Iops }).(pulumi.IntOutput)
}

func (o EvsVolumeOutput) KmsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.KmsId }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) Multiattach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.BoolPtrOutput { return v.Multiattach }).(pulumi.BoolPtrOutput)
}

func (o EvsVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o EvsVolumeOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.ServerId }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

func (o EvsVolumeOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringPtrOutput { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o EvsVolumeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o EvsVolumeOutput) Throughput() pulumi.IntOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.IntOutput { return v.Throughput }).(pulumi.IntOutput)
}

func (o EvsVolumeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.VolumeType }).(pulumi.StringOutput)
}

func (o EvsVolumeOutput) Wwn() pulumi.StringOutput {
	return o.ApplyT(func(v *EvsVolume) pulumi.StringOutput { return v.Wwn }).(pulumi.StringOutput)
}

type EvsVolumeArrayOutput struct{ *pulumi.OutputState }

func (EvsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EvsVolume)(nil)).Elem()
}

func (o EvsVolumeArrayOutput) ToEvsVolumeArrayOutput() EvsVolumeArrayOutput {
	return o
}

func (o EvsVolumeArrayOutput) ToEvsVolumeArrayOutputWithContext(ctx context.Context) EvsVolumeArrayOutput {
	return o
}

func (o EvsVolumeArrayOutput) Index(i pulumi.IntInput) EvsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EvsVolume {
		return vs[0].([]*EvsVolume)[vs[1].(int)]
	}).(EvsVolumeOutput)
}

type EvsVolumeMapOutput struct{ *pulumi.OutputState }

func (EvsVolumeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EvsVolume)(nil)).Elem()
}

func (o EvsVolumeMapOutput) ToEvsVolumeMapOutput() EvsVolumeMapOutput {
	return o
}

func (o EvsVolumeMapOutput) ToEvsVolumeMapOutputWithContext(ctx context.Context) EvsVolumeMapOutput {
	return o
}

func (o EvsVolumeMapOutput) MapIndex(k pulumi.StringInput) EvsVolumeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EvsVolume {
		return vs[0].(map[string]*EvsVolume)[vs[1].(string)]
	}).(EvsVolumeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EvsVolumeInput)(nil)).Elem(), &EvsVolume{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvsVolumeArrayInput)(nil)).Elem(), EvsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvsVolumeMapInput)(nil)).Elem(), EvsVolumeMap{})
	pulumi.RegisterOutputType(EvsVolumeOutput{})
	pulumi.RegisterOutputType(EvsVolumeArrayOutput{})
	pulumi.RegisterOutputType(EvsVolumeMapOutput{})
}
