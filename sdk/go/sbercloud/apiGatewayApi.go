// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiGatewayApi struct {
	pulumi.CustomResourceState

	// The ID of the authorizer to which the API request used.
	AuthorizerId pulumi.StringPtrOutput `pulumi:"authorizerId"`
	// The configurations of the backend parameters.
	BackendParams ApiGatewayApiBackendParamArrayOutput `pulumi:"backendParams"`
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription pulumi.StringPtrOutput `pulumi:"bodyDescription"`
	// The content type of the request body.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// Whether CORS is supported.
	Cors pulumi.BoolPtrOutput `pulumi:"cors"`
	// The API description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The example response for a failure request.
	FailureResponse pulumi.StringPtrOutput `pulumi:"failureResponse"`
	// The FunctionGraph backend details.
	FuncGraph ApiGatewayApiFuncGraphOutput `pulumi:"funcGraph"`
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies ApiGatewayApiFuncGraphPolicyArrayOutput `pulumi:"funcGraphPolicies"`
	// The ID of the API group to which the API belongs.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The ID of the instance to which the API belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 pulumi.BoolPtrOutput `pulumi:"isSendFgBodyBase64"`
	// The matching mode of the API.
	Matching pulumi.StringPtrOutput `pulumi:"matching"`
	// The mock backend details.
	Mock ApiGatewayApiMockOutput `pulumi:"mock"`
	// The mock policy backends.
	MockPolicies ApiGatewayApiMockPolicyArrayOutput `pulumi:"mockPolicies"`
	// The API name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region where the API is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The registered time of the API.
	RegisteredAt pulumi.StringOutput `pulumi:"registeredAt"`
	// The request method of the API.
	RequestMethod pulumi.StringOutput `pulumi:"requestMethod"`
	// The configurations of the front-end parameters.
	RequestParams ApiGatewayApiRequestParamArrayOutput `pulumi:"requestParams"`
	// The request address.
	RequestPath pulumi.StringOutput `pulumi:"requestPath"`
	// The request protocol of the API request.
	RequestProtocol pulumi.StringOutput `pulumi:"requestProtocol"`
	// The ID of the custom response that API used.
	ResponseId pulumi.StringPtrOutput `pulumi:"responseId"`
	// The security authentication mode of the API request.
	SecurityAuthentication pulumi.StringPtrOutput `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication pulumi.BoolOutput `pulumi:"simpleAuthentication"`
	// The example response for a successful request.
	SuccessResponse pulumi.StringPtrOutput `pulumi:"successResponse"`
	// The list of tags configuration.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The API type.
	Type pulumi.StringOutput `pulumi:"type"`
	// The latest update time of the API.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The web backend details.
	Web ApiGatewayApiWebOutput `pulumi:"web"`
	// The web policy backends.
	WebPolicies ApiGatewayApiWebPolicyArrayOutput `pulumi:"webPolicies"`
}

// NewApiGatewayApi registers a new resource with the given unique name, arguments, and options.
func NewApiGatewayApi(ctx *pulumi.Context,
	name string, args *ApiGatewayApiArgs, opts ...pulumi.ResourceOption) (*ApiGatewayApi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.RequestMethod == nil {
		return nil, errors.New("invalid value for required argument 'RequestMethod'")
	}
	if args.RequestPath == nil {
		return nil, errors.New("invalid value for required argument 'RequestPath'")
	}
	if args.RequestProtocol == nil {
		return nil, errors.New("invalid value for required argument 'RequestProtocol'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiGatewayApi
	err := ctx.RegisterResource("sbercloud:index/apiGatewayApi:ApiGatewayApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiGatewayApi gets an existing ApiGatewayApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiGatewayApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiGatewayApiState, opts ...pulumi.ResourceOption) (*ApiGatewayApi, error) {
	var resource ApiGatewayApi
	err := ctx.ReadResource("sbercloud:index/apiGatewayApi:ApiGatewayApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiGatewayApi resources.
type apiGatewayApiState struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configurations of the backend parameters.
	BackendParams []ApiGatewayApiBackendParam `pulumi:"backendParams"`
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription *string `pulumi:"bodyDescription"`
	// The content type of the request body.
	ContentType *string `pulumi:"contentType"`
	// Whether CORS is supported.
	Cors *bool `pulumi:"cors"`
	// The API description.
	Description *string `pulumi:"description"`
	// The example response for a failure request.
	FailureResponse *string `pulumi:"failureResponse"`
	// The FunctionGraph backend details.
	FuncGraph *ApiGatewayApiFuncGraph `pulumi:"funcGraph"`
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies []ApiGatewayApiFuncGraphPolicy `pulumi:"funcGraphPolicies"`
	// The ID of the API group to which the API belongs.
	GroupId *string `pulumi:"groupId"`
	// The ID of the instance to which the API belongs.
	InstanceId *string `pulumi:"instanceId"`
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 *bool `pulumi:"isSendFgBodyBase64"`
	// The matching mode of the API.
	Matching *string `pulumi:"matching"`
	// The mock backend details.
	Mock *ApiGatewayApiMock `pulumi:"mock"`
	// The mock policy backends.
	MockPolicies []ApiGatewayApiMockPolicy `pulumi:"mockPolicies"`
	// The API name.
	Name *string `pulumi:"name"`
	// The region where the API is located.
	Region *string `pulumi:"region"`
	// The registered time of the API.
	RegisteredAt *string `pulumi:"registeredAt"`
	// The request method of the API.
	RequestMethod *string `pulumi:"requestMethod"`
	// The configurations of the front-end parameters.
	RequestParams []ApiGatewayApiRequestParam `pulumi:"requestParams"`
	// The request address.
	RequestPath *string `pulumi:"requestPath"`
	// The request protocol of the API request.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// The ID of the custom response that API used.
	ResponseId *string `pulumi:"responseId"`
	// The security authentication mode of the API request.
	SecurityAuthentication *string `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication *bool `pulumi:"simpleAuthentication"`
	// The example response for a successful request.
	SuccessResponse *string `pulumi:"successResponse"`
	// The list of tags configuration.
	Tags []string `pulumi:"tags"`
	// The API type.
	Type *string `pulumi:"type"`
	// The latest update time of the API.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The web backend details.
	Web *ApiGatewayApiWeb `pulumi:"web"`
	// The web policy backends.
	WebPolicies []ApiGatewayApiWebPolicy `pulumi:"webPolicies"`
}

type ApiGatewayApiState struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId pulumi.StringPtrInput
	// The configurations of the backend parameters.
	BackendParams ApiGatewayApiBackendParamArrayInput
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription pulumi.StringPtrInput
	// The content type of the request body.
	ContentType pulumi.StringPtrInput
	// Whether CORS is supported.
	Cors pulumi.BoolPtrInput
	// The API description.
	Description pulumi.StringPtrInput
	// The example response for a failure request.
	FailureResponse pulumi.StringPtrInput
	// The FunctionGraph backend details.
	FuncGraph ApiGatewayApiFuncGraphPtrInput
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies ApiGatewayApiFuncGraphPolicyArrayInput
	// The ID of the API group to which the API belongs.
	GroupId pulumi.StringPtrInput
	// The ID of the instance to which the API belongs.
	InstanceId pulumi.StringPtrInput
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 pulumi.BoolPtrInput
	// The matching mode of the API.
	Matching pulumi.StringPtrInput
	// The mock backend details.
	Mock ApiGatewayApiMockPtrInput
	// The mock policy backends.
	MockPolicies ApiGatewayApiMockPolicyArrayInput
	// The API name.
	Name pulumi.StringPtrInput
	// The region where the API is located.
	Region pulumi.StringPtrInput
	// The registered time of the API.
	RegisteredAt pulumi.StringPtrInput
	// The request method of the API.
	RequestMethod pulumi.StringPtrInput
	// The configurations of the front-end parameters.
	RequestParams ApiGatewayApiRequestParamArrayInput
	// The request address.
	RequestPath pulumi.StringPtrInput
	// The request protocol of the API request.
	RequestProtocol pulumi.StringPtrInput
	// The ID of the custom response that API used.
	ResponseId pulumi.StringPtrInput
	// The security authentication mode of the API request.
	SecurityAuthentication pulumi.StringPtrInput
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication pulumi.BoolPtrInput
	// The example response for a successful request.
	SuccessResponse pulumi.StringPtrInput
	// The list of tags configuration.
	Tags pulumi.StringArrayInput
	// The API type.
	Type pulumi.StringPtrInput
	// The latest update time of the API.
	UpdatedAt pulumi.StringPtrInput
	// The web backend details.
	Web ApiGatewayApiWebPtrInput
	// The web policy backends.
	WebPolicies ApiGatewayApiWebPolicyArrayInput
}

func (ApiGatewayApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayApiState)(nil)).Elem()
}

type apiGatewayApiArgs struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The configurations of the backend parameters.
	BackendParams []ApiGatewayApiBackendParam `pulumi:"backendParams"`
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription *string `pulumi:"bodyDescription"`
	// The content type of the request body.
	ContentType *string `pulumi:"contentType"`
	// Whether CORS is supported.
	Cors *bool `pulumi:"cors"`
	// The API description.
	Description *string `pulumi:"description"`
	// The example response for a failure request.
	FailureResponse *string `pulumi:"failureResponse"`
	// The FunctionGraph backend details.
	FuncGraph *ApiGatewayApiFuncGraph `pulumi:"funcGraph"`
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies []ApiGatewayApiFuncGraphPolicy `pulumi:"funcGraphPolicies"`
	// The ID of the API group to which the API belongs.
	GroupId string `pulumi:"groupId"`
	// The ID of the instance to which the API belongs.
	InstanceId string `pulumi:"instanceId"`
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 *bool `pulumi:"isSendFgBodyBase64"`
	// The matching mode of the API.
	Matching *string `pulumi:"matching"`
	// The mock backend details.
	Mock *ApiGatewayApiMock `pulumi:"mock"`
	// The mock policy backends.
	MockPolicies []ApiGatewayApiMockPolicy `pulumi:"mockPolicies"`
	// The API name.
	Name *string `pulumi:"name"`
	// The region where the API is located.
	Region *string `pulumi:"region"`
	// The request method of the API.
	RequestMethod string `pulumi:"requestMethod"`
	// The configurations of the front-end parameters.
	RequestParams []ApiGatewayApiRequestParam `pulumi:"requestParams"`
	// The request address.
	RequestPath string `pulumi:"requestPath"`
	// The request protocol of the API request.
	RequestProtocol string `pulumi:"requestProtocol"`
	// The ID of the custom response that API used.
	ResponseId *string `pulumi:"responseId"`
	// The security authentication mode of the API request.
	SecurityAuthentication *string `pulumi:"securityAuthentication"`
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication *bool `pulumi:"simpleAuthentication"`
	// The example response for a successful request.
	SuccessResponse *string `pulumi:"successResponse"`
	// The list of tags configuration.
	Tags []string `pulumi:"tags"`
	// The API type.
	Type string `pulumi:"type"`
	// The web backend details.
	Web *ApiGatewayApiWeb `pulumi:"web"`
	// The web policy backends.
	WebPolicies []ApiGatewayApiWebPolicy `pulumi:"webPolicies"`
}

// The set of arguments for constructing a ApiGatewayApi resource.
type ApiGatewayApiArgs struct {
	// The ID of the authorizer to which the API request used.
	AuthorizerId pulumi.StringPtrInput
	// The configurations of the backend parameters.
	BackendParams ApiGatewayApiBackendParamArrayInput
	// The description of the API request body, which can be an example request body, media type or parameters.
	BodyDescription pulumi.StringPtrInput
	// The content type of the request body.
	ContentType pulumi.StringPtrInput
	// Whether CORS is supported.
	Cors pulumi.BoolPtrInput
	// The API description.
	Description pulumi.StringPtrInput
	// The example response for a failure request.
	FailureResponse pulumi.StringPtrInput
	// The FunctionGraph backend details.
	FuncGraph ApiGatewayApiFuncGraphPtrInput
	// The policy backends of the FunctionGraph function.
	FuncGraphPolicies ApiGatewayApiFuncGraphPolicyArrayInput
	// The ID of the API group to which the API belongs.
	GroupId pulumi.StringInput
	// The ID of the instance to which the API belongs.
	InstanceId pulumi.StringInput
	// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
	IsSendFgBodyBase64 pulumi.BoolPtrInput
	// The matching mode of the API.
	Matching pulumi.StringPtrInput
	// The mock backend details.
	Mock ApiGatewayApiMockPtrInput
	// The mock policy backends.
	MockPolicies ApiGatewayApiMockPolicyArrayInput
	// The API name.
	Name pulumi.StringPtrInput
	// The region where the API is located.
	Region pulumi.StringPtrInput
	// The request method of the API.
	RequestMethod pulumi.StringInput
	// The configurations of the front-end parameters.
	RequestParams ApiGatewayApiRequestParamArrayInput
	// The request address.
	RequestPath pulumi.StringInput
	// The request protocol of the API request.
	RequestProtocol pulumi.StringInput
	// The ID of the custom response that API used.
	ResponseId pulumi.StringPtrInput
	// The security authentication mode of the API request.
	SecurityAuthentication pulumi.StringPtrInput
	// Whether the authentication of the application code is enabled.
	SimpleAuthentication pulumi.BoolPtrInput
	// The example response for a successful request.
	SuccessResponse pulumi.StringPtrInput
	// The list of tags configuration.
	Tags pulumi.StringArrayInput
	// The API type.
	Type pulumi.StringInput
	// The web backend details.
	Web ApiGatewayApiWebPtrInput
	// The web policy backends.
	WebPolicies ApiGatewayApiWebPolicyArrayInput
}

func (ApiGatewayApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayApiArgs)(nil)).Elem()
}

type ApiGatewayApiInput interface {
	pulumi.Input

	ToApiGatewayApiOutput() ApiGatewayApiOutput
	ToApiGatewayApiOutputWithContext(ctx context.Context) ApiGatewayApiOutput
}

func (*ApiGatewayApi) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApi)(nil)).Elem()
}

func (i *ApiGatewayApi) ToApiGatewayApiOutput() ApiGatewayApiOutput {
	return i.ToApiGatewayApiOutputWithContext(context.Background())
}

func (i *ApiGatewayApi) ToApiGatewayApiOutputWithContext(ctx context.Context) ApiGatewayApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiOutput)
}

// ApiGatewayApiArrayInput is an input type that accepts ApiGatewayApiArray and ApiGatewayApiArrayOutput values.
// You can construct a concrete instance of `ApiGatewayApiArrayInput` via:
//
//	ApiGatewayApiArray{ ApiGatewayApiArgs{...} }
type ApiGatewayApiArrayInput interface {
	pulumi.Input

	ToApiGatewayApiArrayOutput() ApiGatewayApiArrayOutput
	ToApiGatewayApiArrayOutputWithContext(context.Context) ApiGatewayApiArrayOutput
}

type ApiGatewayApiArray []ApiGatewayApiInput

func (ApiGatewayApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiGatewayApi)(nil)).Elem()
}

func (i ApiGatewayApiArray) ToApiGatewayApiArrayOutput() ApiGatewayApiArrayOutput {
	return i.ToApiGatewayApiArrayOutputWithContext(context.Background())
}

func (i ApiGatewayApiArray) ToApiGatewayApiArrayOutputWithContext(ctx context.Context) ApiGatewayApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiArrayOutput)
}

// ApiGatewayApiMapInput is an input type that accepts ApiGatewayApiMap and ApiGatewayApiMapOutput values.
// You can construct a concrete instance of `ApiGatewayApiMapInput` via:
//
//	ApiGatewayApiMap{ "key": ApiGatewayApiArgs{...} }
type ApiGatewayApiMapInput interface {
	pulumi.Input

	ToApiGatewayApiMapOutput() ApiGatewayApiMapOutput
	ToApiGatewayApiMapOutputWithContext(context.Context) ApiGatewayApiMapOutput
}

type ApiGatewayApiMap map[string]ApiGatewayApiInput

func (ApiGatewayApiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiGatewayApi)(nil)).Elem()
}

func (i ApiGatewayApiMap) ToApiGatewayApiMapOutput() ApiGatewayApiMapOutput {
	return i.ToApiGatewayApiMapOutputWithContext(context.Background())
}

func (i ApiGatewayApiMap) ToApiGatewayApiMapOutputWithContext(ctx context.Context) ApiGatewayApiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiMapOutput)
}

type ApiGatewayApiOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApi)(nil)).Elem()
}

func (o ApiGatewayApiOutput) ToApiGatewayApiOutput() ApiGatewayApiOutput {
	return o
}

func (o ApiGatewayApiOutput) ToApiGatewayApiOutputWithContext(ctx context.Context) ApiGatewayApiOutput {
	return o
}

// The ID of the authorizer to which the API request used.
func (o ApiGatewayApiOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The configurations of the backend parameters.
func (o ApiGatewayApiOutput) BackendParams() ApiGatewayApiBackendParamArrayOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiBackendParamArrayOutput { return v.BackendParams }).(ApiGatewayApiBackendParamArrayOutput)
}

// The description of the API request body, which can be an example request body, media type or parameters.
func (o ApiGatewayApiOutput) BodyDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.BodyDescription }).(pulumi.StringPtrOutput)
}

// The content type of the request body.
func (o ApiGatewayApiOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

// Whether CORS is supported.
func (o ApiGatewayApiOutput) Cors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.BoolPtrOutput { return v.Cors }).(pulumi.BoolPtrOutput)
}

// The API description.
func (o ApiGatewayApiOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The example response for a failure request.
func (o ApiGatewayApiOutput) FailureResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.FailureResponse }).(pulumi.StringPtrOutput)
}

// The FunctionGraph backend details.
func (o ApiGatewayApiOutput) FuncGraph() ApiGatewayApiFuncGraphOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiFuncGraphOutput { return v.FuncGraph }).(ApiGatewayApiFuncGraphOutput)
}

// The policy backends of the FunctionGraph function.
func (o ApiGatewayApiOutput) FuncGraphPolicies() ApiGatewayApiFuncGraphPolicyArrayOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiFuncGraphPolicyArrayOutput { return v.FuncGraphPolicies }).(ApiGatewayApiFuncGraphPolicyArrayOutput)
}

// The ID of the API group to which the API belongs.
func (o ApiGatewayApiOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the instance to which the API belongs.
func (o ApiGatewayApiOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
func (o ApiGatewayApiOutput) IsSendFgBodyBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.BoolPtrOutput { return v.IsSendFgBodyBase64 }).(pulumi.BoolPtrOutput)
}

// The matching mode of the API.
func (o ApiGatewayApiOutput) Matching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.Matching }).(pulumi.StringPtrOutput)
}

// The mock backend details.
func (o ApiGatewayApiOutput) Mock() ApiGatewayApiMockOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiMockOutput { return v.Mock }).(ApiGatewayApiMockOutput)
}

// The mock policy backends.
func (o ApiGatewayApiOutput) MockPolicies() ApiGatewayApiMockPolicyArrayOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiMockPolicyArrayOutput { return v.MockPolicies }).(ApiGatewayApiMockPolicyArrayOutput)
}

// The API name.
func (o ApiGatewayApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region where the API is located.
func (o ApiGatewayApiOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The registered time of the API.
func (o ApiGatewayApiOutput) RegisteredAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.RegisteredAt }).(pulumi.StringOutput)
}

// The request method of the API.
func (o ApiGatewayApiOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.RequestMethod }).(pulumi.StringOutput)
}

// The configurations of the front-end parameters.
func (o ApiGatewayApiOutput) RequestParams() ApiGatewayApiRequestParamArrayOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiRequestParamArrayOutput { return v.RequestParams }).(ApiGatewayApiRequestParamArrayOutput)
}

// The request address.
func (o ApiGatewayApiOutput) RequestPath() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.RequestPath }).(pulumi.StringOutput)
}

// The request protocol of the API request.
func (o ApiGatewayApiOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.RequestProtocol }).(pulumi.StringOutput)
}

// The ID of the custom response that API used.
func (o ApiGatewayApiOutput) ResponseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.ResponseId }).(pulumi.StringPtrOutput)
}

// The security authentication mode of the API request.
func (o ApiGatewayApiOutput) SecurityAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.SecurityAuthentication }).(pulumi.StringPtrOutput)
}

// Whether the authentication of the application code is enabled.
func (o ApiGatewayApiOutput) SimpleAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.BoolOutput { return v.SimpleAuthentication }).(pulumi.BoolOutput)
}

// The example response for a successful request.
func (o ApiGatewayApiOutput) SuccessResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringPtrOutput { return v.SuccessResponse }).(pulumi.StringPtrOutput)
}

// The list of tags configuration.
func (o ApiGatewayApiOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The API type.
func (o ApiGatewayApiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the API.
func (o ApiGatewayApiOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApi) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The web backend details.
func (o ApiGatewayApiOutput) Web() ApiGatewayApiWebOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiWebOutput { return v.Web }).(ApiGatewayApiWebOutput)
}

// The web policy backends.
func (o ApiGatewayApiOutput) WebPolicies() ApiGatewayApiWebPolicyArrayOutput {
	return o.ApplyT(func(v *ApiGatewayApi) ApiGatewayApiWebPolicyArrayOutput { return v.WebPolicies }).(ApiGatewayApiWebPolicyArrayOutput)
}

type ApiGatewayApiArrayOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiGatewayApi)(nil)).Elem()
}

func (o ApiGatewayApiArrayOutput) ToApiGatewayApiArrayOutput() ApiGatewayApiArrayOutput {
	return o
}

func (o ApiGatewayApiArrayOutput) ToApiGatewayApiArrayOutputWithContext(ctx context.Context) ApiGatewayApiArrayOutput {
	return o
}

func (o ApiGatewayApiArrayOutput) Index(i pulumi.IntInput) ApiGatewayApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiGatewayApi {
		return vs[0].([]*ApiGatewayApi)[vs[1].(int)]
	}).(ApiGatewayApiOutput)
}

type ApiGatewayApiMapOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiGatewayApi)(nil)).Elem()
}

func (o ApiGatewayApiMapOutput) ToApiGatewayApiMapOutput() ApiGatewayApiMapOutput {
	return o
}

func (o ApiGatewayApiMapOutput) ToApiGatewayApiMapOutputWithContext(ctx context.Context) ApiGatewayApiMapOutput {
	return o
}

func (o ApiGatewayApiMapOutput) MapIndex(k pulumi.StringInput) ApiGatewayApiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiGatewayApi {
		return vs[0].(map[string]*ApiGatewayApi)[vs[1].(string)]
	}).(ApiGatewayApiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiInput)(nil)).Elem(), &ApiGatewayApi{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiArrayInput)(nil)).Elem(), ApiGatewayApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiMapInput)(nil)).Elem(), ApiGatewayApiMap{})
	pulumi.RegisterOutputType(ApiGatewayApiOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiArrayOutput{})
	pulumi.RegisterOutputType(ApiGatewayApiMapOutput{})
}
