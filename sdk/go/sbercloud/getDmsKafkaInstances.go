// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDmsKafkaInstances(ctx *pulumi.Context, args *GetDmsKafkaInstancesArgs, opts ...pulumi.InvokeOption) (*GetDmsKafkaInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsKafkaInstancesResult
	err := ctx.Invoke("sbercloud:index/getDmsKafkaInstances:getDmsKafkaInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsKafkaInstances.
type GetDmsKafkaInstancesArgs struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	FuzzyMatch          *bool   `pulumi:"fuzzyMatch"`
	IncludeFailure      *bool   `pulumi:"includeFailure"`
	InstanceId          *string `pulumi:"instanceId"`
	Name                *string `pulumi:"name"`
	Region              *string `pulumi:"region"`
	Status              *string `pulumi:"status"`
}

// A collection of values returned by getDmsKafkaInstances.
type GetDmsKafkaInstancesResult struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	FuzzyMatch          *bool   `pulumi:"fuzzyMatch"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                         `pulumi:"id"`
	IncludeFailure *bool                          `pulumi:"includeFailure"`
	InstanceId     *string                        `pulumi:"instanceId"`
	Instances      []GetDmsKafkaInstancesInstance `pulumi:"instances"`
	Name           *string                        `pulumi:"name"`
	Region         *string                        `pulumi:"region"`
	Status         *string                        `pulumi:"status"`
}

func GetDmsKafkaInstancesOutput(ctx *pulumi.Context, args GetDmsKafkaInstancesOutputArgs, opts ...pulumi.InvokeOption) GetDmsKafkaInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsKafkaInstancesResultOutput, error) {
			args := v.(GetDmsKafkaInstancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getDmsKafkaInstances:getDmsKafkaInstances", args, GetDmsKafkaInstancesResultOutput{}, options).(GetDmsKafkaInstancesResultOutput), nil
		}).(GetDmsKafkaInstancesResultOutput)
}

// A collection of arguments for invoking getDmsKafkaInstances.
type GetDmsKafkaInstancesOutputArgs struct {
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	FuzzyMatch          pulumi.BoolPtrInput   `pulumi:"fuzzyMatch"`
	IncludeFailure      pulumi.BoolPtrInput   `pulumi:"includeFailure"`
	InstanceId          pulumi.StringPtrInput `pulumi:"instanceId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	Status              pulumi.StringPtrInput `pulumi:"status"`
}

func (GetDmsKafkaInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getDmsKafkaInstances.
type GetDmsKafkaInstancesResultOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaInstancesResult)(nil)).Elem()
}

func (o GetDmsKafkaInstancesResultOutput) ToGetDmsKafkaInstancesResultOutput() GetDmsKafkaInstancesResultOutput {
	return o
}

func (o GetDmsKafkaInstancesResultOutput) ToGetDmsKafkaInstancesResultOutputWithContext(ctx context.Context) GetDmsKafkaInstancesResultOutput {
	return o
}

func (o GetDmsKafkaInstancesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaInstancesResultOutput) FuzzyMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) *bool { return v.FuzzyMatch }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsKafkaInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsKafkaInstancesResultOutput) IncludeFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) *bool { return v.IncludeFailure }).(pulumi.BoolPtrOutput)
}

func (o GetDmsKafkaInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaInstancesResultOutput) Instances() GetDmsKafkaInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) []GetDmsKafkaInstancesInstance { return v.Instances }).(GetDmsKafkaInstancesInstanceArrayOutput)
}

func (o GetDmsKafkaInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaInstancesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaInstancesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaInstancesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsKafkaInstancesResultOutput{})
}
