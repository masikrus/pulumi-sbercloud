// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSfsTurbos(ctx *pulumi.Context, args *GetSfsTurbosArgs, opts ...pulumi.InvokeOption) (*GetSfsTurbosResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSfsTurbosResult
	err := ctx.Invoke("sbercloud:index/getSfsTurbos:getSfsTurbos", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSfsTurbos.
type GetSfsTurbosArgs struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	Name                *string `pulumi:"name"`
	Region              *string `pulumi:"region"`
	ShareProto          *string `pulumi:"shareProto"`
	ShareType           *string `pulumi:"shareType"`
	Size                *int    `pulumi:"size"`
}

// A collection of values returned by getSfsTurbos.
type GetSfsTurbosResult struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string              `pulumi:"id"`
	Name       *string             `pulumi:"name"`
	Region     *string             `pulumi:"region"`
	ShareProto *string             `pulumi:"shareProto"`
	ShareType  *string             `pulumi:"shareType"`
	Size       *int                `pulumi:"size"`
	Turbos     []GetSfsTurbosTurbo `pulumi:"turbos"`
}

func GetSfsTurbosOutput(ctx *pulumi.Context, args GetSfsTurbosOutputArgs, opts ...pulumi.InvokeOption) GetSfsTurbosResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSfsTurbosResultOutput, error) {
			args := v.(GetSfsTurbosArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getSfsTurbos:getSfsTurbos", args, GetSfsTurbosResultOutput{}, options).(GetSfsTurbosResultOutput), nil
		}).(GetSfsTurbosResultOutput)
}

// A collection of arguments for invoking getSfsTurbos.
type GetSfsTurbosOutputArgs struct {
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	ShareProto          pulumi.StringPtrInput `pulumi:"shareProto"`
	ShareType           pulumi.StringPtrInput `pulumi:"shareType"`
	Size                pulumi.IntPtrInput    `pulumi:"size"`
}

func (GetSfsTurbosOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurbosArgs)(nil)).Elem()
}

// A collection of values returned by getSfsTurbos.
type GetSfsTurbosResultOutput struct{ *pulumi.OutputState }

func (GetSfsTurbosResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurbosResult)(nil)).Elem()
}

func (o GetSfsTurbosResultOutput) ToGetSfsTurbosResultOutput() GetSfsTurbosResultOutput {
	return o
}

func (o GetSfsTurbosResultOutput) ToGetSfsTurbosResultOutputWithContext(ctx context.Context) GetSfsTurbosResultOutput {
	return o
}

func (o GetSfsTurbosResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSfsTurbosResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSfsTurbosResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetSfsTurbosResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetSfsTurbosResultOutput) ShareProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) *string { return v.ShareProto }).(pulumi.StringPtrOutput)
}

func (o GetSfsTurbosResultOutput) ShareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) *string { return v.ShareType }).(pulumi.StringPtrOutput)
}

func (o GetSfsTurbosResultOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o GetSfsTurbosResultOutput) Turbos() GetSfsTurbosTurboArrayOutput {
	return o.ApplyT(func(v GetSfsTurbosResult) []GetSfsTurbosTurbo { return v.Turbos }).(GetSfsTurbosTurboArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSfsTurbosResultOutput{})
}
