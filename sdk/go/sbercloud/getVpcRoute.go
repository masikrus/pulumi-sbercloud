// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVpcRoute(ctx *pulumi.Context, args *LookupVpcRouteArgs, opts ...pulumi.InvokeOption) (*LookupVpcRouteResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcRouteResult
	err := ctx.Invoke("sbercloud:index/getVpcRoute:getVpcRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcRoute.
type LookupVpcRouteArgs struct {
	Destination *string `pulumi:"destination"`
	Id          *string `pulumi:"id"`
	Region      *string `pulumi:"region"`
	TenantId    *string `pulumi:"tenantId"`
	Type        *string `pulumi:"type"`
	VpcId       *string `pulumi:"vpcId"`
}

// A collection of values returned by getVpcRoute.
type LookupVpcRouteResult struct {
	Destination string `pulumi:"destination"`
	Id          string `pulumi:"id"`
	Nexthop     string `pulumi:"nexthop"`
	Region      string `pulumi:"region"`
	TenantId    string `pulumi:"tenantId"`
	Type        string `pulumi:"type"`
	VpcId       string `pulumi:"vpcId"`
}

func LookupVpcRouteOutput(ctx *pulumi.Context, args LookupVpcRouteOutputArgs, opts ...pulumi.InvokeOption) LookupVpcRouteResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcRouteResultOutput, error) {
			args := v.(LookupVpcRouteArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpcRoute:getVpcRoute", args, LookupVpcRouteResultOutput{}, options).(LookupVpcRouteResultOutput), nil
		}).(LookupVpcRouteResultOutput)
}

// A collection of arguments for invoking getVpcRoute.
type LookupVpcRouteOutputArgs struct {
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Region      pulumi.StringPtrInput `pulumi:"region"`
	TenantId    pulumi.StringPtrInput `pulumi:"tenantId"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
	VpcId       pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (LookupVpcRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcRouteArgs)(nil)).Elem()
}

// A collection of values returned by getVpcRoute.
type LookupVpcRouteResultOutput struct{ *pulumi.OutputState }

func (LookupVpcRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcRouteResult)(nil)).Elem()
}

func (o LookupVpcRouteResultOutput) ToLookupVpcRouteResultOutput() LookupVpcRouteResultOutput {
	return o
}

func (o LookupVpcRouteResultOutput) ToLookupVpcRouteResultOutputWithContext(ctx context.Context) LookupVpcRouteResultOutput {
	return o
}

func (o LookupVpcRouteResultOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteResult) string { return v.Destination }).(pulumi.StringOutput)
}

func (o LookupVpcRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpcRouteResultOutput) Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteResult) string { return v.Nexthop }).(pulumi.StringOutput)
}

func (o LookupVpcRouteResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupVpcRouteResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o LookupVpcRouteResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupVpcRouteResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcRouteResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcRouteResultOutput{})
}
