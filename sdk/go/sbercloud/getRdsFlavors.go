// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRdsFlavors(ctx *pulumi.Context, args *GetRdsFlavorsArgs, opts ...pulumi.InvokeOption) (*GetRdsFlavorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRdsFlavorsResult
	err := ctx.Invoke("sbercloud:index/getRdsFlavors:getRdsFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRdsFlavors.
type GetRdsFlavorsArgs struct {
	AvailabilityZone *string `pulumi:"availabilityZone"`
	DbType           string  `pulumi:"dbType"`
	DbVersion        *string `pulumi:"dbVersion"`
	GroupType        *string `pulumi:"groupType"`
	InstanceMode     *string `pulumi:"instanceMode"`
	Memory           *int    `pulumi:"memory"`
	Region           *string `pulumi:"region"`
	Vcpus            *int    `pulumi:"vcpus"`
}

// A collection of values returned by getRdsFlavors.
type GetRdsFlavorsResult struct {
	AvailabilityZone *string               `pulumi:"availabilityZone"`
	DbType           string                `pulumi:"dbType"`
	DbVersion        *string               `pulumi:"dbVersion"`
	Flavors          []GetRdsFlavorsFlavor `pulumi:"flavors"`
	GroupType        *string               `pulumi:"groupType"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	InstanceMode *string `pulumi:"instanceMode"`
	Memory       *int    `pulumi:"memory"`
	Region       string  `pulumi:"region"`
	Vcpus        *int    `pulumi:"vcpus"`
}

func GetRdsFlavorsOutput(ctx *pulumi.Context, args GetRdsFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetRdsFlavorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRdsFlavorsResultOutput, error) {
			args := v.(GetRdsFlavorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getRdsFlavors:getRdsFlavors", args, GetRdsFlavorsResultOutput{}, options).(GetRdsFlavorsResultOutput), nil
		}).(GetRdsFlavorsResultOutput)
}

// A collection of arguments for invoking getRdsFlavors.
type GetRdsFlavorsOutputArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	DbType           pulumi.StringInput    `pulumi:"dbType"`
	DbVersion        pulumi.StringPtrInput `pulumi:"dbVersion"`
	GroupType        pulumi.StringPtrInput `pulumi:"groupType"`
	InstanceMode     pulumi.StringPtrInput `pulumi:"instanceMode"`
	Memory           pulumi.IntPtrInput    `pulumi:"memory"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	Vcpus            pulumi.IntPtrInput    `pulumi:"vcpus"`
}

func (GetRdsFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getRdsFlavors.
type GetRdsFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetRdsFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsFlavorsResult)(nil)).Elem()
}

func (o GetRdsFlavorsResultOutput) ToGetRdsFlavorsResultOutput() GetRdsFlavorsResultOutput {
	return o
}

func (o GetRdsFlavorsResultOutput) ToGetRdsFlavorsResultOutputWithContext(ctx context.Context) GetRdsFlavorsResultOutput {
	return o
}

func (o GetRdsFlavorsResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetRdsFlavorsResultOutput) DbType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) string { return v.DbType }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsResultOutput) DbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) *string { return v.DbVersion }).(pulumi.StringPtrOutput)
}

func (o GetRdsFlavorsResultOutput) Flavors() GetRdsFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) []GetRdsFlavorsFlavor { return v.Flavors }).(GetRdsFlavorsFlavorArrayOutput)
}

func (o GetRdsFlavorsResultOutput) GroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) *string { return v.GroupType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRdsFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsResultOutput) InstanceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) *string { return v.InstanceMode }).(pulumi.StringPtrOutput)
}

func (o GetRdsFlavorsResultOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o GetRdsFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRdsFlavorsResultOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRdsFlavorsResult) *int { return v.Vcpus }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRdsFlavorsResultOutput{})
}
