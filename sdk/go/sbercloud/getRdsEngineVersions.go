// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRdsEngineVersions(ctx *pulumi.Context, args *GetRdsEngineVersionsArgs, opts ...pulumi.InvokeOption) (*GetRdsEngineVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRdsEngineVersionsResult
	err := ctx.Invoke("sbercloud:index/getRdsEngineVersions:getRdsEngineVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRdsEngineVersions.
type GetRdsEngineVersionsArgs struct {
	Region *string `pulumi:"region"`
	Type   *string `pulumi:"type"`
}

// A collection of values returned by getRdsEngineVersions.
type GetRdsEngineVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string                        `pulumi:"id"`
	Region   *string                       `pulumi:"region"`
	Type     *string                       `pulumi:"type"`
	Versions []GetRdsEngineVersionsVersion `pulumi:"versions"`
}

func GetRdsEngineVersionsOutput(ctx *pulumi.Context, args GetRdsEngineVersionsOutputArgs, opts ...pulumi.InvokeOption) GetRdsEngineVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRdsEngineVersionsResultOutput, error) {
			args := v.(GetRdsEngineVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getRdsEngineVersions:getRdsEngineVersions", args, GetRdsEngineVersionsResultOutput{}, options).(GetRdsEngineVersionsResultOutput), nil
		}).(GetRdsEngineVersionsResultOutput)
}

// A collection of arguments for invoking getRdsEngineVersions.
type GetRdsEngineVersionsOutputArgs struct {
	Region pulumi.StringPtrInput `pulumi:"region"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (GetRdsEngineVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsEngineVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getRdsEngineVersions.
type GetRdsEngineVersionsResultOutput struct{ *pulumi.OutputState }

func (GetRdsEngineVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsEngineVersionsResult)(nil)).Elem()
}

func (o GetRdsEngineVersionsResultOutput) ToGetRdsEngineVersionsResultOutput() GetRdsEngineVersionsResultOutput {
	return o
}

func (o GetRdsEngineVersionsResultOutput) ToGetRdsEngineVersionsResultOutputWithContext(ctx context.Context) GetRdsEngineVersionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRdsEngineVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsEngineVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsEngineVersionsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsEngineVersionsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetRdsEngineVersionsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsEngineVersionsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetRdsEngineVersionsResultOutput) Versions() GetRdsEngineVersionsVersionArrayOutput {
	return o.ApplyT(func(v GetRdsEngineVersionsResult) []GetRdsEngineVersionsVersion { return v.Versions }).(GetRdsEngineVersionsVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRdsEngineVersionsResultOutput{})
}
