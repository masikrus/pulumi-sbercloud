// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RdsPgAccount struct {
	pulumi.CustomResourceState

	// Indicates the permission attributes of the account.
	Attributes RdsPgAccountAttributeArrayOutput `pulumi:"attributes"`
	// Specifies the remarks of the DB account.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// schema: Deprecated
	Memberofs pulumi.StringArrayOutput `pulumi:"memberofs"`
	// Specifies the username of the DB account.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the password of the DB account.
	Password pulumi.StringOutput `pulumi:"password"`
	Region   pulumi.StringOutput `pulumi:"region"`
}

// NewRdsPgAccount registers a new resource with the given unique name, arguments, and options.
func NewRdsPgAccount(ctx *pulumi.Context,
	name string, args *RdsPgAccountArgs, opts ...pulumi.ResourceOption) (*RdsPgAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdsPgAccount
	err := ctx.RegisterResource("sbercloud:index/rdsPgAccount:RdsPgAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsPgAccount gets an existing RdsPgAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsPgAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsPgAccountState, opts ...pulumi.ResourceOption) (*RdsPgAccount, error) {
	var resource RdsPgAccount
	err := ctx.ReadResource("sbercloud:index/rdsPgAccount:RdsPgAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsPgAccount resources.
type rdsPgAccountState struct {
	// Indicates the permission attributes of the account.
	Attributes []RdsPgAccountAttribute `pulumi:"attributes"`
	// Specifies the remarks of the DB account.
	Description *string `pulumi:"description"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId *string `pulumi:"instanceId"`
	// schema: Deprecated
	Memberofs []string `pulumi:"memberofs"`
	// Specifies the username of the DB account.
	Name *string `pulumi:"name"`
	// Specifies the password of the DB account.
	Password *string `pulumi:"password"`
	Region   *string `pulumi:"region"`
}

type RdsPgAccountState struct {
	// Indicates the permission attributes of the account.
	Attributes RdsPgAccountAttributeArrayInput
	// Specifies the remarks of the DB account.
	Description pulumi.StringPtrInput
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringPtrInput
	// schema: Deprecated
	Memberofs pulumi.StringArrayInput
	// Specifies the username of the DB account.
	Name pulumi.StringPtrInput
	// Specifies the password of the DB account.
	Password pulumi.StringPtrInput
	Region   pulumi.StringPtrInput
}

func (RdsPgAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsPgAccountState)(nil)).Elem()
}

type rdsPgAccountArgs struct {
	// Specifies the remarks of the DB account.
	Description *string `pulumi:"description"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId string `pulumi:"instanceId"`
	// schema: Deprecated
	Memberofs []string `pulumi:"memberofs"`
	// Specifies the username of the DB account.
	Name *string `pulumi:"name"`
	// Specifies the password of the DB account.
	Password string  `pulumi:"password"`
	Region   *string `pulumi:"region"`
}

// The set of arguments for constructing a RdsPgAccount resource.
type RdsPgAccountArgs struct {
	// Specifies the remarks of the DB account.
	Description pulumi.StringPtrInput
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringInput
	// schema: Deprecated
	Memberofs pulumi.StringArrayInput
	// Specifies the username of the DB account.
	Name pulumi.StringPtrInput
	// Specifies the password of the DB account.
	Password pulumi.StringInput
	Region   pulumi.StringPtrInput
}

func (RdsPgAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsPgAccountArgs)(nil)).Elem()
}

type RdsPgAccountInput interface {
	pulumi.Input

	ToRdsPgAccountOutput() RdsPgAccountOutput
	ToRdsPgAccountOutputWithContext(ctx context.Context) RdsPgAccountOutput
}

func (*RdsPgAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsPgAccount)(nil)).Elem()
}

func (i *RdsPgAccount) ToRdsPgAccountOutput() RdsPgAccountOutput {
	return i.ToRdsPgAccountOutputWithContext(context.Background())
}

func (i *RdsPgAccount) ToRdsPgAccountOutputWithContext(ctx context.Context) RdsPgAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountOutput)
}

// RdsPgAccountArrayInput is an input type that accepts RdsPgAccountArray and RdsPgAccountArrayOutput values.
// You can construct a concrete instance of `RdsPgAccountArrayInput` via:
//
//	RdsPgAccountArray{ RdsPgAccountArgs{...} }
type RdsPgAccountArrayInput interface {
	pulumi.Input

	ToRdsPgAccountArrayOutput() RdsPgAccountArrayOutput
	ToRdsPgAccountArrayOutputWithContext(context.Context) RdsPgAccountArrayOutput
}

type RdsPgAccountArray []RdsPgAccountInput

func (RdsPgAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsPgAccount)(nil)).Elem()
}

func (i RdsPgAccountArray) ToRdsPgAccountArrayOutput() RdsPgAccountArrayOutput {
	return i.ToRdsPgAccountArrayOutputWithContext(context.Background())
}

func (i RdsPgAccountArray) ToRdsPgAccountArrayOutputWithContext(ctx context.Context) RdsPgAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountArrayOutput)
}

// RdsPgAccountMapInput is an input type that accepts RdsPgAccountMap and RdsPgAccountMapOutput values.
// You can construct a concrete instance of `RdsPgAccountMapInput` via:
//
//	RdsPgAccountMap{ "key": RdsPgAccountArgs{...} }
type RdsPgAccountMapInput interface {
	pulumi.Input

	ToRdsPgAccountMapOutput() RdsPgAccountMapOutput
	ToRdsPgAccountMapOutputWithContext(context.Context) RdsPgAccountMapOutput
}

type RdsPgAccountMap map[string]RdsPgAccountInput

func (RdsPgAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsPgAccount)(nil)).Elem()
}

func (i RdsPgAccountMap) ToRdsPgAccountMapOutput() RdsPgAccountMapOutput {
	return i.ToRdsPgAccountMapOutputWithContext(context.Background())
}

func (i RdsPgAccountMap) ToRdsPgAccountMapOutputWithContext(ctx context.Context) RdsPgAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsPgAccountMapOutput)
}

type RdsPgAccountOutput struct{ *pulumi.OutputState }

func (RdsPgAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsPgAccount)(nil)).Elem()
}

func (o RdsPgAccountOutput) ToRdsPgAccountOutput() RdsPgAccountOutput {
	return o
}

func (o RdsPgAccountOutput) ToRdsPgAccountOutputWithContext(ctx context.Context) RdsPgAccountOutput {
	return o
}

// Indicates the permission attributes of the account.
func (o RdsPgAccountOutput) Attributes() RdsPgAccountAttributeArrayOutput {
	return o.ApplyT(func(v *RdsPgAccount) RdsPgAccountAttributeArrayOutput { return v.Attributes }).(RdsPgAccountAttributeArrayOutput)
}

// Specifies the remarks of the DB account.
func (o RdsPgAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsPgAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the RDS PostgreSQL instance.
func (o RdsPgAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgAccount) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o RdsPgAccountOutput) Memberofs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RdsPgAccount) pulumi.StringArrayOutput { return v.Memberofs }).(pulumi.StringArrayOutput)
}

// Specifies the username of the DB account.
func (o RdsPgAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the password of the DB account.
func (o RdsPgAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgAccount) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

func (o RdsPgAccountOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsPgAccount) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type RdsPgAccountArrayOutput struct{ *pulumi.OutputState }

func (RdsPgAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsPgAccount)(nil)).Elem()
}

func (o RdsPgAccountArrayOutput) ToRdsPgAccountArrayOutput() RdsPgAccountArrayOutput {
	return o
}

func (o RdsPgAccountArrayOutput) ToRdsPgAccountArrayOutputWithContext(ctx context.Context) RdsPgAccountArrayOutput {
	return o
}

func (o RdsPgAccountArrayOutput) Index(i pulumi.IntInput) RdsPgAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdsPgAccount {
		return vs[0].([]*RdsPgAccount)[vs[1].(int)]
	}).(RdsPgAccountOutput)
}

type RdsPgAccountMapOutput struct{ *pulumi.OutputState }

func (RdsPgAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsPgAccount)(nil)).Elem()
}

func (o RdsPgAccountMapOutput) ToRdsPgAccountMapOutput() RdsPgAccountMapOutput {
	return o
}

func (o RdsPgAccountMapOutput) ToRdsPgAccountMapOutputWithContext(ctx context.Context) RdsPgAccountMapOutput {
	return o
}

func (o RdsPgAccountMapOutput) MapIndex(k pulumi.StringInput) RdsPgAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdsPgAccount {
		return vs[0].(map[string]*RdsPgAccount)[vs[1].(string)]
	}).(RdsPgAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountInput)(nil)).Elem(), &RdsPgAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountArrayInput)(nil)).Elem(), RdsPgAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsPgAccountMapInput)(nil)).Elem(), RdsPgAccountMap{})
	pulumi.RegisterOutputType(RdsPgAccountOutput{})
	pulumi.RegisterOutputType(RdsPgAccountArrayOutput{})
	pulumi.RegisterOutputType(RdsPgAccountMapOutput{})
}
