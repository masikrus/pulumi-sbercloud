// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetVpcRoutes(ctx *pulumi.Context, args *GetVpcRoutesArgs, opts ...pulumi.InvokeOption) (*GetVpcRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcRoutesResult
	err := ctx.Invoke("sbercloud:index/getVpcRoutes:getVpcRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcRoutes.
type GetVpcRoutesArgs struct {
	Destination *string `pulumi:"destination"`
	Region      *string `pulumi:"region"`
	Type        *string `pulumi:"type"`
	VpcId       *string `pulumi:"vpcId"`
}

// A collection of values returned by getVpcRoutes.
type GetVpcRoutesResult struct {
	Destination *string `pulumi:"destination"`
	// The provider-assigned unique ID for this managed resource.
	Id     string              `pulumi:"id"`
	Region string              `pulumi:"region"`
	Routes []GetVpcRoutesRoute `pulumi:"routes"`
	Type   *string             `pulumi:"type"`
	VpcId  *string             `pulumi:"vpcId"`
}

func GetVpcRoutesOutput(ctx *pulumi.Context, args GetVpcRoutesOutputArgs, opts ...pulumi.InvokeOption) GetVpcRoutesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVpcRoutesResultOutput, error) {
			args := v.(GetVpcRoutesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpcRoutes:getVpcRoutes", args, GetVpcRoutesResultOutput{}, options).(GetVpcRoutesResultOutput), nil
		}).(GetVpcRoutesResultOutput)
}

// A collection of arguments for invoking getVpcRoutes.
type GetVpcRoutesOutputArgs struct {
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	Region      pulumi.StringPtrInput `pulumi:"region"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
	VpcId       pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetVpcRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getVpcRoutes.
type GetVpcRoutesResultOutput struct{ *pulumi.OutputState }

func (GetVpcRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcRoutesResult)(nil)).Elem()
}

func (o GetVpcRoutesResultOutput) ToGetVpcRoutesResultOutput() GetVpcRoutesResultOutput {
	return o
}

func (o GetVpcRoutesResultOutput) ToGetVpcRoutesResultOutputWithContext(ctx context.Context) GetVpcRoutesResultOutput {
	return o
}

func (o GetVpcRoutesResultOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcRoutesResult) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpcRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcRoutesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcRoutesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetVpcRoutesResultOutput) Routes() GetVpcRoutesRouteArrayOutput {
	return o.ApplyT(func(v GetVpcRoutesResult) []GetVpcRoutesRoute { return v.Routes }).(GetVpcRoutesRouteArrayOutput)
}

func (o GetVpcRoutesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcRoutesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetVpcRoutesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcRoutesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcRoutesResultOutput{})
}
