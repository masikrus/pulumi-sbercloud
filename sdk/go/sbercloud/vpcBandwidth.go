// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcBandwidth struct {
	pulumi.CustomResourceState

	AutoRenew           pulumi.StringPtrOutput          `pulumi:"autoRenew"`
	BandwidthType       pulumi.StringOutput             `pulumi:"bandwidthType"`
	ChargeMode          pulumi.StringOutput             `pulumi:"chargeMode"`
	ChargingMode        pulumi.StringOutput             `pulumi:"chargingMode"`
	CreatedAt           pulumi.StringOutput             `pulumi:"createdAt"`
	EnterpriseProjectId pulumi.StringOutput             `pulumi:"enterpriseProjectId"`
	Name                pulumi.StringOutput             `pulumi:"name"`
	Period              pulumi.IntPtrOutput             `pulumi:"period"`
	PeriodUnit          pulumi.StringPtrOutput          `pulumi:"periodUnit"`
	PublicBorderGroup   pulumi.StringOutput             `pulumi:"publicBorderGroup"`
	Publicips           VpcBandwidthPublicipArrayOutput `pulumi:"publicips"`
	Region              pulumi.StringOutput             `pulumi:"region"`
	ShareType           pulumi.StringOutput             `pulumi:"shareType"`
	Size                pulumi.IntOutput                `pulumi:"size"`
	Status              pulumi.StringOutput             `pulumi:"status"`
	UpdatedAt           pulumi.StringOutput             `pulumi:"updatedAt"`
}

// NewVpcBandwidth registers a new resource with the given unique name, arguments, and options.
func NewVpcBandwidth(ctx *pulumi.Context,
	name string, args *VpcBandwidthArgs, opts ...pulumi.ResourceOption) (*VpcBandwidth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Size == nil {
		return nil, errors.New("invalid value for required argument 'Size'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcBandwidth
	err := ctx.RegisterResource("sbercloud:index/vpcBandwidth:VpcBandwidth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcBandwidth gets an existing VpcBandwidth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcBandwidth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcBandwidthState, opts ...pulumi.ResourceOption) (*VpcBandwidth, error) {
	var resource VpcBandwidth
	err := ctx.ReadResource("sbercloud:index/vpcBandwidth:VpcBandwidth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcBandwidth resources.
type vpcBandwidthState struct {
	AutoRenew           *string                `pulumi:"autoRenew"`
	BandwidthType       *string                `pulumi:"bandwidthType"`
	ChargeMode          *string                `pulumi:"chargeMode"`
	ChargingMode        *string                `pulumi:"chargingMode"`
	CreatedAt           *string                `pulumi:"createdAt"`
	EnterpriseProjectId *string                `pulumi:"enterpriseProjectId"`
	Name                *string                `pulumi:"name"`
	Period              *int                   `pulumi:"period"`
	PeriodUnit          *string                `pulumi:"periodUnit"`
	PublicBorderGroup   *string                `pulumi:"publicBorderGroup"`
	Publicips           []VpcBandwidthPublicip `pulumi:"publicips"`
	Region              *string                `pulumi:"region"`
	ShareType           *string                `pulumi:"shareType"`
	Size                *int                   `pulumi:"size"`
	Status              *string                `pulumi:"status"`
	UpdatedAt           *string                `pulumi:"updatedAt"`
}

type VpcBandwidthState struct {
	AutoRenew           pulumi.StringPtrInput
	BandwidthType       pulumi.StringPtrInput
	ChargeMode          pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	CreatedAt           pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PublicBorderGroup   pulumi.StringPtrInput
	Publicips           VpcBandwidthPublicipArrayInput
	Region              pulumi.StringPtrInput
	ShareType           pulumi.StringPtrInput
	Size                pulumi.IntPtrInput
	Status              pulumi.StringPtrInput
	UpdatedAt           pulumi.StringPtrInput
}

func (VpcBandwidthState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcBandwidthState)(nil)).Elem()
}

type vpcBandwidthArgs struct {
	AutoRenew           *string `pulumi:"autoRenew"`
	BandwidthType       *string `pulumi:"bandwidthType"`
	ChargeMode          *string `pulumi:"chargeMode"`
	ChargingMode        *string `pulumi:"chargingMode"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	Name                *string `pulumi:"name"`
	Period              *int    `pulumi:"period"`
	PeriodUnit          *string `pulumi:"periodUnit"`
	PublicBorderGroup   *string `pulumi:"publicBorderGroup"`
	Region              *string `pulumi:"region"`
	Size                int     `pulumi:"size"`
}

// The set of arguments for constructing a VpcBandwidth resource.
type VpcBandwidthArgs struct {
	AutoRenew           pulumi.StringPtrInput
	BandwidthType       pulumi.StringPtrInput
	ChargeMode          pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PublicBorderGroup   pulumi.StringPtrInput
	Region              pulumi.StringPtrInput
	Size                pulumi.IntInput
}

func (VpcBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcBandwidthArgs)(nil)).Elem()
}

type VpcBandwidthInput interface {
	pulumi.Input

	ToVpcBandwidthOutput() VpcBandwidthOutput
	ToVpcBandwidthOutputWithContext(ctx context.Context) VpcBandwidthOutput
}

func (*VpcBandwidth) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcBandwidth)(nil)).Elem()
}

func (i *VpcBandwidth) ToVpcBandwidthOutput() VpcBandwidthOutput {
	return i.ToVpcBandwidthOutputWithContext(context.Background())
}

func (i *VpcBandwidth) ToVpcBandwidthOutputWithContext(ctx context.Context) VpcBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBandwidthOutput)
}

// VpcBandwidthArrayInput is an input type that accepts VpcBandwidthArray and VpcBandwidthArrayOutput values.
// You can construct a concrete instance of `VpcBandwidthArrayInput` via:
//
//	VpcBandwidthArray{ VpcBandwidthArgs{...} }
type VpcBandwidthArrayInput interface {
	pulumi.Input

	ToVpcBandwidthArrayOutput() VpcBandwidthArrayOutput
	ToVpcBandwidthArrayOutputWithContext(context.Context) VpcBandwidthArrayOutput
}

type VpcBandwidthArray []VpcBandwidthInput

func (VpcBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcBandwidth)(nil)).Elem()
}

func (i VpcBandwidthArray) ToVpcBandwidthArrayOutput() VpcBandwidthArrayOutput {
	return i.ToVpcBandwidthArrayOutputWithContext(context.Background())
}

func (i VpcBandwidthArray) ToVpcBandwidthArrayOutputWithContext(ctx context.Context) VpcBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBandwidthArrayOutput)
}

// VpcBandwidthMapInput is an input type that accepts VpcBandwidthMap and VpcBandwidthMapOutput values.
// You can construct a concrete instance of `VpcBandwidthMapInput` via:
//
//	VpcBandwidthMap{ "key": VpcBandwidthArgs{...} }
type VpcBandwidthMapInput interface {
	pulumi.Input

	ToVpcBandwidthMapOutput() VpcBandwidthMapOutput
	ToVpcBandwidthMapOutputWithContext(context.Context) VpcBandwidthMapOutput
}

type VpcBandwidthMap map[string]VpcBandwidthInput

func (VpcBandwidthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcBandwidth)(nil)).Elem()
}

func (i VpcBandwidthMap) ToVpcBandwidthMapOutput() VpcBandwidthMapOutput {
	return i.ToVpcBandwidthMapOutputWithContext(context.Background())
}

func (i VpcBandwidthMap) ToVpcBandwidthMapOutputWithContext(ctx context.Context) VpcBandwidthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBandwidthMapOutput)
}

type VpcBandwidthOutput struct{ *pulumi.OutputState }

func (VpcBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcBandwidth)(nil)).Elem()
}

func (o VpcBandwidthOutput) ToVpcBandwidthOutput() VpcBandwidthOutput {
	return o
}

func (o VpcBandwidthOutput) ToVpcBandwidthOutputWithContext(ctx context.Context) VpcBandwidthOutput {
	return o
}

func (o VpcBandwidthOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o VpcBandwidthOutput) BandwidthType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.BandwidthType }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) ChargeMode() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.ChargeMode }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o VpcBandwidthOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o VpcBandwidthOutput) PublicBorderGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.PublicBorderGroup }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) Publicips() VpcBandwidthPublicipArrayOutput {
	return o.ApplyT(func(v *VpcBandwidth) VpcBandwidthPublicipArrayOutput { return v.Publicips }).(VpcBandwidthPublicipArrayOutput)
}

func (o VpcBandwidthOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.ShareType }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

func (o VpcBandwidthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o VpcBandwidthOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBandwidth) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type VpcBandwidthArrayOutput struct{ *pulumi.OutputState }

func (VpcBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcBandwidth)(nil)).Elem()
}

func (o VpcBandwidthArrayOutput) ToVpcBandwidthArrayOutput() VpcBandwidthArrayOutput {
	return o
}

func (o VpcBandwidthArrayOutput) ToVpcBandwidthArrayOutputWithContext(ctx context.Context) VpcBandwidthArrayOutput {
	return o
}

func (o VpcBandwidthArrayOutput) Index(i pulumi.IntInput) VpcBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcBandwidth {
		return vs[0].([]*VpcBandwidth)[vs[1].(int)]
	}).(VpcBandwidthOutput)
}

type VpcBandwidthMapOutput struct{ *pulumi.OutputState }

func (VpcBandwidthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcBandwidth)(nil)).Elem()
}

func (o VpcBandwidthMapOutput) ToVpcBandwidthMapOutput() VpcBandwidthMapOutput {
	return o
}

func (o VpcBandwidthMapOutput) ToVpcBandwidthMapOutputWithContext(ctx context.Context) VpcBandwidthMapOutput {
	return o
}

func (o VpcBandwidthMapOutput) MapIndex(k pulumi.StringInput) VpcBandwidthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcBandwidth {
		return vs[0].(map[string]*VpcBandwidth)[vs[1].(string)]
	}).(VpcBandwidthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBandwidthInput)(nil)).Elem(), &VpcBandwidth{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBandwidthArrayInput)(nil)).Elem(), VpcBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBandwidthMapInput)(nil)).Elem(), VpcBandwidthMap{})
	pulumi.RegisterOutputType(VpcBandwidthOutput{})
	pulumi.RegisterOutputType(VpcBandwidthArrayOutput{})
	pulumi.RegisterOutputType(VpcBandwidthMapOutput{})
}
