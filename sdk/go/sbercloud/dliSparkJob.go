// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DliSparkJob struct {
	pulumi.CustomResourceState

	AppName           pulumi.StringOutput                    `pulumi:"appName"`
	AppParameters     pulumi.StringArrayOutput               `pulumi:"appParameters"`
	Configurations    pulumi.StringMapOutput                 `pulumi:"configurations"`
	CreatedAt         pulumi.StringOutput                    `pulumi:"createdAt"`
	DependentPackages DliSparkJobDependentPackageArrayOutput `pulumi:"dependentPackages"`
	DriverCores       pulumi.IntPtrOutput                    `pulumi:"driverCores"`
	DriverMemory      pulumi.StringPtrOutput                 `pulumi:"driverMemory"`
	ExecutorCores     pulumi.IntPtrOutput                    `pulumi:"executorCores"`
	ExecutorMemory    pulumi.StringPtrOutput                 `pulumi:"executorMemory"`
	Executors         pulumi.IntPtrOutput                    `pulumi:"executors"`
	Feature           pulumi.StringPtrOutput                 `pulumi:"feature"`
	Files             pulumi.StringArrayOutput               `pulumi:"files"`
	Jars              pulumi.StringArrayOutput               `pulumi:"jars"`
	MainClass         pulumi.StringPtrOutput                 `pulumi:"mainClass"`
	MaxRetries        pulumi.IntPtrOutput                    `pulumi:"maxRetries"`
	Modules           pulumi.StringArrayOutput               `pulumi:"modules"`
	Name              pulumi.StringOutput                    `pulumi:"name"`
	Owner             pulumi.StringOutput                    `pulumi:"owner"`
	PythonFiles       pulumi.StringArrayOutput               `pulumi:"pythonFiles"`
	QueueName         pulumi.StringOutput                    `pulumi:"queueName"`
	Region            pulumi.StringOutput                    `pulumi:"region"`
	SparkVersion      pulumi.StringPtrOutput                 `pulumi:"sparkVersion"`
	Specification     pulumi.StringPtrOutput                 `pulumi:"specification"`
}

// NewDliSparkJob registers a new resource with the given unique name, arguments, and options.
func NewDliSparkJob(ctx *pulumi.Context,
	name string, args *DliSparkJobArgs, opts ...pulumi.ResourceOption) (*DliSparkJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppName == nil {
		return nil, errors.New("invalid value for required argument 'AppName'")
	}
	if args.QueueName == nil {
		return nil, errors.New("invalid value for required argument 'QueueName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DliSparkJob
	err := ctx.RegisterResource("sbercloud:index/dliSparkJob:DliSparkJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDliSparkJob gets an existing DliSparkJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDliSparkJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DliSparkJobState, opts ...pulumi.ResourceOption) (*DliSparkJob, error) {
	var resource DliSparkJob
	err := ctx.ReadResource("sbercloud:index/dliSparkJob:DliSparkJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DliSparkJob resources.
type dliSparkJobState struct {
	AppName           *string                       `pulumi:"appName"`
	AppParameters     []string                      `pulumi:"appParameters"`
	Configurations    map[string]string             `pulumi:"configurations"`
	CreatedAt         *string                       `pulumi:"createdAt"`
	DependentPackages []DliSparkJobDependentPackage `pulumi:"dependentPackages"`
	DriverCores       *int                          `pulumi:"driverCores"`
	DriverMemory      *string                       `pulumi:"driverMemory"`
	ExecutorCores     *int                          `pulumi:"executorCores"`
	ExecutorMemory    *string                       `pulumi:"executorMemory"`
	Executors         *int                          `pulumi:"executors"`
	Feature           *string                       `pulumi:"feature"`
	Files             []string                      `pulumi:"files"`
	Jars              []string                      `pulumi:"jars"`
	MainClass         *string                       `pulumi:"mainClass"`
	MaxRetries        *int                          `pulumi:"maxRetries"`
	Modules           []string                      `pulumi:"modules"`
	Name              *string                       `pulumi:"name"`
	Owner             *string                       `pulumi:"owner"`
	PythonFiles       []string                      `pulumi:"pythonFiles"`
	QueueName         *string                       `pulumi:"queueName"`
	Region            *string                       `pulumi:"region"`
	SparkVersion      *string                       `pulumi:"sparkVersion"`
	Specification     *string                       `pulumi:"specification"`
}

type DliSparkJobState struct {
	AppName           pulumi.StringPtrInput
	AppParameters     pulumi.StringArrayInput
	Configurations    pulumi.StringMapInput
	CreatedAt         pulumi.StringPtrInput
	DependentPackages DliSparkJobDependentPackageArrayInput
	DriverCores       pulumi.IntPtrInput
	DriverMemory      pulumi.StringPtrInput
	ExecutorCores     pulumi.IntPtrInput
	ExecutorMemory    pulumi.StringPtrInput
	Executors         pulumi.IntPtrInput
	Feature           pulumi.StringPtrInput
	Files             pulumi.StringArrayInput
	Jars              pulumi.StringArrayInput
	MainClass         pulumi.StringPtrInput
	MaxRetries        pulumi.IntPtrInput
	Modules           pulumi.StringArrayInput
	Name              pulumi.StringPtrInput
	Owner             pulumi.StringPtrInput
	PythonFiles       pulumi.StringArrayInput
	QueueName         pulumi.StringPtrInput
	Region            pulumi.StringPtrInput
	SparkVersion      pulumi.StringPtrInput
	Specification     pulumi.StringPtrInput
}

func (DliSparkJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*dliSparkJobState)(nil)).Elem()
}

type dliSparkJobArgs struct {
	AppName           string                        `pulumi:"appName"`
	AppParameters     []string                      `pulumi:"appParameters"`
	Configurations    map[string]string             `pulumi:"configurations"`
	DependentPackages []DliSparkJobDependentPackage `pulumi:"dependentPackages"`
	DriverCores       *int                          `pulumi:"driverCores"`
	DriverMemory      *string                       `pulumi:"driverMemory"`
	ExecutorCores     *int                          `pulumi:"executorCores"`
	ExecutorMemory    *string                       `pulumi:"executorMemory"`
	Executors         *int                          `pulumi:"executors"`
	Feature           *string                       `pulumi:"feature"`
	Files             []string                      `pulumi:"files"`
	Jars              []string                      `pulumi:"jars"`
	MainClass         *string                       `pulumi:"mainClass"`
	MaxRetries        *int                          `pulumi:"maxRetries"`
	Modules           []string                      `pulumi:"modules"`
	Name              *string                       `pulumi:"name"`
	PythonFiles       []string                      `pulumi:"pythonFiles"`
	QueueName         string                        `pulumi:"queueName"`
	Region            *string                       `pulumi:"region"`
	SparkVersion      *string                       `pulumi:"sparkVersion"`
	Specification     *string                       `pulumi:"specification"`
}

// The set of arguments for constructing a DliSparkJob resource.
type DliSparkJobArgs struct {
	AppName           pulumi.StringInput
	AppParameters     pulumi.StringArrayInput
	Configurations    pulumi.StringMapInput
	DependentPackages DliSparkJobDependentPackageArrayInput
	DriverCores       pulumi.IntPtrInput
	DriverMemory      pulumi.StringPtrInput
	ExecutorCores     pulumi.IntPtrInput
	ExecutorMemory    pulumi.StringPtrInput
	Executors         pulumi.IntPtrInput
	Feature           pulumi.StringPtrInput
	Files             pulumi.StringArrayInput
	Jars              pulumi.StringArrayInput
	MainClass         pulumi.StringPtrInput
	MaxRetries        pulumi.IntPtrInput
	Modules           pulumi.StringArrayInput
	Name              pulumi.StringPtrInput
	PythonFiles       pulumi.StringArrayInput
	QueueName         pulumi.StringInput
	Region            pulumi.StringPtrInput
	SparkVersion      pulumi.StringPtrInput
	Specification     pulumi.StringPtrInput
}

func (DliSparkJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dliSparkJobArgs)(nil)).Elem()
}

type DliSparkJobInput interface {
	pulumi.Input

	ToDliSparkJobOutput() DliSparkJobOutput
	ToDliSparkJobOutputWithContext(ctx context.Context) DliSparkJobOutput
}

func (*DliSparkJob) ElementType() reflect.Type {
	return reflect.TypeOf((**DliSparkJob)(nil)).Elem()
}

func (i *DliSparkJob) ToDliSparkJobOutput() DliSparkJobOutput {
	return i.ToDliSparkJobOutputWithContext(context.Background())
}

func (i *DliSparkJob) ToDliSparkJobOutputWithContext(ctx context.Context) DliSparkJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliSparkJobOutput)
}

// DliSparkJobArrayInput is an input type that accepts DliSparkJobArray and DliSparkJobArrayOutput values.
// You can construct a concrete instance of `DliSparkJobArrayInput` via:
//
//	DliSparkJobArray{ DliSparkJobArgs{...} }
type DliSparkJobArrayInput interface {
	pulumi.Input

	ToDliSparkJobArrayOutput() DliSparkJobArrayOutput
	ToDliSparkJobArrayOutputWithContext(context.Context) DliSparkJobArrayOutput
}

type DliSparkJobArray []DliSparkJobInput

func (DliSparkJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DliSparkJob)(nil)).Elem()
}

func (i DliSparkJobArray) ToDliSparkJobArrayOutput() DliSparkJobArrayOutput {
	return i.ToDliSparkJobArrayOutputWithContext(context.Background())
}

func (i DliSparkJobArray) ToDliSparkJobArrayOutputWithContext(ctx context.Context) DliSparkJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliSparkJobArrayOutput)
}

// DliSparkJobMapInput is an input type that accepts DliSparkJobMap and DliSparkJobMapOutput values.
// You can construct a concrete instance of `DliSparkJobMapInput` via:
//
//	DliSparkJobMap{ "key": DliSparkJobArgs{...} }
type DliSparkJobMapInput interface {
	pulumi.Input

	ToDliSparkJobMapOutput() DliSparkJobMapOutput
	ToDliSparkJobMapOutputWithContext(context.Context) DliSparkJobMapOutput
}

type DliSparkJobMap map[string]DliSparkJobInput

func (DliSparkJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DliSparkJob)(nil)).Elem()
}

func (i DliSparkJobMap) ToDliSparkJobMapOutput() DliSparkJobMapOutput {
	return i.ToDliSparkJobMapOutputWithContext(context.Background())
}

func (i DliSparkJobMap) ToDliSparkJobMapOutputWithContext(ctx context.Context) DliSparkJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DliSparkJobMapOutput)
}

type DliSparkJobOutput struct{ *pulumi.OutputState }

func (DliSparkJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DliSparkJob)(nil)).Elem()
}

func (o DliSparkJobOutput) ToDliSparkJobOutput() DliSparkJobOutput {
	return o
}

func (o DliSparkJobOutput) ToDliSparkJobOutputWithContext(ctx context.Context) DliSparkJobOutput {
	return o
}

func (o DliSparkJobOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringOutput { return v.AppName }).(pulumi.StringOutput)
}

func (o DliSparkJobOutput) AppParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringArrayOutput { return v.AppParameters }).(pulumi.StringArrayOutput)
}

func (o DliSparkJobOutput) Configurations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringMapOutput { return v.Configurations }).(pulumi.StringMapOutput)
}

func (o DliSparkJobOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o DliSparkJobOutput) DependentPackages() DliSparkJobDependentPackageArrayOutput {
	return o.ApplyT(func(v *DliSparkJob) DliSparkJobDependentPackageArrayOutput { return v.DependentPackages }).(DliSparkJobDependentPackageArrayOutput)
}

func (o DliSparkJobOutput) DriverCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.IntPtrOutput { return v.DriverCores }).(pulumi.IntPtrOutput)
}

func (o DliSparkJobOutput) DriverMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringPtrOutput { return v.DriverMemory }).(pulumi.StringPtrOutput)
}

func (o DliSparkJobOutput) ExecutorCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.IntPtrOutput { return v.ExecutorCores }).(pulumi.IntPtrOutput)
}

func (o DliSparkJobOutput) ExecutorMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringPtrOutput { return v.ExecutorMemory }).(pulumi.StringPtrOutput)
}

func (o DliSparkJobOutput) Executors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.IntPtrOutput { return v.Executors }).(pulumi.IntPtrOutput)
}

func (o DliSparkJobOutput) Feature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringPtrOutput { return v.Feature }).(pulumi.StringPtrOutput)
}

func (o DliSparkJobOutput) Files() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringArrayOutput { return v.Files }).(pulumi.StringArrayOutput)
}

func (o DliSparkJobOutput) Jars() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringArrayOutput { return v.Jars }).(pulumi.StringArrayOutput)
}

func (o DliSparkJobOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringPtrOutput { return v.MainClass }).(pulumi.StringPtrOutput)
}

func (o DliSparkJobOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.IntPtrOutput { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

func (o DliSparkJobOutput) Modules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringArrayOutput { return v.Modules }).(pulumi.StringArrayOutput)
}

func (o DliSparkJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DliSparkJobOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

func (o DliSparkJobOutput) PythonFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringArrayOutput { return v.PythonFiles }).(pulumi.StringArrayOutput)
}

func (o DliSparkJobOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringOutput { return v.QueueName }).(pulumi.StringOutput)
}

func (o DliSparkJobOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DliSparkJobOutput) SparkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringPtrOutput { return v.SparkVersion }).(pulumi.StringPtrOutput)
}

func (o DliSparkJobOutput) Specification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DliSparkJob) pulumi.StringPtrOutput { return v.Specification }).(pulumi.StringPtrOutput)
}

type DliSparkJobArrayOutput struct{ *pulumi.OutputState }

func (DliSparkJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DliSparkJob)(nil)).Elem()
}

func (o DliSparkJobArrayOutput) ToDliSparkJobArrayOutput() DliSparkJobArrayOutput {
	return o
}

func (o DliSparkJobArrayOutput) ToDliSparkJobArrayOutputWithContext(ctx context.Context) DliSparkJobArrayOutput {
	return o
}

func (o DliSparkJobArrayOutput) Index(i pulumi.IntInput) DliSparkJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DliSparkJob {
		return vs[0].([]*DliSparkJob)[vs[1].(int)]
	}).(DliSparkJobOutput)
}

type DliSparkJobMapOutput struct{ *pulumi.OutputState }

func (DliSparkJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DliSparkJob)(nil)).Elem()
}

func (o DliSparkJobMapOutput) ToDliSparkJobMapOutput() DliSparkJobMapOutput {
	return o
}

func (o DliSparkJobMapOutput) ToDliSparkJobMapOutputWithContext(ctx context.Context) DliSparkJobMapOutput {
	return o
}

func (o DliSparkJobMapOutput) MapIndex(k pulumi.StringInput) DliSparkJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DliSparkJob {
		return vs[0].(map[string]*DliSparkJob)[vs[1].(string)]
	}).(DliSparkJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DliSparkJobInput)(nil)).Elem(), &DliSparkJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliSparkJobArrayInput)(nil)).Elem(), DliSparkJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DliSparkJobMapInput)(nil)).Elem(), DliSparkJobMap{})
	pulumi.RegisterOutputType(DliSparkJobOutput{})
	pulumi.RegisterOutputType(DliSparkJobArrayOutput{})
	pulumi.RegisterOutputType(DliSparkJobMapOutput{})
}
