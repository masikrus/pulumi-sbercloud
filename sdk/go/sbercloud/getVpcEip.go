// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVpcEip(ctx *pulumi.Context, args *LookupVpcEipArgs, opts ...pulumi.InvokeOption) (*LookupVpcEipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcEipResult
	err := ctx.Invoke("sbercloud:index/getVpcEip:getVpcEip", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcEip.
type LookupVpcEipArgs struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	PortId              *string `pulumi:"portId"`
	PublicIp            *string `pulumi:"publicIp"`
	Region              *string `pulumi:"region"`
}

// A collection of values returned by getVpcEip.
type LookupVpcEipResult struct {
	BandwidthId         string `pulumi:"bandwidthId"`
	BandwidthName       string `pulumi:"bandwidthName"`
	BandwidthShareType  string `pulumi:"bandwidthShareType"`
	BandwidthSize       int    `pulumi:"bandwidthSize"`
	CreatedAt           string `pulumi:"createdAt"`
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	IpVersion   int    `pulumi:"ipVersion"`
	Ipv6Address string `pulumi:"ipv6Address"`
	Name        string `pulumi:"name"`
	PortId      string `pulumi:"portId"`
	PrivateIp   string `pulumi:"privateIp"`
	PublicIp    string `pulumi:"publicIp"`
	Region      string `pulumi:"region"`
	Status      string `pulumi:"status"`
	Type        string `pulumi:"type"`
}

func LookupVpcEipOutput(ctx *pulumi.Context, args LookupVpcEipOutputArgs, opts ...pulumi.InvokeOption) LookupVpcEipResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcEipResultOutput, error) {
			args := v.(LookupVpcEipArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpcEip:getVpcEip", args, LookupVpcEipResultOutput{}, options).(LookupVpcEipResultOutput), nil
		}).(LookupVpcEipResultOutput)
}

// A collection of arguments for invoking getVpcEip.
type LookupVpcEipOutputArgs struct {
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	PortId              pulumi.StringPtrInput `pulumi:"portId"`
	PublicIp            pulumi.StringPtrInput `pulumi:"publicIp"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupVpcEipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEipArgs)(nil)).Elem()
}

// A collection of values returned by getVpcEip.
type LookupVpcEipResultOutput struct{ *pulumi.OutputState }

func (LookupVpcEipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEipResult)(nil)).Elem()
}

func (o LookupVpcEipResultOutput) ToLookupVpcEipResultOutput() LookupVpcEipResultOutput {
	return o
}

func (o LookupVpcEipResultOutput) ToLookupVpcEipResultOutputWithContext(ctx context.Context) LookupVpcEipResultOutput {
	return o
}

func (o LookupVpcEipResultOutput) BandwidthId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.BandwidthId }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) BandwidthName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.BandwidthName }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) BandwidthShareType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.BandwidthShareType }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) BandwidthSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpcEipResult) int { return v.BandwidthSize }).(pulumi.IntOutput)
}

func (o LookupVpcEipResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVpcEipResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) IpVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpcEipResult) int { return v.IpVersion }).(pulumi.IntOutput)
}

func (o LookupVpcEipResultOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.PortId }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupVpcEipResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEipResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcEipResultOutput{})
}
