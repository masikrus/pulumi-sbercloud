// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DmsKafkaInstance struct {
	pulumi.CustomResourceState

	AccessUser pulumi.StringPtrOutput `pulumi:"accessUser"`
	ArchType   pulumi.StringPtrOutput `pulumi:"archType"`
	AutoRenew  pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// schema: Required
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones pulumi.StringArrayOutput `pulumi:"availableZones"`
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth            pulumi.StringOutput                       `pulumi:"bandwidth"`
	BrokerNum            pulumi.IntOutput                          `pulumi:"brokerNum"`
	CertReplaced         pulumi.BoolOutput                         `pulumi:"certReplaced"`
	ChargingMode         pulumi.StringOutput                       `pulumi:"chargingMode"`
	ConnectAddress       pulumi.StringOutput                       `pulumi:"connectAddress"`
	ConnectorId          pulumi.StringOutput                       `pulumi:"connectorId"`
	ConnectorNodeNum     pulumi.IntOutput                          `pulumi:"connectorNodeNum"`
	CreatedAt            pulumi.StringOutput                       `pulumi:"createdAt"`
	CrossVpcAccesses     DmsKafkaInstanceCrossVpcAccessArrayOutput `pulumi:"crossVpcAccesses"`
	Description          pulumi.StringPtrOutput                    `pulumi:"description"`
	Dumping              pulumi.BoolOutput                         `pulumi:"dumping"`
	EnableAutoTopic      pulumi.BoolOutput                         `pulumi:"enableAutoTopic"`
	EnablePublicIp       pulumi.BoolOutput                         `pulumi:"enablePublicIp"`
	EnabledMechanisms    pulumi.StringArrayOutput                  `pulumi:"enabledMechanisms"`
	Engine               pulumi.StringOutput                       `pulumi:"engine"`
	EngineVersion        pulumi.StringOutput                       `pulumi:"engineVersion"`
	EnterpriseProjectId  pulumi.StringOutput                       `pulumi:"enterpriseProjectId"`
	ExtendTimes          pulumi.IntOutput                          `pulumi:"extendTimes"`
	FlavorId             pulumi.StringPtrOutput                    `pulumi:"flavorId"`
	Ipv6ConnectAddresses pulumi.StringArrayOutput                  `pulumi:"ipv6ConnectAddresses"`
	Ipv6Enable           pulumi.BoolOutput                         `pulumi:"ipv6Enable"`
	IsLogicalVolume      pulumi.BoolOutput                         `pulumi:"isLogicalVolume"`
	MaintainBegin        pulumi.StringOutput                       `pulumi:"maintainBegin"`
	MaintainEnd          pulumi.StringOutput                       `pulumi:"maintainEnd"`
	// Deprecated: Deprecated
	ManagementConnectAddress pulumi.StringOutput `pulumi:"managementConnectAddress"`
	// Deprecated: Deprecated
	ManagerPassword pulumi.StringPtrOutput `pulumi:"managerPassword"`
	// Deprecated: Deprecated
	ManagerUser pulumi.StringPtrOutput `pulumi:"managerUser"`
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress pulumi.StringOutput                     `pulumi:"manegementConnectAddress"`
	MessageQueryInstEnable   pulumi.BoolOutput                       `pulumi:"messageQueryInstEnable"`
	Name                     pulumi.StringOutput                     `pulumi:"name"`
	NetworkId                pulumi.StringOutput                     `pulumi:"networkId"`
	NewTenantIps             pulumi.StringArrayOutput                `pulumi:"newTenantIps"`
	NodeNum                  pulumi.IntOutput                        `pulumi:"nodeNum"`
	Parameters               DmsKafkaInstanceParameterArrayOutput    `pulumi:"parameters"`
	PartitionNum             pulumi.IntOutput                        `pulumi:"partitionNum"`
	Password                 pulumi.StringPtrOutput                  `pulumi:"password"`
	Period                   pulumi.IntPtrOutput                     `pulumi:"period"`
	PeriodUnit               pulumi.StringPtrOutput                  `pulumi:"periodUnit"`
	PodConnectAddress        pulumi.StringOutput                     `pulumi:"podConnectAddress"`
	Port                     pulumi.IntOutput                        `pulumi:"port"`
	PortProtocols            DmsKafkaInstancePortProtocolArrayOutput `pulumi:"portProtocols"`
	ProductId                pulumi.StringPtrOutput                  `pulumi:"productId"`
	PublicBandwidth          pulumi.IntOutput                        `pulumi:"publicBandwidth"`
	PublicIpAddresses        pulumi.StringArrayOutput                `pulumi:"publicIpAddresses"`
	PublicIpIds              pulumi.StringArrayOutput                `pulumi:"publicIpIds"`
	Region                   pulumi.StringOutput                     `pulumi:"region"`
	ResourceSpecCode         pulumi.StringOutput                     `pulumi:"resourceSpecCode"`
	RetentionPolicy          pulumi.StringOutput                     `pulumi:"retentionPolicy"`
	SecurityGroupId          pulumi.StringOutput                     `pulumi:"securityGroupId"`
	SecurityProtocol         pulumi.StringPtrOutput                  `pulumi:"securityProtocol"`
	SslEnable                pulumi.BoolOutput                       `pulumi:"sslEnable"`
	SslTwoWayEnable          pulumi.BoolOutput                       `pulumi:"sslTwoWayEnable"`
	Status                   pulumi.StringOutput                     `pulumi:"status"`
	StorageResourceId        pulumi.StringOutput                     `pulumi:"storageResourceId"`
	StorageSpace             pulumi.IntOutput                        `pulumi:"storageSpace"`
	StorageSpecCode          pulumi.StringOutput                     `pulumi:"storageSpecCode"`
	StorageType              pulumi.StringOutput                     `pulumi:"storageType"`
	Tags                     pulumi.StringMapOutput                  `pulumi:"tags"`
	Type                     pulumi.StringOutput                     `pulumi:"type"`
	UsedStorageSpace         pulumi.IntOutput                        `pulumi:"usedStorageSpace"`
	UserId                   pulumi.StringOutput                     `pulumi:"userId"`
	UserName                 pulumi.StringOutput                     `pulumi:"userName"`
	VpcClientPlain           pulumi.BoolOutput                       `pulumi:"vpcClientPlain"`
	VpcId                    pulumi.StringOutput                     `pulumi:"vpcId"`
}

// NewDmsKafkaInstance registers a new resource with the given unique name, arguments, and options.
func NewDmsKafkaInstance(ctx *pulumi.Context,
	name string, args *DmsKafkaInstanceArgs, opts ...pulumi.ResourceOption) (*DmsKafkaInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.StorageSpecCode == nil {
		return nil, errors.New("invalid value for required argument 'StorageSpecCode'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.ManagerPassword != nil {
		args.ManagerPassword = pulumi.ToSecret(args.ManagerPassword).(pulumi.StringPtrInput)
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"managerPassword",
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DmsKafkaInstance
	err := ctx.RegisterResource("sbercloud:index/dmsKafkaInstance:DmsKafkaInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDmsKafkaInstance gets an existing DmsKafkaInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDmsKafkaInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DmsKafkaInstanceState, opts ...pulumi.ResourceOption) (*DmsKafkaInstance, error) {
	var resource DmsKafkaInstance
	err := ctx.ReadResource("sbercloud:index/dmsKafkaInstance:DmsKafkaInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DmsKafkaInstance resources.
type dmsKafkaInstanceState struct {
	AccessUser *string `pulumi:"accessUser"`
	ArchType   *string `pulumi:"archType"`
	AutoRenew  *string `pulumi:"autoRenew"`
	// schema: Required
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones []string `pulumi:"availableZones"`
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth            *string                          `pulumi:"bandwidth"`
	BrokerNum            *int                             `pulumi:"brokerNum"`
	CertReplaced         *bool                            `pulumi:"certReplaced"`
	ChargingMode         *string                          `pulumi:"chargingMode"`
	ConnectAddress       *string                          `pulumi:"connectAddress"`
	ConnectorId          *string                          `pulumi:"connectorId"`
	ConnectorNodeNum     *int                             `pulumi:"connectorNodeNum"`
	CreatedAt            *string                          `pulumi:"createdAt"`
	CrossVpcAccesses     []DmsKafkaInstanceCrossVpcAccess `pulumi:"crossVpcAccesses"`
	Description          *string                          `pulumi:"description"`
	Dumping              *bool                            `pulumi:"dumping"`
	EnableAutoTopic      *bool                            `pulumi:"enableAutoTopic"`
	EnablePublicIp       *bool                            `pulumi:"enablePublicIp"`
	EnabledMechanisms    []string                         `pulumi:"enabledMechanisms"`
	Engine               *string                          `pulumi:"engine"`
	EngineVersion        *string                          `pulumi:"engineVersion"`
	EnterpriseProjectId  *string                          `pulumi:"enterpriseProjectId"`
	ExtendTimes          *int                             `pulumi:"extendTimes"`
	FlavorId             *string                          `pulumi:"flavorId"`
	Ipv6ConnectAddresses []string                         `pulumi:"ipv6ConnectAddresses"`
	Ipv6Enable           *bool                            `pulumi:"ipv6Enable"`
	IsLogicalVolume      *bool                            `pulumi:"isLogicalVolume"`
	MaintainBegin        *string                          `pulumi:"maintainBegin"`
	MaintainEnd          *string                          `pulumi:"maintainEnd"`
	// Deprecated: Deprecated
	ManagementConnectAddress *string `pulumi:"managementConnectAddress"`
	// Deprecated: Deprecated
	ManagerPassword *string `pulumi:"managerPassword"`
	// Deprecated: Deprecated
	ManagerUser *string `pulumi:"managerUser"`
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress *string                        `pulumi:"manegementConnectAddress"`
	MessageQueryInstEnable   *bool                          `pulumi:"messageQueryInstEnable"`
	Name                     *string                        `pulumi:"name"`
	NetworkId                *string                        `pulumi:"networkId"`
	NewTenantIps             []string                       `pulumi:"newTenantIps"`
	NodeNum                  *int                           `pulumi:"nodeNum"`
	Parameters               []DmsKafkaInstanceParameter    `pulumi:"parameters"`
	PartitionNum             *int                           `pulumi:"partitionNum"`
	Password                 *string                        `pulumi:"password"`
	Period                   *int                           `pulumi:"period"`
	PeriodUnit               *string                        `pulumi:"periodUnit"`
	PodConnectAddress        *string                        `pulumi:"podConnectAddress"`
	Port                     *int                           `pulumi:"port"`
	PortProtocols            []DmsKafkaInstancePortProtocol `pulumi:"portProtocols"`
	ProductId                *string                        `pulumi:"productId"`
	PublicBandwidth          *int                           `pulumi:"publicBandwidth"`
	PublicIpAddresses        []string                       `pulumi:"publicIpAddresses"`
	PublicIpIds              []string                       `pulumi:"publicIpIds"`
	Region                   *string                        `pulumi:"region"`
	ResourceSpecCode         *string                        `pulumi:"resourceSpecCode"`
	RetentionPolicy          *string                        `pulumi:"retentionPolicy"`
	SecurityGroupId          *string                        `pulumi:"securityGroupId"`
	SecurityProtocol         *string                        `pulumi:"securityProtocol"`
	SslEnable                *bool                          `pulumi:"sslEnable"`
	SslTwoWayEnable          *bool                          `pulumi:"sslTwoWayEnable"`
	Status                   *string                        `pulumi:"status"`
	StorageResourceId        *string                        `pulumi:"storageResourceId"`
	StorageSpace             *int                           `pulumi:"storageSpace"`
	StorageSpecCode          *string                        `pulumi:"storageSpecCode"`
	StorageType              *string                        `pulumi:"storageType"`
	Tags                     map[string]string              `pulumi:"tags"`
	Type                     *string                        `pulumi:"type"`
	UsedStorageSpace         *int                           `pulumi:"usedStorageSpace"`
	UserId                   *string                        `pulumi:"userId"`
	UserName                 *string                        `pulumi:"userName"`
	VpcClientPlain           *bool                          `pulumi:"vpcClientPlain"`
	VpcId                    *string                        `pulumi:"vpcId"`
}

type DmsKafkaInstanceState struct {
	AccessUser pulumi.StringPtrInput
	ArchType   pulumi.StringPtrInput
	AutoRenew  pulumi.StringPtrInput
	// schema: Required
	AvailabilityZones pulumi.StringArrayInput
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones pulumi.StringArrayInput
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth            pulumi.StringPtrInput
	BrokerNum            pulumi.IntPtrInput
	CertReplaced         pulumi.BoolPtrInput
	ChargingMode         pulumi.StringPtrInput
	ConnectAddress       pulumi.StringPtrInput
	ConnectorId          pulumi.StringPtrInput
	ConnectorNodeNum     pulumi.IntPtrInput
	CreatedAt            pulumi.StringPtrInput
	CrossVpcAccesses     DmsKafkaInstanceCrossVpcAccessArrayInput
	Description          pulumi.StringPtrInput
	Dumping              pulumi.BoolPtrInput
	EnableAutoTopic      pulumi.BoolPtrInput
	EnablePublicIp       pulumi.BoolPtrInput
	EnabledMechanisms    pulumi.StringArrayInput
	Engine               pulumi.StringPtrInput
	EngineVersion        pulumi.StringPtrInput
	EnterpriseProjectId  pulumi.StringPtrInput
	ExtendTimes          pulumi.IntPtrInput
	FlavorId             pulumi.StringPtrInput
	Ipv6ConnectAddresses pulumi.StringArrayInput
	Ipv6Enable           pulumi.BoolPtrInput
	IsLogicalVolume      pulumi.BoolPtrInput
	MaintainBegin        pulumi.StringPtrInput
	MaintainEnd          pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagementConnectAddress pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerPassword pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerUser pulumi.StringPtrInput
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress pulumi.StringPtrInput
	MessageQueryInstEnable   pulumi.BoolPtrInput
	Name                     pulumi.StringPtrInput
	NetworkId                pulumi.StringPtrInput
	NewTenantIps             pulumi.StringArrayInput
	NodeNum                  pulumi.IntPtrInput
	Parameters               DmsKafkaInstanceParameterArrayInput
	PartitionNum             pulumi.IntPtrInput
	Password                 pulumi.StringPtrInput
	Period                   pulumi.IntPtrInput
	PeriodUnit               pulumi.StringPtrInput
	PodConnectAddress        pulumi.StringPtrInput
	Port                     pulumi.IntPtrInput
	PortProtocols            DmsKafkaInstancePortProtocolArrayInput
	ProductId                pulumi.StringPtrInput
	PublicBandwidth          pulumi.IntPtrInput
	PublicIpAddresses        pulumi.StringArrayInput
	PublicIpIds              pulumi.StringArrayInput
	Region                   pulumi.StringPtrInput
	ResourceSpecCode         pulumi.StringPtrInput
	RetentionPolicy          pulumi.StringPtrInput
	SecurityGroupId          pulumi.StringPtrInput
	SecurityProtocol         pulumi.StringPtrInput
	SslEnable                pulumi.BoolPtrInput
	SslTwoWayEnable          pulumi.BoolPtrInput
	Status                   pulumi.StringPtrInput
	StorageResourceId        pulumi.StringPtrInput
	StorageSpace             pulumi.IntPtrInput
	StorageSpecCode          pulumi.StringPtrInput
	StorageType              pulumi.StringPtrInput
	Tags                     pulumi.StringMapInput
	Type                     pulumi.StringPtrInput
	UsedStorageSpace         pulumi.IntPtrInput
	UserId                   pulumi.StringPtrInput
	UserName                 pulumi.StringPtrInput
	VpcClientPlain           pulumi.BoolPtrInput
	VpcId                    pulumi.StringPtrInput
}

func (DmsKafkaInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsKafkaInstanceState)(nil)).Elem()
}

type dmsKafkaInstanceArgs struct {
	AccessUser *string `pulumi:"accessUser"`
	ArchType   *string `pulumi:"archType"`
	AutoRenew  *string `pulumi:"autoRenew"`
	// schema: Required
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones []string `pulumi:"availableZones"`
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth           *string                          `pulumi:"bandwidth"`
	BrokerNum           *int                             `pulumi:"brokerNum"`
	ChargingMode        *string                          `pulumi:"chargingMode"`
	CrossVpcAccesses    []DmsKafkaInstanceCrossVpcAccess `pulumi:"crossVpcAccesses"`
	Description         *string                          `pulumi:"description"`
	Dumping             *bool                            `pulumi:"dumping"`
	EnableAutoTopic     *bool                            `pulumi:"enableAutoTopic"`
	EnabledMechanisms   []string                         `pulumi:"enabledMechanisms"`
	EngineVersion       string                           `pulumi:"engineVersion"`
	EnterpriseProjectId *string                          `pulumi:"enterpriseProjectId"`
	FlavorId            *string                          `pulumi:"flavorId"`
	Ipv6Enable          *bool                            `pulumi:"ipv6Enable"`
	MaintainBegin       *string                          `pulumi:"maintainBegin"`
	MaintainEnd         *string                          `pulumi:"maintainEnd"`
	// Deprecated: Deprecated
	ManagerPassword *string `pulumi:"managerPassword"`
	// Deprecated: Deprecated
	ManagerUser      *string                     `pulumi:"managerUser"`
	Name             *string                     `pulumi:"name"`
	NetworkId        string                      `pulumi:"networkId"`
	NewTenantIps     []string                    `pulumi:"newTenantIps"`
	Parameters       []DmsKafkaInstanceParameter `pulumi:"parameters"`
	Password         *string                     `pulumi:"password"`
	Period           *int                        `pulumi:"period"`
	PeriodUnit       *string                     `pulumi:"periodUnit"`
	ProductId        *string                     `pulumi:"productId"`
	PublicIpIds      []string                    `pulumi:"publicIpIds"`
	Region           *string                     `pulumi:"region"`
	RetentionPolicy  *string                     `pulumi:"retentionPolicy"`
	SecurityGroupId  string                      `pulumi:"securityGroupId"`
	SecurityProtocol *string                     `pulumi:"securityProtocol"`
	SslEnable        *bool                       `pulumi:"sslEnable"`
	StorageSpace     *int                        `pulumi:"storageSpace"`
	StorageSpecCode  string                      `pulumi:"storageSpecCode"`
	Tags             map[string]string           `pulumi:"tags"`
	VpcClientPlain   *bool                       `pulumi:"vpcClientPlain"`
	VpcId            string                      `pulumi:"vpcId"`
}

// The set of arguments for constructing a DmsKafkaInstance resource.
type DmsKafkaInstanceArgs struct {
	AccessUser pulumi.StringPtrInput
	ArchType   pulumi.StringPtrInput
	AutoRenew  pulumi.StringPtrInput
	// schema: Required
	AvailabilityZones pulumi.StringArrayInput
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones pulumi.StringArrayInput
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth           pulumi.StringPtrInput
	BrokerNum           pulumi.IntPtrInput
	ChargingMode        pulumi.StringPtrInput
	CrossVpcAccesses    DmsKafkaInstanceCrossVpcAccessArrayInput
	Description         pulumi.StringPtrInput
	Dumping             pulumi.BoolPtrInput
	EnableAutoTopic     pulumi.BoolPtrInput
	EnabledMechanisms   pulumi.StringArrayInput
	EngineVersion       pulumi.StringInput
	EnterpriseProjectId pulumi.StringPtrInput
	FlavorId            pulumi.StringPtrInput
	Ipv6Enable          pulumi.BoolPtrInput
	MaintainBegin       pulumi.StringPtrInput
	MaintainEnd         pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerPassword pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerUser      pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	NetworkId        pulumi.StringInput
	NewTenantIps     pulumi.StringArrayInput
	Parameters       DmsKafkaInstanceParameterArrayInput
	Password         pulumi.StringPtrInput
	Period           pulumi.IntPtrInput
	PeriodUnit       pulumi.StringPtrInput
	ProductId        pulumi.StringPtrInput
	PublicIpIds      pulumi.StringArrayInput
	Region           pulumi.StringPtrInput
	RetentionPolicy  pulumi.StringPtrInput
	SecurityGroupId  pulumi.StringInput
	SecurityProtocol pulumi.StringPtrInput
	SslEnable        pulumi.BoolPtrInput
	StorageSpace     pulumi.IntPtrInput
	StorageSpecCode  pulumi.StringInput
	Tags             pulumi.StringMapInput
	VpcClientPlain   pulumi.BoolPtrInput
	VpcId            pulumi.StringInput
}

func (DmsKafkaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsKafkaInstanceArgs)(nil)).Elem()
}

type DmsKafkaInstanceInput interface {
	pulumi.Input

	ToDmsKafkaInstanceOutput() DmsKafkaInstanceOutput
	ToDmsKafkaInstanceOutputWithContext(ctx context.Context) DmsKafkaInstanceOutput
}

func (*DmsKafkaInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsKafkaInstance)(nil)).Elem()
}

func (i *DmsKafkaInstance) ToDmsKafkaInstanceOutput() DmsKafkaInstanceOutput {
	return i.ToDmsKafkaInstanceOutputWithContext(context.Background())
}

func (i *DmsKafkaInstance) ToDmsKafkaInstanceOutputWithContext(ctx context.Context) DmsKafkaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstanceOutput)
}

// DmsKafkaInstanceArrayInput is an input type that accepts DmsKafkaInstanceArray and DmsKafkaInstanceArrayOutput values.
// You can construct a concrete instance of `DmsKafkaInstanceArrayInput` via:
//
//	DmsKafkaInstanceArray{ DmsKafkaInstanceArgs{...} }
type DmsKafkaInstanceArrayInput interface {
	pulumi.Input

	ToDmsKafkaInstanceArrayOutput() DmsKafkaInstanceArrayOutput
	ToDmsKafkaInstanceArrayOutputWithContext(context.Context) DmsKafkaInstanceArrayOutput
}

type DmsKafkaInstanceArray []DmsKafkaInstanceInput

func (DmsKafkaInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsKafkaInstance)(nil)).Elem()
}

func (i DmsKafkaInstanceArray) ToDmsKafkaInstanceArrayOutput() DmsKafkaInstanceArrayOutput {
	return i.ToDmsKafkaInstanceArrayOutputWithContext(context.Background())
}

func (i DmsKafkaInstanceArray) ToDmsKafkaInstanceArrayOutputWithContext(ctx context.Context) DmsKafkaInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstanceArrayOutput)
}

// DmsKafkaInstanceMapInput is an input type that accepts DmsKafkaInstanceMap and DmsKafkaInstanceMapOutput values.
// You can construct a concrete instance of `DmsKafkaInstanceMapInput` via:
//
//	DmsKafkaInstanceMap{ "key": DmsKafkaInstanceArgs{...} }
type DmsKafkaInstanceMapInput interface {
	pulumi.Input

	ToDmsKafkaInstanceMapOutput() DmsKafkaInstanceMapOutput
	ToDmsKafkaInstanceMapOutputWithContext(context.Context) DmsKafkaInstanceMapOutput
}

type DmsKafkaInstanceMap map[string]DmsKafkaInstanceInput

func (DmsKafkaInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsKafkaInstance)(nil)).Elem()
}

func (i DmsKafkaInstanceMap) ToDmsKafkaInstanceMapOutput() DmsKafkaInstanceMapOutput {
	return i.ToDmsKafkaInstanceMapOutputWithContext(context.Background())
}

func (i DmsKafkaInstanceMap) ToDmsKafkaInstanceMapOutputWithContext(ctx context.Context) DmsKafkaInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsKafkaInstanceMapOutput)
}

type DmsKafkaInstanceOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsKafkaInstance)(nil)).Elem()
}

func (o DmsKafkaInstanceOutput) ToDmsKafkaInstanceOutput() DmsKafkaInstanceOutput {
	return o
}

func (o DmsKafkaInstanceOutput) ToDmsKafkaInstanceOutputWithContext(ctx context.Context) DmsKafkaInstanceOutput {
	return o
}

func (o DmsKafkaInstanceOutput) AccessUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.AccessUser }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.ArchType }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// schema: Required
func (o DmsKafkaInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
func (o DmsKafkaInstanceOutput) AvailableZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringArrayOutput { return v.AvailableZones }).(pulumi.StringArrayOutput)
}

// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
func (o DmsKafkaInstanceOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.Bandwidth }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) BrokerNum() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.BrokerNum }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) CertReplaced() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.CertReplaced }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) ConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.ConnectAddress }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) ConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.ConnectorId }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) ConnectorNodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.ConnectorNodeNum }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) CrossVpcAccesses() DmsKafkaInstanceCrossVpcAccessArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) DmsKafkaInstanceCrossVpcAccessArrayOutput { return v.CrossVpcAccesses }).(DmsKafkaInstanceCrossVpcAccessArrayOutput)
}

func (o DmsKafkaInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) Dumping() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.Dumping }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) EnableAutoTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.EnableAutoTopic }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) EnablePublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.EnablePublicIp }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) EnabledMechanisms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringArrayOutput { return v.EnabledMechanisms }).(pulumi.StringArrayOutput)
}

func (o DmsKafkaInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) ExtendTimes() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.ExtendTimes }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) FlavorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.FlavorId }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) Ipv6ConnectAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringArrayOutput { return v.Ipv6ConnectAddresses }).(pulumi.StringArrayOutput)
}

func (o DmsKafkaInstanceOutput) Ipv6Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.Ipv6Enable }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) IsLogicalVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.IsLogicalVolume }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

// Deprecated: Deprecated
func (o DmsKafkaInstanceOutput) ManagementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.ManagementConnectAddress }).(pulumi.StringOutput)
}

// Deprecated: Deprecated
func (o DmsKafkaInstanceOutput) ManagerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.ManagerPassword }).(pulumi.StringPtrOutput)
}

// Deprecated: Deprecated
func (o DmsKafkaInstanceOutput) ManagerUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.ManagerUser }).(pulumi.StringPtrOutput)
}

// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
func (o DmsKafkaInstanceOutput) ManegementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.ManegementConnectAddress }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) MessageQueryInstEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.MessageQueryInstEnable }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) NewTenantIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringArrayOutput { return v.NewTenantIps }).(pulumi.StringArrayOutput)
}

func (o DmsKafkaInstanceOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.NodeNum }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) Parameters() DmsKafkaInstanceParameterArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) DmsKafkaInstanceParameterArrayOutput { return v.Parameters }).(DmsKafkaInstanceParameterArrayOutput)
}

func (o DmsKafkaInstanceOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.PartitionNum }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o DmsKafkaInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) PodConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.PodConnectAddress }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) PortProtocols() DmsKafkaInstancePortProtocolArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) DmsKafkaInstancePortProtocolArrayOutput { return v.PortProtocols }).(DmsKafkaInstancePortProtocolArrayOutput)
}

func (o DmsKafkaInstanceOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.ProductId }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) PublicBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.PublicBandwidth }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringArrayOutput { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

func (o DmsKafkaInstanceOutput) PublicIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringArrayOutput { return v.PublicIpIds }).(pulumi.StringArrayOutput)
}

func (o DmsKafkaInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) ResourceSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.ResourceSpecCode }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) RetentionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.RetentionPolicy }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringPtrOutput { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

func (o DmsKafkaInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.SslEnable }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) SslTwoWayEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.SslTwoWayEnable }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.StorageResourceId }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) StorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.StorageSpace }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) StorageSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.StorageSpecCode }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.StorageType }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DmsKafkaInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) UsedStorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.IntOutput { return v.UsedStorageSpace }).(pulumi.IntOutput)
}

func (o DmsKafkaInstanceOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

func (o DmsKafkaInstanceOutput) VpcClientPlain() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.BoolOutput { return v.VpcClientPlain }).(pulumi.BoolOutput)
}

func (o DmsKafkaInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsKafkaInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type DmsKafkaInstanceArrayOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsKafkaInstance)(nil)).Elem()
}

func (o DmsKafkaInstanceArrayOutput) ToDmsKafkaInstanceArrayOutput() DmsKafkaInstanceArrayOutput {
	return o
}

func (o DmsKafkaInstanceArrayOutput) ToDmsKafkaInstanceArrayOutputWithContext(ctx context.Context) DmsKafkaInstanceArrayOutput {
	return o
}

func (o DmsKafkaInstanceArrayOutput) Index(i pulumi.IntInput) DmsKafkaInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DmsKafkaInstance {
		return vs[0].([]*DmsKafkaInstance)[vs[1].(int)]
	}).(DmsKafkaInstanceOutput)
}

type DmsKafkaInstanceMapOutput struct{ *pulumi.OutputState }

func (DmsKafkaInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsKafkaInstance)(nil)).Elem()
}

func (o DmsKafkaInstanceMapOutput) ToDmsKafkaInstanceMapOutput() DmsKafkaInstanceMapOutput {
	return o
}

func (o DmsKafkaInstanceMapOutput) ToDmsKafkaInstanceMapOutputWithContext(ctx context.Context) DmsKafkaInstanceMapOutput {
	return o
}

func (o DmsKafkaInstanceMapOutput) MapIndex(k pulumi.StringInput) DmsKafkaInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DmsKafkaInstance {
		return vs[0].(map[string]*DmsKafkaInstance)[vs[1].(string)]
	}).(DmsKafkaInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstanceInput)(nil)).Elem(), &DmsKafkaInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstanceArrayInput)(nil)).Elem(), DmsKafkaInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsKafkaInstanceMapInput)(nil)).Elem(), DmsKafkaInstanceMap{})
	pulumi.RegisterOutputType(DmsKafkaInstanceOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstanceArrayOutput{})
	pulumi.RegisterOutputType(DmsKafkaInstanceMapOutput{})
}
