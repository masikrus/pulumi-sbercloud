// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DrsJob struct {
	pulumi.CustomResourceState

	CreatedAt             pulumi.StringOutput         `pulumi:"createdAt"`
	Description           pulumi.StringPtrOutput      `pulumi:"description"`
	DestinationDb         DrsJobDestinationDbOutput   `pulumi:"destinationDb"`
	DestinationDbReadnoly pulumi.BoolPtrOutput        `pulumi:"destinationDbReadnoly"`
	Direction             pulumi.StringOutput         `pulumi:"direction"`
	EngineType            pulumi.StringOutput         `pulumi:"engineType"`
	EnterpriseProjectId   pulumi.StringPtrOutput      `pulumi:"enterpriseProjectId"`
	ExpiredDays           pulumi.IntPtrOutput         `pulumi:"expiredDays"`
	ForceDestroy          pulumi.BoolPtrOutput        `pulumi:"forceDestroy"`
	LimitSpeeds           DrsJobLimitSpeedArrayOutput `pulumi:"limitSpeeds"`
	MigrateDefiner        pulumi.BoolPtrOutput        `pulumi:"migrateDefiner"`
	MigrationType         pulumi.StringPtrOutput      `pulumi:"migrationType"`
	MultiWrite            pulumi.BoolPtrOutput        `pulumi:"multiWrite"`
	Name                  pulumi.StringOutput         `pulumi:"name"`
	NetType               pulumi.StringPtrOutput      `pulumi:"netType"`
	PrivateIp             pulumi.StringOutput         `pulumi:"privateIp"`
	PublicIp              pulumi.StringOutput         `pulumi:"publicIp"`
	Region                pulumi.StringOutput         `pulumi:"region"`
	SourceDb              DrsJobSourceDbOutput        `pulumi:"sourceDb"`
	StartTime             pulumi.StringPtrOutput      `pulumi:"startTime"`
	Status                pulumi.StringOutput         `pulumi:"status"`
	Tags                  pulumi.StringMapOutput      `pulumi:"tags"`
	Type                  pulumi.StringOutput         `pulumi:"type"`
}

// NewDrsJob registers a new resource with the given unique name, arguments, and options.
func NewDrsJob(ctx *pulumi.Context,
	name string, args *DrsJobArgs, opts ...pulumi.ResourceOption) (*DrsJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationDb == nil {
		return nil, errors.New("invalid value for required argument 'DestinationDb'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.EngineType == nil {
		return nil, errors.New("invalid value for required argument 'EngineType'")
	}
	if args.SourceDb == nil {
		return nil, errors.New("invalid value for required argument 'SourceDb'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DrsJob
	err := ctx.RegisterResource("sbercloud:index/drsJob:DrsJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDrsJob gets an existing DrsJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDrsJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DrsJobState, opts ...pulumi.ResourceOption) (*DrsJob, error) {
	var resource DrsJob
	err := ctx.ReadResource("sbercloud:index/drsJob:DrsJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DrsJob resources.
type drsJobState struct {
	CreatedAt             *string              `pulumi:"createdAt"`
	Description           *string              `pulumi:"description"`
	DestinationDb         *DrsJobDestinationDb `pulumi:"destinationDb"`
	DestinationDbReadnoly *bool                `pulumi:"destinationDbReadnoly"`
	Direction             *string              `pulumi:"direction"`
	EngineType            *string              `pulumi:"engineType"`
	EnterpriseProjectId   *string              `pulumi:"enterpriseProjectId"`
	ExpiredDays           *int                 `pulumi:"expiredDays"`
	ForceDestroy          *bool                `pulumi:"forceDestroy"`
	LimitSpeeds           []DrsJobLimitSpeed   `pulumi:"limitSpeeds"`
	MigrateDefiner        *bool                `pulumi:"migrateDefiner"`
	MigrationType         *string              `pulumi:"migrationType"`
	MultiWrite            *bool                `pulumi:"multiWrite"`
	Name                  *string              `pulumi:"name"`
	NetType               *string              `pulumi:"netType"`
	PrivateIp             *string              `pulumi:"privateIp"`
	PublicIp              *string              `pulumi:"publicIp"`
	Region                *string              `pulumi:"region"`
	SourceDb              *DrsJobSourceDb      `pulumi:"sourceDb"`
	StartTime             *string              `pulumi:"startTime"`
	Status                *string              `pulumi:"status"`
	Tags                  map[string]string    `pulumi:"tags"`
	Type                  *string              `pulumi:"type"`
}

type DrsJobState struct {
	CreatedAt             pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	DestinationDb         DrsJobDestinationDbPtrInput
	DestinationDbReadnoly pulumi.BoolPtrInput
	Direction             pulumi.StringPtrInput
	EngineType            pulumi.StringPtrInput
	EnterpriseProjectId   pulumi.StringPtrInput
	ExpiredDays           pulumi.IntPtrInput
	ForceDestroy          pulumi.BoolPtrInput
	LimitSpeeds           DrsJobLimitSpeedArrayInput
	MigrateDefiner        pulumi.BoolPtrInput
	MigrationType         pulumi.StringPtrInput
	MultiWrite            pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	NetType               pulumi.StringPtrInput
	PrivateIp             pulumi.StringPtrInput
	PublicIp              pulumi.StringPtrInput
	Region                pulumi.StringPtrInput
	SourceDb              DrsJobSourceDbPtrInput
	StartTime             pulumi.StringPtrInput
	Status                pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	Type                  pulumi.StringPtrInput
}

func (DrsJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*drsJobState)(nil)).Elem()
}

type drsJobArgs struct {
	Description           *string             `pulumi:"description"`
	DestinationDb         DrsJobDestinationDb `pulumi:"destinationDb"`
	DestinationDbReadnoly *bool               `pulumi:"destinationDbReadnoly"`
	Direction             string              `pulumi:"direction"`
	EngineType            string              `pulumi:"engineType"`
	EnterpriseProjectId   *string             `pulumi:"enterpriseProjectId"`
	ExpiredDays           *int                `pulumi:"expiredDays"`
	ForceDestroy          *bool               `pulumi:"forceDestroy"`
	LimitSpeeds           []DrsJobLimitSpeed  `pulumi:"limitSpeeds"`
	MigrateDefiner        *bool               `pulumi:"migrateDefiner"`
	MigrationType         *string             `pulumi:"migrationType"`
	MultiWrite            *bool               `pulumi:"multiWrite"`
	Name                  *string             `pulumi:"name"`
	NetType               *string             `pulumi:"netType"`
	Region                *string             `pulumi:"region"`
	SourceDb              DrsJobSourceDb      `pulumi:"sourceDb"`
	StartTime             *string             `pulumi:"startTime"`
	Tags                  map[string]string   `pulumi:"tags"`
	Type                  string              `pulumi:"type"`
}

// The set of arguments for constructing a DrsJob resource.
type DrsJobArgs struct {
	Description           pulumi.StringPtrInput
	DestinationDb         DrsJobDestinationDbInput
	DestinationDbReadnoly pulumi.BoolPtrInput
	Direction             pulumi.StringInput
	EngineType            pulumi.StringInput
	EnterpriseProjectId   pulumi.StringPtrInput
	ExpiredDays           pulumi.IntPtrInput
	ForceDestroy          pulumi.BoolPtrInput
	LimitSpeeds           DrsJobLimitSpeedArrayInput
	MigrateDefiner        pulumi.BoolPtrInput
	MigrationType         pulumi.StringPtrInput
	MultiWrite            pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	NetType               pulumi.StringPtrInput
	Region                pulumi.StringPtrInput
	SourceDb              DrsJobSourceDbInput
	StartTime             pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	Type                  pulumi.StringInput
}

func (DrsJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*drsJobArgs)(nil)).Elem()
}

type DrsJobInput interface {
	pulumi.Input

	ToDrsJobOutput() DrsJobOutput
	ToDrsJobOutputWithContext(ctx context.Context) DrsJobOutput
}

func (*DrsJob) ElementType() reflect.Type {
	return reflect.TypeOf((**DrsJob)(nil)).Elem()
}

func (i *DrsJob) ToDrsJobOutput() DrsJobOutput {
	return i.ToDrsJobOutputWithContext(context.Background())
}

func (i *DrsJob) ToDrsJobOutputWithContext(ctx context.Context) DrsJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobOutput)
}

// DrsJobArrayInput is an input type that accepts DrsJobArray and DrsJobArrayOutput values.
// You can construct a concrete instance of `DrsJobArrayInput` via:
//
//	DrsJobArray{ DrsJobArgs{...} }
type DrsJobArrayInput interface {
	pulumi.Input

	ToDrsJobArrayOutput() DrsJobArrayOutput
	ToDrsJobArrayOutputWithContext(context.Context) DrsJobArrayOutput
}

type DrsJobArray []DrsJobInput

func (DrsJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrsJob)(nil)).Elem()
}

func (i DrsJobArray) ToDrsJobArrayOutput() DrsJobArrayOutput {
	return i.ToDrsJobArrayOutputWithContext(context.Background())
}

func (i DrsJobArray) ToDrsJobArrayOutputWithContext(ctx context.Context) DrsJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobArrayOutput)
}

// DrsJobMapInput is an input type that accepts DrsJobMap and DrsJobMapOutput values.
// You can construct a concrete instance of `DrsJobMapInput` via:
//
//	DrsJobMap{ "key": DrsJobArgs{...} }
type DrsJobMapInput interface {
	pulumi.Input

	ToDrsJobMapOutput() DrsJobMapOutput
	ToDrsJobMapOutputWithContext(context.Context) DrsJobMapOutput
}

type DrsJobMap map[string]DrsJobInput

func (DrsJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrsJob)(nil)).Elem()
}

func (i DrsJobMap) ToDrsJobMapOutput() DrsJobMapOutput {
	return i.ToDrsJobMapOutputWithContext(context.Background())
}

func (i DrsJobMap) ToDrsJobMapOutputWithContext(ctx context.Context) DrsJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrsJobMapOutput)
}

type DrsJobOutput struct{ *pulumi.OutputState }

func (DrsJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DrsJob)(nil)).Elem()
}

func (o DrsJobOutput) ToDrsJobOutput() DrsJobOutput {
	return o
}

func (o DrsJobOutput) ToDrsJobOutputWithContext(ctx context.Context) DrsJobOutput {
	return o
}

func (o DrsJobOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o DrsJobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DrsJobOutput) DestinationDb() DrsJobDestinationDbOutput {
	return o.ApplyT(func(v *DrsJob) DrsJobDestinationDbOutput { return v.DestinationDb }).(DrsJobDestinationDbOutput)
}

func (o DrsJobOutput) DestinationDbReadnoly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.BoolPtrOutput { return v.DestinationDbReadnoly }).(pulumi.BoolPtrOutput)
}

func (o DrsJobOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

func (o DrsJobOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.EngineType }).(pulumi.StringOutput)
}

func (o DrsJobOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringPtrOutput { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

func (o DrsJobOutput) ExpiredDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.IntPtrOutput { return v.ExpiredDays }).(pulumi.IntPtrOutput)
}

func (o DrsJobOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

func (o DrsJobOutput) LimitSpeeds() DrsJobLimitSpeedArrayOutput {
	return o.ApplyT(func(v *DrsJob) DrsJobLimitSpeedArrayOutput { return v.LimitSpeeds }).(DrsJobLimitSpeedArrayOutput)
}

func (o DrsJobOutput) MigrateDefiner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.BoolPtrOutput { return v.MigrateDefiner }).(pulumi.BoolPtrOutput)
}

func (o DrsJobOutput) MigrationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringPtrOutput { return v.MigrationType }).(pulumi.StringPtrOutput)
}

func (o DrsJobOutput) MultiWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.BoolPtrOutput { return v.MultiWrite }).(pulumi.BoolPtrOutput)
}

func (o DrsJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DrsJobOutput) NetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringPtrOutput { return v.NetType }).(pulumi.StringPtrOutput)
}

func (o DrsJobOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o DrsJobOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o DrsJobOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DrsJobOutput) SourceDb() DrsJobSourceDbOutput {
	return o.ApplyT(func(v *DrsJob) DrsJobSourceDbOutput { return v.SourceDb }).(DrsJobSourceDbOutput)
}

func (o DrsJobOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringPtrOutput { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o DrsJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o DrsJobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DrsJobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DrsJob) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type DrsJobArrayOutput struct{ *pulumi.OutputState }

func (DrsJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrsJob)(nil)).Elem()
}

func (o DrsJobArrayOutput) ToDrsJobArrayOutput() DrsJobArrayOutput {
	return o
}

func (o DrsJobArrayOutput) ToDrsJobArrayOutputWithContext(ctx context.Context) DrsJobArrayOutput {
	return o
}

func (o DrsJobArrayOutput) Index(i pulumi.IntInput) DrsJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DrsJob {
		return vs[0].([]*DrsJob)[vs[1].(int)]
	}).(DrsJobOutput)
}

type DrsJobMapOutput struct{ *pulumi.OutputState }

func (DrsJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrsJob)(nil)).Elem()
}

func (o DrsJobMapOutput) ToDrsJobMapOutput() DrsJobMapOutput {
	return o
}

func (o DrsJobMapOutput) ToDrsJobMapOutputWithContext(ctx context.Context) DrsJobMapOutput {
	return o
}

func (o DrsJobMapOutput) MapIndex(k pulumi.StringInput) DrsJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DrsJob {
		return vs[0].(map[string]*DrsJob)[vs[1].(string)]
	}).(DrsJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobInput)(nil)).Elem(), &DrsJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobArrayInput)(nil)).Elem(), DrsJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrsJobMapInput)(nil)).Elem(), DrsJobMap{})
	pulumi.RegisterOutputType(DrsJobOutput{})
	pulumi.RegisterOutputType(DrsJobArrayOutput{})
	pulumi.RegisterOutputType(DrsJobMapOutput{})
}
