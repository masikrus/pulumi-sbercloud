// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRdsPgAccounts(ctx *pulumi.Context, args *GetRdsPgAccountsArgs, opts ...pulumi.InvokeOption) (*GetRdsPgAccountsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRdsPgAccountsResult
	err := ctx.Invoke("sbercloud:index/getRdsPgAccounts:getRdsPgAccounts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRdsPgAccounts.
type GetRdsPgAccountsArgs struct {
	InstanceId string  `pulumi:"instanceId"`
	Region     *string `pulumi:"region"`
	UserName   *string `pulumi:"userName"`
}

// A collection of values returned by getRdsPgAccounts.
type GetRdsPgAccountsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                 `pulumi:"id"`
	InstanceId string                 `pulumi:"instanceId"`
	Region     string                 `pulumi:"region"`
	UserName   *string                `pulumi:"userName"`
	Users      []GetRdsPgAccountsUser `pulumi:"users"`
}

func GetRdsPgAccountsOutput(ctx *pulumi.Context, args GetRdsPgAccountsOutputArgs, opts ...pulumi.InvokeOption) GetRdsPgAccountsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRdsPgAccountsResultOutput, error) {
			args := v.(GetRdsPgAccountsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getRdsPgAccounts:getRdsPgAccounts", args, GetRdsPgAccountsResultOutput{}, options).(GetRdsPgAccountsResultOutput), nil
		}).(GetRdsPgAccountsResultOutput)
}

// A collection of arguments for invoking getRdsPgAccounts.
type GetRdsPgAccountsOutputArgs struct {
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	Region     pulumi.StringPtrInput `pulumi:"region"`
	UserName   pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetRdsPgAccountsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgAccountsArgs)(nil)).Elem()
}

// A collection of values returned by getRdsPgAccounts.
type GetRdsPgAccountsResultOutput struct{ *pulumi.OutputState }

func (GetRdsPgAccountsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsPgAccountsResult)(nil)).Elem()
}

func (o GetRdsPgAccountsResultOutput) ToGetRdsPgAccountsResultOutput() GetRdsPgAccountsResultOutput {
	return o
}

func (o GetRdsPgAccountsResultOutput) ToGetRdsPgAccountsResultOutputWithContext(ctx context.Context) GetRdsPgAccountsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRdsPgAccountsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgAccountsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsPgAccountsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgAccountsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetRdsPgAccountsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsPgAccountsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRdsPgAccountsResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsPgAccountsResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func (o GetRdsPgAccountsResultOutput) Users() GetRdsPgAccountsUserArrayOutput {
	return o.ApplyT(func(v GetRdsPgAccountsResult) []GetRdsPgAccountsUser { return v.Users }).(GetRdsPgAccountsUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRdsPgAccountsResultOutput{})
}
