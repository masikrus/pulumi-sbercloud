// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/apigThrottlingPolicy:ApigThrottlingPolicy")]
    public partial class ApigThrottlingPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The array of one or more special throttling policies for APP limit.
        /// </summary>
        [Output("appThrottles")]
        public Output<ImmutableArray<Outputs.ApigThrottlingPolicyAppThrottle>> AppThrottles { get; private set; } = null!;

        /// <summary>
        /// The creation time of the throttling policy.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description about the API throttling policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the dedicated instance to which the throttling policy belongs.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The maximum number of times an API can be accessed within a specified period..
        /// </summary>
        [Output("maxApiRequests")]
        public Output<int> MaxApiRequests { get; private set; } = null!;

        /// <summary>
        /// The maximum number of times the API can be accessed by an app within the same period.
        /// </summary>
        [Output("maxAppRequests")]
        public Output<int?> MaxAppRequests { get; private set; } = null!;

        /// <summary>
        /// The maximum number of times the API can be accessed by an IP address within the same period.
        /// </summary>
        [Output("maxIpRequests")]
        public Output<int?> MaxIpRequests { get; private set; } = null!;

        /// <summary>
        /// The maximum number of times the API can be accessed by a user within the same period.
        /// </summary>
        [Output("maxUserRequests")]
        public Output<int?> MaxUserRequests { get; private set; } = null!;

        /// <summary>
        /// The name of the throttling policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The period of time for limiting the number of API calls.
        /// </summary>
        [Output("period")]
        public Output<int> Period { get; private set; } = null!;

        /// <summary>
        /// The time unit for limiting the number of API calls.
        /// </summary>
        [Output("periodUnit")]
        public Output<string?> PeriodUnit { get; private set; } = null!;

        /// <summary>
        /// The region where the throttling policy is located.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The type of the request throttling policy.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// The array of one or more special throttling policies for IAM user limit.
        /// </summary>
        [Output("userThrottles")]
        public Output<ImmutableArray<Outputs.ApigThrottlingPolicyUserThrottle>> UserThrottles { get; private set; } = null!;


        /// <summary>
        /// Create a ApigThrottlingPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigThrottlingPolicy(string name, ApigThrottlingPolicyArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigThrottlingPolicy:ApigThrottlingPolicy", name, args ?? new ApigThrottlingPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigThrottlingPolicy(string name, Input<string> id, ApigThrottlingPolicyState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigThrottlingPolicy:ApigThrottlingPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigThrottlingPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigThrottlingPolicy Get(string name, Input<string> id, ApigThrottlingPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigThrottlingPolicy(name, id, state, options);
        }
    }

    public sealed class ApigThrottlingPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("appThrottles")]
        private InputList<Inputs.ApigThrottlingPolicyAppThrottleArgs>? _appThrottles;

        /// <summary>
        /// The array of one or more special throttling policies for APP limit.
        /// </summary>
        public InputList<Inputs.ApigThrottlingPolicyAppThrottleArgs> AppThrottles
        {
            get => _appThrottles ?? (_appThrottles = new InputList<Inputs.ApigThrottlingPolicyAppThrottleArgs>());
            set => _appThrottles = value;
        }

        /// <summary>
        /// The description about the API throttling policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the dedicated instance to which the throttling policy belongs.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The maximum number of times an API can be accessed within a specified period..
        /// </summary>
        [Input("maxApiRequests", required: true)]
        public Input<int> MaxApiRequests { get; set; } = null!;

        /// <summary>
        /// The maximum number of times the API can be accessed by an app within the same period.
        /// </summary>
        [Input("maxAppRequests")]
        public Input<int>? MaxAppRequests { get; set; }

        /// <summary>
        /// The maximum number of times the API can be accessed by an IP address within the same period.
        /// </summary>
        [Input("maxIpRequests")]
        public Input<int>? MaxIpRequests { get; set; }

        /// <summary>
        /// The maximum number of times the API can be accessed by a user within the same period.
        /// </summary>
        [Input("maxUserRequests")]
        public Input<int>? MaxUserRequests { get; set; }

        /// <summary>
        /// The name of the throttling policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The period of time for limiting the number of API calls.
        /// </summary>
        [Input("period", required: true)]
        public Input<int> Period { get; set; } = null!;

        /// <summary>
        /// The time unit for limiting the number of API calls.
        /// </summary>
        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        /// <summary>
        /// The region where the throttling policy is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The type of the request throttling policy.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("userThrottles")]
        private InputList<Inputs.ApigThrottlingPolicyUserThrottleArgs>? _userThrottles;

        /// <summary>
        /// The array of one or more special throttling policies for IAM user limit.
        /// </summary>
        public InputList<Inputs.ApigThrottlingPolicyUserThrottleArgs> UserThrottles
        {
            get => _userThrottles ?? (_userThrottles = new InputList<Inputs.ApigThrottlingPolicyUserThrottleArgs>());
            set => _userThrottles = value;
        }

        public ApigThrottlingPolicyArgs()
        {
        }
        public static new ApigThrottlingPolicyArgs Empty => new ApigThrottlingPolicyArgs();
    }

    public sealed class ApigThrottlingPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("appThrottles")]
        private InputList<Inputs.ApigThrottlingPolicyAppThrottleGetArgs>? _appThrottles;

        /// <summary>
        /// The array of one or more special throttling policies for APP limit.
        /// </summary>
        public InputList<Inputs.ApigThrottlingPolicyAppThrottleGetArgs> AppThrottles
        {
            get => _appThrottles ?? (_appThrottles = new InputList<Inputs.ApigThrottlingPolicyAppThrottleGetArgs>());
            set => _appThrottles = value;
        }

        /// <summary>
        /// The creation time of the throttling policy.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The description about the API throttling policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the dedicated instance to which the throttling policy belongs.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The maximum number of times an API can be accessed within a specified period..
        /// </summary>
        [Input("maxApiRequests")]
        public Input<int>? MaxApiRequests { get; set; }

        /// <summary>
        /// The maximum number of times the API can be accessed by an app within the same period.
        /// </summary>
        [Input("maxAppRequests")]
        public Input<int>? MaxAppRequests { get; set; }

        /// <summary>
        /// The maximum number of times the API can be accessed by an IP address within the same period.
        /// </summary>
        [Input("maxIpRequests")]
        public Input<int>? MaxIpRequests { get; set; }

        /// <summary>
        /// The maximum number of times the API can be accessed by a user within the same period.
        /// </summary>
        [Input("maxUserRequests")]
        public Input<int>? MaxUserRequests { get; set; }

        /// <summary>
        /// The name of the throttling policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The period of time for limiting the number of API calls.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The time unit for limiting the number of API calls.
        /// </summary>
        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        /// <summary>
        /// The region where the throttling policy is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The type of the request throttling policy.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("userThrottles")]
        private InputList<Inputs.ApigThrottlingPolicyUserThrottleGetArgs>? _userThrottles;

        /// <summary>
        /// The array of one or more special throttling policies for IAM user limit.
        /// </summary>
        public InputList<Inputs.ApigThrottlingPolicyUserThrottleGetArgs> UserThrottles
        {
            get => _userThrottles ?? (_userThrottles = new InputList<Inputs.ApigThrottlingPolicyUserThrottleGetArgs>());
            set => _userThrottles = value;
        }

        public ApigThrottlingPolicyState()
        {
        }
        public static new ApigThrottlingPolicyState Empty => new ApigThrottlingPolicyState();
    }
}
