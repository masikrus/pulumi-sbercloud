// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Inputs
{

    public sealed class ObsBucketLifecycleRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("abortIncompleteMultipartUploads")]
        private InputList<Inputs.ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs>? _abortIncompleteMultipartUploads;
        public InputList<Inputs.ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs> AbortIncompleteMultipartUploads
        {
            get => _abortIncompleteMultipartUploads ?? (_abortIncompleteMultipartUploads = new InputList<Inputs.ObsBucketLifecycleRuleAbortIncompleteMultipartUploadArgs>());
            set => _abortIncompleteMultipartUploads = value;
        }

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("expirations")]
        private InputList<Inputs.ObsBucketLifecycleRuleExpirationArgs>? _expirations;
        public InputList<Inputs.ObsBucketLifecycleRuleExpirationArgs> Expirations
        {
            get => _expirations ?? (_expirations = new InputList<Inputs.ObsBucketLifecycleRuleExpirationArgs>());
            set => _expirations = value;
        }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("noncurrentVersionExpirations")]
        private InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs>? _noncurrentVersionExpirations;
        public InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs> NoncurrentVersionExpirations
        {
            get => _noncurrentVersionExpirations ?? (_noncurrentVersionExpirations = new InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionExpirationArgs>());
            set => _noncurrentVersionExpirations = value;
        }

        [Input("noncurrentVersionTransitions")]
        private InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs>? _noncurrentVersionTransitions;
        public InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs> NoncurrentVersionTransitions
        {
            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionTransitionArgs>());
            set => _noncurrentVersionTransitions = value;
        }

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("transitions")]
        private InputList<Inputs.ObsBucketLifecycleRuleTransitionArgs>? _transitions;
        public InputList<Inputs.ObsBucketLifecycleRuleTransitionArgs> Transitions
        {
            get => _transitions ?? (_transitions = new InputList<Inputs.ObsBucketLifecycleRuleTransitionArgs>());
            set => _transitions = value;
        }

        public ObsBucketLifecycleRuleArgs()
        {
        }
        public static new ObsBucketLifecycleRuleArgs Empty => new ObsBucketLifecycleRuleArgs();
    }
}
