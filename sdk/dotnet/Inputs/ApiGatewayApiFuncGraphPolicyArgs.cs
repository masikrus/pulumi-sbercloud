// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Inputs
{

    public sealed class ApiGatewayApiFuncGraphPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the backend custom authorization.
        /// </summary>
        [Input("authorizerId")]
        public Input<string>? AuthorizerId { get; set; }

        [Input("backendParams")]
        private InputList<Inputs.ApiGatewayApiFuncGraphPolicyBackendParamArgs>? _backendParams;

        /// <summary>
        /// The configaiton list of the backend parameters.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiFuncGraphPolicyBackendParamArgs> BackendParams
        {
            get => _backendParams ?? (_backendParams = new InputList<Inputs.ApiGatewayApiFuncGraphPolicyBackendParamArgs>());
            set => _backendParams = value;
        }

        [Input("conditions", required: true)]
        private InputList<Inputs.ApiGatewayApiFuncGraphPolicyConditionArgs>? _conditions;

        /// <summary>
        /// The policy conditions.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiFuncGraphPolicyConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.ApiGatewayApiFuncGraphPolicyConditionArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The effective mode of the backend policy.
        /// </summary>
        [Input("effectiveMode")]
        public Input<string>? EffectiveMode { get; set; }

        /// <summary>
        /// The alias URN of the FunctionGraph function.
        /// </summary>
        [Input("functionAliasUrn")]
        public Input<string>? FunctionAliasUrn { get; set; }

        /// <summary>
        /// The URN of the FunctionGraph function.
        /// </summary>
        [Input("functionUrn", required: true)]
        public Input<string> FunctionUrn { get; set; } = null!;

        /// <summary>
        /// The invocation mode of the FunctionGraph function.
        /// </summary>
        [Input("invocationMode")]
        public Input<string>? InvocationMode { get; set; }

        /// <summary>
        /// The invocation mode of the FunctionGraph function.
        /// </summary>
        [Input("invocationType")]
        public Input<string>? InvocationType { get; set; }

        /// <summary>
        /// The name of the backend policy.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The network (framework) type of the FunctionGraph function.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// The request protocol of the FunctionGraph function.
        /// </summary>
        [Input("requestProtocol")]
        public Input<string>? RequestProtocol { get; set; }

        /// <summary>
        /// The timeout for API requests to backend service.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// The version of the FunctionGraph function.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ApiGatewayApiFuncGraphPolicyArgs()
        {
        }
        public static new ApiGatewayApiFuncGraphPolicyArgs Empty => new ApiGatewayApiFuncGraphPolicyArgs();
    }
}
