// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Inputs
{

    public sealed class ObsBucketLifecycleRuleGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("abortIncompleteMultipartUploads")]
        private InputList<Inputs.ObsBucketLifecycleRuleAbortIncompleteMultipartUploadGetArgs>? _abortIncompleteMultipartUploads;
        public InputList<Inputs.ObsBucketLifecycleRuleAbortIncompleteMultipartUploadGetArgs> AbortIncompleteMultipartUploads
        {
            get => _abortIncompleteMultipartUploads ?? (_abortIncompleteMultipartUploads = new InputList<Inputs.ObsBucketLifecycleRuleAbortIncompleteMultipartUploadGetArgs>());
            set => _abortIncompleteMultipartUploads = value;
        }

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("expirations")]
        private InputList<Inputs.ObsBucketLifecycleRuleExpirationGetArgs>? _expirations;
        public InputList<Inputs.ObsBucketLifecycleRuleExpirationGetArgs> Expirations
        {
            get => _expirations ?? (_expirations = new InputList<Inputs.ObsBucketLifecycleRuleExpirationGetArgs>());
            set => _expirations = value;
        }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("noncurrentVersionExpirations")]
        private InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionExpirationGetArgs>? _noncurrentVersionExpirations;
        public InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionExpirationGetArgs> NoncurrentVersionExpirations
        {
            get => _noncurrentVersionExpirations ?? (_noncurrentVersionExpirations = new InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionExpirationGetArgs>());
            set => _noncurrentVersionExpirations = value;
        }

        [Input("noncurrentVersionTransitions")]
        private InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionTransitionGetArgs>? _noncurrentVersionTransitions;
        public InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionTransitionGetArgs> NoncurrentVersionTransitions
        {
            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<Inputs.ObsBucketLifecycleRuleNoncurrentVersionTransitionGetArgs>());
            set => _noncurrentVersionTransitions = value;
        }

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("transitions")]
        private InputList<Inputs.ObsBucketLifecycleRuleTransitionGetArgs>? _transitions;
        public InputList<Inputs.ObsBucketLifecycleRuleTransitionGetArgs> Transitions
        {
            get => _transitions ?? (_transitions = new InputList<Inputs.ObsBucketLifecycleRuleTransitionGetArgs>());
            set => _transitions = value;
        }

        public ObsBucketLifecycleRuleGetArgs()
        {
        }
        public static new ObsBucketLifecycleRuleGetArgs Empty => new ObsBucketLifecycleRuleGetArgs();
    }
}
