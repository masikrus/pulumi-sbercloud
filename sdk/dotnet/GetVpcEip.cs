// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetVpcEip
    {
        public static Task<GetVpcEipResult> InvokeAsync(GetVpcEipArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcEipResult>("sbercloud:index/getVpcEip:getVpcEip", args ?? new GetVpcEipArgs(), options.WithDefaults());

        public static Output<GetVpcEipResult> Invoke(GetVpcEipInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcEipResult>("sbercloud:index/getVpcEip:getVpcEip", args ?? new GetVpcEipInvokeArgs(), options.WithDefaults());

        public static Output<GetVpcEipResult> Invoke(GetVpcEipInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcEipResult>("sbercloud:index/getVpcEip:getVpcEip", args ?? new GetVpcEipInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcEipArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("portId")]
        public string? PortId { get; set; }

        [Input("publicIp")]
        public string? PublicIp { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetVpcEipArgs()
        {
        }
        public static new GetVpcEipArgs Empty => new GetVpcEipArgs();
    }

    public sealed class GetVpcEipInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("portId")]
        public Input<string>? PortId { get; set; }

        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetVpcEipInvokeArgs()
        {
        }
        public static new GetVpcEipInvokeArgs Empty => new GetVpcEipInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcEipResult
    {
        public readonly string BandwidthId;
        public readonly string BandwidthName;
        public readonly string BandwidthShareType;
        public readonly int BandwidthSize;
        public readonly string CreatedAt;
        public readonly string EnterpriseProjectId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int IpVersion;
        public readonly string Ipv6Address;
        public readonly string Name;
        public readonly string PortId;
        public readonly string PrivateIp;
        public readonly string PublicIp;
        public readonly string Region;
        public readonly string Status;
        public readonly string Type;

        [OutputConstructor]
        private GetVpcEipResult(
            string bandwidthId,

            string bandwidthName,

            string bandwidthShareType,

            int bandwidthSize,

            string createdAt,

            string enterpriseProjectId,

            string id,

            int ipVersion,

            string ipv6Address,

            string name,

            string portId,

            string privateIp,

            string publicIp,

            string region,

            string status,

            string type)
        {
            BandwidthId = bandwidthId;
            BandwidthName = bandwidthName;
            BandwidthShareType = bandwidthShareType;
            BandwidthSize = bandwidthSize;
            CreatedAt = createdAt;
            EnterpriseProjectId = enterpriseProjectId;
            Id = id;
            IpVersion = ipVersion;
            Ipv6Address = ipv6Address;
            Name = name;
            PortId = portId;
            PrivateIp = privateIp;
            PublicIp = publicIp;
            Region = region;
            Status = status;
            Type = type;
        }
    }
}
