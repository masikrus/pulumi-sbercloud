// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/smnSubscription:SmnSubscription")]
    public partial class SmnSubscription : global::Pulumi.CustomResource
    {
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        [Output("extension")]
        public Output<Outputs.SmnSubscriptionExtension> Extension { get; private set; } = null!;

        /// <summary>
        /// The message filter policies of a subscriber.
        /// </summary>
        [Output("filterPolicies")]
        public Output<ImmutableArray<Outputs.SmnSubscriptionFilterPolicy>> FilterPolicies { get; private set; } = null!;

        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("remark")]
        public Output<string?> Remark { get; private set; } = null!;

        [Output("status")]
        public Output<int> Status { get; private set; } = null!;

        [Output("subscriptionUrn")]
        public Output<string> SubscriptionUrn { get; private set; } = null!;

        [Output("topicUrn")]
        public Output<string> TopicUrn { get; private set; } = null!;


        /// <summary>
        /// Create a SmnSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SmnSubscription(string name, SmnSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/smnSubscription:SmnSubscription", name, args ?? new SmnSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SmnSubscription(string name, Input<string> id, SmnSubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/smnSubscription:SmnSubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SmnSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SmnSubscription Get(string name, Input<string> id, SmnSubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new SmnSubscription(name, id, state, options);
        }
    }

    public sealed class SmnSubscriptionArgs : global::Pulumi.ResourceArgs
    {
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        [Input("extension")]
        public Input<Inputs.SmnSubscriptionExtensionArgs>? Extension { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("remark")]
        public Input<string>? Remark { get; set; }

        [Input("topicUrn", required: true)]
        public Input<string> TopicUrn { get; set; } = null!;

        public SmnSubscriptionArgs()
        {
        }
        public static new SmnSubscriptionArgs Empty => new SmnSubscriptionArgs();
    }

    public sealed class SmnSubscriptionState : global::Pulumi.ResourceArgs
    {
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("extension")]
        public Input<Inputs.SmnSubscriptionExtensionGetArgs>? Extension { get; set; }

        [Input("filterPolicies")]
        private InputList<Inputs.SmnSubscriptionFilterPolicyGetArgs>? _filterPolicies;

        /// <summary>
        /// The message filter policies of a subscriber.
        /// </summary>
        public InputList<Inputs.SmnSubscriptionFilterPolicyGetArgs> FilterPolicies
        {
            get => _filterPolicies ?? (_filterPolicies = new InputList<Inputs.SmnSubscriptionFilterPolicyGetArgs>());
            set => _filterPolicies = value;
        }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("remark")]
        public Input<string>? Remark { get; set; }

        [Input("status")]
        public Input<int>? Status { get; set; }

        [Input("subscriptionUrn")]
        public Input<string>? SubscriptionUrn { get; set; }

        [Input("topicUrn")]
        public Input<string>? TopicUrn { get; set; }

        public SmnSubscriptionState()
        {
        }
        public static new SmnSubscriptionState Empty => new SmnSubscriptionState();
    }
}
