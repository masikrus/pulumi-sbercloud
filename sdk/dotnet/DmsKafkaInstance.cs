// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/dmsKafkaInstance:DmsKafkaInstance")]
    public partial class DmsKafkaInstance : global::Pulumi.CustomResource
    {
        [Output("accessUser")]
        public Output<string?> AccessUser { get; private set; } = null!;

        [Output("archType")]
        public Output<string?> ArchType { get; private set; } = null!;

        [Output("autoRenew")]
        public Output<string?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// schema: Required
        /// </summary>
        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        [Output("availableZones")]
        public Output<ImmutableArray<string>> AvailableZones { get; private set; } = null!;

        [Output("bandwidth")]
        public Output<string> Bandwidth { get; private set; } = null!;

        [Output("brokerNum")]
        public Output<int> BrokerNum { get; private set; } = null!;

        [Output("certReplaced")]
        public Output<bool> CertReplaced { get; private set; } = null!;

        [Output("chargingMode")]
        public Output<string> ChargingMode { get; private set; } = null!;

        [Output("connectAddress")]
        public Output<string> ConnectAddress { get; private set; } = null!;

        [Output("connectorId")]
        public Output<string> ConnectorId { get; private set; } = null!;

        [Output("connectorNodeNum")]
        public Output<int> ConnectorNodeNum { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("crossVpcAccesses")]
        public Output<ImmutableArray<Outputs.DmsKafkaInstanceCrossVpcAccess>> CrossVpcAccesses { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("dumping")]
        public Output<bool> Dumping { get; private set; } = null!;

        [Output("enableAutoTopic")]
        public Output<bool> EnableAutoTopic { get; private set; } = null!;

        [Output("enablePublicIp")]
        public Output<bool> EnablePublicIp { get; private set; } = null!;

        [Output("enabledMechanisms")]
        public Output<ImmutableArray<string>> EnabledMechanisms { get; private set; } = null!;

        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("extendTimes")]
        public Output<int> ExtendTimes { get; private set; } = null!;

        [Output("flavorId")]
        public Output<string?> FlavorId { get; private set; } = null!;

        [Output("ipv6ConnectAddresses")]
        public Output<ImmutableArray<string>> Ipv6ConnectAddresses { get; private set; } = null!;

        [Output("ipv6Enable")]
        public Output<bool> Ipv6Enable { get; private set; } = null!;

        [Output("isLogicalVolume")]
        public Output<bool> IsLogicalVolume { get; private set; } = null!;

        [Output("maintainBegin")]
        public Output<string> MaintainBegin { get; private set; } = null!;

        [Output("maintainEnd")]
        public Output<string> MaintainEnd { get; private set; } = null!;

        [Output("managementConnectAddress")]
        public Output<string> ManagementConnectAddress { get; private set; } = null!;

        [Output("managerPassword")]
        public Output<string?> ManagerPassword { get; private set; } = null!;

        [Output("managerUser")]
        public Output<string?> ManagerUser { get; private set; } = null!;

        [Output("manegementConnectAddress")]
        public Output<string> ManegementConnectAddress { get; private set; } = null!;

        [Output("messageQueryInstEnable")]
        public Output<bool> MessageQueryInstEnable { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        [Output("newTenantIps")]
        public Output<ImmutableArray<string>> NewTenantIps { get; private set; } = null!;

        [Output("nodeNum")]
        public Output<int> NodeNum { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableArray<Outputs.DmsKafkaInstanceParameter>> Parameters { get; private set; } = null!;

        [Output("partitionNum")]
        public Output<int> PartitionNum { get; private set; } = null!;

        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        [Output("periodUnit")]
        public Output<string?> PeriodUnit { get; private set; } = null!;

        [Output("podConnectAddress")]
        public Output<string> PodConnectAddress { get; private set; } = null!;

        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        [Output("portProtocols")]
        public Output<ImmutableArray<Outputs.DmsKafkaInstancePortProtocol>> PortProtocols { get; private set; } = null!;

        [Output("productId")]
        public Output<string?> ProductId { get; private set; } = null!;

        [Output("publicBandwidth")]
        public Output<int> PublicBandwidth { get; private set; } = null!;

        [Output("publicIpAddresses")]
        public Output<ImmutableArray<string>> PublicIpAddresses { get; private set; } = null!;

        [Output("publicIpIds")]
        public Output<ImmutableArray<string>> PublicIpIds { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("resourceSpecCode")]
        public Output<string> ResourceSpecCode { get; private set; } = null!;

        [Output("retentionPolicy")]
        public Output<string> RetentionPolicy { get; private set; } = null!;

        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        [Output("securityProtocol")]
        public Output<string?> SecurityProtocol { get; private set; } = null!;

        [Output("sslEnable")]
        public Output<bool> SslEnable { get; private set; } = null!;

        [Output("sslTwoWayEnable")]
        public Output<bool> SslTwoWayEnable { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("storageResourceId")]
        public Output<string> StorageResourceId { get; private set; } = null!;

        [Output("storageSpace")]
        public Output<int> StorageSpace { get; private set; } = null!;

        [Output("storageSpecCode")]
        public Output<string> StorageSpecCode { get; private set; } = null!;

        [Output("storageType")]
        public Output<string> StorageType { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("usedStorageSpace")]
        public Output<int> UsedStorageSpace { get; private set; } = null!;

        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;

        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        [Output("vpcClientPlain")]
        public Output<bool> VpcClientPlain { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a DmsKafkaInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DmsKafkaInstance(string name, DmsKafkaInstanceArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/dmsKafkaInstance:DmsKafkaInstance", name, args ?? new DmsKafkaInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DmsKafkaInstance(string name, Input<string> id, DmsKafkaInstanceState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/dmsKafkaInstance:DmsKafkaInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "managerPassword",
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DmsKafkaInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DmsKafkaInstance Get(string name, Input<string> id, DmsKafkaInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new DmsKafkaInstance(name, id, state, options);
        }
    }

    public sealed class DmsKafkaInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessUser")]
        public Input<string>? AccessUser { get; set; }

        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// schema: Required
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("availableZones")]
        private InputList<string>? _availableZones;
        [Obsolete(@"available_zones has deprecated, please use ""availability_zones"" instead.")]
        public InputList<string> AvailableZones
        {
            get => _availableZones ?? (_availableZones = new InputList<string>());
            set => _availableZones = value;
        }

        [Input("bandwidth")]
        public Input<string>? Bandwidth { get; set; }

        [Input("brokerNum")]
        public Input<int>? BrokerNum { get; set; }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("crossVpcAccesses")]
        private InputList<Inputs.DmsKafkaInstanceCrossVpcAccessArgs>? _crossVpcAccesses;
        public InputList<Inputs.DmsKafkaInstanceCrossVpcAccessArgs> CrossVpcAccesses
        {
            get => _crossVpcAccesses ?? (_crossVpcAccesses = new InputList<Inputs.DmsKafkaInstanceCrossVpcAccessArgs>());
            set => _crossVpcAccesses = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dumping")]
        public Input<bool>? Dumping { get; set; }

        [Input("enableAutoTopic")]
        public Input<bool>? EnableAutoTopic { get; set; }

        [Input("enabledMechanisms")]
        private InputList<string>? _enabledMechanisms;
        public InputList<string> EnabledMechanisms
        {
            get => _enabledMechanisms ?? (_enabledMechanisms = new InputList<string>());
            set => _enabledMechanisms = value;
        }

        [Input("engineVersion", required: true)]
        public Input<string> EngineVersion { get; set; } = null!;

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("flavorId")]
        public Input<string>? FlavorId { get; set; }

        [Input("ipv6Enable")]
        public Input<bool>? Ipv6Enable { get; set; }

        [Input("maintainBegin")]
        public Input<string>? MaintainBegin { get; set; }

        [Input("maintainEnd")]
        public Input<string>? MaintainEnd { get; set; }

        [Input("managerPassword")]
        private Input<string>? _managerPassword;
        [Obsolete(@"Deprecated")]
        public Input<string>? ManagerPassword
        {
            get => _managerPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _managerPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("managerUser")]
        public Input<string>? ManagerUser { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("newTenantIps")]
        private InputList<string>? _newTenantIps;
        public InputList<string> NewTenantIps
        {
            get => _newTenantIps ?? (_newTenantIps = new InputList<string>());
            set => _newTenantIps = value;
        }

        [Input("parameters")]
        private InputList<Inputs.DmsKafkaInstanceParameterArgs>? _parameters;
        public InputList<Inputs.DmsKafkaInstanceParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.DmsKafkaInstanceParameterArgs>());
            set => _parameters = value;
        }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("publicIpIds")]
        private InputList<string>? _publicIpIds;
        public InputList<string> PublicIpIds
        {
            get => _publicIpIds ?? (_publicIpIds = new InputList<string>());
            set => _publicIpIds = value;
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("retentionPolicy")]
        public Input<string>? RetentionPolicy { get; set; }

        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        [Input("securityProtocol")]
        public Input<string>? SecurityProtocol { get; set; }

        [Input("sslEnable")]
        public Input<bool>? SslEnable { get; set; }

        [Input("storageSpace")]
        public Input<int>? StorageSpace { get; set; }

        [Input("storageSpecCode", required: true)]
        public Input<string> StorageSpecCode { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcClientPlain")]
        public Input<bool>? VpcClientPlain { get; set; }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public DmsKafkaInstanceArgs()
        {
        }
        public static new DmsKafkaInstanceArgs Empty => new DmsKafkaInstanceArgs();
    }

    public sealed class DmsKafkaInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("accessUser")]
        public Input<string>? AccessUser { get; set; }

        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// schema: Required
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("availableZones")]
        private InputList<string>? _availableZones;
        [Obsolete(@"available_zones has deprecated, please use ""availability_zones"" instead.")]
        public InputList<string> AvailableZones
        {
            get => _availableZones ?? (_availableZones = new InputList<string>());
            set => _availableZones = value;
        }

        [Input("bandwidth")]
        public Input<string>? Bandwidth { get; set; }

        [Input("brokerNum")]
        public Input<int>? BrokerNum { get; set; }

        [Input("certReplaced")]
        public Input<bool>? CertReplaced { get; set; }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("connectAddress")]
        public Input<string>? ConnectAddress { get; set; }

        [Input("connectorId")]
        public Input<string>? ConnectorId { get; set; }

        [Input("connectorNodeNum")]
        public Input<int>? ConnectorNodeNum { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("crossVpcAccesses")]
        private InputList<Inputs.DmsKafkaInstanceCrossVpcAccessGetArgs>? _crossVpcAccesses;
        public InputList<Inputs.DmsKafkaInstanceCrossVpcAccessGetArgs> CrossVpcAccesses
        {
            get => _crossVpcAccesses ?? (_crossVpcAccesses = new InputList<Inputs.DmsKafkaInstanceCrossVpcAccessGetArgs>());
            set => _crossVpcAccesses = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dumping")]
        public Input<bool>? Dumping { get; set; }

        [Input("enableAutoTopic")]
        public Input<bool>? EnableAutoTopic { get; set; }

        [Input("enablePublicIp")]
        public Input<bool>? EnablePublicIp { get; set; }

        [Input("enabledMechanisms")]
        private InputList<string>? _enabledMechanisms;
        public InputList<string> EnabledMechanisms
        {
            get => _enabledMechanisms ?? (_enabledMechanisms = new InputList<string>());
            set => _enabledMechanisms = value;
        }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("extendTimes")]
        public Input<int>? ExtendTimes { get; set; }

        [Input("flavorId")]
        public Input<string>? FlavorId { get; set; }

        [Input("ipv6ConnectAddresses")]
        private InputList<string>? _ipv6ConnectAddresses;
        public InputList<string> Ipv6ConnectAddresses
        {
            get => _ipv6ConnectAddresses ?? (_ipv6ConnectAddresses = new InputList<string>());
            set => _ipv6ConnectAddresses = value;
        }

        [Input("ipv6Enable")]
        public Input<bool>? Ipv6Enable { get; set; }

        [Input("isLogicalVolume")]
        public Input<bool>? IsLogicalVolume { get; set; }

        [Input("maintainBegin")]
        public Input<string>? MaintainBegin { get; set; }

        [Input("maintainEnd")]
        public Input<string>? MaintainEnd { get; set; }

        [Input("managementConnectAddress")]
        public Input<string>? ManagementConnectAddress { get; set; }

        [Input("managerPassword")]
        private Input<string>? _managerPassword;
        [Obsolete(@"Deprecated")]
        public Input<string>? ManagerPassword
        {
            get => _managerPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _managerPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("managerUser")]
        public Input<string>? ManagerUser { get; set; }

        [Input("manegementConnectAddress")]
        public Input<string>? ManegementConnectAddress { get; set; }

        [Input("messageQueryInstEnable")]
        public Input<bool>? MessageQueryInstEnable { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("newTenantIps")]
        private InputList<string>? _newTenantIps;
        public InputList<string> NewTenantIps
        {
            get => _newTenantIps ?? (_newTenantIps = new InputList<string>());
            set => _newTenantIps = value;
        }

        [Input("nodeNum")]
        public Input<int>? NodeNum { get; set; }

        [Input("parameters")]
        private InputList<Inputs.DmsKafkaInstanceParameterGetArgs>? _parameters;
        public InputList<Inputs.DmsKafkaInstanceParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.DmsKafkaInstanceParameterGetArgs>());
            set => _parameters = value;
        }

        [Input("partitionNum")]
        public Input<int>? PartitionNum { get; set; }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("podConnectAddress")]
        public Input<string>? PodConnectAddress { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portProtocols")]
        private InputList<Inputs.DmsKafkaInstancePortProtocolGetArgs>? _portProtocols;
        public InputList<Inputs.DmsKafkaInstancePortProtocolGetArgs> PortProtocols
        {
            get => _portProtocols ?? (_portProtocols = new InputList<Inputs.DmsKafkaInstancePortProtocolGetArgs>());
            set => _portProtocols = value;
        }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("publicBandwidth")]
        public Input<int>? PublicBandwidth { get; set; }

        [Input("publicIpAddresses")]
        private InputList<string>? _publicIpAddresses;
        public InputList<string> PublicIpAddresses
        {
            get => _publicIpAddresses ?? (_publicIpAddresses = new InputList<string>());
            set => _publicIpAddresses = value;
        }

        [Input("publicIpIds")]
        private InputList<string>? _publicIpIds;
        public InputList<string> PublicIpIds
        {
            get => _publicIpIds ?? (_publicIpIds = new InputList<string>());
            set => _publicIpIds = value;
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("resourceSpecCode")]
        public Input<string>? ResourceSpecCode { get; set; }

        [Input("retentionPolicy")]
        public Input<string>? RetentionPolicy { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("securityProtocol")]
        public Input<string>? SecurityProtocol { get; set; }

        [Input("sslEnable")]
        public Input<bool>? SslEnable { get; set; }

        [Input("sslTwoWayEnable")]
        public Input<bool>? SslTwoWayEnable { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("storageResourceId")]
        public Input<string>? StorageResourceId { get; set; }

        [Input("storageSpace")]
        public Input<int>? StorageSpace { get; set; }

        [Input("storageSpecCode")]
        public Input<string>? StorageSpecCode { get; set; }

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("usedStorageSpace")]
        public Input<int>? UsedStorageSpace { get; set; }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("userName")]
        public Input<string>? UserName { get; set; }

        [Input("vpcClientPlain")]
        public Input<bool>? VpcClientPlain { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public DmsKafkaInstanceState()
        {
        }
        public static new DmsKafkaInstanceState Empty => new DmsKafkaInstanceState();
    }
}
