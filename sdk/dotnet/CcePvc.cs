// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/ccePvc:CcePvc")]
    public partial class CcePvc : global::Pulumi.CustomResource
    {
        [Output("accessModes")]
        public Output<ImmutableArray<string>> AccessModes { get; private set; } = null!;

        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>?> Annotations { get; private set; } = null!;

        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("storage")]
        public Output<string> Storage { get; private set; } = null!;

        [Output("storageClassName")]
        public Output<string> StorageClassName { get; private set; } = null!;


        /// <summary>
        /// Create a CcePvc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CcePvc(string name, CcePvcArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/ccePvc:CcePvc", name, args ?? new CcePvcArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CcePvc(string name, Input<string> id, CcePvcState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/ccePvc:CcePvc", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CcePvc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CcePvc Get(string name, Input<string> id, CcePvcState? state = null, CustomResourceOptions? options = null)
        {
            return new CcePvc(name, id, state, options);
        }
    }

    public sealed class CcePvcArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessModes", required: true)]
        private InputList<string>? _accessModes;
        public InputList<string> AccessModes
        {
            get => _accessModes ?? (_accessModes = new InputList<string>());
            set => _accessModes = value;
        }

        [Input("annotations")]
        private InputMap<string>? _annotations;
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("storage", required: true)]
        public Input<string> Storage { get; set; } = null!;

        [Input("storageClassName", required: true)]
        public Input<string> StorageClassName { get; set; } = null!;

        public CcePvcArgs()
        {
        }
        public static new CcePvcArgs Empty => new CcePvcArgs();
    }

    public sealed class CcePvcState : global::Pulumi.ResourceArgs
    {
        [Input("accessModes")]
        private InputList<string>? _accessModes;
        public InputList<string> AccessModes
        {
            get => _accessModes ?? (_accessModes = new InputList<string>());
            set => _accessModes = value;
        }

        [Input("annotations")]
        private InputMap<string>? _annotations;
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("storage")]
        public Input<string>? Storage { get; set; }

        [Input("storageClassName")]
        public Input<string>? StorageClassName { get; set; }

        public CcePvcState()
        {
        }
        public static new CcePvcState Empty => new CcePvcState();
    }
}
