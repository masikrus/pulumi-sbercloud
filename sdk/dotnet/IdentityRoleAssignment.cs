// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/identityRoleAssignment:IdentityRoleAssignment")]
    public partial class IdentityRoleAssignment : global::Pulumi.CustomResource
    {
        [Output("domainId")]
        public Output<string?> DomainId { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string?> EnterpriseProjectId { get; private set; } = null!;

        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        [Output("projectId")]
        public Output<string?> ProjectId { get; private set; } = null!;

        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;


        /// <summary>
        /// Create a IdentityRoleAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IdentityRoleAssignment(string name, IdentityRoleAssignmentArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityRoleAssignment:IdentityRoleAssignment", name, args ?? new IdentityRoleAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IdentityRoleAssignment(string name, Input<string> id, IdentityRoleAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityRoleAssignment:IdentityRoleAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IdentityRoleAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IdentityRoleAssignment Get(string name, Input<string> id, IdentityRoleAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new IdentityRoleAssignment(name, id, state, options);
        }
    }

    public sealed class IdentityRoleAssignmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("roleId", required: true)]
        public Input<string> RoleId { get; set; } = null!;

        public IdentityRoleAssignmentArgs()
        {
        }
        public static new IdentityRoleAssignmentArgs Empty => new IdentityRoleAssignmentArgs();
    }

    public sealed class IdentityRoleAssignmentState : global::Pulumi.ResourceArgs
    {
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        public IdentityRoleAssignmentState()
        {
        }
        public static new IdentityRoleAssignmentState Empty => new IdentityRoleAssignmentState();
    }
}
