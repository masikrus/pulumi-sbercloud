// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/networkingVipAssociate:NetworkingVipAssociate")]
    public partial class NetworkingVipAssociate : global::Pulumi.CustomResource
    {
        [Output("ipAddresses")]
        public Output<ImmutableArray<string>> IpAddresses { get; private set; } = null!;

        [Output("portIds")]
        public Output<ImmutableArray<string>> PortIds { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("vipId")]
        public Output<string> VipId { get; private set; } = null!;

        [Output("vipIpAddress")]
        public Output<string> VipIpAddress { get; private set; } = null!;

        [Output("vipSubnetId")]
        public Output<string> VipSubnetId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkingVipAssociate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkingVipAssociate(string name, NetworkingVipAssociateArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/networkingVipAssociate:NetworkingVipAssociate", name, args ?? new NetworkingVipAssociateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkingVipAssociate(string name, Input<string> id, NetworkingVipAssociateState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/networkingVipAssociate:NetworkingVipAssociate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkingVipAssociate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkingVipAssociate Get(string name, Input<string> id, NetworkingVipAssociateState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkingVipAssociate(name, id, state, options);
        }
    }

    public sealed class NetworkingVipAssociateArgs : global::Pulumi.ResourceArgs
    {
        [Input("portIds", required: true)]
        private InputList<string>? _portIds;
        public InputList<string> PortIds
        {
            get => _portIds ?? (_portIds = new InputList<string>());
            set => _portIds = value;
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("vipId", required: true)]
        public Input<string> VipId { get; set; } = null!;

        public NetworkingVipAssociateArgs()
        {
        }
        public static new NetworkingVipAssociateArgs Empty => new NetworkingVipAssociateArgs();
    }

    public sealed class NetworkingVipAssociateState : global::Pulumi.ResourceArgs
    {
        [Input("ipAddresses")]
        private InputList<string>? _ipAddresses;
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        [Input("portIds")]
        private InputList<string>? _portIds;
        public InputList<string> PortIds
        {
            get => _portIds ?? (_portIds = new InputList<string>());
            set => _portIds = value;
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("vipId")]
        public Input<string>? VipId { get; set; }

        [Input("vipIpAddress")]
        public Input<string>? VipIpAddress { get; set; }

        [Input("vipSubnetId")]
        public Input<string>? VipSubnetId { get; set; }

        public NetworkingVipAssociateState()
        {
        }
        public static new NetworkingVipAssociateState Empty => new NetworkingVipAssociateState();
    }
}
