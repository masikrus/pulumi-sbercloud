// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/sfsAccessRule:SfsAccessRule")]
    public partial class SfsAccessRule : global::Pulumi.CustomResource
    {
        [Output("accessLevel")]
        public Output<string?> AccessLevel { get; private set; } = null!;

        [Output("accessTo")]
        public Output<string> AccessTo { get; private set; } = null!;

        [Output("accessType")]
        public Output<string?> AccessType { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("sfsId")]
        public Output<string> SfsId { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a SfsAccessRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SfsAccessRule(string name, SfsAccessRuleArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/sfsAccessRule:SfsAccessRule", name, args ?? new SfsAccessRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SfsAccessRule(string name, Input<string> id, SfsAccessRuleState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/sfsAccessRule:SfsAccessRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SfsAccessRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SfsAccessRule Get(string name, Input<string> id, SfsAccessRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new SfsAccessRule(name, id, state, options);
        }
    }

    public sealed class SfsAccessRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        [Input("accessTo", required: true)]
        public Input<string> AccessTo { get; set; } = null!;

        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sfsId", required: true)]
        public Input<string> SfsId { get; set; } = null!;

        public SfsAccessRuleArgs()
        {
        }
        public static new SfsAccessRuleArgs Empty => new SfsAccessRuleArgs();
    }

    public sealed class SfsAccessRuleState : global::Pulumi.ResourceArgs
    {
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        [Input("accessTo")]
        public Input<string>? AccessTo { get; set; }

        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sfsId")]
        public Input<string>? SfsId { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public SfsAccessRuleState()
        {
        }
        public static new SfsAccessRuleState Empty => new SfsAccessRuleState();
    }
}
