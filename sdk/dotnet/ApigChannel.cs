// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/apigChannel:ApigChannel")]
    public partial class ApigChannel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The distribution algorithm.
        /// </summary>
        [Output("balanceStrategy")]
        public Output<int> BalanceStrategy { get; private set; } = null!;

        /// <summary>
        /// The creation time of the channel.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The health configuration of cloud servers associated with the load balance channel for APIG regularly check.
        /// </summary>
        [Output("healthCheck")]
        public Output<Outputs.ApigChannelHealthCheck> HealthCheck { get; private set; } = null!;

        /// <summary>
        /// The ID of the dedicated instance to which the channel belongs.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The backend server groups of the channel.
        /// </summary>
        [Output("memberGroups")]
        public Output<ImmutableArray<Outputs.ApigChannelMemberGroup>> MemberGroups { get; private set; } = null!;

        /// <summary>
        /// The member type of the channel.
        /// </summary>
        [Output("memberType")]
        public Output<string> MemberType { get; private set; } = null!;

        /// <summary>
        /// The backend servers of the channel.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Outputs.ApigChannelMember>> Members { get; private set; } = null!;

        /// <summary>
        /// The configuration of the microservice.
        /// </summary>
        [Output("microservice")]
        public Output<Outputs.ApigChannelMicroservice> Microservice { get; private set; } = null!;

        /// <summary>
        /// The channel name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The default port for health check in channel.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// The region where the dedicated instance is located.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The current status of the channel.
        /// </summary>
        [Output("status")]
        public Output<int> Status { get; private set; } = null!;

        /// <summary>
        /// The type of the channel.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ApigChannel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigChannel(string name, ApigChannelArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigChannel:ApigChannel", name, args ?? new ApigChannelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigChannel(string name, Input<string> id, ApigChannelState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigChannel:ApigChannel", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigChannel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigChannel Get(string name, Input<string> id, ApigChannelState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigChannel(name, id, state, options);
        }
    }

    public sealed class ApigChannelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The distribution algorithm.
        /// </summary>
        [Input("balanceStrategy", required: true)]
        public Input<int> BalanceStrategy { get; set; } = null!;

        /// <summary>
        /// The health configuration of cloud servers associated with the load balance channel for APIG regularly check.
        /// </summary>
        [Input("healthCheck")]
        public Input<Inputs.ApigChannelHealthCheckArgs>? HealthCheck { get; set; }

        /// <summary>
        /// The ID of the dedicated instance to which the channel belongs.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("memberGroups")]
        private InputList<Inputs.ApigChannelMemberGroupArgs>? _memberGroups;

        /// <summary>
        /// The backend server groups of the channel.
        /// </summary>
        public InputList<Inputs.ApigChannelMemberGroupArgs> MemberGroups
        {
            get => _memberGroups ?? (_memberGroups = new InputList<Inputs.ApigChannelMemberGroupArgs>());
            set => _memberGroups = value;
        }

        /// <summary>
        /// The member type of the channel.
        /// </summary>
        [Input("memberType")]
        public Input<string>? MemberType { get; set; }

        [Input("members")]
        private InputList<Inputs.ApigChannelMemberArgs>? _members;

        /// <summary>
        /// The backend servers of the channel.
        /// </summary>
        public InputList<Inputs.ApigChannelMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.ApigChannelMemberArgs>());
            set => _members = value;
        }

        /// <summary>
        /// The configuration of the microservice.
        /// </summary>
        [Input("microservice")]
        public Input<Inputs.ApigChannelMicroserviceArgs>? Microservice { get; set; }

        /// <summary>
        /// The channel name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The default port for health check in channel.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The region where the dedicated instance is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The type of the channel.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ApigChannelArgs()
        {
        }
        public static new ApigChannelArgs Empty => new ApigChannelArgs();
    }

    public sealed class ApigChannelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The distribution algorithm.
        /// </summary>
        [Input("balanceStrategy")]
        public Input<int>? BalanceStrategy { get; set; }

        /// <summary>
        /// The creation time of the channel.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The health configuration of cloud servers associated with the load balance channel for APIG regularly check.
        /// </summary>
        [Input("healthCheck")]
        public Input<Inputs.ApigChannelHealthCheckGetArgs>? HealthCheck { get; set; }

        /// <summary>
        /// The ID of the dedicated instance to which the channel belongs.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("memberGroups")]
        private InputList<Inputs.ApigChannelMemberGroupGetArgs>? _memberGroups;

        /// <summary>
        /// The backend server groups of the channel.
        /// </summary>
        public InputList<Inputs.ApigChannelMemberGroupGetArgs> MemberGroups
        {
            get => _memberGroups ?? (_memberGroups = new InputList<Inputs.ApigChannelMemberGroupGetArgs>());
            set => _memberGroups = value;
        }

        /// <summary>
        /// The member type of the channel.
        /// </summary>
        [Input("memberType")]
        public Input<string>? MemberType { get; set; }

        [Input("members")]
        private InputList<Inputs.ApigChannelMemberGetArgs>? _members;

        /// <summary>
        /// The backend servers of the channel.
        /// </summary>
        public InputList<Inputs.ApigChannelMemberGetArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.ApigChannelMemberGetArgs>());
            set => _members = value;
        }

        /// <summary>
        /// The configuration of the microservice.
        /// </summary>
        [Input("microservice")]
        public Input<Inputs.ApigChannelMicroserviceGetArgs>? Microservice { get; set; }

        /// <summary>
        /// The channel name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The default port for health check in channel.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The region where the dedicated instance is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The current status of the channel.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// The type of the channel.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ApigChannelState()
        {
        }
        public static new ApigChannelState Empty => new ApigChannelState();
    }
}
