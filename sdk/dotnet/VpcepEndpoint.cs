// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/vpcepEndpoint:VpcepEndpoint")]
    public partial class VpcepEndpoint : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("enableDns")]
        public Output<bool?> EnableDns { get; private set; } = null!;

        [Output("enableWhitelist")]
        public Output<bool?> EnableWhitelist { get; private set; } = null!;

        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        [Output("packetId")]
        public Output<int> PacketId { get; private set; } = null!;

        [Output("privateDomainName")]
        public Output<string> PrivateDomainName { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        [Output("serviceType")]
        public Output<string> ServiceType { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        [Output("whitelists")]
        public Output<ImmutableArray<string>> Whitelists { get; private set; } = null!;


        /// <summary>
        /// Create a VpcepEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcepEndpoint(string name, VpcepEndpointArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcepEndpoint:VpcepEndpoint", name, args ?? new VpcepEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcepEndpoint(string name, Input<string> id, VpcepEndpointState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcepEndpoint:VpcepEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcepEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcepEndpoint Get(string name, Input<string> id, VpcepEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcepEndpoint(name, id, state, options);
        }
    }

    public sealed class VpcepEndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enableDns")]
        public Input<bool>? EnableDns { get; set; }

        [Input("enableWhitelist")]
        public Input<bool>? EnableWhitelist { get; set; }

        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        [Input("whitelists")]
        private InputList<string>? _whitelists;
        public InputList<string> Whitelists
        {
            get => _whitelists ?? (_whitelists = new InputList<string>());
            set => _whitelists = value;
        }

        public VpcepEndpointArgs()
        {
        }
        public static new VpcepEndpointArgs Empty => new VpcepEndpointArgs();
    }

    public sealed class VpcepEndpointState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enableDns")]
        public Input<bool>? EnableDns { get; set; }

        [Input("enableWhitelist")]
        public Input<bool>? EnableWhitelist { get; set; }

        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("packetId")]
        public Input<int>? PacketId { get; set; }

        [Input("privateDomainName")]
        public Input<string>? PrivateDomainName { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("whitelists")]
        private InputList<string>? _whitelists;
        public InputList<string> Whitelists
        {
            get => _whitelists ?? (_whitelists = new InputList<string>());
            set => _whitelists = value;
        }

        public VpcepEndpointState()
        {
        }
        public static new VpcepEndpointState Empty => new VpcepEndpointState();
    }
}
