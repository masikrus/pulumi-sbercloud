// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/lbMember:LbMember")]
    public partial class LbMember : global::Pulumi.CustomResource
    {
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        [Output("adminStateUp")]
        public Output<bool?> AdminStateUp { get; private set; } = null!;

        [Output("backendServerStatus")]
        public Output<bool> BackendServerStatus { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("operatingStatus")]
        public Output<string> OperatingStatus { get; private set; } = null!;

        [Output("poolId")]
        public Output<string> PoolId { get; private set; } = null!;

        [Output("protocolPort")]
        public Output<int> ProtocolPort { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// the IPv4 subnet ID of the subnet in which to access the member
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        [Output("weight")]
        public Output<int> Weight { get; private set; } = null!;


        /// <summary>
        /// Create a LbMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LbMember(string name, LbMemberArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbMember:LbMember", name, args ?? new LbMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LbMember(string name, Input<string> id, LbMemberState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbMember:LbMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LbMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LbMember Get(string name, Input<string> id, LbMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new LbMember(name, id, state, options);
        }
    }

    public sealed class LbMemberArgs : global::Pulumi.ResourceArgs
    {
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        [Input("adminStateUp")]
        public Input<bool>? AdminStateUp { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("poolId", required: true)]
        public Input<string> PoolId { get; set; } = null!;

        [Input("protocolPort", required: true)]
        public Input<int> ProtocolPort { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// the IPv4 subnet ID of the subnet in which to access the member
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public LbMemberArgs()
        {
        }
        public static new LbMemberArgs Empty => new LbMemberArgs();
    }

    public sealed class LbMemberState : global::Pulumi.ResourceArgs
    {
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        [Input("adminStateUp")]
        public Input<bool>? AdminStateUp { get; set; }

        [Input("backendServerStatus")]
        public Input<bool>? BackendServerStatus { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("operatingStatus")]
        public Input<string>? OperatingStatus { get; set; }

        [Input("poolId")]
        public Input<string>? PoolId { get; set; }

        [Input("protocolPort")]
        public Input<int>? ProtocolPort { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// the IPv4 subnet ID of the subnet in which to access the member
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public LbMemberState()
        {
        }
        public static new LbMemberState Empty => new LbMemberState();
    }
}
