// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/rdsMysqlDatabaseTableRestore:RdsMysqlDatabaseTableRestore")]
    public partial class RdsMysqlDatabaseTableRestore : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the databases that will be restored.
        /// </summary>
        [Output("databases")]
        public Output<ImmutableArray<Outputs.RdsMysqlDatabaseTableRestoreDatabase>> Databases { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of RDS MySQL instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to use fast restoration.
        /// </summary>
        [Output("isFastRestore")]
        public Output<bool?> IsFastRestore { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Specifies the tables that will be restored.
        /// </summary>
        [Output("restoreTables")]
        public Output<ImmutableArray<Outputs.RdsMysqlDatabaseTableRestoreRestoreTable>> RestoreTables { get; private set; } = null!;

        /// <summary>
        /// Specifies the restoration time point.
        /// </summary>
        [Output("restoreTime")]
        public Output<int> RestoreTime { get; private set; } = null!;


        /// <summary>
        /// Create a RdsMysqlDatabaseTableRestore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RdsMysqlDatabaseTableRestore(string name, RdsMysqlDatabaseTableRestoreArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/rdsMysqlDatabaseTableRestore:RdsMysqlDatabaseTableRestore", name, args ?? new RdsMysqlDatabaseTableRestoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RdsMysqlDatabaseTableRestore(string name, Input<string> id, RdsMysqlDatabaseTableRestoreState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/rdsMysqlDatabaseTableRestore:RdsMysqlDatabaseTableRestore", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RdsMysqlDatabaseTableRestore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RdsMysqlDatabaseTableRestore Get(string name, Input<string> id, RdsMysqlDatabaseTableRestoreState? state = null, CustomResourceOptions? options = null)
        {
            return new RdsMysqlDatabaseTableRestore(name, id, state, options);
        }
    }

    public sealed class RdsMysqlDatabaseTableRestoreArgs : global::Pulumi.ResourceArgs
    {
        [Input("databases")]
        private InputList<Inputs.RdsMysqlDatabaseTableRestoreDatabaseArgs>? _databases;

        /// <summary>
        /// Specifies the databases that will be restored.
        /// </summary>
        public InputList<Inputs.RdsMysqlDatabaseTableRestoreDatabaseArgs> Databases
        {
            get => _databases ?? (_databases = new InputList<Inputs.RdsMysqlDatabaseTableRestoreDatabaseArgs>());
            set => _databases = value;
        }

        /// <summary>
        /// Specifies the ID of RDS MySQL instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Specifies whether to use fast restoration.
        /// </summary>
        [Input("isFastRestore")]
        public Input<bool>? IsFastRestore { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("restoreTables")]
        private InputList<Inputs.RdsMysqlDatabaseTableRestoreRestoreTableArgs>? _restoreTables;

        /// <summary>
        /// Specifies the tables that will be restored.
        /// </summary>
        public InputList<Inputs.RdsMysqlDatabaseTableRestoreRestoreTableArgs> RestoreTables
        {
            get => _restoreTables ?? (_restoreTables = new InputList<Inputs.RdsMysqlDatabaseTableRestoreRestoreTableArgs>());
            set => _restoreTables = value;
        }

        /// <summary>
        /// Specifies the restoration time point.
        /// </summary>
        [Input("restoreTime", required: true)]
        public Input<int> RestoreTime { get; set; } = null!;

        public RdsMysqlDatabaseTableRestoreArgs()
        {
        }
        public static new RdsMysqlDatabaseTableRestoreArgs Empty => new RdsMysqlDatabaseTableRestoreArgs();
    }

    public sealed class RdsMysqlDatabaseTableRestoreState : global::Pulumi.ResourceArgs
    {
        [Input("databases")]
        private InputList<Inputs.RdsMysqlDatabaseTableRestoreDatabaseGetArgs>? _databases;

        /// <summary>
        /// Specifies the databases that will be restored.
        /// </summary>
        public InputList<Inputs.RdsMysqlDatabaseTableRestoreDatabaseGetArgs> Databases
        {
            get => _databases ?? (_databases = new InputList<Inputs.RdsMysqlDatabaseTableRestoreDatabaseGetArgs>());
            set => _databases = value;
        }

        /// <summary>
        /// Specifies the ID of RDS MySQL instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Specifies whether to use fast restoration.
        /// </summary>
        [Input("isFastRestore")]
        public Input<bool>? IsFastRestore { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("restoreTables")]
        private InputList<Inputs.RdsMysqlDatabaseTableRestoreRestoreTableGetArgs>? _restoreTables;

        /// <summary>
        /// Specifies the tables that will be restored.
        /// </summary>
        public InputList<Inputs.RdsMysqlDatabaseTableRestoreRestoreTableGetArgs> RestoreTables
        {
            get => _restoreTables ?? (_restoreTables = new InputList<Inputs.RdsMysqlDatabaseTableRestoreRestoreTableGetArgs>());
            set => _restoreTables = value;
        }

        /// <summary>
        /// Specifies the restoration time point.
        /// </summary>
        [Input("restoreTime")]
        public Input<int>? RestoreTime { get; set; }

        public RdsMysqlDatabaseTableRestoreState()
        {
        }
        public static new RdsMysqlDatabaseTableRestoreState Empty => new RdsMysqlDatabaseTableRestoreState();
    }
}
