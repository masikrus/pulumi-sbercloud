// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/ltsStream:LtsStream")]
    public partial class LtsStream : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("filterCount")]
        public Output<int> FilterCount { get; private set; } = null!;

        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("streamName")]
        public Output<string> StreamName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("ttlInDays")]
        public Output<int> TtlInDays { get; private set; } = null!;


        /// <summary>
        /// Create a LtsStream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LtsStream(string name, LtsStreamArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/ltsStream:LtsStream", name, args ?? new LtsStreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LtsStream(string name, Input<string> id, LtsStreamState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/ltsStream:LtsStream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LtsStream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LtsStream Get(string name, Input<string> id, LtsStreamState? state = null, CustomResourceOptions? options = null)
        {
            return new LtsStream(name, id, state, options);
        }
    }

    public sealed class LtsStreamArgs : global::Pulumi.ResourceArgs
    {
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("streamName", required: true)]
        public Input<string> StreamName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("ttlInDays")]
        public Input<int>? TtlInDays { get; set; }

        public LtsStreamArgs()
        {
        }
        public static new LtsStreamArgs Empty => new LtsStreamArgs();
    }

    public sealed class LtsStreamState : global::Pulumi.ResourceArgs
    {
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("filterCount")]
        public Input<int>? FilterCount { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("streamName")]
        public Input<string>? StreamName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("ttlInDays")]
        public Input<int>? TtlInDays { get; set; }

        public LtsStreamState()
        {
        }
        public static new LtsStreamState Empty => new LtsStreamState();
    }
}
