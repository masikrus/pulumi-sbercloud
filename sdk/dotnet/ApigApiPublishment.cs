// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/apigApiPublishment:ApigApiPublishment")]
    public partial class ApigApiPublishment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the API to be published or already published.
        /// </summary>
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        /// <summary>
        /// The description of the current publishment.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the environment to which the current version of the API will be published or has been published.
        /// </summary>
        [Output("envId")]
        public Output<string> EnvId { get; private set; } = null!;

        /// <summary>
        /// The name of the environment to which the current version of the API is published.
        /// </summary>
        [Output("envName")]
        public Output<string> EnvName { get; private set; } = null!;

        /// <summary>
        /// All publish informations of the API.
        /// </summary>
        [Output("histories")]
        public Output<ImmutableArray<Outputs.ApigApiPublishmentHistory>> Histories { get; private set; } = null!;

        /// <summary>
        /// The ID of the dedicated instance to which the API and the environment belongs.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The publish ID of the API in current environment.
        /// </summary>
        [Output("publishId")]
        public Output<string> PublishId { get; private set; } = null!;

        /// <summary>
        /// Time when the current version was published.
        /// </summary>
        [Output("publishedAt")]
        public Output<string> PublishedAt { get; private set; } = null!;

        /// <summary>
        /// The region in which to publish API.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The version ID of the current publishment.
        /// </summary>
        [Output("versionId")]
        public Output<string?> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a ApigApiPublishment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigApiPublishment(string name, ApigApiPublishmentArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigApiPublishment:ApigApiPublishment", name, args ?? new ApigApiPublishmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigApiPublishment(string name, Input<string> id, ApigApiPublishmentState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigApiPublishment:ApigApiPublishment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigApiPublishment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigApiPublishment Get(string name, Input<string> id, ApigApiPublishmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigApiPublishment(name, id, state, options);
        }
    }

    public sealed class ApigApiPublishmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the API to be published or already published.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// The description of the current publishment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the environment to which the current version of the API will be published or has been published.
        /// </summary>
        [Input("envId", required: true)]
        public Input<string> EnvId { get; set; } = null!;

        /// <summary>
        /// The ID of the dedicated instance to which the API and the environment belongs.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The region in which to publish API.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The version ID of the current publishment.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public ApigApiPublishmentArgs()
        {
        }
        public static new ApigApiPublishmentArgs Empty => new ApigApiPublishmentArgs();
    }

    public sealed class ApigApiPublishmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the API to be published or already published.
        /// </summary>
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        /// <summary>
        /// The description of the current publishment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the environment to which the current version of the API will be published or has been published.
        /// </summary>
        [Input("envId")]
        public Input<string>? EnvId { get; set; }

        /// <summary>
        /// The name of the environment to which the current version of the API is published.
        /// </summary>
        [Input("envName")]
        public Input<string>? EnvName { get; set; }

        [Input("histories")]
        private InputList<Inputs.ApigApiPublishmentHistoryGetArgs>? _histories;

        /// <summary>
        /// All publish informations of the API.
        /// </summary>
        public InputList<Inputs.ApigApiPublishmentHistoryGetArgs> Histories
        {
            get => _histories ?? (_histories = new InputList<Inputs.ApigApiPublishmentHistoryGetArgs>());
            set => _histories = value;
        }

        /// <summary>
        /// The ID of the dedicated instance to which the API and the environment belongs.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The publish ID of the API in current environment.
        /// </summary>
        [Input("publishId")]
        public Input<string>? PublishId { get; set; }

        /// <summary>
        /// Time when the current version was published.
        /// </summary>
        [Input("publishedAt")]
        public Input<string>? PublishedAt { get; set; }

        /// <summary>
        /// The region in which to publish API.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The version ID of the current publishment.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public ApigApiPublishmentState()
        {
        }
        public static new ApigApiPublishmentState Empty => new ApigApiPublishmentState();
    }
}
