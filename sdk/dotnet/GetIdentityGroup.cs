// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetIdentityGroup
    {
        public static Task<GetIdentityGroupResult> InvokeAsync(GetIdentityGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIdentityGroupResult>("sbercloud:index/getIdentityGroup:getIdentityGroup", args ?? new GetIdentityGroupArgs(), options.WithDefaults());

        public static Output<GetIdentityGroupResult> Invoke(GetIdentityGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdentityGroupResult>("sbercloud:index/getIdentityGroup:getIdentityGroup", args ?? new GetIdentityGroupInvokeArgs(), options.WithDefaults());

        public static Output<GetIdentityGroupResult> Invoke(GetIdentityGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdentityGroupResult>("sbercloud:index/getIdentityGroup:getIdentityGroup", args ?? new GetIdentityGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIdentityGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetIdentityGroupArgs()
        {
        }
        public static new GetIdentityGroupArgs Empty => new GetIdentityGroupArgs();
    }

    public sealed class GetIdentityGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetIdentityGroupInvokeArgs()
        {
        }
        public static new GetIdentityGroupInvokeArgs Empty => new GetIdentityGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetIdentityGroupResult
    {
        public readonly string Description;
        public readonly string DomainId;
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetIdentityGroupUserResult> Users;

        [OutputConstructor]
        private GetIdentityGroupResult(
            string description,

            string domainId,

            string id,

            string name,

            ImmutableArray<Outputs.GetIdentityGroupUserResult> users)
        {
            Description = description;
            DomainId = domainId;
            Id = id;
            Name = name;
            Users = users;
        }
    }
}
