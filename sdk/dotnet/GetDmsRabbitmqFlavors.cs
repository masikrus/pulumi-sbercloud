// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetDmsRabbitmqFlavors
    {
        public static Task<GetDmsRabbitmqFlavorsResult> InvokeAsync(GetDmsRabbitmqFlavorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDmsRabbitmqFlavorsResult>("sbercloud:index/getDmsRabbitmqFlavors:getDmsRabbitmqFlavors", args ?? new GetDmsRabbitmqFlavorsArgs(), options.WithDefaults());

        public static Output<GetDmsRabbitmqFlavorsResult> Invoke(GetDmsRabbitmqFlavorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDmsRabbitmqFlavorsResult>("sbercloud:index/getDmsRabbitmqFlavors:getDmsRabbitmqFlavors", args ?? new GetDmsRabbitmqFlavorsInvokeArgs(), options.WithDefaults());

        public static Output<GetDmsRabbitmqFlavorsResult> Invoke(GetDmsRabbitmqFlavorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDmsRabbitmqFlavorsResult>("sbercloud:index/getDmsRabbitmqFlavors:getDmsRabbitmqFlavors", args ?? new GetDmsRabbitmqFlavorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDmsRabbitmqFlavorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("archType")]
        public string? ArchType { get; set; }

        [Input("availabilityZones")]
        private List<string>? _availabilityZones;
        public List<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new List<string>());
            set => _availabilityZones = value;
        }

        [Input("chargingMode")]
        public string? ChargingMode { get; set; }

        [Input("flavorId")]
        public string? FlavorId { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("storageSpecCode")]
        public string? StorageSpecCode { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetDmsRabbitmqFlavorsArgs()
        {
        }
        public static new GetDmsRabbitmqFlavorsArgs Empty => new GetDmsRabbitmqFlavorsArgs();
    }

    public sealed class GetDmsRabbitmqFlavorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("flavorId")]
        public Input<string>? FlavorId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("storageSpecCode")]
        public Input<string>? StorageSpecCode { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetDmsRabbitmqFlavorsInvokeArgs()
        {
        }
        public static new GetDmsRabbitmqFlavorsInvokeArgs Empty => new GetDmsRabbitmqFlavorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDmsRabbitmqFlavorsResult
    {
        public readonly string? ArchType;
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly string? ChargingMode;
        public readonly string? FlavorId;
        public readonly ImmutableArray<Outputs.GetDmsRabbitmqFlavorsFlavorResult> Flavors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Region;
        public readonly string? StorageSpecCode;
        public readonly string? Type;
        public readonly ImmutableArray<string> Versions;

        [OutputConstructor]
        private GetDmsRabbitmqFlavorsResult(
            string? archType,

            ImmutableArray<string> availabilityZones,

            string? chargingMode,

            string? flavorId,

            ImmutableArray<Outputs.GetDmsRabbitmqFlavorsFlavorResult> flavors,

            string id,

            string region,

            string? storageSpecCode,

            string? type,

            ImmutableArray<string> versions)
        {
            ArchType = archType;
            AvailabilityZones = availabilityZones;
            ChargingMode = chargingMode;
            FlavorId = flavorId;
            Flavors = flavors;
            Id = id;
            Region = region;
            StorageSpecCode = storageSpecCode;
            Type = type;
            Versions = versions;
        }
    }
}
