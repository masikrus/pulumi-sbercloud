// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/obsBucketAcl:ObsBucketAcl")]
    public partial class ObsBucketAcl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the account permissions.
        /// </summary>
        [Output("accountPermissions")]
        public Output<ImmutableArray<Outputs.ObsBucketAclAccountPermission>> AccountPermissions { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the bucket to which to set the acl.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Specifies the log delivery user permission.
        /// </summary>
        [Output("logDeliveryUserPermission")]
        public Output<Outputs.ObsBucketAclLogDeliveryUserPermission?> LogDeliveryUserPermission { get; private set; } = null!;

        /// <summary>
        /// Specifies the bucket owner permission.
        /// </summary>
        [Output("ownerPermission")]
        public Output<Outputs.ObsBucketAclOwnerPermission> OwnerPermission { get; private set; } = null!;

        /// <summary>
        /// Specifies the public permission.
        /// </summary>
        [Output("publicPermission")]
        public Output<Outputs.ObsBucketAclPublicPermission?> PublicPermission { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a ObsBucketAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObsBucketAcl(string name, ObsBucketAclArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/obsBucketAcl:ObsBucketAcl", name, args ?? new ObsBucketAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObsBucketAcl(string name, Input<string> id, ObsBucketAclState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/obsBucketAcl:ObsBucketAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObsBucketAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObsBucketAcl Get(string name, Input<string> id, ObsBucketAclState? state = null, CustomResourceOptions? options = null)
        {
            return new ObsBucketAcl(name, id, state, options);
        }
    }

    public sealed class ObsBucketAclArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountPermissions")]
        private InputList<Inputs.ObsBucketAclAccountPermissionArgs>? _accountPermissions;

        /// <summary>
        /// Specifies the account permissions.
        /// </summary>
        public InputList<Inputs.ObsBucketAclAccountPermissionArgs> AccountPermissions
        {
            get => _accountPermissions ?? (_accountPermissions = new InputList<Inputs.ObsBucketAclAccountPermissionArgs>());
            set => _accountPermissions = value;
        }

        /// <summary>
        /// Specifies the name of the bucket to which to set the acl.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Specifies the log delivery user permission.
        /// </summary>
        [Input("logDeliveryUserPermission")]
        public Input<Inputs.ObsBucketAclLogDeliveryUserPermissionArgs>? LogDeliveryUserPermission { get; set; }

        /// <summary>
        /// Specifies the bucket owner permission.
        /// </summary>
        [Input("ownerPermission")]
        public Input<Inputs.ObsBucketAclOwnerPermissionArgs>? OwnerPermission { get; set; }

        /// <summary>
        /// Specifies the public permission.
        /// </summary>
        [Input("publicPermission")]
        public Input<Inputs.ObsBucketAclPublicPermissionArgs>? PublicPermission { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public ObsBucketAclArgs()
        {
        }
        public static new ObsBucketAclArgs Empty => new ObsBucketAclArgs();
    }

    public sealed class ObsBucketAclState : global::Pulumi.ResourceArgs
    {
        [Input("accountPermissions")]
        private InputList<Inputs.ObsBucketAclAccountPermissionGetArgs>? _accountPermissions;

        /// <summary>
        /// Specifies the account permissions.
        /// </summary>
        public InputList<Inputs.ObsBucketAclAccountPermissionGetArgs> AccountPermissions
        {
            get => _accountPermissions ?? (_accountPermissions = new InputList<Inputs.ObsBucketAclAccountPermissionGetArgs>());
            set => _accountPermissions = value;
        }

        /// <summary>
        /// Specifies the name of the bucket to which to set the acl.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Specifies the log delivery user permission.
        /// </summary>
        [Input("logDeliveryUserPermission")]
        public Input<Inputs.ObsBucketAclLogDeliveryUserPermissionGetArgs>? LogDeliveryUserPermission { get; set; }

        /// <summary>
        /// Specifies the bucket owner permission.
        /// </summary>
        [Input("ownerPermission")]
        public Input<Inputs.ObsBucketAclOwnerPermissionGetArgs>? OwnerPermission { get; set; }

        /// <summary>
        /// Specifies the public permission.
        /// </summary>
        [Input("publicPermission")]
        public Input<Inputs.ObsBucketAclPublicPermissionGetArgs>? PublicPermission { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public ObsBucketAclState()
        {
        }
        public static new ObsBucketAclState Empty => new ObsBucketAclState();
    }
}
