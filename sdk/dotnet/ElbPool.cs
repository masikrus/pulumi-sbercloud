// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/elbPool:ElbPool")]
    public partial class ElbPool : global::Pulumi.CustomResource
    {
        [Output("anyPortEnable")]
        public Output<bool> AnyPortEnable { get; private set; } = null!;

        [Output("connectionDrainEnabled")]
        public Output<bool> ConnectionDrainEnabled { get; private set; } = null!;

        [Output("connectionDrainTimeout")]
        public Output<int> ConnectionDrainTimeout { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("deletionProtectionEnable")]
        public Output<bool?> DeletionProtectionEnable { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("ipVersion")]
        public Output<string> IpVersion { get; private set; } = null!;

        [Output("lbMethod")]
        public Output<string> LbMethod { get; private set; } = null!;

        [Output("listenerId")]
        public Output<string> ListenerId { get; private set; } = null!;

        [Output("loadbalancerId")]
        public Output<string> LoadbalancerId { get; private set; } = null!;

        [Output("minimumHealthyMemberCount")]
        public Output<int> MinimumHealthyMemberCount { get; private set; } = null!;

        [Output("monitorId")]
        public Output<string> MonitorId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("persistence")]
        public Output<Outputs.ElbPoolPersistence?> Persistence { get; private set; } = null!;

        [Output("protectionReason")]
        public Output<string?> ProtectionReason { get; private set; } = null!;

        [Output("protectionStatus")]
        public Output<string> ProtectionStatus { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("slowStartDuration")]
        public Output<int> SlowStartDuration { get; private set; } = null!;

        [Output("slowStartEnabled")]
        public Output<bool> SlowStartEnabled { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a ElbPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElbPool(string name, ElbPoolArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/elbPool:ElbPool", name, args ?? new ElbPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElbPool(string name, Input<string> id, ElbPoolState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/elbPool:ElbPool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElbPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElbPool Get(string name, Input<string> id, ElbPoolState? state = null, CustomResourceOptions? options = null)
        {
            return new ElbPool(name, id, state, options);
        }
    }

    public sealed class ElbPoolArgs : global::Pulumi.ResourceArgs
    {
        [Input("anyPortEnable")]
        public Input<bool>? AnyPortEnable { get; set; }

        [Input("connectionDrainEnabled")]
        public Input<bool>? ConnectionDrainEnabled { get; set; }

        [Input("connectionDrainTimeout")]
        public Input<int>? ConnectionDrainTimeout { get; set; }

        [Input("deletionProtectionEnable")]
        public Input<bool>? DeletionProtectionEnable { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        [Input("lbMethod", required: true)]
        public Input<string> LbMethod { get; set; } = null!;

        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        [Input("loadbalancerId")]
        public Input<string>? LoadbalancerId { get; set; }

        [Input("minimumHealthyMemberCount")]
        public Input<int>? MinimumHealthyMemberCount { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("persistence")]
        public Input<Inputs.ElbPoolPersistenceArgs>? Persistence { get; set; }

        [Input("protectionReason")]
        public Input<string>? ProtectionReason { get; set; }

        [Input("protectionStatus")]
        public Input<string>? ProtectionStatus { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("slowStartDuration")]
        public Input<int>? SlowStartDuration { get; set; }

        [Input("slowStartEnabled")]
        public Input<bool>? SlowStartEnabled { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public ElbPoolArgs()
        {
        }
        public static new ElbPoolArgs Empty => new ElbPoolArgs();
    }

    public sealed class ElbPoolState : global::Pulumi.ResourceArgs
    {
        [Input("anyPortEnable")]
        public Input<bool>? AnyPortEnable { get; set; }

        [Input("connectionDrainEnabled")]
        public Input<bool>? ConnectionDrainEnabled { get; set; }

        [Input("connectionDrainTimeout")]
        public Input<int>? ConnectionDrainTimeout { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("deletionProtectionEnable")]
        public Input<bool>? DeletionProtectionEnable { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        [Input("lbMethod")]
        public Input<string>? LbMethod { get; set; }

        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        [Input("loadbalancerId")]
        public Input<string>? LoadbalancerId { get; set; }

        [Input("minimumHealthyMemberCount")]
        public Input<int>? MinimumHealthyMemberCount { get; set; }

        [Input("monitorId")]
        public Input<string>? MonitorId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("persistence")]
        public Input<Inputs.ElbPoolPersistenceGetArgs>? Persistence { get; set; }

        [Input("protectionReason")]
        public Input<string>? ProtectionReason { get; set; }

        [Input("protectionStatus")]
        public Input<string>? ProtectionStatus { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("slowStartDuration")]
        public Input<int>? SlowStartDuration { get; set; }

        [Input("slowStartEnabled")]
        public Input<bool>? SlowStartEnabled { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public ElbPoolState()
        {
        }
        public static new ElbPoolState Empty => new ElbPoolState();
    }
}
