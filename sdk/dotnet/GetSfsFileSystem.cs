// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetSfsFileSystem
    {
        public static Task<GetSfsFileSystemResult> InvokeAsync(GetSfsFileSystemArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSfsFileSystemResult>("sbercloud:index/getSfsFileSystem:getSfsFileSystem", args ?? new GetSfsFileSystemArgs(), options.WithDefaults());

        public static Output<GetSfsFileSystemResult> Invoke(GetSfsFileSystemInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSfsFileSystemResult>("sbercloud:index/getSfsFileSystem:getSfsFileSystem", args ?? new GetSfsFileSystemInvokeArgs(), options.WithDefaults());

        public static Output<GetSfsFileSystemResult> Invoke(GetSfsFileSystemInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSfsFileSystemResult>("sbercloud:index/getSfsFileSystem:getSfsFileSystem", args ?? new GetSfsFileSystemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSfsFileSystemArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        public GetSfsFileSystemArgs()
        {
        }
        public static new GetSfsFileSystemArgs Empty => new GetSfsFileSystemArgs();
    }

    public sealed class GetSfsFileSystemInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetSfsFileSystemInvokeArgs()
        {
        }
        public static new GetSfsFileSystemInvokeArgs Empty => new GetSfsFileSystemInvokeArgs();
    }


    [OutputType]
    public sealed class GetSfsFileSystemResult
    {
        public readonly string AccessLevel;
        public readonly string AccessTo;
        public readonly string AccessType;
        public readonly string AvailabilityZone;
        public readonly string Description;
        public readonly string ExportLocation;
        public readonly string Id;
        public readonly bool IsPublic;
        public readonly ImmutableDictionary<string, string> Metadata;
        public readonly string MountId;
        public readonly string Name;
        public readonly bool Preferred;
        public readonly string Region;
        public readonly string ShareAccessId;
        public readonly string ShareInstanceId;
        public readonly string ShareProto;
        public readonly int Size;
        public readonly string State;
        public readonly string Status;

        [OutputConstructor]
        private GetSfsFileSystemResult(
            string accessLevel,

            string accessTo,

            string accessType,

            string availabilityZone,

            string description,

            string exportLocation,

            string id,

            bool isPublic,

            ImmutableDictionary<string, string> metadata,

            string mountId,

            string name,

            bool preferred,

            string region,

            string shareAccessId,

            string shareInstanceId,

            string shareProto,

            int size,

            string state,

            string status)
        {
            AccessLevel = accessLevel;
            AccessTo = accessTo;
            AccessType = accessType;
            AvailabilityZone = availabilityZone;
            Description = description;
            ExportLocation = exportLocation;
            Id = id;
            IsPublic = isPublic;
            Metadata = metadata;
            MountId = mountId;
            Name = name;
            Preferred = preferred;
            Region = region;
            ShareAccessId = shareAccessId;
            ShareInstanceId = shareInstanceId;
            ShareProto = shareProto;
            Size = size;
            State = state;
            Status = status;
        }
    }
}
