// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/rdsPgAccount:RdsPgAccount")]
    public partial class RdsPgAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates the permission attributes of the account.
        /// </summary>
        [Output("attributes")]
        public Output<ImmutableArray<Outputs.RdsPgAccountAttribute>> Attributes { get; private set; } = null!;

        /// <summary>
        /// Specifies the remarks of the DB account.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the RDS PostgreSQL instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        [Output("memberofs")]
        public Output<ImmutableArray<string>> Memberofs { get; private set; } = null!;

        /// <summary>
        /// Specifies the username of the DB account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the password of the DB account.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a RdsPgAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RdsPgAccount(string name, RdsPgAccountArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/rdsPgAccount:RdsPgAccount", name, args ?? new RdsPgAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RdsPgAccount(string name, Input<string> id, RdsPgAccountState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/rdsPgAccount:RdsPgAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RdsPgAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RdsPgAccount Get(string name, Input<string> id, RdsPgAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new RdsPgAccount(name, id, state, options);
        }
    }

    public sealed class RdsPgAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the remarks of the DB account.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the ID of the RDS PostgreSQL instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("memberofs")]
        private InputList<string>? _memberofs;

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        public InputList<string> Memberofs
        {
            get => _memberofs ?? (_memberofs = new InputList<string>());
            set => _memberofs = value;
        }

        /// <summary>
        /// Specifies the username of the DB account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// Specifies the password of the DB account.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public RdsPgAccountArgs()
        {
        }
        public static new RdsPgAccountArgs Empty => new RdsPgAccountArgs();
    }

    public sealed class RdsPgAccountState : global::Pulumi.ResourceArgs
    {
        [Input("attributes")]
        private InputList<Inputs.RdsPgAccountAttributeGetArgs>? _attributes;

        /// <summary>
        /// Indicates the permission attributes of the account.
        /// </summary>
        public InputList<Inputs.RdsPgAccountAttributeGetArgs> Attributes
        {
            get => _attributes ?? (_attributes = new InputList<Inputs.RdsPgAccountAttributeGetArgs>());
            set => _attributes = value;
        }

        /// <summary>
        /// Specifies the remarks of the DB account.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the ID of the RDS PostgreSQL instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("memberofs")]
        private InputList<string>? _memberofs;

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        public InputList<string> Memberofs
        {
            get => _memberofs ?? (_memberofs = new InputList<string>());
            set => _memberofs = value;
        }

        /// <summary>
        /// Specifies the username of the DB account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Specifies the password of the DB account.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public RdsPgAccountState()
        {
        }
        public static new RdsPgAccountState Empty => new RdsPgAccountState();
    }
}
