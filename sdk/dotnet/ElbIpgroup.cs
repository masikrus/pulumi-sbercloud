// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/elbIpgroup:ElbIpgroup")]
    public partial class ElbIpgroup : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("ipLists")]
        public Output<ImmutableArray<Outputs.ElbIpgroupIpList>> IpLists { get; private set; } = null!;

        [Output("listenerIds")]
        public Output<ImmutableArray<string>> ListenerIds { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a ElbIpgroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElbIpgroup(string name, ElbIpgroupArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/elbIpgroup:ElbIpgroup", name, args ?? new ElbIpgroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElbIpgroup(string name, Input<string> id, ElbIpgroupState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/elbIpgroup:ElbIpgroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElbIpgroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElbIpgroup Get(string name, Input<string> id, ElbIpgroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ElbIpgroup(name, id, state, options);
        }
    }

    public sealed class ElbIpgroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("ipLists", required: true)]
        private InputList<Inputs.ElbIpgroupIpListArgs>? _ipLists;
        public InputList<Inputs.ElbIpgroupIpListArgs> IpLists
        {
            get => _ipLists ?? (_ipLists = new InputList<Inputs.ElbIpgroupIpListArgs>());
            set => _ipLists = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public ElbIpgroupArgs()
        {
        }
        public static new ElbIpgroupArgs Empty => new ElbIpgroupArgs();
    }

    public sealed class ElbIpgroupState : global::Pulumi.ResourceArgs
    {
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("ipLists")]
        private InputList<Inputs.ElbIpgroupIpListGetArgs>? _ipLists;
        public InputList<Inputs.ElbIpgroupIpListGetArgs> IpLists
        {
            get => _ipLists ?? (_ipLists = new InputList<Inputs.ElbIpgroupIpListGetArgs>());
            set => _ipLists = value;
        }

        [Input("listenerIds")]
        private InputList<string>? _listenerIds;
        public InputList<string> ListenerIds
        {
            get => _listenerIds ?? (_listenerIds = new InputList<string>());
            set => _listenerIds = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public ElbIpgroupState()
        {
        }
        public static new ElbIpgroupState Empty => new ElbIpgroupState();
    }
}
