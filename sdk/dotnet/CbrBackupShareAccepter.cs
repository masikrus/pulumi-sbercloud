// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/cbrBackupShareAccepter:CbrBackupShareAccepter")]
    public partial class CbrBackupShareAccepter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the shared source backup.
        /// </summary>
        [Output("backupId")]
        public Output<string> BackupId { get; private set; } = null!;

        /// <summary>
        /// The region where the backup will be stored.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The ID of the project to which the source backup belongs.
        /// </summary>
        [Output("sourceProjectId")]
        public Output<string> SourceProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the vault which the backup will be stored.
        /// </summary>
        [Output("vaultId")]
        public Output<string> VaultId { get; private set; } = null!;


        /// <summary>
        /// Create a CbrBackupShareAccepter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CbrBackupShareAccepter(string name, CbrBackupShareAccepterArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/cbrBackupShareAccepter:CbrBackupShareAccepter", name, args ?? new CbrBackupShareAccepterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CbrBackupShareAccepter(string name, Input<string> id, CbrBackupShareAccepterState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/cbrBackupShareAccepter:CbrBackupShareAccepter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CbrBackupShareAccepter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CbrBackupShareAccepter Get(string name, Input<string> id, CbrBackupShareAccepterState? state = null, CustomResourceOptions? options = null)
        {
            return new CbrBackupShareAccepter(name, id, state, options);
        }
    }

    public sealed class CbrBackupShareAccepterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the shared source backup.
        /// </summary>
        [Input("backupId", required: true)]
        public Input<string> BackupId { get; set; } = null!;

        /// <summary>
        /// The region where the backup will be stored.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The ID of the vault which the backup will be stored.
        /// </summary>
        [Input("vaultId", required: true)]
        public Input<string> VaultId { get; set; } = null!;

        public CbrBackupShareAccepterArgs()
        {
        }
        public static new CbrBackupShareAccepterArgs Empty => new CbrBackupShareAccepterArgs();
    }

    public sealed class CbrBackupShareAccepterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the shared source backup.
        /// </summary>
        [Input("backupId")]
        public Input<string>? BackupId { get; set; }

        /// <summary>
        /// The region where the backup will be stored.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The ID of the project to which the source backup belongs.
        /// </summary>
        [Input("sourceProjectId")]
        public Input<string>? SourceProjectId { get; set; }

        /// <summary>
        /// The ID of the vault which the backup will be stored.
        /// </summary>
        [Input("vaultId")]
        public Input<string>? VaultId { get; set; }

        public CbrBackupShareAccepterState()
        {
        }
        public static new CbrBackupShareAccepterState Empty => new CbrBackupShareAccepterState();
    }
}
