// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/vpcRoute:VpcRoute")]
    public partial class VpcRoute : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("destination")]
        public Output<string> Destination { get; private set; } = null!;

        [Output("nexthop")]
        public Output<string> Nexthop { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("routeTableId")]
        public Output<string> RouteTableId { get; private set; } = null!;

        [Output("routeTableName")]
        public Output<string> RouteTableName { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcRoute(string name, VpcRouteArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcRoute:VpcRoute", name, args ?? new VpcRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcRoute(string name, Input<string> id, VpcRouteState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcRoute:VpcRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcRoute Get(string name, Input<string> id, VpcRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcRoute(name, id, state, options);
        }
    }

    public sealed class VpcRouteArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destination", required: true)]
        public Input<string> Destination { get; set; } = null!;

        [Input("nexthop", required: true)]
        public Input<string> Nexthop { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public VpcRouteArgs()
        {
        }
        public static new VpcRouteArgs Empty => new VpcRouteArgs();
    }

    public sealed class VpcRouteState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destination")]
        public Input<string>? Destination { get; set; }

        [Input("nexthop")]
        public Input<string>? Nexthop { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public VpcRouteState()
        {
        }
        public static new VpcRouteState Empty => new VpcRouteState();
    }
}
