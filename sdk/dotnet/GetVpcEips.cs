// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetVpcEips
    {
        public static Task<GetVpcEipsResult> InvokeAsync(GetVpcEipsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcEipsResult>("sbercloud:index/getVpcEips:getVpcEips", args ?? new GetVpcEipsArgs(), options.WithDefaults());

        public static Output<GetVpcEipsResult> Invoke(GetVpcEipsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcEipsResult>("sbercloud:index/getVpcEips:getVpcEips", args ?? new GetVpcEipsInvokeArgs(), options.WithDefaults());

        public static Output<GetVpcEipsResult> Invoke(GetVpcEipsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcEipsResult>("sbercloud:index/getVpcEips:getVpcEips", args ?? new GetVpcEipsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcEipsArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("ids")]
        private List<string>? _ids;
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("ipVersion")]
        public int? IpVersion { get; set; }

        [Input("portIds")]
        private List<string>? _portIds;
        public List<string> PortIds
        {
            get => _portIds ?? (_portIds = new List<string>());
            set => _portIds = value;
        }

        [Input("privateIps")]
        private List<string>? _privateIps;
        public List<string> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new List<string>());
            set => _privateIps = value;
        }

        [Input("publicIps")]
        private List<string>? _publicIps;
        public List<string> PublicIps
        {
            get => _publicIps ?? (_publicIps = new List<string>());
            set => _publicIps = value;
        }

        [Input("region")]
        public string? Region { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetVpcEipsArgs()
        {
        }
        public static new GetVpcEipsArgs Empty => new GetVpcEipsArgs();
    }

    public sealed class GetVpcEipsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("ipVersion")]
        public Input<int>? IpVersion { get; set; }

        [Input("portIds")]
        private InputList<string>? _portIds;
        public InputList<string> PortIds
        {
            get => _portIds ?? (_portIds = new InputList<string>());
            set => _portIds = value;
        }

        [Input("privateIps")]
        private InputList<string>? _privateIps;
        public InputList<string> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new InputList<string>());
            set => _privateIps = value;
        }

        [Input("publicIps")]
        private InputList<string>? _publicIps;
        public InputList<string> PublicIps
        {
            get => _publicIps ?? (_publicIps = new InputList<string>());
            set => _publicIps = value;
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetVpcEipsInvokeArgs()
        {
        }
        public static new GetVpcEipsInvokeArgs Empty => new GetVpcEipsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcEipsResult
    {
        public readonly ImmutableArray<Outputs.GetVpcEipsEipResult> Eips;
        public readonly string? EnterpriseProjectId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly int? IpVersion;
        public readonly ImmutableArray<string> PortIds;
        public readonly ImmutableArray<string> PrivateIps;
        public readonly ImmutableArray<string> PublicIps;
        public readonly string Region;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetVpcEipsResult(
            ImmutableArray<Outputs.GetVpcEipsEipResult> eips,

            string? enterpriseProjectId,

            string id,

            ImmutableArray<string> ids,

            int? ipVersion,

            ImmutableArray<string> portIds,

            ImmutableArray<string> privateIps,

            ImmutableArray<string> publicIps,

            string region,

            ImmutableDictionary<string, string>? tags)
        {
            Eips = eips;
            EnterpriseProjectId = enterpriseProjectId;
            Id = id;
            Ids = ids;
            IpVersion = ipVersion;
            PortIds = portIds;
            PrivateIps = privateIps;
            PublicIps = publicIps;
            Region = region;
            Tags = tags;
        }
    }
}
