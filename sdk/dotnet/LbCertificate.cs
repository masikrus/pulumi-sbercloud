// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/lbCertificate:LbCertificate")]
    public partial class LbCertificate : global::Pulumi.CustomResource
    {
        [Output("certificate")]
        public Output<string> Certificate { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("privateKey")]
        public Output<string?> PrivateKey { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a LbCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LbCertificate(string name, LbCertificateArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbCertificate:LbCertificate", name, args ?? new LbCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LbCertificate(string name, Input<string> id, LbCertificateState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbCertificate:LbCertificate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "certificate",
                    "privateKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LbCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LbCertificate Get(string name, Input<string> id, LbCertificateState? state = null, CustomResourceOptions? options = null)
        {
            return new LbCertificate(name, id, state, options);
        }
    }

    public sealed class LbCertificateArgs : global::Pulumi.ResourceArgs
    {
        [Input("certificate", required: true)]
        private Input<string>? _certificate;
        public Input<string>? Certificate
        {
            get => _certificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public LbCertificateArgs()
        {
        }
        public static new LbCertificateArgs Empty => new LbCertificateArgs();
    }

    public sealed class LbCertificateState : global::Pulumi.ResourceArgs
    {
        [Input("certificate")]
        private Input<string>? _certificate;
        public Input<string>? Certificate
        {
            get => _certificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public LbCertificateState()
        {
        }
        public static new LbCertificateState Empty => new LbCertificateState();
    }
}
