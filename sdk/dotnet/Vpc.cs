// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/vpc:Vpc")]
    public partial class Vpc : global::Pulumi.CustomResource
    {
        [Output("cidr")]
        public Output<string> Cidr { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("enhancedLocalRoute")]
        public Output<string> EnhancedLocalRoute { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("routes")]
        public Output<ImmutableArray<Outputs.VpcRoute>> Routes { get; private set; } = null!;

        /// <summary>
        /// schema: Deprecated; use secondary_cidrs instead
        /// </summary>
        [Output("secondaryCidr")]
        public Output<string?> SecondaryCidr { get; private set; } = null!;

        [Output("secondaryCidrs")]
        public Output<ImmutableArray<string>> SecondaryCidrs { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Vpc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vpc(string name, VpcArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpc:Vpc", name, args ?? new VpcArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Vpc(string name, Input<string> id, VpcState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpc:Vpc", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Vpc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Vpc Get(string name, Input<string> id, VpcState? state = null, CustomResourceOptions? options = null)
        {
            return new Vpc(name, id, state, options);
        }
    }

    public sealed class VpcArgs : global::Pulumi.ResourceArgs
    {
        [Input("cidr", required: true)]
        public Input<string> Cidr { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enhancedLocalRoute")]
        public Input<string>? EnhancedLocalRoute { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// schema: Deprecated; use secondary_cidrs instead
        /// </summary>
        [Input("secondaryCidr")]
        public Input<string>? SecondaryCidr { get; set; }

        [Input("secondaryCidrs")]
        private InputList<string>? _secondaryCidrs;
        public InputList<string> SecondaryCidrs
        {
            get => _secondaryCidrs ?? (_secondaryCidrs = new InputList<string>());
            set => _secondaryCidrs = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public VpcArgs()
        {
        }
        public static new VpcArgs Empty => new VpcArgs();
    }

    public sealed class VpcState : global::Pulumi.ResourceArgs
    {
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enhancedLocalRoute")]
        public Input<string>? EnhancedLocalRoute { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("routes")]
        private InputList<Inputs.VpcRouteGetArgs>? _routes;
        [Obsolete(@"use huaweicloud_vpc_route_table data source to get all routes")]
        public InputList<Inputs.VpcRouteGetArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.VpcRouteGetArgs>());
            set => _routes = value;
        }

        /// <summary>
        /// schema: Deprecated; use secondary_cidrs instead
        /// </summary>
        [Input("secondaryCidr")]
        public Input<string>? SecondaryCidr { get; set; }

        [Input("secondaryCidrs")]
        private InputList<string>? _secondaryCidrs;
        public InputList<string> SecondaryCidrs
        {
            get => _secondaryCidrs ?? (_secondaryCidrs = new InputList<string>());
            set => _secondaryCidrs = value;
        }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public VpcState()
        {
        }
        public static new VpcState Empty => new VpcState();
    }
}
