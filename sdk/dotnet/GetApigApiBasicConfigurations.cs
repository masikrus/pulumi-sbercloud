// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetApigApiBasicConfigurations
    {
        public static Task<GetApigApiBasicConfigurationsResult> InvokeAsync(GetApigApiBasicConfigurationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApigApiBasicConfigurationsResult>("sbercloud:index/getApigApiBasicConfigurations:getApigApiBasicConfigurations", args ?? new GetApigApiBasicConfigurationsArgs(), options.WithDefaults());

        public static Output<GetApigApiBasicConfigurationsResult> Invoke(GetApigApiBasicConfigurationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApigApiBasicConfigurationsResult>("sbercloud:index/getApigApiBasicConfigurations:getApigApiBasicConfigurations", args ?? new GetApigApiBasicConfigurationsInvokeArgs(), options.WithDefaults());

        public static Output<GetApigApiBasicConfigurationsResult> Invoke(GetApigApiBasicConfigurationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApigApiBasicConfigurationsResult>("sbercloud:index/getApigApiBasicConfigurations:getApigApiBasicConfigurations", args ?? new GetApigApiBasicConfigurationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApigApiBasicConfigurationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiId")]
        public string? ApiId { get; set; }

        [Input("backendType")]
        public string? BackendType { get; set; }

        [Input("envId")]
        public string? EnvId { get; set; }

        [Input("envName")]
        public string? EnvName { get; set; }

        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("name")]
        public string? Name { get; set; }

        [Input("preciseSearch")]
        public string? PreciseSearch { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("requestMethod")]
        public string? RequestMethod { get; set; }

        [Input("requestPath")]
        public string? RequestPath { get; set; }

        [Input("requestProtocol")]
        public string? RequestProtocol { get; set; }

        [Input("securityAuthentication")]
        public string? SecurityAuthentication { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        [Input("vpcChannelName")]
        public string? VpcChannelName { get; set; }

        public GetApigApiBasicConfigurationsArgs()
        {
        }
        public static new GetApigApiBasicConfigurationsArgs Empty => new GetApigApiBasicConfigurationsArgs();
    }

    public sealed class GetApigApiBasicConfigurationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        [Input("backendType")]
        public Input<string>? BackendType { get; set; }

        [Input("envId")]
        public Input<string>? EnvId { get; set; }

        [Input("envName")]
        public Input<string>? EnvName { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("preciseSearch")]
        public Input<string>? PreciseSearch { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("requestMethod")]
        public Input<string>? RequestMethod { get; set; }

        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        [Input("requestProtocol")]
        public Input<string>? RequestProtocol { get; set; }

        [Input("securityAuthentication")]
        public Input<string>? SecurityAuthentication { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vpcChannelName")]
        public Input<string>? VpcChannelName { get; set; }

        public GetApigApiBasicConfigurationsInvokeArgs()
        {
        }
        public static new GetApigApiBasicConfigurationsInvokeArgs Empty => new GetApigApiBasicConfigurationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetApigApiBasicConfigurationsResult
    {
        public readonly string? ApiId;
        public readonly string? BackendType;
        public readonly ImmutableArray<Outputs.GetApigApiBasicConfigurationsConfigurationResult> Configurations;
        public readonly string? EnvId;
        public readonly string? EnvName;
        public readonly string? GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? Name;
        public readonly string? PreciseSearch;
        public readonly string Region;
        public readonly string? RequestMethod;
        public readonly string? RequestPath;
        public readonly string? RequestProtocol;
        public readonly string? SecurityAuthentication;
        public readonly string? Type;
        public readonly string? VpcChannelName;

        [OutputConstructor]
        private GetApigApiBasicConfigurationsResult(
            string? apiId,

            string? backendType,

            ImmutableArray<Outputs.GetApigApiBasicConfigurationsConfigurationResult> configurations,

            string? envId,

            string? envName,

            string? groupId,

            string id,

            string instanceId,

            string? name,

            string? preciseSearch,

            string region,

            string? requestMethod,

            string? requestPath,

            string? requestProtocol,

            string? securityAuthentication,

            string? type,

            string? vpcChannelName)
        {
            ApiId = apiId;
            BackendType = backendType;
            Configurations = configurations;
            EnvId = envId;
            EnvName = envName;
            GroupId = groupId;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            PreciseSearch = preciseSearch;
            Region = region;
            RequestMethod = requestMethod;
            RequestPath = requestPath;
            RequestProtocol = requestProtocol;
            SecurityAuthentication = securityAuthentication;
            Type = type;
            VpcChannelName = vpcChannelName;
        }
    }
}
