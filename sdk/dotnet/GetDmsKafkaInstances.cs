// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetDmsKafkaInstances
    {
        public static Task<GetDmsKafkaInstancesResult> InvokeAsync(GetDmsKafkaInstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDmsKafkaInstancesResult>("sbercloud:index/getDmsKafkaInstances:getDmsKafkaInstances", args ?? new GetDmsKafkaInstancesArgs(), options.WithDefaults());

        public static Output<GetDmsKafkaInstancesResult> Invoke(GetDmsKafkaInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDmsKafkaInstancesResult>("sbercloud:index/getDmsKafkaInstances:getDmsKafkaInstances", args ?? new GetDmsKafkaInstancesInvokeArgs(), options.WithDefaults());

        public static Output<GetDmsKafkaInstancesResult> Invoke(GetDmsKafkaInstancesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDmsKafkaInstancesResult>("sbercloud:index/getDmsKafkaInstances:getDmsKafkaInstances", args ?? new GetDmsKafkaInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDmsKafkaInstancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("fuzzyMatch")]
        public bool? FuzzyMatch { get; set; }

        [Input("includeFailure")]
        public bool? IncludeFailure { get; set; }

        [Input("instanceId")]
        public string? InstanceId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        public GetDmsKafkaInstancesArgs()
        {
        }
        public static new GetDmsKafkaInstancesArgs Empty => new GetDmsKafkaInstancesArgs();
    }

    public sealed class GetDmsKafkaInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("fuzzyMatch")]
        public Input<bool>? FuzzyMatch { get; set; }

        [Input("includeFailure")]
        public Input<bool>? IncludeFailure { get; set; }

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetDmsKafkaInstancesInvokeArgs()
        {
        }
        public static new GetDmsKafkaInstancesInvokeArgs Empty => new GetDmsKafkaInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDmsKafkaInstancesResult
    {
        public readonly string? EnterpriseProjectId;
        public readonly bool? FuzzyMatch;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeFailure;
        public readonly string? InstanceId;
        public readonly ImmutableArray<Outputs.GetDmsKafkaInstancesInstanceResult> Instances;
        public readonly string? Name;
        public readonly string? Region;
        public readonly string? Status;

        [OutputConstructor]
        private GetDmsKafkaInstancesResult(
            string? enterpriseProjectId,

            bool? fuzzyMatch,

            string id,

            bool? includeFailure,

            string? instanceId,

            ImmutableArray<Outputs.GetDmsKafkaInstancesInstanceResult> instances,

            string? name,

            string? region,

            string? status)
        {
            EnterpriseProjectId = enterpriseProjectId;
            FuzzyMatch = fuzzyMatch;
            Id = id;
            IncludeFailure = includeFailure;
            InstanceId = instanceId;
            Instances = instances;
            Name = name;
            Region = region;
            Status = status;
        }
    }
}
