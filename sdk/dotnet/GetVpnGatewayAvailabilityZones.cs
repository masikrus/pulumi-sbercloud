// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetVpnGatewayAvailabilityZones
    {
        public static Task<GetVpnGatewayAvailabilityZonesResult> InvokeAsync(GetVpnGatewayAvailabilityZonesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpnGatewayAvailabilityZonesResult>("sbercloud:index/getVpnGatewayAvailabilityZones:getVpnGatewayAvailabilityZones", args ?? new GetVpnGatewayAvailabilityZonesArgs(), options.WithDefaults());

        public static Output<GetVpnGatewayAvailabilityZonesResult> Invoke(GetVpnGatewayAvailabilityZonesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpnGatewayAvailabilityZonesResult>("sbercloud:index/getVpnGatewayAvailabilityZones:getVpnGatewayAvailabilityZones", args ?? new GetVpnGatewayAvailabilityZonesInvokeArgs(), options.WithDefaults());

        public static Output<GetVpnGatewayAvailabilityZonesResult> Invoke(GetVpnGatewayAvailabilityZonesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpnGatewayAvailabilityZonesResult>("sbercloud:index/getVpnGatewayAvailabilityZones:getVpnGatewayAvailabilityZones", args ?? new GetVpnGatewayAvailabilityZonesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpnGatewayAvailabilityZonesArgs : global::Pulumi.InvokeArgs
    {
        [Input("attachmentType")]
        public string? AttachmentType { get; set; }

        [Input("flavor", required: true)]
        public string Flavor { get; set; } = null!;

        [Input("region")]
        public string? Region { get; set; }

        public GetVpnGatewayAvailabilityZonesArgs()
        {
        }
        public static new GetVpnGatewayAvailabilityZonesArgs Empty => new GetVpnGatewayAvailabilityZonesArgs();
    }

    public sealed class GetVpnGatewayAvailabilityZonesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("attachmentType")]
        public Input<string>? AttachmentType { get; set; }

        [Input("flavor", required: true)]
        public Input<string> Flavor { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetVpnGatewayAvailabilityZonesInvokeArgs()
        {
        }
        public static new GetVpnGatewayAvailabilityZonesInvokeArgs Empty => new GetVpnGatewayAvailabilityZonesInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpnGatewayAvailabilityZonesResult
    {
        public readonly string? AttachmentType;
        public readonly string Flavor;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        public readonly string Region;

        [OutputConstructor]
        private GetVpnGatewayAvailabilityZonesResult(
            string? attachmentType,

            string flavor,

            string id,

            ImmutableArray<string> names,

            string region)
        {
            AttachmentType = attachmentType;
            Flavor = flavor;
            Id = id;
            Names = names;
            Region = region;
        }
    }
}
