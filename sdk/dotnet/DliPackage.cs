// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/dliPackage:DliPackage")]
    public partial class DliPackage : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("groupName")]
        public Output<string?> GroupName { get; private set; } = null!;

        [Output("isAsync")]
        public Output<bool> IsAsync { get; private set; } = null!;

        [Output("objectName")]
        public Output<string> ObjectName { get; private set; } = null!;

        [Output("objectPath")]
        public Output<string> ObjectPath { get; private set; } = null!;

        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a DliPackage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DliPackage(string name, DliPackageArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/dliPackage:DliPackage", name, args ?? new DliPackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DliPackage(string name, Input<string> id, DliPackageState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/dliPackage:DliPackage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DliPackage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DliPackage Get(string name, Input<string> id, DliPackageState? state = null, CustomResourceOptions? options = null)
        {
            return new DliPackage(name, id, state, options);
        }
    }

    public sealed class DliPackageArgs : global::Pulumi.ResourceArgs
    {
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("isAsync")]
        public Input<bool>? IsAsync { get; set; }

        [Input("objectPath", required: true)]
        public Input<string> ObjectPath { get; set; } = null!;

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public DliPackageArgs()
        {
        }
        public static new DliPackageArgs Empty => new DliPackageArgs();
    }

    public sealed class DliPackageState : global::Pulumi.ResourceArgs
    {
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("isAsync")]
        public Input<bool>? IsAsync { get; set; }

        [Input("objectName")]
        public Input<string>? ObjectName { get; set; }

        [Input("objectPath")]
        public Input<string>? ObjectPath { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public DliPackageState()
        {
        }
        public static new DliPackageState Empty => new DliPackageState();
    }
}
