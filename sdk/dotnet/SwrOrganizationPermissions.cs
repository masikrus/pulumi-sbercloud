// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/swrOrganizationPermissions:SwrOrganizationPermissions")]
    public partial class SwrOrganizationPermissions : global::Pulumi.CustomResource
    {
        [Output("creator")]
        public Output<string> Creator { get; private set; } = null!;

        [Output("organization")]
        public Output<string> Organization { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("selfPermissions")]
        public Output<ImmutableArray<Outputs.SwrOrganizationPermissionsSelfPermission>> SelfPermissions { get; private set; } = null!;

        [Output("users")]
        public Output<ImmutableArray<Outputs.SwrOrganizationPermissionsUser>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a SwrOrganizationPermissions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwrOrganizationPermissions(string name, SwrOrganizationPermissionsArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/swrOrganizationPermissions:SwrOrganizationPermissions", name, args ?? new SwrOrganizationPermissionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwrOrganizationPermissions(string name, Input<string> id, SwrOrganizationPermissionsState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/swrOrganizationPermissions:SwrOrganizationPermissions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwrOrganizationPermissions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwrOrganizationPermissions Get(string name, Input<string> id, SwrOrganizationPermissionsState? state = null, CustomResourceOptions? options = null)
        {
            return new SwrOrganizationPermissions(name, id, state, options);
        }
    }

    public sealed class SwrOrganizationPermissionsArgs : global::Pulumi.ResourceArgs
    {
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("users", required: true)]
        private InputList<Inputs.SwrOrganizationPermissionsUserArgs>? _users;
        public InputList<Inputs.SwrOrganizationPermissionsUserArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.SwrOrganizationPermissionsUserArgs>());
            set => _users = value;
        }

        public SwrOrganizationPermissionsArgs()
        {
        }
        public static new SwrOrganizationPermissionsArgs Empty => new SwrOrganizationPermissionsArgs();
    }

    public sealed class SwrOrganizationPermissionsState : global::Pulumi.ResourceArgs
    {
        [Input("creator")]
        public Input<string>? Creator { get; set; }

        [Input("organization")]
        public Input<string>? Organization { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("selfPermissions")]
        private InputList<Inputs.SwrOrganizationPermissionsSelfPermissionGetArgs>? _selfPermissions;
        public InputList<Inputs.SwrOrganizationPermissionsSelfPermissionGetArgs> SelfPermissions
        {
            get => _selfPermissions ?? (_selfPermissions = new InputList<Inputs.SwrOrganizationPermissionsSelfPermissionGetArgs>());
            set => _selfPermissions = value;
        }

        [Input("users")]
        private InputList<Inputs.SwrOrganizationPermissionsUserGetArgs>? _users;
        public InputList<Inputs.SwrOrganizationPermissionsUserGetArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.SwrOrganizationPermissionsUserGetArgs>());
            set => _users = value;
        }

        public SwrOrganizationPermissionsState()
        {
        }
        public static new SwrOrganizationPermissionsState Empty => new SwrOrganizationPermissionsState();
    }
}
