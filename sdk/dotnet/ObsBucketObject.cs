// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/obsBucketObject:ObsBucketObject")]
    public partial class ObsBucketObject : global::Pulumi.CustomResource
    {
        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("content")]
        public Output<string?> Content { get; private set; } = null!;

        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        [Output("encryption")]
        public Output<bool?> Encryption { get; private set; } = null!;

        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        [Output("source")]
        public Output<string?> Source { get; private set; } = null!;

        [Output("storageClass")]
        public Output<string> StorageClass { get; private set; } = null!;

        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a ObsBucketObject resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObsBucketObject(string name, ObsBucketObjectArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/obsBucketObject:ObsBucketObject", name, args ?? new ObsBucketObjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObsBucketObject(string name, Input<string> id, ObsBucketObjectState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/obsBucketObject:ObsBucketObject", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObsBucketObject resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObsBucketObject Get(string name, Input<string> id, ObsBucketObjectState? state = null, CustomResourceOptions? options = null)
        {
            return new ObsBucketObject(name, id, state, options);
        }
    }

    public sealed class ObsBucketObjectArgs : global::Pulumi.ResourceArgs
    {
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        [Input("encryption")]
        public Input<bool>? Encryption { get; set; }

        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        public ObsBucketObjectArgs()
        {
        }
        public static new ObsBucketObjectArgs Empty => new ObsBucketObjectArgs();
    }

    public sealed class ObsBucketObjectState : global::Pulumi.ResourceArgs
    {
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        [Input("encryption")]
        public Input<bool>? Encryption { get; set; }

        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public ObsBucketObjectState()
        {
        }
        public static new ObsBucketObjectState Empty => new ObsBucketObjectState();
    }
}
