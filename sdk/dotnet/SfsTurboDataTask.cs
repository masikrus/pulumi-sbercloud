// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/sfsTurboDataTask:SfsTurboDataTask")]
    public partial class SfsTurboDataTask : global::Pulumi.CustomResource
    {
        [Output("destPrefix")]
        public Output<string?> DestPrefix { get; private set; } = null!;

        [Output("destTarget")]
        public Output<string> DestTarget { get; private set; } = null!;

        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        [Output("message")]
        public Output<string> Message { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("shareId")]
        public Output<string> ShareId { get; private set; } = null!;

        [Output("srcPrefix")]
        public Output<string?> SrcPrefix { get; private set; } = null!;

        [Output("srcTarget")]
        public Output<string> SrcTarget { get; private set; } = null!;

        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SfsTurboDataTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SfsTurboDataTask(string name, SfsTurboDataTaskArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/sfsTurboDataTask:SfsTurboDataTask", name, args ?? new SfsTurboDataTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SfsTurboDataTask(string name, Input<string> id, SfsTurboDataTaskState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/sfsTurboDataTask:SfsTurboDataTask", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SfsTurboDataTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SfsTurboDataTask Get(string name, Input<string> id, SfsTurboDataTaskState? state = null, CustomResourceOptions? options = null)
        {
            return new SfsTurboDataTask(name, id, state, options);
        }
    }

    public sealed class SfsTurboDataTaskArgs : global::Pulumi.ResourceArgs
    {
        [Input("destPrefix")]
        public Input<string>? DestPrefix { get; set; }

        [Input("destTarget", required: true)]
        public Input<string> DestTarget { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("shareId", required: true)]
        public Input<string> ShareId { get; set; } = null!;

        [Input("srcPrefix")]
        public Input<string>? SrcPrefix { get; set; }

        [Input("srcTarget", required: true)]
        public Input<string> SrcTarget { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SfsTurboDataTaskArgs()
        {
        }
        public static new SfsTurboDataTaskArgs Empty => new SfsTurboDataTaskArgs();
    }

    public sealed class SfsTurboDataTaskState : global::Pulumi.ResourceArgs
    {
        [Input("destPrefix")]
        public Input<string>? DestPrefix { get; set; }

        [Input("destTarget")]
        public Input<string>? DestTarget { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("message")]
        public Input<string>? Message { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("shareId")]
        public Input<string>? ShareId { get; set; }

        [Input("srcPrefix")]
        public Input<string>? SrcPrefix { get; set; }

        [Input("srcTarget")]
        public Input<string>? SrcTarget { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public SfsTurboDataTaskState()
        {
        }
        public static new SfsTurboDataTaskState Empty => new SfsTurboDataTaskState();
    }
}
