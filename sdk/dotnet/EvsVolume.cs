// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/evsVolume:EvsVolume")]
    public partial class EvsVolume : global::Pulumi.CustomResource
    {
        [Output("attachments")]
        public Output<ImmutableArray<Outputs.EvsVolumeAttachment>> Attachments { get; private set; } = null!;

        [Output("autoPay")]
        public Output<string?> AutoPay { get; private set; } = null!;

        [Output("autoRenew")]
        public Output<string?> AutoRenew { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("backupId")]
        public Output<string?> BackupId { get; private set; } = null!;

        [Output("cascade")]
        public Output<bool?> Cascade { get; private set; } = null!;

        [Output("chargingMode")]
        public Output<string> ChargingMode { get; private set; } = null!;

        [Output("dedicatedStorageId")]
        public Output<string?> DedicatedStorageId { get; private set; } = null!;

        [Output("dedicatedStorageName")]
        public Output<string> DedicatedStorageName { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("deviceType")]
        public Output<string?> DeviceType { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("imageId")]
        public Output<string?> ImageId { get; private set; } = null!;

        [Output("iops")]
        public Output<int> Iops { get; private set; } = null!;

        [Output("kmsId")]
        public Output<string?> KmsId { get; private set; } = null!;

        [Output("multiattach")]
        public Output<bool?> Multiattach { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        [Output("periodUnit")]
        public Output<string?> PeriodUnit { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("serverId")]
        public Output<string?> ServerId { get; private set; } = null!;

        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        [Output("snapshotId")]
        public Output<string?> SnapshotId { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("throughput")]
        public Output<int> Throughput { get; private set; } = null!;

        [Output("volumeType")]
        public Output<string> VolumeType { get; private set; } = null!;

        [Output("wwn")]
        public Output<string> Wwn { get; private set; } = null!;


        /// <summary>
        /// Create a EvsVolume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EvsVolume(string name, EvsVolumeArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/evsVolume:EvsVolume", name, args ?? new EvsVolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EvsVolume(string name, Input<string> id, EvsVolumeState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/evsVolume:EvsVolume", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EvsVolume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EvsVolume Get(string name, Input<string> id, EvsVolumeState? state = null, CustomResourceOptions? options = null)
        {
            return new EvsVolume(name, id, state, options);
        }
    }

    public sealed class EvsVolumeArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoPay")]
        public Input<string>? AutoPay { get; set; }

        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZone", required: true)]
        public Input<string> AvailabilityZone { get; set; } = null!;

        [Input("backupId")]
        public Input<string>? BackupId { get; set; }

        [Input("cascade")]
        public Input<bool>? Cascade { get; set; }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("dedicatedStorageId")]
        public Input<string>? DedicatedStorageId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceType")]
        public Input<string>? DeviceType { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsId")]
        public Input<string>? KmsId { get; set; }

        [Input("multiattach")]
        public Input<bool>? Multiattach { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("throughput")]
        public Input<int>? Throughput { get; set; }

        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        public EvsVolumeArgs()
        {
        }
        public static new EvsVolumeArgs Empty => new EvsVolumeArgs();
    }

    public sealed class EvsVolumeState : global::Pulumi.ResourceArgs
    {
        [Input("attachments")]
        private InputList<Inputs.EvsVolumeAttachmentGetArgs>? _attachments;
        public InputList<Inputs.EvsVolumeAttachmentGetArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.EvsVolumeAttachmentGetArgs>());
            set => _attachments = value;
        }

        [Input("autoPay")]
        public Input<string>? AutoPay { get; set; }

        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("backupId")]
        public Input<string>? BackupId { get; set; }

        [Input("cascade")]
        public Input<bool>? Cascade { get; set; }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("dedicatedStorageId")]
        public Input<string>? DedicatedStorageId { get; set; }

        [Input("dedicatedStorageName")]
        public Input<string>? DedicatedStorageName { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceType")]
        public Input<string>? DeviceType { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsId")]
        public Input<string>? KmsId { get; set; }

        [Input("multiattach")]
        public Input<bool>? Multiattach { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("throughput")]
        public Input<int>? Throughput { get; set; }

        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        [Input("wwn")]
        public Input<string>? Wwn { get; set; }

        public EvsVolumeState()
        {
        }
        public static new EvsVolumeState Empty => new EvsVolumeState();
    }
}
