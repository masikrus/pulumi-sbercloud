// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/asPolicy:AsPolicy")]
    public partial class AsPolicy : global::Pulumi.CustomResource
    {
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        [Output("alarmId")]
        public Output<string?> AlarmId { get; private set; } = null!;

        [Output("coolDownTime")]
        public Output<int> CoolDownTime { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("scalingGroupId")]
        public Output<string> ScalingGroupId { get; private set; } = null!;

        [Output("scalingPolicyAction")]
        public Output<Outputs.AsPolicyScalingPolicyAction> ScalingPolicyAction { get; private set; } = null!;

        [Output("scalingPolicyName")]
        public Output<string> ScalingPolicyName { get; private set; } = null!;

        [Output("scalingPolicyType")]
        public Output<string> ScalingPolicyType { get; private set; } = null!;

        [Output("scheduledPolicy")]
        public Output<Outputs.AsPolicyScheduledPolicy> ScheduledPolicy { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a AsPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AsPolicy(string name, AsPolicyArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/asPolicy:AsPolicy", name, args ?? new AsPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AsPolicy(string name, Input<string> id, AsPolicyState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/asPolicy:AsPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AsPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AsPolicy Get(string name, Input<string> id, AsPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new AsPolicy(name, id, state, options);
        }
    }

    public sealed class AsPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("alarmId")]
        public Input<string>? AlarmId { get; set; }

        [Input("coolDownTime")]
        public Input<int>? CoolDownTime { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("scalingGroupId", required: true)]
        public Input<string> ScalingGroupId { get; set; } = null!;

        [Input("scalingPolicyAction")]
        public Input<Inputs.AsPolicyScalingPolicyActionArgs>? ScalingPolicyAction { get; set; }

        [Input("scalingPolicyName", required: true)]
        public Input<string> ScalingPolicyName { get; set; } = null!;

        [Input("scalingPolicyType", required: true)]
        public Input<string> ScalingPolicyType { get; set; } = null!;

        [Input("scheduledPolicy")]
        public Input<Inputs.AsPolicyScheduledPolicyArgs>? ScheduledPolicy { get; set; }

        public AsPolicyArgs()
        {
        }
        public static new AsPolicyArgs Empty => new AsPolicyArgs();
    }

    public sealed class AsPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("alarmId")]
        public Input<string>? AlarmId { get; set; }

        [Input("coolDownTime")]
        public Input<int>? CoolDownTime { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("scalingGroupId")]
        public Input<string>? ScalingGroupId { get; set; }

        [Input("scalingPolicyAction")]
        public Input<Inputs.AsPolicyScalingPolicyActionGetArgs>? ScalingPolicyAction { get; set; }

        [Input("scalingPolicyName")]
        public Input<string>? ScalingPolicyName { get; set; }

        [Input("scalingPolicyType")]
        public Input<string>? ScalingPolicyType { get; set; }

        [Input("scheduledPolicy")]
        public Input<Inputs.AsPolicyScheduledPolicyGetArgs>? ScheduledPolicy { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public AsPolicyState()
        {
        }
        public static new AsPolicyState Empty => new AsPolicyState();
    }
}
