// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetCceNodes
    {
        public static Task<GetCceNodesResult> InvokeAsync(GetCceNodesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCceNodesResult>("sbercloud:index/getCceNodes:getCceNodes", args ?? new GetCceNodesArgs(), options.WithDefaults());

        public static Output<GetCceNodesResult> Invoke(GetCceNodesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCceNodesResult>("sbercloud:index/getCceNodes:getCceNodes", args ?? new GetCceNodesInvokeArgs(), options.WithDefaults());

        public static Output<GetCceNodesResult> Invoke(GetCceNodesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCceNodesResult>("sbercloud:index/getCceNodes:getCceNodes", args ?? new GetCceNodesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCceNodesArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("ignoreDetails")]
        public string? IgnoreDetails { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("nodeId")]
        public string? NodeId { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        public GetCceNodesArgs()
        {
        }
        public static new GetCceNodesArgs Empty => new GetCceNodesArgs();
    }

    public sealed class GetCceNodesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("ignoreDetails")]
        public Input<string>? IgnoreDetails { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nodeId")]
        public Input<string>? NodeId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetCceNodesInvokeArgs()
        {
        }
        public static new GetCceNodesInvokeArgs Empty => new GetCceNodesInvokeArgs();
    }


    [OutputType]
    public sealed class GetCceNodesResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? IgnoreDetails;
        public readonly string? Name;
        public readonly string? NodeId;
        public readonly ImmutableArray<Outputs.GetCceNodesNodeResult> Nodes;
        public readonly string Region;
        public readonly string? Status;

        [OutputConstructor]
        private GetCceNodesResult(
            string clusterId,

            string id,

            ImmutableArray<string> ids,

            string? ignoreDetails,

            string? name,

            string? nodeId,

            ImmutableArray<Outputs.GetCceNodesNodeResult> nodes,

            string region,

            string? status)
        {
            ClusterId = clusterId;
            Id = id;
            Ids = ids;
            IgnoreDetails = ignoreDetails;
            Name = name;
            NodeId = nodeId;
            Nodes = nodes;
            Region = region;
            Status = status;
        }
    }
}
