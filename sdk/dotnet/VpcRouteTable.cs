// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/vpcRouteTable:VpcRouteTable")]
    public partial class VpcRouteTable : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("routes")]
        public Output<ImmutableArray<Outputs.VpcRouteTableRoute>> Routes { get; private set; } = null!;

        [Output("subnets")]
        public Output<ImmutableArray<string>> Subnets { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcRouteTable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcRouteTable(string name, VpcRouteTableArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcRouteTable:VpcRouteTable", name, args ?? new VpcRouteTableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcRouteTable(string name, Input<string> id, VpcRouteTableState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcRouteTable:VpcRouteTable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcRouteTable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcRouteTable Get(string name, Input<string> id, VpcRouteTableState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcRouteTable(name, id, state, options);
        }
    }

    public sealed class VpcRouteTableArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("routes")]
        private InputList<Inputs.VpcRouteTableRouteArgs>? _routes;
        public InputList<Inputs.VpcRouteTableRouteArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.VpcRouteTableRouteArgs>());
            set => _routes = value;
        }

        [Input("subnets")]
        private InputList<string>? _subnets;
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public VpcRouteTableArgs()
        {
        }
        public static new VpcRouteTableArgs Empty => new VpcRouteTableArgs();
    }

    public sealed class VpcRouteTableState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("routes")]
        private InputList<Inputs.VpcRouteTableRouteGetArgs>? _routes;
        public InputList<Inputs.VpcRouteTableRouteGetArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.VpcRouteTableRouteGetArgs>());
            set => _routes = value;
        }

        [Input("subnets")]
        private InputList<string>? _subnets;
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public VpcRouteTableState()
        {
        }
        public static new VpcRouteTableState Empty => new VpcRouteTableState();
    }
}
