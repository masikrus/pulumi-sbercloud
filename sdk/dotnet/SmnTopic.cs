// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/smnTopic:SmnTopic")]
    public partial class SmnTopic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// schema: Internal
        /// </summary>
        [Output("accessPolicy")]
        public Output<string?> AccessPolicy { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("introduction")]
        public Output<string?> Introduction { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pushPolicy")]
        public Output<int> PushPolicy { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("servicesPublishAllowed")]
        public Output<string?> ServicesPublishAllowed { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("topicUrn")]
        public Output<string> TopicUrn { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        [Output("usersPublishAllowed")]
        public Output<string?> UsersPublishAllowed { get; private set; } = null!;


        /// <summary>
        /// Create a SmnTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SmnTopic(string name, SmnTopicArgs? args = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/smnTopic:SmnTopic", name, args ?? new SmnTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SmnTopic(string name, Input<string> id, SmnTopicState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/smnTopic:SmnTopic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SmnTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SmnTopic Get(string name, Input<string> id, SmnTopicState? state = null, CustomResourceOptions? options = null)
        {
            return new SmnTopic(name, id, state, options);
        }
    }

    public sealed class SmnTopicArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// schema: Internal
        /// </summary>
        [Input("accessPolicy")]
        public Input<string>? AccessPolicy { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("introduction")]
        public Input<string>? Introduction { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("servicesPublishAllowed")]
        public Input<string>? ServicesPublishAllowed { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("usersPublishAllowed")]
        public Input<string>? UsersPublishAllowed { get; set; }

        public SmnTopicArgs()
        {
        }
        public static new SmnTopicArgs Empty => new SmnTopicArgs();
    }

    public sealed class SmnTopicState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// schema: Internal
        /// </summary>
        [Input("accessPolicy")]
        public Input<string>? AccessPolicy { get; set; }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("introduction")]
        public Input<string>? Introduction { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pushPolicy")]
        public Input<int>? PushPolicy { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("servicesPublishAllowed")]
        public Input<string>? ServicesPublishAllowed { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("topicUrn")]
        public Input<string>? TopicUrn { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("usersPublishAllowed")]
        public Input<string>? UsersPublishAllowed { get; set; }

        public SmnTopicState()
        {
        }
        public static new SmnTopicState Empty => new SmnTopicState();
    }
}
