// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/dliSparkJob:DliSparkJob")]
    public partial class DliSparkJob : global::Pulumi.CustomResource
    {
        [Output("appName")]
        public Output<string> AppName { get; private set; } = null!;

        [Output("appParameters")]
        public Output<ImmutableArray<string>> AppParameters { get; private set; } = null!;

        [Output("configurations")]
        public Output<ImmutableDictionary<string, string>?> Configurations { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("dependentPackages")]
        public Output<ImmutableArray<Outputs.DliSparkJobDependentPackage>> DependentPackages { get; private set; } = null!;

        [Output("driverCores")]
        public Output<int?> DriverCores { get; private set; } = null!;

        [Output("driverMemory")]
        public Output<string?> DriverMemory { get; private set; } = null!;

        [Output("executorCores")]
        public Output<int?> ExecutorCores { get; private set; } = null!;

        [Output("executorMemory")]
        public Output<string?> ExecutorMemory { get; private set; } = null!;

        [Output("executors")]
        public Output<int?> Executors { get; private set; } = null!;

        [Output("feature")]
        public Output<string?> Feature { get; private set; } = null!;

        [Output("files")]
        public Output<ImmutableArray<string>> Files { get; private set; } = null!;

        [Output("jars")]
        public Output<ImmutableArray<string>> Jars { get; private set; } = null!;

        [Output("mainClass")]
        public Output<string?> MainClass { get; private set; } = null!;

        [Output("maxRetries")]
        public Output<int?> MaxRetries { get; private set; } = null!;

        [Output("modules")]
        public Output<ImmutableArray<string>> Modules { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        [Output("pythonFiles")]
        public Output<ImmutableArray<string>> PythonFiles { get; private set; } = null!;

        [Output("queueName")]
        public Output<string> QueueName { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("sparkVersion")]
        public Output<string?> SparkVersion { get; private set; } = null!;

        [Output("specification")]
        public Output<string?> Specification { get; private set; } = null!;


        /// <summary>
        /// Create a DliSparkJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DliSparkJob(string name, DliSparkJobArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/dliSparkJob:DliSparkJob", name, args ?? new DliSparkJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DliSparkJob(string name, Input<string> id, DliSparkJobState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/dliSparkJob:DliSparkJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DliSparkJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DliSparkJob Get(string name, Input<string> id, DliSparkJobState? state = null, CustomResourceOptions? options = null)
        {
            return new DliSparkJob(name, id, state, options);
        }
    }

    public sealed class DliSparkJobArgs : global::Pulumi.ResourceArgs
    {
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        [Input("appParameters")]
        private InputList<string>? _appParameters;
        public InputList<string> AppParameters
        {
            get => _appParameters ?? (_appParameters = new InputList<string>());
            set => _appParameters = value;
        }

        [Input("configurations")]
        private InputMap<string>? _configurations;
        public InputMap<string> Configurations
        {
            get => _configurations ?? (_configurations = new InputMap<string>());
            set => _configurations = value;
        }

        [Input("dependentPackages")]
        private InputList<Inputs.DliSparkJobDependentPackageArgs>? _dependentPackages;
        public InputList<Inputs.DliSparkJobDependentPackageArgs> DependentPackages
        {
            get => _dependentPackages ?? (_dependentPackages = new InputList<Inputs.DliSparkJobDependentPackageArgs>());
            set => _dependentPackages = value;
        }

        [Input("driverCores")]
        public Input<int>? DriverCores { get; set; }

        [Input("driverMemory")]
        public Input<string>? DriverMemory { get; set; }

        [Input("executorCores")]
        public Input<int>? ExecutorCores { get; set; }

        [Input("executorMemory")]
        public Input<string>? ExecutorMemory { get; set; }

        [Input("executors")]
        public Input<int>? Executors { get; set; }

        [Input("feature")]
        public Input<string>? Feature { get; set; }

        [Input("files")]
        private InputList<string>? _files;
        public InputList<string> Files
        {
            get => _files ?? (_files = new InputList<string>());
            set => _files = value;
        }

        [Input("jars")]
        private InputList<string>? _jars;
        public InputList<string> Jars
        {
            get => _jars ?? (_jars = new InputList<string>());
            set => _jars = value;
        }

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("maxRetries")]
        public Input<int>? MaxRetries { get; set; }

        [Input("modules")]
        private InputList<string>? _modules;
        public InputList<string> Modules
        {
            get => _modules ?? (_modules = new InputList<string>());
            set => _modules = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pythonFiles")]
        private InputList<string>? _pythonFiles;
        public InputList<string> PythonFiles
        {
            get => _pythonFiles ?? (_pythonFiles = new InputList<string>());
            set => _pythonFiles = value;
        }

        [Input("queueName", required: true)]
        public Input<string> QueueName { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sparkVersion")]
        public Input<string>? SparkVersion { get; set; }

        [Input("specification")]
        public Input<string>? Specification { get; set; }

        public DliSparkJobArgs()
        {
        }
        public static new DliSparkJobArgs Empty => new DliSparkJobArgs();
    }

    public sealed class DliSparkJobState : global::Pulumi.ResourceArgs
    {
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        [Input("appParameters")]
        private InputList<string>? _appParameters;
        public InputList<string> AppParameters
        {
            get => _appParameters ?? (_appParameters = new InputList<string>());
            set => _appParameters = value;
        }

        [Input("configurations")]
        private InputMap<string>? _configurations;
        public InputMap<string> Configurations
        {
            get => _configurations ?? (_configurations = new InputMap<string>());
            set => _configurations = value;
        }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("dependentPackages")]
        private InputList<Inputs.DliSparkJobDependentPackageGetArgs>? _dependentPackages;
        public InputList<Inputs.DliSparkJobDependentPackageGetArgs> DependentPackages
        {
            get => _dependentPackages ?? (_dependentPackages = new InputList<Inputs.DliSparkJobDependentPackageGetArgs>());
            set => _dependentPackages = value;
        }

        [Input("driverCores")]
        public Input<int>? DriverCores { get; set; }

        [Input("driverMemory")]
        public Input<string>? DriverMemory { get; set; }

        [Input("executorCores")]
        public Input<int>? ExecutorCores { get; set; }

        [Input("executorMemory")]
        public Input<string>? ExecutorMemory { get; set; }

        [Input("executors")]
        public Input<int>? Executors { get; set; }

        [Input("feature")]
        public Input<string>? Feature { get; set; }

        [Input("files")]
        private InputList<string>? _files;
        public InputList<string> Files
        {
            get => _files ?? (_files = new InputList<string>());
            set => _files = value;
        }

        [Input("jars")]
        private InputList<string>? _jars;
        public InputList<string> Jars
        {
            get => _jars ?? (_jars = new InputList<string>());
            set => _jars = value;
        }

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("maxRetries")]
        public Input<int>? MaxRetries { get; set; }

        [Input("modules")]
        private InputList<string>? _modules;
        public InputList<string> Modules
        {
            get => _modules ?? (_modules = new InputList<string>());
            set => _modules = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("pythonFiles")]
        private InputList<string>? _pythonFiles;
        public InputList<string> PythonFiles
        {
            get => _pythonFiles ?? (_pythonFiles = new InputList<string>());
            set => _pythonFiles = value;
        }

        [Input("queueName")]
        public Input<string>? QueueName { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sparkVersion")]
        public Input<string>? SparkVersion { get; set; }

        [Input("specification")]
        public Input<string>? Specification { get; set; }

        public DliSparkJobState()
        {
        }
        public static new DliSparkJobState Empty => new DliSparkJobState();
    }
}
