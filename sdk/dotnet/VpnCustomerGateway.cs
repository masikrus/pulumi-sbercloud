// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/vpnCustomerGateway:VpnCustomerGateway")]
    public partial class VpnCustomerGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The BGP ASN number of the customer gateway, the default value is 65000.
        /// </summary>
        [Output("asn")]
        public Output<int?> Asn { get; private set; } = null!;

        [Output("certificateContent")]
        public Output<string?> CertificateContent { get; private set; } = null!;

        [Output("certificateId")]
        public Output<string> CertificateId { get; private set; } = null!;

        /// <summary>
        /// The create time.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        /// <summary>
        /// The identifier type of a customer gateway.
        /// </summary>
        [Output("idType")]
        public Output<string?> IdType { get; private set; } = null!;

        /// <summary>
        /// The identifier of a customer gateway.
        /// </summary>
        [Output("idValue")]
        public Output<string> IdValue { get; private set; } = null!;

        /// <summary>
        /// The IP address of the customer gateway.
        /// </summary>
        [Output("ip")]
        public Output<string?> Ip { get; private set; } = null!;

        [Output("isUpdatable")]
        public Output<bool> IsUpdatable { get; private set; } = null!;

        [Output("issuer")]
        public Output<string> Issuer { get; private set; } = null!;

        /// <summary>
        /// The customer gateway name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The route mode of the customer gateway.
        /// </summary>
        [Output("routeMode")]
        public Output<string?> RouteMode { get; private set; } = null!;

        [Output("serialNumber")]
        public Output<string> SerialNumber { get; private set; } = null!;

        [Output("signatureAlgorithm")]
        public Output<string> SignatureAlgorithm { get; private set; } = null!;

        [Output("subject")]
        public Output<string> Subject { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The update time.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a VpnCustomerGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpnCustomerGateway(string name, VpnCustomerGatewayArgs? args = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpnCustomerGateway:VpnCustomerGateway", name, args ?? new VpnCustomerGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpnCustomerGateway(string name, Input<string> id, VpnCustomerGatewayState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpnCustomerGateway:VpnCustomerGateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpnCustomerGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpnCustomerGateway Get(string name, Input<string> id, VpnCustomerGatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new VpnCustomerGateway(name, id, state, options);
        }
    }

    public sealed class VpnCustomerGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The BGP ASN number of the customer gateway, the default value is 65000.
        /// </summary>
        [Input("asn")]
        public Input<int>? Asn { get; set; }

        [Input("certificateContent")]
        public Input<string>? CertificateContent { get; set; }

        /// <summary>
        /// The identifier type of a customer gateway.
        /// </summary>
        [Input("idType")]
        public Input<string>? IdType { get; set; }

        /// <summary>
        /// The identifier of a customer gateway.
        /// </summary>
        [Input("idValue")]
        public Input<string>? IdValue { get; set; }

        /// <summary>
        /// The IP address of the customer gateway.
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// The customer gateway name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The route mode of the customer gateway.
        /// </summary>
        [Input("routeMode")]
        public Input<string>? RouteMode { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public VpnCustomerGatewayArgs()
        {
        }
        public static new VpnCustomerGatewayArgs Empty => new VpnCustomerGatewayArgs();
    }

    public sealed class VpnCustomerGatewayState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The BGP ASN number of the customer gateway, the default value is 65000.
        /// </summary>
        [Input("asn")]
        public Input<int>? Asn { get; set; }

        [Input("certificateContent")]
        public Input<string>? CertificateContent { get; set; }

        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// The create time.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        /// <summary>
        /// The identifier type of a customer gateway.
        /// </summary>
        [Input("idType")]
        public Input<string>? IdType { get; set; }

        /// <summary>
        /// The identifier of a customer gateway.
        /// </summary>
        [Input("idValue")]
        public Input<string>? IdValue { get; set; }

        /// <summary>
        /// The IP address of the customer gateway.
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        [Input("isUpdatable")]
        public Input<bool>? IsUpdatable { get; set; }

        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        /// <summary>
        /// The customer gateway name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The route mode of the customer gateway.
        /// </summary>
        [Input("routeMode")]
        public Input<string>? RouteMode { get; set; }

        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        [Input("signatureAlgorithm")]
        public Input<string>? SignatureAlgorithm { get; set; }

        [Input("subject")]
        public Input<string>? Subject { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The update time.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public VpnCustomerGatewayState()
        {
        }
        public static new VpnCustomerGatewayState Empty => new VpnCustomerGatewayState();
    }
}
