// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/vpcSubnet:VpcSubnet")]
    public partial class VpcSubnet : global::Pulumi.CustomResource
    {
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("cidr")]
        public Output<string> Cidr { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("dhcpEnable")]
        public Output<bool?> DhcpEnable { get; private set; } = null!;

        [Output("dhcpLeaseTime")]
        public Output<string> DhcpLeaseTime { get; private set; } = null!;

        [Output("dnsLists")]
        public Output<ImmutableArray<string>> DnsLists { get; private set; } = null!;

        [Output("gatewayIp")]
        public Output<string> GatewayIp { get; private set; } = null!;

        [Output("ipv4SubnetId")]
        public Output<string> Ipv4SubnetId { get; private set; } = null!;

        [Output("ipv6Cidr")]
        public Output<string> Ipv6Cidr { get; private set; } = null!;

        [Output("ipv6Enable")]
        public Output<bool?> Ipv6Enable { get; private set; } = null!;

        [Output("ipv6Gateway")]
        public Output<string> Ipv6Gateway { get; private set; } = null!;

        [Output("ipv6SubnetId")]
        public Output<string> Ipv6SubnetId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ntpServerAddress")]
        public Output<string?> NtpServerAddress { get; private set; } = null!;

        [Output("primaryDns")]
        public Output<string> PrimaryDns { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("secondaryDns")]
        public Output<string> SecondaryDns { get; private set; } = null!;

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcSubnet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcSubnet(string name, VpcSubnetArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcSubnet:VpcSubnet", name, args ?? new VpcSubnetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcSubnet(string name, Input<string> id, VpcSubnetState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/vpcSubnet:VpcSubnet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcSubnet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcSubnet Get(string name, Input<string> id, VpcSubnetState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcSubnet(name, id, state, options);
        }
    }

    public sealed class VpcSubnetArgs : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("cidr", required: true)]
        public Input<string> Cidr { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dhcpEnable")]
        public Input<bool>? DhcpEnable { get; set; }

        [Input("dhcpLeaseTime")]
        public Input<string>? DhcpLeaseTime { get; set; }

        [Input("dnsLists")]
        private InputList<string>? _dnsLists;
        public InputList<string> DnsLists
        {
            get => _dnsLists ?? (_dnsLists = new InputList<string>());
            set => _dnsLists = value;
        }

        [Input("gatewayIp", required: true)]
        public Input<string> GatewayIp { get; set; } = null!;

        [Input("ipv6Enable")]
        public Input<bool>? Ipv6Enable { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ntpServerAddress")]
        public Input<string>? NtpServerAddress { get; set; }

        [Input("primaryDns")]
        public Input<string>? PrimaryDns { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("secondaryDns")]
        public Input<string>? SecondaryDns { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public VpcSubnetArgs()
        {
        }
        public static new VpcSubnetArgs Empty => new VpcSubnetArgs();
    }

    public sealed class VpcSubnetState : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dhcpEnable")]
        public Input<bool>? DhcpEnable { get; set; }

        [Input("dhcpLeaseTime")]
        public Input<string>? DhcpLeaseTime { get; set; }

        [Input("dnsLists")]
        private InputList<string>? _dnsLists;
        public InputList<string> DnsLists
        {
            get => _dnsLists ?? (_dnsLists = new InputList<string>());
            set => _dnsLists = value;
        }

        [Input("gatewayIp")]
        public Input<string>? GatewayIp { get; set; }

        [Input("ipv4SubnetId")]
        public Input<string>? Ipv4SubnetId { get; set; }

        [Input("ipv6Cidr")]
        public Input<string>? Ipv6Cidr { get; set; }

        [Input("ipv6Enable")]
        public Input<bool>? Ipv6Enable { get; set; }

        [Input("ipv6Gateway")]
        public Input<string>? Ipv6Gateway { get; set; }

        [Input("ipv6SubnetId")]
        public Input<string>? Ipv6SubnetId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ntpServerAddress")]
        public Input<string>? NtpServerAddress { get; set; }

        [Input("primaryDns")]
        public Input<string>? PrimaryDns { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("secondaryDns")]
        public Input<string>? SecondaryDns { get; set; }

        /// <summary>
        /// schema: Deprecated
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public VpcSubnetState()
        {
        }
        public static new VpcSubnetState Empty => new VpcSubnetState();
    }
}
