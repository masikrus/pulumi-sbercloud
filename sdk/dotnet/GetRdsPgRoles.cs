// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetRdsPgRoles
    {
        public static Task<GetRdsPgRolesResult> InvokeAsync(GetRdsPgRolesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRdsPgRolesResult>("sbercloud:index/getRdsPgRoles:getRdsPgRoles", args ?? new GetRdsPgRolesArgs(), options.WithDefaults());

        public static Output<GetRdsPgRolesResult> Invoke(GetRdsPgRolesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsPgRolesResult>("sbercloud:index/getRdsPgRoles:getRdsPgRoles", args ?? new GetRdsPgRolesInvokeArgs(), options.WithDefaults());

        public static Output<GetRdsPgRolesResult> Invoke(GetRdsPgRolesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsPgRolesResult>("sbercloud:index/getRdsPgRoles:getRdsPgRoles", args ?? new GetRdsPgRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRdsPgRolesArgs : global::Pulumi.InvokeArgs
    {
        [Input("account")]
        public string? Account { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("region")]
        public string? Region { get; set; }

        public GetRdsPgRolesArgs()
        {
        }
        public static new GetRdsPgRolesArgs Empty => new GetRdsPgRolesArgs();
    }

    public sealed class GetRdsPgRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("account")]
        public Input<string>? Account { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetRdsPgRolesInvokeArgs()
        {
        }
        public static new GetRdsPgRolesInvokeArgs Empty => new GetRdsPgRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRdsPgRolesResult
    {
        public readonly string? Account;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string Region;
        public readonly ImmutableArray<string> Roles;

        [OutputConstructor]
        private GetRdsPgRolesResult(
            string? account,

            string id,

            string instanceId,

            string region,

            ImmutableArray<string> roles)
        {
            Account = account;
            Id = id;
            InstanceId = instanceId;
            Region = region;
            Roles = roles;
        }
    }
}
