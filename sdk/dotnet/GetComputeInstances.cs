// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetComputeInstances
    {
        public static Task<GetComputeInstancesResult> InvokeAsync(GetComputeInstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeInstancesResult>("sbercloud:index/getComputeInstances:getComputeInstances", args ?? new GetComputeInstancesArgs(), options.WithDefaults());

        public static Output<GetComputeInstancesResult> Invoke(GetComputeInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeInstancesResult>("sbercloud:index/getComputeInstances:getComputeInstances", args ?? new GetComputeInstancesInvokeArgs(), options.WithDefaults());

        public static Output<GetComputeInstancesResult> Invoke(GetComputeInstancesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeInstancesResult>("sbercloud:index/getComputeInstances:getComputeInstances", args ?? new GetComputeInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeInstancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("fixedIpV4")]
        public string? FixedIpV4 { get; set; }

        [Input("flavorId")]
        public string? FlavorId { get; set; }

        [Input("flavorName")]
        public string? FlavorName { get; set; }

        [Input("imageId")]
        public string? ImageId { get; set; }

        [Input("instanceId")]
        public string? InstanceId { get; set; }

        [Input("keyPair")]
        public string? KeyPair { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetComputeInstancesArgs()
        {
        }
        public static new GetComputeInstancesArgs Empty => new GetComputeInstancesArgs();
    }

    public sealed class GetComputeInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("fixedIpV4")]
        public Input<string>? FixedIpV4 { get; set; }

        [Input("flavorId")]
        public Input<string>? FlavorId { get; set; }

        [Input("flavorName")]
        public Input<string>? FlavorName { get; set; }

        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetComputeInstancesInvokeArgs()
        {
        }
        public static new GetComputeInstancesInvokeArgs Empty => new GetComputeInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeInstancesResult
    {
        public readonly string? AvailabilityZone;
        public readonly string? EnterpriseProjectId;
        public readonly string? FixedIpV4;
        public readonly string? FlavorId;
        public readonly string? FlavorName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ImageId;
        public readonly string? InstanceId;
        public readonly ImmutableArray<Outputs.GetComputeInstancesInstanceResult> Instances;
        public readonly string? KeyPair;
        public readonly string? Name;
        public readonly string? Region;
        public readonly string? Status;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetComputeInstancesResult(
            string? availabilityZone,

            string? enterpriseProjectId,

            string? fixedIpV4,

            string? flavorId,

            string? flavorName,

            string id,

            string? imageId,

            string? instanceId,

            ImmutableArray<Outputs.GetComputeInstancesInstanceResult> instances,

            string? keyPair,

            string? name,

            string? region,

            string? status,

            ImmutableDictionary<string, string>? tags)
        {
            AvailabilityZone = availabilityZone;
            EnterpriseProjectId = enterpriseProjectId;
            FixedIpV4 = fixedIpV4;
            FlavorId = flavorId;
            FlavorName = flavorName;
            Id = id;
            ImageId = imageId;
            InstanceId = instanceId;
            Instances = instances;
            KeyPair = keyPair;
            Name = name;
            Region = region;
            Status = status;
            Tags = tags;
        }
    }
}
