// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetRdsInstancesInstanceResult
    {
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly ImmutableArray<Outputs.GetRdsInstancesInstanceBackupStrategyResult> BackupStrategies;
        public readonly string Created;
        public readonly ImmutableArray<Outputs.GetRdsInstancesInstanceDbResult> Dbs;
        public readonly string EnterpriseProjectId;
        public readonly string FixedIp;
        public readonly string Flavor;
        public readonly string HaReplicationMode;
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetRdsInstancesInstanceNodeResult> Nodes;
        public readonly string ParamGroupId;
        public readonly ImmutableArray<string> PrivateIps;
        public readonly ImmutableArray<string> PublicIps;
        public readonly string Region;
        public readonly string SecurityGroupId;
        public readonly bool SslEnable;
        public readonly string Status;
        public readonly string SubnetId;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string TimeZone;
        public readonly ImmutableArray<Outputs.GetRdsInstancesInstanceVolumeResult> Volumes;
        public readonly string VpcId;

        [OutputConstructor]
        private GetRdsInstancesInstanceResult(
            ImmutableArray<string> availabilityZones,

            ImmutableArray<Outputs.GetRdsInstancesInstanceBackupStrategyResult> backupStrategies,

            string created,

            ImmutableArray<Outputs.GetRdsInstancesInstanceDbResult> dbs,

            string enterpriseProjectId,

            string fixedIp,

            string flavor,

            string haReplicationMode,

            string id,

            string name,

            ImmutableArray<Outputs.GetRdsInstancesInstanceNodeResult> nodes,

            string paramGroupId,

            ImmutableArray<string> privateIps,

            ImmutableArray<string> publicIps,

            string region,

            string securityGroupId,

            bool sslEnable,

            string status,

            string subnetId,

            ImmutableDictionary<string, string> tags,

            string timeZone,

            ImmutableArray<Outputs.GetRdsInstancesInstanceVolumeResult> volumes,

            string vpcId)
        {
            AvailabilityZones = availabilityZones;
            BackupStrategies = backupStrategies;
            Created = created;
            Dbs = dbs;
            EnterpriseProjectId = enterpriseProjectId;
            FixedIp = fixedIp;
            Flavor = flavor;
            HaReplicationMode = haReplicationMode;
            Id = id;
            Name = name;
            Nodes = nodes;
            ParamGroupId = paramGroupId;
            PrivateIps = privateIps;
            PublicIps = publicIps;
            Region = region;
            SecurityGroupId = securityGroupId;
            SslEnable = sslEnable;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
            TimeZone = timeZone;
            Volumes = volumes;
            VpcId = vpcId;
        }
    }
}
