// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetVpnConnectionsConnectionResult
    {
        public readonly string ConnectionMonitorId;
        public readonly string CreatedAt;
        public readonly string CustomerGatewayId;
        public readonly bool EnableNqa;
        public readonly string EnterpriseProjectId;
        public readonly string GatewayId;
        public readonly string GatewayIp;
        public readonly string HaRole;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetVpnConnectionsConnectionIkepolicyResult> Ikepolicies;
        public readonly ImmutableArray<Outputs.GetVpnConnectionsConnectionIpsecpolicyResult> Ipsecpolicies;
        public readonly string Name;
        public readonly ImmutableArray<string> PeerSubnets;
        public readonly ImmutableArray<Outputs.GetVpnConnectionsConnectionPolicyRuleResult> PolicyRules;
        public readonly string Status;
        public readonly string TunnelLocalAddress;
        public readonly string TunnelPeerAddress;
        public readonly string UpdatedAt;
        public readonly string VpnType;

        [OutputConstructor]
        private GetVpnConnectionsConnectionResult(
            string connectionMonitorId,

            string createdAt,

            string customerGatewayId,

            bool enableNqa,

            string enterpriseProjectId,

            string gatewayId,

            string gatewayIp,

            string haRole,

            string id,

            ImmutableArray<Outputs.GetVpnConnectionsConnectionIkepolicyResult> ikepolicies,

            ImmutableArray<Outputs.GetVpnConnectionsConnectionIpsecpolicyResult> ipsecpolicies,

            string name,

            ImmutableArray<string> peerSubnets,

            ImmutableArray<Outputs.GetVpnConnectionsConnectionPolicyRuleResult> policyRules,

            string status,

            string tunnelLocalAddress,

            string tunnelPeerAddress,

            string updatedAt,

            string vpnType)
        {
            ConnectionMonitorId = connectionMonitorId;
            CreatedAt = createdAt;
            CustomerGatewayId = customerGatewayId;
            EnableNqa = enableNqa;
            EnterpriseProjectId = enterpriseProjectId;
            GatewayId = gatewayId;
            GatewayIp = gatewayIp;
            HaRole = haRole;
            Id = id;
            Ikepolicies = ikepolicies;
            Ipsecpolicies = ipsecpolicies;
            Name = name;
            PeerSubnets = peerSubnets;
            PolicyRules = policyRules;
            Status = status;
            TunnelLocalAddress = tunnelLocalAddress;
            TunnelPeerAddress = tunnelPeerAddress;
            UpdatedAt = updatedAt;
            VpnType = vpnType;
        }
    }
}
