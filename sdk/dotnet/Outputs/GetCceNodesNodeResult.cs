// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetCceNodesNodeResult
    {
        public readonly string AvailabilityZone;
        public readonly int BillingMode;
        public readonly ImmutableArray<Outputs.GetCceNodesNodeDataVolumeResult> DataVolumes;
        public readonly string EcsGroupId;
        public readonly string EnterpriseProjectId;
        public readonly string FlavorId;
        public readonly ImmutableArray<Outputs.GetCceNodesNodeHostnameConfigResult> HostnameConfigs;
        public readonly string Id;
        public readonly string KeyPair;
        public readonly string Name;
        public readonly string Os;
        public readonly string PrivateIp;
        public readonly string PublicIp;
        public readonly ImmutableArray<Outputs.GetCceNodesNodeRootVolumeResult> RootVolumes;
        public readonly string ServerId;
        public readonly string Status;
        public readonly string SubnetId;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetCceNodesNodeResult(
            string availabilityZone,

            int billingMode,

            ImmutableArray<Outputs.GetCceNodesNodeDataVolumeResult> dataVolumes,

            string ecsGroupId,

            string enterpriseProjectId,

            string flavorId,

            ImmutableArray<Outputs.GetCceNodesNodeHostnameConfigResult> hostnameConfigs,

            string id,

            string keyPair,

            string name,

            string os,

            string privateIp,

            string publicIp,

            ImmutableArray<Outputs.GetCceNodesNodeRootVolumeResult> rootVolumes,

            string serverId,

            string status,

            string subnetId,

            ImmutableDictionary<string, string> tags)
        {
            AvailabilityZone = availabilityZone;
            BillingMode = billingMode;
            DataVolumes = dataVolumes;
            EcsGroupId = ecsGroupId;
            EnterpriseProjectId = enterpriseProjectId;
            FlavorId = flavorId;
            HostnameConfigs = hostnameConfigs;
            Id = id;
            KeyPair = keyPair;
            Name = name;
            Os = os;
            PrivateIp = privateIp;
            PublicIp = publicIp;
            RootVolumes = rootVolumes;
            ServerId = serverId;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
        }
    }
}
