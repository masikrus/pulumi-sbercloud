// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class VpnConnectionIkepolicy
    {
        /// <summary>
        /// The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.
        /// </summary>
        public readonly string? AuthenticationAlgorithm;
        /// <summary>
        /// The authentication method during IKE negotiation.
        /// </summary>
        public readonly string? AuthenticationMethod;
        /// <summary>
        /// Specifies the DH group used for key exchange in phase 1.
        /// </summary>
        public readonly string? DhGroup;
        /// <summary>
        /// Specifies the dead peer detection (DPD) object.
        /// </summary>
        public readonly Outputs.VpnConnectionIkepolicyDpd? Dpd;
        /// <summary>
        /// The encryption algorithm, 3DES is less secure, please use them with caution.
        /// </summary>
        public readonly string? EncryptionAlgorithm;
        /// <summary>
        /// The IKE negotiation version.
        /// </summary>
        public readonly string? IkeVersion;
        /// <summary>
        /// The life cycle of SA in seconds, when the life cycle expires, IKE SA will be automatically updated.
        /// </summary>
        public readonly int? LifetimeSeconds;
        /// <summary>
        /// The local ID.
        /// </summary>
        public readonly string? LocalId;
        /// <summary>
        /// The local ID type.
        /// </summary>
        public readonly string? LocalIdType;
        /// <summary>
        /// The peer ID.
        /// </summary>
        public readonly string? PeerId;
        /// <summary>
        /// The peer ID type.
        /// </summary>
        public readonly string? PeerIdType;
        /// <summary>
        /// The DH key group used by PFS.
        /// </summary>
        public readonly string? Pfs;
        /// <summary>
        /// The negotiation mode, only works when the ike_version is v1.
        /// </summary>
        public readonly string? Phase1NegotiationMode;

        [OutputConstructor]
        private VpnConnectionIkepolicy(
            string? authenticationAlgorithm,

            string? authenticationMethod,

            string? dhGroup,

            Outputs.VpnConnectionIkepolicyDpd? dpd,

            string? encryptionAlgorithm,

            string? ikeVersion,

            int? lifetimeSeconds,

            string? localId,

            string? localIdType,

            string? peerId,

            string? peerIdType,

            string? pfs,

            string? phase1NegotiationMode)
        {
            AuthenticationAlgorithm = authenticationAlgorithm;
            AuthenticationMethod = authenticationMethod;
            DhGroup = dhGroup;
            Dpd = dpd;
            EncryptionAlgorithm = encryptionAlgorithm;
            IkeVersion = ikeVersion;
            LifetimeSeconds = lifetimeSeconds;
            LocalId = localId;
            LocalIdType = localIdType;
            PeerId = peerId;
            PeerIdType = peerIdType;
            Pfs = pfs;
            Phase1NegotiationMode = phase1NegotiationMode;
        }
    }
}
