// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetEvsVolumesVolumeResult
    {
        public readonly ImmutableArray<Outputs.GetEvsVolumesVolumeAttachmentResult> Attachments;
        public readonly string AvailabilityZone;
        public readonly bool Bootable;
        public readonly string CreateAt;
        public readonly string Description;
        public readonly string EnterpriseProjectId;
        public readonly string Id;
        public readonly int Iops;
        public readonly string Name;
        public readonly string ServiceType;
        public readonly bool Shareable;
        public readonly int Size;
        public readonly string Status;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly int Throughput;
        public readonly string UpdateAt;
        public readonly string VolumeType;
        public readonly string Wwn;

        [OutputConstructor]
        private GetEvsVolumesVolumeResult(
            ImmutableArray<Outputs.GetEvsVolumesVolumeAttachmentResult> attachments,

            string availabilityZone,

            bool bootable,

            string createAt,

            string description,

            string enterpriseProjectId,

            string id,

            int iops,

            string name,

            string serviceType,

            bool shareable,

            int size,

            string status,

            ImmutableDictionary<string, string> tags,

            int throughput,

            string updateAt,

            string volumeType,

            string wwn)
        {
            Attachments = attachments;
            AvailabilityZone = availabilityZone;
            Bootable = bootable;
            CreateAt = createAt;
            Description = description;
            EnterpriseProjectId = enterpriseProjectId;
            Id = id;
            Iops = iops;
            Name = name;
            ServiceType = serviceType;
            Shareable = shareable;
            Size = size;
            Status = status;
            Tags = tags;
            Throughput = throughput;
            UpdateAt = updateAt;
            VolumeType = volumeType;
            Wwn = wwn;
        }
    }
}
