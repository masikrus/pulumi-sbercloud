// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetApigApiWebResult
    {
        /// <summary>
        /// The ID of the backend custom authorization.
        /// </summary>
        public readonly string AuthorizerId;
        /// <summary>
        /// The backend service address.
        /// </summary>
        public readonly string BackendAddress;
        /// <summary>
        /// The proxy host header.
        /// </summary>
        public readonly string HostHeader;
        /// <summary>
        /// The ID of the backend configuration.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The backend request path.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// The backend request method of the API.
        /// </summary>
        public readonly string RequestMethod;
        /// <summary>
        /// The web protocol type of the API request.
        /// </summary>
        public readonly string RequestProtocol;
        /// <summary>
        /// The number of retry attempts to request the backend service.
        /// </summary>
        public readonly int RetryCount;
        /// <summary>
        /// Whether to enable two-way authentication.
        /// </summary>
        public readonly bool SslEnable;
        /// <summary>
        /// The timeout for API requests to backend service.
        /// </summary>
        public readonly int Timeout;
        /// <summary>
        /// The VPC channel ID.
        /// </summary>
        public readonly string VpcChannelId;

        [OutputConstructor]
        private GetApigApiWebResult(
            string authorizerId,

            string backendAddress,

            string hostHeader,

            string id,

            string path,

            string requestMethod,

            string requestProtocol,

            int retryCount,

            bool sslEnable,

            int timeout,

            string vpcChannelId)
        {
            AuthorizerId = authorizerId;
            BackendAddress = backendAddress;
            HostHeader = hostHeader;
            Id = id;
            Path = path;
            RequestMethod = requestMethod;
            RequestProtocol = requestProtocol;
            RetryCount = retryCount;
            SslEnable = sslEnable;
            Timeout = timeout;
            VpcChannelId = vpcChannelId;
        }
    }
}
