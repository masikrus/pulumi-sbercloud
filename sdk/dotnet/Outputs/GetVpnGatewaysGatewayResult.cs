// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetVpnGatewaysGatewayResult
    {
        /// <summary>
        /// The list of private access IPs.
        /// </summary>
        public readonly ImmutableArray<string> AccessPrivateIps;
        /// <summary>
        /// The ID of the access subnet.
        /// </summary>
        public readonly string AccessSubnetId;
        /// <summary>
        /// The ID of the access VPC.
        /// </summary>
        public readonly string AccessVpcId;
        /// <summary>
        /// The attachment type.
        /// </summary>
        public readonly string AttachmentType;
        /// <summary>
        /// The availability zone IDs.
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// The ASN number of BGP
        /// </summary>
        public readonly int BgpAsn;
        /// <summary>
        /// The VPC network segment used by the VPN gateway
        /// </summary>
        public readonly string ConnectSubnet;
        /// <summary>
        /// The max number of connections.
        /// </summary>
        public readonly int ConnectionNumber;
        /// <summary>
        /// The create time.
        /// </summary>
        public readonly string CreatedAt;
        public readonly ImmutableArray<Outputs.GetVpnGatewaysGatewayEipResult> Eips;
        /// <summary>
        /// The enterprise project ID
        /// </summary>
        public readonly string EnterpriseProjectId;
        /// <summary>
        /// The ER attachment ID.
        /// </summary>
        public readonly string ErAttachmentId;
        /// <summary>
        /// The ID of the ER to which the VPN gateway is connected.
        /// </summary>
        public readonly string ErId;
        /// <summary>
        /// The flavor of the VPN gateway.
        /// </summary>
        public readonly string Flavor;
        /// <summary>
        /// The HA mode.
        /// </summary>
        public readonly string HaMode;
        /// <summary>
        /// The ID of the gateway
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The local subnets.
        /// </summary>
        public readonly ImmutableArray<string> LocalSubnets;
        /// <summary>
        /// The name of the gateway.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The network type of the gateway.
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// The status of the gateway.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The update time.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// The number of used connection groups.
        /// </summary>
        public readonly int UsedConnectionGroup;
        /// <summary>
        /// The number of used connections.
        /// </summary>
        public readonly int UsedConnectionNumber;
        /// <summary>
        /// The ID of the VPC to which the VPN gateway is connected.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetVpnGatewaysGatewayResult(
            ImmutableArray<string> accessPrivateIps,

            string accessSubnetId,

            string accessVpcId,

            string attachmentType,

            ImmutableArray<string> availabilityZones,

            int bgpAsn,

            string connectSubnet,

            int connectionNumber,

            string createdAt,

            ImmutableArray<Outputs.GetVpnGatewaysGatewayEipResult> eips,

            string enterpriseProjectId,

            string erAttachmentId,

            string erId,

            string flavor,

            string haMode,

            string id,

            ImmutableArray<string> localSubnets,

            string name,

            string networkType,

            string status,

            string updatedAt,

            int usedConnectionGroup,

            int usedConnectionNumber,

            string vpcId)
        {
            AccessPrivateIps = accessPrivateIps;
            AccessSubnetId = accessSubnetId;
            AccessVpcId = accessVpcId;
            AttachmentType = attachmentType;
            AvailabilityZones = availabilityZones;
            BgpAsn = bgpAsn;
            ConnectSubnet = connectSubnet;
            ConnectionNumber = connectionNumber;
            CreatedAt = createdAt;
            Eips = eips;
            EnterpriseProjectId = enterpriseProjectId;
            ErAttachmentId = erAttachmentId;
            ErId = erId;
            Flavor = flavor;
            HaMode = haMode;
            Id = id;
            LocalSubnets = localSubnets;
            Name = name;
            NetworkType = networkType;
            Status = status;
            UpdatedAt = updatedAt;
            UsedConnectionGroup = usedConnectionGroup;
            UsedConnectionNumber = usedConnectionNumber;
            VpcId = vpcId;
        }
    }
}
