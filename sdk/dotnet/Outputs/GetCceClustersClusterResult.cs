// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetCceClustersClusterResult
    {
        public readonly string AuthenticationMode;
        public readonly int BillingMode;
        public readonly ImmutableArray<Outputs.GetCceClustersClusterCertificateClusterResult> CertificateClusters;
        public readonly ImmutableArray<Outputs.GetCceClustersClusterCertificateUserResult> CertificateUsers;
        public readonly string ClusterType;
        public readonly string ClusterVersion;
        public readonly string ContainerNetworkCidr;
        public readonly string ContainerNetworkType;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetCceClustersClusterEndpointResult> Endpoints;
        public readonly string EniSubnetCidr;
        public readonly string EniSubnetId;
        public readonly string EnterpriseProjectId;
        public readonly string FlavorId;
        public readonly string Id;
        public readonly string KubeConfigRaw;
        public readonly ImmutableArray<Outputs.GetCceClustersClusterMasterResult> Masters;
        public readonly string Name;
        public readonly string SecurityGroupId;
        public readonly string ServiceNetworkCidr;
        public readonly string Status;
        public readonly string SubnetId;
        public readonly string VpcId;

        [OutputConstructor]
        private GetCceClustersClusterResult(
            string authenticationMode,

            int billingMode,

            ImmutableArray<Outputs.GetCceClustersClusterCertificateClusterResult> certificateClusters,

            ImmutableArray<Outputs.GetCceClustersClusterCertificateUserResult> certificateUsers,

            string clusterType,

            string clusterVersion,

            string containerNetworkCidr,

            string containerNetworkType,

            string description,

            ImmutableArray<Outputs.GetCceClustersClusterEndpointResult> endpoints,

            string eniSubnetCidr,

            string eniSubnetId,

            string enterpriseProjectId,

            string flavorId,

            string id,

            string kubeConfigRaw,

            ImmutableArray<Outputs.GetCceClustersClusterMasterResult> masters,

            string name,

            string securityGroupId,

            string serviceNetworkCidr,

            string status,

            string subnetId,

            string vpcId)
        {
            AuthenticationMode = authenticationMode;
            BillingMode = billingMode;
            CertificateClusters = certificateClusters;
            CertificateUsers = certificateUsers;
            ClusterType = clusterType;
            ClusterVersion = clusterVersion;
            ContainerNetworkCidr = containerNetworkCidr;
            ContainerNetworkType = containerNetworkType;
            Description = description;
            Endpoints = endpoints;
            EniSubnetCidr = eniSubnetCidr;
            EniSubnetId = eniSubnetId;
            EnterpriseProjectId = enterpriseProjectId;
            FlavorId = flavorId;
            Id = id;
            KubeConfigRaw = kubeConfigRaw;
            Masters = masters;
            Name = name;
            SecurityGroupId = securityGroupId;
            ServiceNetworkCidr = serviceNetworkCidr;
            Status = status;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
