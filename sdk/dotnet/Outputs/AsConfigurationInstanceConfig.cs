// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class AsConfigurationInstanceConfig
    {
        public readonly string? AdminPass;
        public readonly string? ChargingMode;
        public readonly string? DedicatedHostId;
        public readonly ImmutableArray<Outputs.AsConfigurationInstanceConfigDisk> Disks;
        public readonly string? EcsGroupId;
        public readonly string? Flavor;
        public readonly string? FlavorPriorityPolicy;
        public readonly string? Image;
        public readonly string? InstanceId;
        public readonly string? KeyName;
        public readonly ImmutableDictionary<string, string>? Metadata;
        public readonly ImmutableArray<Outputs.AsConfigurationInstanceConfigPersonality> Personalities;
        public readonly Outputs.AsConfigurationInstanceConfigPublicIp? PublicIp;
        /// <summary>
        /// schema: Required
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        public readonly string? Tenancy;
        public readonly string? UserData;

        [OutputConstructor]
        private AsConfigurationInstanceConfig(
            string? adminPass,

            string? chargingMode,

            string? dedicatedHostId,

            ImmutableArray<Outputs.AsConfigurationInstanceConfigDisk> disks,

            string? ecsGroupId,

            string? flavor,

            string? flavorPriorityPolicy,

            string? image,

            string? instanceId,

            string? keyName,

            ImmutableDictionary<string, string>? metadata,

            ImmutableArray<Outputs.AsConfigurationInstanceConfigPersonality> personalities,

            Outputs.AsConfigurationInstanceConfigPublicIp? publicIp,

            ImmutableArray<string> securityGroupIds,

            string? tenancy,

            string? userData)
        {
            AdminPass = adminPass;
            ChargingMode = chargingMode;
            DedicatedHostId = dedicatedHostId;
            Disks = disks;
            EcsGroupId = ecsGroupId;
            Flavor = flavor;
            FlavorPriorityPolicy = flavorPriorityPolicy;
            Image = image;
            InstanceId = instanceId;
            KeyName = keyName;
            Metadata = metadata;
            Personalities = personalities;
            PublicIp = publicIp;
            SecurityGroupIds = securityGroupIds;
            Tenancy = tenancy;
            UserData = userData;
        }
    }
}
