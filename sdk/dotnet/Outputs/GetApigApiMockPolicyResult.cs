// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud.Outputs
{

    [OutputType]
    public sealed class GetApigApiMockPolicyResult
    {
        /// <summary>
        /// The ID of the backend custom authorization.
        /// </summary>
        public readonly string AuthorizerId;
        /// <summary>
        /// The configuration list of backend parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApigApiMockPolicyBackendParamResult> BackendParams;
        /// <summary>
        /// The policy conditions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApigApiMockPolicyConditionResult> Conditions;
        /// <summary>
        /// The effective mode of the backend policy.
        /// </summary>
        public readonly string EffectiveMode;
        /// <summary>
        /// The ID of the mock backend policy.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The backend policy name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The response of the backend policy.
        /// </summary>
        public readonly string Response;
        /// <summary>
        /// The custom status code of the mock response.
        /// </summary>
        public readonly int StatusCode;

        [OutputConstructor]
        private GetApigApiMockPolicyResult(
            string authorizerId,

            ImmutableArray<Outputs.GetApigApiMockPolicyBackendParamResult> backendParams,

            ImmutableArray<Outputs.GetApigApiMockPolicyConditionResult> conditions,

            string effectiveMode,

            string id,

            string name,

            string response,

            int statusCode)
        {
            AuthorizerId = authorizerId;
            BackendParams = backendParams;
            Conditions = conditions;
            EffectiveMode = effectiveMode;
            Id = id;
            Name = name;
            Response = response;
            StatusCode = statusCode;
        }
    }
}
