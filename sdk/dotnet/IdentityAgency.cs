// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/identityAgency:IdentityAgency")]
    public partial class IdentityAgency : global::Pulumi.CustomResource
    {
        [Output("allResourcesRoles")]
        public Output<ImmutableArray<string>> AllResourcesRoles { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// schema: Required
        /// </summary>
        [Output("delegatedDomainName")]
        public Output<string?> DelegatedDomainName { get; private set; } = null!;

        /// <summary>
        /// schema: Internal
        /// </summary>
        [Output("delegatedServiceName")]
        public Output<string?> DelegatedServiceName { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("domainRoles")]
        public Output<ImmutableArray<string>> DomainRoles { get; private set; } = null!;

        [Output("duration")]
        public Output<string?> Duration { get; private set; } = null!;

        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("projectRoles")]
        public Output<ImmutableArray<Outputs.IdentityAgencyProjectRole>> ProjectRoles { get; private set; } = null!;


        /// <summary>
        /// Create a IdentityAgency resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IdentityAgency(string name, IdentityAgencyArgs? args = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityAgency:IdentityAgency", name, args ?? new IdentityAgencyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IdentityAgency(string name, Input<string> id, IdentityAgencyState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityAgency:IdentityAgency", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IdentityAgency resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IdentityAgency Get(string name, Input<string> id, IdentityAgencyState? state = null, CustomResourceOptions? options = null)
        {
            return new IdentityAgency(name, id, state, options);
        }
    }

    public sealed class IdentityAgencyArgs : global::Pulumi.ResourceArgs
    {
        [Input("allResourcesRoles")]
        private InputList<string>? _allResourcesRoles;
        public InputList<string> AllResourcesRoles
        {
            get => _allResourcesRoles ?? (_allResourcesRoles = new InputList<string>());
            set => _allResourcesRoles = value;
        }

        /// <summary>
        /// schema: Required
        /// </summary>
        [Input("delegatedDomainName")]
        public Input<string>? DelegatedDomainName { get; set; }

        /// <summary>
        /// schema: Internal
        /// </summary>
        [Input("delegatedServiceName")]
        public Input<string>? DelegatedServiceName { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domainRoles")]
        private InputList<string>? _domainRoles;
        public InputList<string> DomainRoles
        {
            get => _domainRoles ?? (_domainRoles = new InputList<string>());
            set => _domainRoles = value;
        }

        [Input("duration")]
        public Input<string>? Duration { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("projectRoles")]
        private InputList<Inputs.IdentityAgencyProjectRoleArgs>? _projectRoles;
        public InputList<Inputs.IdentityAgencyProjectRoleArgs> ProjectRoles
        {
            get => _projectRoles ?? (_projectRoles = new InputList<Inputs.IdentityAgencyProjectRoleArgs>());
            set => _projectRoles = value;
        }

        public IdentityAgencyArgs()
        {
        }
        public static new IdentityAgencyArgs Empty => new IdentityAgencyArgs();
    }

    public sealed class IdentityAgencyState : global::Pulumi.ResourceArgs
    {
        [Input("allResourcesRoles")]
        private InputList<string>? _allResourcesRoles;
        public InputList<string> AllResourcesRoles
        {
            get => _allResourcesRoles ?? (_allResourcesRoles = new InputList<string>());
            set => _allResourcesRoles = value;
        }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// schema: Required
        /// </summary>
        [Input("delegatedDomainName")]
        public Input<string>? DelegatedDomainName { get; set; }

        /// <summary>
        /// schema: Internal
        /// </summary>
        [Input("delegatedServiceName")]
        public Input<string>? DelegatedServiceName { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domainRoles")]
        private InputList<string>? _domainRoles;
        public InputList<string> DomainRoles
        {
            get => _domainRoles ?? (_domainRoles = new InputList<string>());
            set => _domainRoles = value;
        }

        [Input("duration")]
        public Input<string>? Duration { get; set; }

        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("projectRoles")]
        private InputList<Inputs.IdentityAgencyProjectRoleGetArgs>? _projectRoles;
        public InputList<Inputs.IdentityAgencyProjectRoleGetArgs> ProjectRoles
        {
            get => _projectRoles ?? (_projectRoles = new InputList<Inputs.IdentityAgencyProjectRoleGetArgs>());
            set => _projectRoles = value;
        }

        public IdentityAgencyState()
        {
        }
        public static new IdentityAgencyState Empty => new IdentityAgencyState();
    }
}
