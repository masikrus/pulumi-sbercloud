// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/drsJob:DrsJob")]
    public partial class DrsJob : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("destinationDb")]
        public Output<Outputs.DrsJobDestinationDb> DestinationDb { get; private set; } = null!;

        [Output("destinationDbReadnoly")]
        public Output<bool?> DestinationDbReadnoly { get; private set; } = null!;

        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        [Output("engineType")]
        public Output<string> EngineType { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string?> EnterpriseProjectId { get; private set; } = null!;

        [Output("expiredDays")]
        public Output<int?> ExpiredDays { get; private set; } = null!;

        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        [Output("limitSpeeds")]
        public Output<ImmutableArray<Outputs.DrsJobLimitSpeed>> LimitSpeeds { get; private set; } = null!;

        [Output("migrateDefiner")]
        public Output<bool?> MigrateDefiner { get; private set; } = null!;

        [Output("migrationType")]
        public Output<string?> MigrationType { get; private set; } = null!;

        [Output("multiWrite")]
        public Output<bool?> MultiWrite { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("netType")]
        public Output<string?> NetType { get; private set; } = null!;

        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        [Output("publicIp")]
        public Output<string> PublicIp { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("sourceDb")]
        public Output<Outputs.DrsJobSourceDb> SourceDb { get; private set; } = null!;

        [Output("startTime")]
        public Output<string?> StartTime { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DrsJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DrsJob(string name, DrsJobArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/drsJob:DrsJob", name, args ?? new DrsJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DrsJob(string name, Input<string> id, DrsJobState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/drsJob:DrsJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DrsJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DrsJob Get(string name, Input<string> id, DrsJobState? state = null, CustomResourceOptions? options = null)
        {
            return new DrsJob(name, id, state, options);
        }
    }

    public sealed class DrsJobArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationDb", required: true)]
        public Input<Inputs.DrsJobDestinationDbArgs> DestinationDb { get; set; } = null!;

        [Input("destinationDbReadnoly")]
        public Input<bool>? DestinationDbReadnoly { get; set; }

        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        [Input("engineType", required: true)]
        public Input<string> EngineType { get; set; } = null!;

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("expiredDays")]
        public Input<int>? ExpiredDays { get; set; }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("limitSpeeds")]
        private InputList<Inputs.DrsJobLimitSpeedArgs>? _limitSpeeds;
        public InputList<Inputs.DrsJobLimitSpeedArgs> LimitSpeeds
        {
            get => _limitSpeeds ?? (_limitSpeeds = new InputList<Inputs.DrsJobLimitSpeedArgs>());
            set => _limitSpeeds = value;
        }

        [Input("migrateDefiner")]
        public Input<bool>? MigrateDefiner { get; set; }

        [Input("migrationType")]
        public Input<string>? MigrationType { get; set; }

        [Input("multiWrite")]
        public Input<bool>? MultiWrite { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("netType")]
        public Input<string>? NetType { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sourceDb", required: true)]
        public Input<Inputs.DrsJobSourceDbArgs> SourceDb { get; set; } = null!;

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public DrsJobArgs()
        {
        }
        public static new DrsJobArgs Empty => new DrsJobArgs();
    }

    public sealed class DrsJobState : global::Pulumi.ResourceArgs
    {
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationDb")]
        public Input<Inputs.DrsJobDestinationDbGetArgs>? DestinationDb { get; set; }

        [Input("destinationDbReadnoly")]
        public Input<bool>? DestinationDbReadnoly { get; set; }

        [Input("direction")]
        public Input<string>? Direction { get; set; }

        [Input("engineType")]
        public Input<string>? EngineType { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("expiredDays")]
        public Input<int>? ExpiredDays { get; set; }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("limitSpeeds")]
        private InputList<Inputs.DrsJobLimitSpeedGetArgs>? _limitSpeeds;
        public InputList<Inputs.DrsJobLimitSpeedGetArgs> LimitSpeeds
        {
            get => _limitSpeeds ?? (_limitSpeeds = new InputList<Inputs.DrsJobLimitSpeedGetArgs>());
            set => _limitSpeeds = value;
        }

        [Input("migrateDefiner")]
        public Input<bool>? MigrateDefiner { get; set; }

        [Input("migrationType")]
        public Input<string>? MigrationType { get; set; }

        [Input("multiWrite")]
        public Input<bool>? MultiWrite { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("netType")]
        public Input<string>? NetType { get; set; }

        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sourceDb")]
        public Input<Inputs.DrsJobSourceDbGetArgs>? SourceDb { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public DrsJobState()
        {
        }
        public static new DrsJobState Empty => new DrsJobState();
    }
}
