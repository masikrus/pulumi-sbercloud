// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetElbPools
    {
        public static Task<GetElbPoolsResult> InvokeAsync(GetElbPoolsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetElbPoolsResult>("sbercloud:index/getElbPools:getElbPools", args ?? new GetElbPoolsArgs(), options.WithDefaults());

        public static Output<GetElbPoolsResult> Invoke(GetElbPoolsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetElbPoolsResult>("sbercloud:index/getElbPools:getElbPools", args ?? new GetElbPoolsInvokeArgs(), options.WithDefaults());

        public static Output<GetElbPoolsResult> Invoke(GetElbPoolsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetElbPoolsResult>("sbercloud:index/getElbPools:getElbPools", args ?? new GetElbPoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetElbPoolsArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("healthmonitorId")]
        public string? HealthmonitorId { get; set; }

        [Input("lbMethod")]
        public string? LbMethod { get; set; }

        [Input("listenerId")]
        public string? ListenerId { get; set; }

        [Input("loadbalancerId")]
        public string? LoadbalancerId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("poolId")]
        public string? PoolId { get; set; }

        [Input("protectionStatus")]
        public string? ProtectionStatus { get; set; }

        [Input("protocol")]
        public string? Protocol { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetElbPoolsArgs()
        {
        }
        public static new GetElbPoolsArgs Empty => new GetElbPoolsArgs();
    }

    public sealed class GetElbPoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("healthmonitorId")]
        public Input<string>? HealthmonitorId { get; set; }

        [Input("lbMethod")]
        public Input<string>? LbMethod { get; set; }

        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        [Input("loadbalancerId")]
        public Input<string>? LoadbalancerId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("poolId")]
        public Input<string>? PoolId { get; set; }

        [Input("protectionStatus")]
        public Input<string>? ProtectionStatus { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetElbPoolsInvokeArgs()
        {
        }
        public static new GetElbPoolsInvokeArgs Empty => new GetElbPoolsInvokeArgs();
    }


    [OutputType]
    public sealed class GetElbPoolsResult
    {
        public readonly string? Description;
        public readonly string? HealthmonitorId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? LbMethod;
        public readonly string? ListenerId;
        public readonly string? LoadbalancerId;
        public readonly string? Name;
        public readonly string? PoolId;
        public readonly ImmutableArray<Outputs.GetElbPoolsPoolResult> Pools;
        public readonly string? ProtectionStatus;
        public readonly string? Protocol;
        public readonly string Region;
        public readonly string? Type;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetElbPoolsResult(
            string? description,

            string? healthmonitorId,

            string id,

            string? lbMethod,

            string? listenerId,

            string? loadbalancerId,

            string? name,

            string? poolId,

            ImmutableArray<Outputs.GetElbPoolsPoolResult> pools,

            string? protectionStatus,

            string? protocol,

            string region,

            string? type,

            string? vpcId)
        {
            Description = description;
            HealthmonitorId = healthmonitorId;
            Id = id;
            LbMethod = lbMethod;
            ListenerId = listenerId;
            LoadbalancerId = loadbalancerId;
            Name = name;
            PoolId = poolId;
            Pools = pools;
            ProtectionStatus = protectionStatus;
            Protocol = protocol;
            Region = region;
            Type = type;
            VpcId = vpcId;
        }
    }
}
