// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetDcsFlavors
    {
        public static Task<GetDcsFlavorsResult> InvokeAsync(GetDcsFlavorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDcsFlavorsResult>("sbercloud:index/getDcsFlavors:getDcsFlavors", args ?? new GetDcsFlavorsArgs(), options.WithDefaults());

        public static Output<GetDcsFlavorsResult> Invoke(GetDcsFlavorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDcsFlavorsResult>("sbercloud:index/getDcsFlavors:getDcsFlavors", args ?? new GetDcsFlavorsInvokeArgs(), options.WithDefaults());

        public static Output<GetDcsFlavorsResult> Invoke(GetDcsFlavorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDcsFlavorsResult>("sbercloud:index/getDcsFlavors:getDcsFlavors", args ?? new GetDcsFlavorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDcsFlavorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("cacheMode")]
        public string? CacheMode { get; set; }

        [Input("capacity")]
        public double? Capacity { get; set; }

        [Input("cpuArchitecture")]
        public string? CpuArchitecture { get; set; }

        [Input("engine")]
        public string? Engine { get; set; }

        [Input("engineVersion")]
        public string? EngineVersion { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetDcsFlavorsArgs()
        {
        }
        public static new GetDcsFlavorsArgs Empty => new GetDcsFlavorsArgs();
    }

    public sealed class GetDcsFlavorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("cacheMode")]
        public Input<string>? CacheMode { get; set; }

        [Input("capacity")]
        public Input<double>? Capacity { get; set; }

        [Input("cpuArchitecture")]
        public Input<string>? CpuArchitecture { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetDcsFlavorsInvokeArgs()
        {
        }
        public static new GetDcsFlavorsInvokeArgs Empty => new GetDcsFlavorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDcsFlavorsResult
    {
        public readonly string? CacheMode;
        public readonly double? Capacity;
        public readonly string? CpuArchitecture;
        public readonly string? Engine;
        public readonly string? EngineVersion;
        public readonly ImmutableArray<Outputs.GetDcsFlavorsFlavorResult> Flavors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string Region;

        [OutputConstructor]
        private GetDcsFlavorsResult(
            string? cacheMode,

            double? capacity,

            string? cpuArchitecture,

            string? engine,

            string? engineVersion,

            ImmutableArray<Outputs.GetDcsFlavorsFlavorResult> flavors,

            string id,

            string? name,

            string region)
        {
            CacheMode = cacheMode;
            Capacity = capacity;
            CpuArchitecture = cpuArchitecture;
            Engine = engine;
            EngineVersion = engineVersion;
            Flavors = flavors;
            Id = id;
            Name = name;
            Region = region;
        }
    }
}
