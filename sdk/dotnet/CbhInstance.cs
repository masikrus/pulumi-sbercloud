// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/cbhInstance:CbhInstance")]
    public partial class CbhInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the size of the additional data disk for the CBH instance.
        /// </summary>
        [Output("attachDiskSize")]
        public Output<int?> AttachDiskSize { get; private set; } = null!;

        /// <summary>
        /// Specifies whether auto renew is enabled.
        /// </summary>
        [Output("autoRenew")]
        public Output<string?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// Specifies the availability zone name.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Specifies the charging mode of the CBH instance.
        /// </summary>
        [Output("chargingMode")]
        public Output<string> ChargingMode { get; private set; } = null!;

        /// <summary>
        /// Indicates the data disk size of the instance.
        /// </summary>
        [Output("dataDiskSize")]
        public Output<double> DataDiskSize { get; private set; } = null!;

        /// <summary>
        /// Specifies the enterprise project ID to which the CBH instance belongs.
        /// </summary>
        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        /// <summary>
        /// Specifies the product ID of the CBH server.
        /// </summary>
        [Output("flavorId")]
        public Output<string> FlavorId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the IPv6 network is enabled.
        /// </summary>
        [Output("ipv6Enable")]
        public Output<bool?> Ipv6Enable { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the CBH instance.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the password for logging in to the management console.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// Specifies the charging period of the CBH instance.
        /// </summary>
        [Output("period")]
        public Output<int> Period { get; private set; } = null!;

        /// <summary>
        /// Specifies the charging period unit of the instance.
        /// </summary>
        [Output("periodUnit")]
        public Output<string> PeriodUnit { get; private set; } = null!;

        /// <summary>
        /// Specifies the power action after the CBH instance is created.
        /// </summary>
        [Output("powerAction")]
        public Output<string?> PowerAction { get; private set; } = null!;

        /// <summary>
        /// Indicates the private IP of the instance.
        /// </summary>
        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        /// <summary>
        /// schema: Computed; The elastic IP address.
        /// </summary>
        [Output("publicIp")]
        public Output<string> PublicIp { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the elastic IP.
        /// </summary>
        [Output("publicIpId")]
        public Output<string?> PublicIpId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Specifies the IDs of the security group.
        /// </summary>
        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        /// <summary>
        /// Indicates the status of the instance.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specifies the IP address of the subnet.
        /// </summary>
        [Output("subnetAddress")]
        public Output<string> SubnetAddress { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of a subnet.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Indicates the current version of the instance image.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of a VPC.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a CbhInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CbhInstance(string name, CbhInstanceArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/cbhInstance:CbhInstance", name, args ?? new CbhInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CbhInstance(string name, Input<string> id, CbhInstanceState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/cbhInstance:CbhInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CbhInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CbhInstance Get(string name, Input<string> id, CbhInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new CbhInstance(name, id, state, options);
        }
    }

    public sealed class CbhInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the size of the additional data disk for the CBH instance.
        /// </summary>
        [Input("attachDiskSize")]
        public Input<int>? AttachDiskSize { get; set; }

        /// <summary>
        /// Specifies whether auto renew is enabled.
        /// </summary>
        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        /// <summary>
        /// Specifies the availability zone name.
        /// </summary>
        [Input("availabilityZone", required: true)]
        public Input<string> AvailabilityZone { get; set; } = null!;

        /// <summary>
        /// Specifies the charging mode of the CBH instance.
        /// </summary>
        [Input("chargingMode", required: true)]
        public Input<string> ChargingMode { get; set; } = null!;

        /// <summary>
        /// Specifies the enterprise project ID to which the CBH instance belongs.
        /// </summary>
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        /// <summary>
        /// Specifies the product ID of the CBH server.
        /// </summary>
        [Input("flavorId", required: true)]
        public Input<string> FlavorId { get; set; } = null!;

        /// <summary>
        /// Specifies whether the IPv6 network is enabled.
        /// </summary>
        [Input("ipv6Enable")]
        public Input<bool>? Ipv6Enable { get; set; }

        /// <summary>
        /// Specifies the name of the CBH instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// Specifies the password for logging in to the management console.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the charging period of the CBH instance.
        /// </summary>
        [Input("period", required: true)]
        public Input<int> Period { get; set; } = null!;

        /// <summary>
        /// Specifies the charging period unit of the instance.
        /// </summary>
        [Input("periodUnit", required: true)]
        public Input<string> PeriodUnit { get; set; } = null!;

        /// <summary>
        /// Specifies the power action after the CBH instance is created.
        /// </summary>
        [Input("powerAction")]
        public Input<string>? PowerAction { get; set; }

        /// <summary>
        /// schema: Computed; The elastic IP address.
        /// </summary>
        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        /// <summary>
        /// Specifies the ID of the elastic IP.
        /// </summary>
        [Input("publicIpId")]
        public Input<string>? PublicIpId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Specifies the IDs of the security group.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        /// <summary>
        /// Specifies the IP address of the subnet.
        /// </summary>
        [Input("subnetAddress")]
        public Input<string>? SubnetAddress { get; set; }

        /// <summary>
        /// Specifies the ID of a subnet.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the ID of a VPC.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public CbhInstanceArgs()
        {
        }
        public static new CbhInstanceArgs Empty => new CbhInstanceArgs();
    }

    public sealed class CbhInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the size of the additional data disk for the CBH instance.
        /// </summary>
        [Input("attachDiskSize")]
        public Input<int>? AttachDiskSize { get; set; }

        /// <summary>
        /// Specifies whether auto renew is enabled.
        /// </summary>
        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        /// <summary>
        /// Specifies the availability zone name.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Specifies the charging mode of the CBH instance.
        /// </summary>
        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        /// <summary>
        /// Indicates the data disk size of the instance.
        /// </summary>
        [Input("dataDiskSize")]
        public Input<double>? DataDiskSize { get; set; }

        /// <summary>
        /// Specifies the enterprise project ID to which the CBH instance belongs.
        /// </summary>
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        /// <summary>
        /// Specifies the product ID of the CBH server.
        /// </summary>
        [Input("flavorId")]
        public Input<string>? FlavorId { get; set; }

        /// <summary>
        /// Specifies whether the IPv6 network is enabled.
        /// </summary>
        [Input("ipv6Enable")]
        public Input<bool>? Ipv6Enable { get; set; }

        /// <summary>
        /// Specifies the name of the CBH instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Specifies the password for logging in to the management console.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the charging period of the CBH instance.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// Specifies the charging period unit of the instance.
        /// </summary>
        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        /// <summary>
        /// Specifies the power action after the CBH instance is created.
        /// </summary>
        [Input("powerAction")]
        public Input<string>? PowerAction { get; set; }

        /// <summary>
        /// Indicates the private IP of the instance.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        /// <summary>
        /// schema: Computed; The elastic IP address.
        /// </summary>
        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        /// <summary>
        /// Specifies the ID of the elastic IP.
        /// </summary>
        [Input("publicIpId")]
        public Input<string>? PublicIpId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Specifies the IDs of the security group.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// Indicates the status of the instance.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies the IP address of the subnet.
        /// </summary>
        [Input("subnetAddress")]
        public Input<string>? SubnetAddress { get; set; }

        /// <summary>
        /// Specifies the ID of a subnet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Indicates the current version of the instance image.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// Specifies the ID of a VPC.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public CbhInstanceState()
        {
        }
        public static new CbhInstanceState Empty => new CbhInstanceState();
    }
}
