// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/asBandwidthPolicy:AsBandwidthPolicy")]
    public partial class AsBandwidthPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the alarm rule ID.
        /// </summary>
        [Output("alarmId")]
        public Output<string> AlarmId { get; private set; } = null!;

        /// <summary>
        /// Specifies the scaling bandwidth ID.
        /// </summary>
        [Output("bandwidthId")]
        public Output<string> BandwidthId { get; private set; } = null!;

        /// <summary>
        /// Specifies the cooldown period (in seconds).
        /// </summary>
        [Output("coolDownTime")]
        public Output<int> CoolDownTime { get; private set; } = null!;

        /// <summary>
        /// Specifies the description of the AS policy.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("scalingPolicyAction")]
        public Output<Outputs.AsBandwidthPolicyScalingPolicyAction> ScalingPolicyAction { get; private set; } = null!;

        /// <summary>
        /// Specifies the AS policy name.
        /// </summary>
        [Output("scalingPolicyName")]
        public Output<string> ScalingPolicyName { get; private set; } = null!;

        /// <summary>
        /// Specifies the AS policy type.
        /// </summary>
        [Output("scalingPolicyType")]
        public Output<string> ScalingPolicyType { get; private set; } = null!;

        /// <summary>
        /// the scaling resource type.
        /// </summary>
        [Output("scalingResourceType")]
        public Output<string> ScalingResourceType { get; private set; } = null!;

        [Output("scheduledPolicy")]
        public Output<Outputs.AsBandwidthPolicyScheduledPolicy> ScheduledPolicy { get; private set; } = null!;

        /// <summary>
        /// the AS policy status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a AsBandwidthPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AsBandwidthPolicy(string name, AsBandwidthPolicyArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/asBandwidthPolicy:AsBandwidthPolicy", name, args ?? new AsBandwidthPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AsBandwidthPolicy(string name, Input<string> id, AsBandwidthPolicyState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/asBandwidthPolicy:AsBandwidthPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AsBandwidthPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AsBandwidthPolicy Get(string name, Input<string> id, AsBandwidthPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new AsBandwidthPolicy(name, id, state, options);
        }
    }

    public sealed class AsBandwidthPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the alarm rule ID.
        /// </summary>
        [Input("alarmId")]
        public Input<string>? AlarmId { get; set; }

        /// <summary>
        /// Specifies the scaling bandwidth ID.
        /// </summary>
        [Input("bandwidthId", required: true)]
        public Input<string> BandwidthId { get; set; } = null!;

        /// <summary>
        /// Specifies the cooldown period (in seconds).
        /// </summary>
        [Input("coolDownTime")]
        public Input<int>? CoolDownTime { get; set; }

        /// <summary>
        /// Specifies the description of the AS policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("scalingPolicyAction")]
        public Input<Inputs.AsBandwidthPolicyScalingPolicyActionArgs>? ScalingPolicyAction { get; set; }

        /// <summary>
        /// Specifies the AS policy name.
        /// </summary>
        [Input("scalingPolicyName", required: true)]
        public Input<string> ScalingPolicyName { get; set; } = null!;

        /// <summary>
        /// Specifies the AS policy type.
        /// </summary>
        [Input("scalingPolicyType", required: true)]
        public Input<string> ScalingPolicyType { get; set; } = null!;

        [Input("scheduledPolicy")]
        public Input<Inputs.AsBandwidthPolicyScheduledPolicyArgs>? ScheduledPolicy { get; set; }

        public AsBandwidthPolicyArgs()
        {
        }
        public static new AsBandwidthPolicyArgs Empty => new AsBandwidthPolicyArgs();
    }

    public sealed class AsBandwidthPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the alarm rule ID.
        /// </summary>
        [Input("alarmId")]
        public Input<string>? AlarmId { get; set; }

        /// <summary>
        /// Specifies the scaling bandwidth ID.
        /// </summary>
        [Input("bandwidthId")]
        public Input<string>? BandwidthId { get; set; }

        /// <summary>
        /// Specifies the cooldown period (in seconds).
        /// </summary>
        [Input("coolDownTime")]
        public Input<int>? CoolDownTime { get; set; }

        /// <summary>
        /// Specifies the description of the AS policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("scalingPolicyAction")]
        public Input<Inputs.AsBandwidthPolicyScalingPolicyActionGetArgs>? ScalingPolicyAction { get; set; }

        /// <summary>
        /// Specifies the AS policy name.
        /// </summary>
        [Input("scalingPolicyName")]
        public Input<string>? ScalingPolicyName { get; set; }

        /// <summary>
        /// Specifies the AS policy type.
        /// </summary>
        [Input("scalingPolicyType")]
        public Input<string>? ScalingPolicyType { get; set; }

        /// <summary>
        /// the scaling resource type.
        /// </summary>
        [Input("scalingResourceType")]
        public Input<string>? ScalingResourceType { get; set; }

        [Input("scheduledPolicy")]
        public Input<Inputs.AsBandwidthPolicyScheduledPolicyGetArgs>? ScheduledPolicy { get; set; }

        /// <summary>
        /// the AS policy status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public AsBandwidthPolicyState()
        {
        }
        public static new AsBandwidthPolicyState Empty => new AsBandwidthPolicyState();
    }
}
