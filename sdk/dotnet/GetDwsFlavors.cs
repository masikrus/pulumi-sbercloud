// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetDwsFlavors
    {
        public static Task<GetDwsFlavorsResult> InvokeAsync(GetDwsFlavorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDwsFlavorsResult>("sbercloud:index/getDwsFlavors:getDwsFlavors", args ?? new GetDwsFlavorsArgs(), options.WithDefaults());

        public static Output<GetDwsFlavorsResult> Invoke(GetDwsFlavorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDwsFlavorsResult>("sbercloud:index/getDwsFlavors:getDwsFlavors", args ?? new GetDwsFlavorsInvokeArgs(), options.WithDefaults());

        public static Output<GetDwsFlavorsResult> Invoke(GetDwsFlavorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDwsFlavorsResult>("sbercloud:index/getDwsFlavors:getDwsFlavors", args ?? new GetDwsFlavorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDwsFlavorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        [Input("datastoreType")]
        public string? DatastoreType { get; set; }

        [Input("memory")]
        public int? Memory { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("vcpus")]
        public int? Vcpus { get; set; }

        public GetDwsFlavorsArgs()
        {
        }
        public static new GetDwsFlavorsArgs Empty => new GetDwsFlavorsArgs();
    }

    public sealed class GetDwsFlavorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("datastoreType")]
        public Input<string>? DatastoreType { get; set; }

        [Input("memory")]
        public Input<int>? Memory { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("vcpus")]
        public Input<int>? Vcpus { get; set; }

        public GetDwsFlavorsInvokeArgs()
        {
        }
        public static new GetDwsFlavorsInvokeArgs Empty => new GetDwsFlavorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDwsFlavorsResult
    {
        public readonly string? AvailabilityZone;
        public readonly string? DatastoreType;
        public readonly ImmutableArray<Outputs.GetDwsFlavorsFlavorResult> Flavors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Memory;
        public readonly string Region;
        public readonly int? Vcpus;

        [OutputConstructor]
        private GetDwsFlavorsResult(
            string? availabilityZone,

            string? datastoreType,

            ImmutableArray<Outputs.GetDwsFlavorsFlavorResult> flavors,

            string id,

            int? memory,

            string region,

            int? vcpus)
        {
            AvailabilityZone = availabilityZone;
            DatastoreType = datastoreType;
            Flavors = flavors;
            Id = id;
            Memory = memory;
            Region = region;
            Vcpus = vcpus;
        }
    }
}
