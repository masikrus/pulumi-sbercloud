// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetDmsKafkaMessages
    {
        public static Task<GetDmsKafkaMessagesResult> InvokeAsync(GetDmsKafkaMessagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDmsKafkaMessagesResult>("sbercloud:index/getDmsKafkaMessages:getDmsKafkaMessages", args ?? new GetDmsKafkaMessagesArgs(), options.WithDefaults());

        public static Output<GetDmsKafkaMessagesResult> Invoke(GetDmsKafkaMessagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDmsKafkaMessagesResult>("sbercloud:index/getDmsKafkaMessages:getDmsKafkaMessages", args ?? new GetDmsKafkaMessagesInvokeArgs(), options.WithDefaults());

        public static Output<GetDmsKafkaMessagesResult> Invoke(GetDmsKafkaMessagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDmsKafkaMessagesResult>("sbercloud:index/getDmsKafkaMessages:getDmsKafkaMessages", args ?? new GetDmsKafkaMessagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDmsKafkaMessagesArgs : global::Pulumi.InvokeArgs
    {
        [Input("download")]
        public bool? Download { get; set; }

        [Input("endTime")]
        public string? EndTime { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("keyword")]
        public string? Keyword { get; set; }

        [Input("messageOffset")]
        public string? MessageOffset { get; set; }

        [Input("partition")]
        public string? Partition { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("startTime")]
        public string? StartTime { get; set; }

        [Input("topic", required: true)]
        public string Topic { get; set; } = null!;

        public GetDmsKafkaMessagesArgs()
        {
        }
        public static new GetDmsKafkaMessagesArgs Empty => new GetDmsKafkaMessagesArgs();
    }

    public sealed class GetDmsKafkaMessagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("download")]
        public Input<bool>? Download { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("keyword")]
        public Input<string>? Keyword { get; set; }

        [Input("messageOffset")]
        public Input<string>? MessageOffset { get; set; }

        [Input("partition")]
        public Input<string>? Partition { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("topic", required: true)]
        public Input<string> Topic { get; set; } = null!;

        public GetDmsKafkaMessagesInvokeArgs()
        {
        }
        public static new GetDmsKafkaMessagesInvokeArgs Empty => new GetDmsKafkaMessagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDmsKafkaMessagesResult
    {
        public readonly bool? Download;
        public readonly string? EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? Keyword;
        public readonly string? MessageOffset;
        public readonly ImmutableArray<Outputs.GetDmsKafkaMessagesMessageResult> Messages;
        public readonly string? Partition;
        public readonly string Region;
        public readonly string? StartTime;
        public readonly string Topic;

        [OutputConstructor]
        private GetDmsKafkaMessagesResult(
            bool? download,

            string? endTime,

            string id,

            string instanceId,

            string? keyword,

            string? messageOffset,

            ImmutableArray<Outputs.GetDmsKafkaMessagesMessageResult> messages,

            string? partition,

            string region,

            string? startTime,

            string topic)
        {
            Download = download;
            EndTime = endTime;
            Id = id;
            InstanceId = instanceId;
            Keyword = keyword;
            MessageOffset = messageOffset;
            Messages = messages;
            Partition = partition;
            Region = region;
            StartTime = startTime;
            Topic = topic;
        }
    }
}
