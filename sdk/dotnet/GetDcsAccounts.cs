// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetDcsAccounts
    {
        public static Task<GetDcsAccountsResult> InvokeAsync(GetDcsAccountsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDcsAccountsResult>("sbercloud:index/getDcsAccounts:getDcsAccounts", args ?? new GetDcsAccountsArgs(), options.WithDefaults());

        public static Output<GetDcsAccountsResult> Invoke(GetDcsAccountsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDcsAccountsResult>("sbercloud:index/getDcsAccounts:getDcsAccounts", args ?? new GetDcsAccountsInvokeArgs(), options.WithDefaults());

        public static Output<GetDcsAccountsResult> Invoke(GetDcsAccountsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDcsAccountsResult>("sbercloud:index/getDcsAccounts:getDcsAccounts", args ?? new GetDcsAccountsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDcsAccountsArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountName")]
        public string? AccountName { get; set; }

        [Input("accountRole")]
        public string? AccountRole { get; set; }

        [Input("accountType")]
        public string? AccountType { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("region")]
        public string? Region { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        public GetDcsAccountsArgs()
        {
        }
        public static new GetDcsAccountsArgs Empty => new GetDcsAccountsArgs();
    }

    public sealed class GetDcsAccountsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        [Input("accountRole")]
        public Input<string>? AccountRole { get; set; }

        [Input("accountType")]
        public Input<string>? AccountType { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetDcsAccountsInvokeArgs()
        {
        }
        public static new GetDcsAccountsInvokeArgs Empty => new GetDcsAccountsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDcsAccountsResult
    {
        public readonly string? AccountName;
        public readonly string? AccountRole;
        public readonly string? AccountType;
        public readonly ImmutableArray<Outputs.GetDcsAccountsAccountResult> Accounts;
        public readonly string? Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string Region;
        public readonly string? Status;

        [OutputConstructor]
        private GetDcsAccountsResult(
            string? accountName,

            string? accountRole,

            string? accountType,

            ImmutableArray<Outputs.GetDcsAccountsAccountResult> accounts,

            string? description,

            string id,

            string instanceId,

            string region,

            string? status)
        {
            AccountName = accountName;
            AccountRole = accountRole;
            AccountType = accountType;
            Accounts = accounts;
            Description = description;
            Id = id;
            InstanceId = instanceId;
            Region = region;
            Status = status;
        }
    }
}
