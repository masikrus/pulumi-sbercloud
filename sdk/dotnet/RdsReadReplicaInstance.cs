// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/rdsReadReplicaInstance:RdsReadReplicaInstance")]
    public partial class RdsReadReplicaInstance : global::Pulumi.CustomResource
    {
        [Output("autoRenew")]
        public Output<string?> AutoRenew { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("chargingMode")]
        public Output<string> ChargingMode { get; private set; } = null!;

        [Output("db")]
        public Output<Outputs.RdsReadReplicaInstanceDb> Db { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("fixedIp")]
        public Output<string> FixedIp { get; private set; } = null!;

        [Output("flavor")]
        public Output<string> Flavor { get; private set; } = null!;

        [Output("maintainBegin")]
        public Output<string> MaintainBegin { get; private set; } = null!;

        [Output("maintainEnd")]
        public Output<string> MaintainEnd { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableArray<Outputs.RdsReadReplicaInstanceParameter>> Parameters { get; private set; } = null!;

        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        [Output("periodUnit")]
        public Output<string?> PeriodUnit { get; private set; } = null!;

        [Output("primaryInstanceId")]
        public Output<string> PrimaryInstanceId { get; private set; } = null!;

        [Output("privateIps")]
        public Output<ImmutableArray<string>> PrivateIps { get; private set; } = null!;

        [Output("publicIps")]
        public Output<ImmutableArray<string>> PublicIps { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        [Output("sslEnable")]
        public Output<bool> SslEnable { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("volume")]
        public Output<Outputs.RdsReadReplicaInstanceVolume> Volume { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a RdsReadReplicaInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RdsReadReplicaInstance(string name, RdsReadReplicaInstanceArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/rdsReadReplicaInstance:RdsReadReplicaInstance", name, args ?? new RdsReadReplicaInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RdsReadReplicaInstance(string name, Input<string> id, RdsReadReplicaInstanceState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/rdsReadReplicaInstance:RdsReadReplicaInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RdsReadReplicaInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RdsReadReplicaInstance Get(string name, Input<string> id, RdsReadReplicaInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new RdsReadReplicaInstance(name, id, state, options);
        }
    }

    public sealed class RdsReadReplicaInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZone", required: true)]
        public Input<string> AvailabilityZone { get; set; } = null!;

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("db")]
        public Input<Inputs.RdsReadReplicaInstanceDbArgs>? Db { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("fixedIp")]
        public Input<string>? FixedIp { get; set; }

        [Input("flavor", required: true)]
        public Input<string> Flavor { get; set; } = null!;

        [Input("maintainBegin")]
        public Input<string>? MaintainBegin { get; set; }

        [Input("maintainEnd")]
        public Input<string>? MaintainEnd { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputList<Inputs.RdsReadReplicaInstanceParameterArgs>? _parameters;
        public InputList<Inputs.RdsReadReplicaInstanceParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.RdsReadReplicaInstanceParameterArgs>());
            set => _parameters = value;
        }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("primaryInstanceId", required: true)]
        public Input<string> PrimaryInstanceId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("sslEnable")]
        public Input<bool>? SslEnable { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("volume", required: true)]
        public Input<Inputs.RdsReadReplicaInstanceVolumeArgs> Volume { get; set; } = null!;

        public RdsReadReplicaInstanceArgs()
        {
        }
        public static new RdsReadReplicaInstanceArgs Empty => new RdsReadReplicaInstanceArgs();
    }

    public sealed class RdsReadReplicaInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("db")]
        public Input<Inputs.RdsReadReplicaInstanceDbGetArgs>? Db { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("fixedIp")]
        public Input<string>? FixedIp { get; set; }

        [Input("flavor")]
        public Input<string>? Flavor { get; set; }

        [Input("maintainBegin")]
        public Input<string>? MaintainBegin { get; set; }

        [Input("maintainEnd")]
        public Input<string>? MaintainEnd { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputList<Inputs.RdsReadReplicaInstanceParameterGetArgs>? _parameters;
        public InputList<Inputs.RdsReadReplicaInstanceParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.RdsReadReplicaInstanceParameterGetArgs>());
            set => _parameters = value;
        }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("primaryInstanceId")]
        public Input<string>? PrimaryInstanceId { get; set; }

        [Input("privateIps")]
        private InputList<string>? _privateIps;
        public InputList<string> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new InputList<string>());
            set => _privateIps = value;
        }

        [Input("publicIps")]
        private InputList<string>? _publicIps;
        public InputList<string> PublicIps
        {
            get => _publicIps ?? (_publicIps = new InputList<string>());
            set => _publicIps = value;
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("sslEnable")]
        public Input<bool>? SslEnable { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("volume")]
        public Input<Inputs.RdsReadReplicaInstanceVolumeGetArgs>? Volume { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public RdsReadReplicaInstanceState()
        {
        }
        public static new RdsReadReplicaInstanceState Empty => new RdsReadReplicaInstanceState();
    }
}
