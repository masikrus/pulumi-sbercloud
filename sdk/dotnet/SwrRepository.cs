// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/swrRepository:SwrRepository")]
    public partial class SwrRepository : global::Pulumi.CustomResource
    {
        [Output("category")]
        public Output<string?> Category { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("internalPath")]
        public Output<string> InternalPath { get; private set; } = null!;

        [Output("isPublic")]
        public Output<bool?> IsPublic { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("numImages")]
        public Output<int> NumImages { get; private set; } = null!;

        [Output("organization")]
        public Output<string> Organization { get; private set; } = null!;

        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("repositoryId")]
        public Output<int> RepositoryId { get; private set; } = null!;

        [Output("size")]
        public Output<int> Size { get; private set; } = null!;


        /// <summary>
        /// Create a SwrRepository resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwrRepository(string name, SwrRepositoryArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/swrRepository:SwrRepository", name, args ?? new SwrRepositoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwrRepository(string name, Input<string> id, SwrRepositoryState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/swrRepository:SwrRepository", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwrRepository resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwrRepository Get(string name, Input<string> id, SwrRepositoryState? state = null, CustomResourceOptions? options = null)
        {
            return new SwrRepository(name, id, state, options);
        }
    }

    public sealed class SwrRepositoryArgs : global::Pulumi.ResourceArgs
    {
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        public SwrRepositoryArgs()
        {
        }
        public static new SwrRepositoryArgs Empty => new SwrRepositoryArgs();
    }

    public sealed class SwrRepositoryState : global::Pulumi.ResourceArgs
    {
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("internalPath")]
        public Input<string>? InternalPath { get; set; }

        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numImages")]
        public Input<int>? NumImages { get; set; }

        [Input("organization")]
        public Input<string>? Organization { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("repositoryId")]
        public Input<int>? RepositoryId { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        public SwrRepositoryState()
        {
        }
        public static new SwrRepositoryState Empty => new SwrRepositoryState();
    }
}
