// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/dmsInstance:DmsInstance")]
    public partial class DmsInstance : global::Pulumi.CustomResource
    {
        [Output("accessUser")]
        public Output<string?> AccessUser { get; private set; } = null!;

        [Output("availableZones")]
        public Output<ImmutableArray<string>> AvailableZones { get; private set; } = null!;

        [Output("connectAddress")]
        public Output<string> ConnectAddress { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string?> EngineVersion { get; private set; } = null!;

        [Output("maintainBegin")]
        public Output<string> MaintainBegin { get; private set; } = null!;

        [Output("maintainEnd")]
        public Output<string> MaintainEnd { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("orderId")]
        public Output<string> OrderId { get; private set; } = null!;

        [Output("partitionNum")]
        public Output<int?> PartitionNum { get; private set; } = null!;

        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("port")]
        public Output<string> Port { get; private set; } = null!;

        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("resourceSpecCode")]
        public Output<string> ResourceSpecCode { get; private set; } = null!;

        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        [Output("securityGroupName")]
        public Output<string> SecurityGroupName { get; private set; } = null!;

        [Output("specification")]
        public Output<string> Specification { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("storageSpace")]
        public Output<int> StorageSpace { get; private set; } = null!;

        [Output("storageSpecCode")]
        public Output<string> StorageSpecCode { get; private set; } = null!;

        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("subnetName")]
        public Output<string> SubnetName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("usedStorageSpace")]
        public Output<int> UsedStorageSpace { get; private set; } = null!;

        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        [Output("vpcName")]
        public Output<string> VpcName { get; private set; } = null!;


        /// <summary>
        /// Create a DmsInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DmsInstance(string name, DmsInstanceArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/dmsInstance:DmsInstance", name, args ?? new DmsInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DmsInstance(string name, Input<string> id, DmsInstanceState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/dmsInstance:DmsInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DmsInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DmsInstance Get(string name, Input<string> id, DmsInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new DmsInstance(name, id, state, options);
        }
    }

    public sealed class DmsInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessUser")]
        public Input<string>? AccessUser { get; set; }

        [Input("availableZones", required: true)]
        private InputList<string>? _availableZones;
        public InputList<string> AvailableZones
        {
            get => _availableZones ?? (_availableZones = new InputList<string>());
            set => _availableZones = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("engine", required: true)]
        public Input<string> Engine { get; set; } = null!;

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("maintainBegin")]
        public Input<string>? MaintainBegin { get; set; }

        [Input("maintainEnd")]
        public Input<string>? MaintainEnd { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("partitionNum")]
        public Input<int>? PartitionNum { get; set; }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        [Input("specification")]
        public Input<string>? Specification { get; set; }

        [Input("storageSpace", required: true)]
        public Input<int> StorageSpace { get; set; } = null!;

        [Input("storageSpecCode", required: true)]
        public Input<string> StorageSpecCode { get; set; } = null!;

        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public DmsInstanceArgs()
        {
        }
        public static new DmsInstanceArgs Empty => new DmsInstanceArgs();
    }

    public sealed class DmsInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("accessUser")]
        public Input<string>? AccessUser { get; set; }

        [Input("availableZones")]
        private InputList<string>? _availableZones;
        public InputList<string> AvailableZones
        {
            get => _availableZones ?? (_availableZones = new InputList<string>());
            set => _availableZones = value;
        }

        [Input("connectAddress")]
        public Input<string>? ConnectAddress { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("maintainBegin")]
        public Input<string>? MaintainBegin { get; set; }

        [Input("maintainEnd")]
        public Input<string>? MaintainEnd { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orderId")]
        public Input<string>? OrderId { get; set; }

        [Input("partitionNum")]
        public Input<int>? PartitionNum { get; set; }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("port")]
        public Input<string>? Port { get; set; }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("resourceSpecCode")]
        public Input<string>? ResourceSpecCode { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        [Input("specification")]
        public Input<string>? Specification { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("storageSpace")]
        public Input<int>? StorageSpace { get; set; }

        [Input("storageSpecCode")]
        public Input<string>? StorageSpecCode { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("usedStorageSpace")]
        public Input<int>? UsedStorageSpace { get; set; }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("vpcName")]
        public Input<string>? VpcName { get; set; }

        public DmsInstanceState()
        {
        }
        public static new DmsInstanceState Empty => new DmsInstanceState();
    }
}
