// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/lbListener:LbListener")]
    public partial class LbListener : global::Pulumi.CustomResource
    {
        [Output("adminStateUp")]
        public Output<bool?> AdminStateUp { get; private set; } = null!;

        [Output("connectionLimit")]
        public Output<int> ConnectionLimit { get; private set; } = null!;

        [Output("defaultPoolId")]
        public Output<string> DefaultPoolId { get; private set; } = null!;

        [Output("defaultTlsContainerRef")]
        public Output<string?> DefaultTlsContainerRef { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("http2Enable")]
        public Output<bool?> Http2Enable { get; private set; } = null!;

        [Output("loadbalancerId")]
        public Output<string> LoadbalancerId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("protocolPort")]
        public Output<int> ProtocolPort { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("sniContainerRefs")]
        public Output<ImmutableArray<string>> SniContainerRefs { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a LbListener resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LbListener(string name, LbListenerArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbListener:LbListener", name, args ?? new LbListenerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LbListener(string name, Input<string> id, LbListenerState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbListener:LbListener", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LbListener resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LbListener Get(string name, Input<string> id, LbListenerState? state = null, CustomResourceOptions? options = null)
        {
            return new LbListener(name, id, state, options);
        }
    }

    public sealed class LbListenerArgs : global::Pulumi.ResourceArgs
    {
        [Input("adminStateUp")]
        public Input<bool>? AdminStateUp { get; set; }

        [Input("connectionLimit")]
        public Input<int>? ConnectionLimit { get; set; }

        [Input("defaultPoolId")]
        public Input<string>? DefaultPoolId { get; set; }

        [Input("defaultTlsContainerRef")]
        public Input<string>? DefaultTlsContainerRef { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("http2Enable")]
        public Input<bool>? Http2Enable { get; set; }

        [Input("loadbalancerId", required: true)]
        public Input<string> LoadbalancerId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("protocolPort", required: true)]
        public Input<int> ProtocolPort { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sniContainerRefs")]
        private InputList<string>? _sniContainerRefs;
        public InputList<string> SniContainerRefs
        {
            get => _sniContainerRefs ?? (_sniContainerRefs = new InputList<string>());
            set => _sniContainerRefs = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public LbListenerArgs()
        {
        }
        public static new LbListenerArgs Empty => new LbListenerArgs();
    }

    public sealed class LbListenerState : global::Pulumi.ResourceArgs
    {
        [Input("adminStateUp")]
        public Input<bool>? AdminStateUp { get; set; }

        [Input("connectionLimit")]
        public Input<int>? ConnectionLimit { get; set; }

        [Input("defaultPoolId")]
        public Input<string>? DefaultPoolId { get; set; }

        [Input("defaultTlsContainerRef")]
        public Input<string>? DefaultTlsContainerRef { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("http2Enable")]
        public Input<bool>? Http2Enable { get; set; }

        [Input("loadbalancerId")]
        public Input<string>? LoadbalancerId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("protocolPort")]
        public Input<int>? ProtocolPort { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sniContainerRefs")]
        private InputList<string>? _sniContainerRefs;
        public InputList<string> SniContainerRefs
        {
            get => _sniContainerRefs ?? (_sniContainerRefs = new InputList<string>());
            set => _sniContainerRefs = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public LbListenerState()
        {
        }
        public static new LbListenerState Empty => new LbListenerState();
    }
}
