// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/identityAccessKey:IdentityAccessKey")]
    public partial class IdentityAccessKey : global::Pulumi.CustomResource
    {
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("encryptedSecret")]
        public Output<string> EncryptedSecret { get; private set; } = null!;

        [Output("keyFingerprint")]
        public Output<string> KeyFingerprint { get; private set; } = null!;

        [Output("pgpKey")]
        public Output<string?> PgpKey { get; private set; } = null!;

        [Output("secret")]
        public Output<string> Secret { get; private set; } = null!;

        [Output("secretFile")]
        public Output<string?> SecretFile { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;

        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a IdentityAccessKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IdentityAccessKey(string name, IdentityAccessKeyArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityAccessKey:IdentityAccessKey", name, args ?? new IdentityAccessKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IdentityAccessKey(string name, Input<string> id, IdentityAccessKeyState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityAccessKey:IdentityAccessKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "secret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IdentityAccessKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IdentityAccessKey Get(string name, Input<string> id, IdentityAccessKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new IdentityAccessKey(name, id, state, options);
        }
    }

    public sealed class IdentityAccessKeyArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("pgpKey")]
        public Input<string>? PgpKey { get; set; }

        [Input("secretFile")]
        public Input<string>? SecretFile { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public IdentityAccessKeyArgs()
        {
        }
        public static new IdentityAccessKeyArgs Empty => new IdentityAccessKeyArgs();
    }

    public sealed class IdentityAccessKeyState : global::Pulumi.ResourceArgs
    {
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("encryptedSecret")]
        public Input<string>? EncryptedSecret { get; set; }

        [Input("keyFingerprint")]
        public Input<string>? KeyFingerprint { get; set; }

        [Input("pgpKey")]
        public Input<string>? PgpKey { get; set; }

        [Input("secret")]
        private Input<string>? _secret;
        public Input<string>? Secret
        {
            get => _secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("secretFile")]
        public Input<string>? SecretFile { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public IdentityAccessKeyState()
        {
        }
        public static new IdentityAccessKeyState Empty => new IdentityAccessKeyState();
    }
}
