// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetKpsKeypairs
    {
        public static Task<GetKpsKeypairsResult> InvokeAsync(GetKpsKeypairsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKpsKeypairsResult>("sbercloud:index/getKpsKeypairs:getKpsKeypairs", args ?? new GetKpsKeypairsArgs(), options.WithDefaults());

        public static Output<GetKpsKeypairsResult> Invoke(GetKpsKeypairsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKpsKeypairsResult>("sbercloud:index/getKpsKeypairs:getKpsKeypairs", args ?? new GetKpsKeypairsInvokeArgs(), options.WithDefaults());

        public static Output<GetKpsKeypairsResult> Invoke(GetKpsKeypairsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKpsKeypairsResult>("sbercloud:index/getKpsKeypairs:getKpsKeypairs", args ?? new GetKpsKeypairsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKpsKeypairsArgs : global::Pulumi.InvokeArgs
    {
        [Input("fingerprint")]
        public string? Fingerprint { get; set; }

        [Input("isManaged")]
        public bool? IsManaged { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("publicKey")]
        public string? PublicKey { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetKpsKeypairsArgs()
        {
        }
        public static new GetKpsKeypairsArgs Empty => new GetKpsKeypairsArgs();
    }

    public sealed class GetKpsKeypairsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        [Input("isManaged")]
        public Input<bool>? IsManaged { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetKpsKeypairsInvokeArgs()
        {
        }
        public static new GetKpsKeypairsInvokeArgs Empty => new GetKpsKeypairsInvokeArgs();
    }


    [OutputType]
    public sealed class GetKpsKeypairsResult
    {
        public readonly string? Fingerprint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsManaged;
        public readonly ImmutableArray<Outputs.GetKpsKeypairsKeypairResult> Keypairs;
        public readonly string? Name;
        public readonly string? PublicKey;
        public readonly string? Region;

        [OutputConstructor]
        private GetKpsKeypairsResult(
            string? fingerprint,

            string id,

            bool? isManaged,

            ImmutableArray<Outputs.GetKpsKeypairsKeypairResult> keypairs,

            string? name,

            string? publicKey,

            string? region)
        {
            Fingerprint = fingerprint;
            Id = id;
            IsManaged = isManaged;
            Keypairs = keypairs;
            Name = name;
            PublicKey = publicKey;
            Region = region;
        }
    }
}
