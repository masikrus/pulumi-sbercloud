// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/apiGatewayApi:ApiGatewayApi")]
    public partial class ApiGatewayApi : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the authorizer to which the API request used.
        /// </summary>
        [Output("authorizerId")]
        public Output<string?> AuthorizerId { get; private set; } = null!;

        /// <summary>
        /// The configurations of the backend parameters.
        /// </summary>
        [Output("backendParams")]
        public Output<ImmutableArray<Outputs.ApiGatewayApiBackendParam>> BackendParams { get; private set; } = null!;

        /// <summary>
        /// The description of the API request body, which can be an example request body, media type or parameters.
        /// </summary>
        [Output("bodyDescription")]
        public Output<string?> BodyDescription { get; private set; } = null!;

        /// <summary>
        /// The content type of the request body.
        /// </summary>
        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        /// <summary>
        /// Whether CORS is supported.
        /// </summary>
        [Output("cors")]
        public Output<bool?> Cors { get; private set; } = null!;

        /// <summary>
        /// The API description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The example response for a failure request.
        /// </summary>
        [Output("failureResponse")]
        public Output<string?> FailureResponse { get; private set; } = null!;

        /// <summary>
        /// The FunctionGraph backend details.
        /// </summary>
        [Output("funcGraph")]
        public Output<Outputs.ApiGatewayApiFuncGraph> FuncGraph { get; private set; } = null!;

        /// <summary>
        /// The policy backends of the FunctionGraph function.
        /// </summary>
        [Output("funcGraphPolicies")]
        public Output<ImmutableArray<Outputs.ApiGatewayApiFuncGraphPolicy>> FuncGraphPolicies { get; private set; } = null!;

        /// <summary>
        /// The ID of the API group to which the API belongs.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the instance to which the API belongs.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
        /// </summary>
        [Output("isSendFgBodyBase64")]
        public Output<bool?> IsSendFgBodyBase64 { get; private set; } = null!;

        /// <summary>
        /// The matching mode of the API.
        /// </summary>
        [Output("matching")]
        public Output<string?> Matching { get; private set; } = null!;

        /// <summary>
        /// The mock backend details.
        /// </summary>
        [Output("mock")]
        public Output<Outputs.ApiGatewayApiMock> Mock { get; private set; } = null!;

        /// <summary>
        /// The mock policy backends.
        /// </summary>
        [Output("mockPolicies")]
        public Output<ImmutableArray<Outputs.ApiGatewayApiMockPolicy>> MockPolicies { get; private set; } = null!;

        /// <summary>
        /// The API name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The region where the API is located.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The registered time of the API.
        /// </summary>
        [Output("registeredAt")]
        public Output<string> RegisteredAt { get; private set; } = null!;

        /// <summary>
        /// The request method of the API.
        /// </summary>
        [Output("requestMethod")]
        public Output<string> RequestMethod { get; private set; } = null!;

        /// <summary>
        /// The configurations of the front-end parameters.
        /// </summary>
        [Output("requestParams")]
        public Output<ImmutableArray<Outputs.ApiGatewayApiRequestParam>> RequestParams { get; private set; } = null!;

        /// <summary>
        /// The request address.
        /// </summary>
        [Output("requestPath")]
        public Output<string> RequestPath { get; private set; } = null!;

        /// <summary>
        /// The request protocol of the API request.
        /// </summary>
        [Output("requestProtocol")]
        public Output<string> RequestProtocol { get; private set; } = null!;

        /// <summary>
        /// The ID of the custom response that API used.
        /// </summary>
        [Output("responseId")]
        public Output<string?> ResponseId { get; private set; } = null!;

        /// <summary>
        /// The security authentication mode of the API request.
        /// </summary>
        [Output("securityAuthentication")]
        public Output<string?> SecurityAuthentication { get; private set; } = null!;

        /// <summary>
        /// Whether the authentication of the application code is enabled.
        /// </summary>
        [Output("simpleAuthentication")]
        public Output<bool> SimpleAuthentication { get; private set; } = null!;

        /// <summary>
        /// The example response for a successful request.
        /// </summary>
        [Output("successResponse")]
        public Output<string?> SuccessResponse { get; private set; } = null!;

        /// <summary>
        /// The list of tags configuration.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The API type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The latest update time of the API.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The web backend details.
        /// </summary>
        [Output("web")]
        public Output<Outputs.ApiGatewayApiWeb> Web { get; private set; } = null!;

        /// <summary>
        /// The web policy backends.
        /// </summary>
        [Output("webPolicies")]
        public Output<ImmutableArray<Outputs.ApiGatewayApiWebPolicy>> WebPolicies { get; private set; } = null!;


        /// <summary>
        /// Create a ApiGatewayApi resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiGatewayApi(string name, ApiGatewayApiArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/apiGatewayApi:ApiGatewayApi", name, args ?? new ApiGatewayApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiGatewayApi(string name, Input<string> id, ApiGatewayApiState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/apiGatewayApi:ApiGatewayApi", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiGatewayApi resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiGatewayApi Get(string name, Input<string> id, ApiGatewayApiState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiGatewayApi(name, id, state, options);
        }
    }

    public sealed class ApiGatewayApiArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the authorizer to which the API request used.
        /// </summary>
        [Input("authorizerId")]
        public Input<string>? AuthorizerId { get; set; }

        [Input("backendParams")]
        private InputList<Inputs.ApiGatewayApiBackendParamArgs>? _backendParams;

        /// <summary>
        /// The configurations of the backend parameters.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiBackendParamArgs> BackendParams
        {
            get => _backendParams ?? (_backendParams = new InputList<Inputs.ApiGatewayApiBackendParamArgs>());
            set => _backendParams = value;
        }

        /// <summary>
        /// The description of the API request body, which can be an example request body, media type or parameters.
        /// </summary>
        [Input("bodyDescription")]
        public Input<string>? BodyDescription { get; set; }

        /// <summary>
        /// The content type of the request body.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// Whether CORS is supported.
        /// </summary>
        [Input("cors")]
        public Input<bool>? Cors { get; set; }

        /// <summary>
        /// The API description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The example response for a failure request.
        /// </summary>
        [Input("failureResponse")]
        public Input<string>? FailureResponse { get; set; }

        /// <summary>
        /// The FunctionGraph backend details.
        /// </summary>
        [Input("funcGraph")]
        public Input<Inputs.ApiGatewayApiFuncGraphArgs>? FuncGraph { get; set; }

        [Input("funcGraphPolicies")]
        private InputList<Inputs.ApiGatewayApiFuncGraphPolicyArgs>? _funcGraphPolicies;

        /// <summary>
        /// The policy backends of the FunctionGraph function.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiFuncGraphPolicyArgs> FuncGraphPolicies
        {
            get => _funcGraphPolicies ?? (_funcGraphPolicies = new InputList<Inputs.ApiGatewayApiFuncGraphPolicyArgs>());
            set => _funcGraphPolicies = value;
        }

        /// <summary>
        /// The ID of the API group to which the API belongs.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The ID of the instance to which the API belongs.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
        /// </summary>
        [Input("isSendFgBodyBase64")]
        public Input<bool>? IsSendFgBodyBase64 { get; set; }

        /// <summary>
        /// The matching mode of the API.
        /// </summary>
        [Input("matching")]
        public Input<string>? Matching { get; set; }

        /// <summary>
        /// The mock backend details.
        /// </summary>
        [Input("mock")]
        public Input<Inputs.ApiGatewayApiMockArgs>? Mock { get; set; }

        [Input("mockPolicies")]
        private InputList<Inputs.ApiGatewayApiMockPolicyArgs>? _mockPolicies;

        /// <summary>
        /// The mock policy backends.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiMockPolicyArgs> MockPolicies
        {
            get => _mockPolicies ?? (_mockPolicies = new InputList<Inputs.ApiGatewayApiMockPolicyArgs>());
            set => _mockPolicies = value;
        }

        /// <summary>
        /// The API name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region where the API is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The request method of the API.
        /// </summary>
        [Input("requestMethod", required: true)]
        public Input<string> RequestMethod { get; set; } = null!;

        [Input("requestParams")]
        private InputList<Inputs.ApiGatewayApiRequestParamArgs>? _requestParams;

        /// <summary>
        /// The configurations of the front-end parameters.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiRequestParamArgs> RequestParams
        {
            get => _requestParams ?? (_requestParams = new InputList<Inputs.ApiGatewayApiRequestParamArgs>());
            set => _requestParams = value;
        }

        /// <summary>
        /// The request address.
        /// </summary>
        [Input("requestPath", required: true)]
        public Input<string> RequestPath { get; set; } = null!;

        /// <summary>
        /// The request protocol of the API request.
        /// </summary>
        [Input("requestProtocol", required: true)]
        public Input<string> RequestProtocol { get; set; } = null!;

        /// <summary>
        /// The ID of the custom response that API used.
        /// </summary>
        [Input("responseId")]
        public Input<string>? ResponseId { get; set; }

        /// <summary>
        /// The security authentication mode of the API request.
        /// </summary>
        [Input("securityAuthentication")]
        public Input<string>? SecurityAuthentication { get; set; }

        /// <summary>
        /// Whether the authentication of the application code is enabled.
        /// </summary>
        [Input("simpleAuthentication")]
        public Input<bool>? SimpleAuthentication { get; set; }

        /// <summary>
        /// The example response for a successful request.
        /// </summary>
        [Input("successResponse")]
        public Input<string>? SuccessResponse { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The list of tags configuration.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The API type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The web backend details.
        /// </summary>
        [Input("web")]
        public Input<Inputs.ApiGatewayApiWebArgs>? Web { get; set; }

        [Input("webPolicies")]
        private InputList<Inputs.ApiGatewayApiWebPolicyArgs>? _webPolicies;

        /// <summary>
        /// The web policy backends.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiWebPolicyArgs> WebPolicies
        {
            get => _webPolicies ?? (_webPolicies = new InputList<Inputs.ApiGatewayApiWebPolicyArgs>());
            set => _webPolicies = value;
        }

        public ApiGatewayApiArgs()
        {
        }
        public static new ApiGatewayApiArgs Empty => new ApiGatewayApiArgs();
    }

    public sealed class ApiGatewayApiState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the authorizer to which the API request used.
        /// </summary>
        [Input("authorizerId")]
        public Input<string>? AuthorizerId { get; set; }

        [Input("backendParams")]
        private InputList<Inputs.ApiGatewayApiBackendParamGetArgs>? _backendParams;

        /// <summary>
        /// The configurations of the backend parameters.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiBackendParamGetArgs> BackendParams
        {
            get => _backendParams ?? (_backendParams = new InputList<Inputs.ApiGatewayApiBackendParamGetArgs>());
            set => _backendParams = value;
        }

        /// <summary>
        /// The description of the API request body, which can be an example request body, media type or parameters.
        /// </summary>
        [Input("bodyDescription")]
        public Input<string>? BodyDescription { get; set; }

        /// <summary>
        /// The content type of the request body.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// Whether CORS is supported.
        /// </summary>
        [Input("cors")]
        public Input<bool>? Cors { get; set; }

        /// <summary>
        /// The API description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The example response for a failure request.
        /// </summary>
        [Input("failureResponse")]
        public Input<string>? FailureResponse { get; set; }

        /// <summary>
        /// The FunctionGraph backend details.
        /// </summary>
        [Input("funcGraph")]
        public Input<Inputs.ApiGatewayApiFuncGraphGetArgs>? FuncGraph { get; set; }

        [Input("funcGraphPolicies")]
        private InputList<Inputs.ApiGatewayApiFuncGraphPolicyGetArgs>? _funcGraphPolicies;

        /// <summary>
        /// The policy backends of the FunctionGraph function.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiFuncGraphPolicyGetArgs> FuncGraphPolicies
        {
            get => _funcGraphPolicies ?? (_funcGraphPolicies = new InputList<Inputs.ApiGatewayApiFuncGraphPolicyGetArgs>());
            set => _funcGraphPolicies = value;
        }

        /// <summary>
        /// The ID of the API group to which the API belongs.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The ID of the instance to which the API belongs.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Whether to perform Base64 encoding on the body for interaction with FunctionGraph.
        /// </summary>
        [Input("isSendFgBodyBase64")]
        public Input<bool>? IsSendFgBodyBase64 { get; set; }

        /// <summary>
        /// The matching mode of the API.
        /// </summary>
        [Input("matching")]
        public Input<string>? Matching { get; set; }

        /// <summary>
        /// The mock backend details.
        /// </summary>
        [Input("mock")]
        public Input<Inputs.ApiGatewayApiMockGetArgs>? Mock { get; set; }

        [Input("mockPolicies")]
        private InputList<Inputs.ApiGatewayApiMockPolicyGetArgs>? _mockPolicies;

        /// <summary>
        /// The mock policy backends.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiMockPolicyGetArgs> MockPolicies
        {
            get => _mockPolicies ?? (_mockPolicies = new InputList<Inputs.ApiGatewayApiMockPolicyGetArgs>());
            set => _mockPolicies = value;
        }

        /// <summary>
        /// The API name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region where the API is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The registered time of the API.
        /// </summary>
        [Input("registeredAt")]
        public Input<string>? RegisteredAt { get; set; }

        /// <summary>
        /// The request method of the API.
        /// </summary>
        [Input("requestMethod")]
        public Input<string>? RequestMethod { get; set; }

        [Input("requestParams")]
        private InputList<Inputs.ApiGatewayApiRequestParamGetArgs>? _requestParams;

        /// <summary>
        /// The configurations of the front-end parameters.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiRequestParamGetArgs> RequestParams
        {
            get => _requestParams ?? (_requestParams = new InputList<Inputs.ApiGatewayApiRequestParamGetArgs>());
            set => _requestParams = value;
        }

        /// <summary>
        /// The request address.
        /// </summary>
        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        /// <summary>
        /// The request protocol of the API request.
        /// </summary>
        [Input("requestProtocol")]
        public Input<string>? RequestProtocol { get; set; }

        /// <summary>
        /// The ID of the custom response that API used.
        /// </summary>
        [Input("responseId")]
        public Input<string>? ResponseId { get; set; }

        /// <summary>
        /// The security authentication mode of the API request.
        /// </summary>
        [Input("securityAuthentication")]
        public Input<string>? SecurityAuthentication { get; set; }

        /// <summary>
        /// Whether the authentication of the application code is enabled.
        /// </summary>
        [Input("simpleAuthentication")]
        public Input<bool>? SimpleAuthentication { get; set; }

        /// <summary>
        /// The example response for a successful request.
        /// </summary>
        [Input("successResponse")]
        public Input<string>? SuccessResponse { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The list of tags configuration.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The API type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The latest update time of the API.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The web backend details.
        /// </summary>
        [Input("web")]
        public Input<Inputs.ApiGatewayApiWebGetArgs>? Web { get; set; }

        [Input("webPolicies")]
        private InputList<Inputs.ApiGatewayApiWebPolicyGetArgs>? _webPolicies;

        /// <summary>
        /// The web policy backends.
        /// </summary>
        public InputList<Inputs.ApiGatewayApiWebPolicyGetArgs> WebPolicies
        {
            get => _webPolicies ?? (_webPolicies = new InputList<Inputs.ApiGatewayApiWebPolicyGetArgs>());
            set => _webPolicies = value;
        }

        public ApiGatewayApiState()
        {
        }
        public static new ApiGatewayApiState Empty => new ApiGatewayApiState();
    }
}
