// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetRdsBackups
    {
        public static Task<GetRdsBackupsResult> InvokeAsync(GetRdsBackupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRdsBackupsResult>("sbercloud:index/getRdsBackups:getRdsBackups", args ?? new GetRdsBackupsArgs(), options.WithDefaults());

        public static Output<GetRdsBackupsResult> Invoke(GetRdsBackupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsBackupsResult>("sbercloud:index/getRdsBackups:getRdsBackups", args ?? new GetRdsBackupsInvokeArgs(), options.WithDefaults());

        public static Output<GetRdsBackupsResult> Invoke(GetRdsBackupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsBackupsResult>("sbercloud:index/getRdsBackups:getRdsBackups", args ?? new GetRdsBackupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRdsBackupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupId")]
        public string? BackupId { get; set; }

        [Input("backupType")]
        public string? BackupType { get; set; }

        [Input("beginTime")]
        public string? BeginTime { get; set; }

        [Input("endTime")]
        public string? EndTime { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetRdsBackupsArgs()
        {
        }
        public static new GetRdsBackupsArgs Empty => new GetRdsBackupsArgs();
    }

    public sealed class GetRdsBackupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupId")]
        public Input<string>? BackupId { get; set; }

        [Input("backupType")]
        public Input<string>? BackupType { get; set; }

        [Input("beginTime")]
        public Input<string>? BeginTime { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetRdsBackupsInvokeArgs()
        {
        }
        public static new GetRdsBackupsInvokeArgs Empty => new GetRdsBackupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRdsBackupsResult
    {
        public readonly string? BackupId;
        public readonly string? BackupType;
        public readonly ImmutableArray<Outputs.GetRdsBackupsBackupResult> Backups;
        public readonly string? BeginTime;
        public readonly string? EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? Name;
        public readonly string Region;

        [OutputConstructor]
        private GetRdsBackupsResult(
            string? backupId,

            string? backupType,

            ImmutableArray<Outputs.GetRdsBackupsBackupResult> backups,

            string? beginTime,

            string? endTime,

            string id,

            string instanceId,

            string? name,

            string region)
        {
            BackupId = backupId;
            BackupType = backupType;
            Backups = backups;
            BeginTime = beginTime;
            EndTime = endTime;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            Region = region;
        }
    }
}
