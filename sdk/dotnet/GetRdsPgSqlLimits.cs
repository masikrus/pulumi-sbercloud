// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetRdsPgSqlLimits
    {
        public static Task<GetRdsPgSqlLimitsResult> InvokeAsync(GetRdsPgSqlLimitsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRdsPgSqlLimitsResult>("sbercloud:index/getRdsPgSqlLimits:getRdsPgSqlLimits", args ?? new GetRdsPgSqlLimitsArgs(), options.WithDefaults());

        public static Output<GetRdsPgSqlLimitsResult> Invoke(GetRdsPgSqlLimitsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsPgSqlLimitsResult>("sbercloud:index/getRdsPgSqlLimits:getRdsPgSqlLimits", args ?? new GetRdsPgSqlLimitsInvokeArgs(), options.WithDefaults());

        public static Output<GetRdsPgSqlLimitsResult> Invoke(GetRdsPgSqlLimitsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsPgSqlLimitsResult>("sbercloud:index/getRdsPgSqlLimits:getRdsPgSqlLimits", args ?? new GetRdsPgSqlLimitsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRdsPgSqlLimitsArgs : global::Pulumi.InvokeArgs
    {
        [Input("dbName", required: true)]
        public string DbName { get; set; } = null!;

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("isEffective")]
        public string? IsEffective { get; set; }

        [Input("maxConcurrency")]
        public string? MaxConcurrency { get; set; }

        [Input("maxWaiting")]
        public string? MaxWaiting { get; set; }

        [Input("queryId")]
        public string? QueryId { get; set; }

        [Input("queryString")]
        public string? QueryString { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("searchPath")]
        public string? SearchPath { get; set; }

        [Input("sqlLimitId")]
        public string? SqlLimitId { get; set; }

        public GetRdsPgSqlLimitsArgs()
        {
        }
        public static new GetRdsPgSqlLimitsArgs Empty => new GetRdsPgSqlLimitsArgs();
    }

    public sealed class GetRdsPgSqlLimitsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dbName", required: true)]
        public Input<string> DbName { get; set; } = null!;

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("isEffective")]
        public Input<string>? IsEffective { get; set; }

        [Input("maxConcurrency")]
        public Input<string>? MaxConcurrency { get; set; }

        [Input("maxWaiting")]
        public Input<string>? MaxWaiting { get; set; }

        [Input("queryId")]
        public Input<string>? QueryId { get; set; }

        [Input("queryString")]
        public Input<string>? QueryString { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("searchPath")]
        public Input<string>? SearchPath { get; set; }

        [Input("sqlLimitId")]
        public Input<string>? SqlLimitId { get; set; }

        public GetRdsPgSqlLimitsInvokeArgs()
        {
        }
        public static new GetRdsPgSqlLimitsInvokeArgs Empty => new GetRdsPgSqlLimitsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRdsPgSqlLimitsResult
    {
        public readonly string DbName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? IsEffective;
        public readonly string? MaxConcurrency;
        public readonly string? MaxWaiting;
        public readonly string? QueryId;
        public readonly string? QueryString;
        public readonly string Region;
        public readonly string? SearchPath;
        public readonly string? SqlLimitId;
        public readonly ImmutableArray<Outputs.GetRdsPgSqlLimitsSqlLimitResult> SqlLimits;

        [OutputConstructor]
        private GetRdsPgSqlLimitsResult(
            string dbName,

            string id,

            string instanceId,

            string? isEffective,

            string? maxConcurrency,

            string? maxWaiting,

            string? queryId,

            string? queryString,

            string region,

            string? searchPath,

            string? sqlLimitId,

            ImmutableArray<Outputs.GetRdsPgSqlLimitsSqlLimitResult> sqlLimits)
        {
            DbName = dbName;
            Id = id;
            InstanceId = instanceId;
            IsEffective = isEffective;
            MaxConcurrency = maxConcurrency;
            MaxWaiting = maxWaiting;
            QueryId = queryId;
            QueryString = queryString;
            Region = region;
            SearchPath = searchPath;
            SqlLimitId = sqlLimitId;
            SqlLimits = sqlLimits;
        }
    }
}
