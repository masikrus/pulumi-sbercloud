// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetVpcRoutes
    {
        public static Task<GetVpcRoutesResult> InvokeAsync(GetVpcRoutesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcRoutesResult>("sbercloud:index/getVpcRoutes:getVpcRoutes", args ?? new GetVpcRoutesArgs(), options.WithDefaults());

        public static Output<GetVpcRoutesResult> Invoke(GetVpcRoutesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcRoutesResult>("sbercloud:index/getVpcRoutes:getVpcRoutes", args ?? new GetVpcRoutesInvokeArgs(), options.WithDefaults());

        public static Output<GetVpcRoutesResult> Invoke(GetVpcRoutesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcRoutesResult>("sbercloud:index/getVpcRoutes:getVpcRoutes", args ?? new GetVpcRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcRoutesArgs : global::Pulumi.InvokeArgs
    {
        [Input("destination")]
        public string? Destination { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetVpcRoutesArgs()
        {
        }
        public static new GetVpcRoutesArgs Empty => new GetVpcRoutesArgs();
    }

    public sealed class GetVpcRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("destination")]
        public Input<string>? Destination { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetVpcRoutesInvokeArgs()
        {
        }
        public static new GetVpcRoutesInvokeArgs Empty => new GetVpcRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcRoutesResult
    {
        public readonly string? Destination;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Region;
        public readonly ImmutableArray<Outputs.GetVpcRoutesRouteResult> Routes;
        public readonly string? Type;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetVpcRoutesResult(
            string? destination,

            string id,

            string region,

            ImmutableArray<Outputs.GetVpcRoutesRouteResult> routes,

            string? type,

            string? vpcId)
        {
            Destination = destination;
            Id = id;
            Region = region;
            Routes = routes;
            Type = type;
            VpcId = vpcId;
        }
    }
}
