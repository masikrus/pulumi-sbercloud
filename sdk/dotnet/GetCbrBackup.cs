// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetCbrBackup
    {
        public static Task<GetCbrBackupResult> InvokeAsync(GetCbrBackupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCbrBackupResult>("sbercloud:index/getCbrBackup:getCbrBackup", args ?? new GetCbrBackupArgs(), options.WithDefaults());

        public static Output<GetCbrBackupResult> Invoke(GetCbrBackupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCbrBackupResult>("sbercloud:index/getCbrBackup:getCbrBackup", args ?? new GetCbrBackupInvokeArgs(), options.WithDefaults());

        public static Output<GetCbrBackupResult> Invoke(GetCbrBackupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCbrBackupResult>("sbercloud:index/getCbrBackup:getCbrBackup", args ?? new GetCbrBackupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCbrBackupArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("region")]
        public string? Region { get; set; }

        public GetCbrBackupArgs()
        {
        }
        public static new GetCbrBackupArgs Empty => new GetCbrBackupArgs();
    }

    public sealed class GetCbrBackupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetCbrBackupInvokeArgs()
        {
        }
        public static new GetCbrBackupInvokeArgs Empty => new GetCbrBackupInvokeArgs();
    }


    [OutputType]
    public sealed class GetCbrBackupResult
    {
        public readonly string CheckpointId;
        public readonly ImmutableArray<Outputs.GetCbrBackupChildrenResult> Childrens;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly string EnterpriseProjectId;
        public readonly string ExpiredAt;
        public readonly ImmutableArray<Outputs.GetCbrBackupExtendInfoResult> ExtendInfos;
        public readonly string Id;
        public readonly string Name;
        public readonly string ParentId;
        public readonly string? Region;
        public readonly ImmutableArray<Outputs.GetCbrBackupReplicationRecordResult> ReplicationRecords;
        public readonly string ResourceAz;
        public readonly string ResourceId;
        public readonly string ResourceName;
        public readonly int ResourceSize;
        public readonly string ResourceType;
        public readonly string Status;
        public readonly string Type;
        public readonly string UpdatedAt;
        public readonly string VaultId;

        [OutputConstructor]
        private GetCbrBackupResult(
            string checkpointId,

            ImmutableArray<Outputs.GetCbrBackupChildrenResult> childrens,

            string createdAt,

            string description,

            string enterpriseProjectId,

            string expiredAt,

            ImmutableArray<Outputs.GetCbrBackupExtendInfoResult> extendInfos,

            string id,

            string name,

            string parentId,

            string? region,

            ImmutableArray<Outputs.GetCbrBackupReplicationRecordResult> replicationRecords,

            string resourceAz,

            string resourceId,

            string resourceName,

            int resourceSize,

            string resourceType,

            string status,

            string type,

            string updatedAt,

            string vaultId)
        {
            CheckpointId = checkpointId;
            Childrens = childrens;
            CreatedAt = createdAt;
            Description = description;
            EnterpriseProjectId = enterpriseProjectId;
            ExpiredAt = expiredAt;
            ExtendInfos = extendInfos;
            Id = id;
            Name = name;
            ParentId = parentId;
            Region = region;
            ReplicationRecords = replicationRecords;
            ResourceAz = resourceAz;
            ResourceId = resourceId;
            ResourceName = resourceName;
            ResourceSize = resourceSize;
            ResourceType = resourceType;
            Status = status;
            Type = type;
            UpdatedAt = updatedAt;
            VaultId = vaultId;
        }
    }
}
