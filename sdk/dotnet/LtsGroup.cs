// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/ltsGroup:LtsGroup")]
    public partial class LtsGroup : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The enterprise project ID to which the log group belongs.
        /// </summary>
        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("groupName")]
        public Output<string> GroupName { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("ttlInDays")]
        public Output<int> TtlInDays { get; private set; } = null!;


        /// <summary>
        /// Create a LtsGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LtsGroup(string name, LtsGroupArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/ltsGroup:LtsGroup", name, args ?? new LtsGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LtsGroup(string name, Input<string> id, LtsGroupState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/ltsGroup:LtsGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LtsGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LtsGroup Get(string name, Input<string> id, LtsGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new LtsGroup(name, id, state, options);
        }
    }

    public sealed class LtsGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The enterprise project ID to which the log group belongs.
        /// </summary>
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("ttlInDays", required: true)]
        public Input<int> TtlInDays { get; set; } = null!;

        public LtsGroupArgs()
        {
        }
        public static new LtsGroupArgs Empty => new LtsGroupArgs();
    }

    public sealed class LtsGroupState : global::Pulumi.ResourceArgs
    {
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The enterprise project ID to which the log group belongs.
        /// </summary>
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("ttlInDays")]
        public Input<int>? TtlInDays { get; set; }

        public LtsGroupState()
        {
        }
        public static new LtsGroupState Empty => new LtsGroupState();
    }
}
