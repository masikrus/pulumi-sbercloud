// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetVpcs
    {
        public static Task<GetVpcsResult> InvokeAsync(GetVpcsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcsResult>("sbercloud:index/getVpcs:getVpcs", args ?? new GetVpcsArgs(), options.WithDefaults());

        public static Output<GetVpcsResult> Invoke(GetVpcsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcsResult>("sbercloud:index/getVpcs:getVpcs", args ?? new GetVpcsInvokeArgs(), options.WithDefaults());

        public static Output<GetVpcsResult> Invoke(GetVpcsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcsResult>("sbercloud:index/getVpcs:getVpcs", args ?? new GetVpcsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcsArgs : global::Pulumi.InvokeArgs
    {
        [Input("cidr")]
        public string? Cidr { get; set; }

        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetVpcsArgs()
        {
        }
        public static new GetVpcsArgs Empty => new GetVpcsArgs();
    }

    public sealed class GetVpcsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetVpcsInvokeArgs()
        {
        }
        public static new GetVpcsInvokeArgs Empty => new GetVpcsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcsResult
    {
        public readonly string? Cidr;
        public readonly string? EnterpriseProjectId;
        public readonly string Id;
        public readonly string? Name;
        public readonly string Region;
        public readonly string? Status;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly ImmutableArray<Outputs.GetVpcsVpcResult> Vpcs;

        [OutputConstructor]
        private GetVpcsResult(
            string? cidr,

            string? enterpriseProjectId,

            string id,

            string? name,

            string region,

            string? status,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<Outputs.GetVpcsVpcResult> vpcs)
        {
            Cidr = cidr;
            EnterpriseProjectId = enterpriseProjectId;
            Id = id;
            Name = name;
            Region = region;
            Status = status;
            Tags = tags;
            Vpcs = vpcs;
        }
    }
}
