// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/lbWhitelist:LbWhitelist")]
    public partial class LbWhitelist : global::Pulumi.CustomResource
    {
        [Output("enableWhitelist")]
        public Output<bool?> EnableWhitelist { get; private set; } = null!;

        [Output("listenerId")]
        public Output<string> ListenerId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        [Output("whitelist")]
        public Output<string?> Whitelist { get; private set; } = null!;


        /// <summary>
        /// Create a LbWhitelist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LbWhitelist(string name, LbWhitelistArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbWhitelist:LbWhitelist", name, args ?? new LbWhitelistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LbWhitelist(string name, Input<string> id, LbWhitelistState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/lbWhitelist:LbWhitelist", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LbWhitelist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LbWhitelist Get(string name, Input<string> id, LbWhitelistState? state = null, CustomResourceOptions? options = null)
        {
            return new LbWhitelist(name, id, state, options);
        }
    }

    public sealed class LbWhitelistArgs : global::Pulumi.ResourceArgs
    {
        [Input("enableWhitelist")]
        public Input<bool>? EnableWhitelist { get; set; }

        [Input("listenerId", required: true)]
        public Input<string> ListenerId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("whitelist")]
        public Input<string>? Whitelist { get; set; }

        public LbWhitelistArgs()
        {
        }
        public static new LbWhitelistArgs Empty => new LbWhitelistArgs();
    }

    public sealed class LbWhitelistState : global::Pulumi.ResourceArgs
    {
        [Input("enableWhitelist")]
        public Input<bool>? EnableWhitelist { get; set; }

        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("whitelist")]
        public Input<string>? Whitelist { get; set; }

        public LbWhitelistState()
        {
        }
        public static new LbWhitelistState Empty => new LbWhitelistState();
    }
}
