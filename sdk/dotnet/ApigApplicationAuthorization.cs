// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/apigApplicationAuthorization:ApigApplicationAuthorization")]
    public partial class ApigApplicationAuthorization : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The authorized API IDs
        /// </summary>
        [Output("apiIds")]
        public Output<ImmutableArray<string>> ApiIds { get; private set; } = null!;

        /// <summary>
        /// The ID of the application authorized to access the APIs.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// The environment ID where the APIs were published.
        /// </summary>
        [Output("envId")]
        public Output<string> EnvId { get; private set; } = null!;

        /// <summary>
        /// The ID of the dedicated instance to which the application and APIs belong.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The region where the application and APPCODEs are located.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a ApigApplicationAuthorization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigApplicationAuthorization(string name, ApigApplicationAuthorizationArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigApplicationAuthorization:ApigApplicationAuthorization", name, args ?? new ApigApplicationAuthorizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigApplicationAuthorization(string name, Input<string> id, ApigApplicationAuthorizationState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigApplicationAuthorization:ApigApplicationAuthorization", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigApplicationAuthorization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigApplicationAuthorization Get(string name, Input<string> id, ApigApplicationAuthorizationState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigApplicationAuthorization(name, id, state, options);
        }
    }

    public sealed class ApigApplicationAuthorizationArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiIds", required: true)]
        private InputList<string>? _apiIds;

        /// <summary>
        /// The authorized API IDs
        /// </summary>
        public InputList<string> ApiIds
        {
            get => _apiIds ?? (_apiIds = new InputList<string>());
            set => _apiIds = value;
        }

        /// <summary>
        /// The ID of the application authorized to access the APIs.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// The environment ID where the APIs were published.
        /// </summary>
        [Input("envId", required: true)]
        public Input<string> EnvId { get; set; } = null!;

        /// <summary>
        /// The ID of the dedicated instance to which the application and APIs belong.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The region where the application and APPCODEs are located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ApigApplicationAuthorizationArgs()
        {
        }
        public static new ApigApplicationAuthorizationArgs Empty => new ApigApplicationAuthorizationArgs();
    }

    public sealed class ApigApplicationAuthorizationState : global::Pulumi.ResourceArgs
    {
        [Input("apiIds")]
        private InputList<string>? _apiIds;

        /// <summary>
        /// The authorized API IDs
        /// </summary>
        public InputList<string> ApiIds
        {
            get => _apiIds ?? (_apiIds = new InputList<string>());
            set => _apiIds = value;
        }

        /// <summary>
        /// The ID of the application authorized to access the APIs.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// The environment ID where the APIs were published.
        /// </summary>
        [Input("envId")]
        public Input<string>? EnvId { get; set; }

        /// <summary>
        /// The ID of the dedicated instance to which the application and APIs belong.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The region where the application and APPCODEs are located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ApigApplicationAuthorizationState()
        {
        }
        public static new ApigApplicationAuthorizationState Empty => new ApigApplicationAuthorizationState();
    }
}
