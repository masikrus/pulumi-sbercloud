// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetEvsVolumes
    {
        public static Task<GetEvsVolumesResult> InvokeAsync(GetEvsVolumesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEvsVolumesResult>("sbercloud:index/getEvsVolumes:getEvsVolumes", args ?? new GetEvsVolumesArgs(), options.WithDefaults());

        public static Output<GetEvsVolumesResult> Invoke(GetEvsVolumesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEvsVolumesResult>("sbercloud:index/getEvsVolumes:getEvsVolumes", args ?? new GetEvsVolumesInvokeArgs(), options.WithDefaults());

        public static Output<GetEvsVolumesResult> Invoke(GetEvsVolumesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEvsVolumesResult>("sbercloud:index/getEvsVolumes:getEvsVolumes", args ?? new GetEvsVolumesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEvsVolumesArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("serverId")]
        public string? ServerId { get; set; }

        [Input("shareable")]
        public bool? Shareable { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        [Input("volumeId")]
        public string? VolumeId { get; set; }

        [Input("volumeTypeId")]
        public string? VolumeTypeId { get; set; }

        public GetEvsVolumesArgs()
        {
        }
        public static new GetEvsVolumesArgs Empty => new GetEvsVolumesArgs();
    }

    public sealed class GetEvsVolumesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        [Input("shareable")]
        public Input<bool>? Shareable { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("volumeId")]
        public Input<string>? VolumeId { get; set; }

        [Input("volumeTypeId")]
        public Input<string>? VolumeTypeId { get; set; }

        public GetEvsVolumesInvokeArgs()
        {
        }
        public static new GetEvsVolumesInvokeArgs Empty => new GetEvsVolumesInvokeArgs();
    }


    [OutputType]
    public sealed class GetEvsVolumesResult
    {
        public readonly string? AvailabilityZone;
        public readonly string? EnterpriseProjectId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? Region;
        public readonly string? ServerId;
        public readonly bool? Shareable;
        public readonly string? Status;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly string? VolumeId;
        public readonly string? VolumeTypeId;
        public readonly ImmutableArray<Outputs.GetEvsVolumesVolumeResult> Volumes;

        [OutputConstructor]
        private GetEvsVolumesResult(
            string? availabilityZone,

            string? enterpriseProjectId,

            string id,

            string? name,

            string? region,

            string? serverId,

            bool? shareable,

            string? status,

            ImmutableDictionary<string, string>? tags,

            string? volumeId,

            string? volumeTypeId,

            ImmutableArray<Outputs.GetEvsVolumesVolumeResult> volumes)
        {
            AvailabilityZone = availabilityZone;
            EnterpriseProjectId = enterpriseProjectId;
            Id = id;
            Name = name;
            Region = region;
            ServerId = serverId;
            Shareable = shareable;
            Status = status;
            Tags = tags;
            VolumeId = volumeId;
            VolumeTypeId = volumeTypeId;
            Volumes = volumes;
        }
    }
}
