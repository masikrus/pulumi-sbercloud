// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/mapreduceJob:MapreduceJob")]
    public partial class MapreduceJob : global::Pulumi.CustomResource
    {
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("finishTime")]
        public Output<string> FinishTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parameters")]
        public Output<string?> Parameters { get; private set; } = null!;

        [Output("programParameters")]
        public Output<ImmutableDictionary<string, string>?> ProgramParameters { get; private set; } = null!;

        [Output("programPath")]
        public Output<string?> ProgramPath { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("serviceParameters")]
        public Output<ImmutableDictionary<string, string>?> ServiceParameters { get; private set; } = null!;

        [Output("sql")]
        public Output<string?> Sql { get; private set; } = null!;

        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("submitTime")]
        public Output<string> SubmitTime { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a MapreduceJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MapreduceJob(string name, MapreduceJobArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/mapreduceJob:MapreduceJob", name, args ?? new MapreduceJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MapreduceJob(string name, Input<string> id, MapreduceJobState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/mapreduceJob:MapreduceJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MapreduceJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MapreduceJob Get(string name, Input<string> id, MapreduceJobState? state = null, CustomResourceOptions? options = null)
        {
            return new MapreduceJob(name, id, state, options);
        }
    }

    public sealed class MapreduceJobArgs : global::Pulumi.ResourceArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        public Input<string>? Parameters { get; set; }

        [Input("programParameters")]
        private InputMap<string>? _programParameters;
        public InputMap<string> ProgramParameters
        {
            get => _programParameters ?? (_programParameters = new InputMap<string>());
            set => _programParameters = value;
        }

        [Input("programPath")]
        public Input<string>? ProgramPath { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceParameters")]
        private InputMap<string>? _serviceParameters;
        public InputMap<string> ServiceParameters
        {
            get => _serviceParameters ?? (_serviceParameters = new InputMap<string>());
            set => _serviceParameters = value;
        }

        [Input("sql")]
        public Input<string>? Sql { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public MapreduceJobArgs()
        {
        }
        public static new MapreduceJobArgs Empty => new MapreduceJobArgs();
    }

    public sealed class MapreduceJobState : global::Pulumi.ResourceArgs
    {
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("finishTime")]
        public Input<string>? FinishTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        public Input<string>? Parameters { get; set; }

        [Input("programParameters")]
        private InputMap<string>? _programParameters;
        public InputMap<string> ProgramParameters
        {
            get => _programParameters ?? (_programParameters = new InputMap<string>());
            set => _programParameters = value;
        }

        [Input("programPath")]
        public Input<string>? ProgramPath { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceParameters")]
        private InputMap<string>? _serviceParameters;
        public InputMap<string> ServiceParameters
        {
            get => _serviceParameters ?? (_serviceParameters = new InputMap<string>());
            set => _serviceParameters = value;
        }

        [Input("sql")]
        public Input<string>? Sql { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("submitTime")]
        public Input<string>? SubmitTime { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public MapreduceJobState()
        {
        }
        public static new MapreduceJobState Empty => new MapreduceJobState();
    }
}
