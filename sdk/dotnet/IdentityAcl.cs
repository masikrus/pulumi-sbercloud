// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/identityAcl:IdentityAcl")]
    public partial class IdentityAcl : global::Pulumi.CustomResource
    {
        [Output("ipCidrs")]
        public Output<ImmutableArray<Outputs.IdentityAclIpCidr>> IpCidrs { get; private set; } = null!;

        [Output("ipRanges")]
        public Output<ImmutableArray<Outputs.IdentityAclIpRange>> IpRanges { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IdentityAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IdentityAcl(string name, IdentityAclArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityAcl:IdentityAcl", name, args ?? new IdentityAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IdentityAcl(string name, Input<string> id, IdentityAclState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/identityAcl:IdentityAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IdentityAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IdentityAcl Get(string name, Input<string> id, IdentityAclState? state = null, CustomResourceOptions? options = null)
        {
            return new IdentityAcl(name, id, state, options);
        }
    }

    public sealed class IdentityAclArgs : global::Pulumi.ResourceArgs
    {
        [Input("ipCidrs")]
        private InputList<Inputs.IdentityAclIpCidrArgs>? _ipCidrs;
        public InputList<Inputs.IdentityAclIpCidrArgs> IpCidrs
        {
            get => _ipCidrs ?? (_ipCidrs = new InputList<Inputs.IdentityAclIpCidrArgs>());
            set => _ipCidrs = value;
        }

        [Input("ipRanges")]
        private InputList<Inputs.IdentityAclIpRangeArgs>? _ipRanges;
        public InputList<Inputs.IdentityAclIpRangeArgs> IpRanges
        {
            get => _ipRanges ?? (_ipRanges = new InputList<Inputs.IdentityAclIpRangeArgs>());
            set => _ipRanges = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public IdentityAclArgs()
        {
        }
        public static new IdentityAclArgs Empty => new IdentityAclArgs();
    }

    public sealed class IdentityAclState : global::Pulumi.ResourceArgs
    {
        [Input("ipCidrs")]
        private InputList<Inputs.IdentityAclIpCidrGetArgs>? _ipCidrs;
        public InputList<Inputs.IdentityAclIpCidrGetArgs> IpCidrs
        {
            get => _ipCidrs ?? (_ipCidrs = new InputList<Inputs.IdentityAclIpCidrGetArgs>());
            set => _ipCidrs = value;
        }

        [Input("ipRanges")]
        private InputList<Inputs.IdentityAclIpRangeGetArgs>? _ipRanges;
        public InputList<Inputs.IdentityAclIpRangeGetArgs> IpRanges
        {
            get => _ipRanges ?? (_ipRanges = new InputList<Inputs.IdentityAclIpRangeGetArgs>());
            set => _ipRanges = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public IdentityAclState()
        {
        }
        public static new IdentityAclState Empty => new IdentityAclState();
    }
}
