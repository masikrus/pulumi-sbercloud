// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/networkingSecgroupRule:NetworkingSecgroupRule")]
    public partial class NetworkingSecgroupRule : global::Pulumi.CustomResource
    {
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        [Output("ethertype")]
        public Output<string> Ethertype { get; private set; } = null!;

        [Output("portRangeMax")]
        public Output<int> PortRangeMax { get; private set; } = null!;

        [Output("portRangeMin")]
        public Output<int> PortRangeMin { get; private set; } = null!;

        [Output("ports")]
        public Output<string> Ports { get; private set; } = null!;

        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("remoteAddressGroupId")]
        public Output<string> RemoteAddressGroupId { get; private set; } = null!;

        [Output("remoteGroupId")]
        public Output<string> RemoteGroupId { get; private set; } = null!;

        [Output("remoteIpPrefix")]
        public Output<string> RemoteIpPrefix { get; private set; } = null!;

        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkingSecgroupRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkingSecgroupRule(string name, NetworkingSecgroupRuleArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/networkingSecgroupRule:NetworkingSecgroupRule", name, args ?? new NetworkingSecgroupRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkingSecgroupRule(string name, Input<string> id, NetworkingSecgroupRuleState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/networkingSecgroupRule:NetworkingSecgroupRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkingSecgroupRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkingSecgroupRule Get(string name, Input<string> id, NetworkingSecgroupRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkingSecgroupRule(name, id, state, options);
        }
    }

    public sealed class NetworkingSecgroupRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        [Input("ethertype", required: true)]
        public Input<string> Ethertype { get; set; } = null!;

        [Input("portRangeMax")]
        public Input<int>? PortRangeMax { get; set; }

        [Input("portRangeMin")]
        public Input<int>? PortRangeMin { get; set; }

        [Input("ports")]
        public Input<string>? Ports { get; set; }

        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("remoteAddressGroupId")]
        public Input<string>? RemoteAddressGroupId { get; set; }

        [Input("remoteGroupId")]
        public Input<string>? RemoteGroupId { get; set; }

        [Input("remoteIpPrefix")]
        public Input<string>? RemoteIpPrefix { get; set; }

        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        public NetworkingSecgroupRuleArgs()
        {
        }
        public static new NetworkingSecgroupRuleArgs Empty => new NetworkingSecgroupRuleArgs();
    }

    public sealed class NetworkingSecgroupRuleState : global::Pulumi.ResourceArgs
    {
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("direction")]
        public Input<string>? Direction { get; set; }

        [Input("ethertype")]
        public Input<string>? Ethertype { get; set; }

        [Input("portRangeMax")]
        public Input<int>? PortRangeMax { get; set; }

        [Input("portRangeMin")]
        public Input<int>? PortRangeMin { get; set; }

        [Input("ports")]
        public Input<string>? Ports { get; set; }

        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("remoteAddressGroupId")]
        public Input<string>? RemoteAddressGroupId { get; set; }

        [Input("remoteGroupId")]
        public Input<string>? RemoteGroupId { get; set; }

        [Input("remoteIpPrefix")]
        public Input<string>? RemoteIpPrefix { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        public NetworkingSecgroupRuleState()
        {
        }
        public static new NetworkingSecgroupRuleState Empty => new NetworkingSecgroupRuleState();
    }
}
