// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/apigCustomAuthorizer:ApigCustomAuthorizer")]
    public partial class ApigCustomAuthorizer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The maximum cache age.
        /// </summary>
        [Output("cacheAge")]
        public Output<int?> CacheAge { get; private set; } = null!;

        /// <summary>
        /// The creation time of the custom authorizer.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The version alias URI of the FGS function.
        /// </summary>
        [Output("functionAliasUri")]
        public Output<string> FunctionAliasUri { get; private set; } = null!;

        /// <summary>
        /// The URN of the FGS function.
        /// </summary>
        [Output("functionUrn")]
        public Output<string> FunctionUrn { get; private set; } = null!;

        /// <summary>
        /// The version of the FGS function.
        /// </summary>
        [Output("functionVersion")]
        public Output<string> FunctionVersion { get; private set; } = null!;

        /// <summary>
        /// The array of one or more parameter identities of the custom authorizer.
        /// </summary>
        [Output("identities")]
        public Output<ImmutableArray<Outputs.ApigCustomAuthorizerIdentity>> Identities { get; private set; } = null!;

        /// <summary>
        /// The ID of the dedicated instance to which the custom authorizer belongs.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Whether to send the body.
        /// </summary>
        [Output("isBodySend")]
        public Output<bool?> IsBodySend { get; private set; } = null!;

        /// <summary>
        /// The name of the custom authorizer.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The framework type of the function.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// The region where the custom authorizer is located.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The custom authorization type
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// The user data for custom authorizer function.
        /// </summary>
        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;


        /// <summary>
        /// Create a ApigCustomAuthorizer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigCustomAuthorizer(string name, ApigCustomAuthorizerArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigCustomAuthorizer:ApigCustomAuthorizer", name, args ?? new ApigCustomAuthorizerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigCustomAuthorizer(string name, Input<string> id, ApigCustomAuthorizerState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/apigCustomAuthorizer:ApigCustomAuthorizer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigCustomAuthorizer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigCustomAuthorizer Get(string name, Input<string> id, ApigCustomAuthorizerState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigCustomAuthorizer(name, id, state, options);
        }
    }

    public sealed class ApigCustomAuthorizerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum cache age.
        /// </summary>
        [Input("cacheAge")]
        public Input<int>? CacheAge { get; set; }

        /// <summary>
        /// The version alias URI of the FGS function.
        /// </summary>
        [Input("functionAliasUri")]
        public Input<string>? FunctionAliasUri { get; set; }

        /// <summary>
        /// The URN of the FGS function.
        /// </summary>
        [Input("functionUrn", required: true)]
        public Input<string> FunctionUrn { get; set; } = null!;

        /// <summary>
        /// The version of the FGS function.
        /// </summary>
        [Input("functionVersion")]
        public Input<string>? FunctionVersion { get; set; }

        [Input("identities")]
        private InputList<Inputs.ApigCustomAuthorizerIdentityArgs>? _identities;

        /// <summary>
        /// The array of one or more parameter identities of the custom authorizer.
        /// </summary>
        public InputList<Inputs.ApigCustomAuthorizerIdentityArgs> Identities
        {
            get => _identities ?? (_identities = new InputList<Inputs.ApigCustomAuthorizerIdentityArgs>());
            set => _identities = value;
        }

        /// <summary>
        /// The ID of the dedicated instance to which the custom authorizer belongs.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Whether to send the body.
        /// </summary>
        [Input("isBodySend")]
        public Input<bool>? IsBodySend { get; set; }

        /// <summary>
        /// The name of the custom authorizer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The framework type of the function.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// The region where the custom authorizer is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The custom authorization type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The user data for custom authorizer function.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        public ApigCustomAuthorizerArgs()
        {
        }
        public static new ApigCustomAuthorizerArgs Empty => new ApigCustomAuthorizerArgs();
    }

    public sealed class ApigCustomAuthorizerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum cache age.
        /// </summary>
        [Input("cacheAge")]
        public Input<int>? CacheAge { get; set; }

        /// <summary>
        /// The creation time of the custom authorizer.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The version alias URI of the FGS function.
        /// </summary>
        [Input("functionAliasUri")]
        public Input<string>? FunctionAliasUri { get; set; }

        /// <summary>
        /// The URN of the FGS function.
        /// </summary>
        [Input("functionUrn")]
        public Input<string>? FunctionUrn { get; set; }

        /// <summary>
        /// The version of the FGS function.
        /// </summary>
        [Input("functionVersion")]
        public Input<string>? FunctionVersion { get; set; }

        [Input("identities")]
        private InputList<Inputs.ApigCustomAuthorizerIdentityGetArgs>? _identities;

        /// <summary>
        /// The array of one or more parameter identities of the custom authorizer.
        /// </summary>
        public InputList<Inputs.ApigCustomAuthorizerIdentityGetArgs> Identities
        {
            get => _identities ?? (_identities = new InputList<Inputs.ApigCustomAuthorizerIdentityGetArgs>());
            set => _identities = value;
        }

        /// <summary>
        /// The ID of the dedicated instance to which the custom authorizer belongs.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Whether to send the body.
        /// </summary>
        [Input("isBodySend")]
        public Input<bool>? IsBodySend { get; set; }

        /// <summary>
        /// The name of the custom authorizer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The framework type of the function.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// The region where the custom authorizer is located.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The custom authorization type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The user data for custom authorizer function.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        public ApigCustomAuthorizerState()
        {
        }
        public static new ApigCustomAuthorizerState Empty => new ApigCustomAuthorizerState();
    }
}
