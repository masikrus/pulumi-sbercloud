// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetSfsTurbos
    {
        public static Task<GetSfsTurbosResult> InvokeAsync(GetSfsTurbosArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSfsTurbosResult>("sbercloud:index/getSfsTurbos:getSfsTurbos", args ?? new GetSfsTurbosArgs(), options.WithDefaults());

        public static Output<GetSfsTurbosResult> Invoke(GetSfsTurbosInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSfsTurbosResult>("sbercloud:index/getSfsTurbos:getSfsTurbos", args ?? new GetSfsTurbosInvokeArgs(), options.WithDefaults());

        public static Output<GetSfsTurbosResult> Invoke(GetSfsTurbosInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSfsTurbosResult>("sbercloud:index/getSfsTurbos:getSfsTurbos", args ?? new GetSfsTurbosInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSfsTurbosArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("shareProto")]
        public string? ShareProto { get; set; }

        [Input("shareType")]
        public string? ShareType { get; set; }

        [Input("size")]
        public int? Size { get; set; }

        public GetSfsTurbosArgs()
        {
        }
        public static new GetSfsTurbosArgs Empty => new GetSfsTurbosArgs();
    }

    public sealed class GetSfsTurbosInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("shareProto")]
        public Input<string>? ShareProto { get; set; }

        [Input("shareType")]
        public Input<string>? ShareType { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        public GetSfsTurbosInvokeArgs()
        {
        }
        public static new GetSfsTurbosInvokeArgs Empty => new GetSfsTurbosInvokeArgs();
    }


    [OutputType]
    public sealed class GetSfsTurbosResult
    {
        public readonly string? EnterpriseProjectId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? Region;
        public readonly string? ShareProto;
        public readonly string? ShareType;
        public readonly int? Size;
        public readonly ImmutableArray<Outputs.GetSfsTurbosTurboResult> Turbos;

        [OutputConstructor]
        private GetSfsTurbosResult(
            string? enterpriseProjectId,

            string id,

            string? name,

            string? region,

            string? shareProto,

            string? shareType,

            int? size,

            ImmutableArray<Outputs.GetSfsTurbosTurboResult> turbos)
        {
            EnterpriseProjectId = enterpriseProjectId;
            Id = id;
            Name = name;
            Region = region;
            ShareProto = shareProto;
            ShareType = shareType;
            Size = size;
            Turbos = turbos;
        }
    }
}
