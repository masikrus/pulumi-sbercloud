// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/networkingVip:NetworkingVip")]
    public partial class NetworkingVip : global::Pulumi.CustomResource
    {
        [Output("deviceOwner")]
        public Output<string> DeviceOwner { get; private set; } = null!;

        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        [Output("ipVersion")]
        public Output<int> IpVersion { get; private set; } = null!;

        [Output("macAddress")]
        public Output<string> MacAddress { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkingVip resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkingVip(string name, NetworkingVipArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/networkingVip:NetworkingVip", name, args ?? new NetworkingVipArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkingVip(string name, Input<string> id, NetworkingVipState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/networkingVip:NetworkingVip", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkingVip resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkingVip Get(string name, Input<string> id, NetworkingVipState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkingVip(name, id, state, options);
        }
    }

    public sealed class NetworkingVipArgs : global::Pulumi.ResourceArgs
    {
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("ipVersion")]
        public Input<int>? IpVersion { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public NetworkingVipArgs()
        {
        }
        public static new NetworkingVipArgs Empty => new NetworkingVipArgs();
    }

    public sealed class NetworkingVipState : global::Pulumi.ResourceArgs
    {
        [Input("deviceOwner")]
        public Input<string>? DeviceOwner { get; set; }

        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("ipVersion")]
        public Input<int>? IpVersion { get; set; }

        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public NetworkingVipState()
        {
        }
        public static new NetworkingVipState Empty => new NetworkingVipState();
    }
}
