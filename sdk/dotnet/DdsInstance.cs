// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    [SbercloudResourceType("sbercloud:index/ddsInstance:DdsInstance")]
    public partial class DdsInstance : global::Pulumi.CustomResource
    {
        [Output("autoPay")]
        public Output<string?> AutoPay { get; private set; } = null!;

        [Output("autoRenew")]
        public Output<string?> AutoRenew { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("backupStrategy")]
        public Output<Outputs.DdsInstanceBackupStrategy> BackupStrategy { get; private set; } = null!;

        [Output("balancerActiveBegin")]
        public Output<string?> BalancerActiveBegin { get; private set; } = null!;

        [Output("balancerActiveEnd")]
        public Output<string?> BalancerActiveEnd { get; private set; } = null!;

        [Output("balancerStatus")]
        public Output<string> BalancerStatus { get; private set; } = null!;

        [Output("chargingMode")]
        public Output<string> ChargingMode { get; private set; } = null!;

        [Output("configurations")]
        public Output<ImmutableArray<Outputs.DdsInstanceConfiguration>> Configurations { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("datastore")]
        public Output<Outputs.DdsInstanceDatastore> Datastore { get; private set; } = null!;

        [Output("dbUsername")]
        public Output<string> DbUsername { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("diskEncryptionId")]
        public Output<string?> DiskEncryptionId { get; private set; } = null!;

        [Output("enterpriseProjectId")]
        public Output<string> EnterpriseProjectId { get; private set; } = null!;

        [Output("flavors")]
        public Output<ImmutableArray<Outputs.DdsInstanceFlavor>> Flavors { get; private set; } = null!;

        [Output("groups")]
        public Output<ImmutableArray<Outputs.DdsInstanceGroup>> Groups { get; private set; } = null!;

        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// This field is deprecated.
        /// </summary>
        [Output("nodes")]
        public Output<ImmutableArray<Outputs.DdsInstanceNode>> Nodes { get; private set; } = null!;

        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        [Output("periodUnit")]
        public Output<string?> PeriodUnit { get; private set; } = null!;

        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        [Output("ssl")]
        public Output<bool?> Ssl { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a DdsInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DdsInstance(string name, DdsInstanceArgs args, CustomResourceOptions? options = null)
            : base("sbercloud:index/ddsInstance:DdsInstance", name, args ?? new DdsInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DdsInstance(string name, Input<string> id, DdsInstanceState? state = null, CustomResourceOptions? options = null)
            : base("sbercloud:index/ddsInstance:DdsInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DdsInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DdsInstance Get(string name, Input<string> id, DdsInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new DdsInstance(name, id, state, options);
        }
    }

    public sealed class DdsInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoPay")]
        public Input<string>? AutoPay { get; set; }

        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZone", required: true)]
        public Input<string> AvailabilityZone { get; set; } = null!;

        [Input("backupStrategy")]
        public Input<Inputs.DdsInstanceBackupStrategyArgs>? BackupStrategy { get; set; }

        [Input("balancerActiveBegin")]
        public Input<string>? BalancerActiveBegin { get; set; }

        [Input("balancerActiveEnd")]
        public Input<string>? BalancerActiveEnd { get; set; }

        [Input("balancerStatus")]
        public Input<string>? BalancerStatus { get; set; }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("configurations")]
        private InputList<Inputs.DdsInstanceConfigurationArgs>? _configurations;
        public InputList<Inputs.DdsInstanceConfigurationArgs> Configurations
        {
            get => _configurations ?? (_configurations = new InputList<Inputs.DdsInstanceConfigurationArgs>());
            set => _configurations = value;
        }

        [Input("datastore", required: true)]
        public Input<Inputs.DdsInstanceDatastoreArgs> Datastore { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("diskEncryptionId")]
        public Input<string>? DiskEncryptionId { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("flavors", required: true)]
        private InputList<Inputs.DdsInstanceFlavorArgs>? _flavors;
        public InputList<Inputs.DdsInstanceFlavorArgs> Flavors
        {
            get => _flavors ?? (_flavors = new InputList<Inputs.DdsInstanceFlavorArgs>());
            set => _flavors = value;
        }

        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        [Input("ssl")]
        public Input<bool>? Ssl { get; set; }

        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public DdsInstanceArgs()
        {
        }
        public static new DdsInstanceArgs Empty => new DdsInstanceArgs();
    }

    public sealed class DdsInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("autoPay")]
        public Input<string>? AutoPay { get; set; }

        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("backupStrategy")]
        public Input<Inputs.DdsInstanceBackupStrategyGetArgs>? BackupStrategy { get; set; }

        [Input("balancerActiveBegin")]
        public Input<string>? BalancerActiveBegin { get; set; }

        [Input("balancerActiveEnd")]
        public Input<string>? BalancerActiveEnd { get; set; }

        [Input("balancerStatus")]
        public Input<string>? BalancerStatus { get; set; }

        [Input("chargingMode")]
        public Input<string>? ChargingMode { get; set; }

        [Input("configurations")]
        private InputList<Inputs.DdsInstanceConfigurationGetArgs>? _configurations;
        public InputList<Inputs.DdsInstanceConfigurationGetArgs> Configurations
        {
            get => _configurations ?? (_configurations = new InputList<Inputs.DdsInstanceConfigurationGetArgs>());
            set => _configurations = value;
        }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("datastore")]
        public Input<Inputs.DdsInstanceDatastoreGetArgs>? Datastore { get; set; }

        [Input("dbUsername")]
        public Input<string>? DbUsername { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("diskEncryptionId")]
        public Input<string>? DiskEncryptionId { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("flavors")]
        private InputList<Inputs.DdsInstanceFlavorGetArgs>? _flavors;
        public InputList<Inputs.DdsInstanceFlavorGetArgs> Flavors
        {
            get => _flavors ?? (_flavors = new InputList<Inputs.DdsInstanceFlavorGetArgs>());
            set => _flavors = value;
        }

        [Input("groups")]
        private InputList<Inputs.DdsInstanceGroupGetArgs>? _groups;
        public InputList<Inputs.DdsInstanceGroupGetArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.DdsInstanceGroupGetArgs>());
            set => _groups = value;
        }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nodes")]
        private InputList<Inputs.DdsInstanceNodeGetArgs>? _nodes;

        /// <summary>
        /// This field is deprecated.
        /// </summary>
        public InputList<Inputs.DdsInstanceNodeGetArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.DdsInstanceNodeGetArgs>());
            set => _nodes = value;
        }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("ssl")]
        public Input<bool>? Ssl { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public DdsInstanceState()
        {
        }
        public static new DdsInstanceState Empty => new DdsInstanceState();
    }
}
