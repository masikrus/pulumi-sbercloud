// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetCceClusters
    {
        public static Task<GetCceClustersResult> InvokeAsync(GetCceClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCceClustersResult>("sbercloud:index/getCceClusters:getCceClusters", args ?? new GetCceClustersArgs(), options.WithDefaults());

        public static Output<GetCceClustersResult> Invoke(GetCceClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCceClustersResult>("sbercloud:index/getCceClusters:getCceClusters", args ?? new GetCceClustersInvokeArgs(), options.WithDefaults());

        public static Output<GetCceClustersResult> Invoke(GetCceClustersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCceClustersResult>("sbercloud:index/getCceClusters:getCceClusters", args ?? new GetCceClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCceClustersArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        [Input("clusterType")]
        public string? ClusterType { get; set; }

        [Input("enterpriseProjectId")]
        public string? EnterpriseProjectId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetCceClustersArgs()
        {
        }
        public static new GetCceClustersArgs Empty => new GetCceClustersArgs();
    }

    public sealed class GetCceClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusterType")]
        public Input<string>? ClusterType { get; set; }

        [Input("enterpriseProjectId")]
        public Input<string>? EnterpriseProjectId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetCceClustersInvokeArgs()
        {
        }
        public static new GetCceClustersInvokeArgs Empty => new GetCceClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetCceClustersResult
    {
        public readonly string? ClusterId;
        public readonly string? ClusterType;
        public readonly ImmutableArray<Outputs.GetCceClustersClusterResult> Clusters;
        public readonly string? EnterpriseProjectId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? Name;
        public readonly string Region;
        public readonly string? Status;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetCceClustersResult(
            string? clusterId,

            string? clusterType,

            ImmutableArray<Outputs.GetCceClustersClusterResult> clusters,

            string? enterpriseProjectId,

            string id,

            ImmutableArray<string> ids,

            string? name,

            string region,

            string? status,

            string? vpcId)
        {
            ClusterId = clusterId;
            ClusterType = clusterType;
            Clusters = clusters;
            EnterpriseProjectId = enterpriseProjectId;
            Id = id;
            Ids = ids;
            Name = name;
            Region = region;
            Status = status;
            VpcId = vpcId;
        }
    }
}
