// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetRdsPgPlugins
    {
        public static Task<GetRdsPgPluginsResult> InvokeAsync(GetRdsPgPluginsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRdsPgPluginsResult>("sbercloud:index/getRdsPgPlugins:getRdsPgPlugins", args ?? new GetRdsPgPluginsArgs(), options.WithDefaults());

        public static Output<GetRdsPgPluginsResult> Invoke(GetRdsPgPluginsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsPgPluginsResult>("sbercloud:index/getRdsPgPlugins:getRdsPgPlugins", args ?? new GetRdsPgPluginsInvokeArgs(), options.WithDefaults());

        public static Output<GetRdsPgPluginsResult> Invoke(GetRdsPgPluginsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdsPgPluginsResult>("sbercloud:index/getRdsPgPlugins:getRdsPgPlugins", args ?? new GetRdsPgPluginsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRdsPgPluginsArgs : global::Pulumi.InvokeArgs
    {
        [Input("created")]
        public bool? Created { get; set; }

        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("version")]
        public string? Version { get; set; }

        public GetRdsPgPluginsArgs()
        {
        }
        public static new GetRdsPgPluginsArgs Empty => new GetRdsPgPluginsArgs();
    }

    public sealed class GetRdsPgPluginsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("created")]
        public Input<bool>? Created { get; set; }

        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetRdsPgPluginsInvokeArgs()
        {
        }
        public static new GetRdsPgPluginsInvokeArgs Empty => new GetRdsPgPluginsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRdsPgPluginsResult
    {
        public readonly bool? Created;
        public readonly string DatabaseName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetRdsPgPluginsPluginResult> Plugins;
        public readonly string Region;
        public readonly string? Version;

        [OutputConstructor]
        private GetRdsPgPluginsResult(
            bool? created,

            string databaseName,

            string id,

            string instanceId,

            string? name,

            ImmutableArray<Outputs.GetRdsPgPluginsPluginResult> plugins,

            string region,

            string? version)
        {
            Created = created;
            DatabaseName = databaseName;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            Plugins = plugins;
            Region = region;
            Version = version;
        }
    }
}
