// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sbercloud
{
    public static class GetComputeFlavors
    {
        public static Task<GetComputeFlavorsResult> InvokeAsync(GetComputeFlavorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeFlavorsResult>("sbercloud:index/getComputeFlavors:getComputeFlavors", args ?? new GetComputeFlavorsArgs(), options.WithDefaults());

        public static Output<GetComputeFlavorsResult> Invoke(GetComputeFlavorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeFlavorsResult>("sbercloud:index/getComputeFlavors:getComputeFlavors", args ?? new GetComputeFlavorsInvokeArgs(), options.WithDefaults());

        public static Output<GetComputeFlavorsResult> Invoke(GetComputeFlavorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeFlavorsResult>("sbercloud:index/getComputeFlavors:getComputeFlavors", args ?? new GetComputeFlavorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeFlavorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        [Input("cpuCoreCount")]
        public int? CpuCoreCount { get; set; }

        [Input("generation")]
        public string? Generation { get; set; }

        [Input("memorySize")]
        public int? MemorySize { get; set; }

        [Input("performanceType")]
        public string? PerformanceType { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("storageType")]
        public string? StorageType { get; set; }

        public GetComputeFlavorsArgs()
        {
        }
        public static new GetComputeFlavorsArgs Empty => new GetComputeFlavorsArgs();
    }

    public sealed class GetComputeFlavorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("cpuCoreCount")]
        public Input<int>? CpuCoreCount { get; set; }

        [Input("generation")]
        public Input<string>? Generation { get; set; }

        [Input("memorySize")]
        public Input<int>? MemorySize { get; set; }

        [Input("performanceType")]
        public Input<string>? PerformanceType { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        public GetComputeFlavorsInvokeArgs()
        {
        }
        public static new GetComputeFlavorsInvokeArgs Empty => new GetComputeFlavorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeFlavorsResult
    {
        public readonly string? AvailabilityZone;
        public readonly int? CpuCoreCount;
        public readonly ImmutableArray<Outputs.GetComputeFlavorsFlavorResult> Flavors;
        public readonly string? Generation;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly int? MemorySize;
        public readonly string? PerformanceType;
        public readonly string Region;
        public readonly string? StorageType;

        [OutputConstructor]
        private GetComputeFlavorsResult(
            string? availabilityZone,

            int? cpuCoreCount,

            ImmutableArray<Outputs.GetComputeFlavorsFlavorResult> flavors,

            string? generation,

            string id,

            ImmutableArray<string> ids,

            int? memorySize,

            string? performanceType,

            string region,

            string? storageType)
        {
            AvailabilityZone = availabilityZone;
            CpuCoreCount = cpuCoreCount;
            Flavors = flavors;
            Generation = generation;
            Id = id;
            Ids = ids;
            MemorySize = memorySize;
            PerformanceType = performanceType;
            Region = region;
            StorageType = storageType;
        }
    }
}
