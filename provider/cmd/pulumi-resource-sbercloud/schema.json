{
    "name": "sbercloud",
    "displayName": "SberCloud",
    "description": "A Pulumi package for creating and managing sbercloud cloud resources.",
    "keywords": [
        "sbercloud",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`sbercloud` Terraform Provider](https://github.com/terraform-providers/terraform-provider-sbercloud).",
    "repository": "https://github.com/masikrus/pulumi-sbercloud",
    "publisher": "masikrus",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/masikrus/pulumi-sbercloud/sdk/go/sbercloud",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing sbercloud cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-sbercloud)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-sbercloud` repo](https://github.com/masikrus/pulumi-sbercloud/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-sbercloud` repo](https://github.com/terraform-providers/terraform-provider-sbercloud/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-sbercloud)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-sbercloud` repo](https://github.com/masikrus/pulumi-sbercloud/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-sbercloud` repo](https://github.com/terraform-providers/terraform-provider-sbercloud/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "accessKey": {
                "type": "string",
                "description": "The access key of the SberCloud to use.\n"
            },
            "accountName": {
                "type": "string",
                "description": "The name of the Account to login with.\n"
            },
            "assumeRole": {
                "$ref": "#/types/sbercloud:config/assumeRole:assumeRole"
            },
            "authUrl": {
                "type": "string",
                "description": "The Identity authentication URL.\n"
            },
            "domainId": {
                "type": "string"
            },
            "domainName": {
                "type": "string"
            },
            "enterpriseProjectId": {
                "type": "string"
            },
            "insecure": {
                "type": "boolean",
                "description": "Trust self-signed certificates.\n"
            },
            "maxRetries": {
                "type": "integer"
            },
            "password": {
                "type": "string",
                "description": "Password to login with.\n",
                "secret": true
            },
            "projectName": {
                "type": "string",
                "description": "The name of the Project to login with.\n"
            },
            "region": {
                "type": "string",
                "description": "The SberCloud region to connect to.\n"
            },
            "secretKey": {
                "type": "string",
                "description": "The secret key of the SberCloud to use.\n"
            },
            "securityToken": {
                "type": "string",
                "description": "The security token to authenticate with a temporary security credential.\n"
            },
            "userName": {
                "type": "string",
                "description": "Username to login with.\n"
            }
        },
        "defaults": [
            "region"
        ]
    },
    "types": {
        "sbercloud:config/assumeRole:assumeRole": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agencyName",
                "domainName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/AomServiceDiscoveryRuleDiscoveryRule:AomServiceDiscoveryRuleDiscoveryRule": {
            "properties": {
                "checkContents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "checkMode": {
                    "type": "string"
                },
                "checkType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "checkContents",
                "checkMode",
                "checkType"
            ]
        },
        "sbercloud:index/AomServiceDiscoveryRuleLogPathRule:AomServiceDiscoveryRuleLogPathRule": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nameType": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "args",
                "nameType",
                "values"
            ]
        },
        "sbercloud:index/AomServiceDiscoveryRuleNameRules:AomServiceDiscoveryRuleNameRules": {
            "properties": {
                "applicationNameRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleNameRulesApplicationNameRule:AomServiceDiscoveryRuleNameRulesApplicationNameRule"
                    }
                },
                "serviceNameRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleNameRulesServiceNameRule:AomServiceDiscoveryRuleNameRulesServiceNameRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationNameRules",
                "serviceNameRules"
            ]
        },
        "sbercloud:index/AomServiceDiscoveryRuleNameRulesApplicationNameRule:AomServiceDiscoveryRuleNameRulesApplicationNameRule": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nameType": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "args",
                "nameType"
            ]
        },
        "sbercloud:index/AomServiceDiscoveryRuleNameRulesServiceNameRule:AomServiceDiscoveryRuleNameRulesServiceNameRule": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nameType": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "args",
                "nameType"
            ]
        },
        "sbercloud:index/ApiGatewayApiBackendParam:ApiGatewayApiBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApiGatewayApiFuncGraph:ApiGatewayApiFuncGraph": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation type.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "functionUrn"
            ]
        },
        "sbercloud:index/ApiGatewayApiFuncGraphPolicy:ApiGatewayApiFuncGraphPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraphPolicyBackendParam:ApiGatewayApiFuncGraphPolicyBackendParam"
                    },
                    "description": "The configaiton list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraphPolicyCondition:ApiGatewayApiFuncGraphPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationMode": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend policy.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "functionUrn",
                "name"
            ]
        },
        "sbercloud:index/ApiGatewayApiFuncGraphPolicyBackendParam:ApiGatewayApiFuncGraphPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApiGatewayApiFuncGraphPolicyCondition:ApiGatewayApiFuncGraphPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "sbercloud:index/ApiGatewayApiMock:ApiGatewayApiMock": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "statusCode"
                    ]
                }
            }
        },
        "sbercloud:index/ApiGatewayApiMockPolicy:ApiGatewayApiMockPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiMockPolicyBackendParam:ApiGatewayApiMockPolicyBackendParam"
                    },
                    "description": "The configuration list of backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiMockPolicyCondition:ApiGatewayApiMockPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The backend policy name.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditions",
                        "name",
                        "statusCode"
                    ]
                }
            }
        },
        "sbercloud:index/ApiGatewayApiMockPolicyBackendParam:ApiGatewayApiMockPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApiGatewayApiMockPolicyCondition:ApiGatewayApiMockPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "sbercloud:index/ApiGatewayApiRequestParam:ApiGatewayApiRequestParam": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default value of the parameter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The parameter description.\n"
                },
                "enumeration": {
                    "type": "string",
                    "description": "The enumerated value.\n"
                },
                "example": {
                    "type": "string",
                    "description": "The parameter example.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where this parameter is located.\n"
                },
                "maximum": {
                    "type": "integer",
                    "description": "The maximum value or length (string parameter) for parameter.\n"
                },
                "minimum": {
                    "type": "integer",
                    "description": "The minimum value or length (string parameter) for parameter.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request parameter.\n"
                },
                "orchestrations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of orchestration rules that parameter used.\n"
                },
                "passthrough": {
                    "type": "boolean",
                    "description": "Whether to transparently transfer the parameter.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether this parameter is required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "validEnable": {
                    "type": "integer",
                    "description": "Whether to enable the parameter validation.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "default",
                        "description",
                        "enumeration",
                        "example",
                        "maximum",
                        "minimum",
                        "name",
                        "passthrough",
                        "required",
                        "validEnable"
                    ]
                }
            }
        },
        "sbercloud:index/ApiGatewayApiWeb:ApiGatewayApiWeb": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address, which consists of a domain name or IP address, and a port number.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request path.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The web protocol type of the API request.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "sbercloud:index/ApiGatewayApiWebPolicy:ApiGatewayApiWebPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiWebPolicyBackendParam:ApiGatewayApiWebPolicyBackendParam"
                    },
                    "description": "The configuration list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiWebPolicyCondition:ApiGatewayApiWebPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web policy.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request address.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The backend request protocol.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name",
                "path",
                "requestMethod"
            ]
        },
        "sbercloud:index/ApiGatewayApiWebPolicyBackendParam:ApiGatewayApiWebPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApiGatewayApiWebPolicyCondition:ApiGatewayApiWebPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "sbercloud:index/ApiGatewayGroupEnvironment:ApiGatewayGroupEnvironment": {
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment to which the variables belongs.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayGroupEnvironmentVariable:ApiGatewayGroupEnvironmentVariable"
                    },
                    "description": "The array of one or more environment variables.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "variables"
            ]
        },
        "sbercloud:index/ApiGatewayGroupEnvironmentVariable:ApiGatewayGroupEnvironmentVariable": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the variable that the group has.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The variable name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The variable value.\n"
                },
                "variableId": {
                    "type": "string",
                    "description": "schema: Deprecated; The ID of the variable that the group has.\n",
                    "deprecationMessage": "Use 'id' instead"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "value",
                        "variableId"
                    ]
                }
            }
        },
        "sbercloud:index/ApiGatewayGroupUrlDomain:ApiGatewayGroupUrlDomain": {
            "properties": {
                "isHttpRedirectToHttps": {
                    "type": "boolean"
                },
                "minSslVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isHttpRedirectToHttps",
                        "minSslVersion",
                        "name"
                    ]
                }
            }
        },
        "sbercloud:index/ApigApiBackendParam:ApigApiBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApigApiFuncGraph:ApigApiFuncGraph": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation type.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "functionUrn"
            ]
        },
        "sbercloud:index/ApigApiFuncGraphPolicy:ApigApiFuncGraphPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiFuncGraphPolicyBackendParam:ApigApiFuncGraphPolicyBackendParam"
                    },
                    "description": "The configaiton list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiFuncGraphPolicyCondition:ApigApiFuncGraphPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationMode": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend policy.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "functionUrn",
                "name"
            ]
        },
        "sbercloud:index/ApigApiFuncGraphPolicyBackendParam:ApigApiFuncGraphPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApigApiFuncGraphPolicyCondition:ApigApiFuncGraphPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "sbercloud:index/ApigApiMock:ApigApiMock": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "statusCode"
                    ]
                }
            }
        },
        "sbercloud:index/ApigApiMockPolicy:ApigApiMockPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiMockPolicyBackendParam:ApigApiMockPolicyBackendParam"
                    },
                    "description": "The configuration list of backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiMockPolicyCondition:ApigApiMockPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The backend policy name.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditions",
                        "name",
                        "statusCode"
                    ]
                }
            }
        },
        "sbercloud:index/ApigApiMockPolicyBackendParam:ApigApiMockPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApigApiMockPolicyCondition:ApigApiMockPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "sbercloud:index/ApigApiPublishmentHistory:ApigApiPublishmentHistory": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The version description of the API publishment.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the API publishment.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "versionId"
                    ]
                }
            }
        },
        "sbercloud:index/ApigApiRequestParam:ApigApiRequestParam": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default value of the parameter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The parameter description.\n"
                },
                "enumeration": {
                    "type": "string",
                    "description": "The enumerated value.\n"
                },
                "example": {
                    "type": "string",
                    "description": "The parameter example.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where this parameter is located.\n"
                },
                "maximum": {
                    "type": "integer",
                    "description": "The maximum value or length (string parameter) for parameter.\n"
                },
                "minimum": {
                    "type": "integer",
                    "description": "The minimum value or length (string parameter) for parameter.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request parameter.\n"
                },
                "orchestrations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of orchestration rules that parameter used.\n"
                },
                "passthrough": {
                    "type": "boolean",
                    "description": "Whether to transparently transfer the parameter.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether this parameter is required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "validEnable": {
                    "type": "integer",
                    "description": "Whether to enable the parameter validation.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "default",
                        "description",
                        "enumeration",
                        "example",
                        "maximum",
                        "minimum",
                        "name",
                        "passthrough",
                        "required",
                        "validEnable"
                    ]
                }
            }
        },
        "sbercloud:index/ApigApiWeb:ApigApiWeb": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address, which consists of a domain name or IP address, and a port number.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request path.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The web protocol type of the API request.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "sbercloud:index/ApigApiWebPolicy:ApigApiWebPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiWebPolicyBackendParam:ApigApiWebPolicyBackendParam"
                    },
                    "description": "The configuration list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiWebPolicyCondition:ApigApiWebPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web policy.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request address.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The backend request protocol.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name",
                "path",
                "requestMethod"
            ]
        },
        "sbercloud:index/ApigApiWebPolicyBackendParam:ApigApiWebPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "sbercloud:index/ApigApiWebPolicyCondition:ApigApiWebPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "sbercloud:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication": {
            "properties": {
                "bindTime": {
                    "type": "string",
                    "description": "The binding time, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The application ID bound to the application quota.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindTime",
                        "id"
                    ]
                }
            }
        },
        "sbercloud:index/ApigChannelHealthCheck:ApigChannelHealthCheck": {
            "properties": {
                "enableClientSsl": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "httpCodes": {
                    "type": "string",
                    "description": "The response codes for determining a successful HTTP response.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between consecutive check, in second.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The request method for health check.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The destination path for health check.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The destination host port for health check.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The rotocol for performing health check on backend servers.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of health check.\n"
                },
                "thresholdAbnormal": {
                    "type": "integer",
                    "description": "The unhealthy threshold, which refers to the number of consecutive failed check required for a backend server to be considered unhealthy.\n"
                },
                "thresholdNormal": {
                    "type": "integer",
                    "description": "The the healthy threshold, which refers to the number of consecutive successful checks required for a backend server to be considered healthy.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for determining whether a health check fails, in second.\n"
                }
            },
            "type": "object",
            "required": [
                "interval",
                "protocol",
                "thresholdAbnormal",
                "thresholdNormal",
                "timeout"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enableClientSsl",
                        "httpCodes",
                        "interval",
                        "method",
                        "path",
                        "port",
                        "protocol",
                        "status",
                        "thresholdAbnormal",
                        "thresholdNormal",
                        "timeout"
                    ]
                }
            }
        },
        "sbercloud:index/ApigChannelMember:ApigChannelMember": {
            "properties": {
                "groupName": {
                    "type": "string",
                    "description": "The group name of the backend server.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The IP address of the backend server.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend server.\n"
                },
                "isBackup": {
                    "type": "boolean",
                    "description": "Whether this member is the backup member.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend server.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the backend server.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of the backend server.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of current backend server.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "groupName",
                        "host",
                        "id",
                        "isBackup",
                        "name",
                        "port",
                        "status",
                        "weight"
                    ]
                }
            }
        },
        "sbercloud:index/ApigChannelMemberGroup:ApigChannelMemberGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the member group.\n"
                },
                "microserviceLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The microservice tags of the backend server group.\n"
                },
                "microservicePort": {
                    "type": "integer",
                    "description": "The microservice port of the backend server group.\n"
                },
                "microserviceVersion": {
                    "type": "string",
                    "description": "The microservice version of the backend server group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the member group.\n"
                },
                "referenceVpcChannelId": {
                    "type": "string",
                    "description": "The ID of the reference load balance channel.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the current member group.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "microserviceLabels",
                        "microservicePort",
                        "microserviceVersion",
                        "name",
                        "referenceVpcChannelId",
                        "weight"
                    ]
                }
            }
        },
        "sbercloud:index/ApigChannelMicroservice:ApigChannelMicroservice": {
            "properties": {
                "cceConfig": {
                    "$ref": "#/types/sbercloud:index/ApigChannelMicroserviceCceConfig:ApigChannelMicroserviceCceConfig",
                    "description": "The CCE microservice details.\n"
                },
                "cseConfig": {
                    "$ref": "#/types/sbercloud:index/ApigChannelMicroserviceCseConfig:ApigChannelMicroserviceCseConfig",
                    "description": "schema:Internal; The CSE microservice details.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cceConfig",
                        "cseConfig"
                    ]
                }
            }
        },
        "sbercloud:index/ApigChannelMicroserviceCceConfig:ApigChannelMicroserviceCceConfig": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the CCE cluster.\n"
                },
                "labelKey": {
                    "type": "string",
                    "description": "The service label key.\n"
                },
                "labelValue": {
                    "type": "string",
                    "description": "The service label value.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The name of the CCE namespace.\n"
                },
                "workloadName": {
                    "type": "string",
                    "description": "The workload name.\n"
                },
                "workloadType": {
                    "type": "string",
                    "description": "The workload type.\n"
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "namespace",
                "workloadType"
            ]
        },
        "sbercloud:index/ApigChannelMicroserviceCseConfig:ApigChannelMicroserviceCseConfig": {
            "properties": {
                "engineId": {
                    "type": "string",
                    "description": "schema:Internal; The microservice engine ID.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "schema:Internal; The microservice ID.\n"
                }
            },
            "type": "object",
            "required": [
                "engineId",
                "serviceId"
            ]
        },
        "sbercloud:index/ApigCustomAuthorizerIdentity:ApigCustomAuthorizerIdentity": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The parameter location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the parameter to be verified.\n"
                },
                "validation": {
                    "type": "string",
                    "description": "The parameter verification expression.\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name"
            ]
        },
        "sbercloud:index/ApigGroupEnvironment:ApigGroupEnvironment": {
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment to which the variables belongs.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigGroupEnvironmentVariable:ApigGroupEnvironmentVariable"
                    },
                    "description": "The array of one or more environment variables.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "variables"
            ]
        },
        "sbercloud:index/ApigGroupEnvironmentVariable:ApigGroupEnvironmentVariable": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the variable that the group has.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The variable name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The variable value.\n"
                },
                "variableId": {
                    "type": "string",
                    "description": "schema: Deprecated; The ID of the variable that the group has.\n",
                    "deprecationMessage": "Use 'id' instead"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "value",
                        "variableId"
                    ]
                }
            }
        },
        "sbercloud:index/ApigGroupUrlDomain:ApigGroupUrlDomain": {
            "properties": {
                "isHttpRedirectToHttps": {
                    "type": "boolean"
                },
                "minSslVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isHttpRedirectToHttps",
                        "minSslVersion",
                        "name"
                    ]
                }
            }
        },
        "sbercloud:index/ApigInstanceCustomIngressPort:ApigInstanceCustomIngressPort": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the custom ingress port.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Specified port of the custom ingress port.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Specified protocol of the custom ingress port.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the custom ingress port.\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "port",
                        "protocol",
                        "status"
                    ]
                }
            }
        },
        "sbercloud:index/ApigResponseRule:ApigResponseRule": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body template of the API custom response rule.\n"
                },
                "errorType": {
                    "type": "string",
                    "description": "The error type of the API custom response rule.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigResponseRuleHeader:ApigResponseRuleHeader"
                    },
                    "description": "The configuration of the custom response headers.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The HTTP status code of the API custom response rule.\n"
                }
            },
            "type": "object",
            "required": [
                "body",
                "errorType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "body",
                        "errorType",
                        "statusCode"
                    ]
                }
            }
        },
        "sbercloud:index/ApigResponseRuleHeader:ApigResponseRuleHeader": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the response header.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value for the specified response header key.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "sbercloud:index/ApigThrottlingPolicyAppThrottle:ApigThrottlingPolicyAppThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "maxApiRequests",
                "throttlingObjectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "maxApiRequests",
                        "throttlingObjectId",
                        "throttlingObjectName"
                    ]
                }
            }
        },
        "sbercloud:index/ApigThrottlingPolicyUserThrottle:ApigThrottlingPolicyUserThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "maxApiRequests",
                "throttlingObjectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "maxApiRequests",
                        "throttlingObjectId",
                        "throttlingObjectName"
                    ]
                }
            }
        },
        "sbercloud:index/AsBandwidthPolicyScalingPolicyAction:AsBandwidthPolicyScalingPolicyAction": {
            "properties": {
                "limits": {
                    "type": "integer",
                    "description": "Specifies the operation restrictions.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "Specifies the operation to be performed. The default operation is ADD.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Specifies the bandwidth (Mbit/s).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "limits",
                        "operation",
                        "size"
                    ]
                }
            }
        },
        "sbercloud:index/AsBandwidthPolicyScheduledPolicy:AsBandwidthPolicyScheduledPolicy": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "Specifies the end time of the scaling action triggered periodically.\n"
                },
                "launchTime": {
                    "type": "string",
                    "description": "Specifies the time when the scaling action is triggered. The time format complies with UTC.\n"
                },
                "recurrenceType": {
                    "type": "string",
                    "description": "Specifies the periodic triggering type.\n"
                },
                "recurrenceValue": {
                    "type": "string",
                    "description": "Specifies the day when a periodic scaling action is triggered.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "Specifies the start time of the scaling action triggered periodically.\n"
                }
            },
            "type": "object",
            "required": [
                "launchTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endTime",
                        "launchTime",
                        "recurrenceType",
                        "recurrenceValue",
                        "startTime"
                    ]
                }
            }
        },
        "sbercloud:index/AsConfigurationInstanceConfig:AsConfigurationInstanceConfig": {
            "properties": {
                "adminPass": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedHostId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfigDisk:AsConfigurationInstanceConfigDisk"
                    },
                    "willReplaceOnChanges": true
                },
                "ecsGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavorPriorityPolicy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "image": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keyName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "personalities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfigPersonality:AsConfigurationInstanceConfigPersonality"
                    },
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfigPublicIp:AsConfigurationInstanceConfigPublicIp",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "tenancy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dedicatedHostId",
                        "disks",
                        "ecsGroupId",
                        "flavor",
                        "flavorPriorityPolicy",
                        "image",
                        "instanceId",
                        "keyName",
                        "personalities",
                        "publicIp",
                        "securityGroupIds",
                        "tenancy"
                    ]
                }
            }
        },
        "sbercloud:index/AsConfigurationInstanceConfigDisk:AsConfigurationInstanceConfigDisk": {
            "properties": {
                "dataDiskImageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedStorageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "diskType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "snapshotId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "volumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "diskType",
                "size",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataDiskImageId",
                        "dedicatedStorageId",
                        "diskType",
                        "iops",
                        "kmsId",
                        "size",
                        "snapshotId",
                        "throughput",
                        "volumeType"
                    ]
                }
            }
        },
        "sbercloud:index/AsConfigurationInstanceConfigPersonality:AsConfigurationInstanceConfigPersonality": {
            "properties": {
                "content": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "path": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "content",
                "path"
            ]
        },
        "sbercloud:index/AsConfigurationInstanceConfigPublicIp:AsConfigurationInstanceConfigPublicIp": {
            "properties": {
                "eip": {
                    "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfigPublicIpEip:AsConfigurationInstanceConfigPublicIpEip",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "eip"
            ]
        },
        "sbercloud:index/AsConfigurationInstanceConfigPublicIpEip:AsConfigurationInstanceConfigPublicIpEip": {
            "properties": {
                "bandwidth": {
                    "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfigPublicIpEipBandwidth:AsConfigurationInstanceConfigPublicIpEipBandwidth",
                    "willReplaceOnChanges": true
                },
                "ipType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "ipType"
            ]
        },
        "sbercloud:index/AsConfigurationInstanceConfigPublicIpEipBandwidth:AsConfigurationInstanceConfigPublicIpEipBandwidth": {
            "properties": {
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "shareType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargingMode",
                        "id",
                        "shareType",
                        "size"
                    ]
                }
            }
        },
        "sbercloud:index/AsGroupLbaasListener:AsGroupLbaasListener": {
            "properties": {
                "poolId": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "protocolVersion": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "poolId",
                "protocolPort"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "poolId",
                        "protocolPort",
                        "protocolVersion"
                    ]
                }
            }
        },
        "sbercloud:index/AsGroupNetwork:AsGroupNetwork": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "sourceDestCheck": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "sbercloud:index/AsGroupSecurityGroup:AsGroupSecurityGroup": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "sbercloud:index/AsPolicyScalingPolicyAction:AsPolicyScalingPolicyAction": {
            "properties": {
                "instanceNumber": {
                    "type": "integer"
                },
                "instancePercentage": {
                    "type": "integer"
                },
                "operation": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "instanceNumber",
                        "operation"
                    ]
                }
            }
        },
        "sbercloud:index/AsPolicyScheduledPolicy:AsPolicyScheduledPolicy": {
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "launchTime": {
                    "type": "string"
                },
                "recurrenceType": {
                    "type": "string"
                },
                "recurrenceValue": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "launchTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endTime",
                        "launchTime",
                        "recurrenceType",
                        "recurrenceValue",
                        "startTime"
                    ]
                }
            }
        },
        "sbercloud:index/CbrBackupShareMember:CbrBackupShareMember": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the backup shared member.\n"
                },
                "destProjectId": {
                    "type": "string",
                    "description": "The ID of the project with which the backup is shared.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backup shared member record.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the image registered with the shared backup copy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The backup shared status.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the backup shared member.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the shared backup is stored.\n"
                }
            },
            "type": "object",
            "required": [
                "destProjectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "destProjectId",
                        "id",
                        "imageId",
                        "status",
                        "updatedAt",
                        "vaultId"
                    ]
                }
            }
        },
        "sbercloud:index/CbrCheckpointBackup:CbrCheckpointBackup": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The backup ID.\n"
                },
                "protectedAt": {
                    "type": "string",
                    "description": "The backup time.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of backup resource.\n",
                    "willReplaceOnChanges": true
                },
                "resourceSize": {
                    "type": "integer",
                    "description": "The backup resource size.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The backup status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the backup resource.\n",
                    "willReplaceOnChanges": true
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the backup.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "protectedAt",
                        "resourceId",
                        "resourceSize",
                        "status",
                        "type",
                        "updatedAt"
                    ]
                }
            }
        },
        "sbercloud:index/CbrPolicyBackupCycle:CbrPolicyBackupCycle": {
            "properties": {
                "days": {
                    "type": "string",
                    "description": "The weekly backup time.\n"
                },
                "executionTimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The execution time of the policy.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The number of days between each backup.\n"
                }
            },
            "type": "object",
            "required": [
                "executionTimes"
            ]
        },
        "sbercloud:index/CbrPolicyLongTermRetention:CbrPolicyLongTermRetention": {
            "properties": {
                "daily": {
                    "type": "integer",
                    "description": "The latest backup of each day is saved in the long term.\n"
                },
                "fullBackupInterval": {
                    "type": "integer",
                    "description": "How often (after how many incremental backups) a full backup is performed.\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "The latest backup of each month is saved in the long term.\n"
                },
                "weekly": {
                    "type": "integer",
                    "description": "The latest backup of each week is saved in the long term.\n"
                },
                "yearly": {
                    "type": "integer",
                    "description": "The latest backup of each year is saved in the long term.\n"
                }
            },
            "type": "object"
        },
        "sbercloud:index/CbrVaultPolicy:CbrVaultPolicy": {
            "properties": {
                "destinationVaultId": {
                    "type": "string",
                    "description": "The ID of destination vault to which the replication policy will associated.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The policy ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "sbercloud:index/CbrVaultResource:CbrVaultResource": {
            "properties": {
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk IDs which will be excluded in the backup.\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk or SFS file systems which will be included in the backup.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the ECS instance to be backed up.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "excludes",
                        "includes"
                    ]
                }
            }
        },
        "sbercloud:index/CceAddonValues:CceAddonValues": {
            "properties": {
                "basic": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "basicJson": {
                    "type": "string"
                },
                "custom": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "customJson": {
                    "type": "string"
                },
                "flavor": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "flavorJson": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceClusterCertificateCluster:CceClusterCertificateCluster": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateAuthorityData",
                        "name",
                        "server"
                    ]
                }
            }
        },
        "sbercloud:index/CceClusterCertificateUser:CceClusterCertificateUser": {
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientCertificateData",
                        "clientKeyData",
                        "name"
                    ]
                }
            }
        },
        "sbercloud:index/CceClusterComponentConfiguration:CceClusterComponentConfiguration": {
            "properties": {
                "configurations": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "sbercloud:index/CceClusterExtendParam:CceClusterExtendParam": {
            "properties": {
                "clusterAz": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "decMasterFlavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dockerUmaskMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dssMasterVolumes": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "fixPoolMask": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceClusterMaster:CceClusterMaster": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone"
                    ]
                }
            }
        },
        "sbercloud:index/CceNodeAttachDataVolume:CceNodeAttachDataVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParam",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "sbercloud:index/CceNodeAttachHostnameConfig:CceNodeAttachHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "sbercloud:index/CceNodeAttachRootVolume:CceNodeAttachRootVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParam",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "sbercloud:index/CceNodeAttachStorage:CceNodeAttachStorage": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachStorageGroup:CceNodeAttachStorageGroup"
                    }
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachStorageSelector:CceNodeAttachStorageSelector"
                    }
                }
            },
            "type": "object",
            "required": [
                "groups",
                "selectors"
            ]
        },
        "sbercloud:index/CceNodeAttachStorageGroup:CceNodeAttachStorageGroup": {
            "properties": {
                "cceManaged": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "selectorNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualSpaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachStorageGroupVirtualSpace:CceNodeAttachStorageGroupVirtualSpace"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "selectorNames",
                "virtualSpaces"
            ]
        },
        "sbercloud:index/CceNodeAttachStorageGroupVirtualSpace:CceNodeAttachStorageGroupVirtualSpace": {
            "properties": {
                "lvmLvType": {
                    "type": "string"
                },
                "lvmPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "runtimeLvType": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ]
        },
        "sbercloud:index/CceNodeAttachStorageSelector:CceNodeAttachStorageSelector": {
            "properties": {
                "matchLabelCount": {
                    "type": "string"
                },
                "matchLabelMetadataCmkid": {
                    "type": "string"
                },
                "matchLabelMetadataEncrypted": {
                    "type": "string"
                },
                "matchLabelSize": {
                    "type": "string"
                },
                "matchLabelVolumeType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "sbercloud:index/CceNodeAttachTaint:CceNodeAttachTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "sbercloud:index/CceNodeDataVolume:CceNodeDataVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "volumetype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "sbercloud:index/CceNodeExtendParams:CceNodeExtendParams": {
            "properties": {
                "agencyName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dockerBaseSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kubeReservedMem": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "marketType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maxPods": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "nicThreshold": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nodeImageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nodeMultiQueue": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "postinstall": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "preinstall": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityReinforcementType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "spotPrice": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "systemReservedMem": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceNodeExtensionNic:CceNodeExtensionNic": {
            "properties": {
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "subnetId"
            ]
        },
        "sbercloud:index/CceNodeHostnameConfig:CceNodeHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "sbercloud:index/CceNodePoolDataVolume:CceNodePoolDataVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "volumetype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "sbercloud:index/CceNodePoolExtendParams:CceNodePoolExtendParams": {
            "properties": {
                "agencyName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dockerBaseSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kubeReservedMem": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "marketType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maxPods": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "nicThreshold": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nodeImageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nodeMultiQueue": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "postinstall": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "preinstall": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityReinforcementType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "spotPrice": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "systemReservedMem": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceNodePoolExtensionScaleGroup:CceNodePoolExtensionScaleGroup": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolExtensionScaleGroupMetadata:CceNodePoolExtensionScaleGroupMetadata"
                },
                "spec": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolExtensionScaleGroupSpec:CceNodePoolExtensionScaleGroupSpec"
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceNodePoolExtensionScaleGroupMetadata:CceNodePoolExtensionScaleGroupMetadata": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceNodePoolExtensionScaleGroupSpec:CceNodePoolExtensionScaleGroupSpec": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolExtensionScaleGroupSpecAutoscaling:CceNodePoolExtensionScaleGroupSpecAutoscaling"
                },
                "az": {
                    "type": "string"
                },
                "capacityReservationSpecification": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification:CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification"
                },
                "flavor": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceNodePoolExtensionScaleGroupSpecAutoscaling:CceNodePoolExtensionScaleGroupSpecAutoscaling": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "extensionPriority": {
                    "type": "integer"
                },
                "maxNodeCount": {
                    "type": "integer"
                },
                "minNodeCount": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification:CceNodePoolExtensionScaleGroupSpecCapacityReservationSpecification": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "preference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "sbercloud:index/CceNodePoolHostnameConfig:CceNodePoolHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "sbercloud:index/CceNodePoolRootVolume:CceNodePoolRootVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "volumetype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "sbercloud:index/CceNodePoolStorage:CceNodePoolStorage": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolStorageGroup:CceNodePoolStorageGroup"
                    },
                    "willReplaceOnChanges": true
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolStorageSelector:CceNodePoolStorageSelector"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "groups",
                "selectors"
            ]
        },
        "sbercloud:index/CceNodePoolStorageGroup:CceNodePoolStorageGroup": {
            "properties": {
                "cceManaged": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "selectorNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "virtualSpaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolStorageGroupVirtualSpace:CceNodePoolStorageGroupVirtualSpace"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "selectorNames",
                "virtualSpaces"
            ]
        },
        "sbercloud:index/CceNodePoolStorageGroupVirtualSpace:CceNodePoolStorageGroupVirtualSpace": {
            "properties": {
                "lvmLvType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "lvmPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "runtimeLvType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ]
        },
        "sbercloud:index/CceNodePoolStorageSelector:CceNodePoolStorageSelector": {
            "properties": {
                "matchLabelCount": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelMetadataCmkid": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelMetadataEncrypted": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelSize": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "sbercloud:index/CceNodePoolTaint:CceNodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "sbercloud:index/CceNodeRootVolume:CceNodeRootVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "volumetype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "sbercloud:index/CceNodeStorage:CceNodeStorage": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeStorageGroup:CceNodeStorageGroup"
                    },
                    "willReplaceOnChanges": true
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeStorageSelector:CceNodeStorageSelector"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "groups",
                "selectors"
            ]
        },
        "sbercloud:index/CceNodeStorageGroup:CceNodeStorageGroup": {
            "properties": {
                "cceManaged": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "selectorNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "virtualSpaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeStorageGroupVirtualSpace:CceNodeStorageGroupVirtualSpace"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "selectorNames",
                "virtualSpaces"
            ]
        },
        "sbercloud:index/CceNodeStorageGroupVirtualSpace:CceNodeStorageGroupVirtualSpace": {
            "properties": {
                "lvmLvType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "lvmPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "runtimeLvType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ]
        },
        "sbercloud:index/CceNodeStorageSelector:CceNodeStorageSelector": {
            "properties": {
                "matchLabelCount": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelMetadataCmkid": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelMetadataEncrypted": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelSize": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "matchLabelVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "sbercloud:index/CceNodeTaint:CceNodeTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "key": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key"
            ]
        },
        "sbercloud:index/CdmClusterInstance:CdmClusterInstance": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "manageIp": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "trafficIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "manageIp",
                        "name",
                        "privateIp",
                        "publicIp",
                        "role",
                        "trafficIp",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/CesAlarmruleAlarmAction:CesAlarmruleAlarmAction": {
            "properties": {
                "notificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "notificationLists",
                "type"
            ]
        },
        "sbercloud:index/CesAlarmruleCondition:CesAlarmruleCondition": {
            "properties": {
                "comparisonOperator": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "filter": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "suppressDuration": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "unit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "comparisonOperator",
                "count",
                "filter",
                "period",
                "value"
            ]
        },
        "sbercloud:index/CesAlarmruleInsufficientdataAction:CesAlarmruleInsufficientdataAction": {
            "properties": {
                "notificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "notificationLists",
                "type"
            ]
        },
        "sbercloud:index/CesAlarmruleMetric:CesAlarmruleMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleMetricDimension:CesAlarmruleMetricDimension"
                    },
                    "willReplaceOnChanges": true
                },
                "metricName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "namespace": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace"
            ]
        },
        "sbercloud:index/CesAlarmruleMetricDimension:CesAlarmruleMetricDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "sbercloud:index/CesAlarmruleOkAction:CesAlarmruleOkAction": {
            "properties": {
                "notificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "notificationLists",
                "type"
            ]
        },
        "sbercloud:index/ComputeInstanceBandwidth:ComputeInstanceBandwidth": {
            "properties": {
                "chargeMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "shareType"
            ]
        },
        "sbercloud:index/ComputeInstanceDataDisk:ComputeInstanceDataDisk": {
            "properties": {
                "dssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "snapshotId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "type"
            ]
        },
        "sbercloud:index/ComputeInstanceNetwork:ComputeInstanceNetwork": {
            "properties": {
                "accessNetwork": {
                    "type": "boolean"
                },
                "fixedIpV4": {
                    "type": "string"
                },
                "fixedIpV6": {
                    "type": "string",
                    "description": "schema: Computed\n",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "mac": {
                    "type": "string"
                },
                "port": {
                    "type": "string",
                    "description": "schema: Computed\n",
                    "willReplaceOnChanges": true
                },
                "sourceDestCheck": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string",
                    "description": "schema: Required\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fixedIpV4",
                        "fixedIpV6",
                        "mac",
                        "port",
                        "uuid"
                    ]
                }
            }
        },
        "sbercloud:index/ComputeInstanceSchedulerHint:ComputeInstanceSchedulerHint": {
            "properties": {
                "dehId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "faultDomain": {
                    "type": "string",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenancy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "group"
                    ]
                }
            }
        },
        "sbercloud:index/ComputeInstanceVolumeAttached:ComputeInstanceVolumeAttached": {
            "properties": {
                "bootIndex": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "pciAddress": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootIndex",
                        "kmsKeyId",
                        "pciAddress",
                        "size",
                        "type",
                        "volumeId"
                    ]
                }
            }
        },
        "sbercloud:index/CssClusterBackupStrategy:CssClusterBackupStrategy": {
            "properties": {
                "agency": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "keepDays": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "agency",
                        "backupPath",
                        "bucket",
                        "startTime"
                    ]
                }
            }
        },
        "sbercloud:index/CssClusterNode:CssClusterNode": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/CssClusterNodeConfig:CssClusterNodeConfig": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "networkInfo": {
                    "$ref": "#/types/sbercloud:index/CssClusterNodeConfigNetworkInfo:CssClusterNodeConfigNetworkInfo",
                    "willReplaceOnChanges": true
                },
                "volume": {
                    "$ref": "#/types/sbercloud:index/CssClusterNodeConfigVolume:CssClusterNodeConfigVolume",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "flavor",
                "networkInfo",
                "volume"
            ]
        },
        "sbercloud:index/CssClusterNodeConfigNetworkInfo:CssClusterNodeConfigNetworkInfo": {
            "properties": {
                "securityGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "securityGroupId",
                "subnetId",
                "vpcId"
            ]
        },
        "sbercloud:index/CssClusterNodeConfigVolume:CssClusterNodeConfigVolume": {
            "properties": {
                "size": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumeType"
            ]
        },
        "sbercloud:index/CtsNotificationFilter:CtsNotificationFilter": {
            "properties": {
                "condition": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "condition",
                "rules"
            ]
        },
        "sbercloud:index/CtsNotificationOperation:CtsNotificationOperation": {
            "properties": {
                "resource": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "traceNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "resource",
                "service",
                "traceNames"
            ]
        },
        "sbercloud:index/CtsNotificationOperationUser:CtsNotificationOperationUser": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "group",
                "users"
            ]
        },
        "sbercloud:index/DcsInstanceBackupPolicy:DcsInstanceBackupPolicy": {
            "properties": {
                "backupAts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "backupType": {
                    "type": "string"
                },
                "beginAt": {
                    "type": "string"
                },
                "periodType": {
                    "type": "string"
                },
                "saveDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "backupAts",
                "beginAt"
            ]
        },
        "sbercloud:index/DcsInstanceBandwidthInfo:DcsInstanceBandwidthInfo": {
            "properties": {
                "bandwidth": {
                    "type": "integer"
                },
                "beginTime": {
                    "type": "string"
                },
                "currentTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "expandCount": {
                    "type": "integer"
                },
                "expandEffectTime": {
                    "type": "integer"
                },
                "expandIntervalTime": {
                    "type": "integer"
                },
                "maxExpandCount": {
                    "type": "integer"
                },
                "nextExpandTime": {
                    "type": "string"
                },
                "taskRunning": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidth",
                        "beginTime",
                        "currentTime",
                        "endTime",
                        "expandCount",
                        "expandEffectTime",
                        "expandIntervalTime",
                        "maxExpandCount",
                        "nextExpandTime",
                        "taskRunning"
                    ]
                }
            }
        },
        "sbercloud:index/DcsInstanceParameter:DcsInstanceParameter": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "value"
            ]
        },
        "sbercloud:index/DcsInstanceWhitelist:DcsInstanceWhitelist": {
            "properties": {
                "groupName": {
                    "type": "string"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "groupName",
                "ipAddresses"
            ]
        },
        "sbercloud:index/DcsParametersConfigurationParameter:DcsParametersConfigurationParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "needRestart": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "userPermission": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "needRestart",
                        "type",
                        "userPermission",
                        "value"
                    ]
                }
            }
        },
        "sbercloud:index/DcsRestoreRestoreRecord:DcsRestoreRestoreRecord": {
            "properties": {
                "backupId": {
                    "type": "string"
                },
                "backupName": {
                    "type": "string"
                },
                "backupRemark": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "restoreId": {
                    "type": "string"
                },
                "restoreName": {
                    "type": "string"
                },
                "restoreRemark": {
                    "type": "string"
                },
                "sourceInstanceId": {
                    "type": "string"
                },
                "sourceInstanceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "backupId",
                        "backupName",
                        "backupRemark",
                        "createdAt",
                        "errorCode",
                        "progress",
                        "restoreId",
                        "restoreName",
                        "restoreRemark",
                        "sourceInstanceId",
                        "sourceInstanceName",
                        "status",
                        "updatedAt"
                    ]
                }
            }
        },
        "sbercloud:index/DdsInstanceBackupStrategy:DdsInstanceBackupStrategy": {
            "properties": {
                "keepDays": {
                    "type": "integer"
                },
                "period": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "keepDays",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepDays",
                        "period",
                        "startTime"
                    ]
                }
            }
        },
        "sbercloud:index/DdsInstanceConfiguration:DdsInstanceConfiguration": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ]
        },
        "sbercloud:index/DdsInstanceDatastore:DdsInstanceDatastore": {
            "properties": {
                "storageEngine": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ]
        },
        "sbercloud:index/DdsInstanceFlavor:DdsInstanceFlavor": {
            "properties": {
                "num": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "specCode": {
                    "type": "string"
                },
                "storage": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "num",
                "specCode",
                "type"
            ]
        },
        "sbercloud:index/DdsInstanceGroup:DdsInstanceGroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceGroupNode:DdsInstanceGroupNode"
                    }
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "used": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "nodes",
                        "size",
                        "status",
                        "type",
                        "used"
                    ]
                }
            }
        },
        "sbercloud:index/DdsInstanceGroupNode:DdsInstanceGroupNode": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Indicates the node ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the node name.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP address of a node.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Indicates the EIP that has been bound on a node.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the node role.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the node status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the node type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "privateIp",
                        "publicIp",
                        "role",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/DdsInstanceNode:DdsInstanceNode": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Indicates the node ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the node name.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP address of a node.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Indicates the EIP that has been bound on a node.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the node role.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the node status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the node type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "privateIp",
                        "publicIp",
                        "role",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/DisStreamPartition:DisStreamPartition": {
            "properties": {
                "hashRange": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sequenceNumberRange": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hashRange",
                        "id",
                        "sequenceNumberRange",
                        "status"
                    ]
                }
            }
        },
        "sbercloud:index/DliQueueScalingPolicy:DliQueueScalingPolicy": {
            "properties": {
                "impactStartTime": {
                    "type": "string"
                },
                "impactStopTime": {
                    "type": "string"
                },
                "maxCu": {
                    "type": "integer"
                },
                "minCu": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "impactStartTime",
                "impactStopTime",
                "maxCu",
                "minCu",
                "priority"
            ]
        },
        "sbercloud:index/DliQueueSparkDriver:DliQueueSparkDriver": {
            "properties": {
                "maxConcurrent": {
                    "type": "integer"
                },
                "maxInstance": {
                    "type": "integer"
                },
                "maxPrefetchInstance": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "sbercloud:index/DliSparkJobDependentPackage:DliSparkJobDependentPackage": {
            "properties": {
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DliSparkJobDependentPackagePackage:DliSparkJobDependentPackagePackage"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "groupName",
                "packages"
            ]
        },
        "sbercloud:index/DliSparkJobDependentPackagePackage:DliSparkJobDependentPackagePackage": {
            "properties": {
                "packageName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "packageName",
                "type"
            ]
        },
        "sbercloud:index/DmsKafkaInstanceCrossVpcAccess:DmsKafkaInstanceCrossVpcAccess": {
            "properties": {
                "advertisedIp": {
                    "type": "string"
                },
                "lisenterIp": {
                    "type": "string",
                    "deprecationMessage": "typo in lisenter_ip, please use \"listener_ip\" instead."
                },
                "listenerIp": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "advertisedIp",
                        "lisenterIp",
                        "listenerIp",
                        "port",
                        "portId"
                    ]
                }
            }
        },
        "sbercloud:index/DmsKafkaInstanceParameter:DmsKafkaInstanceParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "sbercloud:index/DmsKafkaInstancePortProtocol:DmsKafkaInstancePortProtocol": {
            "properties": {
                "privatePlainAddress": {
                    "type": "string"
                },
                "privatePlainDomainName": {
                    "type": "string"
                },
                "privatePlainEnable": {
                    "type": "boolean"
                },
                "privateSaslPlaintextAddress": {
                    "type": "string"
                },
                "privateSaslPlaintextDomainName": {
                    "type": "string"
                },
                "privateSaslPlaintextEnable": {
                    "type": "boolean"
                },
                "privateSaslSslAddress": {
                    "type": "string"
                },
                "privateSaslSslDomainName": {
                    "type": "string"
                },
                "privateSaslSslEnable": {
                    "type": "boolean"
                },
                "publicPlainAddress": {
                    "type": "string"
                },
                "publicPlainDomainName": {
                    "type": "string"
                },
                "publicPlainEnable": {
                    "type": "boolean"
                },
                "publicSaslPlaintextAddress": {
                    "type": "string"
                },
                "publicSaslPlaintextDomainName": {
                    "type": "string"
                },
                "publicSaslPlaintextEnable": {
                    "type": "boolean"
                },
                "publicSaslSslAddress": {
                    "type": "string"
                },
                "publicSaslSslDomainName": {
                    "type": "string"
                },
                "publicSaslSslEnable": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "privatePlainAddress",
                        "privatePlainDomainName",
                        "privatePlainEnable",
                        "privateSaslPlaintextAddress",
                        "privateSaslPlaintextDomainName",
                        "privateSaslPlaintextEnable",
                        "privateSaslSslAddress",
                        "privateSaslSslDomainName",
                        "privateSaslSslEnable",
                        "publicPlainAddress",
                        "publicPlainDomainName",
                        "publicPlainEnable",
                        "publicSaslPlaintextAddress",
                        "publicSaslPlaintextDomainName",
                        "publicSaslPlaintextEnable",
                        "publicSaslSslAddress",
                        "publicSaslSslDomainName",
                        "publicSaslSslEnable"
                    ]
                }
            }
        },
        "sbercloud:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList": {
            "properties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "sbercloud:index/DmsKafkaPermissionsPolicy:DmsKafkaPermissionsPolicy": {
            "properties": {
                "accessPolicy": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessPolicy",
                "userName"
            ]
        },
        "sbercloud:index/DmsKafkaTopicConfig:DmsKafkaTopicConfig": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "sbercloud:index/DnsZoneRouter:DnsZoneRouter": {
            "properties": {
                "routerId": {
                    "type": "string",
                    "description": "The ID of the associated VPC.\n"
                },
                "routerRegion": {
                    "type": "string",
                    "description": "The region of the VPC.\n"
                }
            },
            "type": "object",
            "required": [
                "routerId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "routerId",
                        "routerRegion"
                    ]
                }
            }
        },
        "sbercloud:index/DrsJobDestinationDb:DrsJobDestinationDb": {
            "properties": {
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertCheckSum": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertPassword": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslEnabled": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "engineType",
                "ip",
                "password",
                "port",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "engineType",
                        "ip",
                        "name",
                        "password",
                        "port",
                        "region",
                        "user"
                    ]
                }
            }
        },
        "sbercloud:index/DrsJobLimitSpeed:DrsJobLimitSpeed": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "speed": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "startTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "speed",
                "startTime"
            ]
        },
        "sbercloud:index/DrsJobSourceDb:DrsJobSourceDb": {
            "properties": {
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertCheckSum": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertPassword": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslEnabled": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "engineType",
                "ip",
                "password",
                "port",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "engineType",
                        "ip",
                        "name",
                        "password",
                        "port",
                        "region",
                        "user"
                    ]
                }
            }
        },
        "sbercloud:index/DwsClusterElb:DwsClusterElb": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the ELB load balancer.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ELB load balancer.\n"
                },
                "privateEndpoint": {
                    "type": "string",
                    "description": "The private endpoint of the ELB load balancer.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP address of the ELB load balancer.\n"
                },
                "privateIpV6": {
                    "type": "string",
                    "description": "The IPv6 address of the ELB load balancer.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "The public IP address of the ELB load balancer.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of VPC to which the ELB load balancer belongs.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "privateEndpoint",
                        "privateIp",
                        "privateIpV6",
                        "publicIp",
                        "vpcId"
                    ]
                }
            }
        },
        "sbercloud:index/DwsClusterEndpoint:DwsClusterEndpoint": {
            "properties": {
                "connectInfo": {
                    "type": "string",
                    "description": "Private network connection information.\n"
                },
                "jdbcUrl": {
                    "type": "string",
                    "description": "JDBC URL. Format: jdbc:postgresql://\u003cconnect_info\u003e/\u003cYOUR_DATABASE_NAME\u003e\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connectInfo",
                        "jdbcUrl"
                    ]
                }
            }
        },
        "sbercloud:index/DwsClusterMaintainWindow:DwsClusterMaintainWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Maintenance time in each week in the unit of day.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "Maintenance end time in HH:mm format. The time zone is GMT+0.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "Maintenance start time in HH:mm format. The time zone is GMT+0.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "day",
                        "endTime",
                        "startTime"
                    ]
                }
            }
        },
        "sbercloud:index/DwsClusterPublicEndpoint:DwsClusterPublicEndpoint": {
            "properties": {
                "jdbcUrl": {
                    "type": "string",
                    "description": "JDBC URL. Format: jdbc:postgresql://\u003cpublic_connect_info\u003e/\u003cYOUR_DATABASE_NAME\u003e\n"
                },
                "publicConnectInfo": {
                    "type": "string",
                    "description": "Public network connection information.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "jdbcUrl",
                        "publicConnectInfo"
                    ]
                }
            }
        },
        "sbercloud:index/DwsClusterPublicIp:DwsClusterPublicIp": {
            "properties": {
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID.\n"
                },
                "publicBindType": {
                    "type": "string",
                    "description": "The bind type of public IP.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "publicBindType"
                    ]
                }
            }
        },
        "sbercloud:index/DwsClusterVolume:DwsClusterVolume": {
            "properties": {
                "capacity": {
                    "type": "string",
                    "description": "The capacity size, in GB.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The volume type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "capacity",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/ElbIpgroupIpList:ElbIpgroupIpList": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "sbercloud:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig": {
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "insertHeadersConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfigInsertHeadersConfig:ElbL7policyFixedResponseConfigInsertHeadersConfig"
                },
                "messageBody": {
                    "type": "string"
                },
                "removeHeadersConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfigRemoveHeadersConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfig"
                },
                "statusCode": {
                    "type": "string"
                },
                "trafficLimitConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfigTrafficLimitConfig:ElbL7policyFixedResponseConfigTrafficLimitConfig"
                }
            },
            "type": "object",
            "required": [
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "contentType",
                        "statusCode"
                    ]
                }
            }
        },
        "sbercloud:index/ElbL7policyFixedResponseConfigInsertHeadersConfig:ElbL7policyFixedResponseConfigInsertHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfigInsertHeadersConfigConfig:ElbL7policyFixedResponseConfigInsertHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "sbercloud:index/ElbL7policyFixedResponseConfigInsertHeadersConfigConfig:ElbL7policyFixedResponseConfigInsertHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value",
                "valueType"
            ]
        },
        "sbercloud:index/ElbL7policyFixedResponseConfigRemoveHeadersConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "sbercloud:index/ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "sbercloud:index/ElbL7policyFixedResponseConfigTrafficLimitConfig:ElbL7policyFixedResponseConfigTrafficLimitConfig": {
            "properties": {
                "burst": {
                    "type": "integer"
                },
                "perSourceIpQps": {
                    "type": "integer"
                },
                "qps": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "sbercloud:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig": {
            "properties": {
                "poolId": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "poolId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "poolId",
                        "weight"
                    ]
                }
            }
        },
        "sbercloud:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig": {
            "properties": {
                "insertHeadersConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig"
                },
                "removeHeadersConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig"
                },
                "rewriteUrlConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig:ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig"
                },
                "rewriteUrlEnabled": {
                    "type": "boolean"
                },
                "trafficLimitConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig:ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "rewriteUrlConfig",
                        "rewriteUrlEnabled"
                    ]
                }
            }
        },
        "sbercloud:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "sbercloud:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value",
                "valueType"
            ]
        },
        "sbercloud:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "sbercloud:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "sbercloud:index/ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig:ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "path"
                    ]
                }
            }
        },
        "sbercloud:index/ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig:ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig": {
            "properties": {
                "burst": {
                    "type": "integer"
                },
                "perSourceIpQps": {
                    "type": "integer"
                },
                "qps": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "sbercloud:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enable",
                        "timeout"
                    ]
                }
            }
        },
        "sbercloud:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "insertHeadersConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectUrlConfigInsertHeadersConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfig"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "removeHeadersConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfig"
                },
                "statusCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "path",
                        "port",
                        "protocol",
                        "statusCode"
                    ]
                }
            }
        },
        "sbercloud:index/ElbL7policyRedirectUrlConfigInsertHeadersConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "sbercloud:index/ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value",
                "valueType"
            ]
        },
        "sbercloud:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "sbercloud:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "sbercloud:index/ElbL7ruleCondition:ElbL7ruleCondition": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "sbercloud:index/ElbListenerPortRange:ElbListenerPortRange": {
            "properties": {
                "endPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "startPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "endPort",
                "startPort"
            ]
        },
        "sbercloud:index/ElbPoolPersistence:ElbPoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "timeout",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/ElbSecurityPolicyListener:ElbSecurityPolicyListener": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "sbercloud:index/EvsVolumeAttachment:EvsVolumeAttachment": {
            "properties": {
                "device": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "device",
                        "id",
                        "instanceId"
                    ]
                }
            }
        },
        "sbercloud:index/FgsFunctionCustomImage:FgsFunctionCustomImage": {
            "properties": {
                "args": {
                    "type": "string",
                    "description": "The command line arguments used to start the SWR image.\n"
                },
                "command": {
                    "type": "string",
                    "description": "The startup commands of the SWR image.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of SWR image.\n"
                },
                "userGroupId": {
                    "type": "string",
                    "description": "The user group ID that used to run SWR image.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID that used to run SWR image.\n"
                },
                "workingDir": {
                    "type": "string",
                    "description": "The working directory of the SWR image.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "url",
                        "workingDir"
                    ]
                }
            }
        },
        "sbercloud:index/FgsFunctionFuncMount:FgsFunctionFuncMount": {
            "properties": {
                "localMountPath": {
                    "type": "string",
                    "description": "The function access path.\n"
                },
                "mountResource": {
                    "type": "string",
                    "description": "The ID of the mounted resource (corresponding cloud service).\n"
                },
                "mountSharePath": {
                    "type": "string",
                    "description": "The remote mount path.\n"
                },
                "mountType": {
                    "type": "string",
                    "description": "The mount type.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The mount status.\n"
                }
            },
            "type": "object",
            "required": [
                "localMountPath",
                "mountResource",
                "mountSharePath",
                "mountType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "localMountPath",
                        "mountResource",
                        "mountSharePath",
                        "mountType",
                        "status"
                    ]
                }
            }
        },
        "sbercloud:index/FgsFunctionNetworkController:FgsFunctionNetworkController": {
            "properties": {
                "disablePublicNetwork": {
                    "type": "boolean",
                    "description": "Whether to disable the public network access.\n"
                },
                "triggerAccessVpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionNetworkControllerTriggerAccessVpc:FgsFunctionNetworkControllerTriggerAccessVpc"
                    },
                    "description": "The configuration of the VPCs that can trigger the function.\n"
                }
            },
            "type": "object",
            "required": [
                "triggerAccessVpcs"
            ]
        },
        "sbercloud:index/FgsFunctionNetworkControllerTriggerAccessVpc:FgsFunctionNetworkControllerTriggerAccessVpc": {
            "properties": {
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC that can trigger the function.\n"
                }
            },
            "type": "object",
            "required": [
                "vpcId"
            ]
        },
        "sbercloud:index/FgsFunctionReservedInstance:FgsFunctionReservedInstance": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of reserved instance.\n"
                },
                "idleMode": {
                    "type": "boolean",
                    "description": "Whether to enable the idle mode.\n"
                },
                "qualifierName": {
                    "type": "string",
                    "description": "The version name or alias name.\n"
                },
                "qualifierType": {
                    "type": "string",
                    "description": "The qualifier type of reserved instance.\n"
                },
                "tacticsConfig": {
                    "$ref": "#/types/sbercloud:index/FgsFunctionReservedInstanceTacticsConfig:FgsFunctionReservedInstanceTacticsConfig",
                    "description": "The auto scaling policies for reserved instance.\n"
                }
            },
            "type": "object",
            "required": [
                "count",
                "qualifierName",
                "qualifierType"
            ]
        },
        "sbercloud:index/FgsFunctionReservedInstanceTacticsConfig:FgsFunctionReservedInstanceTacticsConfig": {
            "properties": {
                "cronConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionReservedInstanceTacticsConfigCronConfig:FgsFunctionReservedInstanceTacticsConfigCronConfig"
                    },
                    "description": "The list of scheduled policy configurations.\n"
                },
                "metricConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionReservedInstanceTacticsConfigMetricConfig:FgsFunctionReservedInstanceTacticsConfigMetricConfig"
                    },
                    "description": "The list of metric policy configurations.\n"
                }
            },
            "type": "object"
        },
        "sbercloud:index/FgsFunctionReservedInstanceTacticsConfigCronConfig:FgsFunctionReservedInstanceTacticsConfigCronConfig": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of reserved instance to which the policy belongs.\n"
                },
                "cron": {
                    "type": "string",
                    "description": "The cron expression.\n"
                },
                "expiredTime": {
                    "type": "integer",
                    "description": "The expiration timestamp of the policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of scheduled policy configuration.\n"
                },
                "startTime": {
                    "type": "integer",
                    "description": "The effective timestamp of policy.\n"
                }
            },
            "type": "object",
            "required": [
                "count",
                "cron",
                "expiredTime",
                "name",
                "startTime"
            ]
        },
        "sbercloud:index/FgsFunctionReservedInstanceTacticsConfigMetricConfig:FgsFunctionReservedInstanceTacticsConfigMetricConfig": {
            "properties": {
                "min": {
                    "type": "integer",
                    "description": "The minimun of traffic.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of metric policy.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The metric policy threshold.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of metric policy.\n"
                }
            },
            "type": "object",
            "required": [
                "min",
                "name",
                "threshold",
                "type"
            ]
        },
        "sbercloud:index/FgsFunctionVersion:FgsFunctionVersion": {
            "properties": {
                "aliases": {
                    "$ref": "#/types/sbercloud:index/FgsFunctionVersionAliases:FgsFunctionVersionAliases",
                    "description": "The aliases management for specified version.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the version.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The version name.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "sbercloud:index/FgsFunctionVersionAliases:FgsFunctionVersionAliases": {
            "properties": {
                "additionalVersionStrategy": {
                    "type": "string",
                    "description": "The description of the version alias.\n"
                },
                "additionalVersionWeights": {
                    "type": "string",
                    "description": "The percentage grayscale configuration of the version alias.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the version alias.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the version alias.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "sbercloud:index/GesGraphEncryption:GesGraphEncryption": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Whether to enable data encryption The value can be true or false. The default value is false.\n"
                },
                "masterKeyId": {
                    "type": "string",
                    "description": "ID of the customer master key created by DEW in the project corresponding to the graph creation.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enable",
                        "masterKeyId"
                    ]
                }
            }
        },
        "sbercloud:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace": {
            "properties": {
                "auditLogGroupName": {
                    "type": "string",
                    "description": "LTS log group name.\n"
                },
                "enableAudit": {
                    "type": "boolean",
                    "description": "Whether to enable graph audit. The default value is false.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auditLogGroupName",
                        "enableAudit"
                    ]
                }
            }
        },
        "sbercloud:index/GesGraphPublicIp:GesGraphPublicIp": {
            "properties": {
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID.\n"
                },
                "publicBindType": {
                    "type": "string",
                    "description": "The bind type of public IP.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "eipId",
                        "publicBindType"
                    ]
                }
            }
        },
        "sbercloud:index/GesGraphVertexIdType:GesGraphVertexIdType": {
            "properties": {
                "idLength": {
                    "type": "integer",
                    "description": "The length of ID.\n"
                },
                "idType": {
                    "type": "string",
                    "description": "Vertex ID type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "idLength",
                        "idType"
                    ]
                }
            }
        },
        "sbercloud:index/IdentityAclIpCidr:IdentityAclIpCidr": {
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cidr"
            ]
        },
        "sbercloud:index/IdentityAclIpRange:IdentityAclIpRange": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "range"
            ]
        },
        "sbercloud:index/IdentityAgencyProjectRole:IdentityAgencyProjectRole": {
            "properties": {
                "project": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "project",
                "roles"
            ]
        },
        "sbercloud:index/IdentityProviderAccessConfig:IdentityProviderAccessConfig": {
            "properties": {
                "accessType": {
                    "type": "string"
                },
                "authorizationEndpoint": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "providerUrl": {
                    "type": "string"
                },
                "responseMode": {
                    "type": "string"
                },
                "responseType": {
                    "type": "string"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessType",
                "clientId",
                "providerUrl",
                "signingKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessType",
                        "authorizationEndpoint",
                        "clientId",
                        "providerUrl",
                        "scopes",
                        "signingKey"
                    ]
                }
            }
        },
        "sbercloud:index/IdentityProviderConversionConversionRule:IdentityProviderConversionConversionRule": {
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderConversionConversionRuleLocal:IdentityProviderConversionConversionRuleLocal"
                    }
                },
                "remotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderConversionConversionRuleRemote:IdentityProviderConversionConversionRuleRemote"
                    }
                }
            },
            "type": "object",
            "required": [
                "locals",
                "remotes"
            ]
        },
        "sbercloud:index/IdentityProviderConversionConversionRuleLocal:IdentityProviderConversionConversionRuleLocal": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "sbercloud:index/IdentityProviderConversionConversionRuleRemote:IdentityProviderConversionConversionRuleRemote": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "sbercloud:index/IdentityProviderConversionRule:IdentityProviderConversionRule": {
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderConversionRuleLocal:IdentityProviderConversionRuleLocal"
                    }
                },
                "remotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderConversionRuleRemote:IdentityProviderConversionRuleRemote"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "locals",
                        "remotes"
                    ]
                }
            }
        },
        "sbercloud:index/IdentityProviderConversionRuleLocal:IdentityProviderConversionRuleLocal": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "group",
                        "username"
                    ]
                }
            }
        },
        "sbercloud:index/IdentityProviderConversionRuleRemote:IdentityProviderConversionRuleRemote": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attribute",
                        "condition",
                        "values"
                    ]
                }
            }
        },
        "sbercloud:index/LbPoolPersistence:LbPoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "timeout",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/MapreduceClusterAnalysisCoreNodes:MapreduceClusterAnalysisCoreNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "sbercloud:index/MapreduceClusterAnalysisTaskNodes:MapreduceClusterAnalysisTaskNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "sbercloud:index/MapreduceClusterBootstrapScript:MapreduceClusterBootstrapScript": {
            "properties": {
                "activeMaster": {
                    "type": "boolean",
                    "description": "Whether the bootstrap action script runs only on active master nodes.\n",
                    "willReplaceOnChanges": true
                },
                "beforeComponentStart": {
                    "type": "boolean",
                    "description": "Whether the bootstrap action script is executed before component start.\n",
                    "willReplaceOnChanges": true
                },
                "executeNeedSudoRoot": {
                    "type": "boolean",
                    "description": "Whether the bootstrap action script involves root user operations.\n",
                    "willReplaceOnChanges": true
                },
                "failAction": {
                    "type": "string",
                    "description": "The action after the bootstrap action script fails to be executed.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of a bootstrap action script.\n",
                    "willReplaceOnChanges": true
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the node group where the bootstrap action script is executed.\n",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "string",
                    "description": "Bootstrap action script parameters.\n",
                    "willReplaceOnChanges": true
                },
                "startTime": {
                    "type": "string",
                    "description": "The execution time of one bootstrap action script, in RFC-3339 format.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The status of one bootstrap action script.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "failAction",
                "name",
                "nodes",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "activeMaster",
                        "beforeComponentStart",
                        "executeNeedSudoRoot",
                        "failAction",
                        "name",
                        "nodes",
                        "startTime",
                        "state",
                        "uri"
                    ]
                }
            }
        },
        "sbercloud:index/MapreduceClusterComponentConfig:MapreduceClusterComponentConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterComponentConfigConfig:MapreduceClusterComponentConfigConfig"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "configs",
                "name"
            ]
        },
        "sbercloud:index/MapreduceClusterComponentConfigConfig:MapreduceClusterComponentConfigConfig": {
            "properties": {
                "configFileName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "key": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "configFileName",
                "key",
                "value"
            ]
        },
        "sbercloud:index/MapreduceClusterCustomNode:MapreduceClusterCustomNode": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "groupName",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "groupName",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "sbercloud:index/MapreduceClusterExternalDatasource:MapreduceClusterExternalDatasource": {
            "properties": {
                "componentName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataConnectionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "componentName",
                "roleType",
                "sourceType"
            ]
        },
        "sbercloud:index/MapreduceClusterMasterNodes:MapreduceClusterMasterNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "sbercloud:index/MapreduceClusterSmnNotify:MapreduceClusterSmnNotify": {
            "properties": {
                "subscriptionName": {
                    "type": "string",
                    "description": "The subscription rule name.\n",
                    "willReplaceOnChanges": true
                },
                "topicUrn": {
                    "type": "string",
                    "description": "The Uniform Resource Name (URN) of the topic.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "subscriptionName",
                "topicUrn"
            ]
        },
        "sbercloud:index/MapreduceClusterStreamingCoreNodes:MapreduceClusterStreamingCoreNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "sbercloud:index/MapreduceClusterStreamingTaskNodes:MapreduceClusterStreamingTaskNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "sbercloud:index/NatGatewaySessionConf:NatGatewaySessionConf": {
            "properties": {
                "icmpSessionExpireTime": {
                    "type": "integer",
                    "description": "The ICMP session expiration time.\n"
                },
                "tcpSessionExpireTime": {
                    "type": "integer",
                    "description": "The TCP session expiration time.\n"
                },
                "tcpTimeWaitTime": {
                    "type": "integer",
                    "description": "The duration of TIME_WAIT state when TCP connection is closed.\n"
                },
                "udpSessionExpireTime": {
                    "type": "integer",
                    "description": "The UDP session expiration time.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "icmpSessionExpireTime",
                        "tcpSessionExpireTime",
                        "tcpTimeWaitTime",
                        "udpSessionExpireTime"
                    ]
                }
            }
        },
        "sbercloud:index/NetworkingSecgroupRule:NetworkingSecgroupRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "ethertype": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "portRangeMax": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "portRangeMin": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "ports": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "remoteAddressGroupId": {
                    "type": "string"
                },
                "remoteGroupId": {
                    "type": "string"
                },
                "remoteIpPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "description",
                        "direction",
                        "ethertype",
                        "id",
                        "portRangeMax",
                        "portRangeMin",
                        "ports",
                        "priority",
                        "protocol",
                        "remoteAddressGroupId",
                        "remoteGroupId",
                        "remoteIpPrefix"
                    ]
                }
            }
        },
        "sbercloud:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "Specifies the account id to authorize. The account id cannot be the bucket owner, \nand must be unique.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId"
            ]
        },
        "sbercloud:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                }
            },
            "type": "object"
        },
        "sbercloud:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                }
            },
            "type": "object"
        },
        "sbercloud:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                }
            },
            "type": "object"
        },
        "sbercloud:index/ObsBucketCorsRule:ObsBucketCorsRule": {
            "properties": {
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxAgeSeconds": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "allowedMethods",
                "allowedOrigins"
            ]
        },
        "sbercloud:index/ObsBucketLifecycleRule:ObsBucketLifecycleRule": {
            "properties": {
                "abortIncompleteMultipartUploads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRuleAbortIncompleteMultipartUpload:ObsBucketLifecycleRuleAbortIncompleteMultipartUpload"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "expirations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRuleExpiration:ObsBucketLifecycleRuleExpiration"
                    }
                },
                "name": {
                    "type": "string"
                },
                "noncurrentVersionExpirations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRuleNoncurrentVersionExpiration:ObsBucketLifecycleRuleNoncurrentVersionExpiration"
                    }
                },
                "noncurrentVersionTransitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRuleNoncurrentVersionTransition:ObsBucketLifecycleRuleNoncurrentVersionTransition"
                    }
                },
                "prefix": {
                    "type": "string"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRuleTransition:ObsBucketLifecycleRuleTransition"
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "name"
            ]
        },
        "sbercloud:index/ObsBucketLifecycleRuleAbortIncompleteMultipartUpload:ObsBucketLifecycleRuleAbortIncompleteMultipartUpload": {
            "properties": {
                "days": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "days"
            ]
        },
        "sbercloud:index/ObsBucketLifecycleRuleExpiration:ObsBucketLifecycleRuleExpiration": {
            "properties": {
                "days": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "days"
            ]
        },
        "sbercloud:index/ObsBucketLifecycleRuleNoncurrentVersionExpiration:ObsBucketLifecycleRuleNoncurrentVersionExpiration": {
            "properties": {
                "days": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "days"
            ]
        },
        "sbercloud:index/ObsBucketLifecycleRuleNoncurrentVersionTransition:ObsBucketLifecycleRuleNoncurrentVersionTransition": {
            "properties": {
                "days": {
                    "type": "integer"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "days",
                "storageClass"
            ]
        },
        "sbercloud:index/ObsBucketLifecycleRuleTransition:ObsBucketLifecycleRuleTransition": {
            "properties": {
                "days": {
                    "type": "integer"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "days",
                "storageClass"
            ]
        },
        "sbercloud:index/ObsBucketLogging:ObsBucketLogging": {
            "properties": {
                "agency": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "targetBucket": {
                    "type": "string"
                },
                "targetPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "targetBucket"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "agency",
                        "targetBucket"
                    ]
                }
            }
        },
        "sbercloud:index/ObsBucketStorageInfo:ObsBucketStorageInfo": {
            "properties": {
                "objectNumber": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "objectNumber",
                        "size"
                    ]
                }
            }
        },
        "sbercloud:index/ObsBucketWebsite:ObsBucketWebsite": {
            "properties": {
                "errorDocument": {
                    "type": "string"
                },
                "indexDocument": {
                    "type": "string"
                },
                "redirectAllRequestsTo": {
                    "type": "string"
                },
                "routingRules": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "sbercloud:index/ProviderAssumeRole:ProviderAssumeRole": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agencyName",
                "domainName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "sbercloud:index/RdsBackupDatabase:RdsBackupDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Database to be backed up for Microsoft SQL Server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "sbercloud:index/RdsInstanceBackupStrategy:RdsInstanceBackupStrategy": {
            "properties": {
                "keepDays": {
                    "type": "integer",
                    "description": "schema: Required\n"
                },
                "period": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepDays",
                        "period",
                        "startTime"
                    ]
                }
            }
        },
        "sbercloud:index/RdsInstanceDb:RdsInstanceDb": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "port",
                        "type",
                        "userName",
                        "version"
                    ]
                }
            }
        },
        "sbercloud:index/RdsInstanceMsdtcHost:RdsInstanceMsdtcHost": {
            "properties": {
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hostName",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostName",
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "sbercloud:index/RdsInstanceNode:RdsInstanceNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone",
                        "id",
                        "name",
                        "role",
                        "status"
                    ]
                }
            }
        },
        "sbercloud:index/RdsInstanceParameter:RdsInstanceParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "sbercloud:index/RdsInstanceRestore:RdsInstanceRestore": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "databaseName": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "backupId",
                "instanceId"
            ]
        },
        "sbercloud:index/RdsInstanceVolume:RdsInstanceVolume": {
            "properties": {
                "diskEncryptionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "limitSize": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "triggerThreshold": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskEncryptionId",
                        "size",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/RdsMysqlDatabasePrivilegeUser:RdsMysqlDatabasePrivilegeUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the database account.\n"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Specifies the read-only permission.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "readonly"
                    ]
                }
            }
        },
        "sbercloud:index/RdsMysqlDatabaseTableRestoreDatabase:RdsMysqlDatabaseTableRestoreDatabase": {
            "properties": {
                "newName": {
                    "type": "string",
                    "description": "Specifies the name of the database after restoration.\n",
                    "willReplaceOnChanges": true
                },
                "oldName": {
                    "type": "string",
                    "description": "Specifies the name of the database before restoration.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "newName",
                "oldName"
            ]
        },
        "sbercloud:index/RdsMysqlDatabaseTableRestoreRestoreTable:RdsMysqlDatabaseTableRestoreRestoreTable": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsMysqlDatabaseTableRestoreRestoreTableTable:RdsMysqlDatabaseTableRestoreRestoreTableTable"
                    },
                    "description": "Specifies the tables.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "database",
                "tables"
            ]
        },
        "sbercloud:index/RdsMysqlDatabaseTableRestoreRestoreTableTable:RdsMysqlDatabaseTableRestoreRestoreTableTable": {
            "properties": {
                "newName": {
                    "type": "string",
                    "description": "Specifies the name of the table after restoration.\n",
                    "willReplaceOnChanges": true
                },
                "oldName": {
                    "type": "string",
                    "description": "Specifies the name of the table before restoration.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "newName",
                "oldName"
            ]
        },
        "sbercloud:index/RdsParametergroupConfigurationParameter:RdsParametergroupConfigurationParameter": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "readonly": {
                    "type": "boolean"
                },
                "restartRequired": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "name",
                        "readonly",
                        "restartRequired",
                        "type",
                        "value",
                        "valueRange"
                    ]
                }
            }
        },
        "sbercloud:index/RdsParametergroupDatastore:RdsParametergroupDatastore": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ]
        },
        "sbercloud:index/RdsPgAccountAttribute:RdsPgAccountAttribute": {
            "properties": {
                "rolBypassRls": {
                    "type": "boolean",
                    "description": "Indicates whether a user bypasses each row-level security policy.\n"
                },
                "rolCanLogin": {
                    "type": "boolean",
                    "description": "Indicates whether a user can log in to the database.\n"
                },
                "rolConnLimit": {
                    "type": "integer",
                    "description": "Indicates the maximum number of concurrent connections to a DB instance.\n"
                },
                "rolCreateDb": {
                    "type": "boolean",
                    "description": "Indicates whether a user can create a database.\n"
                },
                "rolCreateRole": {
                    "type": "boolean",
                    "description": "Indicates whether a user can create other sub-users.\n"
                },
                "rolInherit": {
                    "type": "boolean",
                    "description": "Indicates whether a user automatically inherits the permissions of the role to which the\nuser belongs.\n"
                },
                "rolReplication": {
                    "type": "boolean",
                    "description": "Indicates whether the user is a replication role.\n"
                },
                "rolSuper": {
                    "type": "boolean",
                    "description": "Indicates whether a user has the super-user permission.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "rolBypassRls",
                        "rolCanLogin",
                        "rolConnLimit",
                        "rolCreateDb",
                        "rolCreateRole",
                        "rolInherit",
                        "rolReplication",
                        "rolSuper"
                    ]
                }
            }
        },
        "sbercloud:index/RdsPgHbaHostBasedAuthentication:RdsPgHbaHostBasedAuthentication": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Specifies the client IP address.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Specifies the subnet mask.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Specifies the authentication mode.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the connection type.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Specifies the Name of a user.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "database",
                "method",
                "type",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "database",
                        "mask",
                        "method",
                        "type",
                        "user"
                    ]
                }
            }
        },
        "sbercloud:index/RdsReadReplicaInstanceDb:RdsReadReplicaInstanceDb": {
            "properties": {
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "port",
                        "type",
                        "userName",
                        "version"
                    ]
                }
            }
        },
        "sbercloud:index/RdsReadReplicaInstanceParameter:RdsReadReplicaInstanceParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "sbercloud:index/RdsReadReplicaInstanceVolume:RdsReadReplicaInstanceVolume": {
            "properties": {
                "diskEncryptionId": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "limitSize": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "triggerThreshold": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskEncryptionId",
                        "size",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/RdsSqlserverDatabasePrivilegeUser:RdsSqlserverDatabasePrivilegeUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the database account.\n"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Specifies the read-only permission.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "readonly"
                    ]
                }
            }
        },
        "sbercloud:index/SfsFileSystemAccessRule:SfsFileSystemAccessRule": {
            "properties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessRuleId": {
                    "type": "string"
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessLevel",
                        "accessRuleId",
                        "accessTo",
                        "accessType",
                        "status"
                    ]
                }
            }
        },
        "sbercloud:index/SfsTurboDuTaskDirUsage:SfsTurboDuTaskDirUsage": {
            "properties": {
                "fileCounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/SfsTurboDuTaskDirUsageFileCount:SfsTurboDuTaskDirUsageFileCount"
                    }
                },
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "usedCapacity": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fileCounts",
                        "message",
                        "path",
                        "usedCapacity"
                    ]
                }
            }
        },
        "sbercloud:index/SfsTurboDuTaskDirUsageFileCount:SfsTurboDuTaskDirUsageFileCount": {
            "properties": {
                "block": {
                    "type": "integer"
                },
                "char": {
                    "type": "integer"
                },
                "dir": {
                    "type": "integer"
                },
                "pipe": {
                    "type": "integer"
                },
                "regular": {
                    "type": "integer"
                },
                "socket": {
                    "type": "integer"
                },
                "symlink": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "block",
                        "char",
                        "dir",
                        "pipe",
                        "regular",
                        "socket",
                        "symlink"
                    ]
                }
            }
        },
        "sbercloud:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "endpoint"
            ]
        },
        "sbercloud:index/SmnSubscriptionExtension:SmnSubscriptionExtension": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clientSecret": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keyword": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "signSecret": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "sbercloud:index/SmnSubscriptionFilterPolicy:SmnSubscriptionFilterPolicy": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The filter policy name. The policy name must be unique.\n"
                },
                "stringEquals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The string array for exact match.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "stringEquals"
                    ]
                }
            }
        },
        "sbercloud:index/SwrOrganizationPermissionsSelfPermission:SwrOrganizationPermissionsSelfPermission": {
            "properties": {
                "permission": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "permission",
                        "userId",
                        "userName"
                    ]
                }
            }
        },
        "sbercloud:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser": {
            "properties": {
                "permission": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "permission",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "permission",
                        "userId",
                        "userName"
                    ]
                }
            }
        },
        "sbercloud:index/VpcAddressGroupIpExtraSet:VpcAddressGroupIpExtraSet": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "sbercloud:index/VpcBandwidthPublicip:VpcBandwidthPublicip": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/VpcEipBandwidth:VpcEipBandwidth": {
            "properties": {
                "chargeMode": {
                    "type": "string",
                    "description": "Whether the bandwidth is billed by traffic or by bandwidth size.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The shared bandwidth ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The dedicated bandwidth name.\n"
                },
                "shareType": {
                    "type": "string",
                    "description": "Whether the bandwidth is dedicated or shared.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "The dedicated bandwidth size.\n"
                }
            },
            "type": "object",
            "required": [
                "shareType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargeMode",
                        "id",
                        "name",
                        "shareType",
                        "size"
                    ]
                }
            }
        },
        "sbercloud:index/VpcEipPublicip:VpcEipPublicip": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "The EIP address to be assigned.\n",
                    "willReplaceOnChanges": true
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The IP version.\n"
                },
                "portId": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipAddress",
                        "ipVersion",
                        "portId"
                    ]
                }
            }
        },
        "sbercloud:index/VpcRoute:VpcRoute": {
            "properties": {
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destination",
                        "nexthop"
                    ]
                }
            }
        },
        "sbercloud:index/VpcRouteTableRoute:VpcRouteTableRoute": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "nexthop",
                "type"
            ]
        },
        "sbercloud:index/VpcepServiceConnection:VpcepServiceConnection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "endpointId": {
                    "type": "string"
                },
                "packetId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domainId",
                        "endpointId",
                        "packetId",
                        "status"
                    ]
                }
            }
        },
        "sbercloud:index/VpcepServicePortMapping:VpcepServicePortMapping": {
            "properties": {
                "protocol": {
                    "type": "string"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "schema: Required\n"
                },
                "terminalPort": {
                    "type": "integer",
                    "description": "schema: Required\n"
                }
            },
            "type": "object"
        },
        "sbercloud:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string",
                    "description": "The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.\n"
                },
                "authenticationMethod": {
                    "type": "string",
                    "description": "The authentication method during IKE negotiation.\n",
                    "willReplaceOnChanges": true
                },
                "dhGroup": {
                    "type": "string",
                    "description": "Specifies the DH group used for key exchange in phase 1.\n"
                },
                "dpd": {
                    "$ref": "#/types/sbercloud:index/VpnConnectionIkepolicyDpd:VpnConnectionIkepolicyDpd",
                    "description": "Specifies the dead peer detection (DPD) object.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm, 3DES is less secure, please use them with caution.\n"
                },
                "ikeVersion": {
                    "type": "string",
                    "description": "The IKE negotiation version.\n"
                },
                "lifetimeSeconds": {
                    "type": "integer",
                    "description": "The life cycle of SA in seconds, when the life cycle expires, IKE SA will be automatically updated.\n"
                },
                "localId": {
                    "type": "string",
                    "description": "The local ID.\n"
                },
                "localIdType": {
                    "type": "string",
                    "description": "The local ID type.\n"
                },
                "peerId": {
                    "type": "string",
                    "description": "The peer ID.\n"
                },
                "peerIdType": {
                    "type": "string",
                    "description": "The peer ID type.\n"
                },
                "pfs": {
                    "type": "string",
                    "description": "The DH key group used by PFS.\n"
                },
                "phase1NegotiationMode": {
                    "type": "string",
                    "description": "The negotiation mode, only works when the ike_version is v1.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authenticationAlgorithm",
                        "authenticationMethod",
                        "dhGroup",
                        "dpd",
                        "encryptionAlgorithm",
                        "ikeVersion",
                        "lifetimeSeconds",
                        "localId",
                        "localIdType",
                        "peerId",
                        "peerIdType",
                        "pfs",
                        "phase1NegotiationMode"
                    ]
                }
            }
        },
        "sbercloud:index/VpnConnectionIkepolicyDpd:VpnConnectionIkepolicyDpd": {
            "properties": {
                "interval": {
                    "type": "integer",
                    "description": "Specifies the DPD idle timeout period.\n"
                },
                "msg": {
                    "type": "string",
                    "description": "Specifies the format of DPD packets.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Specifies the interval for retransmitting DPD packets.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "interval",
                        "msg",
                        "timeout"
                    ]
                }
            }
        },
        "sbercloud:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string",
                    "description": "The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.\n"
                },
                "encapsulationMode": {
                    "type": "string",
                    "description": "The encapsulation mode, only **tunnel** supported for now.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm, 3DES is less secure, please use them with caution.\n"
                },
                "lifetimeSeconds": {
                    "type": "integer",
                    "description": "The lifecycle time of Ipsec tunnel in seconds.\n"
                },
                "pfs": {
                    "type": "string",
                    "description": "The DH key group used by PFS.\n"
                },
                "transformProtocol": {
                    "type": "string",
                    "description": "The transform protocol. Only **esp** supported for now.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authenticationAlgorithm",
                        "encapsulationMode",
                        "encryptionAlgorithm",
                        "lifetimeSeconds",
                        "pfs",
                        "transformProtocol"
                    ]
                }
            }
        },
        "sbercloud:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule": {
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of destination CIDRs.\n"
                },
                "ruleIndex": {
                    "type": "integer",
                    "description": "The rule index.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The source CIDR.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destinations",
                        "ruleIndex",
                        "source"
                    ]
                }
            }
        },
        "sbercloud:index/VpnGatewayCertificate:VpnGatewayCertificate": {
            "properties": {
                "certificateChain": {
                    "type": "string"
                },
                "certificateChainExpireTime": {
                    "type": "string"
                },
                "certificateChainSerialNumber": {
                    "type": "string"
                },
                "certificateChainSubject": {
                    "type": "string"
                },
                "certificateExpireTime": {
                    "type": "string"
                },
                "certificateId": {
                    "type": "string"
                },
                "certificateSerialNumber": {
                    "type": "string"
                },
                "certificateSubject": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "encCertificate": {
                    "type": "string"
                },
                "encCertificateExpireTime": {
                    "type": "string"
                },
                "encCertificateSerialNumber": {
                    "type": "string"
                },
                "encCertificateSubject": {
                    "type": "string"
                },
                "encPrivateKey": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateChain",
                "content",
                "encCertificate",
                "encPrivateKey",
                "name",
                "privateKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateChain",
                        "certificateChainExpireTime",
                        "certificateChainSerialNumber",
                        "certificateChainSubject",
                        "certificateExpireTime",
                        "certificateId",
                        "certificateSerialNumber",
                        "certificateSubject",
                        "content",
                        "createdAt",
                        "encCertificate",
                        "encCertificateExpireTime",
                        "encCertificateSerialNumber",
                        "encCertificateSubject",
                        "encPrivateKey",
                        "issuer",
                        "name",
                        "privateKey",
                        "signatureAlgorithm",
                        "status",
                        "updatedAt"
                    ]
                }
            }
        },
        "sbercloud:index/VpnGatewayEip1:VpnGatewayEip1": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/VpnGatewayEip2:VpnGatewayEip2": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/VpnGatewayMasterEip:VpnGatewayMasterEip": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "sbercloud:index/getApigAclPoliciesPolicy:getApigAclPoliciesPolicy": {
            "properties": {
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APIs.\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the ACL policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the ACL policy.\n"
                }
            },
            "type": "object",
            "required": [
                "bindNum",
                "entityType",
                "id",
                "name",
                "type",
                "updatedAt",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiAssociatedAclPoliciesPolicy:getApigApiAssociatedAclPoliciesPolicy": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the ACL policy is bound to the API.\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the ACL policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "One or more objects from which the access will be controlled.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "entityType",
                "envId",
                "envName",
                "id",
                "name",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiAssociatedApplicationsApplication:getApigApiAssociatedApplicationsApplication": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the application is bound to the API.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the application.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "description",
                "envId",
                "envName",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiAssociatedPluginsPlugin:getApigApiAssociatedPluginsPlugin": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the plugin is bound to the API.\n"
                },
                "content": {
                    "type": "string",
                    "description": "The configuration details for the plugin.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the plugin.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the plugin.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the plugin.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the plugin.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "content",
                "description",
                "envId",
                "envName",
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiAssociatedSignaturesSignature:getApigApiAssociatedSignaturesSignature": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the signature is bound to the API.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the signature.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The signature key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the signature.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The signature secret.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the signature.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "envId",
                "envName",
                "id",
                "key",
                "name",
                "secret",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiAssociatedThrottlingPoliciesPolicy:getApigApiAssociatedThrottlingPoliciesPolicy": {
            "properties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle:getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit.\n"
                },
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the throttling policy is bound to the API, in RFC3339 format.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the throttling policy, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the throttling policy.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period.\n"
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period.\n"
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the throttling policy.\n"
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle:getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit.\n"
                }
            },
            "type": "object",
            "required": [
                "appThrottles",
                "bindId",
                "bindTime",
                "createdAt",
                "description",
                "envName",
                "id",
                "maxApiRequests",
                "maxAppRequests",
                "maxIpRequests",
                "maxUserRequests",
                "name",
                "period",
                "periodUnit",
                "type",
                "userThrottles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle:getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle:getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiBackendParam:getApigApiBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiBasicConfigurationsConfiguration:getApigApiBasicConfigurationsConfiguration": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used.\n"
                },
                "backendType": {
                    "type": "string",
                    "description": "The backend type of the API.\n"
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the API.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of group corresponding to the API.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of group corresponding to the API.\n"
                },
                "groupVersion": {
                    "type": "string",
                    "description": "The version of group corresponding to the API.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the API.\n"
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API.\n"
                },
                "publishId": {
                    "type": "string",
                    "description": "The ID of publish corresponding to the API.\n"
                },
                "publishedAt": {
                    "type": "string",
                    "description": "The published time of the API, in RFC3339 format.\n"
                },
                "registeredAt": {
                    "type": "string",
                    "description": "The registered time of the API, in RFC3339 format.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API.\n"
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API.\n"
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request.\n"
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the API.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendType",
                "cors",
                "description",
                "envId",
                "envName",
                "groupId",
                "groupName",
                "groupVersion",
                "id",
                "matching",
                "name",
                "publishId",
                "publishedAt",
                "registeredAt",
                "requestMethod",
                "requestPath",
                "requestProtocol",
                "securityAuthentication",
                "simpleAuthentication",
                "tags",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiFuncGraph:getApigApiFuncGraph": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the FunctionGraph backend configuration.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation type.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "functionAliasUrn",
                "functionUrn",
                "id",
                "invocationType",
                "networkType",
                "requestProtocol",
                "timeout",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiFuncGraphPolicy:getApigApiFuncGraphPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiFuncGraphPolicyBackendParam:getApigApiFuncGraphPolicyBackendParam"
                    },
                    "description": "The configaiton list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiFuncGraphPolicyCondition:getApigApiFuncGraphPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the FunctionGraph backend policy.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend policy.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendParams",
                "conditions",
                "effectiveMode",
                "functionAliasUrn",
                "functionUrn",
                "id",
                "invocationType",
                "name",
                "networkType",
                "requestProtocol",
                "timeout",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiFuncGraphPolicyBackendParam:getApigApiFuncGraphPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiFuncGraphPolicyCondition:getApigApiFuncGraphPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend policy condition.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "requestLocation": {
                    "type": "string",
                    "description": "The location of the corresponding request parameter.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type of the backend policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value corresponding to the parameter name.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "frontendAuthorizerName",
                "id",
                "paramName",
                "requestId",
                "requestLocation",
                "source",
                "sysName",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiMock:getApigApiMock": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the mock backend configuration.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response of the mock backend configuration.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "id",
                "response",
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiMockPolicy:getApigApiMockPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiMockPolicyBackendParam:getApigApiMockPolicyBackendParam"
                    },
                    "description": "The configuration list of backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiMockPolicyCondition:getApigApiMockPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the mock backend policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The backend policy name.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response of the backend policy.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendParams",
                "conditions",
                "effectiveMode",
                "id",
                "name",
                "response",
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiMockPolicyBackendParam:getApigApiMockPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiMockPolicyCondition:getApigApiMockPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend policy condition.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "requestLocation": {
                    "type": "string",
                    "description": "The location of the corresponding request parameter.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type of the backend policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value corresponding to the parameter name.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "frontendAuthorizerName",
                "id",
                "paramName",
                "requestId",
                "requestLocation",
                "source",
                "sysName",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiRequestParam:getApigApiRequestParam": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default value of the parameter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The parameter description.\n"
                },
                "enumeration": {
                    "type": "string",
                    "description": "The enumerated value.\n"
                },
                "example": {
                    "type": "string",
                    "description": "The parameter example.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the request parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where this parameter is located.\n"
                },
                "maximum": {
                    "type": "integer",
                    "description": "The maximum value or length (string parameter) for parameter.\n"
                },
                "minimum": {
                    "type": "integer",
                    "description": "The minimum value or length (string parameter) for parameter.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request parameter.\n"
                },
                "passthrough": {
                    "type": "boolean",
                    "description": "Whether to transparently transfer the parameter.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether this parameter is required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "validEnable": {
                    "type": "integer",
                    "description": "Whether to enable the parameter validation.\n"
                }
            },
            "type": "object",
            "required": [
                "default",
                "description",
                "enumeration",
                "example",
                "id",
                "location",
                "maximum",
                "minimum",
                "name",
                "passthrough",
                "required",
                "type",
                "validEnable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiWeb:getApigApiWeb": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend configuration.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request path.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The web protocol type of the API request.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendAddress",
                "hostHeader",
                "id",
                "path",
                "requestMethod",
                "requestProtocol",
                "retryCount",
                "sslEnable",
                "timeout",
                "vpcChannelId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiWebPolicy:getApigApiWebPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiWebPolicyBackendParam:getApigApiWebPolicyBackendParam"
                    },
                    "description": "The configuration list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigApiWebPolicyCondition:getApigApiWebPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the web policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web policy.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request address.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The backend request protocol.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendAddress",
                "backendParams",
                "conditions",
                "effectiveMode",
                "hostHeader",
                "id",
                "name",
                "path",
                "requestMethod",
                "requestProtocol",
                "retryCount",
                "timeout",
                "vpcChannelId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiWebPolicyBackendParam:getApigApiWebPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApiWebPolicyCondition:getApigApiWebPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend policy condition.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "requestLocation": {
                    "type": "string",
                    "description": "The location of the corresponding request parameter.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type of the backend policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value corresponding to the parameter name.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "frontendAuthorizerName",
                "id",
                "paramName",
                "requestId",
                "requestLocation",
                "source",
                "sysName",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigAppcodesAppcode:getApigAppcodesAppcode": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the APPCODE, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the APPCODE.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The APPCODE value (content).\n"
                }
            },
            "type": "object",
            "required": [
                "applicationId",
                "createdAt",
                "id",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApplicationQuotasQuota:getApigApplicationQuotasQuota": {
            "properties": {
                "boundAppNum": {
                    "type": "integer",
                    "description": "The number of applications bound to the quota policy.\n"
                },
                "callLimits": {
                    "type": "integer",
                    "description": "The maximum number of times a application quota can be called.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the application quota, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application quota.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the application quota.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application quota.\n"
                },
                "timeInterval": {
                    "type": "integer",
                    "description": "The time limit of a quota.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "The time unit.\n"
                }
            },
            "type": "object",
            "required": [
                "boundAppNum",
                "callLimits",
                "createdAt",
                "description",
                "id",
                "name",
                "timeInterval",
                "timeUnit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigApplicationsApplication:getApigApplicationsApplication": {
            "properties": {
                "appKey": {
                    "type": "string",
                    "description": "The key of the application.\n"
                },
                "appSecret": {
                    "type": "string",
                    "description": "The secret of the application.\n"
                },
                "appType": {
                    "type": "string",
                    "description": "The type of the application.\n"
                },
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APIs.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the application.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the application.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the application.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of the application.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the application.\n"
                }
            },
            "type": "object",
            "required": [
                "appKey",
                "appSecret",
                "appType",
                "bindNum",
                "createdAt",
                "createdBy",
                "description",
                "id",
                "name",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigChannelsVpcChannel:getApigChannelsVpcChannel": {
            "properties": {
                "balanceStrategy": {
                    "type": "integer",
                    "description": "The distribution algorithm.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of channel, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the VPC channel.\n"
                },
                "memberGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigChannelsVpcChannelMemberGroup:getApigChannelsVpcChannelMemberGroup"
                    },
                    "description": "The parameter member groups of the VPC channels.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type of the VPC channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPC channel.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the backend server.\n"
                },
                "type": {
                    "type": "integer",
                    "description": "The type of the VPC channel.\n"
                }
            },
            "type": "object",
            "required": [
                "balanceStrategy",
                "createdAt",
                "id",
                "memberGroups",
                "memberType",
                "name",
                "port",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigChannelsVpcChannelMemberGroup:getApigChannelsVpcChannelMemberGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the member group.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the member group.\n"
                },
                "microserviceLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigChannelsVpcChannelMemberGroupMicroserviceLabel:getApigChannelsVpcChannelMemberGroupMicroserviceLabel"
                    },
                    "description": "The microservice tags of the backend server group.\n"
                },
                "microservicePort": {
                    "type": "integer",
                    "description": "The microservice port of the backend server group.\n"
                },
                "microserviceVersion": {
                    "type": "string",
                    "description": "The microservice version of the backend server group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the member group.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the current member group.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "microserviceLabels",
                "microservicePort",
                "microserviceVersion",
                "name",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigChannelsVpcChannelMemberGroupMicroserviceLabel:getApigChannelsVpcChannelMemberGroupMicroserviceLabel": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the microservice label.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the microservice label.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigCustomAuthorizersAuthorizer:getApigCustomAuthorizersAuthorizer": {
            "properties": {
                "cacheAge": {
                    "type": "integer",
                    "description": "The maximum cache age of custom authorizer.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of custom authorizer.\n"
                },
                "functionAliasUri": {
                    "type": "string",
                    "description": "The version alias URI of the FGS function.\n"
                },
                "functionType": {
                    "type": "string",
                    "description": "The type of the FGS function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FGS function.\n"
                },
                "functionVersion": {
                    "type": "string",
                    "description": "The version of the FGS function.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the custom authorizer.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigCustomAuthorizersAuthorizerIdentity:getApigCustomAuthorizersAuthorizerIdentity"
                    },
                    "description": "The parameter identities of the custom authorizer.\n"
                },
                "isBodySend": {
                    "type": "boolean",
                    "description": "Whether to send the body of custom authorizer.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom authorizer.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture types of function.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the custom authorizer.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data of custom authorizer.\n"
                }
            },
            "type": "object",
            "required": [
                "cacheAge",
                "createdAt",
                "functionAliasUri",
                "functionType",
                "functionUrn",
                "functionVersion",
                "id",
                "identities",
                "isBodySend",
                "name",
                "networkType",
                "type",
                "userData"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigCustomAuthorizersAuthorizerIdentity:getApigCustomAuthorizersAuthorizerIdentity": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The parameter location of identity.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the parameter to be verified.\n"
                },
                "validation": {
                    "type": "string",
                    "description": "The parameter verification expression of identity.\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "validation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigEndpointConnectionsConnection:getApigEndpointConnectionsConnection": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the endpoint connection, in RFC3339 format.\n"
                },
                "domainId": {
                    "type": "string",
                    "description": "The IAM account ID of the endpoint connection creator.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the endpoint connection.\n"
                },
                "packetId": {
                    "type": "integer",
                    "description": "The packet ID of the endpoint connection.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the endpoint connection.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest time of the endpoint connection, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "domainId",
                "id",
                "packetId",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigEnvironmentVariablesVariable:getApigEnvironmentVariablesVariable": {
            "properties": {
                "envId": {
                    "type": "string",
                    "description": "The environment ID corresponding to the environment variable.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The group ID corresponding to the environment variable.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the environment variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the environment variable.\n"
                }
            },
            "type": "object",
            "required": [
                "envId",
                "groupId",
                "id",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigEnvironmentsEnvironment:getApigEnvironmentsEnvironment": {
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createTime",
                "description",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigGroupsGroup:getApigGroupsGroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigGroupsGroupEnvironment:getApigGroupsGroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group.\n"
                },
                "id": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "onSellStatus": {
                    "type": "integer"
                },
                "slDomain": {
                    "type": "string"
                },
                "slDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigGroupsGroupUrlDomain:getApigGroupsGroupUrlDomain"
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "environments",
                "id",
                "isDefault",
                "name",
                "onSellStatus",
                "slDomain",
                "slDomains",
                "status",
                "updatedAt",
                "urlDomains"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigGroupsGroupEnvironment:getApigGroupsGroupEnvironment": {
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment to which the variables belongs.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigGroupsGroupEnvironmentVariable:getApigGroupsGroupEnvironmentVariable"
                    },
                    "description": "The array of one or more environment variables.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "variables"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigGroupsGroupEnvironmentVariable:getApigGroupsGroupEnvironmentVariable": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the variable that the group has.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The variable name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The variable value.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigGroupsGroupUrlDomain:getApigGroupsGroupUrlDomain": {
            "properties": {
                "cnameStatus": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "isHasTrustedRootCa": {
                    "type": "boolean"
                },
                "minSslVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sslId": {
                    "type": "string"
                },
                "sslName": {
                    "type": "string"
                },
                "verifiedClientCertificateEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "cnameStatus",
                "id",
                "isHasTrustedRootCa",
                "minSslVersion",
                "name",
                "sslId",
                "sslName",
                "verifiedClientCertificateEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigInstanceFeaturesFeature:getApigInstanceFeaturesFeature": {
            "properties": {
                "config": {
                    "type": "string",
                    "description": "The detailed configuration of the instance feature.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the feature.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the feature.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the feature, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "config",
                "enabled",
                "id",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigInstancesInstance:getApigInstancesInstance": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the instance, in RFC3339 format.\n"
                },
                "edition": {
                    "type": "string",
                    "description": "The edition of instance.\n"
                },
                "eipAddress": {
                    "type": "string",
                    "description": "The elastic IP address of instance binding.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the instance.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of instance.\n"
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "The type of load balancer used by the instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of instance.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of instance.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of instance.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "edition",
                "eipAddress",
                "enterpriseProjectId",
                "id",
                "loadbalancerProvider",
                "name",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigSignaturesSignature:getApigSignaturesSignature": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The algorithm of the signature.\n"
                },
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APIs.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the signature.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the signature.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the signature.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the signature.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret of the signature.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the signature.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the signature.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "bindNum",
                "createdAt",
                "id",
                "key",
                "name",
                "secret",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigThrottlingPoliciesPolicy:getApigThrottlingPoliciesPolicy": {
            "properties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigThrottlingPoliciesPolicyAppThrottle:getApigThrottlingPoliciesPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit.\n"
                },
                "bindNum": {
                    "type": "integer",
                    "description": "The number of APIs bound to the throttling policy.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the throttling policy, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of throttling policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period.\n"
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period.\n"
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the throttling policy.\n"
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getApigThrottlingPoliciesPolicyUserThrottle:getApigThrottlingPoliciesPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit.\n"
                }
            },
            "type": "object",
            "required": [
                "appThrottles",
                "bindNum",
                "createdAt",
                "description",
                "id",
                "maxApiRequests",
                "maxAppRequests",
                "maxIpRequests",
                "maxUserRequests",
                "name",
                "period",
                "periodUnit",
                "type",
                "userThrottles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigThrottlingPoliciesPolicyAppThrottle:getApigThrottlingPoliciesPolicyAppThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getApigThrottlingPoliciesPolicyUserThrottle:getApigThrottlingPoliciesPolicyUserThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbhAvailabilityZonesAvailabilityZone:getCbhAvailabilityZonesAvailabilityZone": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "regionId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "name",
                "regionId",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbhFlavorsFlavor:getCbhFlavorsFlavor": {
            "properties": {
                "asset": {
                    "type": "integer"
                },
                "dataDiskSize": {
                    "type": "number"
                },
                "ecsSystemDataSize": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "maxConnection": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "asset",
                "dataDiskSize",
                "ecsSystemDataSize",
                "id",
                "maxConnection",
                "memory",
                "type",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbhInstancesInstance:getCbhInstancesInstance": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "Indicates the availability zone name.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Indicates the specification of the instance.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Indicates the ID of the instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the instance name.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP address of the instance.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Indicates the elastic IP address.\n"
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Indicates the ID of the elastic IP.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Indicates the ID of a security group.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the instance.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Indicates the ID of a subnet.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Indicates the current version of the instance image.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "Indicates the ID of a VPC.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "flavorId",
                "id",
                "name",
                "privateIp",
                "publicIp",
                "publicIpId",
                "securityGroupId",
                "status",
                "subnetId",
                "version",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrBackupChildren:getCbrBackupChildren": {
            "properties": {
                "checkpointId": {
                    "type": "string",
                    "description": "The restore point ID of the sub-backup resource.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the sub-backup.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The sub-backup description.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project to which the backup sub-backup resource belongs.\n"
                },
                "expiredAt": {
                    "type": "string",
                    "description": "The expiration time of the sub-backup.\n"
                },
                "extendInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrBackupChildrenExtendInfo:getCbrBackupChildrenExtendInfo"
                    },
                    "description": "The extended information.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The sub-backup ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The sub-backup name.\n"
                },
                "replicationRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrBackupChildrenReplicationRecord:getCbrBackupChildrenReplicationRecord"
                    },
                    "description": "The replication records.\n"
                },
                "resourceAz": {
                    "type": "string",
                    "description": "The availability zone where the backup sub-backup resource is located.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The sub-backup resource ID.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "The sub-backup resource name.\n"
                },
                "resourceSize": {
                    "type": "integer",
                    "description": "The sub-backup resource size, in GB.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The sub-backup resource type.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The sub-backup status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The sub-backup type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the sub-backup.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The vault to which the backup sub-backup resource belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "checkpointId",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "expiredAt",
                "extendInfos",
                "id",
                "name",
                "replicationRecords",
                "resourceAz",
                "resourceId",
                "resourceName",
                "resourceSize",
                "resourceType",
                "status",
                "type",
                "updatedAt",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrBackupChildrenExtendInfo:getCbrBackupChildrenExtendInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether the backup is automatically generated.\n"
                },
                "bootable": {
                    "type": "boolean",
                    "description": "Whether the backup is a system disk backup.\n"
                },
                "containSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the VM backup data contains system disk data.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Whether the backup is encrypted.\n"
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backup is an incremental backup.\n"
                },
                "isSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the disk is a system disk.\n"
                },
                "osRegistryImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of images created using backups.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID of the disk backup.\n"
                },
                "supportLld": {
                    "type": "boolean",
                    "description": "Whether to allow lazyloading for fast restoration.\n"
                },
                "supportedRestoreMode": {
                    "type": "string",
                    "description": "The restoration mode.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "bootable",
                "containSystemDisk",
                "encrypted",
                "incremental",
                "isSystemDisk",
                "osRegistryImages",
                "snapshotId",
                "supportLld",
                "supportedRestoreMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrBackupChildrenReplicationRecord:getCbrBackupChildrenReplicationRecord": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the replication.\n"
                },
                "destinationBackupId": {
                    "type": "string",
                    "description": "The ID of the destination backup used for replication.\n"
                },
                "destinationCheckpointId": {
                    "type": "string",
                    "description": "The record ID of the destination backup used for replication.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The replication destination region.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "extraInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrBackupChildrenReplicationRecordExtraInfo:getCbrBackupChildrenReplicationRecordExtraInfo"
                    },
                    "description": "The additional information of the replication.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The replication record ID.\n"
                },
                "sourceBackupId": {
                    "type": "string",
                    "description": "The ID of the source backup used for replication.\n"
                },
                "sourceCheckpointId": {
                    "type": "string",
                    "description": "The ID of the source backup record used for replication.\n"
                },
                "sourceProjectId": {
                    "type": "string",
                    "description": "The ID of the replication source project.\n"
                },
                "sourceRegion": {
                    "type": "string",
                    "description": "The replication source region.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The replication status.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the backup resides.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "destinationBackupId",
                "destinationCheckpointId",
                "destinationProjectId",
                "destinationRegion",
                "destinationVaultId",
                "extraInfos",
                "id",
                "sourceBackupId",
                "sourceCheckpointId",
                "sourceProjectId",
                "sourceRegion",
                "status",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrBackupChildrenReplicationRecordExtraInfo:getCbrBackupChildrenReplicationRecordExtraInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether replication is automatically scheduled.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "failCode": {
                    "type": "string",
                    "description": "The error code.\n"
                },
                "failReason": {
                    "type": "string",
                    "description": "The error cause.\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "The replication progress.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "destinationVaultId",
                "failCode",
                "failReason",
                "progress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrBackupExtendInfo:getCbrBackupExtendInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether the backup is automatically generated.\n"
                },
                "bootable": {
                    "type": "boolean",
                    "description": "Whether the backup is a system disk backup.\n"
                },
                "containSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the VM backup data contains system disk data.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Whether the backup is encrypted.\n"
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backup is an incremental backup.\n"
                },
                "isSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the disk is a system disk.\n"
                },
                "osRegistryImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of images created using backups.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID of the disk backup.\n"
                },
                "supportLld": {
                    "type": "boolean",
                    "description": "Whether to allow lazyloading for fast restoration.\n"
                },
                "supportedRestoreMode": {
                    "type": "string",
                    "description": "The restoration mode.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "bootable",
                "containSystemDisk",
                "encrypted",
                "incremental",
                "isSystemDisk",
                "osRegistryImages",
                "snapshotId",
                "supportLld",
                "supportedRestoreMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrBackupReplicationRecord:getCbrBackupReplicationRecord": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the replication.\n"
                },
                "destinationBackupId": {
                    "type": "string",
                    "description": "The ID of the destination backup used for replication.\n"
                },
                "destinationCheckpointId": {
                    "type": "string",
                    "description": "The record ID of the destination backup used for replication.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The replication destination region.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "extraInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrBackupReplicationRecordExtraInfo:getCbrBackupReplicationRecordExtraInfo"
                    },
                    "description": "The additional information of the replication.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The replication record ID.\n"
                },
                "sourceBackupId": {
                    "type": "string",
                    "description": "The ID of the source backup used for replication.\n"
                },
                "sourceCheckpointId": {
                    "type": "string",
                    "description": "The ID of the source backup record used for replication.\n"
                },
                "sourceProjectId": {
                    "type": "string",
                    "description": "The ID of the replication source project.\n"
                },
                "sourceRegion": {
                    "type": "string",
                    "description": "The replication source region.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The replication status.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the backup resides.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "destinationBackupId",
                "destinationCheckpointId",
                "destinationProjectId",
                "destinationRegion",
                "destinationVaultId",
                "extraInfos",
                "id",
                "sourceBackupId",
                "sourceCheckpointId",
                "sourceProjectId",
                "sourceRegion",
                "status",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrBackupReplicationRecordExtraInfo:getCbrBackupReplicationRecordExtraInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether replication is automatically scheduled.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "failCode": {
                    "type": "string",
                    "description": "The error code.\n"
                },
                "failReason": {
                    "type": "string",
                    "description": "The error cause.\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "The replication progress.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "destinationVaultId",
                "failCode",
                "failReason",
                "progress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrPoliciesPolicy:getCbrPoliciesPolicy": {
            "properties": {
                "associatedVaults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrPoliciesPolicyAssociatedVault:getCbrPoliciesPolicyAssociatedVault"
                    },
                    "description": "The vault associated with the CBR policy\n"
                },
                "backupCycles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrPoliciesPolicyBackupCycle:getCbrPoliciesPolicyBackupCycle"
                    },
                    "description": "The scheduling rule for the CBR policy backup execution.\n"
                },
                "backupQuantity": {
                    "type": "integer",
                    "description": "The maximum number of retained backups.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The name of the replication destination region.\n"
                },
                "enableAcceleration": {
                    "type": "boolean",
                    "description": "Whether to enable the acceleration function to shorten the replication time for cross-region\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the CBR policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The policy ID.\n"
                },
                "longTermRetentions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrPoliciesPolicyLongTermRetention:getCbrPoliciesPolicyLongTermRetention"
                    },
                    "description": "The long-term retention rules.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The policy name.\n"
                },
                "timePeriod": {
                    "type": "integer",
                    "description": "The duration (in days) for retained backups.\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The UTC time zone.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protection type of the CBR policy.\n"
                }
            },
            "type": "object",
            "required": [
                "associatedVaults",
                "backupCycles",
                "backupQuantity",
                "destinationProjectId",
                "destinationRegion",
                "enableAcceleration",
                "enabled",
                "id",
                "longTermRetentions",
                "name",
                "timePeriod",
                "timeZone",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrPoliciesPolicyAssociatedVault:getCbrPoliciesPolicyAssociatedVault": {
            "properties": {
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID associated with CBR policy\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The vault ID of the associated CBR policy\n"
                }
            },
            "type": "object",
            "required": [
                "destinationVaultId",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrPoliciesPolicyBackupCycle:getCbrPoliciesPolicyBackupCycle": {
            "properties": {
                "days": {
                    "type": "string",
                    "description": "The weekly backup time.\n"
                },
                "executionTimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The execution time of the policy.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The number of days between each backup.\n"
                }
            },
            "type": "object",
            "required": [
                "days",
                "executionTimes",
                "interval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrPoliciesPolicyLongTermRetention:getCbrPoliciesPolicyLongTermRetention": {
            "properties": {
                "daily": {
                    "type": "integer",
                    "description": "The latest backup of each day is saved in the long term.\n"
                },
                "fullBackupInterval": {
                    "type": "integer",
                    "description": "How often (after how many incremental backups) a full backup is performed.\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "The latest backup of each month is saved in the long term.\n"
                },
                "weekly": {
                    "type": "integer",
                    "description": "The latest backup of each week is saved in the long term.\n"
                },
                "yearly": {
                    "type": "integer",
                    "description": "The latest backup of each year is saved in the long term.\n"
                }
            },
            "type": "object",
            "required": [
                "daily",
                "fullBackupInterval",
                "monthly",
                "weekly",
                "yearly"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrVaultsVault:getCbrVaultsVault": {
            "properties": {
                "allocated": {
                    "type": "number",
                    "description": "The allocated capacity of the vault, in GB.\n"
                },
                "autoBind": {
                    "type": "boolean",
                    "description": "Whether automatic association is supported.\n"
                },
                "autoExpandEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable automatic expansion of the backup protection type vault.\n"
                },
                "bindRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The rules for automatic association.\n"
                },
                "consistentLevel": {
                    "type": "string",
                    "description": "The consistent level (specification) of the vault.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The vault ID in UUID format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The vault name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The ID of the policy associated with the vault.\n"
                },
                "protectionType": {
                    "type": "string",
                    "description": "The protection type of the vault.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCbrVaultsVaultResource:getCbrVaultsVaultResource"
                    },
                    "description": "The array of one or more resources to attach to the vault.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The vault capacity, in GB.\n"
                },
                "specCode": {
                    "type": "string",
                    "description": "The specification code.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The vault status.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "The name of the bucket for the vault.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the vault.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The object type of the vault.\n"
                },
                "used": {
                    "type": "number",
                    "description": "The used capacity, in GB.\n"
                }
            },
            "type": "object",
            "required": [
                "allocated",
                "autoBind",
                "autoExpandEnabled",
                "bindRules",
                "consistentLevel",
                "enterpriseProjectId",
                "id",
                "name",
                "policyId",
                "protectionType",
                "resources",
                "size",
                "specCode",
                "status",
                "storage",
                "tags",
                "type",
                "used"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCbrVaultsVaultResource:getCbrVaultsVaultResource": {
            "properties": {
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk IDs which will be excluded in the backup.\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk or SFS file system IDs which will be included in the backup.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the ECS instance to be backed up.\n"
                }
            },
            "type": "object",
            "required": [
                "excludes",
                "includes",
                "serverId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceAddonTemplateSupportVersion:getCceAddonTemplateSupportVersion": {
            "properties": {
                "bareMetals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualMachines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "bareMetals",
                "virtualMachines"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClusterCertificateCluster:getCceClusterCertificateCluster": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "insecureSkipTlsVerify": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateAuthorityData",
                "insecureSkipTlsVerify",
                "name",
                "server"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClusterCertificateContext:getCceClusterCertificateContext": {
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cluster",
                "name",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClusterCertificateUser:getCceClusterCertificateUser": {
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientCertificateData",
                "clientKeyData",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClusterEndpoint:getCceClusterEndpoint": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClusterMaster:getCceClusterMaster": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClustersCluster:getCceClustersCluster": {
            "properties": {
                "authenticationMode": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer"
                },
                "certificateClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCceClustersClusterCertificateCluster:getCceClustersClusterCertificateCluster"
                    }
                },
                "certificateUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCceClustersClusterCertificateUser:getCceClustersClusterCertificateUser"
                    }
                },
                "clusterType": {
                    "type": "string"
                },
                "clusterVersion": {
                    "type": "string"
                },
                "containerNetworkCidr": {
                    "type": "string"
                },
                "containerNetworkType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCceClustersClusterEndpoint:getCceClustersClusterEndpoint"
                    }
                },
                "eniSubnetCidr": {
                    "type": "string"
                },
                "eniSubnetId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "kubeConfigRaw": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCceClustersClusterMaster:getCceClustersClusterMaster"
                    }
                },
                "name": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "serviceNetworkCidr": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authenticationMode",
                "billingMode",
                "certificateClusters",
                "certificateUsers",
                "clusterType",
                "clusterVersion",
                "containerNetworkCidr",
                "containerNetworkType",
                "description",
                "endpoints",
                "eniSubnetCidr",
                "eniSubnetId",
                "enterpriseProjectId",
                "flavorId",
                "id",
                "kubeConfigRaw",
                "masters",
                "name",
                "securityGroupId",
                "serviceNetworkCidr",
                "status",
                "subnetId",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClustersClusterCertificateCluster:getCceClustersClusterCertificateCluster": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateAuthorityData",
                "name",
                "server"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClustersClusterCertificateUser:getCceClustersClusterCertificateUser": {
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientCertificateData",
                "clientKeyData",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClustersClusterEndpoint:getCceClustersClusterEndpoint": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceClustersClusterMaster:getCceClustersClusterMaster": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodeDataVolume:getCceNodeDataVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodeHostnameConfig:getCceNodeHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodePoolDataVolume:getCceNodePoolDataVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodePoolHostnameConfig:getCceNodePoolHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodePoolRootVolume:getCceNodePoolRootVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodeRootVolume:getCceNodeRootVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodesNode:getCceNodesNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCceNodesNodeDataVolume:getCceNodesNodeDataVolume"
                    }
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCceNodesNodeHostnameConfig:getCceNodesNodeHostnameConfig"
                    }
                },
                "id": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "rootVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getCceNodesNodeRootVolume:getCceNodesNodeRootVolume"
                    }
                },
                "serverId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "billingMode",
                "dataVolumes",
                "ecsGroupId",
                "enterpriseProjectId",
                "flavorId",
                "hostnameConfigs",
                "id",
                "keyPair",
                "name",
                "os",
                "privateIp",
                "publicIp",
                "rootVolumes",
                "serverId",
                "status",
                "subnetId",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodesNodeDataVolume:getCceNodesNodeDataVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodesNodeHostnameConfig:getCceNodesNodeHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCceNodesNodeRootVolume:getCceNodesNodeRootVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCdmFlavorsFlavor:getCdmFlavorsFlavor": {
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cpu",
                "id",
                "memory",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeFlavorsFlavor:getComputeFlavorsFlavor": {
            "properties": {
                "cpuCoreCount": {
                    "type": "integer"
                },
                "generation": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memorySize": {
                    "type": "integer"
                },
                "performanceType": {
                    "type": "string"
                },
                "storageType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cpuCoreCount",
                "generation",
                "id",
                "memorySize",
                "performanceType",
                "storageType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeInstanceNetwork:getComputeInstanceNetwork": {
            "properties": {
                "fixedIpV4": {
                    "type": "string"
                },
                "fixedIpV6": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fixedIpV4",
                "fixedIpV6",
                "mac",
                "port",
                "uuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeInstanceSchedulerHint:getComputeInstanceSchedulerHint": {
            "properties": {
                "group": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "group"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeInstanceVolumeAttached:getComputeInstanceVolumeAttached": {
            "properties": {
                "bootIndex": {
                    "type": "integer"
                },
                "isSysVolume": {
                    "type": "boolean"
                },
                "pciAddress": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bootIndex",
                "isSysVolume",
                "pciAddress",
                "size",
                "type",
                "volumeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeInstancesInstance:getComputeInstancesInstance": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expiredTime": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "flavorName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getComputeInstancesInstanceNetwork:getComputeInstancesInstanceNetwork"
                    }
                },
                "publicIp": {
                    "type": "string"
                },
                "schedulerHints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getComputeInstancesInstanceSchedulerHint:getComputeInstancesInstanceSchedulerHint"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "systemDiskId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userData": {
                    "type": "string"
                },
                "volumeAttacheds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getComputeInstancesInstanceVolumeAttached:getComputeInstancesInstanceVolumeAttached"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "chargingMode",
                "enterpriseProjectId",
                "expiredTime",
                "flavorId",
                "flavorName",
                "id",
                "imageId",
                "imageName",
                "keyPair",
                "name",
                "networks",
                "publicIp",
                "schedulerHints",
                "securityGroupIds",
                "status",
                "systemDiskId",
                "tags",
                "userData",
                "volumeAttacheds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeInstancesInstanceNetwork:getComputeInstancesInstanceNetwork": {
            "properties": {
                "fixedIpV4": {
                    "type": "string"
                },
                "fixedIpV6": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fixedIpV4",
                "fixedIpV6",
                "mac",
                "port",
                "uuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeInstancesInstanceSchedulerHint:getComputeInstancesInstanceSchedulerHint": {
            "properties": {
                "group": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "group"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeInstancesInstanceVolumeAttached:getComputeInstancesInstanceVolumeAttached": {
            "properties": {
                "bootIndex": {
                    "type": "integer"
                },
                "isSysVolume": {
                    "type": "boolean"
                },
                "pciAddress": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bootIndex",
                "isSysVolume",
                "pciAddress",
                "size",
                "type",
                "volumeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getComputeServergroupsServergroup:getComputeServergroupsServergroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "members",
                "name",
                "policies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getCssFlavorsFlavor:getCssFlavorsFlavor": {
            "properties": {
                "availabilityZones": {
                    "type": "string"
                },
                "diskRange": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "diskRange",
                "id",
                "memory",
                "name",
                "region",
                "type",
                "vcpus",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDcsAccountsAccount:getDcsAccountsAccount": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Account name.\n"
                },
                "accountRole": {
                    "type": "string",
                    "description": "Account permissions.\n"
                },
                "accountType": {
                    "type": "string",
                    "description": "Account type.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Account description.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Account ID.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Account status.\n"
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "accountRole",
                "accountType",
                "description",
                "id",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDcsFlavorsFlavor:getDcsFlavorsFlavor": {
            "properties": {
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cacheMode": {
                    "type": "string"
                },
                "capacity": {
                    "type": "number"
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cpuArchitecture": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersions": {
                    "type": "string"
                },
                "ipCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availableZones",
                "cacheMode",
                "capacity",
                "chargingModes",
                "cpuArchitecture",
                "engine",
                "engineVersions",
                "ipCount",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDdsFlavorsFlavor:getDdsFlavorsFlavor": {
            "properties": {
                "memory": {
                    "type": "string"
                },
                "specCode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "memory",
                "specCode",
                "type",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaFlavorsFlavor:getDmsKafkaFlavorsFlavor": {
            "properties": {
                "archTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsKafkaFlavorsFlavorIo:getDmsKafkaFlavorsFlavorIo"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsKafkaFlavorsFlavorProperty:getDmsKafkaFlavorsFlavorProperty"
                    }
                },
                "supportFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsKafkaFlavorsFlavorSupportFeature:getDmsKafkaFlavorsFlavorSupportFeature"
                    }
                },
                "type": {
                    "type": "string"
                },
                "vmSpecification": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "archTypes",
                "chargingModes",
                "id",
                "ios",
                "properties",
                "supportFeatures",
                "type",
                "vmSpecification"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaFlavorsFlavorIo:getDmsKafkaFlavorsFlavorIo": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unavailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "storageSpecCode",
                "type",
                "unavailabilityZones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaFlavorsFlavorProperty:getDmsKafkaFlavorsFlavorProperty": {
            "properties": {
                "flavorAlias": {
                    "type": "string"
                },
                "maxBandwidthPerBroker": {
                    "type": "integer"
                },
                "maxBroker": {
                    "type": "integer"
                },
                "maxConsumerPerBroker": {
                    "type": "integer"
                },
                "maxPartitionPerBroker": {
                    "type": "integer"
                },
                "maxStoragePerNode": {
                    "type": "integer"
                },
                "maxTpsPerBroker": {
                    "type": "integer"
                },
                "minBroker": {
                    "type": "integer"
                },
                "minStoragePerNode": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "flavorAlias",
                "maxBandwidthPerBroker",
                "maxBroker",
                "maxConsumerPerBroker",
                "maxPartitionPerBroker",
                "maxStoragePerNode",
                "maxTpsPerBroker",
                "minBroker",
                "minStoragePerNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaFlavorsFlavorSupportFeature:getDmsKafkaFlavorsFlavorSupportFeature": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsKafkaFlavorsFlavorSupportFeatureProperty:getDmsKafkaFlavorsFlavorSupportFeatureProperty"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "properties"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaFlavorsFlavorSupportFeatureProperty:getDmsKafkaFlavorsFlavorSupportFeatureProperty": {
            "properties": {
                "maxNode": {
                    "type": "integer"
                },
                "maxTask": {
                    "type": "integer"
                },
                "minNode": {
                    "type": "integer"
                },
                "minTask": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "maxNode",
                "maxTask",
                "minNode",
                "minTask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaInstancesInstance:getDmsKafkaInstancesInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectAddress": {
                    "type": "string"
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsKafkaInstancesInstanceCrossVpcAccess:getDmsKafkaInstancesInstanceCrossVpcAccess"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dumping": {
                    "type": "boolean"
                },
                "enableAutoTopic": {
                    "type": "boolean"
                },
                "enablePublicIp": {
                    "type": "boolean"
                },
                "enabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managementConnectAddress": {
                    "type": "string"
                },
                "managerUser": {
                    "type": "string"
                },
                "manegementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "partitionNum": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "publicConnAddresses": {
                    "type": "string"
                },
                "publicIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "retentionPolicy": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityProtocol": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessUser",
                "availabilityZones",
                "connectAddress",
                "crossVpcAccesses",
                "description",
                "dumping",
                "enableAutoTopic",
                "enablePublicIp",
                "enabledMechanisms",
                "engineVersion",
                "enterpriseProjectId",
                "id",
                "maintainBegin",
                "maintainEnd",
                "managementConnectAddress",
                "managerUser",
                "manegementConnectAddress",
                "name",
                "networkId",
                "partitionNum",
                "port",
                "productId",
                "publicConnAddresses",
                "publicIpIds",
                "resourceSpecCode",
                "retentionPolicy",
                "securityGroupId",
                "securityProtocol",
                "sslEnable",
                "status",
                "storageSpace",
                "storageSpecCode",
                "tags",
                "type",
                "usedStorageSpace",
                "userId",
                "userName",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaInstancesInstanceCrossVpcAccess:getDmsKafkaInstancesInstanceCrossVpcAccess": {
            "properties": {
                "advertisedIp": {
                    "type": "string"
                },
                "lisenterIp": {
                    "type": "string",
                    "deprecationMessage": "typo in lisenter_ip, please use \"listener_ip\" instead."
                },
                "listenerIp": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "advertisedIp",
                "lisenterIp",
                "listenerIp",
                "port",
                "portId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaMessagesMessage:getDmsKafkaMessagesMessage": {
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "Indicates the application ID.\n"
                },
                "hugeMessage": {
                    "type": "boolean",
                    "description": "Indicates the big data flag.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Indicates the message key.\n"
                },
                "messageId": {
                    "type": "string",
                    "description": "Indicates the message ID.\n"
                },
                "messageOffset": {
                    "type": "integer",
                    "description": "Indicates the message offset.\n"
                },
                "partition": {
                    "type": "integer",
                    "description": "Indicates the partition where the message is located.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Indicates the message size.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Indicates the message label.\n"
                },
                "timestamp": {
                    "type": "string",
                    "description": "Indicates the message production time.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Indicates the message content.\n"
                }
            },
            "type": "object",
            "required": [
                "appId",
                "hugeMessage",
                "key",
                "messageId",
                "messageOffset",
                "partition",
                "size",
                "tag",
                "timestamp",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsKafkaUsersUser:getDmsKafkaUsersUser": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Indicates the create time.\n"
                },
                "defaultApp": {
                    "type": "boolean",
                    "description": "Indicates whether the application is the default application.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Indicates the description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the username.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the user role.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "defaultApp",
                "description",
                "name",
                "role"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsRabbitmqFlavorsFlavor:getDmsRabbitmqFlavorsFlavor": {
            "properties": {
                "archTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsRabbitmqFlavorsFlavorIo:getDmsRabbitmqFlavorsFlavorIo"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsRabbitmqFlavorsFlavorProperty:getDmsRabbitmqFlavorsFlavorProperty"
                    }
                },
                "supportFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsRabbitmqFlavorsFlavorSupportFeature:getDmsRabbitmqFlavorsFlavorSupportFeature"
                    }
                },
                "type": {
                    "type": "string"
                },
                "vmSpecification": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "archTypes",
                "chargingModes",
                "id",
                "ios",
                "properties",
                "supportFeatures",
                "type",
                "vmSpecification"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsRabbitmqFlavorsFlavorIo:getDmsRabbitmqFlavorsFlavorIo": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unavailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "storageSpecCode",
                "type",
                "unavailabilityZones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsRabbitmqFlavorsFlavorProperty:getDmsRabbitmqFlavorsFlavorProperty": {
            "properties": {
                "flavorAlias": {
                    "type": "string"
                },
                "maxBandwidthPerBroker": {
                    "type": "integer"
                },
                "maxBroker": {
                    "type": "integer"
                },
                "maxConsumerPerBroker": {
                    "type": "integer"
                },
                "maxPartitionPerBroker": {
                    "type": "integer"
                },
                "maxStoragePerNode": {
                    "type": "integer"
                },
                "maxTpsPerBroker": {
                    "type": "integer"
                },
                "minBroker": {
                    "type": "integer"
                },
                "minStoragePerNode": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "flavorAlias",
                "maxBandwidthPerBroker",
                "maxBroker",
                "maxConsumerPerBroker",
                "maxPartitionPerBroker",
                "maxStoragePerNode",
                "maxTpsPerBroker",
                "minBroker",
                "minStoragePerNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsRabbitmqFlavorsFlavorSupportFeature:getDmsRabbitmqFlavorsFlavorSupportFeature": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDmsRabbitmqFlavorsFlavorSupportFeatureProperty:getDmsRabbitmqFlavorsFlavorSupportFeatureProperty"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "properties"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDmsRabbitmqFlavorsFlavorSupportFeatureProperty:getDmsRabbitmqFlavorsFlavorSupportFeatureProperty": {
            "properties": {
                "maxNode": {
                    "type": "integer"
                },
                "maxTask": {
                    "type": "integer"
                },
                "minNode": {
                    "type": "integer"
                },
                "minTask": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "maxNode",
                "maxTask",
                "minNode",
                "minTask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDwsFlavorsFlavor:getDwsFlavorsFlavor": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of availability zones.\n"
                },
                "datastoreType": {
                    "type": "string",
                    "description": "The type of datastore.\n"
                },
                "datastoreVersion": {
                    "type": "string",
                    "description": "The version of datastore.\n"
                },
                "elasticVolumeSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getDwsFlavorsFlavorElasticVolumeSpec:getDwsFlavorsFlavorElasticVolumeSpec"
                    },
                    "description": "The typical specification, If the volume specification is elastic.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "The name of the dws node flavor.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "The ram of the dws node flavor in GB.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The default disk size in GB.\n"
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The vcpus of the dws node flavor.\n"
                },
                "volumetype": {
                    "type": "string",
                    "description": "Disk type.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "datastoreType",
                "datastoreVersion",
                "elasticVolumeSpecs",
                "flavorId",
                "memory",
                "size",
                "vcpus",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getDwsFlavorsFlavorElasticVolumeSpec:getDwsFlavorsFlavorElasticVolumeSpec": {
            "properties": {
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum disk size.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "Minimum disk size.\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Disk size increment step.\n"
                }
            },
            "type": "object",
            "required": [
                "maxSize",
                "minSize",
                "step"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getElbFlavorsFlavor:getElbFlavorsFlavor": {
            "properties": {
                "bandwidth": {
                    "type": "integer"
                },
                "cps": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "maxConnections": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "qps": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "cps",
                "id",
                "maxConnections",
                "name",
                "qps",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getElbPoolsPool:getElbPoolsPool": {
            "properties": {
                "connectionDrainEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable delayed logout.\n"
                },
                "connectionDrainTimeout": {
                    "type": "integer",
                    "description": "The timeout of the delayed logout in seconds.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of pool.\n"
                },
                "healthmonitorId": {
                    "type": "string",
                    "description": "The health monitor ID of the ELB pool.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The pool ID.\n"
                },
                "ipVersion": {
                    "type": "string",
                    "description": "The IP version of pool.\n"
                },
                "lbMethod": {
                    "type": "string",
                    "description": "The method of the ELB pool.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getElbPoolsPoolListener:getElbPoolsPoolListener"
                    },
                    "description": "Listener list. For details, see Data structure of the listener field.\n"
                },
                "loadbalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getElbPoolsPoolLoadbalancer:getElbPoolsPoolLoadbalancer"
                    },
                    "description": "Loadbalancer list. For details, see Data structure of the loadbalancer field.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getElbPoolsPoolMember:getElbPoolsPoolMember"
                    },
                    "description": "Loadbalancer list. For details, see Data structure of the members field.\n"
                },
                "minimumHealthyMemberCount": {
                    "type": "integer",
                    "description": "The timeout of the delayed logout in seconds.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The pool name.\n"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getElbPoolsPoolPersistence:getElbPoolsPoolPersistence"
                    },
                    "description": "Whether connections in the same session will be processed by the same pool member or not.\n"
                },
                "protectionReason": {
                    "type": "string",
                    "description": "The reason for update protection.\n"
                },
                "protectionStatus": {
                    "type": "string",
                    "description": "The protection status for update.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol of pool.\n"
                },
                "slowStartDuration": {
                    "type": "integer",
                    "description": "The slow start duration, in seconds.\n"
                },
                "slowStartEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable slow start.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the backend server group.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC where the backend server group works.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionDrainEnabled",
                "connectionDrainTimeout",
                "description",
                "healthmonitorId",
                "id",
                "ipVersion",
                "lbMethod",
                "listeners",
                "loadbalancers",
                "members",
                "minimumHealthyMemberCount",
                "name",
                "persistences",
                "protectionReason",
                "protectionStatus",
                "protocol",
                "slowStartDuration",
                "slowStartEnabled",
                "type",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getElbPoolsPoolListener:getElbPoolsPoolListener": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The listener ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getElbPoolsPoolLoadbalancer:getElbPoolsPoolLoadbalancer": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The loadbalancer ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getElbPoolsPoolMember:getElbPoolsPoolMember": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The member ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getElbPoolsPoolPersistence:getElbPoolsPoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The name of the cookie if persistence mode is set appropriately.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The stickiness duration, in minutes.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of persistence mode.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "timeout",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getEvsVolumesVolume:getEvsVolumesVolume": {
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getEvsVolumesVolumeAttachment:getEvsVolumesVolumeAttachment"
                    }
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bootable": {
                    "type": "boolean"
                },
                "createAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "iops": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "shareable": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "throughput": {
                    "type": "integer"
                },
                "updateAt": {
                    "type": "string"
                },
                "volumeType": {
                    "type": "string"
                },
                "wwn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attachments",
                "availabilityZone",
                "bootable",
                "createAt",
                "description",
                "enterpriseProjectId",
                "id",
                "iops",
                "name",
                "serviceType",
                "shareable",
                "size",
                "status",
                "tags",
                "throughput",
                "updateAt",
                "volumeType",
                "wwn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getEvsVolumesVolumeAttachment:getEvsVolumesVolumeAttachment": {
            "properties": {
                "attachedAt": {
                    "type": "string"
                },
                "attachedMode": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attachedAt",
                "attachedMode",
                "deviceName",
                "id",
                "serverId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getIdentityGroupUser:getIdentityGroupUser": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordExpiresAt": {
                    "type": "string"
                },
                "passwordStatus": {
                    "type": "boolean"
                },
                "passwordStrength": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "id",
                "name",
                "passwordExpiresAt",
                "passwordStatus",
                "passwordStrength"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getIdentityProjectsProject:getIdentityProjectsProject": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getIdentityUsersUser:getIdentityUsersUser": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordExpiresAt": {
                    "type": "string"
                },
                "passwordStatus": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "groups",
                "id",
                "name",
                "passwordExpiresAt",
                "passwordStatus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getImagesImagesImage:getImagesImagesImage": {
            "properties": {
                "activeAt": {
                    "type": "string"
                },
                "architecture": {
                    "type": "string"
                },
                "backupId": {
                    "type": "string"
                },
                "containerFormat": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dataOrigin": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diskFormat": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageType": {
                    "type": "string"
                },
                "maxRamMb": {
                    "type": "integer"
                },
                "minDiskGb": {
                    "type": "integer"
                },
                "minRamMb": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protected": {
                    "type": "boolean"
                },
                "schema": {
                    "type": "string"
                },
                "sizeBytes": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "activeAt",
                "architecture",
                "backupId",
                "containerFormat",
                "createdAt",
                "dataOrigin",
                "description",
                "diskFormat",
                "enterpriseProjectId",
                "file",
                "id",
                "imageType",
                "maxRamMb",
                "minDiskGb",
                "minRamMb",
                "name",
                "os",
                "osVersion",
                "owner",
                "protected",
                "schema",
                "sizeBytes",
                "status",
                "updatedAt",
                "visibility"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getKpsFailedTasksTask:getKpsFailedTasksTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the task.\n"
                },
                "keypairName": {
                    "type": "string",
                    "description": "The name of the keypair associated with the task.\n"
                },
                "operateType": {
                    "type": "string",
                    "description": "The operation type of the task.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the instance associated with the task.\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "The name of the instance associated with the task.\n"
                },
                "taskErrorCode": {
                    "type": "string",
                    "description": "The error code of the task execution failure.\n"
                },
                "taskErrorMsg": {
                    "type": "string",
                    "description": "The error information of the task execution failure.\n"
                },
                "taskTime": {
                    "type": "string",
                    "description": "The start time of the task, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "keypairName",
                "operateType",
                "serverId",
                "serverName",
                "taskErrorCode",
                "taskErrorMsg",
                "taskTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getKpsKeypairsKeypair:getKpsKeypairsKeypair": {
            "properties": {
                "fingerprint": {
                    "type": "string"
                },
                "isManaged": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fingerprint",
                "isManaged",
                "name",
                "publicKey",
                "scope"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getKpsRunningTasksTask:getKpsRunningTasksTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the task.\n"
                },
                "keypairName": {
                    "type": "string",
                    "description": "The name of the keypair associated with the task.\n"
                },
                "operateType": {
                    "type": "string",
                    "description": "The operation type of the task.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the instance associated with the task.\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "The name of the instance associated with the task.\n"
                },
                "taskTime": {
                    "type": "string",
                    "description": "The start time of the task, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "keypairName",
                "operateType",
                "serverId",
                "serverName",
                "taskTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getLbListenersListener:getLbListenersListener": {
            "properties": {
                "connectionLimit": {
                    "type": "integer",
                    "description": "The maximum number of connections allowed for the listener.\n"
                },
                "defaultPoolId": {
                    "type": "string",
                    "description": "The ID of the default pool with which the ELB listener is associated.\n"
                },
                "defaultTlsContainerRef": {
                    "type": "string",
                    "description": "The ID of the server certificate used by the listener.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the ELB listener.\n"
                },
                "http2Enable": {
                    "type": "boolean",
                    "description": "Whether the ELB listener uses HTTP/2.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ELB listener ID.\n"
                },
                "loadbalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getLbListenersListenerLoadbalancer:getLbListenersListenerLoadbalancer"
                    },
                    "description": "Loadbalancer list. For details, see Data structure of the loadbalancer field.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The listener name.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The listener protocol.\n"
                },
                "protocolPort": {
                    "type": "integer",
                    "description": "The front-end listening port of the listener.\n"
                },
                "sniContainerRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the SNI certificate (server certificates with a domain name) IDs used by the listener.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionLimit",
                "defaultPoolId",
                "defaultTlsContainerRef",
                "description",
                "http2Enable",
                "id",
                "loadbalancers",
                "name",
                "protocol",
                "protocolPort",
                "sniContainerRefs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getLbListenersListenerLoadbalancer:getLbListenersListenerLoadbalancer": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The loadbalancer ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getLbPoolsPool:getLbPoolsPool": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of pool.\n"
                },
                "healthmonitorId": {
                    "type": "string",
                    "description": "Specifies the health monitor ID of the LB pool.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The pool ID.\n"
                },
                "lbMethod": {
                    "type": "string",
                    "description": "The method of the LB pool.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getLbPoolsPoolListener:getLbPoolsPoolListener"
                    },
                    "description": "Listener list. For details, see Data structure of the listener field.\n"
                },
                "loadbalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getLbPoolsPoolLoadbalancer:getLbPoolsPoolLoadbalancer"
                    },
                    "description": "Loadbalancer list. For details, see Data structure of the loadbalancer field.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getLbPoolsPoolMember:getLbPoolsPoolMember"
                    },
                    "description": "Loadbalancer list. For details, see Data structure of the members field.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The pool name.\n"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getLbPoolsPoolPersistence:getLbPoolsPoolPersistence"
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol of pool.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "healthmonitorId",
                "id",
                "lbMethod",
                "listeners",
                "loadbalancers",
                "members",
                "name",
                "persistences",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getLbPoolsPoolListener:getLbPoolsPoolListener": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The listener ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getLbPoolsPoolLoadbalancer:getLbPoolsPoolLoadbalancer": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The loadbalancer ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getLbPoolsPoolMember:getLbPoolsPoolMember": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The member ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getLbPoolsPoolPersistence:getLbPoolsPoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The name of the cookie if persistence mode is set appropriately.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of persistence mode.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getNetworkingSecgroupRule:getNetworkingSecgroupRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "ethertype": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "portRangeMax": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "portRangeMin": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "ports": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "remoteAddressGroupId": {
                    "type": "string"
                },
                "remoteGroupId": {
                    "type": "string"
                },
                "remoteIpPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "action",
                "description",
                "direction",
                "ethertype",
                "id",
                "portRangeMax",
                "portRangeMin",
                "ports",
                "priority",
                "protocol",
                "remoteAddressGroupId",
                "remoteGroupId",
                "remoteIpPrefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getNetworkingSecgroupsSecurityGroup:getNetworkingSecgroupsSecurityGroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "enterpriseProjectId",
                "id",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getObsBucketsBucket:getObsBucketsBucket": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "createdAt",
                "enterpriseProjectId",
                "region",
                "storageClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsBackupsBackup:getRdsBackupsBackup": {
            "properties": {
                "associatedWithDdm": {
                    "type": "boolean",
                    "description": "Whether a DDM instance has been associated.\n"
                },
                "beginTime": {
                    "type": "string",
                    "description": "Backup start time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getRdsBackupsBackupDatabase:getRdsBackupsBackupDatabase"
                    },
                    "description": "Database been backed up.\n"
                },
                "datastores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getRdsBackupsBackupDatastore:getRdsBackupsBackupDatastore"
                    }
                },
                "endTime": {
                    "type": "string",
                    "description": "Backup end time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Backup ID.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "RDS instance ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Backup name.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Backup size in KB.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Backup status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Backup type.\n"
                }
            },
            "type": "object",
            "required": [
                "associatedWithDdm",
                "beginTime",
                "databases",
                "datastores",
                "endTime",
                "id",
                "instanceId",
                "name",
                "size",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsBackupsBackupDatabase:getRdsBackupsBackupDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Database to be backed up for Microsoft SQL Server.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsBackupsBackupDatastore:getRdsBackupsBackupDatastore": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "DB engine.\n"
                },
                "version": {
                    "type": "string",
                    "description": "DB engine version.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsEngineVersionsVersion:getRdsEngineVersionsVersion": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsFlavorsFlavor:getRdsFlavorsFlavor": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dbVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceMode": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string",
                    "deprecationMessage": "use instance_mode instead"
                },
                "name": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "dbVersions",
                "groupType",
                "id",
                "instanceMode",
                "memory",
                "mode",
                "name",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsInstancesInstance:getRdsInstancesInstance": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backupStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getRdsInstancesInstanceBackupStrategy:getRdsInstancesInstanceBackupStrategy"
                    }
                },
                "created": {
                    "type": "string"
                },
                "dbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getRdsInstancesInstanceDb:getRdsInstancesInstanceDb"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "haReplicationMode": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getRdsInstancesInstanceNode:getRdsInstancesInstanceNode"
                    }
                },
                "paramGroupId": {
                    "type": "string"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timeZone": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getRdsInstancesInstanceVolume:getRdsInstancesInstanceVolume"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "backupStrategies",
                "created",
                "dbs",
                "enterpriseProjectId",
                "fixedIp",
                "flavor",
                "haReplicationMode",
                "id",
                "name",
                "nodes",
                "paramGroupId",
                "privateIps",
                "publicIps",
                "region",
                "securityGroupId",
                "sslEnable",
                "status",
                "subnetId",
                "tags",
                "timeZone",
                "volumes",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsInstancesInstanceBackupStrategy:getRdsInstancesInstanceBackupStrategy": {
            "properties": {
                "keepDays": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "keepDays",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsInstancesInstanceDb:getRdsInstancesInstanceDb": {
            "properties": {
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "port",
                "type",
                "userName",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsInstancesInstanceNode:getRdsInstancesInstanceNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "id",
                "name",
                "role",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsInstancesInstanceVolume:getRdsInstancesInstanceVolume": {
            "properties": {
                "diskEncryptionId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskEncryptionId",
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsPgAccountsUser:getRdsPgAccountsUser": {
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getRdsPgAccountsUserAttribute:getRdsPgAccountsUserAttribute"
                    }
                },
                "description": {
                    "type": "string"
                },
                "memberofs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "description",
                "memberofs",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsPgAccountsUserAttribute:getRdsPgAccountsUserAttribute": {
            "properties": {
                "rolbypassrls": {
                    "type": "boolean"
                },
                "rolcanlogin": {
                    "type": "boolean"
                },
                "rolconnlimit": {
                    "type": "integer"
                },
                "rolcreatedb": {
                    "type": "boolean"
                },
                "rolcreaterole": {
                    "type": "boolean"
                },
                "rolinherit": {
                    "type": "boolean"
                },
                "rolreplication": {
                    "type": "boolean"
                },
                "rolsuper": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "rolbypassrls",
                "rolcanlogin",
                "rolconnlimit",
                "rolcreatedb",
                "rolcreaterole",
                "rolinherit",
                "rolreplication",
                "rolsuper"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsPgDatabasesDatabase:getRdsPgDatabasesDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "lcCollate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "characterSet",
                "description",
                "lcCollate",
                "name",
                "owner",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsPgPluginsPlugin:getRdsPgPluginsPlugin": {
            "properties": {
                "created": {
                    "type": "boolean",
                    "description": "Indicates whether the plugin has been created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Indicates the plugin description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the plugin name.\n"
                },
                "sharedPreloadLibraries": {
                    "type": "string",
                    "description": "Indicates the dependent preloaded library.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Indicates the plugin version.\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "description",
                "name",
                "sharedPreloadLibraries",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsPgSqlLimitsSqlLimit:getRdsPgSqlLimitsSqlLimit": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Indicates the ID of SQL limit.\n"
                },
                "isEffective": {
                    "type": "boolean",
                    "description": "Indicates whether the SQL limit is effective.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "Indicates the number of SQL statements executed simultaneously.\n"
                },
                "maxWaiting": {
                    "type": "integer",
                    "description": "Indicates the max waiting time in seconds.\n"
                },
                "queryId": {
                    "type": "string",
                    "description": "Indicates the query ID.\n"
                },
                "queryString": {
                    "type": "string",
                    "description": "Indicates the text form of SQL statement.\n"
                },
                "searchPath": {
                    "type": "string",
                    "description": "Indicates the query order for names that are not schema qualified.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "isEffective",
                "maxConcurrency",
                "maxWaiting",
                "queryId",
                "queryString",
                "searchPath"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getRdsStorageTypesStorageType:getRdsStorageTypesStorageType": {
            "properties": {
                "azStatus": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The status details of the AZs to which the specification belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Storage type.\n"
                },
                "supportComputeGroupTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Performance specifications.\n"
                }
            },
            "type": "object",
            "required": [
                "azStatus",
                "name",
                "supportComputeGroupTypes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurboDataTasksTask:getSfsTurboDataTasksTask": {
            "properties": {
                "destPrefix": {
                    "type": "string",
                    "description": "The destination path prefix of the data task.\n"
                },
                "destTarget": {
                    "type": "string",
                    "description": "The target end information of the data task.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time of the data task, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the data task.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The data task execution result information.\n"
                },
                "srcPrefix": {
                    "type": "string",
                    "description": "The source path prefix of the data task.\n"
                },
                "srcTarget": {
                    "type": "string",
                    "description": "The linkage directory name.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the data task, in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the data task.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the data task.\n"
                }
            },
            "type": "object",
            "required": [
                "destPrefix",
                "destTarget",
                "endTime",
                "id",
                "message",
                "srcPrefix",
                "srcTarget",
                "startTime",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurboDuTasksTask:getSfsTurboDuTasksTask": {
            "properties": {
                "beginTime": {
                    "type": "string",
                    "description": "The start time of the DU task, in RFC3339 format.\n"
                },
                "dirUsages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getSfsTurboDuTasksTaskDirUsage:getSfsTurboDuTasksTaskDirUsage"
                    },
                    "description": "The resource usages of a directory (including subdirectories).\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time of the DU task, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the DU task.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the DU task.\n"
                }
            },
            "type": "object",
            "required": [
                "beginTime",
                "dirUsages",
                "endTime",
                "id",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurboDuTasksTaskDirUsage:getSfsTurboDuTasksTaskDirUsage": {
            "properties": {
                "fileCounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getSfsTurboDuTasksTaskDirUsageFileCount:getSfsTurboDuTasksTaskDirUsageFileCount"
                    },
                    "description": "The total number of files in the directory.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The error message.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The full path to a legal directory in the file system.\n"
                },
                "usedCapacity": {
                    "type": "integer",
                    "description": "The used capacity, in byte.\n"
                }
            },
            "type": "object",
            "required": [
                "fileCounts",
                "message",
                "path",
                "usedCapacity"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurboDuTasksTaskDirUsageFileCount:getSfsTurboDuTasksTaskDirUsageFileCount": {
            "properties": {
                "block": {
                    "type": "integer",
                    "description": "The number of block devices.\n"
                },
                "char": {
                    "type": "integer",
                    "description": "The number of character devices.\n"
                },
                "dir": {
                    "type": "integer",
                    "description": "The number of directories.\n"
                },
                "pipe": {
                    "type": "integer",
                    "description": "The number of pipe files.\n"
                },
                "regular": {
                    "type": "integer",
                    "description": "The number of common files.\n"
                },
                "socket": {
                    "type": "integer",
                    "description": "The number of sockets.\n"
                },
                "symlink": {
                    "type": "integer",
                    "description": "The number of symbolic links.\n"
                }
            },
            "type": "object",
            "required": [
                "block",
                "char",
                "dir",
                "pipe",
                "regular",
                "socket",
                "symlink"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurboObsTargetsTarget:getSfsTurboObsTargetsTarget": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the OBS target.\n"
                },
                "fileSystemPath": {
                    "type": "string",
                    "description": "The linkage directory name of the OBS target.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the OBS target.\n"
                },
                "obs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getSfsTurboObsTargetsTargetOb:getSfsTurboObsTargetsTargetOb"
                    },
                    "description": "The detail of the OBS bucket.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the OBS target.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "fileSystemPath",
                "id",
                "obs",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurboObsTargetsTargetOb:getSfsTurboObsTargetsTargetOb": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "The name of the OBS bucket associated with the OBS target.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The domain name of the region where the OBS bucket belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurboPermRulesRule:getSfsTurboPermRulesRule": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the permission rule.\n"
                },
                "ipCidr": {
                    "type": "string",
                    "description": "The IP address or IP address range of the authorized object.\n"
                },
                "rwType": {
                    "type": "string",
                    "description": "The read and write permission of the authorized object.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "The file system access permission granted to the user of the authorized object.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ipCidr",
                "rwType",
                "userType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getSfsTurbosTurbo:getSfsTurbosTurbo": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "availableCapacity": {
                    "type": "string"
                },
                "cryptKeyId": {
                    "type": "string"
                },
                "enhanced": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "exportLocation": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string"
                },
                "shareType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "subnetId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "availableCapacity",
                "cryptKeyId",
                "enhanced",
                "enterpriseProjectId",
                "exportLocation",
                "id",
                "name",
                "securityGroupId",
                "shareProto",
                "shareType",
                "size",
                "subnetId",
                "version",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcAddressGroupsAddressGroup:getVpcAddressGroupsAddressGroup": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP address sets in an IP address group.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Time when the IP address group is created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The supplementary information about the IP address group.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Enterprise project ID.\n"
                },
                "id": {
                    "type": "string",
                    "description": "IP address group ID, which uniquely identifies the IP address group.\n"
                },
                "ipExtraSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getVpcAddressGroupsAddressGroupIpExtraSet:getVpcAddressGroupsAddressGroupIpExtraSet"
                    },
                    "description": "IP addresses and their remarks in an IP address group.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "Whether it is an IPv4 or IPv6 address group.\n"
                },
                "maxCapacity": {
                    "type": "integer",
                    "description": "Maximum number of entries in an address group,\n"
                },
                "name": {
                    "type": "string",
                    "description": "IP address group name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of IP address group.\n"
                },
                "statusMessage": {
                    "type": "string",
                    "description": "The status details of IP address group.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Time when the IP address group was last updated.\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "id",
                "ipExtraSets",
                "ipVersion",
                "maxCapacity",
                "name",
                "status",
                "statusMessage",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcAddressGroupsAddressGroupIpExtraSet:getVpcAddressGroupsAddressGroupIpExtraSet": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "An IP address, IP address range, or CIDR block.\n"
                },
                "remarks": {
                    "type": "string",
                    "description": "Provides supplementary information about the IP address, IP address range, or CIDR block.\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "remarks"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcBandwidthPublicip:getVpcBandwidthPublicip": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ipAddress",
                "ipVersion",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcEipsEip:getVpcEipsEip": {
            "properties": {
                "bandwidthId": {
                    "type": "string"
                },
                "bandwidthName": {
                    "type": "string"
                },
                "bandwidthShareType": {
                    "type": "string"
                },
                "bandwidthSize": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicIpv6": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bandwidthId",
                "bandwidthName",
                "bandwidthShareType",
                "bandwidthSize",
                "createdAt",
                "enterpriseProjectId",
                "id",
                "ipVersion",
                "name",
                "portId",
                "privateIp",
                "publicIp",
                "publicIpv6",
                "status",
                "tags",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcRoute:getVpcRoute": {
            "properties": {
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "nexthop"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcRouteTableRoute:getVpcRouteTableRoute": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "destination",
                "nexthop",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcRoutesRoute:getVpcRoutesRoute": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "The route destination.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The route ID.\n"
                },
                "nexthop": {
                    "type": "string",
                    "description": "The next hop of the route.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The route type.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the route belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "id",
                "nexthop",
                "type",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcSubnetsSubnet:getVpcSubnetsSubnet": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dhcpEnable": {
                    "type": "boolean"
                },
                "dnsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gatewayIp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipv4SubnetId": {
                    "type": "string"
                },
                "ipv6Cidr": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "ipv6Gateway": {
                    "type": "string"
                },
                "ipv6SubnetId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primaryDns": {
                    "type": "string"
                },
                "secondaryDns": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "cidr",
                "description",
                "dhcpEnable",
                "dnsLists",
                "gatewayIp",
                "id",
                "ipv4SubnetId",
                "ipv6Cidr",
                "ipv6Enable",
                "ipv6Gateway",
                "ipv6SubnetId",
                "name",
                "primaryDns",
                "secondaryDns",
                "status",
                "subnetId",
                "tags",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcepPublicServicesService:getVpcepPublicServicesService": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "isCharge": {
                    "type": "boolean"
                },
                "owner": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "isCharge",
                "owner",
                "serviceName",
                "serviceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpcsVpc:getVpcsVpc": {
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secondaryCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "description",
                "enterpriseProjectId",
                "id",
                "name",
                "secondaryCidrs",
                "status",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnConnectionHealthChecksConnectionHealthCheck:getVpnConnectionHealthChecksConnectionHealthCheck": {
            "properties": {
                "connectionId": {
                    "type": "string"
                },
                "destinationIp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "protoType": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "destinationIp",
                "id",
                "protoType",
                "sourceIp",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnConnectionsConnection:getVpnConnectionsConnection": {
            "properties": {
                "connectionMonitorId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "customerGatewayId": {
                    "type": "string"
                },
                "enableNqa": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "string"
                },
                "gatewayIp": {
                    "type": "string"
                },
                "haRole": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ikepolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getVpnConnectionsConnectionIkepolicy:getVpnConnectionsConnectionIkepolicy"
                    }
                },
                "ipsecpolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getVpnConnectionsConnectionIpsecpolicy:getVpnConnectionsConnectionIpsecpolicy"
                    }
                },
                "name": {
                    "type": "string"
                },
                "peerSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getVpnConnectionsConnectionPolicyRule:getVpnConnectionsConnectionPolicyRule"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tunnelLocalAddress": {
                    "type": "string"
                },
                "tunnelPeerAddress": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpnType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionMonitorId",
                "createdAt",
                "customerGatewayId",
                "enableNqa",
                "enterpriseProjectId",
                "gatewayId",
                "gatewayIp",
                "haRole",
                "id",
                "ikepolicies",
                "ipsecpolicies",
                "name",
                "peerSubnets",
                "policyRules",
                "status",
                "tunnelLocalAddress",
                "tunnelPeerAddress",
                "updatedAt",
                "vpnType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnConnectionsConnectionIkepolicy:getVpnConnectionsConnectionIkepolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string"
                },
                "authenticationMethod": {
                    "type": "string"
                },
                "dhGroup": {
                    "type": "string"
                },
                "dpds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getVpnConnectionsConnectionIkepolicyDpd:getVpnConnectionsConnectionIkepolicyDpd"
                    }
                },
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "ikeVersion": {
                    "type": "string"
                },
                "lifetimeSeconds": {
                    "type": "integer"
                },
                "localId": {
                    "type": "string"
                },
                "localIdType": {
                    "type": "string"
                },
                "peerId": {
                    "type": "string"
                },
                "peerIdType": {
                    "type": "string"
                },
                "phase1NegotiationMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authenticationAlgorithm",
                "authenticationMethod",
                "dhGroup",
                "dpds",
                "encryptionAlgorithm",
                "ikeVersion",
                "lifetimeSeconds",
                "localId",
                "localIdType",
                "peerId",
                "peerIdType",
                "phase1NegotiationMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnConnectionsConnectionIkepolicyDpd:getVpnConnectionsConnectionIkepolicyDpd": {
            "properties": {
                "interval": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "interval",
                "msg",
                "timeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnConnectionsConnectionIpsecpolicy:getVpnConnectionsConnectionIpsecpolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string"
                },
                "encapsulationMode": {
                    "type": "string"
                },
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "lifetimeSeconds": {
                    "type": "integer"
                },
                "pfs": {
                    "type": "string"
                },
                "transformProtocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authenticationAlgorithm",
                "encapsulationMode",
                "encryptionAlgorithm",
                "lifetimeSeconds",
                "pfs",
                "transformProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnConnectionsConnectionPolicyRule:getVpnConnectionsConnectionPolicyRule": {
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ruleIndex": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinations",
                "ruleIndex",
                "source"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnCustomerGatewaysCustomerGateway:getVpnCustomerGatewaysCustomerGateway": {
            "properties": {
                "asn": {
                    "type": "integer"
                },
                "caCertificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getVpnCustomerGatewaysCustomerGatewayCaCertificate:getVpnCustomerGatewaysCustomerGatewayCaCertificate"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idType": {
                    "type": "string"
                },
                "idValue": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "routeMode": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "asn",
                "caCertificates",
                "createdAt",
                "id",
                "idType",
                "idValue",
                "ip",
                "name",
                "routeMode",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnCustomerGatewaysCustomerGatewayCaCertificate:getVpnCustomerGatewaysCustomerGatewayCaCertificate": {
            "properties": {
                "expireTime": {
                    "type": "string"
                },
                "isUpdatable": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expireTime",
                "isUpdatable",
                "issuer",
                "serialNumber",
                "signatureAlgorithm",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnGatewaysGateway:getVpnGatewaysGateway": {
            "properties": {
                "accessPrivateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of private access IPs.\n"
                },
                "accessSubnetId": {
                    "type": "string",
                    "description": "The ID of the access subnet.\n"
                },
                "accessVpcId": {
                    "type": "string",
                    "description": "The ID of the access VPC.\n"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type.\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone IDs.\n"
                },
                "bgpAsn": {
                    "type": "integer",
                    "description": "The ASN number of BGP\n"
                },
                "connectSubnet": {
                    "type": "string",
                    "description": "The VPC network segment used by the VPN gateway\n"
                },
                "connectionNumber": {
                    "type": "integer",
                    "description": "The max number of connections.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The create time.\n"
                },
                "eips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/getVpnGatewaysGatewayEip:getVpnGatewaysGatewayEip"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID\n"
                },
                "erAttachmentId": {
                    "type": "string",
                    "description": "The ER attachment ID.\n"
                },
                "erId": {
                    "type": "string",
                    "description": "The ID of the ER to which the VPN gateway is connected.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "The flavor of the VPN gateway.\n"
                },
                "haMode": {
                    "type": "string",
                    "description": "The HA mode.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the gateway\n"
                },
                "localSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The local subnets.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the gateway.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network type of the gateway.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the gateway.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time.\n"
                },
                "usedConnectionGroup": {
                    "type": "integer",
                    "description": "The number of used connection groups.\n"
                },
                "usedConnectionNumber": {
                    "type": "integer",
                    "description": "The number of used connections.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPN gateway is connected.\n"
                }
            },
            "type": "object",
            "required": [
                "accessPrivateIps",
                "accessSubnetId",
                "accessVpcId",
                "attachmentType",
                "availabilityZones",
                "bgpAsn",
                "connectSubnet",
                "connectionNumber",
                "createdAt",
                "eips",
                "enterpriseProjectId",
                "erAttachmentId",
                "erId",
                "flavor",
                "haMode",
                "id",
                "localSubnets",
                "name",
                "networkType",
                "status",
                "updatedAt",
                "usedConnectionGroup",
                "usedConnectionNumber",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "sbercloud:index/getVpnGatewaysGatewayEip:getVpnGatewaysGatewayEip": {
            "properties": {
                "bandwidthBillingInfo": {
                    "type": "string",
                    "description": "The bandwidth billing info.\n"
                },
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n"
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s.\n"
                },
                "billingInfo": {
                    "type": "string",
                    "description": "The billing info.\n"
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n"
                }
            },
            "type": "object",
            "required": [
                "bandwidthBillingInfo",
                "bandwidthId",
                "bandwidthName",
                "bandwidthSize",
                "billingInfo",
                "chargeMode",
                "id",
                "ipAddress",
                "ipVersion",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the sbercloud package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessKey": {
                "type": "string",
                "description": "The access key of the SberCloud to use.\n"
            },
            "accountName": {
                "type": "string",
                "description": "The name of the Account to login with.\n"
            },
            "assumeRole": {
                "$ref": "#/types/sbercloud:index/ProviderAssumeRole:ProviderAssumeRole"
            },
            "authUrl": {
                "type": "string",
                "description": "The Identity authentication URL.\n"
            },
            "domainId": {
                "type": "string"
            },
            "domainName": {
                "type": "string"
            },
            "enterpriseProjectId": {
                "type": "string"
            },
            "insecure": {
                "type": "boolean",
                "description": "Trust self-signed certificates.\n"
            },
            "maxRetries": {
                "type": "integer"
            },
            "password": {
                "type": "string",
                "description": "Password to login with.\n",
                "secret": true
            },
            "projectName": {
                "type": "string",
                "description": "The name of the Project to login with.\n"
            },
            "region": {
                "type": "string",
                "description": "The SberCloud region to connect to.\n"
            },
            "secretKey": {
                "type": "string",
                "description": "The secret key of the SberCloud to use.\n"
            },
            "securityToken": {
                "type": "string",
                "description": "The security token to authenticate with a temporary security credential.\n"
            },
            "userName": {
                "type": "string",
                "description": "Username to login with.\n"
            }
        },
        "required": [
            "region"
        ],
        "inputProperties": {
            "accessKey": {
                "type": "string",
                "description": "The access key of the SberCloud to use.\n"
            },
            "accountName": {
                "type": "string",
                "description": "The name of the Account to login with.\n"
            },
            "assumeRole": {
                "$ref": "#/types/sbercloud:index/ProviderAssumeRole:ProviderAssumeRole"
            },
            "authUrl": {
                "type": "string",
                "description": "The Identity authentication URL.\n"
            },
            "domainId": {
                "type": "string"
            },
            "domainName": {
                "type": "string"
            },
            "enterpriseProjectId": {
                "type": "string"
            },
            "insecure": {
                "type": "boolean",
                "description": "Trust self-signed certificates.\n"
            },
            "maxRetries": {
                "type": "integer"
            },
            "password": {
                "type": "string",
                "description": "Password to login with.\n",
                "secret": true
            },
            "projectName": {
                "type": "string",
                "description": "The name of the Project to login with.\n"
            },
            "region": {
                "type": "string",
                "description": "The SberCloud region to connect to.\n"
            },
            "secretKey": {
                "type": "string",
                "description": "The secret key of the SberCloud to use.\n"
            },
            "securityToken": {
                "type": "string",
                "description": "The security token to authenticate with a temporary security credential.\n"
            },
            "userName": {
                "type": "string",
                "description": "Username to login with.\n"
            }
        },
        "requiredInputs": [
            "region"
        ]
    },
    "resources": {
        "sbercloud:index/aomServiceDiscoveryRule:AomServiceDiscoveryRule": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detectLogEnabled": {
                    "type": "boolean"
                },
                "discoveryRuleEnabled": {
                    "type": "boolean"
                },
                "discoveryRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleDiscoveryRule:AomServiceDiscoveryRuleDiscoveryRule"
                    }
                },
                "isDefaultRule": {
                    "type": "boolean"
                },
                "logFileSuffixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logPathRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleLogPathRule:AomServiceDiscoveryRuleLogPathRule"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nameRules": {
                    "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleNameRules:AomServiceDiscoveryRuleNameRules"
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "ruleId": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "discoveryRules",
                "logFileSuffixes",
                "name",
                "nameRules",
                "region",
                "ruleId",
                "serviceType"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "detectLogEnabled": {
                    "type": "boolean"
                },
                "discoveryRuleEnabled": {
                    "type": "boolean"
                },
                "discoveryRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleDiscoveryRule:AomServiceDiscoveryRuleDiscoveryRule"
                    }
                },
                "isDefaultRule": {
                    "type": "boolean"
                },
                "logFileSuffixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logPathRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleLogPathRule:AomServiceDiscoveryRuleLogPathRule"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nameRules": {
                    "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleNameRules:AomServiceDiscoveryRuleNameRules"
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "discoveryRules",
                "logFileSuffixes",
                "nameRules",
                "serviceType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AomServiceDiscoveryRule resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "detectLogEnabled": {
                        "type": "boolean"
                    },
                    "discoveryRuleEnabled": {
                        "type": "boolean"
                    },
                    "discoveryRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleDiscoveryRule:AomServiceDiscoveryRuleDiscoveryRule"
                        }
                    },
                    "isDefaultRule": {
                        "type": "boolean"
                    },
                    "logFileSuffixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logPathRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleLogPathRule:AomServiceDiscoveryRuleLogPathRule"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRules": {
                        "$ref": "#/types/sbercloud:index/AomServiceDiscoveryRuleNameRules:AomServiceDiscoveryRuleNameRules"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apiGatewayApi:ApiGatewayApi": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiBackendParam:ApiGatewayApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters.\n"
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body.\n"
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The API description.\n"
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request.\n"
                },
                "funcGraph": {
                    "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraph:ApiGatewayApiFuncGraph",
                    "description": "The FunctionGraph backend details.\n"
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraphPolicy:ApiGatewayApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs.\n"
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph.\n"
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API.\n"
                },
                "mock": {
                    "$ref": "#/types/sbercloud:index/ApiGatewayApiMock:ApiGatewayApiMock",
                    "description": "The mock backend details.\n"
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiMockPolicy:ApiGatewayApiMockPolicy"
                    },
                    "description": "The mock policy backends.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The API name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located.\n"
                },
                "registeredAt": {
                    "type": "string",
                    "description": "The registered time of the API.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API.\n"
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiRequestParam:ApiGatewayApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters.\n"
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request.\n"
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used.\n"
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request.\n"
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled.\n"
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The API type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API.\n"
                },
                "web": {
                    "$ref": "#/types/sbercloud:index/ApiGatewayApiWeb:ApiGatewayApiWeb",
                    "description": "The web backend details.\n"
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiWebPolicy:ApiGatewayApiWebPolicy"
                    },
                    "description": "The web policy backends.\n"
                }
            },
            "required": [
                "contentType",
                "funcGraph",
                "groupId",
                "instanceId",
                "mock",
                "name",
                "region",
                "registeredAt",
                "requestMethod",
                "requestParams",
                "requestPath",
                "requestProtocol",
                "simpleAuthentication",
                "type",
                "updatedAt",
                "web"
            ],
            "inputProperties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiBackendParam:ApiGatewayApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters.\n"
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body.\n"
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The API description.\n"
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request.\n"
                },
                "funcGraph": {
                    "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraph:ApiGatewayApiFuncGraph",
                    "description": "The FunctionGraph backend details.\n",
                    "willReplaceOnChanges": true
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraphPolicy:ApiGatewayApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs.\n",
                    "willReplaceOnChanges": true
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph.\n"
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API.\n"
                },
                "mock": {
                    "$ref": "#/types/sbercloud:index/ApiGatewayApiMock:ApiGatewayApiMock",
                    "description": "The mock backend details.\n",
                    "willReplaceOnChanges": true
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiMockPolicy:ApiGatewayApiMockPolicy"
                    },
                    "description": "The mock policy backends.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The API name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located.\n",
                    "willReplaceOnChanges": true
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API.\n"
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiRequestParam:ApiGatewayApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters.\n"
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request.\n"
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used.\n"
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request.\n"
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled.\n"
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The API type.\n"
                },
                "web": {
                    "$ref": "#/types/sbercloud:index/ApiGatewayApiWeb:ApiGatewayApiWeb",
                    "description": "The web backend details.\n",
                    "willReplaceOnChanges": true
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiWebPolicy:ApiGatewayApiWebPolicy"
                    },
                    "description": "The web policy backends.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "instanceId",
                "requestMethod",
                "requestPath",
                "requestProtocol",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiGatewayApi resources.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string",
                        "description": "The ID of the authorizer to which the API request used.\n"
                    },
                    "backendParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApiGatewayApiBackendParam:ApiGatewayApiBackendParam"
                        },
                        "description": "The configurations of the backend parameters.\n"
                    },
                    "bodyDescription": {
                        "type": "string",
                        "description": "The description of the API request body, which can be an example request body, media type or parameters.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The content type of the request body.\n"
                    },
                    "cors": {
                        "type": "boolean",
                        "description": "Whether CORS is supported.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The API description.\n"
                    },
                    "failureResponse": {
                        "type": "string",
                        "description": "The example response for a failure request.\n"
                    },
                    "funcGraph": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraph:ApiGatewayApiFuncGraph",
                        "description": "The FunctionGraph backend details.\n",
                        "willReplaceOnChanges": true
                    },
                    "funcGraphPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApiGatewayApiFuncGraphPolicy:ApiGatewayApiFuncGraphPolicy"
                        },
                        "description": "The policy backends of the FunctionGraph function.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the API group to which the API belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the instance to which the API belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "isSendFgBodyBase64": {
                        "type": "boolean",
                        "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph.\n"
                    },
                    "matching": {
                        "type": "string",
                        "description": "The matching mode of the API.\n"
                    },
                    "mock": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiMock:ApiGatewayApiMock",
                        "description": "The mock backend details.\n",
                        "willReplaceOnChanges": true
                    },
                    "mockPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApiGatewayApiMockPolicy:ApiGatewayApiMockPolicy"
                        },
                        "description": "The mock policy backends.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The API name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the API is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "registeredAt": {
                        "type": "string",
                        "description": "The registered time of the API.\n"
                    },
                    "requestMethod": {
                        "type": "string",
                        "description": "The request method of the API.\n"
                    },
                    "requestParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApiGatewayApiRequestParam:ApiGatewayApiRequestParam"
                        },
                        "description": "The configurations of the front-end parameters.\n"
                    },
                    "requestPath": {
                        "type": "string",
                        "description": "The request address.\n"
                    },
                    "requestProtocol": {
                        "type": "string",
                        "description": "The request protocol of the API request.\n"
                    },
                    "responseId": {
                        "type": "string",
                        "description": "The ID of the custom response that API used.\n"
                    },
                    "securityAuthentication": {
                        "type": "string",
                        "description": "The security authentication mode of the API request.\n"
                    },
                    "simpleAuthentication": {
                        "type": "boolean",
                        "description": "Whether the authentication of the application code is enabled.\n"
                    },
                    "successResponse": {
                        "type": "string",
                        "description": "The example response for a successful request.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags configuration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The API type.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the API.\n"
                    },
                    "web": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayApiWeb:ApiGatewayApiWeb",
                        "description": "The web backend details.\n",
                        "willReplaceOnChanges": true
                    },
                    "webPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApiGatewayApiWebPolicy:ApiGatewayApiWebPolicy"
                        },
                        "description": "The web policy backends.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apiGatewayGroup:ApiGatewayGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the group, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayGroupEnvironment:ApiGatewayGroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n"
                },
                "registrationTime": {
                    "type": "string",
                    "description": "The registration time.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "The latest update time of the group.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the group, in RFC3339 format.\n"
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayGroupUrlDomain:ApiGatewayGroupUrlDomain"
                    }
                }
            },
            "required": [
                "createdAt",
                "domainAccessEnabled",
                "environments",
                "forceDestroy",
                "instanceId",
                "name",
                "region",
                "registrationTime",
                "updateTime",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayGroupEnvironment:ApiGatewayGroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n",
                    "willReplaceOnChanges": true
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApiGatewayGroupUrlDomain:ApiGatewayGroupUrlDomain"
                    }
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiGatewayGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the group, in RFC3339 format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The group description.\n"
                    },
                    "domainAccessEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether to use the debugging domain name to access the APIs within the group.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApiGatewayGroupEnvironment:ApiGatewayGroupEnvironment"
                        },
                        "description": "The array of one or more environments of the associated group.\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Whether to delete all sub-resources (for API) from this group.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the group belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "registrationTime": {
                        "type": "string",
                        "description": "The registration time.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "The latest update time of the group.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the group, in RFC3339 format.\n"
                    },
                    "urlDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApiGatewayGroupUrlDomain:ApiGatewayGroupUrlDomain"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigAclPolicy:ApigAclPolicy": {
            "properties": {
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the ACL policy belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy is located.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the ACL policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "One or more objects from which the access will be controlled.\n"
                }
            },
            "required": [
                "entityType",
                "instanceId",
                "name",
                "region",
                "type",
                "updatedAt",
                "value"
            ],
            "inputProperties": {
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the ACL policy belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy is located.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "One or more objects from which the access will be controlled.\n"
                }
            },
            "requiredInputs": [
                "entityType",
                "instanceId",
                "type",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigAclPolicy resources.\n",
                "properties": {
                    "entityType": {
                        "type": "string",
                        "description": "The entity type of the ACL policy.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the ACL policy belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ACL policy.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ACL policy is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the ACL policy.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the ACL policy.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "One or more objects from which the access will be controlled.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigAclPolicyAssociate:ApigAclPolicyAssociate": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the ACL policy belong.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The ACL Policy ID for APIs binding.\n"
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the ACL policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy and the APIs are located.\n"
                }
            },
            "required": [
                "instanceId",
                "policyId",
                "publishIds",
                "region"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the ACL policy belong.\n",
                    "willReplaceOnChanges": true
                },
                "policyId": {
                    "type": "string",
                    "description": "The ACL Policy ID for APIs binding.\n",
                    "willReplaceOnChanges": true
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the ACL policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy and the APIs are located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "policyId",
                "publishIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigAclPolicyAssociate resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the APIs and the ACL policy belong.\n",
                        "willReplaceOnChanges": true
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The ACL Policy ID for APIs binding.\n",
                        "willReplaceOnChanges": true
                    },
                    "publishIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The publish IDs corresponding to the APIs bound by the ACL policy.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ACL policy and the APIs are located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigApi:ApigApi": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiBackendParam:ApigApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters.\n"
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body.\n"
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The API description.\n"
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request.\n"
                },
                "funcGraph": {
                    "$ref": "#/types/sbercloud:index/ApigApiFuncGraph:ApigApiFuncGraph",
                    "description": "The FunctionGraph backend details.\n"
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiFuncGraphPolicy:ApigApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs.\n"
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph.\n"
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API.\n"
                },
                "mock": {
                    "$ref": "#/types/sbercloud:index/ApigApiMock:ApigApiMock",
                    "description": "The mock backend details.\n"
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiMockPolicy:ApigApiMockPolicy"
                    },
                    "description": "The mock policy backends.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The API name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located.\n"
                },
                "registeredAt": {
                    "type": "string",
                    "description": "The registered time of the API.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API.\n"
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiRequestParam:ApigApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters.\n"
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request.\n"
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used.\n"
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request.\n"
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled.\n"
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The API type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API.\n"
                },
                "web": {
                    "$ref": "#/types/sbercloud:index/ApigApiWeb:ApigApiWeb",
                    "description": "The web backend details.\n"
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiWebPolicy:ApigApiWebPolicy"
                    },
                    "description": "The web policy backends.\n"
                }
            },
            "required": [
                "contentType",
                "funcGraph",
                "groupId",
                "instanceId",
                "mock",
                "name",
                "region",
                "registeredAt",
                "requestMethod",
                "requestParams",
                "requestPath",
                "requestProtocol",
                "simpleAuthentication",
                "type",
                "updatedAt",
                "web"
            ],
            "inputProperties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiBackendParam:ApigApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters.\n"
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body.\n"
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The API description.\n"
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request.\n"
                },
                "funcGraph": {
                    "$ref": "#/types/sbercloud:index/ApigApiFuncGraph:ApigApiFuncGraph",
                    "description": "The FunctionGraph backend details.\n",
                    "willReplaceOnChanges": true
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiFuncGraphPolicy:ApigApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs.\n",
                    "willReplaceOnChanges": true
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph.\n"
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API.\n"
                },
                "mock": {
                    "$ref": "#/types/sbercloud:index/ApigApiMock:ApigApiMock",
                    "description": "The mock backend details.\n",
                    "willReplaceOnChanges": true
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiMockPolicy:ApigApiMockPolicy"
                    },
                    "description": "The mock policy backends.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The API name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located.\n",
                    "willReplaceOnChanges": true
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API.\n"
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiRequestParam:ApigApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters.\n"
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request.\n"
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used.\n"
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request.\n"
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled.\n"
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The API type.\n"
                },
                "web": {
                    "$ref": "#/types/sbercloud:index/ApigApiWeb:ApigApiWeb",
                    "description": "The web backend details.\n",
                    "willReplaceOnChanges": true
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiWebPolicy:ApigApiWebPolicy"
                    },
                    "description": "The web policy backends.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "instanceId",
                "requestMethod",
                "requestPath",
                "requestProtocol",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApi resources.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string",
                        "description": "The ID of the authorizer to which the API request used.\n"
                    },
                    "backendParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigApiBackendParam:ApigApiBackendParam"
                        },
                        "description": "The configurations of the backend parameters.\n"
                    },
                    "bodyDescription": {
                        "type": "string",
                        "description": "The description of the API request body, which can be an example request body, media type or parameters.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The content type of the request body.\n"
                    },
                    "cors": {
                        "type": "boolean",
                        "description": "Whether CORS is supported.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The API description.\n"
                    },
                    "failureResponse": {
                        "type": "string",
                        "description": "The example response for a failure request.\n"
                    },
                    "funcGraph": {
                        "$ref": "#/types/sbercloud:index/ApigApiFuncGraph:ApigApiFuncGraph",
                        "description": "The FunctionGraph backend details.\n",
                        "willReplaceOnChanges": true
                    },
                    "funcGraphPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigApiFuncGraphPolicy:ApigApiFuncGraphPolicy"
                        },
                        "description": "The policy backends of the FunctionGraph function.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the API group to which the API belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the instance to which the API belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "isSendFgBodyBase64": {
                        "type": "boolean",
                        "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph.\n"
                    },
                    "matching": {
                        "type": "string",
                        "description": "The matching mode of the API.\n"
                    },
                    "mock": {
                        "$ref": "#/types/sbercloud:index/ApigApiMock:ApigApiMock",
                        "description": "The mock backend details.\n",
                        "willReplaceOnChanges": true
                    },
                    "mockPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigApiMockPolicy:ApigApiMockPolicy"
                        },
                        "description": "The mock policy backends.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The API name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the API is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "registeredAt": {
                        "type": "string",
                        "description": "The registered time of the API.\n"
                    },
                    "requestMethod": {
                        "type": "string",
                        "description": "The request method of the API.\n"
                    },
                    "requestParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigApiRequestParam:ApigApiRequestParam"
                        },
                        "description": "The configurations of the front-end parameters.\n"
                    },
                    "requestPath": {
                        "type": "string",
                        "description": "The request address.\n"
                    },
                    "requestProtocol": {
                        "type": "string",
                        "description": "The request protocol of the API request.\n"
                    },
                    "responseId": {
                        "type": "string",
                        "description": "The ID of the custom response that API used.\n"
                    },
                    "securityAuthentication": {
                        "type": "string",
                        "description": "The security authentication mode of the API request.\n"
                    },
                    "simpleAuthentication": {
                        "type": "boolean",
                        "description": "Whether the authentication of the application code is enabled.\n"
                    },
                    "successResponse": {
                        "type": "string",
                        "description": "The example response for a successful request.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags configuration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The API type.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the API.\n"
                    },
                    "web": {
                        "$ref": "#/types/sbercloud:index/ApigApiWeb:ApigApiWeb",
                        "description": "The web backend details.\n",
                        "willReplaceOnChanges": true
                    },
                    "webPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigApiWebPolicy:ApigApiWebPolicy"
                        },
                        "description": "The web policy backends.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigApiPublishment:ApigApiPublishment": {
            "properties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be published or already published.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the current publishment.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment to which the current version of the API will be published or has been published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment to which the current version of the API is published.\n"
                },
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApiPublishmentHistory:ApigApiPublishmentHistory"
                    },
                    "description": "All publish informations of the API.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API and the environment belongs.\n"
                },
                "publishId": {
                    "type": "string",
                    "description": "The publish ID of the API in current environment.\n"
                },
                "publishedAt": {
                    "type": "string",
                    "description": "Time when the current version was published.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to publish API.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the current publishment.\n"
                }
            },
            "required": [
                "apiId",
                "envId",
                "envName",
                "histories",
                "instanceId",
                "publishId",
                "publishedAt",
                "region"
            ],
            "inputProperties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be published or already published.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the current publishment.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment to which the current version of the API will be published or has been published.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API and the environment belongs.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to publish API.\n",
                    "willReplaceOnChanges": true
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the current publishment.\n"
                }
            },
            "requiredInputs": [
                "apiId",
                "envId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApiPublishment resources.\n",
                "properties": {
                    "apiId": {
                        "type": "string",
                        "description": "The ID of the API to be published or already published.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the current publishment.\n"
                    },
                    "envId": {
                        "type": "string",
                        "description": "The ID of the environment to which the current version of the API will be published or has been published.\n",
                        "willReplaceOnChanges": true
                    },
                    "envName": {
                        "type": "string",
                        "description": "The name of the environment to which the current version of the API is published.\n"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigApiPublishmentHistory:ApigApiPublishmentHistory"
                        },
                        "description": "All publish informations of the API.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API and the environment belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "publishId": {
                        "type": "string",
                        "description": "The publish ID of the API in current environment.\n"
                    },
                    "publishedAt": {
                        "type": "string",
                        "description": "Time when the current version was published.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to publish API.\n",
                        "willReplaceOnChanges": true
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version ID of the current publishment.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigAppcode:ApigAppcode": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the APPCODE belongs.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the APPCODE.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APPCODE belong.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODE are located.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The APPCODE value (content).\n"
                }
            },
            "required": [
                "applicationId",
                "createdAt",
                "instanceId",
                "region",
                "value"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the APPCODE belongs.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APPCODE belong.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODE are located.\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The APPCODE value (content).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "applicationId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigAppcode resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the application to which the APPCODE belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the APPCODE.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application and APPCODE belong.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application and APPCODE are located.\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The APPCODE value (content).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigApplication:ApigApplication": {
            "properties": {
                "appCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of one or more application codes that the application has.\n"
                },
                "appKey": {
                    "type": "string",
                    "description": "The APP key.\n"
                },
                "appSecret": {
                    "type": "string",
                    "description": "The APP secret.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The application description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The application name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application is located.\n"
                },
                "registrationTime": {
                    "type": "string",
                    "description": "The registration time.\n"
                },
                "secretAction": {
                    "type": "string",
                    "description": "The secret action to be done for the application.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the application.\n"
                }
            },
            "required": [
                "appCodes",
                "appKey",
                "appSecret",
                "description",
                "instanceId",
                "name",
                "region",
                "registrationTime",
                "updatedAt"
            ],
            "inputProperties": {
                "appCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of one or more application codes that the application has.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The application description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The application name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application is located.\n",
                    "willReplaceOnChanges": true
                },
                "secretAction": {
                    "type": "string",
                    "description": "The secret action to be done for the application.\n"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplication resources.\n",
                "properties": {
                    "appCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The array of one or more application codes that the application has.\n"
                    },
                    "appKey": {
                        "type": "string",
                        "description": "The APP key.\n"
                    },
                    "appSecret": {
                        "type": "string",
                        "description": "The APP secret.\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The application description.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The application name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "registrationTime": {
                        "type": "string",
                        "description": "The registration time.\n"
                    },
                    "secretAction": {
                        "type": "string",
                        "description": "The secret action to be done for the application.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the application.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigApplicationAcl:ApigApplicationAcl": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the ACL rules belong.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and ACL rules are located.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The ACL type.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ACL values.\n"
                }
            },
            "required": [
                "applicationId",
                "instanceId",
                "region",
                "type",
                "values"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the ACL rules belong.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and ACL rules are located.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The ACL type.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ACL values.\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "instanceId",
                "type",
                "values"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationAcl resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the application to which the ACL rules belong.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application and ACL rules are located.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The ACL type.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ACL values.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigApplicationAuthorization:ApigApplicationAuthorization": {
            "properties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The authorized API IDs\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application authorized to access the APIs.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the APIs were published.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APIs belong.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODEs are located.\n"
                }
            },
            "required": [
                "apiIds",
                "applicationId",
                "envId",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The authorized API IDs\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application authorized to access the APIs.\n",
                    "willReplaceOnChanges": true
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the APIs were published.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APIs belong.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODEs are located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "apiIds",
                "applicationId",
                "envId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationAuthorization resources.\n",
                "properties": {
                    "apiIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The authorized API IDs\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the application authorized to access the APIs.\n",
                        "willReplaceOnChanges": true
                    },
                    "envId": {
                        "type": "string",
                        "description": "The environment ID where the APIs were published.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application and APIs belong.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application and APPCODEs are located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigApplicationQuota:ApigApplicationQuota": {
            "properties": {
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APPs.\n"
                },
                "callLimits": {
                    "type": "integer",
                    "description": "Specifies the access limit of the application quota.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the application quota, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the application quota.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the application quota belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the application quota.\n"
                },
                "region": {
                    "type": "string"
                },
                "timeInterval": {
                    "type": "integer",
                    "description": "Specifies the limited time value for flow control of the application quota.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Specifies the limited time unit of the application quota.\n"
                }
            },
            "required": [
                "bindNum",
                "callLimits",
                "createdAt",
                "instanceId",
                "name",
                "region",
                "timeInterval",
                "timeUnit"
            ],
            "inputProperties": {
                "callLimits": {
                    "type": "integer",
                    "description": "Specifies the access limit of the application quota.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the application quota.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the application quota belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the application quota.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "timeInterval": {
                    "type": "integer",
                    "description": "Specifies the limited time value for flow control of the application quota.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Specifies the limited time unit of the application quota.\n"
                }
            },
            "requiredInputs": [
                "callLimits",
                "instanceId",
                "timeInterval",
                "timeUnit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationQuota resources.\n",
                "properties": {
                    "bindNum": {
                        "type": "integer",
                        "description": "The number of bound APPs.\n"
                    },
                    "callLimits": {
                        "type": "integer",
                        "description": "Specifies the access limit of the application quota.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the application quota, in RFC3339 format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the application quota.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the dedicated instance to which the application quota belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the application quota.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "timeInterval": {
                        "type": "integer",
                        "description": "Specifies the limited time value for flow control of the application quota.\n"
                    },
                    "timeUnit": {
                        "type": "string",
                        "description": "Specifies the limited time unit of the application quota.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigApplicationQuotaAssociate:ApigApplicationQuotaAssociate": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication"
                    },
                    "description": "The configuration of applications bound to the quota.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application quota (policy) belongs.\n"
                },
                "quotaId": {
                    "type": "string",
                    "description": "The ID of the application quota (policy).\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application quota (policy) is located.\n"
                }
            },
            "required": [
                "applications",
                "instanceId",
                "quotaId",
                "region"
            ],
            "inputProperties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication"
                    },
                    "description": "The configuration of applications bound to the quota.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application quota (policy) belongs.\n",
                    "willReplaceOnChanges": true
                },
                "quotaId": {
                    "type": "string",
                    "description": "The ID of the application quota (policy).\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application quota (policy) is located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "applications",
                "instanceId",
                "quotaId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationQuotaAssociate resources.\n",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication"
                        },
                        "description": "The configuration of applications bound to the quota.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application quota (policy) belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "quotaId": {
                        "type": "string",
                        "description": "The ID of the application quota (policy).\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application quota (policy) is located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigCertificate:ApigCertificate": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The certificate content.\n",
                    "secret": true
                },
                "effectedAt": {
                    "type": "string",
                    "description": "The effective time of the certificate.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The expiration time of the certificate.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The dedicated instance ID to which the certificate belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The certificate name.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key of the certificate.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the certificate is located.\n"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The SAN (Subject Alternative Names) of the certificate.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "What signature algorithm the certificate uses.\n"
                },
                "trustedRootCa": {
                    "type": "string",
                    "description": "The trusted root CA certificate.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The certificate type.\n"
                }
            },
            "required": [
                "content",
                "effectedAt",
                "expiresAt",
                "instanceId",
                "name",
                "privateKey",
                "region",
                "sans",
                "signatureAlgorithm",
                "type"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The certificate content.\n",
                    "secret": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The dedicated instance ID to which the certificate belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The certificate name.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key of the certificate.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the certificate is located.\n",
                    "willReplaceOnChanges": true
                },
                "trustedRootCa": {
                    "type": "string",
                    "description": "The trusted root CA certificate.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The certificate type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "content",
                "privateKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigCertificate resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The certificate content.\n",
                        "secret": true
                    },
                    "effectedAt": {
                        "type": "string",
                        "description": "The effective time of the certificate.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The expiration time of the certificate.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The dedicated instance ID to which the certificate belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The certificate name.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key of the certificate.\n",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the certificate is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The SAN (Subject Alternative Names) of the certificate.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "What signature algorithm the certificate uses.\n"
                    },
                    "trustedRootCa": {
                        "type": "string",
                        "description": "The trusted root CA certificate.\n",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The certificate type.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigChannel:ApigChannel": {
            "properties": {
                "balanceStrategy": {
                    "type": "integer",
                    "description": "The distribution algorithm.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the channel.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/sbercloud:index/ApigChannelHealthCheck:ApigChannelHealthCheck",
                    "description": "The health configuration of cloud servers associated with the load balance channel for APIG regularly check.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the channel belongs.\n"
                },
                "memberGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigChannelMemberGroup:ApigChannelMemberGroup"
                    },
                    "description": "The backend server groups of the channel.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type of the channel.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigChannelMember:ApigChannelMember"
                    },
                    "description": "The backend servers of the channel.\n"
                },
                "microservice": {
                    "$ref": "#/types/sbercloud:index/ApigChannelMicroservice:ApigChannelMicroservice",
                    "description": "The configuration of the microservice.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The channel name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The default port for health check in channel.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The current status of the channel.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the channel.\n"
                }
            },
            "required": [
                "balanceStrategy",
                "createdAt",
                "healthCheck",
                "instanceId",
                "members",
                "memberGroups",
                "memberType",
                "microservice",
                "name",
                "port",
                "region",
                "status",
                "type"
            ],
            "inputProperties": {
                "balanceStrategy": {
                    "type": "integer",
                    "description": "The distribution algorithm.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/sbercloud:index/ApigChannelHealthCheck:ApigChannelHealthCheck",
                    "description": "The health configuration of cloud servers associated with the load balance channel for APIG regularly check.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the channel belongs.\n",
                    "willReplaceOnChanges": true
                },
                "memberGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigChannelMemberGroup:ApigChannelMemberGroup"
                    },
                    "description": "The backend server groups of the channel.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type of the channel.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigChannelMember:ApigChannelMember"
                    },
                    "description": "The backend servers of the channel.\n"
                },
                "microservice": {
                    "$ref": "#/types/sbercloud:index/ApigChannelMicroservice:ApigChannelMicroservice",
                    "description": "The configuration of the microservice.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The channel name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The default port for health check in channel.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the channel.\n"
                }
            },
            "requiredInputs": [
                "balanceStrategy",
                "instanceId",
                "port"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigChannel resources.\n",
                "properties": {
                    "balanceStrategy": {
                        "type": "integer",
                        "description": "The distribution algorithm.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the channel.\n"
                    },
                    "healthCheck": {
                        "$ref": "#/types/sbercloud:index/ApigChannelHealthCheck:ApigChannelHealthCheck",
                        "description": "The health configuration of cloud servers associated with the load balance channel for APIG regularly check.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the channel belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "memberGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigChannelMemberGroup:ApigChannelMemberGroup"
                        },
                        "description": "The backend server groups of the channel.\n"
                    },
                    "memberType": {
                        "type": "string",
                        "description": "The member type of the channel.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigChannelMember:ApigChannelMember"
                        },
                        "description": "The backend servers of the channel.\n"
                    },
                    "microservice": {
                        "$ref": "#/types/sbercloud:index/ApigChannelMicroservice:ApigChannelMicroservice",
                        "description": "The configuration of the microservice.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The channel name.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The default port for health check in channel.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "integer",
                        "description": "The current status of the channel.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the channel.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigCustomAuthorizer:ApigCustomAuthorizer": {
            "properties": {
                "cacheAge": {
                    "type": "integer",
                    "description": "The maximum cache age.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the custom authorizer.\n"
                },
                "functionAliasUri": {
                    "type": "string",
                    "description": "The version alias URI of the FGS function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FGS function.\n"
                },
                "functionVersion": {
                    "type": "string",
                    "description": "The version of the FGS function.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigCustomAuthorizerIdentity:ApigCustomAuthorizerIdentity"
                    },
                    "description": "The array of one or more parameter identities of the custom authorizer.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the custom authorizer belongs.\n"
                },
                "isBodySend": {
                    "type": "boolean",
                    "description": "Whether to send the body.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom authorizer.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The framework type of the function.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the custom authorizer is located.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The custom authorization type\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data for custom authorizer function.\n"
                }
            },
            "required": [
                "createdAt",
                "functionAliasUri",
                "functionUrn",
                "functionVersion",
                "instanceId",
                "name",
                "networkType",
                "region"
            ],
            "inputProperties": {
                "cacheAge": {
                    "type": "integer",
                    "description": "The maximum cache age.\n"
                },
                "functionAliasUri": {
                    "type": "string",
                    "description": "The version alias URI of the FGS function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FGS function.\n"
                },
                "functionVersion": {
                    "type": "string",
                    "description": "The version of the FGS function.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigCustomAuthorizerIdentity:ApigCustomAuthorizerIdentity"
                    },
                    "description": "The array of one or more parameter identities of the custom authorizer.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the custom authorizer belongs.\n",
                    "willReplaceOnChanges": true
                },
                "isBodySend": {
                    "type": "boolean",
                    "description": "Whether to send the body.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom authorizer.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The framework type of the function.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the custom authorizer is located.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The custom authorization type\n",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "description": "The user data for custom authorizer function.\n"
                }
            },
            "requiredInputs": [
                "functionUrn",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigCustomAuthorizer resources.\n",
                "properties": {
                    "cacheAge": {
                        "type": "integer",
                        "description": "The maximum cache age.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the custom authorizer.\n"
                    },
                    "functionAliasUri": {
                        "type": "string",
                        "description": "The version alias URI of the FGS function.\n"
                    },
                    "functionUrn": {
                        "type": "string",
                        "description": "The URN of the FGS function.\n"
                    },
                    "functionVersion": {
                        "type": "string",
                        "description": "The version of the FGS function.\n"
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigCustomAuthorizerIdentity:ApigCustomAuthorizerIdentity"
                        },
                        "description": "The array of one or more parameter identities of the custom authorizer.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the custom authorizer belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "isBodySend": {
                        "type": "boolean",
                        "description": "Whether to send the body.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the custom authorizer.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "The framework type of the function.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the custom authorizer is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The custom authorization type\n",
                        "willReplaceOnChanges": true
                    },
                    "userData": {
                        "type": "string",
                        "description": "The user data for custom authorizer function.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigEndpointConnectionManagement:ApigEndpointConnectionManagement": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the operation type endpoint connection.\n"
                },
                "endpointId": {
                    "type": "string",
                    "description": "Specifies the ID of the endpoint connection.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the endpoint connection belongs.\n"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "The current ststus of the endpoint connection.\n"
                }
            },
            "required": [
                "action",
                "endpointId",
                "instanceId",
                "region",
                "status"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the operation type endpoint connection.\n"
                },
                "endpointId": {
                    "type": "string",
                    "description": "Specifies the ID of the endpoint connection.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the endpoint connection belongs.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "endpointId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigEndpointConnectionManagement resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Specifies the operation type endpoint connection.\n"
                    },
                    "endpointId": {
                        "type": "string",
                        "description": "Specifies the ID of the endpoint connection.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the dedicated instance to which the endpoint connection belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current ststus of the endpoint connection.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigEndpointWhitelist:ApigEndpointWhitelist": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the endpoint service belongs.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the endpoint service is located.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The whitelist records of the endpoint service.\n"
                }
            },
            "required": [
                "instanceId",
                "region",
                "whitelists"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the endpoint service belongs.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the endpoint service is located.\n",
                    "willReplaceOnChanges": true
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The whitelist records of the endpoint service.\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "whitelists"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigEndpointWhitelist resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the endpoint service belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the endpoint service is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The whitelist records of the endpoint service.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigEnvironment:ApigEnvironment": {
            "properties": {
                "createTime": {
                    "type": "string",
                    "description": "schema: Deprecated; The time when the environment was created.\n",
                    "deprecationMessage": "Use 'created_at' instead"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time when the environment was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The environment description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the environment belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The environment name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n"
                }
            },
            "required": [
                "createTime",
                "createdAt",
                "instanceId",
                "name",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The environment description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the environment belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The environment name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigEnvironment resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "schema: Deprecated; The time when the environment was created.\n",
                        "deprecationMessage": "Use 'created_at' instead"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The time when the environment was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The environment description.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the environment belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The environment name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigEnvironmentVariable:ApigEnvironmentVariable": {
            "properties": {
                "envId": {
                    "type": "string",
                    "description": "Specifies the ID of the environment to which the environment variable belongs.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the group to which the environment variable belongs.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the environment variable belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the environment variable.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the resource.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Specifies the value of the environment variable.\n"
                }
            },
            "required": [
                "envId",
                "groupId",
                "instanceId",
                "name",
                "region",
                "value"
            ],
            "inputProperties": {
                "envId": {
                    "type": "string",
                    "description": "Specifies the ID of the environment to which the environment variable belongs.\n",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the group to which the environment variable belongs.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the environment variable belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the environment variable.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the resource.\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "Specifies the value of the environment variable.\n"
                }
            },
            "requiredInputs": [
                "envId",
                "groupId",
                "instanceId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigEnvironmentVariable resources.\n",
                "properties": {
                    "envId": {
                        "type": "string",
                        "description": "Specifies the ID of the environment to which the environment variable belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Specifies the ID of the group to which the environment variable belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the dedicated instance to which the environment variable belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the environment variable.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "Specifies the region in which to create the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "Specifies the value of the environment variable.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigGroup:ApigGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the group, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigGroupEnvironment:ApigGroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n"
                },
                "registrationTime": {
                    "type": "string",
                    "description": "The registration time.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "The latest update time of the group.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the group, in RFC3339 format.\n"
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigGroupUrlDomain:ApigGroupUrlDomain"
                    }
                }
            },
            "required": [
                "createdAt",
                "domainAccessEnabled",
                "environments",
                "forceDestroy",
                "instanceId",
                "name",
                "region",
                "registrationTime",
                "updateTime",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigGroupEnvironment:ApigGroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.\n",
                    "willReplaceOnChanges": true
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigGroupUrlDomain:ApigGroupUrlDomain"
                    }
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the group, in RFC3339 format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The group description.\n"
                    },
                    "domainAccessEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether to use the debugging domain name to access the APIs within the group.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigGroupEnvironment:ApigGroupEnvironment"
                        },
                        "description": "The array of one or more environments of the associated group.\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Whether to delete all sub-resources (for API) from this group.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the group belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "registrationTime": {
                        "type": "string",
                        "description": "The registration time.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "The latest update time of the group.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the group, in RFC3339 format.\n"
                    },
                    "urlDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigGroupUrlDomain:ApigGroupUrlDomain"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigInstance:ApigInstance": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required; The name list of availability zones for the dedicated instance.\n"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The name list of availability zones for the dedicated instance.\n"
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "The egress bandwidth size of the dedicated instance.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "schema: Deprecated; Time when the dedicated instance is created.\n",
                    "deprecationMessage": "Use 'created_at' instead"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Time when the dedicated instance is created, in RFC-3339 format.\n"
                },
                "customIngressPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigInstanceCustomIngressPort:ApigInstanceCustomIngressPort"
                    },
                    "description": "Specified the list of the instance custom ingress ports.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dedicated instance.\n"
                },
                "edition": {
                    "type": "string",
                    "description": "The edition of the dedicated instance.\n"
                },
                "egressAddress": {
                    "type": "string",
                    "description": "The egress (NAT) public IP address.\n"
                },
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID associated with the dedicated instance.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the dedicated instance belongs.\n"
                },
                "ingressAddress": {
                    "type": "string",
                    "description": "The ingress EIP address.\n"
                },
                "ingressBandwidthChargingMode": {
                    "type": "string"
                },
                "ingressBandwidthSize": {
                    "type": "integer"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Whether public access with an IPv6 address is supported.\n"
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "The type of loadbalancer provider used by the instance.\n"
                },
                "maintainBegin": {
                    "type": "string",
                    "description": "The start time of the maintenance time window.\n"
                },
                "maintainEnd": {
                    "type": "string",
                    "description": "End time of the maintenance time window, 4-hour difference between the start time and end time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dedicated instance.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the dedicated instance resource.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The ID of the security group to which the dedicated instance belongs to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the dedicated instance.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the VPC subnet used to create the dedicated instance.\n"
                },
                "supportedFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The supported features of the dedicated instance.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC used to create the dedicated instance.\n"
                },
                "vpcIngressAddress": {
                    "type": "string",
                    "description": "The ingress private IP address of the VPC.\n"
                },
                "vpcepServiceAddress": {
                    "type": "string",
                    "description": "The address (full name) of the VPC endpoint service.\n"
                },
                "vpcepServiceName": {
                    "type": "string",
                    "description": "Name of the VPC endpoint service.\n"
                }
            },
            "required": [
                "availabilityZones",
                "createTime",
                "createdAt",
                "edition",
                "egressAddress",
                "eipId",
                "enterpriseProjectId",
                "ingressAddress",
                "ipv6Enable",
                "loadbalancerProvider",
                "maintainBegin",
                "maintainEnd",
                "name",
                "region",
                "securityGroupId",
                "status",
                "subnetId",
                "supportedFeatures",
                "vpcId",
                "vpcIngressAddress",
                "vpcepServiceAddress",
                "vpcepServiceName"
            ],
            "inputProperties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required; The name list of availability zones for the dedicated instance.\n",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The name list of availability zones for the dedicated instance.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "The egress bandwidth size of the dedicated instance.\n"
                },
                "customIngressPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigInstanceCustomIngressPort:ApigInstanceCustomIngressPort"
                    },
                    "description": "Specified the list of the instance custom ingress ports.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dedicated instance.\n"
                },
                "edition": {
                    "type": "string",
                    "description": "The edition of the dedicated instance.\n"
                },
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID associated with the dedicated instance.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the dedicated instance belongs.\n"
                },
                "ingressBandwidthChargingMode": {
                    "type": "string"
                },
                "ingressBandwidthSize": {
                    "type": "integer"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Whether public access with an IPv6 address is supported.\n",
                    "willReplaceOnChanges": true
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "The type of loadbalancer provider used by the instance.\n",
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string",
                    "description": "The start time of the maintenance time window.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dedicated instance.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the dedicated instance resource.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The ID of the security group to which the dedicated instance belongs to.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the VPC subnet used to create the dedicated instance.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC used to create the dedicated instance.\n",
                    "willReplaceOnChanges": true
                },
                "vpcepServiceName": {
                    "type": "string",
                    "description": "Name of the VPC endpoint service.\n"
                }
            },
            "requiredInputs": [
                "edition",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigInstance resources.\n",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required; The name list of availability zones for the dedicated instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; The name list of availability zones for the dedicated instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthSize": {
                        "type": "integer",
                        "description": "The egress bandwidth size of the dedicated instance.\n"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "schema: Deprecated; Time when the dedicated instance is created.\n",
                        "deprecationMessage": "Use 'created_at' instead"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time when the dedicated instance is created, in RFC-3339 format.\n"
                    },
                    "customIngressPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigInstanceCustomIngressPort:ApigInstanceCustomIngressPort"
                        },
                        "description": "Specified the list of the instance custom ingress ports.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the dedicated instance.\n"
                    },
                    "edition": {
                        "type": "string",
                        "description": "The edition of the dedicated instance.\n"
                    },
                    "egressAddress": {
                        "type": "string",
                        "description": "The egress (NAT) public IP address.\n"
                    },
                    "eipId": {
                        "type": "string",
                        "description": "The EIP ID associated with the dedicated instance.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the dedicated instance belongs.\n"
                    },
                    "ingressAddress": {
                        "type": "string",
                        "description": "The ingress EIP address.\n"
                    },
                    "ingressBandwidthChargingMode": {
                        "type": "string"
                    },
                    "ingressBandwidthSize": {
                        "type": "integer"
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Whether public access with an IPv6 address is supported.\n",
                        "willReplaceOnChanges": true
                    },
                    "loadbalancerProvider": {
                        "type": "string",
                        "description": "The type of loadbalancer provider used by the instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "maintainBegin": {
                        "type": "string",
                        "description": "The start time of the maintenance time window.\n"
                    },
                    "maintainEnd": {
                        "type": "string",
                        "description": "End time of the maintenance time window, 4-hour difference between the start time and end time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the dedicated instance.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to create the dedicated instance resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The ID of the security group to which the dedicated instance belongs to.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the dedicated instance.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The ID of the VPC subnet used to create the dedicated instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "supportedFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The supported features of the dedicated instance.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC used to create the dedicated instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcIngressAddress": {
                        "type": "string",
                        "description": "The ingress private IP address of the VPC.\n"
                    },
                    "vpcepServiceAddress": {
                        "type": "string",
                        "description": "The address (full name) of the VPC endpoint service.\n"
                    },
                    "vpcepServiceName": {
                        "type": "string",
                        "description": "Name of the VPC endpoint service.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigInstanceFeature:ApigInstanceFeature": {
            "properties": {
                "config": {
                    "type": "string",
                    "description": "Specified the detailed configuration of the feature.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specified whether to enable the feature.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specified the ID of the dedicated instance to which the feature belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specified the name of the feature.\n"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "instanceId",
                "name",
                "region"
            ],
            "inputProperties": {
                "config": {
                    "type": "string",
                    "description": "Specified the detailed configuration of the feature.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specified whether to enable the feature.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specified the ID of the dedicated instance to which the feature belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specified the name of the feature.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigInstanceFeature resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "Specified the detailed configuration of the feature.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Specified whether to enable the feature.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specified the ID of the dedicated instance to which the feature belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specified the name of the feature.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigInstanceRoutes:ApigInstanceRoutes": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the routes belong.\n"
                },
                "nexthops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The configuration of the next hop routes.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and routes are located.\n"
                }
            },
            "required": [
                "instanceId",
                "nexthops",
                "region"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the routes belong.\n",
                    "willReplaceOnChanges": true
                },
                "nexthops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The configuration of the next hop routes.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and routes are located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "nexthops"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigInstanceRoutes resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the routes belong.\n",
                        "willReplaceOnChanges": true
                    },
                    "nexthops": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The configuration of the next hop routes.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance and routes are located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigPlugin:ApigPlugin": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The configuration details for plugin.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the plugin.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The plugin description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The plugin name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The plugin type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the plugin.\n"
                }
            },
            "required": [
                "content",
                "createdAt",
                "description",
                "instanceId",
                "name",
                "region",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The configuration details for plugin.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The plugin description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The plugin name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The plugin type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "content",
                "instanceId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigPlugin resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The configuration details for plugin.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the plugin.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The plugin description.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the plugin belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The plugin name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the plugin is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The plugin type.\n",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the plugin.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigPluginAssociate:ApigPluginAssociate": {
            "properties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The APIs bound by the plugin.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the API was published.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs.\n"
                },
                "pluginId": {
                    "type": "string",
                    "description": "The plugin ID.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located.\n"
                }
            },
            "required": [
                "apiIds",
                "envId",
                "instanceId",
                "pluginId",
                "region"
            ],
            "inputProperties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The APIs bound by the plugin.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the API was published.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs.\n",
                    "willReplaceOnChanges": true
                },
                "pluginId": {
                    "type": "string",
                    "description": "The plugin ID.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "apiIds",
                "envId",
                "instanceId",
                "pluginId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigPluginAssociate resources.\n",
                "properties": {
                    "apiIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The APIs bound by the plugin.\n"
                    },
                    "envId": {
                        "type": "string",
                        "description": "The environment ID where the API was published.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the plugin belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "pluginId": {
                        "type": "string",
                        "description": "The plugin ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the plugin is located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigResponse:ApigResponse": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the API custom response.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API custom response belongs.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API group and the API custom response belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API custom response.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API custom response is located.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigResponseRule:ApigResponseRule"
                    },
                    "description": "The API custom response rules definition.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API custom response.\n"
                }
            },
            "required": [
                "createdAt",
                "groupId",
                "instanceId",
                "name",
                "region",
                "rules",
                "updatedAt"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API custom response belongs.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API group and the API custom response belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API custom response.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API custom response is located.\n",
                    "willReplaceOnChanges": true
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigResponseRule:ApigResponseRule"
                    },
                    "description": "The API custom response rules definition.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigResponse resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the API custom response.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the API group to which the API custom response belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API group and the API custom response belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the API custom response.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the API custom response is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigResponseRule:ApigResponseRule"
                        },
                        "description": "The API custom response rules definition.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the API custom response.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigSignature:ApigSignature": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The signature algorithm.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the signature.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the signature belongs.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The signature key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The signature name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature is located.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The signature secret.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The signature type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the signature.\n"
                }
            },
            "required": [
                "algorithm",
                "createdAt",
                "instanceId",
                "key",
                "name",
                "region",
                "secret",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "string",
                    "description": "The signature algorithm.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the signature belongs.\n",
                    "willReplaceOnChanges": true
                },
                "key": {
                    "type": "string",
                    "description": "The signature key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The signature name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature is located.\n",
                    "willReplaceOnChanges": true
                },
                "secret": {
                    "type": "string",
                    "description": "The signature secret.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The signature type.\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigSignature resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "The signature algorithm.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the signature.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the signature belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "key": {
                        "type": "string",
                        "description": "The signature key.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The signature name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the signature is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "secret": {
                        "type": "string",
                        "description": "The signature secret.\n",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The signature type.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the signature.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigSignatureAssociate:ApigSignatureAssociate": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the signature belong.\n"
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the signature.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature and the APIs are located.\n"
                },
                "signatureId": {
                    "type": "string",
                    "description": "The signature ID for APIs binding.\n"
                }
            },
            "required": [
                "instanceId",
                "publishIds",
                "region",
                "signatureId"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the signature belong.\n",
                    "willReplaceOnChanges": true
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the signature.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature and the APIs are located.\n",
                    "willReplaceOnChanges": true
                },
                "signatureId": {
                    "type": "string",
                    "description": "The signature ID for APIs binding.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "publishIds",
                "signatureId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigSignatureAssociate resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the APIs and the signature belong.\n",
                        "willReplaceOnChanges": true
                    },
                    "publishIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The publish IDs corresponding to the APIs bound by the signature.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the signature and the APIs are located.\n",
                        "willReplaceOnChanges": true
                    },
                    "signatureId": {
                        "type": "string",
                        "description": "The signature ID for APIs binding.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigThrottlingPolicy:ApigThrottlingPolicy": {
            "properties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigThrottlingPolicyAppThrottle:ApigThrottlingPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the throttling policy.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description about the API throttling policy.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the throttling policy belongs.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period..\n"
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period.\n"
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period.\n"
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the throttling policy is located.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the request throttling policy.\n"
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigThrottlingPolicyUserThrottle:ApigThrottlingPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit.\n"
                }
            },
            "required": [
                "createdAt",
                "instanceId",
                "maxApiRequests",
                "name",
                "period",
                "region"
            ],
            "inputProperties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigThrottlingPolicyAppThrottle:ApigThrottlingPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description about the API throttling policy.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the throttling policy belongs.\n",
                    "willReplaceOnChanges": true
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period..\n"
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period.\n"
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period.\n"
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the throttling policy is located.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the request throttling policy.\n"
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ApigThrottlingPolicyUserThrottle:ApigThrottlingPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit.\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "maxApiRequests",
                "period"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigThrottlingPolicy resources.\n",
                "properties": {
                    "appThrottles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigThrottlingPolicyAppThrottle:ApigThrottlingPolicyAppThrottle"
                        },
                        "description": "The array of one or more special throttling policies for APP limit.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the throttling policy.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description about the API throttling policy.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the throttling policy belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxApiRequests": {
                        "type": "integer",
                        "description": "The maximum number of times an API can be accessed within a specified period..\n"
                    },
                    "maxAppRequests": {
                        "type": "integer",
                        "description": "The maximum number of times the API can be accessed by an app within the same period.\n"
                    },
                    "maxIpRequests": {
                        "type": "integer",
                        "description": "The maximum number of times the API can be accessed by an IP address within the same period.\n"
                    },
                    "maxUserRequests": {
                        "type": "integer",
                        "description": "The maximum number of times the API can be accessed by a user within the same period.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the throttling policy.\n"
                    },
                    "period": {
                        "type": "integer",
                        "description": "The period of time for limiting the number of API calls.\n"
                    },
                    "periodUnit": {
                        "type": "string",
                        "description": "The time unit for limiting the number of API calls.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the throttling policy is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the request throttling policy.\n"
                    },
                    "userThrottles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ApigThrottlingPolicyUserThrottle:ApigThrottlingPolicyUserThrottle"
                        },
                        "description": "The array of one or more special throttling policies for IAM user limit.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/apigThrottlingPolicyAssociate:ApigThrottlingPolicyAssociate": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the throttling policy belongs.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The ID of the throttling policy.\n"
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the throttling policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and the throttling policy are located.\n"
                }
            },
            "required": [
                "instanceId",
                "policyId",
                "publishIds",
                "region"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the throttling policy belongs.\n",
                    "willReplaceOnChanges": true
                },
                "policyId": {
                    "type": "string",
                    "description": "The ID of the throttling policy.\n",
                    "willReplaceOnChanges": true
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the throttling policy.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and the throttling policy are located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "policyId",
                "publishIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigThrottlingPolicyAssociate resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the APIs and the throttling policy belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The ID of the throttling policy.\n",
                        "willReplaceOnChanges": true
                    },
                    "publishIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The publish IDs corresponding to the APIs bound by the throttling policy.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance and the throttling policy are located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/asBandwidthPolicy:AsBandwidthPolicy": {
            "properties": {
                "alarmId": {
                    "type": "string",
                    "description": "Specifies the alarm rule ID.\n"
                },
                "bandwidthId": {
                    "type": "string",
                    "description": "Specifies the scaling bandwidth ID.\n"
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "Specifies the cooldown period (in seconds).\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the AS policy.\n"
                },
                "region": {
                    "type": "string"
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/sbercloud:index/AsBandwidthPolicyScalingPolicyAction:AsBandwidthPolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string",
                    "description": "Specifies the AS policy name.\n"
                },
                "scalingPolicyType": {
                    "type": "string",
                    "description": "Specifies the AS policy type.\n"
                },
                "scalingResourceType": {
                    "type": "string",
                    "description": "the scaling resource type.\n"
                },
                "scheduledPolicy": {
                    "$ref": "#/types/sbercloud:index/AsBandwidthPolicyScheduledPolicy:AsBandwidthPolicyScheduledPolicy"
                },
                "status": {
                    "type": "string",
                    "description": "the AS policy status.\n"
                }
            },
            "required": [
                "alarmId",
                "bandwidthId",
                "coolDownTime",
                "description",
                "region",
                "scalingPolicyAction",
                "scalingPolicyName",
                "scalingPolicyType",
                "scalingResourceType",
                "scheduledPolicy",
                "status"
            ],
            "inputProperties": {
                "alarmId": {
                    "type": "string",
                    "description": "Specifies the alarm rule ID.\n"
                },
                "bandwidthId": {
                    "type": "string",
                    "description": "Specifies the scaling bandwidth ID.\n"
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "Specifies the cooldown period (in seconds).\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the AS policy.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/sbercloud:index/AsBandwidthPolicyScalingPolicyAction:AsBandwidthPolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string",
                    "description": "Specifies the AS policy name.\n"
                },
                "scalingPolicyType": {
                    "type": "string",
                    "description": "Specifies the AS policy type.\n"
                },
                "scheduledPolicy": {
                    "$ref": "#/types/sbercloud:index/AsBandwidthPolicyScheduledPolicy:AsBandwidthPolicyScheduledPolicy"
                }
            },
            "requiredInputs": [
                "bandwidthId",
                "scalingPolicyName",
                "scalingPolicyType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AsBandwidthPolicy resources.\n",
                "properties": {
                    "alarmId": {
                        "type": "string",
                        "description": "Specifies the alarm rule ID.\n"
                    },
                    "bandwidthId": {
                        "type": "string",
                        "description": "Specifies the scaling bandwidth ID.\n"
                    },
                    "coolDownTime": {
                        "type": "integer",
                        "description": "Specifies the cooldown period (in seconds).\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the AS policy.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingPolicyAction": {
                        "$ref": "#/types/sbercloud:index/AsBandwidthPolicyScalingPolicyAction:AsBandwidthPolicyScalingPolicyAction"
                    },
                    "scalingPolicyName": {
                        "type": "string",
                        "description": "Specifies the AS policy name.\n"
                    },
                    "scalingPolicyType": {
                        "type": "string",
                        "description": "Specifies the AS policy type.\n"
                    },
                    "scalingResourceType": {
                        "type": "string",
                        "description": "the scaling resource type.\n"
                    },
                    "scheduledPolicy": {
                        "$ref": "#/types/sbercloud:index/AsBandwidthPolicyScheduledPolicy:AsBandwidthPolicyScheduledPolicy"
                    },
                    "status": {
                        "type": "string",
                        "description": "the AS policy status.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/asConfiguration:AsConfiguration": {
            "properties": {
                "instanceConfig": {
                    "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfig:AsConfigurationInstanceConfig"
                },
                "region": {
                    "type": "string"
                },
                "scalingConfigurationName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "instanceConfig",
                "region",
                "scalingConfigurationName",
                "status"
            ],
            "inputProperties": {
                "instanceConfig": {
                    "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfig:AsConfigurationInstanceConfig",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingConfigurationName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceConfig",
                "scalingConfigurationName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AsConfiguration resources.\n",
                "properties": {
                    "instanceConfig": {
                        "$ref": "#/types/sbercloud:index/AsConfigurationInstanceConfig:AsConfigurationInstanceConfig",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingConfigurationName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/asGroup:AsGroup": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; use availability_zones instead\n"
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "The cooling duration, in seconds.\n"
                },
                "currentInstanceNumber": {
                    "type": "integer"
                },
                "deleteInstances": {
                    "type": "string",
                    "description": "Whether to delete instances when they are removed from the AS group.\n"
                },
                "deletePublicip": {
                    "type": "boolean"
                },
                "deleteVolume": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "desireInstanceNumber": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "healthPeriodicAuditGracePeriod": {
                    "type": "integer",
                    "description": "The health check grace period for instances, in seconds.\n"
                },
                "healthPeriodicAuditMethod": {
                    "type": "string"
                },
                "healthPeriodicAuditTime": {
                    "type": "integer",
                    "description": "The health check period for instances, in minutes.\n"
                },
                "instanceTerminatePolicy": {
                    "type": "string"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The instances id list in the as group.\n"
                },
                "lbListenerId": {
                    "type": "string",
                    "description": "The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.\n",
                    "deprecationMessage": "use lbaas_listeners instead"
                },
                "lbaasListeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsGroupLbaasListener:AsGroupLbaasListener"
                    }
                },
                "maxInstanceNumber": {
                    "type": "integer"
                },
                "minInstanceNumber": {
                    "type": "integer"
                },
                "multiAzScalingPolicy": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsGroupNetwork:AsGroupNetwork"
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The notification mode has been canceled\n"
                },
                "region": {
                    "type": "string"
                },
                "scalingConfigurationId": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "scalingGroupName": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsGroupSecurityGroup:AsGroupSecurityGroup"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "agencyName",
                "availabilityZones",
                "currentInstanceNumber",
                "deleteVolume",
                "description",
                "desireInstanceNumber",
                "enterpriseProjectId",
                "healthPeriodicAuditGracePeriod",
                "instances",
                "lbaasListeners",
                "multiAzScalingPolicy",
                "networks",
                "region",
                "scalingConfigurationId",
                "scalingGroupName",
                "securityGroups",
                "status",
                "vpcId"
            ],
            "inputProperties": {
                "agencyName": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; use availability_zones instead\n"
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "The cooling duration, in seconds.\n"
                },
                "deleteInstances": {
                    "type": "string",
                    "description": "Whether to delete instances when they are removed from the AS group.\n"
                },
                "deletePublicip": {
                    "type": "boolean"
                },
                "deleteVolume": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "desireInstanceNumber": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "healthPeriodicAuditGracePeriod": {
                    "type": "integer",
                    "description": "The health check grace period for instances, in seconds.\n"
                },
                "healthPeriodicAuditMethod": {
                    "type": "string"
                },
                "healthPeriodicAuditTime": {
                    "type": "integer",
                    "description": "The health check period for instances, in minutes.\n"
                },
                "instanceTerminatePolicy": {
                    "type": "string"
                },
                "lbListenerId": {
                    "type": "string",
                    "description": "The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.\n",
                    "deprecationMessage": "use lbaas_listeners instead"
                },
                "lbaasListeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsGroupLbaasListener:AsGroupLbaasListener"
                    }
                },
                "maxInstanceNumber": {
                    "type": "integer"
                },
                "minInstanceNumber": {
                    "type": "integer"
                },
                "multiAzScalingPolicy": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsGroupNetwork:AsGroupNetwork"
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The notification mode has been canceled\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingConfigurationId": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "scalingGroupName": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/AsGroupSecurityGroup:AsGroupSecurityGroup"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networks",
                "scalingGroupName",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AsGroup resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; use availability_zones instead\n"
                    },
                    "coolDownTime": {
                        "type": "integer",
                        "description": "The cooling duration, in seconds.\n"
                    },
                    "currentInstanceNumber": {
                        "type": "integer"
                    },
                    "deleteInstances": {
                        "type": "string",
                        "description": "Whether to delete instances when they are removed from the AS group.\n"
                    },
                    "deletePublicip": {
                        "type": "boolean"
                    },
                    "deleteVolume": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "desireInstanceNumber": {
                        "type": "integer"
                    },
                    "enable": {
                        "type": "boolean"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "forceDelete": {
                        "type": "boolean"
                    },
                    "healthPeriodicAuditGracePeriod": {
                        "type": "integer",
                        "description": "The health check grace period for instances, in seconds.\n"
                    },
                    "healthPeriodicAuditMethod": {
                        "type": "string"
                    },
                    "healthPeriodicAuditTime": {
                        "type": "integer",
                        "description": "The health check period for instances, in minutes.\n"
                    },
                    "instanceTerminatePolicy": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The instances id list in the as group.\n"
                    },
                    "lbListenerId": {
                        "type": "string",
                        "description": "The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.\n",
                        "deprecationMessage": "use lbaas_listeners instead"
                    },
                    "lbaasListeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/AsGroupLbaasListener:AsGroupLbaasListener"
                        }
                    },
                    "maxInstanceNumber": {
                        "type": "integer"
                    },
                    "minInstanceNumber": {
                        "type": "integer"
                    },
                    "multiAzScalingPolicy": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/AsGroupNetwork:AsGroupNetwork"
                        }
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; The notification mode has been canceled\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingConfigurationId": {
                        "type": "string",
                        "description": "schema: Required\n"
                    },
                    "scalingGroupName": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/AsGroupSecurityGroup:AsGroupSecurityGroup"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/asPolicy:AsPolicy": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "alarmId": {
                    "type": "string"
                },
                "coolDownTime": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "scalingGroupId": {
                    "type": "string"
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/sbercloud:index/AsPolicyScalingPolicyAction:AsPolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string"
                },
                "scalingPolicyType": {
                    "type": "string"
                },
                "scheduledPolicy": {
                    "$ref": "#/types/sbercloud:index/AsPolicyScheduledPolicy:AsPolicyScheduledPolicy"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "coolDownTime",
                "region",
                "scalingGroupId",
                "scalingPolicyAction",
                "scalingPolicyName",
                "scalingPolicyType",
                "scheduledPolicy",
                "status"
            ],
            "inputProperties": {
                "action": {
                    "type": "string"
                },
                "alarmId": {
                    "type": "string"
                },
                "coolDownTime": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/sbercloud:index/AsPolicyScalingPolicyAction:AsPolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string"
                },
                "scalingPolicyType": {
                    "type": "string"
                },
                "scheduledPolicy": {
                    "$ref": "#/types/sbercloud:index/AsPolicyScheduledPolicy:AsPolicyScheduledPolicy"
                }
            },
            "requiredInputs": [
                "scalingGroupId",
                "scalingPolicyName",
                "scalingPolicyType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AsPolicy resources.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "alarmId": {
                        "type": "string"
                    },
                    "coolDownTime": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingPolicyAction": {
                        "$ref": "#/types/sbercloud:index/AsPolicyScalingPolicyAction:AsPolicyScalingPolicyAction"
                    },
                    "scalingPolicyName": {
                        "type": "string"
                    },
                    "scalingPolicyType": {
                        "type": "string"
                    },
                    "scheduledPolicy": {
                        "$ref": "#/types/sbercloud:index/AsPolicyScheduledPolicy:AsPolicyScheduledPolicy"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbhAssetAgencyAuthorization:CbhAssetAgencyAuthorization": {
            "properties": {
                "csms": {
                    "type": "boolean"
                },
                "kms": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "csms",
                "kms",
                "region"
            ],
            "inputProperties": {
                "csms": {
                    "type": "boolean"
                },
                "kms": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "csms",
                "kms"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbhAssetAgencyAuthorization resources.\n",
                "properties": {
                    "csms": {
                        "type": "boolean"
                    },
                    "kms": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbhHaInstance:CbhHaInstance": {
            "properties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH HA instance.\n"
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled.\n"
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH HA instance.\n"
                },
                "dataDiskSize": {
                    "type": "number",
                    "description": "The data disk size of the CBH HA instance.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH HA instance belongs.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server.\n"
                },
                "floatingIp": {
                    "type": "string",
                    "description": "Specifies the floating IP address of the CBH HA instance.\n"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled.\n"
                },
                "masterAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the master instance.\n"
                },
                "masterId": {
                    "type": "string",
                    "description": "The ID of the master instance.\n"
                },
                "masterPrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the master instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH HA instance.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.\n",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH HA instance.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the CBH HA instance.\n"
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH HA instance is created.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "The elastic IP address.\n"
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the CBH HA instance.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group.\n"
                },
                "slaveAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the slave instance.\n"
                },
                "slaveId": {
                    "type": "string",
                    "description": "The ID of the slave instance.\n"
                },
                "slavePrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the slave instance.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the CBH HA instance.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "The current version of the CBH HA instance image.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC.\n"
                }
            },
            "required": [
                "chargingMode",
                "dataDiskSize",
                "enterpriseProjectId",
                "flavorId",
                "floatingIp",
                "masterAvailabilityZone",
                "masterId",
                "masterPrivateIp",
                "name",
                "password",
                "period",
                "periodUnit",
                "publicIp",
                "region",
                "securityGroupId",
                "slaveAvailabilityZone",
                "slaveId",
                "slavePrivateIp",
                "status",
                "subnetId",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH HA instance.\n"
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled.\n"
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH HA instance.\n",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH HA instance belongs.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server.\n"
                },
                "floatingIp": {
                    "type": "string",
                    "description": "Specifies the floating IP address of the CBH HA instance.\n"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled.\n",
                    "willReplaceOnChanges": true
                },
                "masterAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the master instance.\n",
                    "willReplaceOnChanges": true
                },
                "masterPrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the master instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH HA instance.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.\n",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH HA instance.\n",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the CBH HA instance.\n",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH HA instance is created.\n"
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the CBH HA instance.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group.\n"
                },
                "slaveAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the slave instance.\n",
                    "willReplaceOnChanges": true
                },
                "slavePrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the slave instance.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC.\n"
                }
            },
            "requiredInputs": [
                "chargingMode",
                "flavorId",
                "masterAvailabilityZone",
                "password",
                "period",
                "periodUnit",
                "securityGroupId",
                "slaveAvailabilityZone",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbhHaInstance resources.\n",
                "properties": {
                    "attachDiskSize": {
                        "type": "integer",
                        "description": "Specifies the size of the additional data disk for the CBH HA instance.\n"
                    },
                    "autoRenew": {
                        "type": "string",
                        "description": "Specifies whether auto renew is enabled.\n"
                    },
                    "chargingMode": {
                        "type": "string",
                        "description": "Specifies the charging mode of the CBH HA instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "dataDiskSize": {
                        "type": "number",
                        "description": "The data disk size of the CBH HA instance.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID to which the CBH HA instance belongs.\n"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Specifies the product ID of the CBH server.\n"
                    },
                    "floatingIp": {
                        "type": "string",
                        "description": "Specifies the floating IP address of the CBH HA instance.\n"
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Specifies whether the IPv6 network is enabled.\n",
                        "willReplaceOnChanges": true
                    },
                    "masterAvailabilityZone": {
                        "type": "string",
                        "description": "Specifies the availability zone name of the master instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "masterId": {
                        "type": "string",
                        "description": "The ID of the master instance.\n"
                    },
                    "masterPrivateIp": {
                        "type": "string",
                        "description": "Specifies the private IP address of the master instance.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the CBH HA instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password for logging in to the management console.\n",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "description": "Specifies the charging period of the CBH HA instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "description": "Specifies the charging period unit of the CBH HA instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string",
                        "description": "Specifies the power action after the CBH HA instance is created.\n"
                    },
                    "publicIp": {
                        "type": "string",
                        "description": "The elastic IP address.\n"
                    },
                    "publicIpId": {
                        "type": "string",
                        "description": "Specifies the ID of the elastic IP.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Specifies the region in which to create the CBH HA instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "Specifies the IDs of the security group.\n"
                    },
                    "slaveAvailabilityZone": {
                        "type": "string",
                        "description": "Specifies the availability zone name of the slave instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "slaveId": {
                        "type": "string",
                        "description": "The ID of the slave instance.\n"
                    },
                    "slavePrivateIp": {
                        "type": "string",
                        "description": "Specifies the private IP address of the slave instance.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the CBH HA instance.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "Specifies the ID of a subnet.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string",
                        "description": "The current version of the CBH HA instance image.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "Specifies the ID of a VPC.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbhInstance:CbhInstance": {
            "properties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH instance.\n"
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled.\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name.\n"
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH instance.\n"
                },
                "dataDiskSize": {
                    "type": "number",
                    "description": "Indicates the data disk size of the instance.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH instance belongs.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server.\n"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH instance.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.\n",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH instance.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the instance.\n"
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH instance is created.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP of the instance.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "schema: Computed; The elastic IP address.\n"
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP.\n"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the instance.\n"
                },
                "subnetAddress": {
                    "type": "string",
                    "description": "Specifies the IP address of the subnet.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Indicates the current version of the instance image.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC.\n"
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "dataDiskSize",
                "enterpriseProjectId",
                "flavorId",
                "name",
                "password",
                "period",
                "periodUnit",
                "privateIp",
                "publicIp",
                "region",
                "securityGroupId",
                "status",
                "subnetAddress",
                "subnetId",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH instance.\n"
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled.\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name.\n",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH instance.\n",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH instance belongs.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server.\n"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH instance.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.\n",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH instance.\n",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the instance.\n",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH instance is created.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "schema: Computed; The elastic IP address.\n"
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group.\n"
                },
                "subnetAddress": {
                    "type": "string",
                    "description": "Specifies the IP address of the subnet.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC.\n"
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "chargingMode",
                "flavorId",
                "password",
                "period",
                "periodUnit",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbhInstance resources.\n",
                "properties": {
                    "attachDiskSize": {
                        "type": "integer",
                        "description": "Specifies the size of the additional data disk for the CBH instance.\n"
                    },
                    "autoRenew": {
                        "type": "string",
                        "description": "Specifies whether auto renew is enabled.\n"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "Specifies the availability zone name.\n",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "description": "Specifies the charging mode of the CBH instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "dataDiskSize": {
                        "type": "number",
                        "description": "Indicates the data disk size of the instance.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID to which the CBH instance belongs.\n"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Specifies the product ID of the CBH server.\n"
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Specifies whether the IPv6 network is enabled.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the CBH instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password for logging in to the management console.\n",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "description": "Specifies the charging period of the CBH instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "description": "Specifies the charging period unit of the instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string",
                        "description": "Specifies the power action after the CBH instance is created.\n"
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "Indicates the private IP of the instance.\n"
                    },
                    "publicIp": {
                        "type": "string",
                        "description": "schema: Computed; The elastic IP address.\n"
                    },
                    "publicIpId": {
                        "type": "string",
                        "description": "Specifies the ID of the elastic IP.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "Specifies the IDs of the security group.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of the instance.\n"
                    },
                    "subnetAddress": {
                        "type": "string",
                        "description": "Specifies the IP address of the subnet.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "Specifies the ID of a subnet.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string",
                        "description": "Indicates the current version of the instance image.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "Specifies the ID of a VPC.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbrBackupShare:CbrBackupShare": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "The backup ID.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrBackupShareMember:CbrBackupShareMember"
                    },
                    "description": "The list of shared members configuration.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the shared backup is located.\n"
                }
            },
            "required": [
                "backupId",
                "members",
                "region"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "description": "The backup ID.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrBackupShareMember:CbrBackupShareMember"
                    },
                    "description": "The list of shared members configuration.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the shared backup is located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupId",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrBackupShare resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "description": "The backup ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CbrBackupShareMember:CbrBackupShareMember"
                        },
                        "description": "The list of shared members configuration.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the shared backup is located.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbrBackupShareAccepter:CbrBackupShareAccepter": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "The ID of the shared source backup.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the backup will be stored.\n"
                },
                "sourceProjectId": {
                    "type": "string",
                    "description": "The ID of the project to which the source backup belongs.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault which the backup will be stored.\n"
                }
            },
            "required": [
                "backupId",
                "region",
                "sourceProjectId",
                "vaultId"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "description": "The ID of the shared source backup.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the backup will be stored.\n",
                    "willReplaceOnChanges": true
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault which the backup will be stored.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupId",
                "vaultId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrBackupShareAccepter resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "description": "The ID of the shared source backup.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the backup will be stored.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceProjectId": {
                        "type": "string",
                        "description": "The ID of the project to which the source backup belongs.\n"
                    },
                    "vaultId": {
                        "type": "string",
                        "description": "The ID of the vault which the backup will be stored.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbrCheckpoint:CbrCheckpoint": {
            "properties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrCheckpointBackup:CbrCheckpointBackup"
                    },
                    "description": "The list of backups configuration.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the checkpoint.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the checkpoint.\n"
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backups are incremental backups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the checkpoint.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault and backup resources are located.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the checkpoint.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the checkpoint to create.\n"
                }
            },
            "required": [
                "backups",
                "createdAt",
                "name",
                "region",
                "status",
                "vaultId"
            ],
            "inputProperties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrCheckpointBackup:CbrCheckpointBackup"
                    },
                    "description": "The list of backups configuration.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the checkpoint.\n",
                    "willReplaceOnChanges": true
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backups are incremental backups.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the checkpoint.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault and backup resources are located.\n",
                    "willReplaceOnChanges": true
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the checkpoint to create.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backups",
                "vaultId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrCheckpoint resources.\n",
                "properties": {
                    "backups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CbrCheckpointBackup:CbrCheckpointBackup"
                        },
                        "description": "The list of backups configuration.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the checkpoint.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the checkpoint.\n",
                        "willReplaceOnChanges": true
                    },
                    "incremental": {
                        "type": "boolean",
                        "description": "Whether the backups are incremental backups.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the checkpoint.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the vault and backup resources are located.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the checkpoint.\n"
                    },
                    "vaultId": {
                        "type": "string",
                        "description": "The ID of the vault where the checkpoint to create.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbrPolicy:CbrPolicy": {
            "properties": {
                "backupCycle": {
                    "$ref": "#/types/sbercloud:index/CbrPolicyBackupCycle:CbrPolicyBackupCycle",
                    "description": "The scheduling rule for the CBR policy backup execution.\n"
                },
                "backupQuantity": {
                    "type": "integer",
                    "description": "The maximum number of retained backups.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The name of the replication destination region.\n"
                },
                "enableAcceleration": {
                    "type": "boolean",
                    "description": "Whether to enable the acceleration function to shorten the replication time for cross-region\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the CBR policy.\n"
                },
                "longTermRetention": {
                    "$ref": "#/types/sbercloud:index/CbrPolicyLongTermRetention:CbrPolicyLongTermRetention",
                    "description": "The long-term retention rules.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The policy name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the policy is located.\n"
                },
                "timePeriod": {
                    "type": "integer",
                    "description": "The duration (in days) for retained backups.\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The UTC time zone.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protection type of the CBR policy.\n"
                }
            },
            "required": [
                "backupCycle",
                "name",
                "region",
                "timeZone",
                "type"
            ],
            "inputProperties": {
                "backupCycle": {
                    "$ref": "#/types/sbercloud:index/CbrPolicyBackupCycle:CbrPolicyBackupCycle",
                    "description": "The scheduling rule for the CBR policy backup execution.\n"
                },
                "backupQuantity": {
                    "type": "integer",
                    "description": "The maximum number of retained backups.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The name of the replication destination region.\n"
                },
                "enableAcceleration": {
                    "type": "boolean",
                    "description": "Whether to enable the acceleration function to shorten the replication time for cross-region\n",
                    "willReplaceOnChanges": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the CBR policy.\n"
                },
                "longTermRetention": {
                    "$ref": "#/types/sbercloud:index/CbrPolicyLongTermRetention:CbrPolicyLongTermRetention",
                    "description": "The long-term retention rules.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The policy name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the policy is located.\n",
                    "willReplaceOnChanges": true
                },
                "timePeriod": {
                    "type": "integer",
                    "description": "The duration (in days) for retained backups.\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The UTC time zone.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protection type of the CBR policy.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupCycle",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrPolicy resources.\n",
                "properties": {
                    "backupCycle": {
                        "$ref": "#/types/sbercloud:index/CbrPolicyBackupCycle:CbrPolicyBackupCycle",
                        "description": "The scheduling rule for the CBR policy backup execution.\n"
                    },
                    "backupQuantity": {
                        "type": "integer",
                        "description": "The maximum number of retained backups.\n"
                    },
                    "destinationProjectId": {
                        "type": "string",
                        "description": "The ID of the replication destination project.\n"
                    },
                    "destinationRegion": {
                        "type": "string",
                        "description": "The name of the replication destination region.\n"
                    },
                    "enableAcceleration": {
                        "type": "boolean",
                        "description": "Whether to enable the acceleration function to shorten the replication time for cross-region\n",
                        "willReplaceOnChanges": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable the CBR policy.\n"
                    },
                    "longTermRetention": {
                        "$ref": "#/types/sbercloud:index/CbrPolicyLongTermRetention:CbrPolicyLongTermRetention",
                        "description": "The long-term retention rules.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The policy name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the policy is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "timePeriod": {
                        "type": "integer",
                        "description": "The duration (in days) for retained backups.\n"
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "The UTC time zone.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The protection type of the CBR policy.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cbrVault:CbrVault": {
            "properties": {
                "allocated": {
                    "type": "number",
                    "description": "The allocated capacity, in GB.\n"
                },
                "autoBind": {
                    "type": "boolean",
                    "description": "Whether automatic association is supported.\n"
                },
                "autoExpand": {
                    "type": "boolean",
                    "description": "Whether to enable auto capacity expansion for the vault.\n"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "backupNamePrefix": {
                    "type": "string",
                    "description": "The backup name prefix.\n"
                },
                "bindRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The rules for automatic association.\n"
                },
                "chargingMode": {
                    "type": "string"
                },
                "cloudType": {
                    "type": "string",
                    "description": "The cloud type of the vault.\n"
                },
                "consistentLevel": {
                    "type": "string",
                    "description": "The consistent level (specification) of the vault.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the vault belongs.\n"
                },
                "isMultiAz": {
                    "type": "boolean",
                    "description": "Whether multiple availability zones are used for backing up.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the vault.\n"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrVaultPolicy:CbrVaultPolicy"
                    },
                    "description": "The policy details to associate with the CBR vault.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "schema:Deprecated; Using parameter 'policy' instead.\n"
                },
                "protectionType": {
                    "type": "string",
                    "description": "The protection type of the vault.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault is located.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrVaultResource:CbrVaultResource"
                    },
                    "description": "The array of one or more resources to attach to the CBR vault.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The capacity of the vault, in GB.\n"
                },
                "specCode": {
                    "type": "string",
                    "description": "The specification code.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The vault status.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "The name of the bucket for the vault.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the vault.\n"
                },
                "used": {
                    "type": "number",
                    "description": "The used capacity, in GB.\n"
                }
            },
            "required": [
                "allocated",
                "autoBind",
                "autoExpand",
                "backupNamePrefix",
                "chargingMode",
                "cloudType",
                "enterpriseProjectId",
                "isMultiAz",
                "name",
                "policies",
                "protectionType",
                "region",
                "resources",
                "size",
                "specCode",
                "status",
                "storage",
                "type",
                "used"
            ],
            "inputProperties": {
                "autoBind": {
                    "type": "boolean",
                    "description": "Whether automatic association is supported.\n"
                },
                "autoExpand": {
                    "type": "boolean",
                    "description": "Whether to enable auto capacity expansion for the vault.\n"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "backupNamePrefix": {
                    "type": "string",
                    "description": "The backup name prefix.\n",
                    "willReplaceOnChanges": true
                },
                "bindRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The rules for automatic association.\n"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cloudType": {
                    "type": "string",
                    "description": "The cloud type of the vault.\n",
                    "willReplaceOnChanges": true
                },
                "consistentLevel": {
                    "type": "string",
                    "description": "The consistent level (specification) of the vault.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the vault belongs.\n"
                },
                "isMultiAz": {
                    "type": "boolean",
                    "description": "Whether multiple availability zones are used for backing up.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the vault.\n"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrVaultPolicy:CbrVaultPolicy"
                    },
                    "description": "The policy details to associate with the CBR vault.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "schema:Deprecated; Using parameter 'policy' instead.\n"
                },
                "protectionType": {
                    "type": "string",
                    "description": "The protection type of the vault.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault is located.\n",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CbrVaultResource:CbrVaultResource"
                    },
                    "description": "The array of one or more resources to attach to the CBR vault.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The capacity of the vault, in GB.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the vault.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "protectionType",
                "size",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrVault resources.\n",
                "properties": {
                    "allocated": {
                        "type": "number",
                        "description": "The allocated capacity, in GB.\n"
                    },
                    "autoBind": {
                        "type": "boolean",
                        "description": "Whether automatic association is supported.\n"
                    },
                    "autoExpand": {
                        "type": "boolean",
                        "description": "Whether to enable auto capacity expansion for the vault.\n"
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "backupNamePrefix": {
                        "type": "string",
                        "description": "The backup name prefix.\n",
                        "willReplaceOnChanges": true
                    },
                    "bindRules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The rules for automatic association.\n"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cloudType": {
                        "type": "string",
                        "description": "The cloud type of the vault.\n",
                        "willReplaceOnChanges": true
                    },
                    "consistentLevel": {
                        "type": "string",
                        "description": "The consistent level (specification) of the vault.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the vault belongs.\n"
                    },
                    "isMultiAz": {
                        "type": "boolean",
                        "description": "Whether multiple availability zones are used for backing up.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the vault.\n"
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CbrVaultPolicy:CbrVaultPolicy"
                        },
                        "description": "The policy details to associate with the CBR vault.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "schema:Deprecated; Using parameter 'policy' instead.\n"
                    },
                    "protectionType": {
                        "type": "string",
                        "description": "The protection type of the vault.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the vault is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CbrVaultResource:CbrVaultResource"
                        },
                        "description": "The array of one or more resources to attach to the CBR vault.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The capacity of the vault, in GB.\n"
                    },
                    "specCode": {
                        "type": "string",
                        "description": "The specification code.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The vault status.\n"
                    },
                    "storage": {
                        "type": "string",
                        "description": "The name of the bucket for the vault.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the vault.\n",
                        "willReplaceOnChanges": true
                    },
                    "used": {
                        "type": "number",
                        "description": "The used capacity, in GB.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cceAddon:CceAddon": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/types/sbercloud:index/CceAddonValues:CceAddonValues"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "description",
                "region",
                "status",
                "templateName",
                "version"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "templateName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "values": {
                    "$ref": "#/types/sbercloud:index/CceAddonValues:CceAddonValues"
                },
                "version": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clusterId",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceAddon resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "values": {
                        "$ref": "#/types/sbercloud:index/CceAddonValues:CceAddonValues"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cceCluster:CceCluster": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n"
                },
                "authenticatingProxyCa": {
                    "type": "string"
                },
                "authenticatingProxyCert": {
                    "type": "string"
                },
                "authenticatingProxyPrivateKey": {
                    "type": "string"
                },
                "authenticationMode": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "category": {
                    "type": "string"
                },
                "certificateClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterCertificateCluster:CceClusterCertificateCluster"
                    }
                },
                "certificateUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterCertificateUser:CceClusterCertificateUser"
                    }
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterType": {
                    "type": "string"
                },
                "clusterVersion": {
                    "type": "string"
                },
                "componentConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterComponentConfiguration:CceClusterComponentConfiguration"
                    }
                },
                "containerNetworkCidr": {
                    "type": "string"
                },
                "containerNetworkType": {
                    "type": "string"
                },
                "customSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deleteAll": {
                    "type": "string"
                },
                "deleteEfs": {
                    "type": "string"
                },
                "deleteEni": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "deleteEvs": {
                    "type": "string"
                },
                "deleteNet": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "deleteObs": {
                    "type": "string"
                },
                "deleteSfs": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "eip": {
                    "type": "string"
                },
                "enableDistributeManagement": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "eniSubnetCidr": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "eniSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the ENI resides\n"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n"
                },
                "extendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterExtendParam:CceClusterExtendParam"
                    }
                },
                "flavorId": {
                    "type": "string"
                },
                "hibernate": {
                    "type": "boolean"
                },
                "highwaySubnetId": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "kubeConfigRaw": {
                    "type": "string"
                },
                "kubeProxyMode": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n"
                },
                "ltsReclaimPolicy": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterMaster:CceClusterMaster"
                    }
                },
                "multiAz": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "serviceNetworkCidr": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "supportIstio": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "alias",
                "billingMode",
                "category",
                "certificateClusters",
                "certificateUsers",
                "chargingMode",
                "clusterVersion",
                "containerNetworkCidr",
                "containerNetworkType",
                "customSans",
                "description",
                "eniSubnetCidr",
                "eniSubnetId",
                "enterpriseProjectId",
                "flavorId",
                "highwaySubnetId",
                "ipv6Enable",
                "kubeConfigRaw",
                "kubeProxyMode",
                "masters",
                "name",
                "region",
                "securityGroupId",
                "serviceNetworkCidr",
                "status",
                "subnetId",
                "supportIstio",
                "vpcId"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "authenticatingProxyCa": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "authenticatingProxyCert": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "authenticatingProxyPrivateKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "authenticationMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clusterType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clusterVersion": {
                    "type": "string"
                },
                "componentConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterComponentConfiguration:CceClusterComponentConfiguration"
                    }
                },
                "containerNetworkCidr": {
                    "type": "string"
                },
                "containerNetworkType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "customSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deleteAll": {
                    "type": "string"
                },
                "deleteEfs": {
                    "type": "string"
                },
                "deleteEni": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "deleteEvs": {
                    "type": "string"
                },
                "deleteNet": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "deleteObs": {
                    "type": "string"
                },
                "deleteSfs": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "eip": {
                    "type": "string"
                },
                "enableDistributeManagement": {
                    "type": "boolean",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "eniSubnetCidr": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "eniSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the ENI resides\n"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterExtendParam:CceClusterExtendParam"
                    },
                    "willReplaceOnChanges": true
                },
                "flavorId": {
                    "type": "string"
                },
                "hibernate": {
                    "type": "boolean"
                },
                "highwaySubnetId": {
                    "type": "string",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "kubeProxyMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "ltsReclaimPolicy": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceClusterMaster:CceClusterMaster"
                    },
                    "willReplaceOnChanges": true
                },
                "multiAz": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "serviceNetworkCidr": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "supportIstio": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "containerNetworkType",
                "flavorId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceCluster resources.\n",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal\n",
                        "willReplaceOnChanges": true
                    },
                    "authenticatingProxyCa": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "authenticatingProxyCert": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "authenticatingProxyPrivateKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "authenticationMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "billingMode": {
                        "type": "integer",
                        "deprecationMessage": "use charging_mode instead",
                        "willReplaceOnChanges": true
                    },
                    "category": {
                        "type": "string"
                    },
                    "certificateClusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceClusterCertificateCluster:CceClusterCertificateCluster"
                        }
                    },
                    "certificateUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceClusterCertificateUser:CceClusterCertificateUser"
                        }
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clusterType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clusterVersion": {
                        "type": "string"
                    },
                    "componentConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceClusterComponentConfiguration:CceClusterComponentConfiguration"
                        }
                    },
                    "containerNetworkCidr": {
                        "type": "string"
                    },
                    "containerNetworkType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "customSans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deleteAll": {
                        "type": "string"
                    },
                    "deleteEfs": {
                        "type": "string"
                    },
                    "deleteEni": {
                        "type": "string",
                        "description": "schema: Internal\n"
                    },
                    "deleteEvs": {
                        "type": "string"
                    },
                    "deleteNet": {
                        "type": "string",
                        "description": "schema: Internal\n"
                    },
                    "deleteObs": {
                        "type": "string"
                    },
                    "deleteSfs": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "eip": {
                        "type": "string"
                    },
                    "enableDistributeManagement": {
                        "type": "boolean",
                        "description": "schema: Internal\n",
                        "willReplaceOnChanges": true
                    },
                    "eniSubnetCidr": {
                        "type": "string",
                        "description": "schema: Computed\n"
                    },
                    "eniSubnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet where the ENI resides\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendParam": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal\n",
                        "willReplaceOnChanges": true
                    },
                    "extendParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceClusterExtendParam:CceClusterExtendParam"
                        },
                        "willReplaceOnChanges": true
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hibernate": {
                        "type": "boolean"
                    },
                    "highwaySubnetId": {
                        "type": "string",
                        "description": "schema: Internal\n",
                        "willReplaceOnChanges": true
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "kubeConfigRaw": {
                        "type": "string"
                    },
                    "kubeProxyMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal\n",
                        "willReplaceOnChanges": true
                    },
                    "ltsReclaimPolicy": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceClusterMaster:CceClusterMaster"
                        },
                        "willReplaceOnChanges": true
                    },
                    "multiAz": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "serviceNetworkCidr": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "supportIstio": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cceNamespace:CceNamespace": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "creationTimestamp": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "annotations",
                "clusterId",
                "creationTimestamp",
                "labels",
                "name",
                "region",
                "status"
            ],
            "inputProperties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "prefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceNamespace resources.\n",
                "properties": {
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "prefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cceNode:CceNode": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bandwidthChargeMode": {
                    "type": "string"
                },
                "bandwidthSize": {
                    "type": "integer"
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeDataVolume:CceNodeDataVolume"
                    }
                },
                "dedicatedHostId": {
                    "type": "string"
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "ecsPerformanceType": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "eipId": {
                    "type": "string"
                },
                "eipIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "use eip_id instead"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated\n"
                },
                "extendParamChargingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "extendParams": {
                    "$ref": "#/types/sbercloud:index/CceNodeExtendParams:CceNodeExtendParams"
                },
                "extensionNics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeExtensionNic:CceNodeExtensionNic"
                    }
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/sbercloud:index/CceNodeHostnameConfig:CceNodeHostnameConfig"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "iptype": {
                    "type": "string"
                },
                "keepEcs": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string",
                    "deprecationMessage": "will be removed after v1.26.0"
                },
                "os": {
                    "type": "string"
                },
                "partition": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "privateIp": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "productId": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "region": {
                    "type": "string"
                },
                "rootVolume": {
                    "$ref": "#/types/sbercloud:index/CceNodeRootVolume:CceNodeRootVolume"
                },
                "runtime": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "sharetype": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/types/sbercloud:index/CceNodeStorage:CceNodeStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeTaint:CceNodeTaint"
                    }
                }
            },
            "required": [
                "availabilityZone",
                "billingMode",
                "chargingMode",
                "clusterId",
                "dataVolumes",
                "enterpriseProjectId",
                "flavorId",
                "hostnameConfig",
                "initializedConditions",
                "name",
                "os",
                "privateIp",
                "publicIp",
                "region",
                "rootVolume",
                "runtime",
                "serverId",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidthChargeMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeDataVolume:CceNodeDataVolume"
                    },
                    "willReplaceOnChanges": true
                },
                "dedicatedHostId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ecsGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ecsPerformanceType": {
                    "type": "string",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "eipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "eipIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "use eip_id instead",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "extendParamChargingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "$ref": "#/types/sbercloud:index/CceNodeExtendParams:CceNodeExtendParams",
                    "willReplaceOnChanges": true
                },
                "extensionNics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeExtensionNic:CceNodeExtensionNic"
                    },
                    "willReplaceOnChanges": true
                },
                "fixedIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavorId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostnameConfig": {
                    "$ref": "#/types/sbercloud:index/CceNodeHostnameConfig:CceNodeHostnameConfig",
                    "willReplaceOnChanges": true
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "iptype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keepEcs": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string",
                    "deprecationMessage": "will be removed after v1.26.0",
                    "willReplaceOnChanges": true
                },
                "os": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "partition": {
                    "type": "string",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "productId": {
                    "type": "string",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolume": {
                    "$ref": "#/types/sbercloud:index/CceNodeRootVolume:CceNodeRootVolume",
                    "willReplaceOnChanges": true
                },
                "runtime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sharetype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "storage": {
                    "$ref": "#/types/sbercloud:index/CceNodeStorage:CceNodeStorage",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeTaint:CceNodeTaint"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "clusterId",
                "flavorId",
                "rootVolume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceNode resources.\n",
                "properties": {
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal\n",
                        "willReplaceOnChanges": true
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthChargeMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthSize": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "billingMode": {
                        "type": "integer",
                        "deprecationMessage": "use charging_mode instead",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodeDataVolume:CceNodeDataVolume"
                        },
                        "willReplaceOnChanges": true
                    },
                    "dedicatedHostId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ecsGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ecsPerformanceType": {
                        "type": "string",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "eipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "eipIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "use eip_id instead",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "extendParam": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "extendParamChargingMode": {
                        "type": "integer",
                        "deprecationMessage": "use charging_mode instead",
                        "willReplaceOnChanges": true
                    },
                    "extendParams": {
                        "$ref": "#/types/sbercloud:index/CceNodeExtendParams:CceNodeExtendParams",
                        "willReplaceOnChanges": true
                    },
                    "extensionNics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodeExtensionNic:CceNodeExtensionNic"
                        },
                        "willReplaceOnChanges": true
                    },
                    "fixedIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "flavorId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "hostnameConfig": {
                        "$ref": "#/types/sbercloud:index/CceNodeHostnameConfig:CceNodeHostnameConfig",
                        "willReplaceOnChanges": true
                    },
                    "initializedConditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "iptype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "keepEcs": {
                        "type": "boolean",
                        "description": "schema: Internal\n"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "maxPods": {
                        "type": "integer",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string",
                        "deprecationMessage": "will be removed after v1.26.0",
                        "willReplaceOnChanges": true
                    },
                    "os": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "partition": {
                        "type": "string",
                        "description": "schema: Internal\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "postinstall": {
                        "type": "string",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "preinstall": {
                        "type": "string",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "productId": {
                        "type": "string",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rootVolume": {
                        "$ref": "#/types/sbercloud:index/CceNodeRootVolume:CceNodeRootVolume",
                        "willReplaceOnChanges": true
                    },
                    "runtime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "sharetype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "$ref": "#/types/sbercloud:index/CceNodeStorage:CceNodeStorage",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodeTaint:CceNodeTaint"
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cceNodeAttach:CceNodeAttach": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachDataVolume:CceNodeAttachDataVolume"
                    }
                },
                "dockerBaseSize": {
                    "type": "integer"
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/sbercloud:index/CceNodeAttachHostnameConfig:CceNodeAttachHostnameConfig"
                },
                "imageId": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lvmConfig": {
                    "type": "string"
                },
                "maxPods": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nicMultiQueue": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "nicThreshold": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "os": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "postinstall": {
                    "type": "string"
                },
                "preinstall": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rootVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachRootVolume:CceNodeAttachRootVolume"
                    }
                },
                "runtime": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/types/sbercloud:index/CceNodeAttachStorage:CceNodeAttachStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "systemDiskKmsKeyId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachTaint:CceNodeAttachTaint"
                    }
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "clusterId",
                "dataVolumes",
                "ecsGroupId",
                "enterpriseProjectId",
                "flavorId",
                "hostnameConfig",
                "initializedConditions",
                "name",
                "os",
                "privateIp",
                "publicIp",
                "region",
                "rootVolumes",
                "runtime",
                "serverId",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dockerBaseSize": {
                    "type": "integer"
                },
                "hostnameConfig": {
                    "$ref": "#/types/sbercloud:index/CceNodeAttachHostnameConfig:CceNodeAttachHostnameConfig",
                    "willReplaceOnChanges": true
                },
                "imageId": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lvmConfig": {
                    "type": "string"
                },
                "maxPods": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nicMultiQueue": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "nicThreshold": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "os": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "postinstall": {
                    "type": "string"
                },
                "preinstall": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "runtime": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "storage": {
                    "$ref": "#/types/sbercloud:index/CceNodeAttachStorage:CceNodeAttachStorage"
                },
                "systemDiskKmsKeyId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachTaint:CceNodeAttachTaint"
                    }
                }
            },
            "requiredInputs": [
                "clusterId",
                "os",
                "serverId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceNodeAttach resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodeAttachDataVolume:CceNodeAttachDataVolume"
                        }
                    },
                    "dockerBaseSize": {
                        "type": "integer"
                    },
                    "ecsGroupId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfig": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachHostnameConfig:CceNodeAttachHostnameConfig",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "string",
                        "description": "schema: Internal\n"
                    },
                    "initializedConditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "lvmConfig": {
                        "type": "string"
                    },
                    "maxPods": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicMultiQueue": {
                        "type": "string",
                        "description": "schema: Internal\n"
                    },
                    "nicThreshold": {
                        "type": "string",
                        "description": "schema: Internal\n"
                    },
                    "os": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "postinstall": {
                        "type": "string"
                    },
                    "preinstall": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rootVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodeAttachRootVolume:CceNodeAttachRootVolume"
                        }
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "$ref": "#/types/sbercloud:index/CceNodeAttachStorage:CceNodeAttachStorage"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "systemDiskKmsKeyId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodeAttachTaint:CceNodeAttachTaint"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cceNodePool:CceNodePool": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "currentNodeCount": {
                    "type": "integer"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolDataVolume:CceNodePoolDataVolume"
                    }
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.\n"
                },
                "extendParams": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolExtendParams:CceNodePoolExtendParams"
                },
                "extensionScaleGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolExtensionScaleGroup:CceNodePoolExtensionScaleGroup"
                    }
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolHostnameConfig:CceNodePoolHostnameConfig"
                },
                "initialNodeCount": {
                    "type": "integer"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string"
                },
                "labelPolicyOnExistingNodes": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxNodeCount": {
                    "type": "integer"
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n"
                },
                "minNodeCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "podSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n"
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n"
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "rootVolume": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolRootVolume:CceNodePoolRootVolume"
                },
                "runtime": {
                    "type": "string"
                },
                "scaleDownCooldownTime": {
                    "type": "integer"
                },
                "scallEnable": {
                    "type": "boolean"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolStorage:CceNodePoolStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagPolicyOnExistingNodes": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taintPolicyOnExistingNodes": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolTaint:CceNodePoolTaint"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "billingMode",
                "chargingMode",
                "clusterId",
                "currentNodeCount",
                "dataVolumes",
                "enterpriseProjectId",
                "flavorId",
                "hostnameConfig",
                "initialNodeCount",
                "initializedConditions",
                "labelPolicyOnExistingNodes",
                "maxPods",
                "name",
                "os",
                "region",
                "rootVolume",
                "runtime",
                "securityGroups",
                "status",
                "subnetId",
                "tagPolicyOnExistingNodes",
                "taintPolicyOnExistingNodes",
                "type"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolDataVolume:CceNodePoolDataVolume"
                    },
                    "willReplaceOnChanges": true
                },
                "ecsGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.\n",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolExtendParams:CceNodePoolExtendParams",
                    "willReplaceOnChanges": true
                },
                "extensionScaleGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolExtensionScaleGroup:CceNodePoolExtensionScaleGroup"
                    }
                },
                "flavorId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostnameConfig": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolHostnameConfig:CceNodePoolHostnameConfig",
                    "willReplaceOnChanges": true
                },
                "initialNodeCount": {
                    "type": "integer"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "labelPolicyOnExistingNodes": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxNodeCount": {
                    "type": "integer"
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n",
                    "willReplaceOnChanges": true
                },
                "minNodeCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "podSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n",
                    "willReplaceOnChanges": true
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolume": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolRootVolume:CceNodePoolRootVolume",
                    "willReplaceOnChanges": true
                },
                "runtime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scaleDownCooldownTime": {
                    "type": "integer"
                },
                "scallEnable": {
                    "type": "boolean"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "storage": {
                    "$ref": "#/types/sbercloud:index/CceNodePoolStorage:CceNodePoolStorage",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagPolicyOnExistingNodes": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taintPolicyOnExistingNodes": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolTaint:CceNodePoolTaint"
                    }
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "flavorId",
                "initialNodeCount",
                "rootVolume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceNodePool resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "billingMode": {
                        "type": "integer"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "currentNodeCount": {
                        "type": "integer"
                    },
                    "dataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodePoolDataVolume:CceNodePoolDataVolume"
                        },
                        "willReplaceOnChanges": true
                    },
                    "ecsGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendParam": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.\n",
                        "willReplaceOnChanges": true
                    },
                    "extendParams": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolExtendParams:CceNodePoolExtendParams",
                        "willReplaceOnChanges": true
                    },
                    "extensionScaleGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodePoolExtensionScaleGroup:CceNodePoolExtensionScaleGroup"
                        }
                    },
                    "flavorId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "hostnameConfig": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolHostnameConfig:CceNodePoolHostnameConfig",
                        "willReplaceOnChanges": true
                    },
                    "initialNodeCount": {
                        "type": "integer"
                    },
                    "initializedConditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keyPair": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labelPolicyOnExistingNodes": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maxNodeCount": {
                        "type": "integer"
                    },
                    "maxPods": {
                        "type": "integer",
                        "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n",
                        "willReplaceOnChanges": true
                    },
                    "minNodeCount": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "podSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "postinstall": {
                        "type": "string",
                        "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n",
                        "willReplaceOnChanges": true
                    },
                    "preinstall": {
                        "type": "string",
                        "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rootVolume": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolRootVolume:CceNodePoolRootVolume",
                        "willReplaceOnChanges": true
                    },
                    "runtime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scaleDownCooldownTime": {
                        "type": "integer"
                    },
                    "scallEnable": {
                        "type": "boolean"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "$ref": "#/types/sbercloud:index/CceNodePoolStorage:CceNodePoolStorage",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "subnetLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tagPolicyOnExistingNodes": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "taintPolicyOnExistingNodes": {
                        "type": "string"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CceNodePoolTaint:CceNodePoolTaint"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/ccePvc:CcePvc": {
            "properties": {
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "creationTimestamp": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "storageClassName": {
                    "type": "string"
                }
            },
            "required": [
                "accessModes",
                "clusterId",
                "creationTimestamp",
                "name",
                "namespace",
                "region",
                "status",
                "storage",
                "storageClassName"
            ],
            "inputProperties": {
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "namespace": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "storage": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "storageClassName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accessModes",
                "clusterId",
                "namespace",
                "storage",
                "storageClassName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CcePvc resources.\n",
                "properties": {
                    "accessModes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "namespace": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "storageClassName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cdmCluster:CdmCluster": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "flavorName": {
                    "type": "string"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CdmClusterInstance:CdmClusterInstance"
                    }
                },
                "isAutoOff": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phoneNums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicEndpoint": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scheduleBootTime": {
                    "type": "string"
                },
                "scheduleOffTime": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "created",
                "enterpriseProjectId",
                "flavorId",
                "flavorName",
                "instances",
                "isAutoOff",
                "name",
                "publicEndpoint",
                "publicIp",
                "region",
                "scheduleBootTime",
                "scheduleOffTime",
                "securityGroupId",
                "status",
                "subnetId",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isAutoOff": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "phoneNums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scheduleBootTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scheduleOffTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "flavorId",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CdmCluster resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "created": {
                        "type": "string"
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CdmClusterInstance:CdmClusterInstance"
                        }
                    },
                    "isAutoOff": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "phoneNums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicEndpoint": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scheduleBootTime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scheduleOffTime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cesAlarmrule:CesAlarmrule": {
            "properties": {
                "alarmActionEnabled": {
                    "type": "boolean"
                },
                "alarmActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleAlarmAction:CesAlarmruleAlarmAction"
                    }
                },
                "alarmDescription": {
                    "type": "string"
                },
                "alarmEnabled": {
                    "type": "boolean"
                },
                "alarmLevel": {
                    "type": "integer"
                },
                "alarmName": {
                    "type": "string"
                },
                "alarmState": {
                    "type": "string"
                },
                "alarmType": {
                    "type": "string"
                },
                "condition": {
                    "$ref": "#/types/sbercloud:index/CesAlarmruleCondition:CesAlarmruleCondition"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "insufficientdataActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleInsufficientdataAction:CesAlarmruleInsufficientdataAction"
                    },
                    "deprecationMessage": "insufficientdata_actions is deprecated"
                },
                "metric": {
                    "$ref": "#/types/sbercloud:index/CesAlarmruleMetric:CesAlarmruleMetric"
                },
                "okActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleOkAction:CesAlarmruleOkAction"
                    }
                },
                "region": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "integer"
                }
            },
            "required": [
                "alarmName",
                "alarmState",
                "alarmType",
                "condition",
                "enterpriseProjectId",
                "metric",
                "region",
                "updateTime"
            ],
            "inputProperties": {
                "alarmActionEnabled": {
                    "type": "boolean"
                },
                "alarmActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleAlarmAction:CesAlarmruleAlarmAction"
                    },
                    "willReplaceOnChanges": true
                },
                "alarmDescription": {
                    "type": "string"
                },
                "alarmEnabled": {
                    "type": "boolean"
                },
                "alarmLevel": {
                    "type": "integer"
                },
                "alarmName": {
                    "type": "string"
                },
                "alarmType": {
                    "type": "string"
                },
                "condition": {
                    "$ref": "#/types/sbercloud:index/CesAlarmruleCondition:CesAlarmruleCondition"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "insufficientdataActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleInsufficientdataAction:CesAlarmruleInsufficientdataAction"
                    },
                    "deprecationMessage": "insufficientdata_actions is deprecated"
                },
                "metric": {
                    "$ref": "#/types/sbercloud:index/CesAlarmruleMetric:CesAlarmruleMetric",
                    "willReplaceOnChanges": true
                },
                "okActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleOkAction:CesAlarmruleOkAction"
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "alarmName",
                "condition",
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CesAlarmrule resources.\n",
                "properties": {
                    "alarmActionEnabled": {
                        "type": "boolean"
                    },
                    "alarmActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CesAlarmruleAlarmAction:CesAlarmruleAlarmAction"
                        },
                        "willReplaceOnChanges": true
                    },
                    "alarmDescription": {
                        "type": "string"
                    },
                    "alarmEnabled": {
                        "type": "boolean"
                    },
                    "alarmLevel": {
                        "type": "integer"
                    },
                    "alarmName": {
                        "type": "string"
                    },
                    "alarmState": {
                        "type": "string"
                    },
                    "alarmType": {
                        "type": "string"
                    },
                    "condition": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleCondition:CesAlarmruleCondition"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "insufficientdataActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CesAlarmruleInsufficientdataAction:CesAlarmruleInsufficientdataAction"
                        },
                        "deprecationMessage": "insufficientdata_actions is deprecated"
                    },
                    "metric": {
                        "$ref": "#/types/sbercloud:index/CesAlarmruleMetric:CesAlarmruleMetric",
                        "willReplaceOnChanges": true
                    },
                    "okActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CesAlarmruleOkAction:CesAlarmruleOkAction"
                        },
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/computeEipAssociate:ComputeEipAssociate": {
            "properties": {
                "bandwidthId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "fixedIp",
                "instanceId",
                "portId",
                "region"
            ],
            "inputProperties": {
                "bandwidthId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "fixedIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeEipAssociate resources.\n",
                "properties": {
                    "bandwidthId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "fixedIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/computeInstance:ComputeInstance": {
            "properties": {
                "accessIpV4": {
                    "type": "string"
                },
                "accessIpV6": {
                    "type": "string"
                },
                "adminPass": {
                    "type": "string",
                    "secret": true
                },
                "agencyName": {
                    "type": "string"
                },
                "agentList": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoTerminateTime": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bandwidth": {
                    "$ref": "#/types/sbercloud:index/ComputeInstanceBandwidth:ComputeInstanceBandwidth"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceDataDisk:ComputeInstanceDataDisk"
                    }
                },
                "deleteDisksOnTermination": {
                    "type": "boolean"
                },
                "deleteEipOnTermination": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "eipId": {
                    "type": "string"
                },
                "eipType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expiredTime": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "hostname": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceNetwork:ComputeInstanceNetwork"
                    }
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "powerAction": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "schedulerHints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceSchedulerHint:ComputeInstanceSchedulerHint"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Computed\n"
                },
                "spotDuration": {
                    "type": "integer"
                },
                "spotDurationCount": {
                    "type": "integer"
                },
                "spotMaximumPrice": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "stopBeforeDestroy": {
                    "type": "boolean"
                },
                "systemDiskDssPoolId": {
                    "type": "string"
                },
                "systemDiskId": {
                    "type": "string"
                },
                "systemDiskIops": {
                    "type": "integer"
                },
                "systemDiskKmsKeyId": {
                    "type": "string"
                },
                "systemDiskSize": {
                    "type": "integer"
                },
                "systemDiskThroughput": {
                    "type": "integer"
                },
                "systemDiskType": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "userData": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "volumeAttacheds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceVolumeAttached:ComputeInstanceVolumeAttached"
                    }
                }
            },
            "required": [
                "accessIpV4",
                "accessIpV6",
                "agencyName",
                "agentList",
                "availabilityZone",
                "chargingMode",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "expiredTime",
                "flavorId",
                "flavorName",
                "hostname",
                "imageId",
                "imageName",
                "name",
                "networks",
                "powerAction",
                "publicIp",
                "region",
                "schedulerHints",
                "securityGroupIds",
                "securityGroups",
                "spotDurationCount",
                "status",
                "systemDiskId",
                "systemDiskIops",
                "systemDiskKmsKeyId",
                "systemDiskSize",
                "systemDiskThroughput",
                "systemDiskType",
                "updatedAt",
                "volumeAttacheds"
            ],
            "inputProperties": {
                "adminPass": {
                    "type": "string",
                    "secret": true
                },
                "agencyName": {
                    "type": "string"
                },
                "agentList": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoTerminateTime": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidth": {
                    "$ref": "#/types/sbercloud:index/ComputeInstanceBandwidth:ComputeInstanceBandwidth",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceDataDisk:ComputeInstanceDataDisk"
                    },
                    "willReplaceOnChanges": true
                },
                "deleteDisksOnTermination": {
                    "type": "boolean"
                },
                "deleteEipOnTermination": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "eipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "eipType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "hostname": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imageName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keyPair": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceNetwork:ComputeInstanceNetwork"
                    },
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "schedulerHints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceSchedulerHint:ComputeInstanceSchedulerHint"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Computed\n"
                },
                "spotDuration": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "spotDurationCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "spotMaximumPrice": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "stopBeforeDestroy": {
                    "type": "boolean"
                },
                "systemDiskDssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "systemDiskIops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "systemDiskKmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "systemDiskSize": {
                    "type": "integer"
                },
                "systemDiskThroughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "systemDiskType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userData": {
                    "type": "string"
                },
                "userId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networks"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeInstance resources.\n",
                "properties": {
                    "accessIpV4": {
                        "type": "string"
                    },
                    "accessIpV6": {
                        "type": "string"
                    },
                    "adminPass": {
                        "type": "string",
                        "secret": true
                    },
                    "agencyName": {
                        "type": "string"
                    },
                    "agentList": {
                        "type": "string"
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "autoTerminateTime": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidth": {
                        "$ref": "#/types/sbercloud:index/ComputeInstanceBandwidth:ComputeInstanceBandwidth",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dataDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ComputeInstanceDataDisk:ComputeInstanceDataDisk"
                        },
                        "willReplaceOnChanges": true
                    },
                    "deleteDisksOnTermination": {
                        "type": "boolean"
                    },
                    "deleteEipOnTermination": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "eipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "eipType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expiredTime": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "schema: Required\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "schema: Computed\n"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imageName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ComputeInstanceNetwork:ComputeInstanceNetwork"
                        },
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "schedulerHints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ComputeInstanceSchedulerHint:ComputeInstanceSchedulerHint"
                        }
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Computed\n"
                    },
                    "spotDuration": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "spotDurationCount": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "spotMaximumPrice": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "stopBeforeDestroy": {
                        "type": "boolean"
                    },
                    "systemDiskDssPoolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskId": {
                        "type": "string"
                    },
                    "systemDiskIops": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskKmsKeyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskSize": {
                        "type": "integer"
                    },
                    "systemDiskThroughput": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "userData": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "volumeAttacheds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ComputeInstanceVolumeAttached:ComputeInstanceVolumeAttached"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/computeInterfaceAttach:ComputeInterfaceAttach": {
            "properties": {
                "fixedIp": {
                    "type": "string"
                },
                "fixedIpv6": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "mac": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceDestCheck": {
                    "type": "boolean"
                }
            },
            "required": [
                "fixedIp",
                "fixedIpv6",
                "instanceId",
                "ipv6Enable",
                "mac",
                "networkId",
                "portId",
                "region",
                "securityGroupIds"
            ],
            "inputProperties": {
                "fixedIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv6BandwidthId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceDestCheck": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeInterfaceAttach resources.\n",
                "properties": {
                    "fixedIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "fixedIpv6": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv6BandwidthId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "mac": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceDestCheck": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/computeKeypair:ComputeKeypair": {
            "properties": {
                "keyFile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "keyFile",
                "name",
                "publicKey",
                "region"
            ],
            "inputProperties": {
                "keyFile": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeKeypair resources.\n",
                "properties": {
                    "keyFile": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/computeServergroup:ComputeServergroup": {
            "properties": {
                "faultDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Internal\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "faultDomains",
                "members",
                "name",
                "region"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeServergroup resources.\n",
                "properties": {
                    "faultDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Internal\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/computeVolumeAttach:ComputeVolumeAttach": {
            "properties": {
                "device": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "pciAddress": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "required": [
                "device",
                "instanceId",
                "pciAddress",
                "region",
                "volumeId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volumeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeVolumeAttach resources.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "pciAddress": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "volumeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cssCluster:CssCluster": {
            "properties": {
                "backupStrategy": {
                    "$ref": "#/types/sbercloud:index/CssClusterBackupStrategy:CssClusterBackupStrategy"
                },
                "created": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expectNodeNum": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nodeConfig": {
                    "$ref": "#/types/sbercloud:index/CssClusterNodeConfig:CssClusterNodeConfig"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CssClusterNode:CssClusterNode"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "securityMode": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "created",
                "endpoint",
                "engineVersion",
                "enterpriseProjectId",
                "name",
                "nodeConfig",
                "nodes",
                "region",
                "status"
            ],
            "inputProperties": {
                "backupStrategy": {
                    "$ref": "#/types/sbercloud:index/CssClusterBackupStrategy:CssClusterBackupStrategy"
                },
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "expectNodeNum": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nodeConfig": {
                    "$ref": "#/types/sbercloud:index/CssClusterNodeConfig:CssClusterNodeConfig",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityMode": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "engineVersion",
                "nodeConfig"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CssCluster resources.\n",
                "properties": {
                    "backupStrategy": {
                        "$ref": "#/types/sbercloud:index/CssClusterBackupStrategy:CssClusterBackupStrategy"
                    },
                    "created": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "engineType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expectNodeNum": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "nodeConfig": {
                        "$ref": "#/types/sbercloud:index/CssClusterNodeConfig:CssClusterNodeConfig",
                        "willReplaceOnChanges": true
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CssClusterNode:CssClusterNode"
                        }
                    },
                    "password": {
                        "type": "string",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityMode": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/cssConfiguration:CssConfiguration": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The CSS cluster ID.\n"
                },
                "httpCorsAllowCredetials": {
                    "type": "string",
                    "description": "Whether to return the Access-Control-Allow-Credentials of the header during cross-domain access.\n"
                },
                "httpCorsAllowHeaders": {
                    "type": "string",
                    "description": "Headers allowed for cross-domain access.\n"
                },
                "httpCorsAllowMethods": {
                    "type": "string",
                    "description": "Methods allowed for cross-domain access.\n"
                },
                "httpCorsAllowOrigin": {
                    "type": "string",
                    "description": "Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.\n"
                },
                "httpCorsEnabled": {
                    "type": "string",
                    "description": "Whether to allow cross-domain access.\n"
                },
                "httpCorsMaxAge": {
                    "type": "string",
                    "description": "Cache duration of the browser. The cache is automatically cleared after the time range you specify.\n"
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Cache size in the query phase. Value range: **1** to **100**.\n"
                },
                "region": {
                    "type": "string"
                },
                "reindexRemoteWhitelist": {
                    "type": "string",
                    "description": "Configured for migrating data from the current cluster to the target cluster through the reindex API.\n"
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Queue size in the force merge thread pool.\n"
                }
            },
            "required": [
                "clusterId",
                "httpCorsAllowCredetials",
                "httpCorsAllowHeaders",
                "httpCorsAllowMethods",
                "httpCorsAllowOrigin",
                "httpCorsEnabled",
                "httpCorsMaxAge",
                "indicesQueriesCacheSize",
                "region",
                "reindexRemoteWhitelist",
                "threadPoolForceMergeSize"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The CSS cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "httpCorsAllowCredetials": {
                    "type": "string",
                    "description": "Whether to return the Access-Control-Allow-Credentials of the header during cross-domain access.\n"
                },
                "httpCorsAllowHeaders": {
                    "type": "string",
                    "description": "Headers allowed for cross-domain access.\n"
                },
                "httpCorsAllowMethods": {
                    "type": "string",
                    "description": "Methods allowed for cross-domain access.\n"
                },
                "httpCorsAllowOrigin": {
                    "type": "string",
                    "description": "Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.\n"
                },
                "httpCorsEnabled": {
                    "type": "string",
                    "description": "Whether to allow cross-domain access.\n"
                },
                "httpCorsMaxAge": {
                    "type": "string",
                    "description": "Cache duration of the browser. The cache is automatically cleared after the time range you specify.\n"
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Cache size in the query phase. Value range: **1** to **100**.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "reindexRemoteWhitelist": {
                    "type": "string",
                    "description": "Configured for migrating data from the current cluster to the target cluster through the reindex API.\n"
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Queue size in the force merge thread pool.\n"
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CssConfiguration resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The CSS cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "httpCorsAllowCredetials": {
                        "type": "string",
                        "description": "Whether to return the Access-Control-Allow-Credentials of the header during cross-domain access.\n"
                    },
                    "httpCorsAllowHeaders": {
                        "type": "string",
                        "description": "Headers allowed for cross-domain access.\n"
                    },
                    "httpCorsAllowMethods": {
                        "type": "string",
                        "description": "Methods allowed for cross-domain access.\n"
                    },
                    "httpCorsAllowOrigin": {
                        "type": "string",
                        "description": "Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.\n"
                    },
                    "httpCorsEnabled": {
                        "type": "string",
                        "description": "Whether to allow cross-domain access.\n"
                    },
                    "httpCorsMaxAge": {
                        "type": "string",
                        "description": "Cache duration of the browser. The cache is automatically cleared after the time range you specify.\n"
                    },
                    "indicesQueriesCacheSize": {
                        "type": "string",
                        "description": "Cache size in the query phase. Value range: **1** to **100**.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "reindexRemoteWhitelist": {
                        "type": "string",
                        "description": "Configured for migrating data from the current cluster to the target cluster through the reindex API.\n"
                    },
                    "threadPoolForceMergeSize": {
                        "type": "string",
                        "description": "Queue size in the force merge thread pool.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/ctsDataTracker:CtsDataTracker": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "createTime": {
                    "type": "integer"
                },
                "dataBucket": {
                    "type": "string"
                },
                "dataOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "filePrefix": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "isAuthorizedBucket": {
                    "type": "boolean"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "logGroupName": {
                    "type": "string"
                },
                "logTopicName": {
                    "type": "string"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "obsRetentionPeriod": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streamId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "transferEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "required": [
                "agencyName",
                "createTime",
                "dataBucket",
                "dataOperations",
                "detail",
                "domainId",
                "groupId",
                "isAuthorizedBucket",
                "logGroupName",
                "logTopicName",
                "name",
                "region",
                "status",
                "streamId",
                "transferEnabled",
                "type"
            ],
            "inputProperties": {
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "dataBucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "filePrefix": {
                    "type": "string"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "obsRetentionPeriod": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "dataBucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CtsDataTracker resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "compressType": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "integer"
                    },
                    "dataBucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataOperations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "detail": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "filePrefix": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "isAuthorizedBucket": {
                        "type": "boolean"
                    },
                    "isSortByService": {
                        "type": "boolean"
                    },
                    "logGroupName": {
                        "type": "string"
                    },
                    "logTopicName": {
                        "type": "string"
                    },
                    "ltsEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "obsRetentionPeriod": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "transferEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "validateFile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/ctsNotification:CtsNotification": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/types/sbercloud:index/CtsNotificationFilter:CtsNotificationFilter"
                },
                "name": {
                    "type": "string"
                },
                "notificationId": {
                    "type": "string"
                },
                "operationType": {
                    "type": "string"
                },
                "operationUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CtsNotificationOperationUser:CtsNotificationOperationUser"
                    }
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CtsNotificationOperation:CtsNotificationOperation"
                    }
                },
                "region": {
                    "type": "string"
                },
                "smnTopic": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "name",
                "notificationId",
                "operationType",
                "region",
                "status"
            ],
            "inputProperties": {
                "agencyName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/types/sbercloud:index/CtsNotificationFilter:CtsNotificationFilter"
                },
                "name": {
                    "type": "string"
                },
                "operationType": {
                    "type": "string"
                },
                "operationUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CtsNotificationOperationUser:CtsNotificationOperationUser"
                    }
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/CtsNotificationOperation:CtsNotificationOperation"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "smnTopic": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "operationType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CtsNotification resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/types/sbercloud:index/CtsNotificationFilter:CtsNotificationFilter"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notificationId": {
                        "type": "string"
                    },
                    "operationType": {
                        "type": "string"
                    },
                    "operationUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CtsNotificationOperationUser:CtsNotificationOperationUser"
                        }
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/CtsNotificationOperation:CtsNotificationOperation"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "smnTopic": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/ctsTracker:CtsTracker": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "createTime": {
                    "type": "integer"
                },
                "deleteTracker": {
                    "type": "boolean"
                },
                "detail": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "excludeServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filePrefix": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "isAuthorizedBucket": {
                    "type": "boolean"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "kmsId": {
                    "type": "string"
                },
                "logGroupName": {
                    "type": "string"
                },
                "logTopicName": {
                    "type": "string"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organizationEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streamId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "transferEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "required": [
                "agencyName",
                "createTime",
                "detail",
                "domainId",
                "groupId",
                "isAuthorizedBucket",
                "logGroupName",
                "logTopicName",
                "name",
                "organizationEnabled",
                "region",
                "status",
                "streamId",
                "transferEnabled",
                "type"
            ],
            "inputProperties": {
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "deleteTracker": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "excludeServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filePrefix": {
                    "type": "string"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "kmsId": {
                    "type": "string"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "organizationEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CtsTracker resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "compressType": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "integer"
                    },
                    "deleteTracker": {
                        "type": "boolean"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "excludeServices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "filePrefix": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "isAuthorizedBucket": {
                        "type": "boolean"
                    },
                    "isSortByService": {
                        "type": "boolean"
                    },
                    "kmsId": {
                        "type": "string"
                    },
                    "logGroupName": {
                        "type": "string"
                    },
                    "logTopicName": {
                        "type": "string"
                    },
                    "ltsEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationEnabled": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "transferEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "validateFile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dcsAccount:DcsAccount": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Specifies the name of the account.\n"
                },
                "accountPassword": {
                    "type": "string",
                    "description": "Specifies the password of the account.\n",
                    "secret": true
                },
                "accountRole": {
                    "type": "string",
                    "description": "Specifies the role of the account.\n"
                },
                "accountType": {
                    "type": "string",
                    "description": "Indicates the type of the account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the account.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance.\n"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the account.\n"
                }
            },
            "required": [
                "accountName",
                "accountPassword",
                "accountRole",
                "accountType",
                "instanceId",
                "region",
                "status"
            ],
            "inputProperties": {
                "accountName": {
                    "type": "string",
                    "description": "Specifies the name of the account.\n",
                    "willReplaceOnChanges": true
                },
                "accountPassword": {
                    "type": "string",
                    "description": "Specifies the password of the account.\n",
                    "secret": true
                },
                "accountRole": {
                    "type": "string",
                    "description": "Specifies the role of the account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the account.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountName",
                "accountPassword",
                "accountRole",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsAccount resources.\n",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "Specifies the name of the account.\n",
                        "willReplaceOnChanges": true
                    },
                    "accountPassword": {
                        "type": "string",
                        "description": "Specifies the password of the account.\n",
                        "secret": true
                    },
                    "accountRole": {
                        "type": "string",
                        "description": "Specifies the role of the account.\n"
                    },
                    "accountType": {
                        "type": "string",
                        "description": "Indicates the type of the account.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the account.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the DCS instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of the account.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dcsBackup:DcsBackup": {
            "properties": {
                "backupFormat": {
                    "type": "string",
                    "description": "Specifies the format of the DCS instance backup.\n"
                },
                "backupId": {
                    "type": "string",
                    "description": "Indicates the ID of the DCS instance backup.\n"
                },
                "beginTime": {
                    "type": "string",
                    "description": "Indicates the time when the backup task is created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of DCS instance backup.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "Indicates the time at which DCS instance backup is completed.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance.\n"
                },
                "isSupportRestore": {
                    "type": "string",
                    "description": "Indicates whether restoration is supported. Value Options: **TRUE**, **FALSE**.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the backup name.\n"
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Indicates the size of the backup file (byte).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the backup status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the backup type.\n"
                }
            },
            "required": [
                "backupFormat",
                "backupId",
                "beginTime",
                "description",
                "endTime",
                "instanceId",
                "isSupportRestore",
                "name",
                "region",
                "size",
                "status",
                "type"
            ],
            "inputProperties": {
                "backupFormat": {
                    "type": "string",
                    "description": "Specifies the format of the DCS instance backup.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of DCS instance backup.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsBackup resources.\n",
                "properties": {
                    "backupFormat": {
                        "type": "string",
                        "description": "Specifies the format of the DCS instance backup.\n",
                        "willReplaceOnChanges": true
                    },
                    "backupId": {
                        "type": "string",
                        "description": "Indicates the ID of the DCS instance backup.\n"
                    },
                    "beginTime": {
                        "type": "string",
                        "description": "Indicates the time when the backup task is created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of DCS instance backup.\n",
                        "willReplaceOnChanges": true
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Indicates the time at which DCS instance backup is completed.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the DCS instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "isSupportRestore": {
                        "type": "string",
                        "description": "Indicates whether restoration is supported. Value Options: **TRUE**, **FALSE**.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indicates the backup name.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Indicates the size of the backup file (byte).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the backup status.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the backup type.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dcsInstance:DcsInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "Deprecated, please use `availability_zones` instead"
                },
                "backupAts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "backupPolicy": {
                    "$ref": "#/types/sbercloud:index/DcsInstanceBackupPolicy:DcsInstanceBackupPolicy"
                },
                "backupType": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "bandwidthInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DcsInstanceBandwidthInfo:DcsInstanceBandwidthInfo"
                    }
                },
                "beginAt": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "cacheMode": {
                    "type": "string"
                },
                "capacity": {
                    "type": "number"
                },
                "chargingMode": {
                    "type": "string"
                },
                "cpuType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedNodes": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "enterpriseProjectName": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, this is a non-public attribute."
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "internalVersion": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please us `engine_version` instead."
                },
                "ip": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please us `private_ip` instead."
                },
                "launchedAt": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "maxMemory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DcsInstanceParameter:DcsInstanceParameter"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodType": {
                    "type": "string",
                    "deprecationMessage": "Please use `backup_policy` instead"
                },
                "periodUnit": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "privateIp": {
                    "type": "string"
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `flavor` instead"
                },
                "productType": {
                    "type": "string"
                },
                "readonlyDomainName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "renameCommands": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "replicaCount": {
                    "type": "integer"
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "saveDays": {
                    "type": "integer",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityGroupName": {
                    "type": "string"
                },
                "shardingCount": {
                    "type": "integer"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetCidr": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string"
                },
                "transparentClientIpEnable": {
                    "type": "boolean"
                },
                "usedMemory": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "userName": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "vpcId": {
                    "type": "string"
                },
                "vpcName": {
                    "type": "string"
                },
                "whitelistEnable": {
                    "type": "boolean"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DcsInstanceWhitelist:DcsInstanceWhitelist"
                    }
                }
            },
            "required": [
                "accessUser",
                "availabilityZones",
                "bandwidthInfos",
                "cacheMode",
                "capacity",
                "chargingMode",
                "cpuType",
                "createdAt",
                "description",
                "domainName",
                "engine",
                "enterpriseProjectId",
                "enterpriseProjectName",
                "flavor",
                "internalVersion",
                "ip",
                "launchedAt",
                "maintainBegin",
                "maintainEnd",
                "maxMemory",
                "name",
                "orderId",
                "parameters",
                "port",
                "privateIp",
                "productId",
                "productType",
                "readonlyDomainName",
                "region",
                "replicaCount",
                "securityGroupName",
                "shardingCount",
                "sslEnable",
                "status",
                "subnetCidr",
                "subnetId",
                "subnetName",
                "transparentClientIpEnable",
                "usedMemory",
                "userId",
                "userName",
                "vpcId",
                "vpcName"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "Deprecated, please use `availability_zones` instead",
                    "willReplaceOnChanges": true
                },
                "backupAts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "backupPolicy": {
                    "$ref": "#/types/sbercloud:index/DcsInstanceBackupPolicy:DcsInstanceBackupPolicy"
                },
                "backupType": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "beginAt": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "capacity": {
                    "type": "number"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "deletedNodes": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "engine": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "enterpriseProjectName": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, this is a non-public attribute.",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DcsInstanceParameter:DcsInstanceParameter"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodType": {
                    "type": "string",
                    "deprecationMessage": "Please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "privateIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `flavor` instead",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "renameCommands": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "saveDays": {
                    "type": "integer",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "whitelistEnable": {
                    "type": "boolean"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DcsInstanceWhitelist:DcsInstanceWhitelist"
                    }
                }
            },
            "requiredInputs": [
                "capacity",
                "engine",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsInstance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required\n",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "Deprecated, please use `availability_zones` instead",
                        "willReplaceOnChanges": true
                    },
                    "backupAts": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "backupPolicy": {
                        "$ref": "#/types/sbercloud:index/DcsInstanceBackupPolicy:DcsInstanceBackupPolicy"
                    },
                    "backupType": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthInfos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DcsInstanceBandwidthInfo:DcsInstanceBandwidthInfo"
                        }
                    },
                    "beginAt": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cpuType": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletedNodes": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "enterpriseProjectName": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, this is a non-public attribute.",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "type": "string",
                        "description": "schema: Required\n"
                    },
                    "internalVersion": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please us `engine_version` instead."
                    },
                    "ip": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please us `private_ip` instead."
                    },
                    "launchedAt": {
                        "type": "string"
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "maxMemory": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DcsInstanceParameter:DcsInstanceParameter"
                        }
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodType": {
                        "type": "string",
                        "deprecationMessage": "Please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "privateIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "productId": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please use `flavor` instead",
                        "willReplaceOnChanges": true
                    },
                    "productType": {
                        "type": "string"
                    },
                    "readonlyDomainName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "renameCommands": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "replicaCount": {
                        "type": "integer"
                    },
                    "reservedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "saveDays": {
                        "type": "integer",
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "shardingCount": {
                        "type": "integer"
                    },
                    "sslEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetCidr": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subnetName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "templateId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "transparentClientIpEnable": {
                        "type": "boolean"
                    },
                    "usedMemory": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string",
                        "deprecationMessage": "Deprecated"
                    },
                    "userName": {
                        "type": "string",
                        "deprecationMessage": "Deprecated"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vpcName": {
                        "type": "string"
                    },
                    "whitelistEnable": {
                        "type": "boolean"
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DcsInstanceWhitelist:DcsInstanceWhitelist"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dcsParameters:DcsParameters": {
            "properties": {
                "configurationParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DcsParametersConfigurationParameter:DcsParametersConfigurationParameter"
                    }
                },
                "instanceId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "projectId": {
                    "type": "string"
                }
            },
            "required": [
                "configurationParameters",
                "instanceId",
                "parameters",
                "projectId"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "parameters",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsParameters resources.\n",
                "properties": {
                    "configurationParameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DcsParametersConfigurationParameter:DcsParametersConfigurationParameter"
                        }
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dcsRestore:DcsRestore": {
            "properties": {
                "backupId": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "restoreRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DcsRestoreRestoreRecord:DcsRestoreRestoreRecord"
                    }
                }
            },
            "required": [
                "backupId",
                "instanceId",
                "projectId",
                "restoreRecords"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remark": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupId",
                "instanceId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsRestore resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remark": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restoreRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DcsRestoreRestoreRecord:DcsRestoreRestoreRecord"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/ddsInstance:DdsInstance": {
            "properties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "backupStrategy": {
                    "$ref": "#/types/sbercloud:index/DdsInstanceBackupStrategy:DdsInstanceBackupStrategy"
                },
                "balancerActiveBegin": {
                    "type": "string"
                },
                "balancerActiveEnd": {
                    "type": "string"
                },
                "balancerStatus": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceConfiguration:DdsInstanceConfiguration"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "datastore": {
                    "$ref": "#/types/sbercloud:index/DdsInstanceDatastore:DdsInstanceDatastore"
                },
                "dbUsername": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diskEncryptionId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceFlavor:DdsInstanceFlavor"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceGroup:DdsInstanceGroup"
                    }
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceNode:DdsInstanceNode"
                    },
                    "description": "This field is deprecated.\n"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timeZone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "backupStrategy",
                "balancerStatus",
                "chargingMode",
                "createdAt",
                "datastore",
                "dbUsername",
                "enterpriseProjectId",
                "flavors",
                "groups",
                "mode",
                "name",
                "nodes",
                "port",
                "region",
                "securityGroupId",
                "status",
                "subnetId",
                "timeZone",
                "updatedAt",
                "vpcId"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "availabilityZone": {
                    "type": "string"
                },
                "backupStrategy": {
                    "$ref": "#/types/sbercloud:index/DdsInstanceBackupStrategy:DdsInstanceBackupStrategy"
                },
                "balancerActiveBegin": {
                    "type": "string"
                },
                "balancerActiveEnd": {
                    "type": "string"
                },
                "balancerStatus": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceConfiguration:DdsInstanceConfiguration"
                    },
                    "willReplaceOnChanges": true
                },
                "datastore": {
                    "$ref": "#/types/sbercloud:index/DdsInstanceDatastore:DdsInstanceDatastore",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "diskEncryptionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceFlavor:DdsInstanceFlavor"
                    },
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "datastore",
                "flavors",
                "mode",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DdsInstance resources.\n",
                "properties": {
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "backupStrategy": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceBackupStrategy:DdsInstanceBackupStrategy"
                    },
                    "balancerActiveBegin": {
                        "type": "string"
                    },
                    "balancerActiveEnd": {
                        "type": "string"
                    },
                    "balancerStatus": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DdsInstanceConfiguration:DdsInstanceConfiguration"
                        },
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "datastore": {
                        "$ref": "#/types/sbercloud:index/DdsInstanceDatastore:DdsInstanceDatastore",
                        "willReplaceOnChanges": true
                    },
                    "dbUsername": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskEncryptionId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DdsInstanceFlavor:DdsInstanceFlavor"
                        },
                        "willReplaceOnChanges": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DdsInstanceGroup:DdsInstanceGroup"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DdsInstanceNode:DdsInstanceNode"
                        },
                        "description": "This field is deprecated.\n"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/disStream:DisStream": {
            "properties": {
                "autoScaleMaxPartitionCount": {
                    "type": "integer"
                },
                "autoScaleMinPartitionCount": {
                    "type": "integer"
                },
                "compressionFormat": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "csvDelimiter": {
                    "type": "string"
                },
                "dataSchema": {
                    "type": "string"
                },
                "dataType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "partitionCount": {
                    "type": "integer"
                },
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DisStreamPartition:DisStreamPartition"
                    }
                },
                "readablePartitionCount": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "streamId": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "streamType": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "writablePartitionCount": {
                    "type": "integer"
                }
            },
            "required": [
                "autoScaleMaxPartitionCount",
                "autoScaleMinPartitionCount",
                "compressionFormat",
                "created",
                "csvDelimiter",
                "dataSchema",
                "dataType",
                "enterpriseProjectId",
                "partitionCount",
                "partitions",
                "readablePartitionCount",
                "region",
                "status",
                "streamId",
                "streamName",
                "streamType",
                "writablePartitionCount"
            ],
            "inputProperties": {
                "autoScaleMaxPartitionCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "autoScaleMinPartitionCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "compressionFormat": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "csvDelimiter": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataSchema": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "partitionCount": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "retentionPeriod": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "streamName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "streamType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "partitionCount",
                "streamName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DisStream resources.\n",
                "properties": {
                    "autoScaleMaxPartitionCount": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "autoScaleMinPartitionCount": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "compressionFormat": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "created": {
                        "type": "integer"
                    },
                    "csvDelimiter": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataSchema": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "partitionCount": {
                        "type": "integer"
                    },
                    "partitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DisStreamPartition:DisStreamPartition"
                        }
                    },
                    "readablePartitionCount": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "retentionPeriod": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "streamName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "streamType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "writablePartitionCount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dliDatabase:DliDatabase": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "enterpriseProjectId",
                "name",
                "owner",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DliDatabase resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dliPackage:DliPackage": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "isAsync": {
                    "type": "boolean"
                },
                "objectName": {
                    "type": "string"
                },
                "objectPath": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "isAsync",
                "objectName",
                "objectPath",
                "owner",
                "region",
                "status",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isAsync": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "objectPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "objectPath",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DliPackage resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "isAsync": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "objectName": {
                        "type": "string"
                    },
                    "objectPath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dliQueue:DliQueue": {
            "properties": {
                "createTime": {
                    "type": "integer"
                },
                "cuCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "elasticResourcePoolName": {
                    "type": "string",
                    "description": "The name of the elastic resource pool to which the queue belongs.\n"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "feature": {
                    "type": "string"
                },
                "managementSubnetCidr": {
                    "type": "string",
                    "deprecationMessage": "management_subnet_cidr is Deprecated"
                },
                "name": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "queueType": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceMode": {
                    "type": "integer",
                    "description": "The queue resource mode.\n"
                },
                "scalingPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DliQueueScalingPolicy:DliQueueScalingPolicy"
                    }
                },
                "sparkDriver": {
                    "$ref": "#/types/sbercloud:index/DliQueueSparkDriver:DliQueueSparkDriver"
                },
                "subnetCidr": {
                    "type": "string",
                    "deprecationMessage": "subnet_cidr is Deprecated"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcCidr": {
                    "type": "string",
                    "description": "The CIDR block of the queue.\n"
                }
            },
            "required": [
                "createTime",
                "cuCount",
                "description",
                "elasticResourcePoolName",
                "enterpriseProjectId",
                "name",
                "region",
                "resourceMode",
                "scalingPolicies",
                "vpcCidr"
            ],
            "inputProperties": {
                "cuCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "elasticResourcePoolName": {
                    "type": "string",
                    "description": "The name of the elastic resource pool to which the queue belongs.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "feature": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "managementSubnetCidr": {
                    "type": "string",
                    "deprecationMessage": "management_subnet_cidr is Deprecated",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "platform": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "queueType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "resourceMode": {
                    "type": "integer",
                    "description": "The queue resource mode.\n",
                    "willReplaceOnChanges": true
                },
                "scalingPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DliQueueScalingPolicy:DliQueueScalingPolicy"
                    }
                },
                "sparkDriver": {
                    "$ref": "#/types/sbercloud:index/DliQueueSparkDriver:DliQueueSparkDriver"
                },
                "subnetCidr": {
                    "type": "string",
                    "deprecationMessage": "subnet_cidr is Deprecated",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "vpcCidr": {
                    "type": "string",
                    "description": "The CIDR block of the queue.\n"
                }
            },
            "requiredInputs": [
                "cuCount"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DliQueue resources.\n",
                "properties": {
                    "createTime": {
                        "type": "integer"
                    },
                    "cuCount": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "elasticResourcePoolName": {
                        "type": "string",
                        "description": "The name of the elastic resource pool to which the queue belongs.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "feature": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "managementSubnetCidr": {
                        "type": "string",
                        "deprecationMessage": "management_subnet_cidr is Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "platform": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "queueType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceMode": {
                        "type": "integer",
                        "description": "The queue resource mode.\n",
                        "willReplaceOnChanges": true
                    },
                    "scalingPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DliQueueScalingPolicy:DliQueueScalingPolicy"
                        }
                    },
                    "sparkDriver": {
                        "$ref": "#/types/sbercloud:index/DliQueueSparkDriver:DliQueueSparkDriver"
                    },
                    "subnetCidr": {
                        "type": "string",
                        "deprecationMessage": "subnet_cidr is Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "vpcCidr": {
                        "type": "string",
                        "description": "The CIDR block of the queue.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dliSparkJob:DliSparkJob": {
            "properties": {
                "appName": {
                    "type": "string"
                },
                "appParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configurations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "dependentPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DliSparkJobDependentPackage:DliSparkJobDependentPackage"
                    }
                },
                "driverCores": {
                    "type": "integer"
                },
                "driverMemory": {
                    "type": "string"
                },
                "executorCores": {
                    "type": "integer"
                },
                "executorMemory": {
                    "type": "string"
                },
                "executors": {
                    "type": "integer"
                },
                "feature": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jars": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mainClass": {
                    "type": "string"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "pythonFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queueName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sparkVersion": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                }
            },
            "required": [
                "appName",
                "createdAt",
                "name",
                "owner",
                "queueName",
                "region"
            ],
            "inputProperties": {
                "appName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "appParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "configurations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dependentPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DliSparkJobDependentPackage:DliSparkJobDependentPackage"
                    },
                    "willReplaceOnChanges": true
                },
                "driverCores": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "driverMemory": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "executorCores": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "executorMemory": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "executors": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "feature": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "jars": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "mainClass": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maxRetries": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "pythonFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "queueName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sparkVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "specification": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "appName",
                "queueName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DliSparkJob resources.\n",
                "properties": {
                    "appName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "appParameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "configurations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dependentPackages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DliSparkJobDependentPackage:DliSparkJobDependentPackage"
                        },
                        "willReplaceOnChanges": true
                    },
                    "driverCores": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "driverMemory": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "executorCores": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "executorMemory": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "executors": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "feature": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "jars": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "mainClass": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maxRetries": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string"
                    },
                    "pythonFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "queueName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sparkVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "specification": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dmsInstance:DmsInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectAddress": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "partitionNum": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityGroupName": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                },
                "vpcName": {
                    "type": "string"
                }
            },
            "required": [
                "availableZones",
                "connectAddress",
                "createdAt",
                "description",
                "engine",
                "maintainBegin",
                "maintainEnd",
                "name",
                "orderId",
                "port",
                "productId",
                "region",
                "resourceSpecCode",
                "securityGroupId",
                "securityGroupName",
                "specification",
                "status",
                "storageSpace",
                "storageSpecCode",
                "subnetId",
                "subnetName",
                "type",
                "usedStorageSpace",
                "userId",
                "vpcId",
                "vpcName"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "engine": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partitionNum": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "productId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "availableZones",
                "engine",
                "productId",
                "securityGroupId",
                "storageSpace",
                "storageSpecCode",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsInstance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string"
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "connectAddress": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "partitionNum": {
                        "type": "integer"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "port": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceSpecCode": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageSpace": {
                        "type": "integer"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "subnetName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "usedStorageSpace": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dmsKafkaInstance:DmsKafkaInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "archType": {
                    "type": "string"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead."
                },
                "bandwidth": {
                    "type": "string",
                    "deprecationMessage": "The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id."
                },
                "brokerNum": {
                    "type": "integer"
                },
                "certReplaced": {
                    "type": "boolean"
                },
                "chargingMode": {
                    "type": "string"
                },
                "connectAddress": {
                    "type": "string"
                },
                "connectorId": {
                    "type": "string"
                },
                "connectorNodeNum": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaInstanceCrossVpcAccess:DmsKafkaInstanceCrossVpcAccess"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dumping": {
                    "type": "boolean"
                },
                "enableAutoTopic": {
                    "type": "boolean"
                },
                "enablePublicIp": {
                    "type": "boolean"
                },
                "enabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendTimes": {
                    "type": "integer"
                },
                "flavorId": {
                    "type": "string"
                },
                "ipv6ConnectAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "isLogicalVolume": {
                    "type": "boolean"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "managerPassword": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "secret": true
                },
                "managerUser": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "manegementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                },
                "messageQueryInstEnable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "newTenantIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNum": {
                    "type": "integer"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaInstanceParameter:DmsKafkaInstanceParameter"
                    }
                },
                "partitionNum": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "podConnectAddress": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portProtocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaInstancePortProtocol:DmsKafkaInstancePortProtocol"
                    }
                },
                "productId": {
                    "type": "string"
                },
                "publicBandwidth": {
                    "type": "integer"
                },
                "publicIpAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "retentionPolicy": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityProtocol": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "sslTwoWayEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "storageResourceId": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "storageType": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vpcClientPlain": {
                    "type": "boolean"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZones",
                "availableZones",
                "bandwidth",
                "brokerNum",
                "certReplaced",
                "chargingMode",
                "connectAddress",
                "connectorId",
                "connectorNodeNum",
                "createdAt",
                "crossVpcAccesses",
                "dumping",
                "enableAutoTopic",
                "enablePublicIp",
                "engine",
                "engineVersion",
                "enterpriseProjectId",
                "extendTimes",
                "ipv6ConnectAddresses",
                "ipv6Enable",
                "isLogicalVolume",
                "maintainBegin",
                "maintainEnd",
                "managementConnectAddress",
                "manegementConnectAddress",
                "messageQueryInstEnable",
                "name",
                "networkId",
                "nodeNum",
                "parameters",
                "partitionNum",
                "podConnectAddress",
                "port",
                "portProtocols",
                "publicBandwidth",
                "publicIpAddresses",
                "region",
                "resourceSpecCode",
                "retentionPolicy",
                "securityGroupId",
                "sslEnable",
                "sslTwoWayEnable",
                "status",
                "storageResourceId",
                "storageSpace",
                "storageSpecCode",
                "storageType",
                "type",
                "usedStorageSpace",
                "userId",
                "userName",
                "vpcClientPlain",
                "vpcId"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "archType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                    "willReplaceOnChanges": true
                },
                "bandwidth": {
                    "type": "string",
                    "deprecationMessage": "The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.",
                    "willReplaceOnChanges": true
                },
                "brokerNum": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaInstanceCrossVpcAccess:DmsKafkaInstanceCrossVpcAccess"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dumping": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "enableAutoTopic": {
                    "type": "boolean"
                },
                "enabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managerPassword": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "managerUser": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "newTenantIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaInstanceParameter:DmsKafkaInstanceParameter"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "productId": {
                    "type": "string"
                },
                "publicIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "retentionPolicy": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityProtocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslEnable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcClientPlain": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "engineVersion",
                "networkId",
                "securityGroupId",
                "storageSpecCode",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsKafkaInstance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "archType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required\n",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                        "willReplaceOnChanges": true
                    },
                    "bandwidth": {
                        "type": "string",
                        "deprecationMessage": "The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.",
                        "willReplaceOnChanges": true
                    },
                    "brokerNum": {
                        "type": "integer"
                    },
                    "certReplaced": {
                        "type": "boolean"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "connectAddress": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "string"
                    },
                    "connectorNodeNum": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "crossVpcAccesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DmsKafkaInstanceCrossVpcAccess:DmsKafkaInstanceCrossVpcAccess"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "dumping": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "enableAutoTopic": {
                        "type": "boolean"
                    },
                    "enablePublicIp": {
                        "type": "boolean"
                    },
                    "enabledMechanisms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendTimes": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "ipv6ConnectAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "isLogicalVolume": {
                        "type": "boolean"
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "managementConnectAddress": {
                        "type": "string",
                        "deprecationMessage": "Deprecated"
                    },
                    "managerPassword": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "managerUser": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "manegementConnectAddress": {
                        "type": "string",
                        "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                    },
                    "messageQueryInstEnable": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "newTenantIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nodeNum": {
                        "type": "integer"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DmsKafkaInstanceParameter:DmsKafkaInstanceParameter"
                        }
                    },
                    "partitionNum": {
                        "type": "integer"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "podConnectAddress": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "portProtocols": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DmsKafkaInstancePortProtocol:DmsKafkaInstancePortProtocol"
                        }
                    },
                    "productId": {
                        "type": "string"
                    },
                    "publicBandwidth": {
                        "type": "integer"
                    },
                    "publicIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIpIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceSpecCode": {
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "securityProtocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sslEnable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "sslTwoWayEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageResourceId": {
                        "type": "string"
                    },
                    "storageSpace": {
                        "type": "integer"
                    },
                    "storageSpecCode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "storageType": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "usedStorageSpace": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "vpcClientPlain": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dmsKafkaMessageProduce:DmsKafkaMessageProduce": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "propertyLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList"
                    }
                },
                "region": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            },
            "required": [
                "body",
                "instanceId",
                "region",
                "topic"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "propertyLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList"
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "body",
                "instanceId",
                "topic"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsKafkaMessageProduce resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "propertyLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList"
                        },
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dmsKafkaPermissions:DmsKafkaPermissions": {
            "properties": {
                "instanceId": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaPermissionsPolicy:DmsKafkaPermissionsPolicy"
                    }
                },
                "region": {
                    "type": "string"
                },
                "topicName": {
                    "type": "string"
                }
            },
            "required": [
                "instanceId",
                "policies",
                "region",
                "topicName"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaPermissionsPolicy:DmsKafkaPermissionsPolicy"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topicName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "policies",
                "topicName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsKafkaPermissions resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DmsKafkaPermissionsPolicy:DmsKafkaPermissionsPolicy"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "topicName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dmsKafkaTopic:DmsKafkaTopic": {
            "properties": {
                "agingTime": {
                    "type": "integer"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaTopicConfig:DmsKafkaTopicConfig"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "newPartitionBrokers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "partitions": {
                    "type": "integer"
                },
                "policiesOnly": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "replicas": {
                    "type": "integer"
                },
                "syncFlushing": {
                    "type": "boolean"
                },
                "syncReplication": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "agingTime",
                "configs",
                "createdAt",
                "instanceId",
                "name",
                "partitions",
                "policiesOnly",
                "region",
                "replicas",
                "syncFlushing",
                "syncReplication",
                "type"
            ],
            "inputProperties": {
                "agingTime": {
                    "type": "integer"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DmsKafkaTopicConfig:DmsKafkaTopicConfig"
                    }
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "newPartitionBrokers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "partitions": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "replicas": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "syncFlushing": {
                    "type": "boolean"
                },
                "syncReplication": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "instanceId",
                "partitions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsKafkaTopic resources.\n",
                "properties": {
                    "agingTime": {
                        "type": "integer"
                    },
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DmsKafkaTopicConfig:DmsKafkaTopicConfig"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "newPartitionBrokers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "partitions": {
                        "type": "integer"
                    },
                    "policiesOnly": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "replicas": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "syncFlushing": {
                        "type": "boolean"
                    },
                    "syncReplication": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dmsKafkaUser:DmsKafkaUser": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "defaultApp": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "defaultApp",
                "instanceId",
                "name",
                "password",
                "region",
                "role"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsKafkaUser resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultApp": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dmsRabbitmqInstance:DmsRabbitmqInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead."
                },
                "brokerNum": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string"
                },
                "connectAddress": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableAcl": {
                    "type": "boolean"
                },
                "enablePublicIp": {
                    "type": "boolean"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendTimes": {
                    "type": "integer"
                },
                "flavorId": {
                    "type": "string"
                },
                "isLogicalVolume": {
                    "type": "boolean"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managementConnectAddress": {
                    "type": "string"
                },
                "manegementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "product_id has deprecated, please use \"flavor_id\" instead."
                },
                "publicIpAddress": {
                    "type": "string"
                },
                "publicIpId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZones",
                "availableZones",
                "brokerNum",
                "chargingMode",
                "connectAddress",
                "createdAt",
                "enableAcl",
                "enablePublicIp",
                "engine",
                "enterpriseProjectId",
                "extendTimes",
                "isLogicalVolume",
                "maintainBegin",
                "maintainEnd",
                "managementConnectAddress",
                "manegementConnectAddress",
                "name",
                "networkId",
                "port",
                "publicIpAddress",
                "region",
                "resourceSpecCode",
                "securityGroupId",
                "specification",
                "status",
                "storageSpace",
                "storageSpecCode",
                "type",
                "usedStorageSpace",
                "userId",
                "userName",
                "vpcId"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                    "willReplaceOnChanges": true
                },
                "brokerNum": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enableAcl": {
                    "type": "boolean"
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "product_id has deprecated, please use \"flavor_id\" instead."
                },
                "publicIpId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networkId",
                "securityGroupId",
                "storageSpecCode",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRabbitmqInstance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required\n",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                        "willReplaceOnChanges": true
                    },
                    "brokerNum": {
                        "type": "integer"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "connectAddress": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableAcl": {
                        "type": "boolean"
                    },
                    "enablePublicIp": {
                        "type": "boolean"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendTimes": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "isLogicalVolume": {
                        "type": "boolean"
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "managementConnectAddress": {
                        "type": "string"
                    },
                    "manegementConnectAddress": {
                        "type": "string",
                        "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "productId": {
                        "type": "string",
                        "deprecationMessage": "product_id has deprecated, please use \"flavor_id\" instead."
                    },
                    "publicIpAddress": {
                        "type": "string"
                    },
                    "publicIpId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceSpecCode": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "sslEnable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageSpace": {
                        "type": "integer"
                    },
                    "storageSpecCode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "usedStorageSpace": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dnsRecordset:DnsRecordset": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "records",
                "region",
                "type",
                "zoneId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "records",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecordset resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "zoneId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dnsZone:DnsZone": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the zone.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the administrator managing the zone.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the zone.\n"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the masters of the DNS server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the zone.\n"
                },
                "proxyPattern": {
                    "type": "string",
                    "description": "The recursive resolution proxy mode for subdomains of the private zone.\n"
                },
                "region": {
                    "type": "string"
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DnsZoneRouter:DnsZoneRouter"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the zone.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the zone.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live (TTL) of the zone.\n"
                },
                "zoneType": {
                    "type": "string",
                    "description": "The type of zone.\n"
                }
            },
            "required": [
                "email",
                "enterpriseProjectId",
                "masters",
                "name",
                "proxyPattern",
                "region",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the zone.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the administrator managing the zone.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the zone.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the zone.\n",
                    "willReplaceOnChanges": true
                },
                "proxyPattern": {
                    "type": "string",
                    "description": "The recursive resolution proxy mode for subdomains of the private zone.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DnsZoneRouter:DnsZoneRouter"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the zone.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the zone.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live (TTL) of the zone.\n"
                },
                "zoneType": {
                    "type": "string",
                    "description": "The type of zone.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the zone.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the administrator managing the zone.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID of the zone.\n",
                        "willReplaceOnChanges": true
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the masters of the DNS server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the zone.\n",
                        "willReplaceOnChanges": true
                    },
                    "proxyPattern": {
                        "type": "string",
                        "description": "The recursive resolution proxy mode for subdomains of the private zone.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DnsZoneRouter:DnsZoneRouter"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the zone.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The key/value pairs to associate with the zone.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The time to live (TTL) of the zone.\n"
                    },
                    "zoneType": {
                        "type": "string",
                        "description": "The type of zone.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/drsJob:DrsJob": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationDb": {
                    "$ref": "#/types/sbercloud:index/DrsJobDestinationDb:DrsJobDestinationDb"
                },
                "destinationDbReadnoly": {
                    "type": "boolean"
                },
                "direction": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expiredDays": {
                    "type": "integer"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "limitSpeeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DrsJobLimitSpeed:DrsJobLimitSpeed"
                    }
                },
                "migrateDefiner": {
                    "type": "boolean"
                },
                "migrationType": {
                    "type": "string"
                },
                "multiWrite": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "netType": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sourceDb": {
                    "$ref": "#/types/sbercloud:index/DrsJobSourceDb:DrsJobSourceDb"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "destinationDb",
                "direction",
                "engineType",
                "name",
                "privateIp",
                "publicIp",
                "region",
                "sourceDb",
                "status",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "destinationDb": {
                    "$ref": "#/types/sbercloud:index/DrsJobDestinationDb:DrsJobDestinationDb",
                    "willReplaceOnChanges": true
                },
                "destinationDbReadnoly": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "direction": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "expiredDays": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "limitSpeeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DrsJobLimitSpeed:DrsJobLimitSpeed"
                    },
                    "willReplaceOnChanges": true
                },
                "migrateDefiner": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "migrationType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "multiWrite": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "netType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceDb": {
                    "$ref": "#/types/sbercloud:index/DrsJobSourceDb:DrsJobSourceDb",
                    "willReplaceOnChanges": true
                },
                "startTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destinationDb",
                "direction",
                "engineType",
                "sourceDb",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DrsJob resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "destinationDb": {
                        "$ref": "#/types/sbercloud:index/DrsJobDestinationDb:DrsJobDestinationDb",
                        "willReplaceOnChanges": true
                    },
                    "destinationDbReadnoly": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "direction": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expiredDays": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "forceDestroy": {
                        "type": "boolean"
                    },
                    "limitSpeeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DrsJobLimitSpeed:DrsJobLimitSpeed"
                        },
                        "willReplaceOnChanges": true
                    },
                    "migrateDefiner": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "migrationType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "multiWrite": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "netType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceDb": {
                        "$ref": "#/types/sbercloud:index/DrsJobSourceDb:DrsJobSourceDb",
                        "willReplaceOnChanges": true
                    },
                    "startTime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/dwsCluster:DwsCluster": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone in which to create the cluster instance.\n"
                },
                "created": {
                    "type": "string",
                    "description": "The creation time of the cluster.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the cluster.\n"
                },
                "dssPoolId": {
                    "type": "string",
                    "description": "Dedicated storage pool ID.\n"
                },
                "elbId": {
                    "type": "string",
                    "description": "The ID of the ELB load balancer.\n"
                },
                "elbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DwsClusterElb:DwsClusterElb"
                    },
                    "description": "The ELB information bound to the cluster.\n"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DwsClusterEndpoint:DwsClusterEndpoint"
                    },
                    "description": "Private network connection information about the cluster.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "forceBackup": {
                    "type": "boolean",
                    "description": "Whether to automatically execute snapshot when shrinking the number of nodes.\n"
                },
                "keepLastManualSnapshot": {
                    "type": "integer",
                    "description": "The number of latest manual snapshots that need to be retained when deleting the cluster.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID.\n"
                },
                "logicalClusterEnable": {
                    "type": "boolean",
                    "description": "Whether to enable logical cluster.\n"
                },
                "ltsEnable": {
                    "type": "boolean",
                    "description": "Whether to enable LTS.\n"
                },
                "maintainWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DwsClusterMaintainWindow:DwsClusterMaintainWindow"
                    },
                    "description": "Cluster maintenance window.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The cluster name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The subnet ID.\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "The flavor of the cluster.\n"
                },
                "numberOfCn": {
                    "type": "integer",
                    "description": "schema: Required\n"
                },
                "numberOfNode": {
                    "type": "integer",
                    "description": "Number of nodes in a cluster.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Service port of a cluster (8000 to 10000). The default value is 8000.\n"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private network IP addresses.\n"
                },
                "publicEndpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/DwsClusterPublicEndpoint:DwsClusterPublicEndpoint"
                    },
                    "description": "Public network connection information about the cluster.\n"
                },
                "publicIp": {
                    "$ref": "#/types/sbercloud:index/DwsClusterPublicIp:DwsClusterPublicIp"
                },
                "recentEvent": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The cluster status.\n"
                },
                "subStatus": {
                    "type": "string",
                    "description": "Sub-status of clusters in the AVAILABLE state.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the cluster.\n"
                },
                "taskStatus": {
                    "type": "string",
                    "description": "Cluster management task.\n"
                },
                "updated": {
                    "type": "string",
                    "description": "The updated time of the cluster.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Administrator username for logging in to a data warehouse cluster.\n"
                },
                "userPwd": {
                    "type": "string",
                    "description": "Administrator password for logging in to a data warehouse cluster.\n",
                    "secret": true
                },
                "version": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "volume": {
                    "$ref": "#/types/sbercloud:index/DwsClusterVolume:DwsClusterVolume"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID.\n"
                }
            },
            "required": [
                "availabilityZone",
                "created",
                "dssPoolId",
                "elbs",
                "endpoints",
                "enterpriseProjectId",
                "kmsKeyId",
                "maintainWindows",
                "name",
                "networkId",
                "nodeType",
                "numberOfNode",
                "privateIps",
                "publicEndpoints",
                "publicIp",
                "recentEvent",
                "region",
                "securityGroupId",
                "status",
                "subStatus",
                "taskStatus",
                "updated",
                "userName",
                "userPwd",
                "version",
                "volume",
                "vpcId"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone in which to create the cluster instance.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the cluster.\n"
                },
                "dssPoolId": {
                    "type": "string",
                    "description": "Dedicated storage pool ID.\n",
                    "willReplaceOnChanges": true
                },
                "elbId": {
                    "type": "string",
                    "description": "The ID of the ELB load balancer.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "forceBackup": {
                    "type": "boolean",
                    "description": "Whether to automatically execute snapshot when shrinking the number of nodes.\n"
                },
                "keepLastManualSnapshot": {
                    "type": "integer",
                    "description": "The number of latest manual snapshots that need to be retained when deleting the cluster.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID.\n",
                    "willReplaceOnChanges": true
                },
                "logicalClusterEnable": {
                    "type": "boolean",
                    "description": "Whether to enable logical cluster.\n"
                },
                "ltsEnable": {
                    "type": "boolean",
                    "description": "Whether to enable LTS.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The cluster name.\n",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "description": "The subnet ID.\n",
                    "willReplaceOnChanges": true
                },
                "nodeType": {
                    "type": "string",
                    "description": "The flavor of the cluster.\n",
                    "willReplaceOnChanges": true
                },
                "numberOfCn": {
                    "type": "integer",
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "numberOfNode": {
                    "type": "integer",
                    "description": "Number of nodes in a cluster.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Service port of a cluster (8000 to 10000). The default value is 8000.\n",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "$ref": "#/types/sbercloud:index/DwsClusterPublicIp:DwsClusterPublicIp"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the cluster.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Administrator username for logging in to a data warehouse cluster.\n",
                    "willReplaceOnChanges": true
                },
                "userPwd": {
                    "type": "string",
                    "description": "Administrator password for logging in to a data warehouse cluster.\n",
                    "secret": true
                },
                "version": {
                    "type": "string",
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "volume": {
                    "$ref": "#/types/sbercloud:index/DwsClusterVolume:DwsClusterVolume",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "networkId",
                "nodeType",
                "numberOfNode",
                "securityGroupId",
                "userName",
                "userPwd",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DwsCluster resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "description": "The availability zone in which to create the cluster instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "created": {
                        "type": "string",
                        "description": "The creation time of the cluster.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the cluster.\n"
                    },
                    "dssPoolId": {
                        "type": "string",
                        "description": "Dedicated storage pool ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "elbId": {
                        "type": "string",
                        "description": "The ID of the ELB load balancer.\n"
                    },
                    "elbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DwsClusterElb:DwsClusterElb"
                        },
                        "description": "The ELB information bound to the cluster.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DwsClusterEndpoint:DwsClusterEndpoint"
                        },
                        "description": "Private network connection information about the cluster.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID.\n"
                    },
                    "forceBackup": {
                        "type": "boolean",
                        "description": "Whether to automatically execute snapshot when shrinking the number of nodes.\n"
                    },
                    "keepLastManualSnapshot": {
                        "type": "integer",
                        "description": "The number of latest manual snapshots that need to be retained when deleting the cluster.\n"
                    },
                    "kmsKeyId": {
                        "type": "string",
                        "description": "The KMS key ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "logicalClusterEnable": {
                        "type": "boolean",
                        "description": "Whether to enable logical cluster.\n"
                    },
                    "ltsEnable": {
                        "type": "boolean",
                        "description": "Whether to enable LTS.\n"
                    },
                    "maintainWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DwsClusterMaintainWindow:DwsClusterMaintainWindow"
                        },
                        "description": "Cluster maintenance window.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The cluster name.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The subnet ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeType": {
                        "type": "string",
                        "description": "The flavor of the cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "numberOfCn": {
                        "type": "integer",
                        "description": "schema: Required\n",
                        "willReplaceOnChanges": true
                    },
                    "numberOfNode": {
                        "type": "integer",
                        "description": "Number of nodes in a cluster.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Service port of a cluster (8000 to 10000). The default value is 8000.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private network IP addresses.\n"
                    },
                    "publicEndpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/DwsClusterPublicEndpoint:DwsClusterPublicEndpoint"
                        },
                        "description": "Public network connection information about the cluster.\n"
                    },
                    "publicIp": {
                        "$ref": "#/types/sbercloud:index/DwsClusterPublicIp:DwsClusterPublicIp"
                    },
                    "recentEvent": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The security group ID.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The cluster status.\n"
                    },
                    "subStatus": {
                        "type": "string",
                        "description": "Sub-status of clusters in the AVAILABLE state.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The key/value pairs to associate with the cluster.\n"
                    },
                    "taskStatus": {
                        "type": "string",
                        "description": "Cluster management task.\n"
                    },
                    "updated": {
                        "type": "string",
                        "description": "The updated time of the cluster.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "Administrator username for logging in to a data warehouse cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "userPwd": {
                        "type": "string",
                        "description": "Administrator password for logging in to a data warehouse cluster.\n",
                        "secret": true
                    },
                    "version": {
                        "type": "string",
                        "description": "schema: Required\n",
                        "willReplaceOnChanges": true
                    },
                    "volume": {
                        "$ref": "#/types/sbercloud:index/DwsClusterVolume:DwsClusterVolume",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbCertificate:ElbCertificate": {
            "properties": {
                "certificate": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expireTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "certificate",
                "createTime",
                "enterpriseProjectId",
                "expireTime",
                "name",
                "region",
                "updateTime"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "certificate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbCertificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbIpgroup:ElbIpgroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "ipLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbIpgroupIpList:ElbIpgroupIpList"
                    }
                },
                "listenerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "ipLists",
                "listenerIds",
                "name",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbIpgroupIpList:ElbIpgroupIpList"
                    }
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ipLists"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbIpgroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ElbIpgroupIpList:ElbIpgroupIpList"
                        }
                    },
                    "listenerIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbL7policy:ElbL7policy": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fixedResponseConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig"
                },
                "listenerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "provisioningStatus": {
                    "type": "string"
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "redirectPoolsConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig"
                    }
                },
                "redirectPoolsExtendConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig"
                },
                "redirectPoolsStickySessionConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig"
                },
                "redirectUrlConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig"
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "fixedResponseConfig",
                "listenerId",
                "name",
                "priority",
                "provisioningStatus",
                "redirectListenerId",
                "redirectPoolId",
                "redirectPoolsConfigs",
                "redirectPoolsExtendConfig",
                "redirectPoolsStickySessionConfig",
                "redirectUrlConfig",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "fixedResponseConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "redirectPoolsConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig"
                    }
                },
                "redirectPoolsExtendConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig"
                },
                "redirectPoolsStickySessionConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig"
                },
                "redirectUrlConfig": {
                    "$ref": "#/types/sbercloud:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "listenerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbL7policy resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "fixedResponseConfig": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "provisioningStatus": {
                        "type": "string"
                    },
                    "redirectListenerId": {
                        "type": "string"
                    },
                    "redirectPoolId": {
                        "type": "string"
                    },
                    "redirectPoolsConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig"
                        }
                    },
                    "redirectPoolsExtendConfig": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig"
                    },
                    "redirectPoolsStickySessionConfig": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig"
                    },
                    "redirectUrlConfig": {
                        "$ref": "#/types/sbercloud:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbL7rule:ElbL7rule": {
            "properties": {
                "compareType": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7ruleCondition:ElbL7ruleCondition"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "l7policyId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "compareType",
                "conditions",
                "createdAt",
                "l7policyId",
                "region",
                "type",
                "updatedAt",
                "value"
            ],
            "inputProperties": {
                "compareType": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbL7ruleCondition:ElbL7ruleCondition"
                    }
                },
                "l7policyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "compareType",
                "l7policyId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbL7rule resources.\n",
                "properties": {
                    "compareType": {
                        "type": "string"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ElbL7ruleCondition:ElbL7ruleCondition"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "l7policyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbListener:ElbListener": {
            "properties": {
                "accessPolicy": {
                    "type": "string"
                },
                "advancedForwardingEnabled": {
                    "type": "boolean"
                },
                "caCertificate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableMemberRetry": {
                    "type": "boolean"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "forwardEip": {
                    "type": "boolean"
                },
                "forwardElb": {
                    "type": "boolean"
                },
                "forwardHost": {
                    "type": "boolean"
                },
                "forwardPort": {
                    "type": "boolean"
                },
                "forwardProto": {
                    "type": "boolean"
                },
                "forwardRequestPort": {
                    "type": "boolean"
                },
                "forwardTlsCertificate": {
                    "type": "boolean"
                },
                "forwardTlsCipher": {
                    "type": "boolean"
                },
                "forwardTlsProtocol": {
                    "type": "boolean"
                },
                "gzipEnable": {
                    "type": "boolean"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "idleTimeout": {
                    "type": "integer"
                },
                "ipGroup": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbListenerPortRange:ElbListenerPortRange"
                    }
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "proxyProtocolEnable": {
                    "type": "boolean"
                },
                "quicListenerId": {
                    "type": "string"
                },
                "realIp": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "requestTimeout": {
                    "type": "integer"
                },
                "responseTimeout": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                },
                "serverCertificate": {
                    "type": "string"
                },
                "sniCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sniMatchAlgo": {
                    "type": "string"
                },
                "sslEarlyDataEnable": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tlsCiphersPolicy": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "advancedForwardingEnabled",
                "createdAt",
                "defaultPoolId",
                "enableMemberRetry",
                "forwardEip",
                "forwardElb",
                "forwardPort",
                "forwardProto",
                "forwardRequestPort",
                "forwardTlsCertificate",
                "forwardTlsCipher",
                "forwardTlsProtocol",
                "gzipEnable",
                "http2Enable",
                "idleTimeout",
                "loadbalancerId",
                "name",
                "protectionStatus",
                "protocol",
                "protocolPort",
                "proxyProtocolEnable",
                "realIp",
                "region",
                "requestTimeout",
                "responseTimeout",
                "sniMatchAlgo",
                "tlsCiphersPolicy",
                "updatedAt"
            ],
            "inputProperties": {
                "accessPolicy": {
                    "type": "string"
                },
                "advancedForwardingEnabled": {
                    "type": "boolean"
                },
                "caCertificate": {
                    "type": "string"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableMemberRetry": {
                    "type": "boolean"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "forwardEip": {
                    "type": "boolean"
                },
                "forwardElb": {
                    "type": "boolean"
                },
                "forwardHost": {
                    "type": "boolean"
                },
                "forwardPort": {
                    "type": "boolean"
                },
                "forwardProto": {
                    "type": "boolean"
                },
                "forwardRequestPort": {
                    "type": "boolean"
                },
                "forwardTlsCertificate": {
                    "type": "boolean"
                },
                "forwardTlsCipher": {
                    "type": "boolean"
                },
                "forwardTlsProtocol": {
                    "type": "boolean"
                },
                "gzipEnable": {
                    "type": "boolean"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "idleTimeout": {
                    "type": "integer"
                },
                "ipGroup": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "portRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbListenerPortRange:ElbListenerPortRange"
                    },
                    "willReplaceOnChanges": true
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocolPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "proxyProtocolEnable": {
                    "type": "boolean"
                },
                "quicListenerId": {
                    "type": "string"
                },
                "realIp": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "requestTimeout": {
                    "type": "integer"
                },
                "responseTimeout": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                },
                "serverCertificate": {
                    "type": "string"
                },
                "sniCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sniMatchAlgo": {
                    "type": "string"
                },
                "sslEarlyDataEnable": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tlsCiphersPolicy": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "loadbalancerId",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbListener resources.\n",
                "properties": {
                    "accessPolicy": {
                        "type": "string"
                    },
                    "advancedForwardingEnabled": {
                        "type": "boolean"
                    },
                    "caCertificate": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultPoolId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableMemberRetry": {
                        "type": "boolean"
                    },
                    "forceDelete": {
                        "type": "boolean"
                    },
                    "forwardEip": {
                        "type": "boolean"
                    },
                    "forwardElb": {
                        "type": "boolean"
                    },
                    "forwardHost": {
                        "type": "boolean"
                    },
                    "forwardPort": {
                        "type": "boolean"
                    },
                    "forwardProto": {
                        "type": "boolean"
                    },
                    "forwardRequestPort": {
                        "type": "boolean"
                    },
                    "forwardTlsCertificate": {
                        "type": "boolean"
                    },
                    "forwardTlsCipher": {
                        "type": "boolean"
                    },
                    "forwardTlsProtocol": {
                        "type": "boolean"
                    },
                    "gzipEnable": {
                        "type": "boolean"
                    },
                    "http2Enable": {
                        "type": "boolean"
                    },
                    "idleTimeout": {
                        "type": "integer"
                    },
                    "ipGroup": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "portRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ElbListenerPortRange:ElbListenerPortRange"
                        },
                        "willReplaceOnChanges": true
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocolPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "proxyProtocolEnable": {
                        "type": "boolean"
                    },
                    "quicListenerId": {
                        "type": "string"
                    },
                    "realIp": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "requestTimeout": {
                        "type": "integer"
                    },
                    "responseTimeout": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "serverCertificate": {
                        "type": "string"
                    },
                    "sniCertificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sniMatchAlgo": {
                        "type": "string"
                    },
                    "sslEarlyDataEnable": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tlsCiphersPolicy": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbLoadbalancer:ElbLoadbalancer": {
            "properties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoscalingEnabled": {
                    "type": "boolean"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backendSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bandwidthChargeMode": {
                    "type": "string"
                },
                "bandwidthId": {
                    "type": "string"
                },
                "bandwidthSize": {
                    "type": "integer"
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "crossVpcBackend": {
                    "type": "boolean"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "guaranteed": {
                    "type": "boolean"
                },
                "gwFlavorId": {
                    "type": "string"
                },
                "iptype": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4Eip": {
                    "type": "string"
                },
                "ipv4EipId": {
                    "type": "string"
                },
                "ipv4PortId": {
                    "type": "string"
                },
                "ipv4SubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer resides\n"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6Eip": {
                    "type": "string"
                },
                "ipv6EipId": {
                    "type": "string"
                },
                "ipv6NetworkId": {
                    "type": "string",
                    "description": "the ID of the subnet where the load balancer resides\n"
                },
                "l4FlavorId": {
                    "type": "string"
                },
                "l7FlavorId": {
                    "type": "string"
                },
                "loadbalancerType": {
                    "type": "string"
                },
                "minL7FlavorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sharetype": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                },
                "wafFailureAction": {
                    "type": "string"
                }
            },
            "required": [
                "autoscalingEnabled",
                "availabilityZones",
                "backendSubnets",
                "bandwidthChargeMode",
                "bandwidthId",
                "bandwidthSize",
                "chargeMode",
                "chargingMode",
                "createdAt",
                "crossVpcBackend",
                "enterpriseProjectId",
                "guaranteed",
                "gwFlavorId",
                "iptype",
                "ipv4Address",
                "ipv4Eip",
                "ipv4EipId",
                "ipv4PortId",
                "ipv6Address",
                "ipv6Eip",
                "ipv6EipId",
                "l4FlavorId",
                "l7FlavorId",
                "loadbalancerType",
                "minL7FlavorId",
                "name",
                "protectionStatus",
                "region",
                "sharetype",
                "updatedAt",
                "vpcId",
                "wafFailureAction"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoscalingEnabled": {
                    "type": "boolean"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backendSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bandwidthChargeMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidthId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string"
                },
                "crossVpcBackend": {
                    "type": "boolean"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "iptype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4EipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv4SubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer resides\n"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6NetworkId": {
                    "type": "string",
                    "description": "the ID of the subnet where the load balancer resides\n"
                },
                "l4FlavorId": {
                    "type": "string"
                },
                "l7FlavorId": {
                    "type": "string"
                },
                "loadbalancerType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "minL7FlavorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sharetype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "wafFailureAction": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "availabilityZones"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbLoadbalancer resources.\n",
                "properties": {
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "autoscalingEnabled": {
                        "type": "boolean"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "backendSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bandwidthChargeMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthSize": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "crossVpcBackend": {
                        "type": "boolean"
                    },
                    "deletionProtectionEnable": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "forceDelete": {
                        "type": "boolean"
                    },
                    "guaranteed": {
                        "type": "boolean"
                    },
                    "gwFlavorId": {
                        "type": "string"
                    },
                    "iptype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4Eip": {
                        "type": "string"
                    },
                    "ipv4EipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv4PortId": {
                        "type": "string"
                    },
                    "ipv4SubnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet where the load balancer resides\n"
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "ipv6BandwidthId": {
                        "type": "string"
                    },
                    "ipv6Eip": {
                        "type": "string"
                    },
                    "ipv6EipId": {
                        "type": "string"
                    },
                    "ipv6NetworkId": {
                        "type": "string",
                        "description": "the ID of the subnet where the load balancer resides\n"
                    },
                    "l4FlavorId": {
                        "type": "string"
                    },
                    "l7FlavorId": {
                        "type": "string"
                    },
                    "loadbalancerType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "minL7FlavorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sharetype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "wafFailureAction": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbMember:ElbMember": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The IPv4 or IPv6 subnet ID of the subnet in which to access the member\n"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "name",
                "poolId",
                "protocolPort",
                "region",
                "weight"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocolPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "The IPv4 or IPv6 subnet ID of the subnet in which to access the member\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "address",
                "poolId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbMember resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocolPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The IPv4 or IPv6 subnet ID of the subnet in which to access the member\n",
                        "willReplaceOnChanges": true
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbMonitor:ElbMonitor": {
            "properties": {
                "domainName": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "poolId": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "required": [
                "domainName",
                "interval",
                "maxRetries",
                "poolId",
                "port",
                "protocol",
                "region",
                "statusCode",
                "timeout",
                "urlPath"
            ],
            "inputProperties": {
                "domainName": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "statusCode": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "interval",
                "maxRetries",
                "poolId",
                "protocol",
                "timeout"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbMonitor resources.\n",
                "properties": {
                    "domainName": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "integer"
                    },
                    "maxRetries": {
                        "type": "integer"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "statusCode": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "integer"
                    },
                    "urlPath": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbPool:ElbPool": {
            "properties": {
                "anyPortEnable": {
                    "type": "boolean"
                },
                "connectionDrainEnabled": {
                    "type": "boolean"
                },
                "connectionDrainTimeout": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "minimumHealthyMemberCount": {
                    "type": "integer"
                },
                "monitorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persistence": {
                    "$ref": "#/types/sbercloud:index/ElbPoolPersistence:ElbPoolPersistence"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "slowStartDuration": {
                    "type": "integer"
                },
                "slowStartEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "anyPortEnable",
                "connectionDrainEnabled",
                "connectionDrainTimeout",
                "createdAt",
                "ipVersion",
                "lbMethod",
                "listenerId",
                "loadbalancerId",
                "minimumHealthyMemberCount",
                "monitorId",
                "name",
                "protectionStatus",
                "protocol",
                "region",
                "slowStartDuration",
                "slowStartEnabled",
                "type",
                "updatedAt",
                "vpcId"
            ],
            "inputProperties": {
                "anyPortEnable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "connectionDrainEnabled": {
                    "type": "boolean"
                },
                "connectionDrainTimeout": {
                    "type": "integer"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "loadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "minimumHealthyMemberCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "persistence": {
                    "$ref": "#/types/sbercloud:index/ElbPoolPersistence:ElbPoolPersistence"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "slowStartDuration": {
                    "type": "integer"
                },
                "slowStartEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "lbMethod",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbPool resources.\n",
                "properties": {
                    "anyPortEnable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "connectionDrainEnabled": {
                        "type": "boolean"
                    },
                    "connectionDrainTimeout": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtectionEnable": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "minimumHealthyMemberCount": {
                        "type": "integer"
                    },
                    "monitorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "persistence": {
                        "$ref": "#/types/sbercloud:index/ElbPoolPersistence:ElbPoolPersistence"
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "slowStartDuration": {
                        "type": "integer"
                    },
                    "slowStartEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/elbSecurityPolicy:ElbSecurityPolicy": {
            "properties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the cipher suite list of the security policy.\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the ELB security policy\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the Enterprise router belongs.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ElbSecurityPolicyListener:ElbSecurityPolicyListener"
                    },
                    "description": "The listener which the security policy associated with.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the ELB security policy name.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the TSL protocol list which the security policy select.\n"
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "ciphers",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "listeners",
                "name",
                "protocols",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the cipher suite list of the security policy.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the ELB security policy\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the Enterprise router belongs.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the ELB security policy name.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the TSL protocol list which the security policy select.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ciphers",
                "protocols"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbSecurityPolicy resources.\n",
                "properties": {
                    "ciphers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the cipher suite list of the security policy.\n"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the ELB security policy\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID to which the Enterprise router belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ElbSecurityPolicyListener:ElbSecurityPolicyListener"
                        },
                        "description": "The listener which the security policy associated with.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the ELB security policy name.\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the TSL protocol list which the security policy select.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/enterpriseProject:EnterpriseProject": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "skipDisableOnDestroy": {
                    "type": "boolean"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "name",
                "status",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "skipDisableOnDestroy": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EnterpriseProject resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enable": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "skipDisableOnDestroy": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/evsSnapshot:EvsSnapshot": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "force": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "region",
                "size",
                "status",
                "volumeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "force": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volumeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvsSnapshot resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/evsVolume:EvsVolume": {
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/EvsVolumeAttachment:EvsVolumeAttachment"
                    }
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "backupId": {
                    "type": "string"
                },
                "cascade": {
                    "type": "boolean"
                },
                "chargingMode": {
                    "type": "string"
                },
                "dedicatedStorageId": {
                    "type": "string"
                },
                "dedicatedStorageName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsId": {
                    "type": "string"
                },
                "multiattach": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "throughput": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                },
                "wwn": {
                    "type": "string"
                }
            },
            "required": [
                "attachments",
                "availabilityZone",
                "chargingMode",
                "dedicatedStorageName",
                "enterpriseProjectId",
                "iops",
                "name",
                "region",
                "size",
                "status",
                "throughput",
                "volumeType",
                "wwn"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cascade": {
                    "type": "boolean"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedStorageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer"
                },
                "kmsId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "multiattach": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serverId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "throughput": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "volumeType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvsVolume resources.\n",
                "properties": {
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/EvsVolumeAttachment:EvsVolumeAttachment"
                        }
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cascade": {
                        "type": "boolean"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dedicatedStorageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dedicatedStorageName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "iops": {
                        "type": "integer"
                    },
                    "kmsId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "multiattach": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serverId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "snapshotId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "throughput": {
                        "type": "integer"
                    },
                    "volumeType": {
                        "type": "string"
                    },
                    "wwn": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/fgsFunction:FgsFunction": {
            "properties": {
                "agency": {
                    "type": "string",
                    "description": "The agency configuration of the function.\n"
                },
                "app": {
                    "type": "string",
                    "description": "The group to which the function belongs.\n"
                },
                "appAgency": {
                    "type": "string",
                    "description": "The execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.\n"
                },
                "codeFilename": {
                    "type": "string",
                    "description": "The name of the function file.\n"
                },
                "codeType": {
                    "type": "string",
                    "description": "The code type of the function.\n"
                },
                "codeUrl": {
                    "type": "string",
                    "description": "The URL where the function code is stored in OBS.\n"
                },
                "concurrencyNum": {
                    "type": "integer",
                    "description": "The number of concurrent requests of the function.\n"
                },
                "customImage": {
                    "$ref": "#/types/sbercloud:index/FgsFunctionCustomImage:FgsFunctionCustomImage",
                    "description": "The custom image configuration of the function.\n"
                },
                "dependLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of the dependencies.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function.\n"
                },
                "dnsList": {
                    "type": "string",
                    "description": "The private DNS configuration of the function network.\n"
                },
                "enableAuthInHeader": {
                    "type": "boolean",
                    "description": "Whether the authentication in the request header is enabled.\n"
                },
                "enableClassIsolation": {
                    "type": "boolean",
                    "description": "Whether the class isolation is enabled for the JAVA runtime functions.\n"
                },
                "enableDynamicMemory": {
                    "type": "boolean",
                    "description": "Whether the dynamic memory configuration is enabled.\n"
                },
                "encryptedUserData": {
                    "type": "string",
                    "description": "The key/value information defined to be encrypted for the function.\n",
                    "secret": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The ID of the enterprise project to which the function belongs.\n"
                },
                "ephemeralStorage": {
                    "type": "integer",
                    "description": "The size of the function ephemeral storage.\n"
                },
                "funcCode": {
                    "type": "string",
                    "description": "The function code.\n"
                },
                "funcMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionFuncMount:FgsFunctionFuncMount"
                    },
                    "description": "The list of function mount configuration.\n"
                },
                "functiongraphVersion": {
                    "type": "string",
                    "description": "The description of the function.\n"
                },
                "gpuMemory": {
                    "type": "integer",
                    "description": "The GPU memory size allocated to the function, in MByte (MB).\n"
                },
                "gpuType": {
                    "type": "string",
                    "description": "The GPU type of the function.\n"
                },
                "handler": {
                    "type": "string",
                    "description": "The entry point of the function.\n"
                },
                "heartbeatHandler": {
                    "type": "string",
                    "description": "The heartbeat handler of the function.\n"
                },
                "initializerHandler": {
                    "type": "string",
                    "description": "The initializer of the function.\n"
                },
                "initializerTimeout": {
                    "type": "integer",
                    "description": "The maximum duration the function can be initialized.\n"
                },
                "isStatefulFunction": {
                    "type": "boolean",
                    "description": "Whether the function is a stateful function.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "The LTS group ID for collecting logs.\n"
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The LTS group name for collecting logs.\n"
                },
                "logStreamId": {
                    "type": "string",
                    "description": "The LTS stream ID for collecting logs.\n"
                },
                "logStreamName": {
                    "type": "string",
                    "description": "The LTS stream name for collecting logs.\n"
                },
                "maxInstanceNum": {
                    "type": "string",
                    "description": "The maximum number of instances of the function.\n"
                },
                "memorySize": {
                    "type": "integer",
                    "description": "The memory size allocated to the function, in MByte (MB).\n"
                },
                "mountUserGroupId": {
                    "type": "integer",
                    "description": "The mount user group ID.\n"
                },
                "mountUserId": {
                    "type": "integer",
                    "description": "The mount user ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the function.\n"
                },
                "networkController": {
                    "$ref": "#/types/sbercloud:index/FgsFunctionNetworkController:FgsFunctionNetworkController",
                    "description": "The network configuration of the function.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The network ID of subnet.\n"
                },
                "package": {
                    "type": "string",
                    "deprecationMessage": "use app instead"
                },
                "peeringCidr": {
                    "type": "string",
                    "description": "The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC CIDR blocks used by the\nservice.\n"
                },
                "preStopHandler": {
                    "type": "string",
                    "description": "The pre-stop handler of a function.\n"
                },
                "preStopTimeout": {
                    "type": "integer",
                    "description": "The maximum duration that the function can be initialized.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function is located.\n"
                },
                "reservedInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionReservedInstance:FgsFunctionReservedInstance"
                    },
                    "description": "The reserved instance policies of the function.\n"
                },
                "restoreHookHandler": {
                    "type": "string",
                    "description": "The restore hook handler of the function.\n"
                },
                "restoreHookTimeout": {
                    "type": "integer",
                    "description": "The timeout of the function restore hook.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The environment for executing the function.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout interval of the function, in seconds.\n"
                },
                "urn": {
                    "type": "string",
                    "description": "The URN (Uniform Resource Name) of the function.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The key/value information defined for the function.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the function.\n"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionVersion:FgsFunctionVersion"
                    },
                    "description": "The versions management of the function.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the function belongs.\n"
                },
                "xrole": {
                    "type": "string",
                    "deprecationMessage": "use agency instead"
                }
            },
            "required": [
                "appAgency",
                "codeFilename",
                "codeType",
                "concurrencyNum",
                "customImage",
                "dependLists",
                "dnsList",
                "enterpriseProjectId",
                "ephemeralStorage",
                "funcMounts",
                "functiongraphVersion",
                "handler",
                "initializerHandler",
                "initializerTimeout",
                "logGroupId",
                "logGroupName",
                "logStreamId",
                "logStreamName",
                "maxInstanceNum",
                "memorySize",
                "mountUserGroupId",
                "mountUserId",
                "name",
                "region",
                "runtime",
                "timeout",
                "urn",
                "version"
            ],
            "inputProperties": {
                "agency": {
                    "type": "string",
                    "description": "The agency configuration of the function.\n"
                },
                "app": {
                    "type": "string",
                    "description": "The group to which the function belongs.\n"
                },
                "appAgency": {
                    "type": "string",
                    "description": "The execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.\n"
                },
                "codeFilename": {
                    "type": "string",
                    "description": "The name of the function file.\n"
                },
                "codeType": {
                    "type": "string",
                    "description": "The code type of the function.\n"
                },
                "codeUrl": {
                    "type": "string",
                    "description": "The URL where the function code is stored in OBS.\n"
                },
                "concurrencyNum": {
                    "type": "integer",
                    "description": "The number of concurrent requests of the function.\n"
                },
                "customImage": {
                    "$ref": "#/types/sbercloud:index/FgsFunctionCustomImage:FgsFunctionCustomImage",
                    "description": "The custom image configuration of the function.\n"
                },
                "dependLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of the dependencies.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function.\n"
                },
                "dnsList": {
                    "type": "string",
                    "description": "The private DNS configuration of the function network.\n"
                },
                "enableAuthInHeader": {
                    "type": "boolean",
                    "description": "Whether the authentication in the request header is enabled.\n"
                },
                "enableClassIsolation": {
                    "type": "boolean",
                    "description": "Whether the class isolation is enabled for the JAVA runtime functions.\n"
                },
                "enableDynamicMemory": {
                    "type": "boolean",
                    "description": "Whether the dynamic memory configuration is enabled.\n"
                },
                "encryptedUserData": {
                    "type": "string",
                    "description": "The key/value information defined to be encrypted for the function.\n",
                    "secret": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The ID of the enterprise project to which the function belongs.\n"
                },
                "ephemeralStorage": {
                    "type": "integer",
                    "description": "The size of the function ephemeral storage.\n"
                },
                "funcCode": {
                    "type": "string",
                    "description": "The function code.\n"
                },
                "funcMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionFuncMount:FgsFunctionFuncMount"
                    },
                    "description": "The list of function mount configuration.\n"
                },
                "functiongraphVersion": {
                    "type": "string",
                    "description": "The description of the function.\n",
                    "willReplaceOnChanges": true
                },
                "gpuMemory": {
                    "type": "integer",
                    "description": "The GPU memory size allocated to the function, in MByte (MB).\n"
                },
                "gpuType": {
                    "type": "string",
                    "description": "The GPU type of the function.\n"
                },
                "handler": {
                    "type": "string",
                    "description": "The entry point of the function.\n"
                },
                "heartbeatHandler": {
                    "type": "string",
                    "description": "The heartbeat handler of the function.\n"
                },
                "initializerHandler": {
                    "type": "string",
                    "description": "The initializer of the function.\n"
                },
                "initializerTimeout": {
                    "type": "integer",
                    "description": "The maximum duration the function can be initialized.\n"
                },
                "isStatefulFunction": {
                    "type": "boolean",
                    "description": "Whether the function is a stateful function.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "The LTS group ID for collecting logs.\n"
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The LTS group name for collecting logs.\n"
                },
                "logStreamId": {
                    "type": "string",
                    "description": "The LTS stream ID for collecting logs.\n"
                },
                "logStreamName": {
                    "type": "string",
                    "description": "The LTS stream name for collecting logs.\n"
                },
                "maxInstanceNum": {
                    "type": "string",
                    "description": "The maximum number of instances of the function.\n"
                },
                "memorySize": {
                    "type": "integer",
                    "description": "The memory size allocated to the function, in MByte (MB).\n"
                },
                "mountUserGroupId": {
                    "type": "integer",
                    "description": "The mount user group ID.\n"
                },
                "mountUserId": {
                    "type": "integer",
                    "description": "The mount user ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the function.\n",
                    "willReplaceOnChanges": true
                },
                "networkController": {
                    "$ref": "#/types/sbercloud:index/FgsFunctionNetworkController:FgsFunctionNetworkController",
                    "description": "The network configuration of the function.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The network ID of subnet.\n"
                },
                "package": {
                    "type": "string",
                    "deprecationMessage": "use app instead"
                },
                "peeringCidr": {
                    "type": "string",
                    "description": "The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC CIDR blocks used by the\nservice.\n"
                },
                "preStopHandler": {
                    "type": "string",
                    "description": "The pre-stop handler of a function.\n"
                },
                "preStopTimeout": {
                    "type": "integer",
                    "description": "The maximum duration that the function can be initialized.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function is located.\n",
                    "willReplaceOnChanges": true
                },
                "reservedInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionReservedInstance:FgsFunctionReservedInstance"
                    },
                    "description": "The reserved instance policies of the function.\n"
                },
                "restoreHookHandler": {
                    "type": "string",
                    "description": "The restore hook handler of the function.\n"
                },
                "restoreHookTimeout": {
                    "type": "integer",
                    "description": "The timeout of the function restore hook.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The environment for executing the function.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout interval of the function, in seconds.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The key/value information defined for the function.\n"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionVersion:FgsFunctionVersion"
                    },
                    "description": "The versions management of the function.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the function belongs.\n"
                },
                "xrole": {
                    "type": "string",
                    "deprecationMessage": "use agency instead"
                }
            },
            "requiredInputs": [
                "memorySize",
                "runtime",
                "timeout"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsFunction resources.\n",
                "properties": {
                    "agency": {
                        "type": "string",
                        "description": "The agency configuration of the function.\n"
                    },
                    "app": {
                        "type": "string",
                        "description": "The group to which the function belongs.\n"
                    },
                    "appAgency": {
                        "type": "string",
                        "description": "The execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.\n"
                    },
                    "codeFilename": {
                        "type": "string",
                        "description": "The name of the function file.\n"
                    },
                    "codeType": {
                        "type": "string",
                        "description": "The code type of the function.\n"
                    },
                    "codeUrl": {
                        "type": "string",
                        "description": "The URL where the function code is stored in OBS.\n"
                    },
                    "concurrencyNum": {
                        "type": "integer",
                        "description": "The number of concurrent requests of the function.\n"
                    },
                    "customImage": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionCustomImage:FgsFunctionCustomImage",
                        "description": "The custom image configuration of the function.\n"
                    },
                    "dependLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID list of the dependencies.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the function.\n"
                    },
                    "dnsList": {
                        "type": "string",
                        "description": "The private DNS configuration of the function network.\n"
                    },
                    "enableAuthInHeader": {
                        "type": "boolean",
                        "description": "Whether the authentication in the request header is enabled.\n"
                    },
                    "enableClassIsolation": {
                        "type": "boolean",
                        "description": "Whether the class isolation is enabled for the JAVA runtime functions.\n"
                    },
                    "enableDynamicMemory": {
                        "type": "boolean",
                        "description": "Whether the dynamic memory configuration is enabled.\n"
                    },
                    "encryptedUserData": {
                        "type": "string",
                        "description": "The key/value information defined to be encrypted for the function.\n",
                        "secret": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The ID of the enterprise project to which the function belongs.\n"
                    },
                    "ephemeralStorage": {
                        "type": "integer",
                        "description": "The size of the function ephemeral storage.\n"
                    },
                    "funcCode": {
                        "type": "string",
                        "description": "The function code.\n"
                    },
                    "funcMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/FgsFunctionFuncMount:FgsFunctionFuncMount"
                        },
                        "description": "The list of function mount configuration.\n"
                    },
                    "functiongraphVersion": {
                        "type": "string",
                        "description": "The description of the function.\n",
                        "willReplaceOnChanges": true
                    },
                    "gpuMemory": {
                        "type": "integer",
                        "description": "The GPU memory size allocated to the function, in MByte (MB).\n"
                    },
                    "gpuType": {
                        "type": "string",
                        "description": "The GPU type of the function.\n"
                    },
                    "handler": {
                        "type": "string",
                        "description": "The entry point of the function.\n"
                    },
                    "heartbeatHandler": {
                        "type": "string",
                        "description": "The heartbeat handler of the function.\n"
                    },
                    "initializerHandler": {
                        "type": "string",
                        "description": "The initializer of the function.\n"
                    },
                    "initializerTimeout": {
                        "type": "integer",
                        "description": "The maximum duration the function can be initialized.\n"
                    },
                    "isStatefulFunction": {
                        "type": "boolean",
                        "description": "Whether the function is a stateful function.\n"
                    },
                    "logGroupId": {
                        "type": "string",
                        "description": "The LTS group ID for collecting logs.\n"
                    },
                    "logGroupName": {
                        "type": "string",
                        "description": "The LTS group name for collecting logs.\n"
                    },
                    "logStreamId": {
                        "type": "string",
                        "description": "The LTS stream ID for collecting logs.\n"
                    },
                    "logStreamName": {
                        "type": "string",
                        "description": "The LTS stream name for collecting logs.\n"
                    },
                    "maxInstanceNum": {
                        "type": "string",
                        "description": "The maximum number of instances of the function.\n"
                    },
                    "memorySize": {
                        "type": "integer",
                        "description": "The memory size allocated to the function, in MByte (MB).\n"
                    },
                    "mountUserGroupId": {
                        "type": "integer",
                        "description": "The mount user group ID.\n"
                    },
                    "mountUserId": {
                        "type": "integer",
                        "description": "The mount user ID.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the function.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkController": {
                        "$ref": "#/types/sbercloud:index/FgsFunctionNetworkController:FgsFunctionNetworkController",
                        "description": "The network configuration of the function.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The network ID of subnet.\n"
                    },
                    "package": {
                        "type": "string",
                        "deprecationMessage": "use app instead"
                    },
                    "peeringCidr": {
                        "type": "string",
                        "description": "The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC CIDR blocks used by the\nservice.\n"
                    },
                    "preStopHandler": {
                        "type": "string",
                        "description": "The pre-stop handler of a function.\n"
                    },
                    "preStopTimeout": {
                        "type": "integer",
                        "description": "The maximum duration that the function can be initialized.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the function is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "reservedInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/FgsFunctionReservedInstance:FgsFunctionReservedInstance"
                        },
                        "description": "The reserved instance policies of the function.\n"
                    },
                    "restoreHookHandler": {
                        "type": "string",
                        "description": "The restore hook handler of the function.\n"
                    },
                    "restoreHookTimeout": {
                        "type": "integer",
                        "description": "The timeout of the function restore hook.\n"
                    },
                    "runtime": {
                        "type": "string",
                        "description": "The environment for executing the function.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The key/value pairs to associate with the function.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout interval of the function, in seconds.\n"
                    },
                    "urn": {
                        "type": "string",
                        "description": "The URN (Uniform Resource Name) of the function.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "The key/value information defined for the function.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the function.\n"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/FgsFunctionVersion:FgsFunctionVersion"
                        },
                        "description": "The versions management of the function.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC to which the function belongs.\n"
                    },
                    "xrole": {
                        "type": "string",
                        "deprecationMessage": "use agency instead"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/gesGraph:GesGraph": {
            "properties": {
                "azCode": {
                    "type": "string",
                    "description": "AZ code\n"
                },
                "cpuArch": {
                    "type": "string",
                    "description": "Graph instance's CPU architecture type.\n"
                },
                "cryptAlgorithm": {
                    "type": "string",
                    "description": "Graph instance cryptography algorithm.\n"
                },
                "enableFullTextIndex": {
                    "type": "boolean",
                    "description": "Whether to enable full-text index control for the created graph.\n"
                },
                "enableHttps": {
                    "type": "boolean",
                    "description": "Whether to enable the security mode. This mode may damage GES performance greatly.\n"
                },
                "enableHyg": {
                    "type": "boolean",
                    "description": "Whether to enable HyG for the graph. This parameter is available for database edition graphs only.\n"
                },
                "enableMultiAz": {
                    "type": "boolean",
                    "description": "Whether the created graph supports the cross-AZ mode. The default value is false.\n"
                },
                "enableRbac": {
                    "type": "boolean",
                    "description": "Whether to enable granular permission control for the created graph.\n"
                },
                "encryption": {
                    "$ref": "#/types/sbercloud:index/GesGraphEncryption:GesGraphEncryption",
                    "description": "Whether to enable data encryption The value can be true or false.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "graphSizeTypeIndex": {
                    "type": "string",
                    "description": "Graph size type index.\n"
                },
                "keepBackup": {
                    "type": "boolean",
                    "description": "Whether to retain the backups of a graph after it is deleted.\n"
                },
                "ltsOperationTrace": {
                    "$ref": "#/types/sbercloud:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace"
                },
                "name": {
                    "type": "string",
                    "description": "The graph name.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Floating IP address of a graph instance.\n"
                },
                "productType": {
                    "type": "string",
                    "description": "Graph product type\n"
                },
                "publicIp": {
                    "$ref": "#/types/sbercloud:index/GesGraphPublicIp:GesGraphPublicIp",
                    "description": "The information about public IP.\n"
                },
                "region": {
                    "type": "string"
                },
                "replication": {
                    "type": "integer"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of a graph.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The subnet ID.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the graph.\n"
                },
                "trafficIpLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Physical addresses of a graph instance for access from private networks.\n"
                },
                "vertexIdType": {
                    "$ref": "#/types/sbercloud:index/GesGraphVertexIdType:GesGraphVertexIdType",
                    "description": "ID type of vertices. This parameter is mandatory only for database edition graphs.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID.\n"
                }
            },
            "required": [
                "azCode",
                "cpuArch",
                "cryptAlgorithm",
                "enableFullTextIndex",
                "enableHttps",
                "enableHyg",
                "enableMultiAz",
                "enableRbac",
                "encryption",
                "enterpriseProjectId",
                "graphSizeTypeIndex",
                "keepBackup",
                "ltsOperationTrace",
                "name",
                "privateIp",
                "productType",
                "publicIp",
                "region",
                "replication",
                "securityGroupId",
                "status",
                "subnetId",
                "tags",
                "trafficIpLists",
                "vertexIdType",
                "vpcId"
            ],
            "inputProperties": {
                "cpuArch": {
                    "type": "string",
                    "description": "Graph instance's CPU architecture type.\n",
                    "willReplaceOnChanges": true
                },
                "cryptAlgorithm": {
                    "type": "string",
                    "description": "Graph instance cryptography algorithm.\n",
                    "willReplaceOnChanges": true
                },
                "enableFullTextIndex": {
                    "type": "boolean",
                    "description": "Whether to enable full-text index control for the created graph.\n",
                    "willReplaceOnChanges": true
                },
                "enableHttps": {
                    "type": "boolean",
                    "description": "Whether to enable the security mode. This mode may damage GES performance greatly.\n",
                    "willReplaceOnChanges": true
                },
                "enableHyg": {
                    "type": "boolean",
                    "description": "Whether to enable HyG for the graph. This parameter is available for database edition graphs only.\n",
                    "willReplaceOnChanges": true
                },
                "enableMultiAz": {
                    "type": "boolean",
                    "description": "Whether the created graph supports the cross-AZ mode. The default value is false.\n",
                    "willReplaceOnChanges": true
                },
                "enableRbac": {
                    "type": "boolean",
                    "description": "Whether to enable granular permission control for the created graph.\n",
                    "willReplaceOnChanges": true
                },
                "encryption": {
                    "$ref": "#/types/sbercloud:index/GesGraphEncryption:GesGraphEncryption",
                    "description": "Whether to enable data encryption The value can be true or false.\n",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n",
                    "willReplaceOnChanges": true
                },
                "graphSizeTypeIndex": {
                    "type": "string",
                    "description": "Graph size type index.\n"
                },
                "keepBackup": {
                    "type": "boolean",
                    "description": "Whether to retain the backups of a graph after it is deleted.\n",
                    "willReplaceOnChanges": true
                },
                "ltsOperationTrace": {
                    "$ref": "#/types/sbercloud:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The graph name.\n",
                    "willReplaceOnChanges": true
                },
                "productType": {
                    "type": "string",
                    "description": "Graph product type\n",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "$ref": "#/types/sbercloud:index/GesGraphPublicIp:GesGraphPublicIp",
                    "description": "The information about public IP.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "replication": {
                    "type": "integer"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID.\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "The subnet ID.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the graph.\n",
                    "willReplaceOnChanges": true
                },
                "vertexIdType": {
                    "$ref": "#/types/sbercloud:index/GesGraphVertexIdType:GesGraphVertexIdType",
                    "description": "ID type of vertices. This parameter is mandatory only for database edition graphs.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cryptAlgorithm",
                "enableHttps",
                "graphSizeTypeIndex",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GesGraph resources.\n",
                "properties": {
                    "azCode": {
                        "type": "string",
                        "description": "AZ code\n"
                    },
                    "cpuArch": {
                        "type": "string",
                        "description": "Graph instance's CPU architecture type.\n",
                        "willReplaceOnChanges": true
                    },
                    "cryptAlgorithm": {
                        "type": "string",
                        "description": "Graph instance cryptography algorithm.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableFullTextIndex": {
                        "type": "boolean",
                        "description": "Whether to enable full-text index control for the created graph.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableHttps": {
                        "type": "boolean",
                        "description": "Whether to enable the security mode. This mode may damage GES performance greatly.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableHyg": {
                        "type": "boolean",
                        "description": "Whether to enable HyG for the graph. This parameter is available for database edition graphs only.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableMultiAz": {
                        "type": "boolean",
                        "description": "Whether the created graph supports the cross-AZ mode. The default value is false.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableRbac": {
                        "type": "boolean",
                        "description": "Whether to enable granular permission control for the created graph.\n",
                        "willReplaceOnChanges": true
                    },
                    "encryption": {
                        "$ref": "#/types/sbercloud:index/GesGraphEncryption:GesGraphEncryption",
                        "description": "Whether to enable data encryption The value can be true or false.\n",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "graphSizeTypeIndex": {
                        "type": "string",
                        "description": "Graph size type index.\n"
                    },
                    "keepBackup": {
                        "type": "boolean",
                        "description": "Whether to retain the backups of a graph after it is deleted.\n",
                        "willReplaceOnChanges": true
                    },
                    "ltsOperationTrace": {
                        "$ref": "#/types/sbercloud:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The graph name.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "Floating IP address of a graph instance.\n"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Graph product type\n",
                        "willReplaceOnChanges": true
                    },
                    "publicIp": {
                        "$ref": "#/types/sbercloud:index/GesGraphPublicIp:GesGraphPublicIp",
                        "description": "The information about public IP.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "replication": {
                        "type": "integer"
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The security group ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of a graph.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The subnet ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The key/value pairs to associate with the graph.\n",
                        "willReplaceOnChanges": true
                    },
                    "trafficIpLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Physical addresses of a graph instance for access from private networks.\n"
                    },
                    "vertexIdType": {
                        "$ref": "#/types/sbercloud:index/GesGraphVertexIdType:GesGraphVertexIdType",
                        "description": "ID type of vertices. This parameter is mandatory only for database edition graphs.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityAccessKey:IdentityAccessKey": {
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encryptedSecret": {
                    "type": "string"
                },
                "keyFingerprint": {
                    "type": "string"
                },
                "pgpKey": {
                    "type": "string"
                },
                "secret": {
                    "type": "string",
                    "secret": true
                },
                "secretFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "required": [
                "createTime",
                "encryptedSecret",
                "keyFingerprint",
                "secret",
                "status",
                "userId",
                "userName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "pgpKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secretFile": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityAccessKey resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptedSecret": {
                        "type": "string"
                    },
                    "keyFingerprint": {
                        "type": "string"
                    },
                    "pgpKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "secret": {
                        "type": "string",
                        "secret": true
                    },
                    "secretFile": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityAcl:IdentityAcl": {
            "properties": {
                "ipCidrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityAclIpCidr:IdentityAclIpCidr"
                    }
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityAclIpRange:IdentityAclIpRange"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "inputProperties": {
                "ipCidrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityAclIpCidr:IdentityAclIpCidr"
                    }
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityAclIpRange:IdentityAclIpRange"
                    }
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityAcl resources.\n",
                "properties": {
                    "ipCidrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/IdentityAclIpCidr:IdentityAclIpCidr"
                        }
                    },
                    "ipRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/IdentityAclIpRange:IdentityAclIpRange"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityAgency:IdentityAgency": {
            "properties": {
                "allResourcesRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "delegatedDomainName": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "delegatedServiceName": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "description": {
                    "type": "string"
                },
                "domainRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "string"
                },
                "expireTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityAgencyProjectRole:IdentityAgencyProjectRole"
                    }
                }
            },
            "required": [
                "createTime",
                "description",
                "expireTime",
                "name"
            ],
            "inputProperties": {
                "allResourcesRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "delegatedDomainName": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "delegatedServiceName": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "description": {
                    "type": "string"
                },
                "domainRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityAgencyProjectRole:IdentityAgencyProjectRole"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityAgency resources.\n",
                "properties": {
                    "allResourcesRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "delegatedDomainName": {
                        "type": "string",
                        "description": "schema: Required\n"
                    },
                    "delegatedServiceName": {
                        "type": "string",
                        "description": "schema: Internal\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "duration": {
                        "type": "string"
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/IdentityAgencyProjectRole:IdentityAgencyProjectRole"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityGroup:IdentityGroup": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityGroupMembership:IdentityGroupMembership": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "group",
                "users"
            ],
            "inputProperties": {
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "group",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroupMembership resources.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityGroupMembershipV3:IdentityGroupMembershipV3": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "group",
                "users"
            ],
            "inputProperties": {
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "group",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroupMembershipV3 resources.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityGroupRoleAssignment:IdentityGroupRoleAssignment": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            },
            "required": [
                "groupId",
                "roleId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroupRoleAssignment resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roleId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityGroupV3:IdentityGroupV3": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroupV3 resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityProject:IdentityProject": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "enabled",
                "name",
                "parentId",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityProject resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityProvider:IdentityProvider": {
            "properties": {
                "accessConfig": {
                    "$ref": "#/types/sbercloud:index/IdentityProviderAccessConfig:IdentityProviderAccessConfig"
                },
                "conversionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderConversionRule:IdentityProviderConversionRule"
                    }
                },
                "description": {
                    "type": "string"
                },
                "loginLink": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "ssoType": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            },
            "required": [
                "conversionRules",
                "loginLink",
                "name",
                "protocol",
                "ssoType"
            ],
            "inputProperties": {
                "accessConfig": {
                    "$ref": "#/types/sbercloud:index/IdentityProviderAccessConfig:IdentityProviderAccessConfig"
                },
                "description": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ssoType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityProvider resources.\n",
                "properties": {
                    "accessConfig": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderAccessConfig:IdentityProviderAccessConfig"
                    },
                    "conversionRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/IdentityProviderConversionRule:IdentityProviderConversionRule"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "loginLink": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ssoType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityProviderConversion:IdentityProviderConversion": {
            "properties": {
                "conversionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderConversionConversionRule:IdentityProviderConversionConversionRule"
                    }
                },
                "providerId": {
                    "type": "string"
                }
            },
            "required": [
                "conversionRules",
                "providerId"
            ],
            "inputProperties": {
                "conversionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/IdentityProviderConversionConversionRule:IdentityProviderConversionConversionRule"
                    }
                },
                "providerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "conversionRules",
                "providerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityProviderConversion resources.\n",
                "properties": {
                    "conversionRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/IdentityProviderConversionConversionRule:IdentityProviderConversionConversionRule"
                        }
                    },
                    "providerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityRole:IdentityRole": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "references": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "policy",
                "references",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "description",
                "policy",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "references": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityRoleAssignment:IdentityRoleAssignment": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            },
            "required": [
                "groupId",
                "roleId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityRoleAssignment resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roleId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityRoleAssignmentV3:IdentityRoleAssignmentV3": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            },
            "required": [
                "groupId",
                "roleId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityRoleAssignmentV3 resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roleId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityUser:IdentityUser": {
            "properties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "passwordStrength": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "required": [
                "accessType",
                "createTime",
                "externalIdentityType",
                "lastLogin",
                "name",
                "passwordStrength"
            ],
            "inputProperties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityUser resources.\n",
                "properties": {
                    "accessType": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "externalIdentityId": {
                        "type": "string"
                    },
                    "externalIdentityType": {
                        "type": "string"
                    },
                    "lastLogin": {
                        "type": "string"
                    },
                    "loginProtectVerificationMethod": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "passwordStrength": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "pwdReset": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/identityUserV3:IdentityUserV3": {
            "properties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "passwordStrength": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "required": [
                "accessType",
                "createTime",
                "externalIdentityType",
                "lastLogin",
                "name",
                "passwordStrength"
            ],
            "inputProperties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityUserV3 resources.\n",
                "properties": {
                    "accessType": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "externalIdentityId": {
                        "type": "string"
                    },
                    "externalIdentityType": {
                        "type": "string"
                    },
                    "lastLogin": {
                        "type": "string"
                    },
                    "loginProtectVerificationMethod": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "passwordStrength": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "pwdReset": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/imagesImage:ImagesImage": {
            "properties": {
                "backupId": {
                    "type": "string"
                },
                "checksum": {
                    "type": "string"
                },
                "cmkId": {
                    "type": "string"
                },
                "dataOrigin": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diskFormat": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "imageSize": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "isConfig": {
                    "type": "boolean"
                },
                "maxRam": {
                    "type": "integer"
                },
                "minDisk": {
                    "type": "integer"
                },
                "minRam": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "vaultId": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "required": [
                "backupId",
                "checksum",
                "dataOrigin",
                "diskFormat",
                "enterpriseProjectId",
                "imageSize",
                "instanceId",
                "maxRam",
                "minRam",
                "name",
                "osVersion",
                "region",
                "status",
                "visibility",
                "volumeId"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cmkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imageUrl": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isConfig": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "maxRam": {
                    "type": "integer"
                },
                "minDisk": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "minRam": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vaultId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volumeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ImagesImage resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "checksum": {
                        "type": "string"
                    },
                    "cmkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataOrigin": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskFormat": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imageSize": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "isConfig": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "maxRam": {
                        "type": "integer"
                    },
                    "minDisk": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "minRam": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vaultId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "visibility": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/kmsKey:KmsKey": {
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "defaultKeyFlag": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expirationTime": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "keyAlgorithm": {
                    "type": "string"
                },
                "keyAlias": {
                    "type": "string"
                },
                "keyDescription": {
                    "type": "string"
                },
                "keyId": {
                    "type": "string"
                },
                "keyState": {
                    "type": "string"
                },
                "keyUsage": {
                    "type": "string"
                },
                "keystoreId": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "pendingDays": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rotationEnabled": {
                    "type": "boolean"
                },
                "rotationInterval": {
                    "type": "integer"
                },
                "rotationNumber": {
                    "type": "integer"
                },
                "scheduledDeletionDate": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "creationDate",
                "defaultKeyFlag",
                "domainId",
                "enterpriseProjectId",
                "expirationTime",
                "keyAlgorithm",
                "keyAlias",
                "keyId",
                "keyState",
                "keyUsage",
                "keystoreId",
                "origin",
                "region",
                "rotationInterval",
                "rotationNumber",
                "scheduledDeletionDate"
            ],
            "inputProperties": {
                "enterpriseProjectId": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keyAlias": {
                    "type": "string"
                },
                "keyDescription": {
                    "type": "string"
                },
                "keyUsage": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keystoreId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "origin": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "pendingDays": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rotationEnabled": {
                    "type": "boolean"
                },
                "rotationInterval": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "keyAlias"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsKey resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "defaultKeyFlag": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expirationTime": {
                        "type": "string"
                    },
                    "isEnabled": {
                        "type": "boolean"
                    },
                    "keyAlgorithm": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "keyAlias": {
                        "type": "string"
                    },
                    "keyDescription": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "keyState": {
                        "type": "string"
                    },
                    "keyUsage": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "keystoreId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "origin": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "pendingDays": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rotationEnabled": {
                        "type": "boolean"
                    },
                    "rotationInterval": {
                        "type": "integer"
                    },
                    "rotationNumber": {
                        "type": "integer"
                    },
                    "scheduledDeletionDate": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/kpsKeypair:KpsKeypair": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encryptionType": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "isManaged": {
                    "type": "boolean"
                },
                "keyFile": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "encryptionType",
                "fingerprint",
                "isManaged",
                "keyFile",
                "name",
                "publicKey",
                "region",
                "scope",
                "userId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "encryptionType": {
                    "type": "string"
                },
                "keyFile": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scope": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KpsKeypair resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptionType": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "isManaged": {
                        "type": "boolean"
                    },
                    "keyFile": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "kmsKeyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scope": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbCertificate:LbCertificate": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expireTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "certificate",
                "createTime",
                "enterpriseProjectId",
                "expireTime",
                "name",
                "region",
                "updateTime"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "certificate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbCertificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "secret": true
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbL7policy:LbL7policy": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "adminStateUp": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                }
            },
            "required": [
                "action",
                "listenerId",
                "name",
                "position",
                "region",
                "tenantId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "adminStateUp": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "listenerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbL7policy resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "adminStateUp": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "redirectListenerId": {
                        "type": "string"
                    },
                    "redirectPoolId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbL7rule:LbL7rule": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "compareType": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "l7policyId": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "compareType",
                "l7policyId",
                "listenerId",
                "region",
                "tenantId",
                "type",
                "value"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "compareType": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "l7policyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "compareType",
                "l7policyId",
                "type",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbL7rule resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean"
                    },
                    "compareType": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "l7policyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbListener:LbListener": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "connectionLimit": {
                    "type": "integer"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "defaultTlsContainerRef": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "sniContainerRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                }
            },
            "required": [
                "connectionLimit",
                "defaultPoolId",
                "loadbalancerId",
                "name",
                "protocol",
                "protocolPort",
                "region",
                "tenantId"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "connectionLimit": {
                    "type": "integer"
                },
                "defaultPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "defaultTlsContainerRef": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "loadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocolPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sniContainerRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "loadbalancerId",
                "protocol",
                "protocolPort"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbListener resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean"
                    },
                    "connectionLimit": {
                        "type": "integer"
                    },
                    "defaultPoolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "defaultTlsContainerRef": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "http2Enable": {
                        "type": "boolean"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocolPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sniContainerRefs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbLoadbalancer:LbLoadbalancer": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated\n"
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "frozenScene": {
                    "type": "string"
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vipAddress": {
                    "type": "string"
                },
                "vipPortId": {
                    "type": "string"
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer works\n"
                }
            },
            "required": [
                "chargeMode",
                "chargingMode",
                "createdAt",
                "enterpriseProjectId",
                "frozenScene",
                "loadbalancerProvider",
                "name",
                "protectionStatus",
                "publicIp",
                "region",
                "securityGroupIds",
                "tenantId",
                "updatedAt",
                "vipAddress",
                "vipPortId",
                "vipSubnetId"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated\n"
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "schema: Deprecated\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "vipAddress": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer works\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "vipSubnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbLoadbalancer resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "description": "schema: Deprecated\n"
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "frozenScene": {
                        "type": "string"
                    },
                    "loadbalancerProvider": {
                        "type": "string",
                        "description": "schema: Deprecated\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vipAddress": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vipPortId": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet where the load balancer works\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbMember:LbMember": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated\n"
                },
                "backendServerStatus": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operatingStatus": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet in which to access the member\n"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "backendServerStatus",
                "name",
                "operatingStatus",
                "poolId",
                "protocolPort",
                "region",
                "subnetId",
                "tenantId",
                "weight"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated\n"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocolPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet in which to access the member\n",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "address",
                "poolId",
                "protocolPort",
                "subnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbMember resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "adminStateUp": {
                        "type": "boolean",
                        "description": "schema: Deprecated\n"
                    },
                    "backendServerStatus": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingStatus": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocolPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet in which to access the member\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbMonitor:LbMonitor": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "delay": {
                    "type": "integer"
                },
                "expectedCodes": {
                    "type": "string"
                },
                "httpMethod": {
                    "type": "string"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "required": [
                "delay",
                "expectedCodes",
                "httpMethod",
                "maxRetries",
                "name",
                "poolId",
                "region",
                "tenantId",
                "timeout",
                "type",
                "urlPath"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "delay": {
                    "type": "integer"
                },
                "expectedCodes": {
                    "type": "string"
                },
                "httpMethod": {
                    "type": "string"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "delay",
                "maxRetries",
                "poolId",
                "timeout",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbMonitor resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean"
                    },
                    "delay": {
                        "type": "integer"
                    },
                    "expectedCodes": {
                        "type": "string"
                    },
                    "httpMethod": {
                        "type": "string"
                    },
                    "maxRetries": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "timeout": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "urlPath": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbPool:LbPool": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "this field is deprecated"
                },
                "description": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "monitorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/LbPoolPersistence:LbPoolPersistence"
                    }
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                }
            },
            "required": [
                "lbMethod",
                "listenerId",
                "loadbalancerId",
                "monitorId",
                "name",
                "protectionStatus",
                "protocol",
                "region",
                "tenantId"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "this field is deprecated"
                },
                "description": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "loadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/LbPoolPersistence:LbPoolPersistence"
                    }
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "lbMethod",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbPool resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "deprecationMessage": "this field is deprecated"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "monitorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "persistences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/LbPoolPersistence:LbPoolPersistence"
                        }
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/lbWhitelist:LbWhitelist": {
            "properties": {
                "enableWhitelist": {
                    "type": "boolean"
                },
                "listenerId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "whitelist": {
                    "type": "string"
                }
            },
            "required": [
                "listenerId",
                "region",
                "tenantId"
            ],
            "inputProperties": {
                "enableWhitelist": {
                    "type": "boolean"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "whitelist": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "listenerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbWhitelist resources.\n",
                "properties": {
                    "enableWhitelist": {
                        "type": "boolean"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "whitelist": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/ltsGroup:LtsGroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the log group belongs.\n"
                },
                "groupName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "groupName",
                "region",
                "ttlInDays"
            ],
            "inputProperties": {
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the log group belongs.\n",
                    "willReplaceOnChanges": true
                },
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "groupName",
                "ttlInDays"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LtsGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the log group belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "groupName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ttlInDays": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/ltsStream:LtsStream": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "filterCount": {
                    "type": "integer"
                },
                "groupId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "filterCount",
                "groupId",
                "region",
                "streamName",
                "ttlInDays"
            ],
            "inputProperties": {
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "streamName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "groupId",
                "streamName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LtsStream resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "filterCount": {
                        "type": "integer"
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "streamName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ttlInDays": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/mapreduceCluster:MapreduceCluster": {
            "properties": {
                "analysisCoreNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterAnalysisCoreNodes:MapreduceClusterAnalysisCoreNodes"
                },
                "analysisTaskNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterAnalysisTaskNodes:MapreduceClusterAnalysisTaskNodes"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bootstrapScripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterBootstrapScript:MapreduceClusterBootstrapScript"
                    }
                },
                "chargingMode": {
                    "type": "string"
                },
                "chargingStartTime": {
                    "type": "string"
                },
                "componentConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterComponentConfig:MapreduceClusterComponentConfig"
                    }
                },
                "componentLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "customNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterCustomNode:MapreduceClusterCustomNode"
                    }
                },
                "eipId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "externalDatasources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterExternalDatasource:MapreduceClusterExternalDatasource"
                    }
                },
                "logCollection": {
                    "type": "boolean"
                },
                "managerAdminPass": {
                    "type": "string",
                    "secret": true
                },
                "masterNodeIp": {
                    "type": "string"
                },
                "masterNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterMasterNodes:MapreduceClusterMasterNodes"
                },
                "name": {
                    "type": "string"
                },
                "nodeAdminPass": {
                    "type": "string",
                    "secret": true
                },
                "nodeKeyPair": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "safeMode": {
                    "type": "boolean"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "smnNotify": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterSmnNotify:MapreduceClusterSmnNotify"
                },
                "status": {
                    "type": "string"
                },
                "streamingCoreNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterStreamingCoreNodes:MapreduceClusterStreamingCoreNodes"
                },
                "streamingTaskNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterStreamingTaskNodes:MapreduceClusterStreamingTaskNodes"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string"
                },
                "totalNodeNumber": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "chargingStartTime",
                "componentLists",
                "createTime",
                "eipId",
                "enterpriseProjectId",
                "managerAdminPass",
                "masterNodeIp",
                "masterNodes",
                "name",
                "privateIp",
                "publicIp",
                "region",
                "securityGroupIds",
                "status",
                "subnetId",
                "totalNodeNumber",
                "updateTime",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "analysisCoreNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterAnalysisCoreNodes:MapreduceClusterAnalysisCoreNodes",
                    "willReplaceOnChanges": true
                },
                "analysisTaskNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterAnalysisTaskNodes:MapreduceClusterAnalysisTaskNodes",
                    "willReplaceOnChanges": true
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bootstrapScripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterBootstrapScript:MapreduceClusterBootstrapScript"
                    },
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "componentConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterComponentConfig:MapreduceClusterComponentConfig"
                    },
                    "willReplaceOnChanges": true
                },
                "componentLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "customNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterCustomNode:MapreduceClusterCustomNode"
                    },
                    "willReplaceOnChanges": true
                },
                "eipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "externalDatasources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterExternalDatasource:MapreduceClusterExternalDatasource"
                    },
                    "willReplaceOnChanges": true
                },
                "logCollection": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "managerAdminPass": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "masterNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterMasterNodes:MapreduceClusterMasterNodes",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "nodeAdminPass": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "nodeKeyPair": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "safeMode": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "smnNotify": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterSmnNotify:MapreduceClusterSmnNotify",
                    "willReplaceOnChanges": true
                },
                "streamingCoreNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterStreamingCoreNodes:MapreduceClusterStreamingCoreNodes",
                    "willReplaceOnChanges": true
                },
                "streamingTaskNodes": {
                    "$ref": "#/types/sbercloud:index/MapreduceClusterStreamingTaskNodes:MapreduceClusterStreamingTaskNodes",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "componentLists",
                "managerAdminPass",
                "masterNodes",
                "subnetId",
                "version",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MapreduceCluster resources.\n",
                "properties": {
                    "analysisCoreNodes": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterAnalysisCoreNodes:MapreduceClusterAnalysisCoreNodes",
                        "willReplaceOnChanges": true
                    },
                    "analysisTaskNodes": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterAnalysisTaskNodes:MapreduceClusterAnalysisTaskNodes",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bootstrapScripts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/MapreduceClusterBootstrapScript:MapreduceClusterBootstrapScript"
                        },
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargingStartTime": {
                        "type": "string"
                    },
                    "componentConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/MapreduceClusterComponentConfig:MapreduceClusterComponentConfig"
                        },
                        "willReplaceOnChanges": true
                    },
                    "componentLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "customNodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/MapreduceClusterCustomNode:MapreduceClusterCustomNode"
                        },
                        "willReplaceOnChanges": true
                    },
                    "eipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "externalDatasources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/MapreduceClusterExternalDatasource:MapreduceClusterExternalDatasource"
                        },
                        "willReplaceOnChanges": true
                    },
                    "logCollection": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "managerAdminPass": {
                        "type": "string",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "masterNodeIp": {
                        "type": "string"
                    },
                    "masterNodes": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterMasterNodes:MapreduceClusterMasterNodes",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeAdminPass": {
                        "type": "string",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "nodeKeyPair": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "safeMode": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "smnNotify": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterSmnNotify:MapreduceClusterSmnNotify",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamingCoreNodes": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterStreamingCoreNodes:MapreduceClusterStreamingCoreNodes",
                        "willReplaceOnChanges": true
                    },
                    "streamingTaskNodes": {
                        "$ref": "#/types/sbercloud:index/MapreduceClusterStreamingTaskNodes:MapreduceClusterStreamingTaskNodes",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "templateId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "totalNodeNumber": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/mapreduceJob:MapreduceJob": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "finishTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "string"
                },
                "programParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "programPath": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "sql": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "submitTime": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "finishTime",
                "name",
                "region",
                "startTime",
                "status",
                "submitTime",
                "type"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "programParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "programPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "sql": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MapreduceJob resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "finishTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "parameters": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "programParameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "programPath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceParameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "sql": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "submitTime": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/natDnatRule:NatDnatRule": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the DNAT rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the DNAT rule.\n"
                },
                "externalServicePort": {
                    "type": "integer",
                    "description": "The port range used by Floating IP provide services for external systems.\n"
                },
                "externalServicePortRange": {
                    "type": "string",
                    "description": "The port range used by ECSs or BMSs to provide services for external systems.\n"
                },
                "floatingIpAddress": {
                    "type": "string",
                    "description": "The floating IP address of the DNAT rule.\n"
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The ID of the floating IP address.\n"
                },
                "globalEipAddress": {
                    "type": "string",
                    "description": "The global EIP address connected by the DNAT rule.\n"
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The ID of the global EIP connected by the DNAT rule.\n"
                },
                "internalServicePort": {
                    "type": "integer",
                    "description": "The port used by Floating IP provide services for external systems.\n"
                },
                "internalServicePortRange": {
                    "type": "string",
                    "description": "The port used by ECSs or BMSs to provide services for external systems.\n"
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "The ID of the NAT gateway to which the DNAT rule belongs.\n"
                },
                "portId": {
                    "type": "string",
                    "description": "The port ID of network.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP address of a user.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol type.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the DNAT rule is located.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the DNAT rule.\n"
                }
            },
            "required": [
                "createdAt",
                "floatingIpAddress",
                "globalEipAddress",
                "natGatewayId",
                "portId",
                "privateIp",
                "protocol",
                "region",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the DNAT rule.\n"
                },
                "externalServicePort": {
                    "type": "integer",
                    "description": "The port range used by Floating IP provide services for external systems.\n"
                },
                "externalServicePortRange": {
                    "type": "string",
                    "description": "The port range used by ECSs or BMSs to provide services for external systems.\n"
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The ID of the floating IP address.\n"
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The ID of the global EIP connected by the DNAT rule.\n"
                },
                "internalServicePort": {
                    "type": "integer",
                    "description": "The port used by Floating IP provide services for external systems.\n"
                },
                "internalServicePortRange": {
                    "type": "string",
                    "description": "The port used by ECSs or BMSs to provide services for external systems.\n"
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "The ID of the NAT gateway to which the DNAT rule belongs.\n",
                    "willReplaceOnChanges": true
                },
                "portId": {
                    "type": "string",
                    "description": "The port ID of network.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP address of a user.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol type.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the DNAT rule is located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "natGatewayId",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NatDnatRule resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the DNAT rule.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the DNAT rule.\n"
                    },
                    "externalServicePort": {
                        "type": "integer",
                        "description": "The port range used by Floating IP provide services for external systems.\n"
                    },
                    "externalServicePortRange": {
                        "type": "string",
                        "description": "The port range used by ECSs or BMSs to provide services for external systems.\n"
                    },
                    "floatingIpAddress": {
                        "type": "string",
                        "description": "The floating IP address of the DNAT rule.\n"
                    },
                    "floatingIpId": {
                        "type": "string",
                        "description": "The ID of the floating IP address.\n"
                    },
                    "globalEipAddress": {
                        "type": "string",
                        "description": "The global EIP address connected by the DNAT rule.\n"
                    },
                    "globalEipId": {
                        "type": "string",
                        "description": "The ID of the global EIP connected by the DNAT rule.\n"
                    },
                    "internalServicePort": {
                        "type": "integer",
                        "description": "The port used by Floating IP provide services for external systems.\n"
                    },
                    "internalServicePortRange": {
                        "type": "string",
                        "description": "The port used by ECSs or BMSs to provide services for external systems.\n"
                    },
                    "natGatewayId": {
                        "type": "string",
                        "description": "The ID of the NAT gateway to which the DNAT rule belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string",
                        "description": "The port ID of network.\n"
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "The private IP address of a user.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol type.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the DNAT rule is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the DNAT rule.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/natGateway:NatGateway": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "billingInfo": {
                    "type": "string",
                    "description": "The order information of the NAT gateway.\n"
                },
                "bpsMax": {
                    "type": "integer",
                    "description": "The bandwidth that the NAT gateway can receive or send per second.\n"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the NAT gateway.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the NAT gateway.\n"
                },
                "dnatRulesLimit": {
                    "type": "integer",
                    "description": "The maximum number of DNAT rules on the NAT gateway.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the NAT gateway.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The NAT gateway name.\n"
                },
                "ngportIpAddress": {
                    "type": "string",
                    "description": "The IP address used for the NG port of the NAT gateway.\n"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "ppsMax": {
                    "type": "integer",
                    "description": "The number of packets that the NAT gateway can receive or send per second.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the NAT gateway is located.\n"
                },
                "sessionConf": {
                    "$ref": "#/types/sbercloud:index/NatGatewaySessionConf:NatGatewaySessionConf",
                    "description": "The session configuration of the NAT gateway.\n"
                },
                "snatRulePublicIpLimit": {
                    "type": "integer",
                    "description": "The maximum number of SNAT rules on the NAT gateway.\n"
                },
                "spec": {
                    "type": "string",
                    "description": "The specification of the NAT gateway.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the NAT gateway.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network ID of the downstream interface (the next hop of the DVR) of the NAT gateway.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the NAT gateway belongs.\n"
                }
            },
            "required": [
                "billingInfo",
                "bpsMax",
                "chargingMode",
                "createdAt",
                "dnatRulesLimit",
                "enterpriseProjectId",
                "name",
                "ngportIpAddress",
                "ppsMax",
                "region",
                "sessionConf",
                "snatRulePublicIpLimit",
                "spec",
                "status",
                "subnetId",
                "vpcId"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the NAT gateway.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the NAT gateway.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The NAT gateway name.\n"
                },
                "ngportIpAddress": {
                    "type": "string",
                    "description": "The IP address used for the NG port of the NAT gateway.\n",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the NAT gateway is located.\n",
                    "willReplaceOnChanges": true
                },
                "sessionConf": {
                    "$ref": "#/types/sbercloud:index/NatGatewaySessionConf:NatGatewaySessionConf",
                    "description": "The session configuration of the NAT gateway.\n"
                },
                "spec": {
                    "type": "string",
                    "description": "The specification of the NAT gateway.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network ID of the downstream interface (the next hop of the DVR) of the NAT gateway.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the NAT gateway belongs.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "spec",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NatGateway resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "billingInfo": {
                        "type": "string",
                        "description": "The order information of the NAT gateway.\n"
                    },
                    "bpsMax": {
                        "type": "integer",
                        "description": "The bandwidth that the NAT gateway can receive or send per second.\n"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the NAT gateway.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the NAT gateway.\n"
                    },
                    "dnatRulesLimit": {
                        "type": "integer",
                        "description": "The maximum number of DNAT rules on the NAT gateway.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID of the NAT gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The NAT gateway name.\n"
                    },
                    "ngportIpAddress": {
                        "type": "string",
                        "description": "The IP address used for the NG port of the NAT gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ppsMax": {
                        "type": "integer",
                        "description": "The number of packets that the NAT gateway can receive or send per second.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the NAT gateway is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "sessionConf": {
                        "$ref": "#/types/sbercloud:index/NatGatewaySessionConf:NatGatewaySessionConf",
                        "description": "The session configuration of the NAT gateway.\n"
                    },
                    "snatRulePublicIpLimit": {
                        "type": "integer",
                        "description": "The maximum number of SNAT rules on the NAT gateway.\n"
                    },
                    "spec": {
                        "type": "string",
                        "description": "The specification of the NAT gateway.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the NAT gateway.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The network ID of the downstream interface (the next hop of the DVR) of the NAT gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC to which the NAT gateway belongs.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/natSnatRule:NatSnatRule": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The CIDR block connected by SNAT rule (DC side).\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the SNAT rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the SNAT rule.\n"
                },
                "floatingIpAddress": {
                    "type": "string",
                    "description": "The floating IP addresses (separated by commas) connected by SNAT rule.\n"
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The IDs of floating IPs connected by SNAT rule.\n"
                },
                "freezedIpAddress": {
                    "type": "string",
                    "description": "The frozen EIP associated with the SNAT rule.\n"
                },
                "globalEipAddress": {
                    "type": "string",
                    "description": "The global EIP addresses (separated by commas) connected by SNAT rule.\n"
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The IDs (separated by commas) of global EIPs connected by SNAT rule.\n"
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "schema: Required; The ID of the gateway to which the SNAT rule belongs.\n"
                },
                "networkId": {
                    "type": "string",
                    "deprecationMessage": "schema: Deprecated; Use 'subnet_id' instead."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the SNAT rule is located.\n"
                },
                "sourceType": {
                    "type": "integer",
                    "description": "The resource type of the SNAT rule.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the SNAT rule.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network IDs of subnet connected by SNAT rule (VPC side).\n"
                }
            },
            "required": [
                "createdAt",
                "floatingIpAddress",
                "floatingIpId",
                "freezedIpAddress",
                "globalEipAddress",
                "globalEipId",
                "natGatewayId",
                "region",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "cidr": {
                    "type": "string",
                    "description": "The CIDR block connected by SNAT rule (DC side).\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the SNAT rule.\n"
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The IDs of floating IPs connected by SNAT rule.\n"
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The IDs (separated by commas) of global EIPs connected by SNAT rule.\n"
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "schema: Required; The ID of the gateway to which the SNAT rule belongs.\n",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "deprecationMessage": "schema: Deprecated; Use 'subnet_id' instead.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the SNAT rule is located.\n",
                    "willReplaceOnChanges": true
                },
                "sourceType": {
                    "type": "integer",
                    "description": "The resource type of the SNAT rule.\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network IDs of subnet connected by SNAT rule (VPC side).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "natGatewayId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NatSnatRule resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "The CIDR block connected by SNAT rule (DC side).\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the SNAT rule.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the SNAT rule.\n"
                    },
                    "floatingIpAddress": {
                        "type": "string",
                        "description": "The floating IP addresses (separated by commas) connected by SNAT rule.\n"
                    },
                    "floatingIpId": {
                        "type": "string",
                        "description": "The IDs of floating IPs connected by SNAT rule.\n"
                    },
                    "freezedIpAddress": {
                        "type": "string",
                        "description": "The frozen EIP associated with the SNAT rule.\n"
                    },
                    "globalEipAddress": {
                        "type": "string",
                        "description": "The global EIP addresses (separated by commas) connected by SNAT rule.\n"
                    },
                    "globalEipId": {
                        "type": "string",
                        "description": "The IDs (separated by commas) of global EIPs connected by SNAT rule.\n"
                    },
                    "natGatewayId": {
                        "type": "string",
                        "description": "schema: Required; The ID of the gateway to which the SNAT rule belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "deprecationMessage": "schema: Deprecated; Use 'subnet_id' instead.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the SNAT rule is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceType": {
                        "type": "integer",
                        "description": "The resource type of the SNAT rule.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the SNAT rule.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The network IDs of subnet connected by SNAT rule (VPC side).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/networkAcl:NetworkAcl": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "inboundPolicyId": {
                    "type": "string"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outboundPolicyId": {
                    "type": "string"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "inboundPolicyId",
                "name",
                "outboundPolicyId",
                "ports",
                "region",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkAcl resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "inboundPolicyId": {
                        "type": "string"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "outboundPolicyId": {
                        "type": "string"
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/networkAclRule:NetworkAclRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationIpAddress": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sourceIpAddress": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "name",
                "protocol",
                "region"
            ],
            "inputProperties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationIpAddress": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceIpAddress": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "action",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkAclRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "destinationIpAddress": {
                        "type": "string"
                    },
                    "destinationPort": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceIpAddress": {
                        "type": "string"
                    },
                    "sourcePort": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/networkingEipAssociate:NetworkingEipAssociate": {
            "properties": {
                "fixedIp": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicIpv6": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "fixedIp",
                "macAddress",
                "networkId",
                "portId",
                "publicIp",
                "publicIpv6",
                "region",
                "status"
            ],
            "inputProperties": {
                "fixedIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "publicIp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkingEipAssociate resources.\n",
                "properties": {
                    "fixedIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicIpv6": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/networkingSecgroup:NetworkingSecgroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deleteDefaultRules": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/NetworkingSecgroupRule:NetworkingSecgroupRule"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "name",
                "region",
                "rules",
                "updatedAt"
            ],
            "inputProperties": {
                "deleteDefaultRules": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkingSecgroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "deleteDefaultRules": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/NetworkingSecgroupRule:NetworkingSecgroupRule"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/networkingSecgroupRule:NetworkingSecgroupRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "ethertype": {
                    "type": "string"
                },
                "portRangeMax": {
                    "type": "integer"
                },
                "portRangeMin": {
                    "type": "integer"
                },
                "ports": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "remoteAddressGroupId": {
                    "type": "string"
                },
                "remoteGroupId": {
                    "type": "string"
                },
                "remoteIpPrefix": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "direction",
                "ethertype",
                "portRangeMax",
                "portRangeMin",
                "ports",
                "priority",
                "protocol",
                "region",
                "remoteAddressGroupId",
                "remoteGroupId",
                "remoteIpPrefix",
                "securityGroupId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "direction": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ethertype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portRangeMax": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "portRangeMin": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "ports": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remoteAddressGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remoteGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remoteIpPrefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "direction",
                "ethertype",
                "securityGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkingSecgroupRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "direction": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ethertype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portRangeMax": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "portRangeMin": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "ports": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remoteAddressGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remoteGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remoteIpPrefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/networkingVip:NetworkingVip": {
            "properties": {
                "deviceOwner": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "macAddress": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "deprecationMessage": "use ip_version instead"
                }
            },
            "required": [
                "deviceOwner",
                "ipAddress",
                "ipVersion",
                "macAddress",
                "name",
                "networkId",
                "region",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "ipAddress": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipVersion": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "deprecationMessage": "use ip_version instead",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkingVip resources.\n",
                "properties": {
                    "deviceOwner": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipVersion": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "deprecationMessage": "use ip_version instead",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/networkingVipAssociate:NetworkingVipAssociate": {
            "properties": {
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "portIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "vipId": {
                    "type": "string"
                },
                "vipIpAddress": {
                    "type": "string"
                },
                "vipSubnetId": {
                    "type": "string"
                }
            },
            "required": [
                "ipAddresses",
                "portIds",
                "region",
                "vipId",
                "vipIpAddress",
                "vipSubnetId"
            ],
            "inputProperties": {
                "portIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "portIds",
                "vipId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkingVipAssociate resources.\n",
                "properties": {
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "portIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vipIpAddress": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/obsBucket:ObsBucket": {
            "properties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "bucketDomainName": {
                    "type": "string"
                },
                "bucketVersion": {
                    "type": "string"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketCorsRule:ObsBucketCorsRule"
                    }
                },
                "encryption": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyProjectId": {
                    "type": "string"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRule:ObsBucketLifecycleRule"
                    }
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLogging:ObsBucketLogging"
                    }
                },
                "multiAz": {
                    "type": "boolean"
                },
                "parallelFs": {
                    "type": "boolean"
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "quota": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "sseAlgorithm": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "storageInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketStorageInfo:ObsBucketStorageInfo"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userDomainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "versioning": {
                    "type": "boolean"
                },
                "website": {
                    "$ref": "#/types/sbercloud:index/ObsBucketWebsite:ObsBucketWebsite"
                }
            },
            "required": [
                "bucket",
                "bucketDomainName",
                "bucketVersion",
                "enterpriseProjectId",
                "kmsKeyProjectId",
                "multiAz",
                "policy",
                "region",
                "sseAlgorithm",
                "storageInfos",
                "userDomainNames"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketCorsRule:ObsBucketCorsRule"
                    }
                },
                "encryption": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyProjectId": {
                    "type": "string"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRule:ObsBucketLifecycleRule"
                    }
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketLogging:ObsBucketLogging"
                    }
                },
                "multiAz": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "parallelFs": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "quota": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sseAlgorithm": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userDomainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "versioning": {
                    "type": "boolean"
                },
                "website": {
                    "$ref": "#/types/sbercloud:index/ObsBucketWebsite:ObsBucketWebsite"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObsBucket resources.\n",
                "properties": {
                    "acl": {
                        "type": "string"
                    },
                    "bucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bucketDomainName": {
                        "type": "string"
                    },
                    "bucketVersion": {
                        "type": "string"
                    },
                    "corsRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ObsBucketCorsRule:ObsBucketCorsRule"
                        }
                    },
                    "encryption": {
                        "type": "boolean"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "forceDestroy": {
                        "type": "boolean"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "kmsKeyProjectId": {
                        "type": "string"
                    },
                    "lifecycleRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ObsBucketLifecycleRule:ObsBucketLifecycleRule"
                        }
                    },
                    "loggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ObsBucketLogging:ObsBucketLogging"
                        }
                    },
                    "multiAz": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "parallelFs": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "policy": {
                        "type": "string"
                    },
                    "policyFormat": {
                        "type": "string"
                    },
                    "quota": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sseAlgorithm": {
                        "type": "string"
                    },
                    "storageClass": {
                        "type": "string"
                    },
                    "storageInfos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ObsBucketStorageInfo:ObsBucketStorageInfo"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "userDomainNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "versioning": {
                        "type": "boolean"
                    },
                    "website": {
                        "$ref": "#/types/sbercloud:index/ObsBucketWebsite:ObsBucketWebsite"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/obsBucketAcl:ObsBucketAcl": {
            "properties": {
                "accountPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission"
                    },
                    "description": "Specifies the account permissions.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "Specifies the name of the bucket to which to set the acl.\n"
                },
                "logDeliveryUserPermission": {
                    "$ref": "#/types/sbercloud:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission",
                    "description": "Specifies the log delivery user permission.\n"
                },
                "ownerPermission": {
                    "$ref": "#/types/sbercloud:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission",
                    "description": "Specifies the bucket owner permission.\n"
                },
                "publicPermission": {
                    "$ref": "#/types/sbercloud:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission",
                    "description": "Specifies the public permission.\n"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "bucket",
                "ownerPermission",
                "region"
            ],
            "inputProperties": {
                "accountPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission"
                    },
                    "description": "Specifies the account permissions.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "Specifies the name of the bucket to which to set the acl.\n",
                    "willReplaceOnChanges": true
                },
                "logDeliveryUserPermission": {
                    "$ref": "#/types/sbercloud:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission",
                    "description": "Specifies the log delivery user permission.\n"
                },
                "ownerPermission": {
                    "$ref": "#/types/sbercloud:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission",
                    "description": "Specifies the bucket owner permission.\n"
                },
                "publicPermission": {
                    "$ref": "#/types/sbercloud:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission",
                    "description": "Specifies the public permission.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObsBucketAcl resources.\n",
                "properties": {
                    "accountPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission"
                        },
                        "description": "Specifies the account permissions.\n"
                    },
                    "bucket": {
                        "type": "string",
                        "description": "Specifies the name of the bucket to which to set the acl.\n",
                        "willReplaceOnChanges": true
                    },
                    "logDeliveryUserPermission": {
                        "$ref": "#/types/sbercloud:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission",
                        "description": "Specifies the log delivery user permission.\n"
                    },
                    "ownerPermission": {
                        "$ref": "#/types/sbercloud:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission",
                        "description": "Specifies the bucket owner permission.\n"
                    },
                    "publicPermission": {
                        "$ref": "#/types/sbercloud:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission",
                        "description": "Specifies the public permission.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/obsBucketObject:ObsBucketObject": {
            "properties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "encryption": {
                    "type": "boolean"
                },
                "etag": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                }
            },
            "required": [
                "bucket",
                "contentType",
                "etag",
                "key",
                "region",
                "size",
                "storageClass",
                "versionId"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "content": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "encryption": {
                    "type": "boolean"
                },
                "etag": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "source": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "bucket",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObsBucketObject resources.\n",
                "properties": {
                    "acl": {
                        "type": "string"
                    },
                    "bucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "content": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "encryption": {
                        "type": "boolean"
                    },
                    "etag": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "source": {
                        "type": "string"
                    },
                    "storageClass": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/obsBucketPolicy:ObsBucketPolicy": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "bucket",
                "policy",
                "region"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "bucket",
                "policy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObsBucketPolicy resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policy": {
                        "type": "string"
                    },
                    "policyFormat": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsBackup:RdsBackup": {
            "properties": {
                "associatedWithDdm": {
                    "type": "boolean",
                    "description": "Whether a DDM instance has been associated.\n"
                },
                "beginTime": {
                    "type": "string",
                    "description": "Backup start time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsBackupDatabase:RdsBackupDatabase"
                    },
                    "description": "List of self-built Microsoft SQL Server databases that are partially backed up.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description about the backup.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "Backup end time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Backup name.\n"
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Backup size in KB.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Backup status.\n"
                }
            },
            "required": [
                "associatedWithDdm",
                "beginTime",
                "databases",
                "description",
                "endTime",
                "instanceId",
                "name",
                "region",
                "size",
                "status"
            ],
            "inputProperties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsBackupDatabase:RdsBackupDatabase"
                    },
                    "description": "List of self-built Microsoft SQL Server databases that are partially backed up.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description about the backup.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Backup name.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsBackup resources.\n",
                "properties": {
                    "associatedWithDdm": {
                        "type": "boolean",
                        "description": "Whether a DDM instance has been associated.\n"
                    },
                    "beginTime": {
                        "type": "string",
                        "description": "Backup start time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsBackupDatabase:RdsBackupDatabase"
                        },
                        "description": "List of self-built Microsoft SQL Server databases that are partially backed up.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description about the backup.\n",
                        "willReplaceOnChanges": true
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Backup end time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Backup name.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Backup size in KB.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Backup status.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsInstance:RdsInstance": {
            "properties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backupStrategy": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceBackupStrategy:RdsInstanceBackupStrategy"
                },
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string"
                },
                "collation": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "db": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceDb:RdsInstanceDb"
                },
                "description": {
                    "type": "string"
                },
                "dssPoolId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "haReplicationMode": {
                    "type": "string"
                },
                "lowerCaseTableNames": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "msdtcHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceMsdtcHost:RdsInstanceMsdtcHost"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceNode:RdsInstanceNode"
                    }
                },
                "paramGroupId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceParameter:RdsInstanceParameter"
                    }
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "powerAction": {
                    "type": "string"
                },
                "privateDnsNamePrefix": {
                    "type": "string"
                },
                "privateDnsNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "readWritePermissions": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "restore": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceRestore:RdsInstanceRestore"
                },
                "rotateDay": {
                    "type": "integer"
                },
                "secondsLevelMonitoringEnabled": {
                    "type": "boolean"
                },
                "secondsLevelMonitoringInterval": {
                    "type": "integer"
                },
                "secretId": {
                    "type": "string"
                },
                "secretName": {
                    "type": "string"
                },
                "secretVersion": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "slowLogShowOriginalStatus": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "switchStrategy": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tdeEnabled": {
                    "type": "boolean"
                },
                "timeZone": {
                    "type": "string"
                },
                "volume": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceVolume:RdsInstanceVolume"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZones",
                "backupStrategy",
                "chargingMode",
                "collation",
                "created",
                "db",
                "enterpriseProjectId",
                "fixedIp",
                "flavor",
                "haReplicationMode",
                "maintainBegin",
                "maintainEnd",
                "msdtcHosts",
                "name",
                "nodes",
                "parameters",
                "powerAction",
                "privateDnsNamePrefix",
                "privateDnsNames",
                "privateIps",
                "publicIps",
                "region",
                "secondsLevelMonitoringEnabled",
                "secondsLevelMonitoringInterval",
                "securityGroupId",
                "sslEnable",
                "status",
                "subnetId",
                "switchStrategy",
                "tdeEnabled",
                "timeZone",
                "volume",
                "vpcId"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "backupStrategy": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceBackupStrategy:RdsInstanceBackupStrategy"
                },
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "collation": {
                    "type": "string"
                },
                "db": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceDb:RdsInstanceDb",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "dssPoolId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "haReplicationMode": {
                    "type": "string"
                },
                "lowerCaseTableNames": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "msdtcHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceMsdtcHost:RdsInstanceMsdtcHost"
                    }
                },
                "name": {
                    "type": "string"
                },
                "paramGroupId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceParameter:RdsInstanceParameter"
                    }
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string"
                },
                "privateDnsNamePrefix": {
                    "type": "string"
                },
                "readWritePermissions": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "restore": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceRestore:RdsInstanceRestore",
                    "willReplaceOnChanges": true
                },
                "rotateDay": {
                    "type": "integer"
                },
                "secondsLevelMonitoringEnabled": {
                    "type": "boolean"
                },
                "secondsLevelMonitoringInterval": {
                    "type": "integer"
                },
                "secretId": {
                    "type": "string"
                },
                "secretName": {
                    "type": "string"
                },
                "secretVersion": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "slowLogShowOriginalStatus": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "switchStrategy": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tdeEnabled": {
                    "type": "boolean"
                },
                "timeZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volume": {
                    "$ref": "#/types/sbercloud:index/RdsInstanceVolume:RdsInstanceVolume"
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZones",
                "db",
                "flavor",
                "securityGroupId",
                "subnetId",
                "volume",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsInstance resources.\n",
                "properties": {
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "backupStrategy": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceBackupStrategy:RdsInstanceBackupStrategy"
                    },
                    "binlogRetentionHours": {
                        "type": "integer"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "collation": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string"
                    },
                    "db": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceDb:RdsInstanceDb",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "dssPoolId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "haReplicationMode": {
                        "type": "string"
                    },
                    "lowerCaseTableNames": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "msdtcHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsInstanceMsdtcHost:RdsInstanceMsdtcHost"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsInstanceNode:RdsInstanceNode"
                        }
                    },
                    "paramGroupId": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsInstanceParameter:RdsInstanceParameter"
                        }
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string"
                    },
                    "privateDnsNamePrefix": {
                        "type": "string"
                    },
                    "privateDnsNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "readWritePermissions": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restore": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceRestore:RdsInstanceRestore",
                        "willReplaceOnChanges": true
                    },
                    "rotateDay": {
                        "type": "integer"
                    },
                    "secondsLevelMonitoringEnabled": {
                        "type": "boolean"
                    },
                    "secondsLevelMonitoringInterval": {
                        "type": "integer"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "secretName": {
                        "type": "string"
                    },
                    "secretVersion": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "slowLogShowOriginalStatus": {
                        "type": "string"
                    },
                    "sslEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "switchStrategy": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tdeEnabled": {
                        "type": "boolean"
                    },
                    "timeZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "volume": {
                        "$ref": "#/types/sbercloud:index/RdsInstanceVolume:RdsInstanceVolume"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsMysqlAccount:RdsMysqlAccount": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Specifies remarks of the DB account.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the IP addresses that are allowed to access your DB instance.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.\n",
                    "secret": true
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "hosts",
                "instanceId",
                "name",
                "password",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies remarks of the DB account.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the IP addresses that are allowed to access your DB instance.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsMysqlAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Specifies remarks of the DB account.\n"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the IP addresses that are allowed to access your DB instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS Mysql instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the username of the DB account.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password of the DB account.\n",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsMysqlBinlog:RdsMysqlBinlog": {
            "properties": {
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "instanceId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "binlogRetentionHours",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "binlogRetentionHours",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsMysqlBinlog resources.\n",
                "properties": {
                    "binlogRetentionHours": {
                        "type": "integer"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsMysqlDatabase:RdsMysqlDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the character set used by the database.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "characterSet",
                "instanceId",
                "name",
                "region"
            ],
            "inputProperties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the character set used by the database.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "characterSet",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsMysqlDatabase resources.\n",
                "properties": {
                    "characterSet": {
                        "type": "string",
                        "description": "Specifies the character set used by the database.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the database description.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS Mysql instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the database name.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsMysqlDatabasePrivilege:RdsMysqlDatabasePrivilege": {
            "properties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.\n"
                },
                "region": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsMysqlDatabasePrivilegeUser:RdsMysqlDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database.\n"
                }
            },
            "required": [
                "dbName",
                "instanceId",
                "region",
                "users"
            ],
            "inputProperties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsMysqlDatabasePrivilegeUser:RdsMysqlDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database.\n"
                }
            },
            "requiredInputs": [
                "dbName",
                "instanceId",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsMysqlDatabasePrivilege resources.\n",
                "properties": {
                    "dbName": {
                        "type": "string",
                        "description": "Specifies the database name.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS Mysql instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsMysqlDatabasePrivilegeUser:RdsMysqlDatabasePrivilegeUser"
                        },
                        "description": "Specifies the account that associated with the database.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsMysqlDatabaseTableRestore:RdsMysqlDatabaseTableRestore": {
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsMysqlDatabaseTableRestoreDatabase:RdsMysqlDatabaseTableRestoreDatabase"
                    },
                    "description": "Specifies the databases that will be restored.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS MySQL instance.\n"
                },
                "isFastRestore": {
                    "type": "boolean",
                    "description": "Specifies whether to use fast restoration.\n"
                },
                "region": {
                    "type": "string"
                },
                "restoreTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsMysqlDatabaseTableRestoreRestoreTable:RdsMysqlDatabaseTableRestoreRestoreTable"
                    },
                    "description": "Specifies the tables that will be restored.\n"
                },
                "restoreTime": {
                    "type": "integer",
                    "description": "Specifies the restoration time point.\n"
                }
            },
            "required": [
                "instanceId",
                "region",
                "restoreTime"
            ],
            "inputProperties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsMysqlDatabaseTableRestoreDatabase:RdsMysqlDatabaseTableRestoreDatabase"
                    },
                    "description": "Specifies the databases that will be restored.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS MySQL instance.\n",
                    "willReplaceOnChanges": true
                },
                "isFastRestore": {
                    "type": "boolean",
                    "description": "Specifies whether to use fast restoration.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "restoreTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsMysqlDatabaseTableRestoreRestoreTable:RdsMysqlDatabaseTableRestoreRestoreTable"
                    },
                    "description": "Specifies the tables that will be restored.\n",
                    "willReplaceOnChanges": true
                },
                "restoreTime": {
                    "type": "integer",
                    "description": "Specifies the restoration time point.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "restoreTime"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsMysqlDatabaseTableRestore resources.\n",
                "properties": {
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsMysqlDatabaseTableRestoreDatabase:RdsMysqlDatabaseTableRestoreDatabase"
                        },
                        "description": "Specifies the databases that will be restored.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of RDS MySQL instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "isFastRestore": {
                        "type": "boolean",
                        "description": "Specifies whether to use fast restoration.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restoreTables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsMysqlDatabaseTableRestoreRestoreTable:RdsMysqlDatabaseTableRestoreRestoreTable"
                        },
                        "description": "Specifies the tables that will be restored.\n",
                        "willReplaceOnChanges": true
                    },
                    "restoreTime": {
                        "type": "integer",
                        "description": "Specifies the restoration time point.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsParametergroup:RdsParametergroup": {
            "properties": {
                "configurationParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsParametergroupConfigurationParameter:RdsParametergroupConfigurationParameter"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "datastore": {
                    "$ref": "#/types/sbercloud:index/RdsParametergroupDatastore:RdsParametergroupDatastore"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "configurationParameters",
                "createdAt",
                "datastore",
                "name",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "datastore": {
                    "$ref": "#/types/sbercloud:index/RdsParametergroupDatastore:RdsParametergroupDatastore",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "datastore"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsParametergroup resources.\n",
                "properties": {
                    "configurationParameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsParametergroupConfigurationParameter:RdsParametergroupConfigurationParameter"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "datastore": {
                        "$ref": "#/types/sbercloud:index/RdsParametergroupDatastore:RdsParametergroupDatastore",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgAccount:RdsPgAccount": {
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsPgAccountAttribute:RdsPgAccountAttribute"
                    },
                    "description": "Indicates the permission attributes of the account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the remarks of the DB account.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n"
                },
                "memberofs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.\n",
                    "secret": true
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "attributes",
                "instanceId",
                "name",
                "password",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the remarks of the DB account.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                    "willReplaceOnChanges": true
                },
                "memberofs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgAccount resources.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsPgAccountAttribute:RdsPgAccountAttribute"
                        },
                        "description": "Indicates the permission attributes of the account.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the remarks of the DB account.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "memberofs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the username of the DB account.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password of the DB account.\n",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgAccountRoles:RdsPgAccountRoles": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n"
                },
                "region": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of roles.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Specifies the username of the account.\n"
                }
            },
            "required": [
                "instanceId",
                "region",
                "roles",
                "user"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of roles.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Specifies the username of the account.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "roles",
                "user"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgAccountRoles resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of roles.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Specifies the username of the account.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgDatabase:RdsPgDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the database character set.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n"
                },
                "isRevokePublicPrivilege": {
                    "type": "boolean",
                    "description": "Specifies whether to revoke the PUBLIC CREATE permission of the public schema.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Specifies the database collocation.\n"
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Specifies the database classification.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Specifies the database user.\n"
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Indicates the database size, in bytes.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Specifies the name of the database template.\n"
                }
            },
            "required": [
                "characterSet",
                "instanceId",
                "isRevokePublicPrivilege",
                "lcCollate",
                "lcCtype",
                "name",
                "owner",
                "region",
                "size",
                "template"
            ],
            "inputProperties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the database character set.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                    "willReplaceOnChanges": true
                },
                "isRevokePublicPrivilege": {
                    "type": "boolean",
                    "description": "Specifies whether to revoke the PUBLIC CREATE permission of the public schema.\n",
                    "willReplaceOnChanges": true
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Specifies the database collocation.\n",
                    "willReplaceOnChanges": true
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Specifies the database classification.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "owner": {
                    "type": "string",
                    "description": "Specifies the database user.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "type": "string",
                    "description": "Specifies the name of the database template.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgDatabase resources.\n",
                "properties": {
                    "characterSet": {
                        "type": "string",
                        "description": "Specifies the database character set.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the database description.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "isRevokePublicPrivilege": {
                        "type": "boolean",
                        "description": "Specifies whether to revoke the PUBLIC CREATE permission of the public schema.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Specifies the database collocation.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Specifies the database classification.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the database name.\n",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string",
                        "description": "Specifies the database user.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Indicates the database size, in bytes.\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "Specifies the name of the database template.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgHba:RdsPgHba": {
            "properties": {
                "hostBasedAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsPgHbaHostBasedAuthentication:RdsPgHbaHostBasedAuthentication"
                    },
                    "description": "Specifies the list of host based authentications.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "hostBasedAuthentications",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "hostBasedAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsPgHbaHostBasedAuthentication:RdsPgHbaHostBasedAuthentication"
                    },
                    "description": "Specifies the list of host based authentications.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostBasedAuthentications",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgHba resources.\n",
                "properties": {
                    "hostBasedAuthentications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsPgHbaHostBasedAuthentication:RdsPgHbaHostBasedAuthentication"
                        },
                        "description": "Specifies the list of host based authentications.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgPlugin:RdsPgPlugin": {
            "properties": {
                "databaseName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sharedPreloadLibraries": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "databaseName",
                "description",
                "instanceId",
                "name",
                "region",
                "sharedPreloadLibraries",
                "version"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgPlugin resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sharedPreloadLibraries": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgPluginParameter:RdsPgPluginParameter": {
            "properties": {
                "defaultValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the default values of the plugin parameter.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the plugin parameter.\n"
                },
                "region": {
                    "type": "string"
                },
                "restartRequired": {
                    "type": "boolean",
                    "description": "Indicates whether a reboot is required.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of plugin parameter values.\n"
                }
            },
            "required": [
                "defaultValues",
                "instanceId",
                "name",
                "region",
                "restartRequired",
                "values"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS instance.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the plugin parameter.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of plugin parameter values.\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "values"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgPluginParameter resources.\n",
                "properties": {
                    "defaultValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the default values of the plugin parameter.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of RDS instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the plugin parameter.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restartRequired": {
                        "type": "boolean",
                        "description": "Indicates whether a reboot is required.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of plugin parameter values.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgPluginUpdate:RdsPgPluginUpdate": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "extensionName": {
                    "type": "string",
                    "description": "Specifies the extension name.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance.\n"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "databaseName",
                "extensionName",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "extensionName": {
                    "type": "string",
                    "description": "Specifies the extension name.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "extensionName",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgPluginUpdate resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Specifies the database name.\n",
                        "willReplaceOnChanges": true
                    },
                    "extensionName": {
                        "type": "string",
                        "description": "Specifies the extension name.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsPgSqlLimit:RdsPgSqlLimit": {
            "properties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the name of the database.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n"
                },
                "isEffective": {
                    "type": "boolean",
                    "description": "Indicates whether the SQL limit is effective.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "Specifies the number of SQL statements executed simultaneously\n"
                },
                "maxWaiting": {
                    "type": "integer",
                    "description": "Specifies the max waiting time in seconds.\n"
                },
                "queryId": {
                    "type": "string",
                    "description": "Specifies the query ID\n"
                },
                "queryString": {
                    "type": "string",
                    "description": "Specifies the text form of SQL statement.\n"
                },
                "region": {
                    "type": "string"
                },
                "searchPath": {
                    "type": "string",
                    "description": "Specifies the query order for names that are not schema qualified.\n"
                },
                "sqlLimitId": {
                    "type": "string",
                    "description": "Indicates the ID of SQL limit.\n"
                },
                "switch": {
                    "type": "string",
                    "description": "Specifies the SQL limit switch.\n"
                }
            },
            "required": [
                "dbName",
                "instanceId",
                "isEffective",
                "maxConcurrency",
                "maxWaiting",
                "region",
                "sqlLimitId",
                "switch"
            ],
            "inputProperties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the name of the database.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                    "willReplaceOnChanges": true
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "Specifies the number of SQL statements executed simultaneously\n"
                },
                "maxWaiting": {
                    "type": "integer",
                    "description": "Specifies the max waiting time in seconds.\n"
                },
                "queryId": {
                    "type": "string",
                    "description": "Specifies the query ID\n",
                    "willReplaceOnChanges": true
                },
                "queryString": {
                    "type": "string",
                    "description": "Specifies the text form of SQL statement.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "searchPath": {
                    "type": "string",
                    "description": "Specifies the query order for names that are not schema qualified.\n",
                    "willReplaceOnChanges": true
                },
                "switch": {
                    "type": "string",
                    "description": "Specifies the SQL limit switch.\n"
                }
            },
            "requiredInputs": [
                "dbName",
                "instanceId",
                "maxConcurrency",
                "maxWaiting"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsPgSqlLimit resources.\n",
                "properties": {
                    "dbName": {
                        "type": "string",
                        "description": "Specifies the name of the database.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "isEffective": {
                        "type": "boolean",
                        "description": "Indicates whether the SQL limit is effective.\n"
                    },
                    "maxConcurrency": {
                        "type": "integer",
                        "description": "Specifies the number of SQL statements executed simultaneously\n"
                    },
                    "maxWaiting": {
                        "type": "integer",
                        "description": "Specifies the max waiting time in seconds.\n"
                    },
                    "queryId": {
                        "type": "string",
                        "description": "Specifies the query ID\n",
                        "willReplaceOnChanges": true
                    },
                    "queryString": {
                        "type": "string",
                        "description": "Specifies the text form of SQL statement.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "searchPath": {
                        "type": "string",
                        "description": "Specifies the query order for names that are not schema qualified.\n",
                        "willReplaceOnChanges": true
                    },
                    "sqlLimitId": {
                        "type": "string",
                        "description": "Indicates the ID of SQL limit.\n"
                    },
                    "switch": {
                        "type": "string",
                        "description": "Specifies the SQL limit switch.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsReadReplicaInstance:RdsReadReplicaInstance": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "db": {
                    "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceDb:RdsReadReplicaInstanceDb"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceParameter:RdsReadReplicaInstanceParameter"
                    }
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "primaryInstanceId": {
                    "type": "string"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "volume": {
                    "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceVolume:RdsReadReplicaInstanceVolume"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "db",
                "enterpriseProjectId",
                "fixedIp",
                "flavor",
                "maintainBegin",
                "maintainEnd",
                "name",
                "parameters",
                "primaryInstanceId",
                "privateIps",
                "publicIps",
                "region",
                "securityGroupId",
                "sslEnable",
                "status",
                "subnetId",
                "type",
                "volume",
                "vpcId"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "db": {
                    "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceDb:RdsReadReplicaInstanceDb",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceParameter:RdsReadReplicaInstanceParameter"
                    }
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "primaryInstanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "volume": {
                    "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceVolume:RdsReadReplicaInstanceVolume",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "flavor",
                "primaryInstanceId",
                "volume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsReadReplicaInstance resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "db": {
                        "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceDb:RdsReadReplicaInstanceDb",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceParameter:RdsReadReplicaInstanceParameter"
                        }
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryInstanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "sslEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "volume": {
                        "$ref": "#/types/sbercloud:index/RdsReadReplicaInstanceVolume:RdsReadReplicaInstanceVolume",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsSqlAudit:RdsSqlAudit": {
            "properties": {
                "auditTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of audit types.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance.\n"
                },
                "keepDays": {
                    "type": "integer",
                    "description": "Specifies the number of days for storing audit logs.\n"
                },
                "region": {
                    "type": "string"
                },
                "reserveAuditlogs": {
                    "type": "boolean",
                    "description": "Specifies whether the historical audit logs will be reserved for some time when SQL audit is disabled.\n"
                }
            },
            "required": [
                "auditTypes",
                "instanceId",
                "keepDays",
                "region"
            ],
            "inputProperties": {
                "auditTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of audit types.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance.\n",
                    "willReplaceOnChanges": true
                },
                "keepDays": {
                    "type": "integer",
                    "description": "Specifies the number of days for storing audit logs.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "reserveAuditlogs": {
                    "type": "boolean",
                    "description": "Specifies whether the historical audit logs will be reserved for some time when SQL audit is disabled.\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "keepDays"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsSqlAudit resources.\n",
                "properties": {
                    "auditTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of audit types.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "keepDays": {
                        "type": "integer",
                        "description": "Specifies the number of days for storing audit logs.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "reserveAuditlogs": {
                        "type": "boolean",
                        "description": "Specifies whether the historical audit logs will be reserved for some time when SQL audit is disabled.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsSqlserverAccount:RdsSqlserverAccount": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.\n",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates the DB user status.\n"
                }
            },
            "required": [
                "instanceId",
                "name",
                "password",
                "region",
                "state"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsSqlserverAccount resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS SQLServer instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the username of the DB account.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password of the DB account.\n",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the DB user status.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsSqlserverDatabase:RdsSqlserverDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string",
                    "description": "Indicates the character set used by the database.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates the database status.\n"
                }
            },
            "required": [
                "characterSet",
                "instanceId",
                "name",
                "region",
                "state"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsSqlserverDatabase resources.\n",
                "properties": {
                    "characterSet": {
                        "type": "string",
                        "description": "Indicates the character set used by the database.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS SQLServer instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the database name.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the database status.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/rdsSqlserverDatabasePrivilege:RdsSqlserverDatabasePrivilege": {
            "properties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQL Server instance.\n"
                },
                "region": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsSqlserverDatabasePrivilegeUser:RdsSqlserverDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database\n"
                }
            },
            "required": [
                "dbName",
                "instanceId",
                "region",
                "users"
            ],
            "inputProperties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQL Server instance.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/RdsSqlserverDatabasePrivilegeUser:RdsSqlserverDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database\n"
                }
            },
            "requiredInputs": [
                "dbName",
                "instanceId",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RdsSqlserverDatabasePrivilege resources.\n",
                "properties": {
                    "dbName": {
                        "type": "string",
                        "description": "Specifies the database name.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS SQL Server instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/RdsSqlserverDatabasePrivilegeUser:RdsSqlserverDatabasePrivilegeUser"
                        },
                        "description": "Specifies the account that associated with the database\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsAccessRule:SfsAccessRule": {
            "properties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sfsId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "accessTo",
                "region",
                "sfsId",
                "status"
            ],
            "inputProperties": {
                "accessLevel": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessTo": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sfsId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accessTo",
                "sfsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsAccessRule resources.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessTo": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sfsId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsFileSystem:SfsFileSystem": {
            "properties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessRuleStatus": {
                    "type": "string"
                },
                "accessRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/SfsFileSystemAccessRule:SfsFileSystemAccessRule"
                    }
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "exportLocation": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shareAccessId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "accessLevel",
                "accessRuleStatus",
                "accessRules",
                "accessType",
                "availabilityZone",
                "description",
                "enterpriseProjectId",
                "exportLocation",
                "name",
                "region",
                "shareAccessId",
                "size",
                "status"
            ],
            "inputProperties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isPublic": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareProto": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsFileSystem resources.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string"
                    },
                    "accessRuleStatus": {
                        "type": "string"
                    },
                    "accessRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/SfsFileSystemAccessRule:SfsFileSystemAccessRule"
                        }
                    },
                    "accessTo": {
                        "type": "string"
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareAccessId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsTurbo:SfsTurbo": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "availableCapacity": {
                    "type": "string"
                },
                "backupId": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "cryptKeyId": {
                    "type": "string"
                },
                "dedicatedFlavor": {
                    "type": "string"
                },
                "dedicatedStorageId": {
                    "type": "string"
                },
                "enhanced": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "exportLocation": {
                    "type": "string"
                },
                "hpcBandwidth": {
                    "type": "string"
                },
                "hpcCacheBandwidth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string"
                },
                "shareType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "availableCapacity",
                "backupId",
                "chargingMode",
                "enhanced",
                "enterpriseProjectId",
                "exportLocation",
                "hpcBandwidth",
                "hpcCacheBandwidth",
                "name",
                "region",
                "securityGroupId",
                "size",
                "status",
                "subnetId",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cryptKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedFlavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedStorageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enhanced": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hpcBandwidth": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hpcCacheBandwidth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "securityGroupId",
                "size",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurbo resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "availableCapacity": {
                        "type": "string"
                    },
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cryptKeyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dedicatedFlavor": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dedicatedStorageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enhanced": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "hpcBandwidth": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "hpcCacheBandwidth": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsTurboDataTask:SfsTurboDataTask": {
            "properties": {
                "destPrefix": {
                    "type": "string"
                },
                "destTarget": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "srcPrefix": {
                    "type": "string"
                },
                "srcTarget": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "destTarget",
                "endTime",
                "message",
                "region",
                "shareId",
                "srcTarget",
                "startTime",
                "status",
                "type"
            ],
            "inputProperties": {
                "destPrefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "destTarget": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "srcPrefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "srcTarget": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destTarget",
                "shareId",
                "srcTarget",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDataTask resources.\n",
                "properties": {
                    "destPrefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "destTarget": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "srcPrefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "srcTarget": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsTurboDir:SfsTurboDir": {
            "properties": {
                "gid": {
                    "type": "integer",
                    "description": "Specifies the group ID of the SFS Turbo directory.\n"
                },
                "mode": {
                    "type": "integer",
                    "description": "Specifies the SFS Turbo directory permissions.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of SFS Turbo directory.\n"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID.\n"
                },
                "uid": {
                    "type": "integer",
                    "description": "Specifies the user ID of the SFS Turbo directory.\n"
                }
            },
            "required": [
                "path",
                "region",
                "shareId"
            ],
            "inputProperties": {
                "gid": {
                    "type": "integer",
                    "description": "Specifies the group ID of the SFS Turbo directory.\n",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "integer",
                    "description": "Specifies the SFS Turbo directory permissions.\n",
                    "willReplaceOnChanges": true
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of SFS Turbo directory.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID.\n",
                    "willReplaceOnChanges": true
                },
                "uid": {
                    "type": "integer",
                    "description": "Specifies the user ID of the SFS Turbo directory.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "path",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDir resources.\n",
                "properties": {
                    "gid": {
                        "type": "integer",
                        "description": "Specifies the group ID of the SFS Turbo directory.\n",
                        "willReplaceOnChanges": true
                    },
                    "mode": {
                        "type": "integer",
                        "description": "Specifies the SFS Turbo directory permissions.\n",
                        "willReplaceOnChanges": true
                    },
                    "path": {
                        "type": "string",
                        "description": "Specifies the valid full path of SFS Turbo directory.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "description": "Specifies the SFS Turbo ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "uid": {
                        "type": "integer",
                        "description": "Specifies the user ID of the SFS Turbo directory.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsTurboDirQuota:SfsTurboDirQuota": {
            "properties": {
                "capacity": {
                    "type": "integer",
                    "description": "Specifies the size of the directory.\n"
                },
                "inode": {
                    "type": "integer",
                    "description": "Specifies the maximum number of inodes allowed in the directory.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of an existing directory.\n"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID.\n"
                },
                "usedCapacity": {
                    "type": "integer",
                    "description": "Specifies the size of the used directory.\n"
                },
                "usedInode": {
                    "type": "integer",
                    "description": "Specifies the number of used inodes in the directory.\n"
                }
            },
            "required": [
                "path",
                "region",
                "shareId",
                "usedCapacity",
                "usedInode"
            ],
            "inputProperties": {
                "capacity": {
                    "type": "integer",
                    "description": "Specifies the size of the directory.\n"
                },
                "inode": {
                    "type": "integer",
                    "description": "Specifies the maximum number of inodes allowed in the directory.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of an existing directory.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "path",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDirQuota resources.\n",
                "properties": {
                    "capacity": {
                        "type": "integer",
                        "description": "Specifies the size of the directory.\n"
                    },
                    "inode": {
                        "type": "integer",
                        "description": "Specifies the maximum number of inodes allowed in the directory.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Specifies the valid full path of an existing directory.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "description": "Specifies the SFS Turbo ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "usedCapacity": {
                        "type": "integer",
                        "description": "Specifies the size of the used directory.\n"
                    },
                    "usedInode": {
                        "type": "integer",
                        "description": "Specifies the number of used inodes in the directory.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsTurboDuTask:SfsTurboDuTask": {
            "properties": {
                "beginTime": {
                    "type": "string"
                },
                "dirUsages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/SfsTurboDuTaskDirUsage:SfsTurboDuTaskDirUsage"
                    }
                },
                "endTime": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "beginTime",
                "dirUsages",
                "endTime",
                "path",
                "region",
                "shareId",
                "status"
            ],
            "inputProperties": {
                "path": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "path",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDuTask resources.\n",
                "properties": {
                    "beginTime": {
                        "type": "string"
                    },
                    "dirUsages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/SfsTurboDuTaskDirUsage:SfsTurboDuTaskDirUsage"
                        }
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsTurboObsTarget:SfsTurboObsTarget": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deleteDataInFileSystem": {
                    "type": "boolean"
                },
                "fileSystemPath": {
                    "type": "string"
                },
                "obs": {
                    "$ref": "#/types/sbercloud:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "fileSystemPath",
                "obs",
                "region",
                "shareId",
                "status"
            ],
            "inputProperties": {
                "deleteDataInFileSystem": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "fileSystemPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "obs": {
                    "$ref": "#/types/sbercloud:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fileSystemPath",
                "obs",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboObsTarget resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "deleteDataInFileSystem": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "fileSystemPath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "obs": {
                        "$ref": "#/types/sbercloud:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/sfsTurboPermRule:SfsTurboPermRule": {
            "properties": {
                "ipCidr": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rwType": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "userType": {
                    "type": "string"
                }
            },
            "required": [
                "ipCidr",
                "region",
                "rwType",
                "shareId",
                "userType"
            ],
            "inputProperties": {
                "ipCidr": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rwType": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "ipCidr",
                "rwType",
                "shareId",
                "userType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboPermRule resources.\n",
                "properties": {
                    "ipCidr": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rwType": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/smnSubscription:SmnSubscription": {
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "extension": {
                    "$ref": "#/types/sbercloud:index/SmnSubscriptionExtension:SmnSubscriptionExtension"
                },
                "filterPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/SmnSubscriptionFilterPolicy:SmnSubscriptionFilterPolicy"
                    },
                    "description": "The message filter policies of a subscriber.\n"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "subscriptionUrn": {
                    "type": "string"
                },
                "topicUrn": {
                    "type": "string"
                }
            },
            "required": [
                "endpoint",
                "extension",
                "filterPolicies",
                "owner",
                "protocol",
                "region",
                "status",
                "subscriptionUrn",
                "topicUrn"
            ],
            "inputProperties": {
                "endpoint": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extension": {
                    "$ref": "#/types/sbercloud:index/SmnSubscriptionExtension:SmnSubscriptionExtension",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remark": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topicUrn": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "endpoint",
                "protocol",
                "topicUrn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmnSubscription resources.\n",
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "extension": {
                        "$ref": "#/types/sbercloud:index/SmnSubscriptionExtension:SmnSubscriptionExtension",
                        "willReplaceOnChanges": true
                    },
                    "filterPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/SmnSubscriptionFilterPolicy:SmnSubscriptionFilterPolicy"
                        },
                        "description": "The message filter policies of a subscriber.\n"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remark": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "integer"
                    },
                    "subscriptionUrn": {
                        "type": "string"
                    },
                    "topicUrn": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/smnTopic:SmnTopic": {
            "properties": {
                "accessPolicy": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "createTime": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "introduction": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pushPolicy": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "servicesPublishAllowed": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "topicUrn": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "usersPublishAllowed": {
                    "type": "string"
                }
            },
            "required": [
                "createTime",
                "enterpriseProjectId",
                "name",
                "pushPolicy",
                "region",
                "topicUrn",
                "updateTime"
            ],
            "inputProperties": {
                "accessPolicy": {
                    "type": "string",
                    "description": "schema: Internal\n"
                },
                "displayName": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "introduction": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "servicesPublishAllowed": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "usersPublishAllowed": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmnTopic resources.\n",
                "properties": {
                    "accessPolicy": {
                        "type": "string",
                        "description": "schema: Internal\n"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "introduction": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "pushPolicy": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "servicesPublishAllowed": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "topicUrn": {
                        "type": "string"
                    },
                    "updateTime": {
                        "type": "string"
                    },
                    "usersPublishAllowed": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/swrOrganization:SwrOrganization": {
            "properties": {
                "creator": {
                    "type": "string"
                },
                "loginServer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "creator",
                "loginServer",
                "name",
                "permission",
                "region"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwrOrganization resources.\n",
                "properties": {
                    "creator": {
                        "type": "string"
                    },
                    "loginServer": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/swrOrganizationPermissions:SwrOrganizationPermissions": {
            "properties": {
                "creator": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "selfPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/SwrOrganizationPermissionsSelfPermission:SwrOrganizationPermissionsSelfPermission"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser"
                    }
                }
            },
            "required": [
                "creator",
                "organization",
                "region",
                "selfPermissions",
                "users"
            ],
            "inputProperties": {
                "organization": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser"
                    }
                }
            },
            "requiredInputs": [
                "organization",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwrOrganizationPermissions resources.\n",
                "properties": {
                    "creator": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "selfPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/SwrOrganizationPermissionsSelfPermission:SwrOrganizationPermissionsSelfPermission"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/swrRepository:SwrRepository": {
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "internalPath": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "numImages": {
                    "type": "integer"
                },
                "organization": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "repositoryId": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            },
            "required": [
                "internalPath",
                "name",
                "numImages",
                "organization",
                "path",
                "region",
                "repositoryId",
                "size"
            ],
            "inputProperties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "organization": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "organization"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwrRepository resources.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "internalPath": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "numImages": {
                        "type": "integer"
                    },
                    "organization": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "repositoryId": {
                        "type": "integer"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpc:Vpc": {
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enhancedLocalRoute": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcRoute:VpcRoute"
                    },
                    "deprecationMessage": "use huaweicloud_vpc_route_table data source to get all routes"
                },
                "secondaryCidr": {
                    "type": "string",
                    "description": "schema: Deprecated; use secondary_cidrs instead\n"
                },
                "secondaryCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "cidr",
                "enhancedLocalRoute",
                "enterpriseProjectId",
                "name",
                "region",
                "routes",
                "secondaryCidrs",
                "status"
            ],
            "inputProperties": {
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enhancedLocalRoute": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secondaryCidr": {
                    "type": "string",
                    "description": "schema: Deprecated; use secondary_cidrs instead\n"
                },
                "secondaryCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "cidr"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vpc resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enhancedLocalRoute": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/VpcRoute:VpcRoute"
                        },
                        "deprecationMessage": "use huaweicloud_vpc_route_table data source to get all routes"
                    },
                    "secondaryCidr": {
                        "type": "string",
                        "description": "schema: Deprecated; use secondary_cidrs instead\n"
                    },
                    "secondaryCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcAddressGroup:VpcAddressGroup": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "ipExtraSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcAddressGroupIpExtraSet:VpcAddressGroupIpExtraSet"
                    }
                },
                "ipVersion": {
                    "type": "integer"
                },
                "maxCapacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "addresses",
                "enterpriseProjectId",
                "ipExtraSets",
                "maxCapacity",
                "name",
                "region"
            ],
            "inputProperties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "ipExtraSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcAddressGroupIpExtraSet:VpcAddressGroupIpExtraSet"
                    }
                },
                "ipVersion": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "maxCapacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcAddressGroup resources.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "forceDestroy": {
                        "type": "boolean"
                    },
                    "ipExtraSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/VpcAddressGroupIpExtraSet:VpcAddressGroupIpExtraSet"
                        }
                    },
                    "ipVersion": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "maxCapacity": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcBandwidth:VpcBandwidth": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "bandwidthType": {
                    "type": "string"
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string"
                },
                "publicips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcBandwidthPublicip:VpcBandwidthPublicip"
                    }
                },
                "region": {
                    "type": "string"
                },
                "shareType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "bandwidthType",
                "chargeMode",
                "chargingMode",
                "createdAt",
                "enterpriseProjectId",
                "name",
                "publicBorderGroup",
                "publicips",
                "region",
                "shareType",
                "size",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "bandwidthType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcBandwidth resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "bandwidthType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/VpcBandwidthPublicip:VpcBandwidthPublicip"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcEip:VpcEip": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "associateId": {
                    "type": "string"
                },
                "associateType": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "bandwidth": {
                    "$ref": "#/types/sbercloud:index/VpcEipBandwidth:VpcEipBandwidth",
                    "description": "The bandwidth configuration.\n"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the EIP belongs.\n"
                },
                "instanceId": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the EIP.\n"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicip": {
                    "$ref": "#/types/sbercloud:index/VpcEipPublicip:VpcEipPublicip",
                    "description": "The EIP configuration.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the EIP resource.\n"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "address",
                "associateId",
                "associateType",
                "bandwidth",
                "chargingMode",
                "createdAt",
                "enterpriseProjectId",
                "instanceId",
                "instanceType",
                "ipv6Address",
                "name",
                "portId",
                "privateIp",
                "publicip",
                "region",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "bandwidth": {
                    "$ref": "#/types/sbercloud:index/VpcEipBandwidth:VpcEipBandwidth",
                    "description": "The bandwidth configuration.\n"
                },
                "chargingMode": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the EIP belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the EIP.\n"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicip": {
                    "$ref": "#/types/sbercloud:index/VpcEipPublicip:VpcEipPublicip",
                    "description": "The EIP configuration.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the EIP resource.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "bandwidth",
                "publicip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcEip resources.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "associateId": {
                        "type": "string"
                    },
                    "associateType": {
                        "type": "string"
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "bandwidth": {
                        "$ref": "#/types/sbercloud:index/VpcEipBandwidth:VpcEipBandwidth",
                        "description": "The bandwidth configuration.\n"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the EIP belongs.\n"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the EIP.\n"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicip": {
                        "$ref": "#/types/sbercloud:index/VpcEipPublicip:VpcEipPublicip",
                        "description": "The EIP configuration.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to create the EIP resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcPeeringConnection:VpcPeeringConnection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerTenantId": {
                    "type": "string"
                },
                "peerVpcId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "peerTenantId",
                "peerVpcId",
                "region",
                "status",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerTenantId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "peerVpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "peerVpcId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPeeringConnection resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "peerVpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter": {
            "properties": {
                "accept": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerTenantId": {
                    "type": "string"
                },
                "peerVpcId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                },
                "vpcPeeringConnectionId": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "peerTenantId",
                "peerVpcId",
                "region",
                "status",
                "vpcId",
                "vpcPeeringConnectionId"
            ],
            "inputProperties": {
                "accept": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcPeeringConnectionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "vpcPeeringConnectionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPeeringConnectionAccepter resources.\n",
                "properties": {
                    "accept": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string"
                    },
                    "peerVpcId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcPeeringConnectionId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcRoute:VpcRoute": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "routeTableId": {
                    "type": "string"
                },
                "routeTableName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "destination",
                "nexthop",
                "region",
                "routeTableId",
                "routeTableName",
                "type",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nexthop": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routeTableId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destination",
                "nexthop",
                "type",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcRoute resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "nexthop": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routeTableId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routeTableName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcRouteTable:VpcRouteTable": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcRouteTableRoute:VpcRouteTableRoute"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "region",
                "routes",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcRouteTableRoute:VpcRouteTableRoute"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcRouteTable resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/VpcRouteTableRoute:VpcRouteTableRoute"
                        }
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcSubnet:VpcSubnet": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dhcpEnable": {
                    "type": "boolean"
                },
                "dhcpLeaseTime": {
                    "type": "string"
                },
                "dnsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gatewayIp": {
                    "type": "string"
                },
                "ipv4SubnetId": {
                    "type": "string"
                },
                "ipv6Cidr": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "ipv6Gateway": {
                    "type": "string"
                },
                "ipv6SubnetId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ntpServerAddress": {
                    "type": "string"
                },
                "primaryDns": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secondaryDns": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "cidr",
                "dhcpLeaseTime",
                "dnsLists",
                "gatewayIp",
                "ipv4SubnetId",
                "ipv6Cidr",
                "ipv6Gateway",
                "ipv6SubnetId",
                "name",
                "primaryDns",
                "region",
                "secondaryDns",
                "subnetId",
                "vpcId"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cidr": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "dhcpEnable": {
                    "type": "boolean"
                },
                "dhcpLeaseTime": {
                    "type": "string"
                },
                "dnsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gatewayIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ntpServerAddress": {
                    "type": "string"
                },
                "primaryDns": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secondaryDns": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cidr",
                "gatewayIp",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcSubnet resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cidr": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "dhcpEnable": {
                        "type": "boolean"
                    },
                    "dhcpLeaseTime": {
                        "type": "string"
                    },
                    "dnsLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "gatewayIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv4SubnetId": {
                        "type": "string"
                    },
                    "ipv6Cidr": {
                        "type": "string"
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6Gateway": {
                        "type": "string"
                    },
                    "ipv6SubnetId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ntpServerAddress": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "schema: Deprecated\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcepEndpoint:VpcepEndpoint": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enableDns": {
                    "type": "boolean"
                },
                "enableWhitelist": {
                    "type": "boolean"
                },
                "ipAddress": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "packetId": {
                    "type": "integer"
                },
                "privateDomainName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "description",
                "ipAddress",
                "networkId",
                "packetId",
                "privateDomainName",
                "region",
                "serviceId",
                "serviceName",
                "serviceType",
                "status",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enableDns": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "enableWhitelist": {
                    "type": "boolean"
                },
                "ipAddress": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "networkId",
                "serviceId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcepEndpoint resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enableDns": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "enableWhitelist": {
                        "type": "boolean"
                    },
                    "ipAddress": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "packetId": {
                        "type": "integer"
                    },
                    "privateDomainName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpcepService:VpcepService": {
            "properties": {
                "approval": {
                    "type": "boolean"
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcepServiceConnection:VpcepServiceConnection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enablePolicy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organizationPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "portId": {
                    "type": "string"
                },
                "portMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcepServicePortMapping:VpcepServicePortMapping"
                    }
                },
                "region": {
                    "type": "string"
                },
                "serverType": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "approval",
                "connections",
                "description",
                "enablePolicy",
                "name",
                "organizationPermissions",
                "portId",
                "portMappings",
                "region",
                "serverType",
                "serviceName",
                "status",
                "vpcId"
            ],
            "inputProperties": {
                "approval": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enablePolicy": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "organizationPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "portId": {
                    "type": "string"
                },
                "portMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpcepServicePortMapping:VpcepServicePortMapping"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serverType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceType": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "portId",
                "portMappings",
                "serverType",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcepService resources.\n",
                "properties": {
                    "approval": {
                        "type": "boolean"
                    },
                    "connections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/VpcepServiceConnection:VpcepServiceConnection"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "enablePolicy": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "portId": {
                        "type": "string"
                    },
                    "portMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/VpcepServicePortMapping:VpcepServicePortMapping"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serverType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "schema: Computed\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpnConnection:VpnConnection": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The create time.\n"
                },
                "customerGatewayId": {
                    "type": "string",
                    "description": "The customer gateway ID.\n"
                },
                "enableNqa": {
                    "type": "boolean",
                    "description": "Whether to enable NQA check.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The VPN gateway ID.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The VPN gateway IP ID.\n"
                },
                "haRole": {
                    "type": "string"
                },
                "ikepolicy": {
                    "$ref": "#/types/sbercloud:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy"
                },
                "ipsecpolicy": {
                    "$ref": "#/types/sbercloud:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN connection.\n"
                },
                "peerSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The customer subnets.\n"
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule"
                    },
                    "description": "The policy rules. Only works when vpn_type is set to **policy**\n"
                },
                "psk": {
                    "type": "string",
                    "description": "The pre-shared key.\n"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the VPN connection.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tunnelLocalAddress": {
                    "type": "string",
                    "description": "The local tunnel address.\n"
                },
                "tunnelPeerAddress": {
                    "type": "string",
                    "description": "The peer tunnel address.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time.\n"
                },
                "vpnType": {
                    "type": "string",
                    "description": "The connection type. The value can be **policy**, **static** or **bgp**.\n"
                }
            },
            "required": [
                "createdAt",
                "customerGatewayId",
                "enableNqa",
                "enterpriseProjectId",
                "gatewayId",
                "gatewayIp",
                "haRole",
                "ikepolicy",
                "ipsecpolicy",
                "name",
                "peerSubnets",
                "policyRules",
                "psk",
                "region",
                "status",
                "tunnelLocalAddress",
                "tunnelPeerAddress",
                "updatedAt",
                "vpnType"
            ],
            "inputProperties": {
                "customerGatewayId": {
                    "type": "string",
                    "description": "The customer gateway ID.\n"
                },
                "enableNqa": {
                    "type": "boolean",
                    "description": "Whether to enable NQA check.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The VPN gateway ID.\n",
                    "willReplaceOnChanges": true
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The VPN gateway IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "haRole": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ikepolicy": {
                    "$ref": "#/types/sbercloud:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy"
                },
                "ipsecpolicy": {
                    "$ref": "#/types/sbercloud:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN connection.\n"
                },
                "peerSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The customer subnets.\n"
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/sbercloud:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule"
                    },
                    "description": "The policy rules. Only works when vpn_type is set to **policy**\n"
                },
                "psk": {
                    "type": "string",
                    "description": "The pre-shared key.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tunnelLocalAddress": {
                    "type": "string",
                    "description": "The local tunnel address.\n"
                },
                "tunnelPeerAddress": {
                    "type": "string",
                    "description": "The peer tunnel address.\n"
                },
                "vpnType": {
                    "type": "string",
                    "description": "The connection type. The value can be **policy**, **static** or **bgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "customerGatewayId",
                "gatewayId",
                "gatewayIp",
                "psk",
                "vpnType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnConnection resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The create time.\n"
                    },
                    "customerGatewayId": {
                        "type": "string",
                        "description": "The customer gateway ID.\n"
                    },
                    "enableNqa": {
                        "type": "boolean",
                        "description": "Whether to enable NQA check.\n"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID.\n"
                    },
                    "gatewayId": {
                        "type": "string",
                        "description": "The VPN gateway ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The VPN gateway IP ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "haRole": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ikepolicy": {
                        "$ref": "#/types/sbercloud:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy"
                    },
                    "ipsecpolicy": {
                        "$ref": "#/types/sbercloud:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the VPN connection.\n"
                    },
                    "peerSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The customer subnets.\n"
                    },
                    "policyRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/sbercloud:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule"
                        },
                        "description": "The policy rules. Only works when vpn_type is set to **policy**\n"
                    },
                    "psk": {
                        "type": "string",
                        "description": "The pre-shared key.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the VPN connection.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tunnelLocalAddress": {
                        "type": "string",
                        "description": "The local tunnel address.\n"
                    },
                    "tunnelPeerAddress": {
                        "type": "string",
                        "description": "The peer tunnel address.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update time.\n"
                    },
                    "vpnType": {
                        "type": "string",
                        "description": "The connection type. The value can be **policy**, **static** or **bgp**.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpnConnectionHealthCheck:VpnConnectionHealthCheck": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "Specifies the ID of the VPN connection to monitor.\n"
                },
                "destinationIp": {
                    "type": "string",
                    "description": "The destination IP address of the VPN connection.\n"
                },
                "region": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string",
                    "description": "The source IP address of the VPN connection.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the connection health check.\n"
                }
            },
            "required": [
                "connectionId",
                "destinationIp",
                "region",
                "sourceIp",
                "status"
            ],
            "inputProperties": {
                "connectionId": {
                    "type": "string",
                    "description": "Specifies the ID of the VPN connection to monitor.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "connectionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnConnectionHealthCheck resources.\n",
                "properties": {
                    "connectionId": {
                        "type": "string",
                        "description": "Specifies the ID of the VPN connection to monitor.\n",
                        "willReplaceOnChanges": true
                    },
                    "destinationIp": {
                        "type": "string",
                        "description": "The destination IP address of the VPN connection.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceIp": {
                        "type": "string",
                        "description": "The source IP address of the VPN connection.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the connection health check.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpnCustomerGateway:VpnCustomerGateway": {
            "properties": {
                "asn": {
                    "type": "integer",
                    "description": "The BGP ASN number of the customer gateway, the default value is 65000.\n"
                },
                "certificateContent": {
                    "type": "string"
                },
                "certificateId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The create time.\n"
                },
                "expireTime": {
                    "type": "string"
                },
                "idType": {
                    "type": "string",
                    "description": "The identifier type of a customer gateway.\n"
                },
                "idValue": {
                    "type": "string",
                    "description": "The identifier of a customer gateway.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP address of the customer gateway.\n"
                },
                "isUpdatable": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The customer gateway name.\n"
                },
                "region": {
                    "type": "string"
                },
                "routeMode": {
                    "type": "string",
                    "description": "The route mode of the customer gateway.\n"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time.\n"
                }
            },
            "required": [
                "certificateId",
                "createdAt",
                "expireTime",
                "idValue",
                "isUpdatable",
                "issuer",
                "name",
                "region",
                "serialNumber",
                "signatureAlgorithm",
                "subject",
                "updatedAt"
            ],
            "inputProperties": {
                "asn": {
                    "type": "integer",
                    "description": "The BGP ASN number of the customer gateway, the default value is 65000.\n",
                    "willReplaceOnChanges": true
                },
                "certificateContent": {
                    "type": "string"
                },
                "idType": {
                    "type": "string",
                    "description": "The identifier type of a customer gateway.\n",
                    "willReplaceOnChanges": true
                },
                "idValue": {
                    "type": "string",
                    "description": "The identifier of a customer gateway.\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "The IP address of the customer gateway.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The customer gateway name.\n"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routeMode": {
                    "type": "string",
                    "description": "The route mode of the customer gateway.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnCustomerGateway resources.\n",
                "properties": {
                    "asn": {
                        "type": "integer",
                        "description": "The BGP ASN number of the customer gateway, the default value is 65000.\n",
                        "willReplaceOnChanges": true
                    },
                    "certificateContent": {
                        "type": "string"
                    },
                    "certificateId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The create time.\n"
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "idType": {
                        "type": "string",
                        "description": "The identifier type of a customer gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "idValue": {
                        "type": "string",
                        "description": "The identifier of a customer gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP address of the customer gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "isUpdatable": {
                        "type": "boolean"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The customer gateway name.\n"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routeMode": {
                        "type": "string",
                        "description": "The route mode of the customer gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "serialNumber": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update time.\n"
                    }
                },
                "type": "object"
            }
        },
        "sbercloud:index/vpnGateway:VpnGateway": {
            "properties": {
                "accessPrivateIp1": {
                    "type": "string"
                },
                "accessPrivateIp2": {
                    "type": "string"
                },
                "accessSubnetId": {
                    "type": "string",
                    "description": "The access subnet ID of the VPN gateway.\n"
                },
                "accessVpcId": {
                    "type": "string",
                    "description": "The access VPC ID of the VPN gateway.\n"
                },
                "asn": {
                    "type": "integer",
                    "description": "The ASN number of BGP\n"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type.\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone IDs.\n"
                },
                "certificate": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayCertificate:VpnGatewayCertificate"
                },
                "connectSubnet": {
                    "type": "string",
                    "description": "The Network ID of the VPC subnet used by the VPN gateway.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The create time.\n"
                },
                "deleteEipOnTermination": {
                    "type": "boolean",
                    "description": "Whether to delete the EIP when the VPN gateway is deleted.\n"
                },
                "eip1": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayEip1:VpnGatewayEip1"
                },
                "eip2": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayEip2:VpnGatewayEip2"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID\n"
                },
                "erAttachmentId": {
                    "type": "string",
                    "description": "The ER attachment ID.\n"
                },
                "erId": {
                    "type": "string",
                    "description": "The enterprise router ID to attach with to VPN gateway.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "The flavor of the VPN gateway.\n"
                },
                "haMode": {
                    "type": "string",
                    "description": "The HA mode of the VPN gateway.\n"
                },
                "localSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The local subnets.\n"
                },
                "masterEip": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayMasterEip:VpnGatewayMasterEip"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN gateway. Only letters, digits, underscores(_) and hypens(-) are supported.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network type of the VPN gateway.\n"
                },
                "region": {
                    "type": "string"
                },
                "slaveEip": {
                    "$ref": "#/types/sbercloud:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip"
                },
                "status": {
                    "type": "string",
                    "description": "The status of VPN gateway.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time.\n"
                },
                "usedConnectionGroup": {
                    "type": "integer",
                    "description": "The number of used connection groups.\n"
                },
                "usedConnectionNumber": {
                    "type": "integer",
                    "description": "The number of used connections.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPN gateway is connected.\n"
                }
            },
            "required": [
                "accessPrivateIp1",
                "accessPrivateIp2",
                "accessSubnetId",
                "accessVpcId",
                "availabilityZones",
                "certificate",
                "connectSubnet",
                "createdAt",
                "eip1",
                "eip2",
                "enterpriseProjectId",
                "erAttachmentId",
                "erId",
                "flavor",
                "haMode",
                "localSubnets",
                "masterEip",
                "name",
                "networkType",
                "region",
                "slaveEip",
                "status",
                "updatedAt",
                "usedConnectionGroup",
                "usedConnectionNumber",
                "vpcId"
            ],
            "inputProperties": {
                "accessPrivateIp1": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessPrivateIp2": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessSubnetId": {
                    "type": "string",
                    "description": "The access subnet ID of the VPN gateway.\n",
                    "willReplaceOnChanges": true
                },
                "accessVpcId": {
                    "type": "string",
                    "description": "The access VPC ID of the VPN gateway.\n",
                    "willReplaceOnChanges": true
                },
                "asn": {
                    "type": "integer",
                    "description": "The ASN number of BGP\n",
                    "willReplaceOnChanges": true
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type.\n",
                    "willReplaceOnChanges": true
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone IDs.\n",
                    "willReplaceOnChanges": true
                },
                "certificate": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayCertificate:VpnGatewayCertificate"
                },
                "connectSubnet": {
                    "type": "string",
                    "description": "The Network ID of the VPC subnet used by the VPN gateway.\n",
                    "willReplaceOnChanges": true
                },
                "deleteEipOnTermination": {
                    "type": "boolean",
                    "description": "Whether to delete the EIP when the VPN gateway is deleted.\n"
                },
                "eip1": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayEip1:VpnGatewayEip1",
                    "willReplaceOnChanges": true
                },
                "eip2": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayEip2:VpnGatewayEip2",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID\n"
                },
                "erId": {
                    "type": "string",
                    "description": "The enterprise router ID to attach with to VPN gateway.\n",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "description": "The flavor of the VPN gateway.\n"
                },
                "haMode": {
                    "type": "string",
                    "description": "The HA mode of the VPN gateway.\n",
                    "willReplaceOnChanges": true
                },
                "localSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The local subnets.\n"
                },
                "masterEip": {
                    "$ref": "#/types/sbercloud:index/VpnGatewayMasterEip:VpnGatewayMasterEip",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN gateway. Only letters, digits, underscores(_) and hypens(-) are supported.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network type of the VPN gateway.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "slaveEip": {
                    "$ref": "#/types/sbercloud:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPN gateway is connected.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZones"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnGateway resources.\n",
                "properties": {
                    "accessPrivateIp1": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessPrivateIp2": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessSubnetId": {
                        "type": "string",
                        "description": "The access subnet ID of the VPN gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "accessVpcId": {
                        "type": "string",
                        "description": "The access VPC ID of the VPN gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "asn": {
                        "type": "integer",
                        "description": "The ASN number of BGP\n",
                        "willReplaceOnChanges": true
                    },
                    "attachmentType": {
                        "type": "string",
                        "description": "The attachment type.\n",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The availability zone IDs.\n",
                        "willReplaceOnChanges": true
                    },
                    "certificate": {
                        "$ref": "#/types/sbercloud:index/VpnGatewayCertificate:VpnGatewayCertificate"
                    },
                    "connectSubnet": {
                        "type": "string",
                        "description": "The Network ID of the VPC subnet used by the VPN gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The create time.\n"
                    },
                    "deleteEipOnTermination": {
                        "type": "boolean",
                        "description": "Whether to delete the EIP when the VPN gateway is deleted.\n"
                    },
                    "eip1": {
                        "$ref": "#/types/sbercloud:index/VpnGatewayEip1:VpnGatewayEip1",
                        "willReplaceOnChanges": true
                    },
                    "eip2": {
                        "$ref": "#/types/sbercloud:index/VpnGatewayEip2:VpnGatewayEip2",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID\n"
                    },
                    "erAttachmentId": {
                        "type": "string",
                        "description": "The ER attachment ID.\n"
                    },
                    "erId": {
                        "type": "string",
                        "description": "The enterprise router ID to attach with to VPN gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "type": "string",
                        "description": "The flavor of the VPN gateway.\n"
                    },
                    "haMode": {
                        "type": "string",
                        "description": "The HA mode of the VPN gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "localSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The local subnets.\n"
                    },
                    "masterEip": {
                        "$ref": "#/types/sbercloud:index/VpnGatewayMasterEip:VpnGatewayMasterEip",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the VPN gateway. Only letters, digits, underscores(_) and hypens(-) are supported.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "The network type of the VPN gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "slaveEip": {
                        "$ref": "#/types/sbercloud:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of VPN gateway.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update time.\n"
                    },
                    "usedConnectionGroup": {
                        "type": "integer",
                        "description": "The number of used connection groups.\n"
                    },
                    "usedConnectionNumber": {
                        "type": "integer",
                        "description": "The number of used connections.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC to which the VPN gateway is connected.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "sbercloud:index/getApigAclPolicies:getApigAclPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigAclPolicies.\n",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigAclPolicies.\n",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigAclPoliciesPolicy:getApigAclPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApi:getApigApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApi.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApi.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "authorizerId": {
                        "type": "string"
                    },
                    "backendParams": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiBackendParam:getApigApiBackendParam"
                        },
                        "type": "array"
                    },
                    "backendType": {
                        "type": "string"
                    },
                    "bodyDescription": {
                        "type": "string"
                    },
                    "cors": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "failureResponse": {
                        "type": "string"
                    },
                    "funcGraphPolicies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiFuncGraphPolicy:getApigApiFuncGraphPolicy"
                        },
                        "type": "array"
                    },
                    "funcGraphs": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiFuncGraph:getApigApiFuncGraph"
                        },
                        "type": "array"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "groupVersion": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "matching": {
                        "type": "string"
                    },
                    "mockPolicies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiMockPolicy:getApigApiMockPolicy"
                        },
                        "type": "array"
                    },
                    "mocks": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiMock:getApigApiMock"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publishId": {
                        "type": "string"
                    },
                    "publishedAt": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registeredAt": {
                        "type": "string"
                    },
                    "requestMethod": {
                        "type": "string"
                    },
                    "requestParams": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiRequestParam:getApigApiRequestParam"
                        },
                        "type": "array"
                    },
                    "requestPath": {
                        "type": "string"
                    },
                    "requestProtocol": {
                        "type": "string"
                    },
                    "responseId": {
                        "type": "string"
                    },
                    "securityAuthentication": {
                        "type": "string"
                    },
                    "simpleAuthentication": {
                        "type": "boolean"
                    },
                    "successResponse": {
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "webPolicies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiWebPolicy:getApigApiWebPolicy"
                        },
                        "type": "array"
                    },
                    "webs": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiWeb:getApigApiWeb"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "apiId",
                    "authorizerId",
                    "backendParams",
                    "backendType",
                    "bodyDescription",
                    "cors",
                    "description",
                    "envId",
                    "envName",
                    "failureResponse",
                    "funcGraphs",
                    "funcGraphPolicies",
                    "groupId",
                    "groupName",
                    "groupVersion",
                    "instanceId",
                    "matching",
                    "mocks",
                    "mockPolicies",
                    "name",
                    "publishId",
                    "publishedAt",
                    "region",
                    "registeredAt",
                    "requestMethod",
                    "requestParams",
                    "requestPath",
                    "requestProtocol",
                    "responseId",
                    "securityAuthentication",
                    "simpleAuthentication",
                    "successResponse",
                    "tags",
                    "type",
                    "updatedAt",
                    "webs",
                    "webPolicies",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApiAssociatedAclPolicies:getApigApiAssociatedAclPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedAclPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedAclPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiAssociatedAclPoliciesPolicy:getApigApiAssociatedAclPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApiAssociatedApplications:getApigApiAssociatedApplications": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedApplications.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedApplications.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "applications": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiAssociatedApplicationsApplication:getApigApiAssociatedApplicationsApplication"
                        },
                        "type": "array"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "applications",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApiAssociatedPlugins:getApigApiAssociatedPlugins": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedPlugins.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pluginId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedPlugins.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pluginId": {
                        "type": "string"
                    },
                    "plugins": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiAssociatedPluginsPlugin:getApigApiAssociatedPluginsPlugin"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "plugins",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApiAssociatedSignatures:getApigApiAssociatedSignatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedSignatures.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedSignatures.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "signatures": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiAssociatedSignaturesSignature:getApigApiAssociatedSignaturesSignature"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "region",
                    "signatures",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApiAssociatedThrottlingPolicies:getApigApiAssociatedThrottlingPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedThrottlingPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedThrottlingPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiAssociatedThrottlingPoliciesPolicy:getApigApiAssociatedThrottlingPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApiBasicConfigurations:getApigApiBasicConfigurations": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiBasicConfigurations.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "backendType": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "requestMethod": {
                        "type": "string"
                    },
                    "requestPath": {
                        "type": "string"
                    },
                    "requestProtocol": {
                        "type": "string"
                    },
                    "securityAuthentication": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcChannelName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiBasicConfigurations.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "backendType": {
                        "type": "string"
                    },
                    "configurations": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApiBasicConfigurationsConfiguration:getApigApiBasicConfigurationsConfiguration"
                        },
                        "type": "array"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "requestMethod": {
                        "type": "string"
                    },
                    "requestPath": {
                        "type": "string"
                    },
                    "requestProtocol": {
                        "type": "string"
                    },
                    "securityAuthentication": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcChannelName": {
                        "type": "string"
                    }
                },
                "required": [
                    "configurations",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigAppcodes:getApigAppcodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigAppcodes.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigAppcodes.\n",
                "properties": {
                    "appcodes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigAppcodesAppcode:getApigAppcodesAppcode"
                        },
                        "type": "array"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "appcodes",
                    "applicationId",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApplicationAcl:getApigApplicationAcl": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApplicationAcl.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApplicationAcl.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "applicationId",
                    "instanceId",
                    "region",
                    "type",
                    "values",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApplicationQuotas:getApigApplicationQuotas": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApplicationQuotas.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quotaId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApplicationQuotas.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quotaId": {
                        "type": "string"
                    },
                    "quotas": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApplicationQuotasQuota:getApigApplicationQuotasQuota"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "quotas",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigApplications:getApigApplications": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApplications.\n",
                "properties": {
                    "appKey": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApplications.\n",
                "properties": {
                    "appKey": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "applications": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigApplicationsApplication:getApigApplicationsApplication"
                        },
                        "type": "array"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "applications",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigChannels:getApigChannels": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigChannels.\n",
                "properties": {
                    "channelId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "memberGroupId": {
                        "type": "string"
                    },
                    "memberGroupName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigChannels.\n",
                "properties": {
                    "channelId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "memberGroupId": {
                        "type": "string"
                    },
                    "memberGroupName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpcChannels": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigChannelsVpcChannel:getApigChannelsVpcChannel"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "vpcChannels",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigCustomAuthorizers:getApigCustomAuthorizers": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigCustomAuthorizers.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigCustomAuthorizers.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string"
                    },
                    "authorizers": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigCustomAuthorizersAuthorizer:getApigCustomAuthorizersAuthorizer"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "authorizers",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigEndpointConnections:getApigEndpointConnections": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigEndpointConnections.\n",
                "properties": {
                    "endpointId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "packetId": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigEndpointConnections.\n",
                "properties": {
                    "connections": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigEndpointConnectionsConnection:getApigEndpointConnectionsConnection"
                        },
                        "type": "array"
                    },
                    "endpointId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "packetId": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "connections",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigEnvironmentVariables:getApigEnvironmentVariables": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigEnvironmentVariables.\n",
                "properties": {
                    "envId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigEnvironmentVariables.\n",
                "properties": {
                    "envId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "variables": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigEnvironmentVariablesVariable:getApigEnvironmentVariablesVariable"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "groupId",
                    "instanceId",
                    "region",
                    "variables",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigEnvironments:getApigEnvironments": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigEnvironments.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigEnvironments.\n",
                "properties": {
                    "environments": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigEnvironmentsEnvironment:getApigEnvironmentsEnvironment"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "environments",
                    "instanceId",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigGroups:getApigGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigGroups.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigGroups.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigGroupsGroup:getApigGroupsGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigInstanceFeatures:getApigInstanceFeatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigInstanceFeatures.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigInstanceFeatures.\n",
                "properties": {
                    "features": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigInstanceFeaturesFeature:getApigInstanceFeaturesFeature"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "features",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigInstanceSupportedFeatures:getApigInstanceSupportedFeatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigInstanceSupportedFeatures.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigInstanceSupportedFeatures.\n",
                "properties": {
                    "features": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "features",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigInstances:getApigInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApigInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigInstancesInstance:getApigInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigSignatures:getApigSignatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigSignatures.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigSignatures.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "signatures": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigSignaturesSignature:getApigSignaturesSignature"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "signatures",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getApigThrottlingPolicies:getApigThrottlingPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigThrottlingPolicies.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigThrottlingPolicies.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getApigThrottlingPoliciesPolicy:getApigThrottlingPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getAvailabilityZones:getAvailabilityZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getAvailabilityZones.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAvailabilityZones.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "required": [
                    "names",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCbhAvailabilityZones:getCbhAvailabilityZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbhAvailabilityZones.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbhAvailabilityZones.\n",
                "properties": {
                    "availabilityZones": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbhAvailabilityZonesAvailabilityZone:getCbhAvailabilityZonesAvailabilityZone"
                        },
                        "type": "array"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZones",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCbhFlavors:getCbhFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbhFlavors.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "maxConnection": {
                        "type": "integer"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbhFlavors.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbhFlavorsFlavor:getCbhFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "maxConnection": {
                        "type": "integer"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCbhInstances:getCbhInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbhInstances.\n",
                "properties": {
                    "flavorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbhInstances.\n",
                "properties": {
                    "flavorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbhInstancesInstance:getCbhInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCbrBackup:getCbrBackup": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbrBackup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCbrBackup.\n",
                "properties": {
                    "checkpointId": {
                        "type": "string"
                    },
                    "childrens": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbrBackupChildren:getCbrBackupChildren"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expiredAt": {
                        "type": "string"
                    },
                    "extendInfos": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbrBackupExtendInfo:getCbrBackupExtendInfo"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "replicationRecords": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbrBackupReplicationRecord:getCbrBackupReplicationRecord"
                        },
                        "type": "array"
                    },
                    "resourceAz": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "resourceSize": {
                        "type": "integer"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vaultId": {
                        "type": "string"
                    }
                },
                "required": [
                    "checkpointId",
                    "childrens",
                    "createdAt",
                    "description",
                    "enterpriseProjectId",
                    "expiredAt",
                    "extendInfos",
                    "id",
                    "name",
                    "parentId",
                    "replicationRecords",
                    "resourceAz",
                    "resourceId",
                    "resourceName",
                    "resourceSize",
                    "resourceType",
                    "status",
                    "type",
                    "updatedAt",
                    "vaultId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCbrPolicies:getCbrPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbrPolicies.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vaultId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbrPolicies.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbrPoliciesPolicy:getCbrPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vaultId": {
                        "type": "string"
                    }
                },
                "required": [
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCbrVaults:getCbrVaults": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbrVaults.\n",
                "properties": {
                    "autoExpandEnabled": {
                        "type": "boolean"
                    },
                    "consistentLevel": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "protectionType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbrVaults.\n",
                "properties": {
                    "autoExpandEnabled": {
                        "type": "boolean"
                    },
                    "consistentLevel": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "protectionType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vaults": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCbrVaultsVault:getCbrVaultsVault"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "vaults",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCceAddonTemplate:getCceAddonTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getCceAddonTemplate.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCceAddonTemplate.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "spec": {
                        "type": "string"
                    },
                    "stable": {
                        "type": "boolean"
                    },
                    "supportVersions": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceAddonTemplateSupportVersion:getCceAddonTemplateSupportVersion"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "description",
                    "name",
                    "region",
                    "spec",
                    "stable",
                    "supportVersions",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCceCluster:getCceCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getCceCluster.\n",
                "properties": {
                    "clusterType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCceCluster.\n",
                "properties": {
                    "authenticationMode": {
                        "type": "string"
                    },
                    "billingMode": {
                        "type": "integer"
                    },
                    "certificateClusters": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClusterCertificateCluster:getCceClusterCertificateCluster"
                        },
                        "type": "array"
                    },
                    "certificateUsers": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClusterCertificateUser:getCceClusterCertificateUser"
                        },
                        "type": "array"
                    },
                    "clusterType": {
                        "type": "string"
                    },
                    "clusterVersion": {
                        "type": "string"
                    },
                    "containerNetworkCidr": {
                        "type": "string"
                    },
                    "containerNetworkType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endpoints": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClusterEndpoint:getCceClusterEndpoint"
                        },
                        "type": "array"
                    },
                    "eniSubnetCidr": {
                        "type": "string"
                    },
                    "eniSubnetId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "highwaySubnetId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "kubeConfigRaw": {
                        "type": "string"
                    },
                    "masters": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClusterMaster:getCceClusterMaster"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "serviceNetworkCidr": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "authenticationMode",
                    "billingMode",
                    "certificateClusters",
                    "certificateUsers",
                    "clusterType",
                    "clusterVersion",
                    "containerNetworkCidr",
                    "containerNetworkType",
                    "description",
                    "endpoints",
                    "eniSubnetCidr",
                    "eniSubnetId",
                    "enterpriseProjectId",
                    "flavorId",
                    "highwaySubnetId",
                    "id",
                    "kubeConfigRaw",
                    "masters",
                    "name",
                    "region",
                    "securityGroupId",
                    "serviceNetworkCidr",
                    "status",
                    "subnetId",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCceClusterCertificate:getCceClusterCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getCceClusterCertificate.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "duration"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCceClusterCertificate.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "clusters": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClusterCertificateCluster:getCceClusterCertificateCluster"
                        },
                        "type": "array"
                    },
                    "contexts": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClusterCertificateContext:getCceClusterCertificateContext"
                        },
                        "type": "array"
                    },
                    "currentContext": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "kubeConfigRaw": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClusterCertificateUser:getCceClusterCertificateUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clusterId",
                    "clusters",
                    "contexts",
                    "currentContext",
                    "duration",
                    "kubeConfigRaw",
                    "region",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCceClusters:getCceClusters": {
            "inputs": {
                "description": "A collection of arguments for invoking getCceClusters.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCceClusters.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterType": {
                        "type": "string"
                    },
                    "clusters": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceClustersCluster:getCceClustersCluster"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusters",
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCceNode:getCceNode": {
            "inputs": {
                "description": "A collection of arguments for invoking getCceNode.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCceNode.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "billingMode": {
                        "type": "integer"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "dataVolumes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceNodeDataVolume:getCceNodeDataVolume"
                        },
                        "type": "array"
                    },
                    "ecsGroupId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfigs": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceNodeHostnameConfig:getCceNodeHostnameConfig"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rootVolumes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceNodeRootVolume:getCceNodeRootVolume"
                        },
                        "type": "array"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "availabilityZone",
                    "billingMode",
                    "clusterId",
                    "dataVolumes",
                    "ecsGroupId",
                    "enterpriseProjectId",
                    "flavorId",
                    "hostnameConfigs",
                    "keyPair",
                    "name",
                    "nodeId",
                    "os",
                    "privateIp",
                    "publicIp",
                    "region",
                    "rootVolumes",
                    "serverId",
                    "status",
                    "subnetId",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCceNodePool:getCceNodePool": {
            "inputs": {
                "description": "A collection of arguments for invoking getCceNodePool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodePoolId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCceNodePool.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "currentNodeCount": {
                        "type": "integer"
                    },
                    "dataVolumes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceNodePoolDataVolume:getCceNodePoolDataVolume"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendParam": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfigs": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceNodePoolHostnameConfig:getCceNodePoolHostnameConfig"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "initialNodeCount": {
                        "type": "integer"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maxNodeCount": {
                        "type": "integer"
                    },
                    "maxPods": {
                        "type": "integer"
                    },
                    "minNodeCount": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodePoolId": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rootVolumes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceNodePoolRootVolume:getCceNodePoolRootVolume"
                        },
                        "type": "array"
                    },
                    "scaleDownCooldownTime": {
                        "type": "integer"
                    },
                    "scallEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZone",
                    "clusterId",
                    "currentNodeCount",
                    "dataVolumes",
                    "enterpriseProjectId",
                    "extendParam",
                    "flavorId",
                    "hostnameConfigs",
                    "initialNodeCount",
                    "keyPair",
                    "labels",
                    "maxNodeCount",
                    "maxPods",
                    "minNodeCount",
                    "name",
                    "nodePoolId",
                    "os",
                    "priority",
                    "region",
                    "rootVolumes",
                    "scaleDownCooldownTime",
                    "scallEnable",
                    "status",
                    "subnetId",
                    "tags",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCceNodes:getCceNodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getCceNodes.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "ignoreDetails": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCceNodes.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ignoreDetails": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "nodes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCceNodesNode:getCceNodesNode"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "ids",
                    "nodes",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCdmFlavors:getCdmFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getCdmFlavors.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCdmFlavors.\n",
                "properties": {
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCdmFlavorsFlavor:getCdmFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getComputeFlavors:getComputeFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cpuCoreCount": {
                        "type": "integer"
                    },
                    "generation": {
                        "type": "string"
                    },
                    "memorySize": {
                        "type": "integer"
                    },
                    "performanceType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cpuCoreCount": {
                        "type": "integer"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getComputeFlavorsFlavor:getComputeFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "generation": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "memorySize": {
                        "type": "integer"
                    },
                    "performanceType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageType": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getComputeInstance:getComputeInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeInstance.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeInstance.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expiredTime": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networks": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getComputeInstanceNetwork:getComputeInstanceNetwork"
                        },
                        "type": "array"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "schedulerHints": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getComputeInstanceSchedulerHint:getComputeInstanceSchedulerHint"
                        },
                        "type": "array"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "securityGroups": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "systemDiskId": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "userData": {
                        "type": "string"
                    },
                    "volumeAttacheds": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getComputeInstanceVolumeAttached:getComputeInstanceVolumeAttached"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "availabilityZone",
                    "chargingMode",
                    "enterpriseProjectId",
                    "expiredTime",
                    "flavorId",
                    "flavorName",
                    "imageId",
                    "imageName",
                    "keyPair",
                    "name",
                    "networks",
                    "publicIp",
                    "region",
                    "schedulerHints",
                    "securityGroupIds",
                    "securityGroups",
                    "status",
                    "systemDiskId",
                    "userData",
                    "volumeAttacheds",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getComputeInstances:getComputeInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeInstances.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeInstances.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getComputeInstancesInstance:getComputeInstancesInstance"
                        },
                        "type": "array"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "instances",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getComputeServergroups:getComputeServergroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeServergroups.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeServergroups.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "servergroups": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getComputeServergroupsServergroup:getComputeServergroupsServergroup"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "servergroups",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getCssFlavors:getCssFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getCssFlavors.\n",
                "properties": {
                    "memory": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCssFlavors.\n",
                "properties": {
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getCssFlavorsFlavor:getCssFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDcsAccounts:getDcsAccounts": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsAccounts.\n",
                "properties": {
                    "accountName": {
                        "type": "string"
                    },
                    "accountRole": {
                        "type": "string"
                    },
                    "accountType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDcsAccounts.\n",
                "properties": {
                    "accountName": {
                        "type": "string"
                    },
                    "accountRole": {
                        "type": "string"
                    },
                    "accountType": {
                        "type": "string"
                    },
                    "accounts": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDcsAccountsAccount:getDcsAccountsAccount"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "accounts",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDcsAz:getDcsAz": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDcsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "name",
                    "port",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDcsFlavors:getDcsFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsFlavors.\n",
                "properties": {
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "cpuArchitecture": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDcsFlavors.\n",
                "properties": {
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "cpuArchitecture": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDcsFlavorsFlavor:getDcsFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDcsMaintainwindow:getDcsMaintainwindow": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDcsMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "required": [
                    "begin",
                    "default",
                    "end",
                    "region",
                    "seq",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDcsProduct:getDcsProduct": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsProduct.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDcsProduct.\n",
                "properties": {
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "cacheMode",
                    "capacity",
                    "engine",
                    "engineVersion",
                    "region",
                    "specCode",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDdsFlavors:getDdsFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDdsFlavors.\n",
                "properties": {
                    "engineName": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "engineName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDdsFlavors.\n",
                "properties": {
                    "engineName": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDdsFlavorsFlavor:getDdsFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "memory": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "string"
                    }
                },
                "required": [
                    "engineName",
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsAz:getDmsAz": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "ipv6Enable",
                    "name",
                    "port",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsKafkaFlavors:getDmsKafkaFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsKafkaFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsKafkaFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDmsKafkaFlavorsFlavor:getDmsKafkaFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsKafkaInstances:getDmsKafkaInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsKafkaInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fuzzyMatch": {
                        "type": "boolean"
                    },
                    "includeFailure": {
                        "type": "boolean"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsKafkaInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fuzzyMatch": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeFailure": {
                        "type": "boolean"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDmsKafkaInstancesInstance:getDmsKafkaInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsKafkaMessages:getDmsKafkaMessages": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsKafkaMessages.\n",
                "properties": {
                    "download": {
                        "type": "boolean"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyword": {
                        "type": "string"
                    },
                    "messageOffset": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "topic"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsKafkaMessages.\n",
                "properties": {
                    "download": {
                        "type": "boolean"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyword": {
                        "type": "string"
                    },
                    "messageOffset": {
                        "type": "string"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDmsKafkaMessagesMessage:getDmsKafkaMessagesMessage"
                        },
                        "type": "array"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "messages",
                    "region",
                    "topic",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsKafkaUsers:getDmsKafkaUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsKafkaUsers.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsKafkaUsers.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDmsKafkaUsersUser:getDmsKafkaUsersUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsMaintainwindow:getDmsMaintainwindow": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "required": [
                    "begin",
                    "default",
                    "end",
                    "region",
                    "seq",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsProduct:getDmsProduct": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsProduct.\n",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bandwidth": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "ioType": {
                        "type": "string",
                        "deprecationMessage": "io_type has deprecated, please use storage_spec_code"
                    },
                    "nodeNum": {
                        "type": "string"
                    },
                    "partitionNum": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storage": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vmSpecification": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "instanceType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsProduct.\n",
                "properties": {
                    "availabilityZones": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "bandwidth": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "ioType": {
                        "deprecationMessage": "io_type has deprecated, please use storage_spec_code",
                        "type": "string"
                    },
                    "nodeNum": {
                        "type": "string"
                    },
                    "partitionNum": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storage": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "storageSpecCodes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vmSpecification": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZones",
                    "bandwidth",
                    "engine",
                    "instanceType",
                    "ioType",
                    "nodeNum",
                    "partitionNum",
                    "region",
                    "storage",
                    "storageSpecCode",
                    "storageSpecCodes",
                    "version",
                    "vmSpecification",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDmsRabbitmqFlavors:getDmsRabbitmqFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRabbitmqFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRabbitmqFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDmsRabbitmqFlavorsFlavor:getDmsRabbitmqFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getDwsFlavors:getDwsFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDwsFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "datastoreType": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDwsFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "datastoreType": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getDwsFlavorsFlavor:getDwsFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getElbCertificate:getElbCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getElbCertificate.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElbCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "domain",
                    "expiration",
                    "name",
                    "region",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getElbFlavors:getElbFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getElbFlavors.\n",
                "properties": {
                    "bandwidth": {
                        "type": "integer"
                    },
                    "cps": {
                        "type": "integer"
                    },
                    "maxConnections": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "qps": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getElbFlavors.\n",
                "properties": {
                    "bandwidth": {
                        "type": "integer"
                    },
                    "cps": {
                        "type": "integer"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getElbFlavorsFlavor:getElbFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "maxConnections": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "qps": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getElbPools:getElbPools": {
            "inputs": {
                "description": "A collection of arguments for invoking getElbPools.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getElbPools.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "pools": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getElbPoolsPool:getElbPoolsPool"
                        },
                        "type": "array"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "pools",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getEnterpriseProject:getEnterpriseProject": {
            "inputs": {
                "description": "A collection of arguments for invoking getEnterpriseProject.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEnterpriseProject.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "id",
                    "name",
                    "status",
                    "updatedAt"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getEvsVolumes:getEvsVolumes": {
            "inputs": {
                "description": "A collection of arguments for invoking getEvsVolumes.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "shareable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "volumeId": {
                        "type": "string"
                    },
                    "volumeTypeId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEvsVolumes.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "shareable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "volumeId": {
                        "type": "string"
                    },
                    "volumeTypeId": {
                        "type": "string"
                    },
                    "volumes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getEvsVolumesVolume:getEvsVolumesVolume"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "volumes",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getIdentityCustomRole:getIdentityCustomRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityCustomRole.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "references": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityCustomRole.\n",
                "properties": {
                    "catalog": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "references": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "catalog",
                    "description",
                    "domainId",
                    "id",
                    "name",
                    "policy",
                    "references",
                    "type"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getIdentityGroup:getIdentityGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getIdentityGroupUser:getIdentityGroupUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "description",
                    "domainId",
                    "id",
                    "name",
                    "users"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getIdentityProjects:getIdentityProjects": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityProjects.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityProjects.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "projects": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getIdentityProjectsProject:getIdentityProjectsProject"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "projects",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getIdentityRole:getIdentityRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityRole.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityRole.\n",
                "properties": {
                    "catalog": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "catalog",
                    "description",
                    "displayName",
                    "name",
                    "policy",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getIdentityRoleV3:getIdentityRoleV3": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityRoleV3.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityRoleV3.\n",
                "properties": {
                    "catalog": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "catalog",
                    "description",
                    "displayName",
                    "name",
                    "policy",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getIdentityUsers:getIdentityUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityUsers.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityUsers.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getIdentityUsersUser:getIdentityUsersUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getImagesImage:getImagesImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getImagesImage.\n",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "mostRecent": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sizeMax": {
                        "type": "integer",
                        "deprecationMessage": "size_max is deprecated"
                    },
                    "sizeMin": {
                        "type": "integer",
                        "deprecationMessage": "size_min is deprecated"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImagesImage.\n",
                "properties": {
                    "activeAt": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "backupId": {
                        "type": "string"
                    },
                    "checksum": {
                        "type": "string"
                    },
                    "containerFormat": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dataOrigin": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskFormat": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "maxRamMb": {
                        "type": "integer"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "minDiskGb": {
                        "type": "integer"
                    },
                    "minRamMb": {
                        "type": "integer"
                    },
                    "mostRecent": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "protected": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    },
                    "sizeBytes": {
                        "type": "integer"
                    },
                    "sizeMax": {
                        "deprecationMessage": "size_max is deprecated",
                        "type": "integer"
                    },
                    "sizeMin": {
                        "deprecationMessage": "size_min is deprecated",
                        "type": "integer"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "required": [
                    "activeAt",
                    "architecture",
                    "backupId",
                    "checksum",
                    "containerFormat",
                    "createdAt",
                    "dataOrigin",
                    "description",
                    "diskFormat",
                    "enterpriseProjectId",
                    "file",
                    "imageId",
                    "imageType",
                    "maxRamMb",
                    "metadata",
                    "minDiskGb",
                    "minRamMb",
                    "name",
                    "os",
                    "osVersion",
                    "owner",
                    "protected",
                    "region",
                    "schema",
                    "sizeBytes",
                    "status",
                    "updatedAt",
                    "visibility",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getImagesImages:getImagesImages": {
            "inputs": {
                "description": "A collection of arguments for invoking getImagesImages.\n",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImagesImages.\n",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "images": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getImagesImagesImage:getImagesImagesImage"
                        },
                        "type": "array"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "required": [
                    "images",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getKmsDataKey:getKmsDataKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getKmsDataKey.\n",
                "properties": {
                    "datakeyLength": {
                        "type": "string"
                    },
                    "encryptionContext": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datakeyLength",
                    "keyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKmsDataKey.\n",
                "properties": {
                    "cipherText": {
                        "type": "string"
                    },
                    "datakeyLength": {
                        "type": "string"
                    },
                    "encryptionContext": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "plainText": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "cipherText",
                    "datakeyLength",
                    "keyId",
                    "plainText",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getKmsKey:getKmsKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getKmsKey.\n",
                "properties": {
                    "defaultKeyFlag": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "keyAlias": {
                        "type": "string"
                    },
                    "keyDescription": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "keyState": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKmsKey.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "defaultKeyFlag": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expirationTime": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "keyAlias": {
                        "type": "string"
                    },
                    "keyDescription": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "keyState": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rotationEnabled": {
                        "type": "boolean"
                    },
                    "rotationInterval": {
                        "type": "integer"
                    },
                    "rotationNumber": {
                        "type": "integer"
                    },
                    "scheduledDeletionDate": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "creationDate",
                    "defaultKeyFlag",
                    "domainId",
                    "enterpriseProjectId",
                    "expirationTime",
                    "keyAlias",
                    "keyDescription",
                    "keyId",
                    "keyState",
                    "region",
                    "rotationEnabled",
                    "rotationInterval",
                    "rotationNumber",
                    "scheduledDeletionDate",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getKpsFailedTasks:getKpsFailedTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getKpsFailedTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKpsFailedTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getKpsFailedTasksTask:getKpsFailedTasksTask"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getKpsKeypairs:getKpsKeypairs": {
            "inputs": {
                "description": "A collection of arguments for invoking getKpsKeypairs.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string"
                    },
                    "isManaged": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKpsKeypairs.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "isManaged": {
                        "type": "boolean"
                    },
                    "keypairs": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getKpsKeypairsKeypair:getKpsKeypairsKeypair"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "keypairs",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getKpsRunningTasks:getKpsRunningTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getKpsRunningTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKpsRunningTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getKpsRunningTasksTask:getKpsRunningTasksTask"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getLbCertificate:getLbCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getLbCertificate.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLbCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "domain",
                    "expiration",
                    "name",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getLbListeners:getLbListeners": {
            "inputs": {
                "description": "A collection of arguments for invoking getLbListeners.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolPort": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLbListeners.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "listeners": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getLbListenersListener:getLbListenersListener"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolPort": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "listeners",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getLbLoadbalancer:getLbLoadbalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getLbLoadbalancer.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vipAddress": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLbLoadbalancer.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "vipAddress": {
                        "type": "string"
                    },
                    "vipPortId": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "enterpriseProjectId",
                    "id",
                    "name",
                    "publicIp",
                    "region",
                    "status",
                    "tags",
                    "vipAddress",
                    "vipPortId",
                    "vipSubnetId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getLbPools:getLbPools": {
            "inputs": {
                "description": "A collection of arguments for invoking getLbPools.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLbPools.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "pools": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getLbPoolsPool:getLbPoolsPool"
                        },
                        "type": "array"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "pools",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getNatGateway:getNatGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getNatGateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "internalNetworkId": {
                        "type": "string",
                        "deprecationMessage": "use subnet_id instead"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routerId": {
                        "type": "string",
                        "deprecationMessage": "use vpc_id instead"
                    },
                    "spec": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNatGateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "internalNetworkId": {
                        "deprecationMessage": "use subnet_id instead",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routerId": {
                        "deprecationMessage": "use vpc_id instead",
                        "type": "string"
                    },
                    "spec": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "enterpriseProjectId",
                    "id",
                    "name",
                    "region",
                    "spec",
                    "status",
                    "subnetId",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getNetworkingPort:getNetworkingPort": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkingPort.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "deprecationMessage": "this field is deprecated"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceOwner": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string",
                        "deprecationMessage": "this field is deprecated"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "this field is deprecated"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkingPort.\n",
                "properties": {
                    "adminStateUp": {
                        "deprecationMessage": "this field is deprecated",
                        "type": "boolean"
                    },
                    "allAllowedIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allFixedIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allSecurityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceOwner": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "projectId": {
                        "deprecationMessage": "this field is deprecated",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tenantId": {
                        "deprecationMessage": "this field is deprecated",
                        "type": "string"
                    }
                },
                "required": [
                    "adminStateUp",
                    "allAllowedIps",
                    "allFixedIps",
                    "allSecurityGroupIds",
                    "deviceId",
                    "deviceOwner",
                    "macAddress",
                    "name",
                    "networkId",
                    "portId",
                    "region",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getNetworkingSecgroup:getNetworkingSecgroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkingSecgroup.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secgroupId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkingSecgroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getNetworkingSecgroupRule:getNetworkingSecgroupRule"
                        },
                        "type": "array"
                    },
                    "secgroupId": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "name",
                    "region",
                    "rules",
                    "updatedAt",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getNetworkingSecgroups:getNetworkingSecgroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkingSecgroups.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkingSecgroups.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getNetworkingSecgroupsSecurityGroup:getNetworkingSecgroupsSecurityGroup"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "region",
                    "securityGroups"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getObsBucketObject:getObsBucketObject": {
            "inputs": {
                "description": "A collection of arguments for invoking getObsBucketObject.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "key"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getObsBucketObject.\n",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "bucket": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "etag": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "storageClass": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "bucket",
                    "contentType",
                    "etag",
                    "key",
                    "region",
                    "size",
                    "storageClass",
                    "versionId",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getObsBuckets:getObsBuckets": {
            "inputs": {
                "description": "A collection of arguments for invoking getObsBuckets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getObsBuckets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "buckets": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getObsBucketsBucket:getObsBucketsBucket"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "buckets",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsBackups:getRdsBackups": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsBackups.\n",
                "properties": {
                    "backupId": {
                        "type": "string"
                    },
                    "backupType": {
                        "type": "string"
                    },
                    "beginTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsBackups.\n",
                "properties": {
                    "backupId": {
                        "type": "string"
                    },
                    "backupType": {
                        "type": "string"
                    },
                    "backups": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsBackupsBackup:getRdsBackupsBackup"
                        },
                        "type": "array"
                    },
                    "beginTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "backups",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsEngineVersions:getRdsEngineVersions": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsEngineVersions.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRdsEngineVersions.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsEngineVersionsVersion:getRdsEngineVersionsVersion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsFlavors:getRdsFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "groupType": {
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "dbType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsFlavorsFlavor:getRdsFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "groupType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "required": [
                    "dbType",
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsInstances:getRdsInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsInstances.\n",
                "properties": {
                    "datastoreType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRdsInstances.\n",
                "properties": {
                    "datastoreType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsInstancesInstance:getRdsInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsPgAccounts:getRdsPgAccounts": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsPgAccounts.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsPgAccounts.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsPgAccountsUser:getRdsPgAccountsUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsPgDatabases:getRdsPgDatabases": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsPgDatabases.\n",
                "properties": {
                    "characterSet": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsPgDatabases.\n",
                "properties": {
                    "characterSet": {
                        "type": "string"
                    },
                    "databases": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsPgDatabasesDatabase:getRdsPgDatabasesDatabase"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "required": [
                    "databases",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsPgPluginParameterValueRange:getRdsPgPluginParameterValueRange": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsPgPluginParameterValueRange.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsPgPluginParameterValueRange.\n",
                "properties": {
                    "defaultValues": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "restartRequired": {
                        "type": "boolean"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "defaultValues",
                    "instanceId",
                    "name",
                    "region",
                    "restartRequired",
                    "values",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsPgPluginParameterValues:getRdsPgPluginParameterValues": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsPgPluginParameterValues.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsPgPluginParameterValues.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "name",
                    "region",
                    "values",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsPgPlugins:getRdsPgPlugins": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsPgPlugins.\n",
                "properties": {
                    "created": {
                        "type": "boolean"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsPgPlugins.\n",
                "properties": {
                    "created": {
                        "type": "boolean"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "plugins": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsPgPluginsPlugin:getRdsPgPluginsPlugin"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "databaseName",
                    "instanceId",
                    "plugins",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsPgRoles:getRdsPgRoles": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsPgRoles.\n",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsPgRoles.\n",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "roles",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsPgSqlLimits:getRdsPgSqlLimits": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsPgSqlLimits.\n",
                "properties": {
                    "dbName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "isEffective": {
                        "type": "string"
                    },
                    "maxConcurrency": {
                        "type": "string"
                    },
                    "maxWaiting": {
                        "type": "string"
                    },
                    "queryId": {
                        "type": "string"
                    },
                    "queryString": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "searchPath": {
                        "type": "string"
                    },
                    "sqlLimitId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dbName",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsPgSqlLimits.\n",
                "properties": {
                    "dbName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "isEffective": {
                        "type": "string"
                    },
                    "maxConcurrency": {
                        "type": "string"
                    },
                    "maxWaiting": {
                        "type": "string"
                    },
                    "queryId": {
                        "type": "string"
                    },
                    "queryString": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "searchPath": {
                        "type": "string"
                    },
                    "sqlLimitId": {
                        "type": "string"
                    },
                    "sqlLimits": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsPgSqlLimitsSqlLimit:getRdsPgSqlLimitsSqlLimit"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "dbName",
                    "instanceId",
                    "region",
                    "sqlLimits",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getRdsStorageTypes:getRdsStorageTypes": {
            "inputs": {
                "description": "A collection of arguments for invoking getRdsStorageTypes.\n",
                "properties": {
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dbType",
                    "dbVersion"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRdsStorageTypes.\n",
                "properties": {
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageTypes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getRdsStorageTypesStorageType:getRdsStorageTypesStorageType"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "dbType",
                    "dbVersion",
                    "region",
                    "storageTypes",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getSfsFileSystem:getSfsFileSystem": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsFileSystem.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSfsFileSystem.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string"
                    },
                    "accessTo": {
                        "type": "string"
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "mountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preferred": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareAccessId": {
                        "type": "string"
                    },
                    "shareInstanceId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "accessLevel",
                    "accessTo",
                    "accessType",
                    "availabilityZone",
                    "description",
                    "exportLocation",
                    "id",
                    "isPublic",
                    "metadata",
                    "mountId",
                    "name",
                    "preferred",
                    "region",
                    "shareAccessId",
                    "shareInstanceId",
                    "shareProto",
                    "size",
                    "state",
                    "status"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getSfsFileSystemV2:getSfsFileSystemV2": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsFileSystemV2.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSfsFileSystemV2.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string"
                    },
                    "accessTo": {
                        "type": "string"
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "mountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preferred": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareAccessId": {
                        "type": "string"
                    },
                    "shareInstanceId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "accessLevel",
                    "accessTo",
                    "accessType",
                    "availabilityZone",
                    "description",
                    "exportLocation",
                    "id",
                    "isPublic",
                    "metadata",
                    "mountId",
                    "name",
                    "preferred",
                    "region",
                    "shareAccessId",
                    "shareInstanceId",
                    "shareProto",
                    "size",
                    "state",
                    "status"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getSfsTurboDataTasks:getSfsTurboDataTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboDataTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboDataTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getSfsTurboDataTasksTask:getSfsTurboDataTasksTask"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "region",
                    "shareId",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getSfsTurboDuTasks:getSfsTurboDuTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboDuTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboDuTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getSfsTurboDuTasksTask:getSfsTurboDuTasksTask"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "shareId",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getSfsTurboObsTargets:getSfsTurboObsTargets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboObsTargets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "targetId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboObsTargets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "targetId": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getSfsTurboObsTargetsTarget:getSfsTurboObsTargetsTarget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "shareId",
                    "targets",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getSfsTurboPermRules:getSfsTurboPermRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboPermRules.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboPermRules.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getSfsTurboPermRulesRule:getSfsTurboPermRulesRule"
                        },
                        "type": "array"
                    },
                    "shareId": {
                        "type": "string"
                    }
                },
                "required": [
                    "region",
                    "rules",
                    "shareId",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getSfsTurbos:getSfsTurbos": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurbos.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurbos.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "turbos": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getSfsTurbosTurbo:getSfsTurbosTurbo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "turbos",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpc:getVpc": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpc.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpc.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routes": {
                        "deprecationMessage": "use huaweicloud_vpc_route_table data source to get all routes",
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcRoute:getVpcRoute"
                        },
                        "type": "array"
                    },
                    "secondaryCidrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "cidr",
                    "description",
                    "enterpriseProjectId",
                    "id",
                    "name",
                    "region",
                    "routes",
                    "secondaryCidrs",
                    "status",
                    "tags"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcAddressGroups:getVpcAddressGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcAddressGroups.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcAddressGroups.\n",
                "properties": {
                    "addressGroups": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcAddressGroupsAddressGroup:getVpcAddressGroupsAddressGroup"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "addressGroups",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcBandwidth:getVpcBandwidth": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcBandwidth.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcBandwidth.\n",
                "properties": {
                    "bandwidthType": {
                        "type": "string"
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicips": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcBandwidthPublicip:getVpcBandwidthPublicip"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "bandwidthType",
                    "chargeMode",
                    "enterpriseProjectId",
                    "name",
                    "publicips",
                    "region",
                    "shareType",
                    "size",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcEip:getVpcEip": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcEip.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcEip.\n",
                "properties": {
                    "bandwidthId": {
                        "type": "string"
                    },
                    "bandwidthName": {
                        "type": "string"
                    },
                    "bandwidthShareType": {
                        "type": "string"
                    },
                    "bandwidthSize": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "bandwidthId",
                    "bandwidthName",
                    "bandwidthShareType",
                    "bandwidthSize",
                    "createdAt",
                    "enterpriseProjectId",
                    "ipVersion",
                    "ipv6Address",
                    "name",
                    "portId",
                    "privateIp",
                    "publicIp",
                    "region",
                    "status",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcEips:getVpcEips": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcEips.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "portIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcEips.\n",
                "properties": {
                    "eips": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcEipsEip:getVpcEipsEip"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "portIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "privateIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "publicIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "eips",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcIds:getVpcIds": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcIds.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcIds.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcPeeringConnection:getVpcPeeringConnection": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPeeringConnection.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string"
                    },
                    "peerVpcId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPeeringConnection.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string"
                    },
                    "peerVpcId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name",
                    "peerTenantId",
                    "peerVpcId",
                    "region",
                    "status",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcRoute:getVpcRoute": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcRoute.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcRoute.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "nexthop": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "destination",
                    "id",
                    "nexthop",
                    "region",
                    "tenantId",
                    "type",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcRouteTable:getVpcRouteTable": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcRouteTable.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcRouteTable.\n",
                "properties": {
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcRouteTableRoute:getVpcRouteTableRoute"
                        },
                        "type": "array"
                    },
                    "subnets": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "default",
                    "description",
                    "id",
                    "name",
                    "region",
                    "routes",
                    "subnets",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcRoutes:getVpcRoutes": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcRoutes.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcRoutes.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routes": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcRoutesRoute:getVpcRoutesRoute"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "region",
                    "routes",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcSubnet:getVpcSubnet": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcSubnet.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcSubnet.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dhcpEnable": {
                        "type": "boolean"
                    },
                    "dnsLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4SubnetId": {
                        "type": "string"
                    },
                    "ipv6Cidr": {
                        "type": "string"
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6Gateway": {
                        "type": "string"
                    },
                    "ipv6SubnetId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZone",
                    "cidr",
                    "description",
                    "dhcpEnable",
                    "dnsLists",
                    "gatewayIp",
                    "id",
                    "ipv4SubnetId",
                    "ipv6Cidr",
                    "ipv6Enable",
                    "ipv6Gateway",
                    "ipv6SubnetId",
                    "name",
                    "primaryDns",
                    "region",
                    "secondaryDns",
                    "status",
                    "subnetId",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcSubnetIds:getVpcSubnetIds": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcSubnetIds.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcSubnetIds.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "ids",
                    "region",
                    "vpcId",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcSubnets:getVpcSubnets": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcSubnets.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcSubnets.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnets": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcSubnetsSubnet:getVpcSubnetsSubnet"
                        },
                        "type": "array"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "region",
                    "subnets"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcepPublicServices:getVpcepPublicServices": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcepPublicServices.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcepPublicServices.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcepPublicServicesService:getVpcepPublicServicesService"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "services",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpcs:getVpcs": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcs.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcs.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "vpcs": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpcsVpc:getVpcsVpc"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "region",
                    "vpcs"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpnConnectionHealthChecks:getVpnConnectionHealthChecks": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnConnectionHealthChecks.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    },
                    "destinationIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnConnectionHealthChecks.\n",
                "properties": {
                    "connectionHealthChecks": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpnConnectionHealthChecksConnectionHealthCheck:getVpnConnectionHealthChecksConnectionHealthCheck"
                        },
                        "type": "array"
                    },
                    "connectionId": {
                        "type": "string"
                    },
                    "destinationIp": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "connectionHealthChecks",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpnConnections:getVpnConnections": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnConnections.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpnType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnConnections.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpnConnectionsConnection:getVpnConnectionsConnection"
                        },
                        "type": "array"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpnType": {
                        "type": "string"
                    }
                },
                "required": [
                    "connections",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpnCustomerGateways:getVpnCustomerGateways": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnCustomerGateways.\n",
                "properties": {
                    "asn": {
                        "type": "integer"
                    },
                    "customerGatewayId": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeMode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnCustomerGateways.\n",
                "properties": {
                    "asn": {
                        "type": "integer"
                    },
                    "customerGatewayId": {
                        "type": "string"
                    },
                    "customerGateways": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpnCustomerGatewaysCustomerGateway:getVpnCustomerGatewaysCustomerGateway"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeMode": {
                        "type": "string"
                    }
                },
                "required": [
                    "customerGateways",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpnGatewayAvailabilityZones:getVpnGatewayAvailabilityZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnGatewayAvailabilityZones.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "flavor"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpnGatewayAvailabilityZones.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavor",
                    "names",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "sbercloud:index/getVpnGateways:getVpnGateways": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnGateways.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnGateways.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "gateways": {
                        "items": {
                            "$ref": "#/types/sbercloud:index/getVpnGatewaysGateway:getVpnGatewaysGateway"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "gateways",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        }
    }
}